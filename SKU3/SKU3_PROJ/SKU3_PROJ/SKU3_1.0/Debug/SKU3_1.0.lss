
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000716  00800200  0001d9ae  0001da42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001d9ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000fa2  00800916  00800916  0001e158  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001e158  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001e1b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011e8  00000000  00000000  0001e1f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00048169  00000000  00000000  0001f3e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00007de8  00000000  00000000  00067549  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00016c75  00000000  00000000  0006f331  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000408c  00000000  00000000  00085fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014d77  00000000  00000000  0008a034  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00019fab  00000000  00000000  0009edab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001550  00000000  00000000  000b8d56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 90 23 	jmp	0x4720	; 0x4720 <__ctors_end>
       4:	0c 94 33 df 	jmp	0x1be66	; 0x1be66 <__vector_1>
       8:	0c 94 5e df 	jmp	0x1bebc	; 0x1bebc <__vector_2>
       c:	0c 94 89 df 	jmp	0x1bf12	; 0x1bf12 <__vector_3>
      10:	0c 94 b4 df 	jmp	0x1bf68	; 0x1bf68 <__vector_4>
      14:	0c 94 df df 	jmp	0x1bfbe	; 0x1bfbe <__vector_5>
      18:	0c 94 0a e0 	jmp	0x1c014	; 0x1c014 <__vector_6>
      1c:	0c 94 35 e0 	jmp	0x1c06a	; 0x1c06a <__vector_7>
      20:	0c 94 60 e0 	jmp	0x1c0c0	; 0x1c0c0 <__vector_8>
      24:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      28:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      2c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      30:	0c 94 3c 61 	jmp	0xc278	; 0xc278 <__vector_12>
      34:	0c 94 55 63 	jmp	0xc6aa	; 0xc6aa <__vector_13>
      38:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      3c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      40:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      44:	0c 94 92 61 	jmp	0xc324	; 0xc324 <__vector_17>
      48:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      4c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      50:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      54:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      58:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      5c:	0c 94 12 d3 	jmp	0x1a624	; 0x1a624 <__vector_23>
      60:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      64:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      68:	0c 94 25 d0 	jmp	0x1a04a	; 0x1a04a <__vector_26>
      6c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      70:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      74:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      78:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      7c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      80:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      84:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      88:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      8c:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      90:	0c 94 07 61 	jmp	0xc20e	; 0xc20e <__vector_36>
      94:	0c 94 7b d0 	jmp	0x1a0f6	; 0x1a0f6 <__vector_37>
      98:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      9c:	0c 94 30 e4 	jmp	0x1c860	; 0x1c860 <__vector_39>
      a0:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      a4:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      a8:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      ac:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      b0:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      b4:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      b8:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      bc:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      c0:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      c4:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      c8:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      cc:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      d0:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      d4:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      d8:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      dc:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      e0:	0c 94 c1 23 	jmp	0x4782	; 0x4782 <__bad_interrupt>
      e4:	9e 31       	cpi	r25, 0x1E	; 30
      e6:	9e 31       	cpi	r25, 0x1E	; 30
      e8:	d4 31       	cpi	r29, 0x14	; 20
      ea:	9e 31       	cpi	r25, 0x1E	; 30
      ec:	bc 31       	cpi	r27, 0x1C	; 28
      ee:	9e 31       	cpi	r25, 0x1E	; 30
      f0:	bc 31       	cpi	r27, 0x1C	; 28
      f2:	9e 31       	cpi	r25, 0x1E	; 30
      f4:	9e 31       	cpi	r25, 0x1E	; 30
      f6:	bc 31       	cpi	r27, 0x1C	; 28
      f8:	9e 31       	cpi	r25, 0x1E	; 30
      fa:	bc 31       	cpi	r27, 0x1C	; 28
      fc:	ab 31       	cpi	r26, 0x1B	; 27
      fe:	ad 31       	cpi	r26, 0x1D	; 29
     100:	b0 31       	cpi	r27, 0x10	; 16
     102:	b2 31       	cpi	r27, 0x12	; 18
     104:	b0 31       	cpi	r27, 0x10	; 16
     106:	b4 31       	cpi	r27, 0x14	; 20
     108:	b0 31       	cpi	r27, 0x10	; 16
     10a:	b6 31       	cpi	r27, 0x16	; 22
     10c:	b8 31       	cpi	r27, 0x18	; 24
     10e:	b0 31       	cpi	r27, 0x10	; 16
     110:	ba 31       	cpi	r27, 0x1A	; 26
     112:	92 32       	cpi	r25, 0x22	; 34
     114:	94 32       	cpi	r25, 0x24	; 36
     116:	96 32       	cpi	r25, 0x26	; 38
     118:	9d 32       	cpi	r25, 0x2D	; 45
     11a:	9f 32       	cpi	r25, 0x2F	; 47
     11c:	a1 32       	cpi	r26, 0x21	; 33
     11e:	a3 32       	cpi	r26, 0x23	; 35
     120:	a5 32       	cpi	r26, 0x25	; 37
     122:	a7 32       	cpi	r26, 0x27	; 39
     124:	a9 32       	cpi	r26, 0x29	; 41
     126:	ab 32       	cpi	r26, 0x2B	; 43
     128:	ae 32       	cpi	r26, 0x2E	; 46
     12a:	ba 32       	cpi	r27, 0x2A	; 42
     12c:	be 32       	cpi	r27, 0x2E	; 46
     12e:	c2 32       	cpi	r28, 0x22	; 34
     130:	cb 32       	cpi	r28, 0x2B	; 43
     132:	cf 32       	cpi	r28, 0x2F	; 47
     134:	d3 32       	cpi	r29, 0x23	; 35
     136:	d7 32       	cpi	r29, 0x27	; 39
     138:	db 32       	cpi	r29, 0x2B	; 43
     13a:	df 32       	cpi	r29, 0x2F	; 47
     13c:	e3 32       	cpi	r30, 0x23	; 35
     13e:	e7 32       	cpi	r30, 0x27	; 39
     140:	eb 32       	cpi	r30, 0x2B	; 43
     142:	de 33       	cpi	r29, 0x3E	; 62
     144:	bf 34       	cpi	r27, 0x4F	; 79
     146:	16 34       	cpi	r17, 0x46	; 70
     148:	06 35       	cpi	r16, 0x56	; 86
     14a:	37 34       	cpi	r19, 0x47	; 71
     14c:	28 35       	cpi	r18, 0x58	; 88
     14e:	59 34       	cpi	r21, 0x49	; 73
     150:	7b 34       	cpi	r23, 0x4B	; 75
     152:	4a 35       	cpi	r20, 0x5A	; 90
     154:	9d 34       	cpi	r25, 0x4D	; 77
     156:	6a 35       	cpi	r22, 0x5A	; 90
     158:	b6 33       	cpi	r27, 0x36	; 54
     15a:	ef 35       	cpi	r30, 0x5F	; 95
     15c:	b4 36       	cpi	r27, 0x64	; 100
     15e:	0f 36       	cpi	r16, 0x6F	; 111
     160:	f9 36       	cpi	r31, 0x69	; 105
     162:	30 36       	cpi	r19, 0x60	; 96
     164:	1a 37       	cpi	r17, 0x7A	; 122
     166:	51 36       	cpi	r21, 0x61	; 97
     168:	72 36       	cpi	r23, 0x62	; 98
     16a:	3b 37       	cpi	r19, 0x7B	; 123
     16c:	93 36       	cpi	r25, 0x63	; 99
     16e:	5b 37       	cpi	r21, 0x7B	; 123
     170:	b9 35       	cpi	r27, 0x59	; 89
     172:	a3 38       	cpi	r26, 0x83	; 131
     174:	63 39       	cpi	r22, 0x93	; 147
     176:	c3 38       	cpi	r28, 0x83	; 131
     178:	a6 39       	cpi	r26, 0x96	; 150
     17a:	e3 38       	cpi	r30, 0x83	; 131
     17c:	c6 39       	cpi	r28, 0x96	; 150
     17e:	03 39       	cpi	r16, 0x93	; 147
     180:	23 39       	cpi	r18, 0x93	; 147
     182:	e6 39       	cpi	r30, 0x96	; 150
     184:	43 39       	cpi	r20, 0x93	; 147
     186:	05 3a       	cpi	r16, 0xA5	; 165
     188:	7b 38       	cpi	r23, 0x8B	; 139
     18a:	8b 3a       	cpi	r24, 0xAB	; 171
     18c:	45 3b       	cpi	r20, 0xB5	; 181
     18e:	aa 3a       	cpi	r26, 0xAA	; 170
     190:	86 3b       	cpi	r24, 0xB6	; 182
     192:	c9 3a       	cpi	r28, 0xA9	; 169
     194:	a5 3b       	cpi	r26, 0xB5	; 181
     196:	e8 3a       	cpi	r30, 0xA8	; 168
     198:	07 3b       	cpi	r16, 0xB7	; 183
     19a:	c4 3b       	cpi	r28, 0xB4	; 180
     19c:	26 3b       	cpi	r18, 0xB6	; 182
     19e:	ea 3b       	cpi	r30, 0xBA	; 186
     1a0:	6e 3a       	cpi	r22, 0xAE	; 174
     1a2:	68 45       	sbci	r22, 0x58	; 88
     1a4:	1b 45       	sbci	r17, 0x5B	; 91
     1a6:	35 45       	sbci	r19, 0x55	; 85
     1a8:	65 45       	sbci	r22, 0x55	; 85
     1aa:	68 45       	sbci	r22, 0x58	; 88
     1ac:	65 45       	sbci	r22, 0x55	; 85
     1ae:	68 45       	sbci	r22, 0x58	; 88
     1b0:	68 45       	sbci	r22, 0x58	; 88
     1b2:	65 45       	sbci	r22, 0x55	; 85
     1b4:	68 45       	sbci	r22, 0x58	; 88
     1b6:	65 45       	sbci	r22, 0x55	; 85
     1b8:	68 45       	sbci	r22, 0x58	; 88
     1ba:	82 6a       	ori	r24, 0xA2	; 162
     1bc:	88 6a       	ori	r24, 0xA8	; 168
     1be:	91 6a       	ori	r25, 0xA1	; 161
     1c0:	9e 6a       	ori	r25, 0xAE	; 174
     1c2:	ad 6a       	ori	r26, 0xAD	; 173
     1c4:	ba 6a       	ori	r27, 0xAA	; 170
     1c6:	c7 6a       	ori	r28, 0xA7	; 167
     1c8:	d5 6a       	ori	r29, 0xA5	; 165
     1ca:	dc 6a       	ori	r29, 0xAC	; 172
     1cc:	e7 6a       	ori	r30, 0xA7	; 167
     1ce:	0c 91       	ld	r16, X
     1d0:	02 91       	ld	r16, -Z
     1d2:	20 91 13 91 	lds	r18, 0x9113	; 0x809113 <__bss_end+0x785b>
     1d6:	10 91 d8 90 	lds	r17, 0x90D8	; 0x8090d8 <__bss_end+0x7820>
     1da:	fa 90       	ld	r15, -Y
     1dc:	cd 90       	ld	r12, X+
     1de:	7d 9a       	sbi	0x0f, 5	; 15
     1e0:	f4 9b       	sbis	0x1e, 4	; 30
     1e2:	11 9c       	mul	r1, r1
     1e4:	25 9c       	mul	r2, r5
     1e6:	52 9c       	mul	r5, r2
     1e8:	62 9c       	mul	r6, r2
     1ea:	73 9c       	mul	r7, r3
     1ec:	83 9c       	mul	r8, r3
     1ee:	4f d4       	rcall	.+2206   	; 0xa8e <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x1d>
     1f0:	52 d4       	rcall	.+2212   	; 0xa96 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x25>
     1f2:	41 d4       	rcall	.+2178   	; 0xa76 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x5>
     1f4:	45 d4       	rcall	.+2186   	; 0xa80 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0xf>
     1f6:	4b d4       	rcall	.+2198   	; 0xa8e <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x1d>
     1f8:	89 d4       	rcall	.+2322   	; 0xb0c <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5+0x8>
     1fa:	56 d4       	rcall	.+2220   	; 0xaa8 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x37>
     1fc:	5a d4       	rcall	.+2228   	; 0xab2 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x41>
     1fe:	60 d4       	rcall	.+2240   	; 0xac0 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0xb>
     200:	64 d4       	rcall	.+2248   	; 0xaca <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x15>
     202:	68 d4       	rcall	.+2256   	; 0xad4 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x1f>
     204:	6e d4       	rcall	.+2268   	; 0xae2 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x2d>
     206:	72 d4       	rcall	.+2276   	; 0xaec <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x37>
     208:	76 d4       	rcall	.+2284   	; 0xaf6 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x41>
     20a:	89 d4       	rcall	.+2322   	; 0xb1e <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5+0x1a>
     20c:	7c d4       	rcall	.+2296   	; 0xb06 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5+0x2>
     20e:	80 d4       	rcall	.+2304   	; 0xb10 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5+0xc>
     210:	84 d4       	rcall	.+2312   	; 0xb1a <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5+0x16>
     212:	ae dd       	rcall	.-1188   	; 0xfffffd70 <__eeprom_end+0xff7efd70>
     214:	9b dd       	rcall	.-1226   	; 0xfffffd4c <__eeprom_end+0xff7efd4c>
     216:	9d dd       	rcall	.-1222   	; 0xfffffd52 <__eeprom_end+0xff7efd52>
     218:	9f dd       	rcall	.-1218   	; 0xfffffd58 <__eeprom_end+0xff7efd58>
     21a:	a1 dd       	rcall	.-1214   	; 0xfffffd5e <__eeprom_end+0xff7efd5e>
     21c:	a3 dd       	rcall	.-1210   	; 0xfffffd64 <__eeprom_end+0xff7efd64>
     21e:	a5 dd       	rcall	.-1206   	; 0xfffffd6a <__eeprom_end+0xff7efd6a>
     220:	a7 dd       	rcall	.-1202   	; 0xfffffd70 <__eeprom_end+0xff7efd70>
     222:	0d df       	rcall	.-486    	; 0x3e <__SP_H__>
     224:	d7 de       	rcall	.-594    	; 0xffffffd4 <__eeprom_end+0xff7effd4>
     226:	df de       	rcall	.-578    	; 0xffffffe6 <__eeprom_end+0xff7effe6>
     228:	eb de       	rcall	.-554    	; 0x0 <__vectors>
     22a:	f8 de       	rcall	.-528    	; 0x1c <__FUSE_REGION_LENGTH__+0x19>
     22c:	19 df       	rcall	.-462    	; 0x60 <__SREG__+0x21>
     22e:	26 df       	rcall	.-436    	; 0x7c <__SREG__+0x3d>
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_3>:
     c2a:	43 75 72 72 65 6e 74 20 64 61 74 65 20 3a 20 00     Current date : .

00000c3a <_ZZ18Next_Day_CalculatehhE3__c_2>:
     c3a:	52 65 71 75 69 72 65 64 20 64 61 74 65 20 3a 20     Required date : 
	...

00000c4b <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c4b:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c5b:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c6b:	3a 20 00                                            : .

00000c6e <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c6e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c7f <_ZZ18Next_Day_CalculatehhE3__c>:
     c7f:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c90 <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c90:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     ca0:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     cb0:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cc0:	23 23 23 23 23 23 23 00                             #######.

00000cc8 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     cc8:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cd8:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     ce8:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cf8:	23 23 23 23 23 23 23 23 23 00                       #########.

00000d02 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     d02:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     d12:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d22:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d32:	23 23 23 23 23 23 23 00                             #######.

00000d3a <_ZZ18Edited_In_SchedulevE3__c_21>:
     d3a:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d4a:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d5a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d6a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d7a:	2f 2f 2f 2f 00                                      ////.

00000d7f <_ZZ18Edited_In_SchedulevE3__c_20>:
     d7f:	6d 79 20 31 34 00                                   my 14.

00000d85 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d85:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d95:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     da5:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     db5:	3a 00                                               :.

00000db7 <_ZZ18Edited_In_SchedulevE3__c_18>:
     db7:	6d 79 20 39 00                                      my 9.

00000dbc <_ZZ18Edited_In_SchedulevE3__c_17>:
     dbc:	6d 79 20 38 00                                      my 8.

00000dc1 <_ZZ18Edited_In_SchedulevE3__c_16>:
     dc1:	6d 79 20 37 00                                      my 7.

00000dc6 <_ZZ18Edited_In_SchedulevE3__c_15>:
     dc6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dd6:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     de6:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     df6:	3a 00                                               :.

00000df8 <_ZZ18Edited_In_SchedulevE3__c_14>:
     df8:	6d 79 20 36 2e 32 00                                my 6.2.

00000dff <_ZZ18Edited_In_SchedulevE3__c_13>:
     dff:	6d 79 20 36 2e 31 00                                my 6.1.

00000e06 <_ZZ18Edited_In_SchedulevE3__c_12>:
     e06:	6d 79 20 36 00                                      my 6.

00000e0b <_ZZ18Edited_In_SchedulevE3__c_11>:
     e0b:	6d 79 20 35 00                                      my 5.

00000e10 <_ZZ18Edited_In_SchedulevE3__c_10>:
     e10:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     e20:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e30:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e40:	3a 00                                               :.

00000e42 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e42:	6d 79 20 34 00                                      my 4.

00000e47 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e47:	6d 79 20 33 00                                      my 3.

00000e4c <_ZZ18Edited_In_SchedulevE3__c_7>:
     e4c:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e5c:	20 3a 00                                             :.

00000e5f <_ZZ18Edited_In_SchedulevE3__c_6>:
     e5f:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e6f:	20 3a 00                                             :.

00000e72 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e72:	6d 79 20 32 00                                      my 2.

00000e77 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e77:	6d 79 20 31 00                                      my 1.

00000e7c <_ZZ18Edited_In_SchedulevE3__c_3>:
     e7c:	6d 79 20 30 00                                      my 0.

00000e81 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e81:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e91:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     ea1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     eb1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ec1:	2f 2f 2f 2f 00                                      ////.

00000ec6 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ec6:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     ed6:	74 68 20 00                                         th .

00000eda <_ZZ18Edited_In_SchedulevE3__c_0>:
     eda:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     eea:	65 20 00                                            e .

00000eed <_ZZ18Edited_In_SchedulevE3__c>:
     eed:	6d 79 20 31 34 00                                   my 14.

00000ef3 <_ZZ17Blower_MonitoringhE3__c_0>:
     ef3:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     f03:	3a 20 00                                            : .

00000f06 <_ZZ17Blower_MonitoringhE3__c>:
     f06:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     f16:	3a 20 00                                            : .

00000f19 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     f19:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f29:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f38 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f38:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f49 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f49:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f59:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f68 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f68:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f78:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f88:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f98:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000fa3 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     fa3:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fb3:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fc3:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fd3:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fde <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fde:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fee:	69 6c 00                                            il.

00000ff1 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     ff1:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    1001:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    1011:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

0000101c <_ZZ17Doser_Pump_On_OffhE3__c_5>:
    101c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    102c:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

0000103a <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    103a:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    104a:	74 61 20 3a 20 00                                   ta : .

00001050 <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    1050:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1060:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1070:	65 20 31 00                                         e 1.

00001074 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1074:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1084:	6d 62 65 72 20 00                                   mber .

0000108a <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    108a:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    109a:	6f 2e 20 00                                         o. .

0000109e <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    109e:	20 00                                                .

000010a0 <_ZZ17Doser_Pump_On_OffhE3__c>:
    10a0:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    10b0:	20 6c 69 73 74 20 3a 20 00                           list : .

000010b9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    10b9:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c9:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010d5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10d5:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e5:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010f4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10f4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    1104:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

00001113 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    1113:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1123:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001132 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1132:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1142:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1152:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1162:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000116d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    116d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    117d:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    118d:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    119d:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000011a8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    11a8:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    11b8:	69 6c 00                                            il.

000011bb <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    11bb:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11cb:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11db:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11e6:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11f6:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001204 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    1204:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1214:	74 61 20 3a 20 00                                   ta : .

0000121a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    121a:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    122a:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    123a:	65 20 31 00                                         e 1.

0000123e <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    123e:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    124e:	6d 62 65 72 20 00                                   mber .

00001254 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1254:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1264:	6f 2e 20 00                                         o. .

00001268 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1268:	20 00                                                .

0000126a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    126a:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    127a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001288 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1288:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1298:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

000012a2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    12a2:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    12b2:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12c2:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012cd <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12cd:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012ed <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12ed:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12fd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

0000130b <_ZZ20Schedules_MonitoringvE3__c_37>:
    130b:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

00001319 <_ZZ20Schedules_MonitoringvE3__c_36>:
    1319:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1329:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001332 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1332:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000133e <_ZZ20Schedules_MonitoringvE3__c_34>:
    133e:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

0000134a <_ZZ20Schedules_MonitoringvE3__c_33>:
    134a:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001356 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1356:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001362 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1362:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000136e <_ZZ20Schedules_MonitoringvE3__c_30>:
    136e:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

0000137a <_ZZ20Schedules_MonitoringvE3__c_29>:
    137a:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001386 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1386:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001392 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1392:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000139e <_ZZ20Schedules_MonitoringvE3__c_26>:
    139e:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

000013aa <_ZZ20Schedules_MonitoringvE3__c_25>:
    13aa:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

000013b6 <_ZZ20Schedules_MonitoringvE3__c_24>:
    13b6:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013c2 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13c2:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ce <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ce:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013da <_ZZ20Schedules_MonitoringvE3__c_21>:
    13da:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013e6 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13e6:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013f2 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13f2:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013fe <_ZZ20Schedules_MonitoringvE3__c_18>:
    13fe:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

0000140b <_ZZ20Schedules_MonitoringvE3__c_17>:
    140b:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    141b:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    142b:	2e 2e 2e 2e 2e 2e 00                                .......

00001432 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1432:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1442:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1452:	2e 2e 2e 2e 2e 2e 00                                .......

00001459 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1459:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001469 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1469:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001477 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1477:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001485 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1485:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1495:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    14a5:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    14b5:	3a 00                                               :.

000014b7 <_ZZ20Schedules_MonitoringvE3__c_11>:
    14b7:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014c3 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14c3:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014cf <_ZZ20Schedules_MonitoringvE3__c_9>:
    14cf:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014da <_ZZ20Schedules_MonitoringvE3__c_8>:
    14da:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14fa:	2e 2e 2e 2e 2e 00                                   ......

00001500 <_ZZ20Schedules_MonitoringvE3__c_7>:
    1500:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    1510:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1520:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001529 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1529:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1539:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001547 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1547:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1557:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001565 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1565:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1575:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001582 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1582:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1592:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15a2:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    15b2:	3a 00                                               :.

000015b4 <_ZZ20Schedules_MonitoringvE3__c_2>:
    15b4:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000015c0 <_ZZ20Schedules_MonitoringvE3__c_1>:
    15c0:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15d0:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15e0:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15f0:	2f 2f 2f 20 3a 00                                   /// :.

000015f6 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15f6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1606:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1616:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1626:	2f 20 3a 00                                         / :.

0000162a <_ZZ20Schedules_MonitoringvE3__c>:
    162a:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    163a:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    164a:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    165a:	20 3a 00                                             :.

0000165d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    165d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000166d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    166d:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000167d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    167d:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000168c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    168c:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000169b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    169b:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016aa <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    16aa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    16b7:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16c6:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016d3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16d3:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16e2:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016f1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16f1:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

00001700 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    1700:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

0000170f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    170f:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

0000171e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    171e:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000172d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    172d:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000173c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    173c:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000174b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    174b:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000175a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    175a:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001769 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1769:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001778 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1778:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001787 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1787:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001796 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1796:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    17a5:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    17b4:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17c3:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017d2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17d2:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17e1:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017f0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17f0:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017ff <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17ff:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

0000180e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    180e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    181e:	74 20 31 3a 20 00                                   t 1: .

00001824 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1824:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001832 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1832:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001840 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    1840:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000184d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    184d:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000185a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    185a:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001867 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1867:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001874 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1874:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001881 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1881:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000188e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    188e:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000189b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    189b:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000018a8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    18a8:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

000018b5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    18b5:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018c2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18c2:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18cf:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018dc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18dc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18e9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018f6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18f6:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001903 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    1903:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001910 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    1910:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000191d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    191d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000192a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    192a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001937 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1937:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001944 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1944:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001951 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1951:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000195e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    195e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000196b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    196b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001978 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1978:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001985 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1985:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001992 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1992:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000199f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    199f:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    19af:	74 20 3a 20 00                                      t : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    19b4:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19c4:	65 64 00                                            ed.

000019c7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19c7:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19d5:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19e1:	79 65 61 72 20 3a 20 00                             year : .

000019e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19e9:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019f2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19f2:	64 61 74 65 20 3a 20 00                             date : .

000019fa <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19fa:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    1a0a:	3a 20 00                                            : .

00001a0d <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    1a0d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001a1b <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    1a1b:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a29 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a29:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a36 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a36:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a43 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a43:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a50 <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a50:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a5d <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a5d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a6a <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a6a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a77 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a77:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a84 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a84:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a91 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a91:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a9e <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a9e:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001aab <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1aab:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001ab8 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1ab8:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001ac5 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1ac5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ad2 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ad2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001adf <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1adf:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aec <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1aec:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af9 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1af9:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b06 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1b06:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b13 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1b13:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b20 <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1b20:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b2d <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b2d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b3a <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b3a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b47 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b47:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b54 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b54:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b61 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b61:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b6e <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b6e:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b7b <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b7b:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b88 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b88:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b96 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b96:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001ba4 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1ba4:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bb1 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1bb1:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bbe <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1bbe:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bcb <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1bcb:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd8 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bd8:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001be5 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1be5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bf2 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bf2:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bff <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bff:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001c0c <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1c0c:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001c19 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1c19:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c26 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c26:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c33 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c33:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c40 <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c4d <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c5a <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c5a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c67 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c67:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c74 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c74:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c81 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c81:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c8e <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c8e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c9b <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c9b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca8 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1ca8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cb5 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1cb5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cc2 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1cc2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ccf <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1ccf:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cdc <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cdc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ce9 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1ce9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cf6:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001d03 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1d03:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1d13:	20 3a 20 00                                          : .

00001d17 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1d17:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d27:	3a 20 00                                            : .

00001d2a <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d2a:	79 65 61 72 20 3a 20 00                             year : .

00001d32 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d32:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d3b <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d3b:	64 61 74 65 20 3a 20 00                             date : .

00001d43 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d43:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d53:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d5d <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d5d:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d6d:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d76 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d76:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d83 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d83:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d93:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1da3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1db3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1dc3:	2f 2f 2f 00                                         ///.

00001dc7 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1dc7:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1dd7:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001de3 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1de3:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1df3:	56 45 20 00                                         VE .

00001df7 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1df7:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e07:	4f 57 20 31 20 00                                   OW 1 .

00001e0d <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1e0d:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e1d:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e2d:	30 30 00                                            00.

00001e30 <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e30:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e40:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e50:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e60:	75 6d 70 00                                         ump.

00001e64 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e64:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e74:	4f 57 00                                            OW.

00001e77 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e77:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e87:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e97:	31 31 31 31 00                                      1111.

00001e9c <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e9c:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1eac:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1ebc:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ec8 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ec8:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1ed8:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ee6 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ee6:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ef5 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ef5:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1f05:	69 6e 65 20 3a 20 00                                ine : .

00001f0c <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1f0c:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001f1d <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1f1d:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f2d:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f35 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f35:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f46 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f46:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f56:	74 00                                               t.

00001f58 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f58:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f68:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f73 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f73:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f7f <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f7f:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f8f:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f97 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f97:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1fa7:	45 44 00                                            ED.

00001faa <_ZZ16Gsm_Gprs_NetworkvE3__c_10>:
    1faa:	41 54 45 30 00                                      ATE0.

00001faf <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1faf:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1fbb:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1fcb:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fdc <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1fdc:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fec:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001ffc <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1ffc:	41 54 45 30 00                                      ATE0.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    2001:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000200d <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    200d:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    201d:	47 50 52 53 00                                      GPRS.

00002022 <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    2022:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2032:	6f 72 20 4e 61 6d 65 00                             or Name.

0000203a <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    203a:	6a 69 6f 00                                         jio.

0000203e <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    203e:	41 69 72 74 65 6c 00                                Airtel.

00002045 <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    2045:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

0000204e <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    204e:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    205e:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

0000206e <_ZZ14Get_Local_TimevE3__c_6>:
    206e:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002079 <_ZZ14Get_Local_TimevE3__c_5>:
    2079:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

00002085 <_ZZ14Get_Local_TimevE3__c_4>:
    2085:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002090 <_ZZ14Get_Local_TimevE3__c_3>:
    2090:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002099 <_ZZ14Get_Local_TimevE3__c_2>:
    2099:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

000020a1 <_ZZ14Get_Local_TimevE3__c_1>:
    20a1:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    20b1:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

000020be <_ZZ14Get_Local_TimevE3__c_0>:
    20be:	41 54 2b 43 54 5a 52 3d 31 00                       AT+CTZR=1.

000020c8 <_ZZ14Get_Local_TimevE3__c>:
    20c8:	41 54 2b 43 54 5a 55 3d 31 00                       AT+CTZU=1.

000020d2 <_ZZ16Display_Update_1vE3__c_25>:
    20d2:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020df <_ZZ16Display_Update_1vE3__c_24>:
    20df:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020ec <_ZZ16Display_Update_1vE3__c_23>:
    20ec:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20fc:	20 20 20 20 00                                          .

00002101 <_ZZ16Display_Update_1vE3__c_22>:
    2101:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    2111:	49 4e 47 20 00                                      ING .

00002116 <_ZZ16Display_Update_1vE3__c_21>:
    2116:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2126:	20 20 20 20 00                                          .

0000212b <_ZZ16Display_Update_1vE3__c_20>:
    212b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    213b:	20 20 20 20 00                                          .

00002140 <_ZZ16Display_Update_1vE3__c_19>:
    2140:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2150:	45 54 21 20 00                                      ET! .

00002155 <_ZZ16Display_Update_1vE3__c_18>:
    2155:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2165:	20 20 20 20 00                                          .

0000216a <_ZZ16Display_Update_1vE3__c_17>:
    216a:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    217a:	20 20 20 20 00                                          .

0000217f <_ZZ16Display_Update_1vE3__c_16>:
    217f:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    218f:	45 20 20 20 00                                      E   .

00002194 <_ZZ16Display_Update_1vE3__c_15>:
    2194:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_14>:
    21a9:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    21b9:	47 00                                               G.

000021bb <_ZZ16Display_Update_1vE3__c_13>:
    21bb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21cb:	20 20 20 20 00                                          .

000021d0 <_ZZ16Display_Update_1vE3__c_12>:
    21d0:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21e0:	20 20 20 20 00                                          .

000021e5 <_ZZ16Display_Update_1vE3__c_11>:
    21e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21f5:	20 20 20 20 00                                          .

000021fa <_ZZ16Display_Update_1vE3__c_10>:
    21fa:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    220a:	56 45 52 20 00                                      VER .

0000220f <_ZZ16Display_Update_1vE3__c_9>:
    220f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    221f:	20 20 20 20 00                                          .

00002224 <_ZZ16Display_Update_1vE3__c_8>:
    2224:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    2234:	45 44 20 20 00                                      ED  .

00002239 <_ZZ16Display_Update_1vE3__c_7>:
    2239:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2249:	20 20 20 20 00                                          .

0000224e <_ZZ16Display_Update_1vE3__c_6>:
    224e:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    225e:	54 2e 2e 2e 00                                      T....

00002263 <_ZZ16Display_Update_1vE3__c_5>:
    2263:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2273:	20 20 20 20 00                                          .

00002278 <_ZZ16Display_Update_1vE3__c_4>:
    2278:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    2288:	52 56 45 52 00                                      RVER.

0000228d <_ZZ16Display_Update_1vE3__c_3>:
    228d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    229d:	20 20 20 20 00                                          .

000022a2 <_ZZ16Display_Update_1vE3__c_2>:
    22a2:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    22b2:	20 20 20 20 00                                          .

000022b7 <_ZZ16Display_Update_1vE3__c_1>:
    22b7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    22c7:	20 20 20 20 00                                          .

000022cc <_ZZ16Display_Update_1vE3__c_0>:
    22cc:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22dc:	52 56 45 52 00                                      RVER.

000022e1 <_ZZ16Display_Update_1vE3__c>:
    22e1:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22f1:	20 20 20 20 00                                          .

000022f6 <_ZZ21Subscribed_data_checkvE3__c_0>:
    22f6:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

00002302 <_ZZ21Subscribed_data_checkvE3__c>:
    2302:	65 6e 74 65 72 20 31 00                             enter 1.

0000230a <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    230a:	63 68 65 63 6b 20 6e 6f 74 20 43 6f 6e 6e 65 63     check not Connec
    231a:	74 65 64 20 74 6f 20 6d 71 74 74 00                 ted to mqtt.

00002326 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2326:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2336:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000233e <_ZZ17Is_MQTT_ConnectedvE3__c>:
    233e:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000234f <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    234f:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000235d <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    235d:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000236b <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    236b:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    237b:	32 30 00                                            20.

0000237e <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    237e:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

0000238a <_ZZ12MQTT_PublishPhS_E3__c>:
    238a:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002394 <_ZZ12Gprs_ConnectPcE3__c>:
    2394:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    23a4:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    23b4:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

000023bd <_ZZ17Get_Operator_NamePcE3__c>:
    23bd:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023c6 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23c6:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023d0 <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23d0:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023db <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23db:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023e5 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23e5:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023f0 <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23f0:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023f9 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23f9:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002403 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    2403:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

0000240c <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    240c:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002416 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    2416:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002421 <_ZZ8Gsm_InitvE3__c_1>:
    2421:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000242b <_ZZ8Gsm_InitvE3__c_0>:
    242b:	41 54 2b 49 50 52 45 58 3d 39 36 30 30 00           AT+IPREX=9600.

00002439 <_ZZ8Gsm_InitvE3__c>:
    2439:	41 54 00                                            AT.

0000243c <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    243c:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000244b <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    244b:	41 54 2b 43 53 51 00                                AT+CSQ.

00002452 <_ZZ14Lora_Data_SendhE3__c_1>:
    2452:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000245c <_ZZ14Lora_Data_SendhE3__c_0>:
    245c:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

00002469 <_ZZ14Lora_Data_SendhE3__c>:
    2469:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    2479:	65 6e 20 3a 20 00                                   en : .

0000247f <_ZZ19Initialise_HardwarevE3__c_6>:
    247f:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    248f:	44 00                                               D.

00002491 <_ZZ19Initialise_HardwarevE3__c_5>:
    2491:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

0000249f <_ZZ19Initialise_HardwarevE3__c_4>:
    249f:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    24af:	45 44 00                                            ED.

000024b2 <_ZZ19Initialise_HardwarevE3__c_3>:
    24b2:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

000024c1 <_ZZ19Initialise_HardwarevE3__c_2>:
    24c1:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

000024ce <_ZZ19Initialise_HardwarevE3__c_1>:
    24ce:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24de:	20 20 20 20 00                                          .

000024e3 <_ZZ19Initialise_HardwarevE3__c_0>:
    24e3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24f3:	20 20 20 20 00                                          .

000024f8 <_ZZ19Initialise_HardwarevE3__c>:
    24f8:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    2508:	32 2e 30 20 00                                      2.0 .

0000250d <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    250d:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002519 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    2519:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2529:	72 2e 3a 20 00                                      r.: .

0000252e <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    252e:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    253e:	65 70 72 6f 6d 20 00                                eprom .

00002545 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2545:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

00002553 <_ZZ18Local_Time_SettingvE3__c_2>:
    2553:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

00002560 <_ZZ18Local_Time_SettingvE3__c_1>:
    2560:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002569 <_ZZ18Local_Time_SettingvE3__c_0>:
    2569:	41 54 45 30 00                                      ATE0.

0000256e <_ZZ18Local_Time_SettingvE3__c>:
    256e:	41 54 00                                            AT.

00002571 <_ZZ9Check_SimcE3__c_1>:
    2571:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

0000257a <_ZZ9Check_SimcE3__c_0>:
    257a:	41 54 45 30 00                                      ATE0.

0000257f <_ZZ9Check_SimcE3__c>:
    257f:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000258b <_ZZ11Check_PhasevE3__c_3>:
    258b:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 32     phase is there 2
    259b:	20 00                                                .

0000259d <_ZZ11Check_PhasevE3__c_2>:
    259d:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 31     phase is there 1
    25ad:	20 00                                                .

000025af <_ZZ11Check_PhasevE3__c_1>:
    25af:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25bf:	72 65 20 31 20 00                                   re 1 .

000025c5 <_ZZ11Check_PhasevE3__c_0>:
    25c5:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 00     phase is there .

000025d5 <_ZZ11Check_PhasevE3__c>:
    25d5:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25e5:	72 65 20 00                                         re .

000025e9 <_ZZ14Faults_HandlervE3__c_5>:
    25e9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

000025f9 <_ZZ14Faults_HandlervE3__c_4>:
    25f9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

0000260a <_ZZ14Faults_HandlervE3__c_3>:
    260a:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

00002617 <_ZZ14Faults_HandlervE3__c_2>:
    2617:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

00002625 <_ZZ14Faults_HandlervE3__c_1>:
    2625:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

00002635 <_ZZ14Faults_HandlervE3__c_0>:
    2635:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

00002646 <_ZZ14Faults_HandlervE3__c>:
    2646:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    2656:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    2666:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

0000266e <_ZZ19Calibration_Of_PumpvE3__c>:
    266e:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    267e:	20 69 73 20 64 6f 6e 65 00                           is done.

00002687 <_ZZ11Read_EEPROMvE3__c_2>:
    2687:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002693 <_ZZ11Read_EEPROMvE3__c_1>:
    2693:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    26a3:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

000026af <_ZZ11Read_EEPROMvE3__c_0>:
    26af:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    26bf:	69 6d 65 72 20 3a 20 00                             imer : .

000026c7 <_ZZ11Read_EEPROMvE3__c>:
    26c7:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    26d7:	72 20 3a 20 00                                      r : .

000026dc <_ZZ20Param_InitializationvE3__c_3>:
    26dc:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    26ec:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

000026f7 <_ZZ20Param_InitializationvE3__c_2>:
    26f7:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    2707:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    2717:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    2727:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    2737:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    2747:	45 56 49 43 45 00                                   EVICE.

0000274d <_ZZ20Param_InitializationvE3__c_1>:
    274d:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    275d:	6d 20 43 61 72 64 00                                m Card.

00002764 <_ZZ20Param_InitializationvE3__c_0>:
    2764:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    2774:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002785 <_ZZ20Param_InitializationvE3__c>:
    2785:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2795:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    27a5:	65 76 65 72 00                                      ever.

000027aa <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    27aa:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    27ba:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    27ca:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

000027d6 <_ZZ14Ping_to_ServervE3__c_10>:
    27d6:	41 54 45 30 00                                      ATE0.

000027db <_ZZ14Ping_to_ServervE3__c_9>:
    27db:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

000027e7 <_ZZ14Ping_to_ServervE3__c_8>:
    27e7:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    27f7:	74 68 65 20 73 65 72 76 65 72 00                    the server.

00002802 <_ZZ14Ping_to_ServervE3__c_7>:
    2802:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    2812:	62 73 63 72 69 62 65 64 00                          bscribed.

0000281b <_ZZ14Ping_to_ServervE3__c_6>:
    281b:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    282b:	69 62 65 64 00                                      ibed.

00002830 <_ZZ14Ping_to_ServervE3__c_5>:
    2830:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    2840:	76 65 72 00                                         ver.

00002844 <_ZZ14Ping_to_ServervE3__c_4>:
    2844:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    2854:	68 65 20 73 65 72 76 65 72 00                       he server.

0000285e <_ZZ14Ping_to_ServervE3__c_3>:
    285e:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    286e:	43 4c 4f 53 45 20 00                                CLOSE .

00002875 <_ZZ14Ping_to_ServervE3__c_2>:
    2875:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002881 <_ZZ14Ping_to_ServervE3__c_1>:
    2881:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

0000288f <_ZZ14Ping_to_ServervE3__c_0>:
    288f:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

000028a0 <_ZZ14Ping_to_ServervE3__c>:
    28a0:	41 54 45 30 00                                      ATE0.

000028a5 <_ZZ11Init_BrokervE3__c_4>:
    28a5:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    28b5:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

000028c4 <_ZZ11Init_BrokervE3__c_3>:
    28c4:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    28d4:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

000028df <_ZZ11Init_BrokervE3__c_2>:
    28df:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28ef:	76 65 72 00                                         ver.

000028f3 <_ZZ11Init_BrokervE3__c_1>:
    28f3:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

00002902 <_ZZ11Init_BrokervE3__c_0>:
    2902:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2912:	76 65 72 20 30 00                                   ver 0.

00002918 <_ZZ11Init_BrokervE3__c>:
    2918:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

00002929 <_ZZ4mainE3__c_0>:
    2929:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    2939:	3a 20 00                                            : .

0000293c <_ZZ4mainE3__c>:
    293c:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    294c:	3a 20 00                                            : .

0000294f <_ZZ24Pump_Status_List_MonitorvE3__c>:
    294f:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    295f:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    296f:	35 35 35 35 35 35 35 35 00                          55555555.

00002978 <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    2978:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2988:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002997 <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    2997:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29a7:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29b7:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29c7:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000029d2 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    29d2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29e2:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29f2:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2a02:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002a0d <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    2a0d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2a1d:	69 6c 00                                            il.

00002a20 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    2a20:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2a30:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2a40:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002a4b <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    2a4b:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2a5b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a69 <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a69:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a79:	74 61 20 3a 20 00                                   ta : .

00002a7f <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a7f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a8f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a9f:	65 20 31 00                                         e 1.

00002aa3 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2aa3:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ab3:	6d 62 65 72 20 00                                   mber .

00002ab9 <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2ab9:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ac9:	6f 2e 20 00                                         o. .

00002acd <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2acd:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002add <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2add:	20 00                                                .

00002adf <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2adf:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2aef:	20 6c 69 73 74 20 3a 20 00                           list : .

00002af8 <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2af8:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2b08:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002b16 <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2b16:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2b26:	20 64 61 74 61 20 3a 20 00                           data : .

00002b2f <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2b2f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2b3f:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2b4f:	50 75 6d 70 20 31 00                                Pump 1.

00002b56 <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2b56:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b66:	2e 20 00                                            . .

00002b69 <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b69:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b79:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b85 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b85:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b95:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002ba1 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2ba1:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bb1:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002bbd <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2bbd:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bcd:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bdb <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2bdb:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002be6 <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2be6:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bf6:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002c02 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2c02:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2c12:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002c20 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2c20:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002c2a <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2c2a:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c3a:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002c46 <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2c46:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c56:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c64 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c64:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c74:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c84:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c90 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c90:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2ca0:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2cb0:	53 65 6e 74 20 3a 00                                Sent :.

00002cb7 <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2cb7:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2cc7:	20 64 61 74 61 20 3a 20 00                           data : .

00002cd0 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2cd0:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2ce0:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002cec <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2cec:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2cfc:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2d0c:	50 75 6d 70 20 31 00                                Pump 1.

00002d13 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2d13:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2d23:	2e 20 00                                            . .

00002d26 <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2d26:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d36:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2d46:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002d55 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2d55:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d65:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d75:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d80 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d80:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d90:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d9f <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d9f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2daf:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dbf:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dcf:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002dda <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2dda:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dea:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dfa:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2e0a:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002e15 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2e15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2e25:	69 6c 00                                            il.

00002e28 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2e28:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2e38:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2e48:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002e53 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2e53:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e63:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e71 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e71:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e81:	74 61 20 3a 20 00                                   ta : .

00002e87 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e87:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e97:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2ea7:	65 20 31 00                                         e 1.

00002eab <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2eab:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ebb:	6d 62 65 72 20 00                                   mber .

00002ec1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2ec1:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ed1:	6f 2e 20 00                                         o. .

00002ed5 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2ed5:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2ee5:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002ef1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2ef1:	20 00                                                .

00002ef3 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2ef3:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002f01 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2f01:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2f11:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002f1a <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2f1a:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002f2b <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2f2b:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2f3b:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2f4b:	62 61 63 6b 20 75 70 00                             back up.

00002f53 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2f53:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f63:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f73 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f73:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f83:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f93:	34 34 34 34 34 00                                   44444.

00002f99 <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f99:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2fa9:	61 00                                               a.

00002fab <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2fab:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2fbb:	20 74 6f 20 6f 6e 00                                 to on.

00002fc2 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2fc2:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002fd0 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2fd0:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2fe0:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2ff0:	33 33 33 33 00                                      3333.

00002ff5 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2ff5:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    3005:	72 61 20 70 6c 6f 74 00                             ra plot.

0000300d <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    300d:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    301d:	63 75 72 65 00                                      cure.

00003022 <_ZZ12Publish_DatavE3__c_78>:
    3022:	70 6c 6f 74 00                                      plot.

00003027 <_ZZ12Publish_DatavE3__c_77>:
    3027:	74 69 6d 65 00                                      time.

0000302c <_ZZ12Publish_DatavE3__c_76>:
    302c:	70 6c 6f 74 00                                      plot.

00003031 <_ZZ12Publish_DatavE3__c_75>:
    3031:	74 69 6d 65 00                                      time.

00003036 <_ZZ12Publish_DatavE3__c_74>:
    3036:	6d 65 64 69 75 6d 00                                medium.

0000303d <_ZZ12Publish_DatavE3__c_73>:
    303d:	70 53 74 61 74 75 73 00                             pStatus.

00003045 <_ZZ12Publish_DatavE3__c_72>:
    3045:	70 53 74 61 74 75 73 00                             pStatus.

0000304d <_ZZ12Publish_DatavE3__c_71>:
    304d:	70 53 74 61 74 75 73 00                             pStatus.

00003055 <_ZZ12Publish_DatavE3__c_70>:
    3055:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3065:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003071 <_ZZ12Publish_DatavE3__c_69>:
    3071:	73 74 61 74 75 73 00                                status.

00003078 <_ZZ12Publish_DatavE3__c_68>:
    3078:	73 74 61 74 75 73 00                                status.

0000307f <_ZZ12Publish_DatavE3__c_67>:
    307f:	73 74 61 74 75 73 00                                status.

00003086 <_ZZ12Publish_DatavE3__c_66>:
    3086:	73 74 61 74 75 73 00                                status.

0000308d <_ZZ12Publish_DatavE3__c_65>:
    308d:	73 74 61 74 75 73 00                                status.

00003094 <_ZZ12Publish_DatavE3__c_64>:
    3094:	73 74 61 74 75 73 00                                status.

0000309b <_ZZ12Publish_DatavE3__c_63>:
    309b:	70 4e 6f 00                                         pNo.

0000309f <_ZZ12Publish_DatavE3__c_62>:
    309f:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    30af:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

000030ba <_ZZ12Publish_DatavE3__c_61>:
    30ba:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

000030c6 <_ZZ12Publish_DatavE3__c_60>:
    30c6:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

000030cf <_ZZ12Publish_DatavE3__c_59>:
    30cf:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030de <_ZZ12Publish_DatavE3__c_58>:
    30de:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030e7 <_ZZ12Publish_DatavE3__c_57>:
    30e7:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030f6 <_ZZ12Publish_DatavE3__c_56>:
    30f6:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030ff <_ZZ12Publish_DatavE3__c_55>:
    30ff:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

0000310e <_ZZ12Publish_DatavE3__c_54>:
    310e:	73 63 5f 69 6e 64 65 78 00                          sc_index.

00003117 <_ZZ12Publish_DatavE3__c_53>:
    3117:	70 6c 6f 74 00                                      plot.

0000311c <_ZZ12Publish_DatavE3__c_52>:
    311c:	70 6c 6f 74 00                                      plot.

00003121 <_ZZ12Publish_DatavE3__c_51>:
    3121:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    3131:	65 72 00                                            er.

00003134 <_ZZ12Publish_DatavE3__c_50>:
    3134:	6d 6f 64 65 00                                      mode.

00003139 <_ZZ12Publish_DatavE3__c_49>:
    3139:	70 53 74 61 74 75 73 00                             pStatus.

00003141 <_ZZ12Publish_DatavE3__c_48>:
    3141:	70 53 74 61 74 75 73 00                             pStatus.

00003149 <_ZZ12Publish_DatavE3__c_47>:
    3149:	70 53 74 61 74 75 73 00                             pStatus.

00003151 <_ZZ12Publish_DatavE3__c_46>:
    3151:	73 74 61 74 75 73 00                                status.

00003158 <_ZZ12Publish_DatavE3__c_45>:
    3158:	73 74 61 74 75 73 00                                status.

0000315f <_ZZ12Publish_DatavE3__c_44>:
    315f:	73 74 61 74 75 73 00                                status.

00003166 <_ZZ12Publish_DatavE3__c_43>:
    3166:	73 74 61 74 75 73 00                                status.

0000316d <_ZZ12Publish_DatavE3__c_42>:
    316d:	73 74 61 74 75 73 00                                status.

00003174 <_ZZ12Publish_DatavE3__c_41>:
    3174:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    3184:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3194:	2e 00                                               ..

00003196 <_ZZ12Publish_DatavE3__c_40>:
    3196:	73 74 61 74 75 73 00                                status.

0000319d <_ZZ12Publish_DatavE3__c_39>:
    319d:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    31ad:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

000031be <_ZZ12Publish_DatavE3__c_38>:
    31be:	70 4e 6f 00                                         pNo.

000031c2 <_ZZ12Publish_DatavE3__c_37>:
    31c2:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    31d2:	63 6b 00                                            ck.

000031d5 <_ZZ12Publish_DatavE3__c_36>:
    31d5:	70 6c 6f 74 00                                      plot.

000031da <_ZZ12Publish_DatavE3__c_35>:
    31da:	74 69 6d 65 00                                      time.

000031df <_ZZ12Publish_DatavE3__c_34>:
    31df:	70 6c 6f 74 00                                      plot.

000031e4 <_ZZ12Publish_DatavE3__c_33>:
    31e4:	74 69 6d 65 00                                      time.

000031e9 <_ZZ12Publish_DatavE3__c_32>:
    31e9:	6d 65 64 69 75 6d 00                                medium.

000031f0 <_ZZ12Publish_DatavE3__c_31>:
    31f0:	70 53 74 61 74 75 73 00                             pStatus.

000031f8 <_ZZ12Publish_DatavE3__c_30>:
    31f8:	70 53 74 61 74 75 73 00                             pStatus.

00003200 <_ZZ12Publish_DatavE3__c_29>:
    3200:	70 53 74 61 74 75 73 00                             pStatus.

00003208 <_ZZ12Publish_DatavE3__c_28>:
    3208:	70 53 74 61 74 75 73 00                             pStatus.

00003210 <_ZZ12Publish_DatavE3__c_27>:
    3210:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3220:	20 46 62 00                                          Fb.

00003224 <_ZZ12Publish_DatavE3__c_26>:
    3224:	63 6f 64 65 73 00                                   codes.

0000322a <_ZZ12Publish_DatavE3__c_25>:
    322a:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    323a:	5f 44 41 54 41 00                                   _DATA.

00003240 <_ZZ12Publish_DatavE3__c_24>:
    3240:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

0000324a <_ZZ12Publish_DatavE3__c_23>:
    324a:	76 42 61 74 00                                      vBat.

0000324f <_ZZ12Publish_DatavE3__c_22>:
    324f:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

0000325b <_ZZ12Publish_DatavE3__c_21>:
    325b:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    326b:	5f 44 41 54 41 00                                   _DATA.

00003271 <_ZZ12Publish_DatavE3__c_20>:
    3271:	76 42 61 74 00                                      vBat.

00003276 <_ZZ12Publish_DatavE3__c_19>:
    3276:	6c 69 67 68 74 00                                   light.

0000327c <_ZZ12Publish_DatavE3__c_18>:
    327c:	68 75 6d 69 64 69 74 79 00                          humidity.

00003285 <_ZZ12Publish_DatavE3__c_17>:
    3285:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

00003291 <_ZZ12Publish_DatavE3__c_16>:
    3291:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

0000329b <_ZZ12Publish_DatavE3__c_15>:
    329b:	73 6d 34 00                                         sm4.

0000329f <_ZZ12Publish_DatavE3__c_14>:
    329f:	73 6d 33 00                                         sm3.

000032a3 <_ZZ12Publish_DatavE3__c_13>:
    32a3:	73 6d 32 00                                         sm2.

000032a7 <_ZZ12Publish_DatavE3__c_12>:
    32a7:	73 6d 31 00                                         sm1.

000032ab <_ZZ12Publish_DatavE3__c_11>:
    32ab:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

000032b5 <_ZZ12Publish_DatavE3__c_10>:
    32b5:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    32c5:	44 41 54 41 00                                      DATA.

000032ca <_ZZ12Publish_DatavE3__c_9>:
    32ca:	63 6f 64 65 73 00                                   codes.

000032d0 <_ZZ12Publish_DatavE3__c_8>:
    32d0:	70 6c 6f 74 00                                      plot.

000032d5 <_ZZ12Publish_DatavE3__c_7>:
    32d5:	70 6c 6f 74 00                                      plot.

000032da <_ZZ12Publish_DatavE3__c_6>:
    32da:	74 69 6d 65 00                                      time.

000032df <_ZZ12Publish_DatavE3__c_5>:
    32df:	74 69 6d 65 00                                      time.

000032e4 <_ZZ12Publish_DatavE3__c_4>:
    32e4:	6d 65 64 69 75 6d 00                                medium.

000032eb <_ZZ12Publish_DatavE3__c_3>:
    32eb:	70 53 74 61 74 75 73 00                             pStatus.

000032f3 <_ZZ12Publish_DatavE3__c_2>:
    32f3:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    3303:	42 41 43 4b 00                                      BACK.

00003308 <_ZZ12Publish_DatavE3__c_1>:
    3308:	74 65 73 74 00                                      test.

0000330d <_ZZ12Publish_DatavE3__c_0>:
    330d:	74 65 73 74 00                                      test.

00003312 <_ZZ12Publish_DatavE3__c>:
    3312:	63 6f 64 65 73 00                                   codes.

00003318 <_ZZ12Pub_Sub_DataPcPhjhE3__c_119>:
    3318:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    3328:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3338:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3348:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003359 <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    3359:	73 74 61 74 75 73 00                                status.

00003360 <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    3360:	70 4e 6f 00                                         pNo.

00003364 <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    3364:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    3374:	20 72 75 6c 65 64 00                                 ruled.

0000337b <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    337b:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    338b:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    339b:	72 00                                               r.

0000339d <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    339d:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

000033a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    33a9:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

000033ba <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    33ba:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

000033ca <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    33ca:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

000033da <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    33da:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

000033e4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    33e4:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

000033f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    33f0:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

000033fa <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    33fa:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    340a:	20 00                                                .

0000340c <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    340c:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003417 <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    3417:	54 6e 4f 66 00                                      TnOf.

0000341c <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    341c:	54 6e 4f 6e 00                                      TnOn.

00003421 <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    3421:	54 6e 4e 6f 00                                      TnNo.

00003426 <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    3426:	54 6e 53 74 00                                      TnSt.

0000342b <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    342b:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    343b:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

00003449 <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    3449:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003454 <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    3454:	53 63 53 74 61 74 00                                ScStat.

0000345b <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    345b:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    346b:	20 00                                                .

0000346d <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    346d:	53 63 4f 6e 00                                      ScOn.

00003472 <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    3472:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000347c <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    347c:	53 63 4e 75 6d 00                                   ScNum.

00003482 <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    3482:	53 63 4f 66 66 00                                   ScOff.

00003488 <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    3488:	53 63 4f 6e 00                                      ScOn.

0000348d <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    348d:	53 65 6e 00                                         Sen.

00003491 <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    3491:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    34a1:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    34b1:	20 00                                                .

000034b3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    34b3:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

000034c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    34c1:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

000034ce <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    34ce:	73 6d 73 00                                         sms.

000034d2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    34d2:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    34e2:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

000034ed <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    34ed:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    34fd:	20 3a 20 00                                          : .

00003501 <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    3501:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    3511:	74 6f 70 69 63 20 3a 20 00                          topic : .

0000351a <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    351a:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    352a:	6f 70 69 63 20 3a 20 00                             opic : .

00003532 <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    3532:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

0000353b <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    353b:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    354b:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003556 <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    3556:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

00003560 <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    3560:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    3570:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

0000357e <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    357e:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

00003587 <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    3587:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    3597:	63 20 3a 20 00                                      c : .

0000359c <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    359c:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035a7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    35a7:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35b7:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035c4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    35c4:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35d4:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035e1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    35e1:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035ec <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    35ec:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

000035f7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    35f7:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3607:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

00003612 <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    3612:	76 49 64 00                                         vId.

00003616 <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    3616:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    3626:	69 63 20 3a 20 00                                   ic : .

0000362c <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    362c:	63 6f 64 65 00                                      code.

00003631 <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    3631:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

0000363d <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    363d:	6d 61 78 20 3a 20 00                                max : .

00003644 <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    3644:	6d 69 6e 20 3a 20 00                                min : .

0000364b <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    364b:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

00003654 <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    3654:	6d 61 78 00                                         max.

00003658 <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    3658:	6d 61 78 00                                         max.

0000365c <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    365c:	6d 69 6e 00                                         min.

00003660 <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    3660:	6d 69 6e 00                                         min.

00003664 <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    3664:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00003670 <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    3670:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    3680:	72 2e 3a 20 00                                      r.: .

00003685 <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    3685:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3695:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

000036a1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    36a1:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000036ac <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    36ac:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

000036b8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    36b8:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

000036c2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    36c2:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

000036cc <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    36cc:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

000036d6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    36d6:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

000036e0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    36e0:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

000036ea <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    36ea:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

000036f7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    36f7:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3707:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003713 <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    3713:	6f 70 4d 6f 64 65 00                                opMode.

0000371a <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    371a:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    372a:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003735 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3735:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3745:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003750 <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    3750:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3760:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000376b <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    376b:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    377b:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    378b:	45 52 00                                            ER.

0000378e <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    378e:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    379e:	6f 6e 20 00                                         on .

000037a2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    37a2:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    37b2:	74 68 65 20 6c 69 73 74 00                          the list.

000037bb <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    37bb:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000037cc <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    37cc:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    37dc:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000037e7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    37e7:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    37f7:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003802 <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    3802:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3812:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000381d <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    381d:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    382d:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003838 <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    3838:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3848:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003853 <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    3853:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3863:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000386e <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    386e:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    387e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003889 <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    3889:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3899:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038a4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    38a4:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38b4:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038bf <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    38bf:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38cf:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038de <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    38de:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38ee:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038fd <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    38fd:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    390d:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

0000391c <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    391c:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003927 <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    3927:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

00003932 <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    3932:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3942:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

0000394d <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    394d:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    395d:	6f 6e 20 00                                         on .

00003961 <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    3961:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    3971:	74 68 65 20 6c 69 73 74 00                          the list.

0000397a <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    397a:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

0000398b <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    398b:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    399b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039a6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    39a6:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    39b6:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    39c1:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    39d1:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039dc <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    39dc:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39ec:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039f7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    39f7:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a07:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a12 <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    3a12:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a22:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a2d <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a2d:	76 61 6c 76 65 35 00                                valve5.

00003a34 <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a34:	76 61 6c 76 65 34 00                                valve4.

00003a3b <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a3b:	76 61 6c 76 65 33 00                                valve3.

00003a42 <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a42:	76 61 6c 76 65 32 00                                valve2.

00003a49 <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3a49:	76 61 6c 76 65 31 00                                valve1.

00003a50 <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3a50:	70 4e 6f 00                                         pNo.

00003a54 <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3a54:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3a64:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3a74:	72 00                                               r.

00003a76 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3a76:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003a86 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3a86:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003a95 <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3a95:	74 00                                               t.

00003a97 <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3a97:	70 4e 6f 00                                         pNo.

00003a9b <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3a9b:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3aab:	65 72 76 65 72 00                                   erver.

00003ab1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3ab1:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3ac1:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3ad1:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003add <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3add:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3aed:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003af6 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3af6:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b06:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003b0f <_ZZ14Lora_OperationvE3__c>:
    3b0f:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b1f:	64 00                                               d.

00003b21 <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b21:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b31:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b40 <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b40:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b50:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b60:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3b70:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003b7b <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3b7b:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b8b:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b9b:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3bab:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003bb6 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3bb6:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3bc6:	69 6c 00                                            il.

00003bc9 <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3bc9:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3bd9:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3be9:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003bf4 <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3bf4:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3c04:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003c12 <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3c12:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c22:	74 61 20 3a 20 00                                   ta : .

00003c28 <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c28:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c38:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3c48:	65 20 31 00                                         e 1.

00003c4c <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3c4c:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3c5c:	6d 62 65 72 20 00                                   mber .

00003c62 <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3c62:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3c72:	6f 2e 20 00                                         o. .

00003c76 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3c76:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3c86:	6e 6f 20 3a 20 00                                   no : .

00003c8c <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3c8c:	20 00                                                .

00003c8e <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3c8e:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003c9c <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3c9c:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3cac:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003cbb <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3cbb:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3ccb:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3cdb:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3ceb:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003cf6 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3cf6:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d06:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d16:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d26:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d31 <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d31:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d41:	69 6c 00                                            il.

00003d44 <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d44:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3d54:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3d64:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003d6f <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3d6f:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3d7f:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003d8d <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3d8d:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3d9d:	74 61 20 3a 20 00                                   ta : .

00003da3 <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3da3:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3db3:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3dc3:	65 20 31 00                                         e 1.

00003dc7 <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3dc7:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3dd7:	6d 62 65 72 20 00                                   mber .

00003ddd <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3ddd:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3ded:	6f 2e 20 00                                         o. .

00003df1 <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3df1:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3e01:	6e 6f 20 3a 20 00                                   no : .

00003e07 <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3e07:	20 00                                                .

00003e09 <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3e09:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003e17 <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3e17:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e27:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e37:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e45 <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e45:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3e55:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3e65:	29 00                                               ).

00003e67 <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3e67:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3e77:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3e87:	20 6f 6e 6e 29 00                                    onn).

00003e8d <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3e8d:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3e9d:	61 20 3a 20 00                                      a : .

00003ea2 <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3ea2:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3eb2:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ec2:	65 20 3b 00                                         e ;.

00003ec6 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3ec6:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3ed6:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3ee6:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003ef1 <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3ef1:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3f01:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3f11:	61 64 79 20 6f 6e 00                                ady on.

00003f18 <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3f18:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f28:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f39 <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f39:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3f49:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3f59:	20 6f 6e 29 00                                       on).

00003f5e <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3f5e:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3f6e:	61 20 3a 20 00                                      a : .

00003f73 <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3f73:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3f83:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3f93:	65 20 00                                            e .

00003f96 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3f96:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3fa6:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3fb6:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003fc1 <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    3fc1:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3fd1:	20 00                                                .

00003fd3 <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    3fd3:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00003fe4 <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    3fe4:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3ff4:	20 00                                                .

00003ff6 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    3ff6:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00004007 <_ZZ15Stop_IrrigationvE3__c_3>:
    4007:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4017:	74 6f 20 53 74 6f 70 00                             to Stop.

0000401f <_ZZ15Stop_IrrigationvE3__c_2>:
    401f:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004030 <_ZZ15Stop_IrrigationvE3__c_1>:
    4030:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004041 <_ZZ15Stop_IrrigationvE3__c_0>:
    4041:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4051:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    4061:	32 32 32 32 32 32 32 32 32 00                       222222222.

0000406b <_ZZ15Stop_IrrigationvE3__c>:
    406b:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    407b:	67 61 74 69 6f 6e 00                                gation.

00004082 <_ZZ16Start_IrrigationvE3__c_5>:
    4082:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4092:	53 74 61 72 74 00                                   Start.

00004098 <_ZZ16Start_IrrigationvE3__c_4>:
    4098:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

000040a9 <_ZZ16Start_IrrigationvE3__c_3>:
    40a9:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40b9:	53 74 61 72 74 00                                   Start.

000040bf <_ZZ16Start_IrrigationvE3__c_2>:
    40bf:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40cf:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

000040dc <_ZZ16Start_IrrigationvE3__c_1>:
    40dc:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40ec:	72 20 6f 6e 00                                      r on.

000040f1 <_ZZ16Start_IrrigationvE3__c_0>:
    40f1:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4101:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    4111:	31 31 31 31 31 31 00                                111111.

00004118 <_ZZ16Start_IrrigationvE3__c>:
    4118:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    4128:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

00004134 <_ZZ13Run_OperationvE3__c_21>:
    4134:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4144:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

00004151 <_ZZ13Run_OperationvE3__c_19>:
    4151:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4161:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    4171:	20 53 74 61 72 74 00                                 Start.

00004178 <_ZZ13Run_OperationvE3__c_18>:
    4178:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4188:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    4198:	72 6f 75 67 68 20 61 70 70 00                       rough app.

000041a2 <_ZZ13Run_OperationvE3__c_17>:
    41a2:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41b2:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41c2:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    41d2:	20 33 00                                             3.

000041d5 <_ZZ13Run_OperationvE3__c_16>:
    41d5:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41e5:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41f5:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4205:	20 32 00                                             2.

00004208 <_ZZ13Run_OperationvE3__c_15>:
    4208:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4218:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4228:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4238:	20 31 00                                             1.

0000423b <_ZZ13Run_OperationvE3__c_14>:
    423b:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    424b:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    425b:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    426b:	20 30 00                                             0.

0000426e <_ZZ13Run_OperationvE3__c_13>:
    426e:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    427e:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

0000428b <_ZZ13Run_OperationvE3__c_12>:
    428b:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    429b:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

000042a6 <_ZZ13Run_OperationvE3__c_11>:
    42a6:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42b6:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    42c6:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    42d6:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    42e6:	74 6f 70 20 30 2e 31 00                             top 0.1.

000042ee <_ZZ13Run_OperationvE3__c_10>:
    42ee:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42fe:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    430e:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    431e:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    432e:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004336 <_ZZ13Run_OperationvE3__c_9>:
    4336:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4346:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    4356:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    4366:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    4376:	74 20 00                                            t .

00004379 <_ZZ13Run_OperationvE3__c_8>:
    4379:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    4389:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    4399:	74 00                                               t.

0000439b <_ZZ13Run_OperationvE3__c_7>:
    439b:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43ab:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    43bb:	6f 75 67 68 20 61 70 70 00                          ough app.

000043c4 <_ZZ13Run_OperationvE3__c_6>:
    43c4:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    43d4:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

000043df <_ZZ13Run_OperationvE3__c_5>:
    43df:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43ef:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    43ff:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

0000440e <_ZZ13Run_OperationvE3__c_3>:
    440e:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    441e:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

0000442f <_ZZ13Run_OperationvE3__c_2>:
    442f:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    443f:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    444f:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

0000445a <_ZZ13Run_OperationvE3__c_1>:
    445a:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    446a:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    447a:	74 00                                               t.

0000447c <_ZZ13Run_OperationvE3__c_0>:
    447c:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    448c:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    449c:	74 6f 20 73 74 6f 70 00                             to stop.

000044a4 <_ZZ13Run_OperationvE3__c>:
    44a4:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    44b4:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    44c4:	6e 20 53 74 61 72 74 00                             n Start.

000044cc <_ZZ21Select_Operation_ModevE3__c_11>:
    44cc:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    44dc:	65 64 00                                            ed.

000044df <_ZZ21Select_Operation_ModevE3__c_10>:
    44df:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    44ef:	65 64 00                                            ed.

000044f2 <_ZZ21Select_Operation_ModevE3__c_9>:
    44f2:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4502:	63 74 65 64 00                                      cted.

00004507 <_ZZ21Select_Operation_ModevE3__c_8>:
    4507:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4517:	65 64 00                                            ed.

0000451a <_ZZ21Select_Operation_ModevE3__c_7>:
    451a:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    452a:	63 74 65 64 00                                      cted.

0000452f <_ZZ21Select_Operation_ModevE3__c_6>:
    452f:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    453f:	63 74 65 64 00                                      cted.

00004544 <_ZZ21Select_Operation_ModevE3__c_5>:
    4544:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    4554:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

00004560 <_ZZ21Select_Operation_ModevE3__c_4>:
    4560:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4570:	65 64 00                                            ed.

00004573 <_ZZ21Select_Operation_ModevE3__c_3>:
    4573:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    4583:	74 65 64 00                                         ted.

00004587 <_ZZ21Select_Operation_ModevE3__c_2>:
    4587:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    4597:	74 65 64 00                                         ted.

0000459b <_ZZ21Select_Operation_ModevE3__c_1>:
    459b:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    45ab:	20 73 65 6c 65 63 74 65 64 00                        selected.

000045b5 <_ZZ21Select_Operation_ModevE3__c_0>:
    45b5:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45c5:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

000045d1 <_ZZ21Select_Operation_ModevE3__c>:
    45d1:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    45e1:	63 74 65 64 00                                      cted.

000045e6 <digital_pin_to_timer_PGM>:
    45e6:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    4612:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000462c <digital_pin_to_bit_mask_PGM>:
    462c:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    463c:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    464c:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    465c:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    466c:	04 08 10 20 40 80                                   ... @.

00004672 <digital_pin_to_port_PGM>:
    4672:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    4682:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    4692:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    46a2:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    46b2:	0b 0b 0b 0b 0b 0b                                   ......

000046b8 <port_to_input_PGM>:
    46b8:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    46c8:	00 01 00 00 03 01 06 01 09 01                       ..........

000046d2 <port_to_output_PGM>:
    46d2:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    46e2:	02 01 00 00 05 01 08 01 0b 01                       ..........

000046ec <port_to_mode_PGM>:
    46ec:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    46fc:	01 01 00 00 04 01 07 01 0a 01                       ..........

00004706 <_ZL18MODEM_CONFIG_TABLE>:
    4706:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04 00     rt..t.H..x..r...

00004716 <__ctors_start>:
    4716:	f6 65       	ori	r31, 0x56	; 86
    4718:	4e d0       	rcall	.+156    	; 0x47b6 <_ZN5EERef6updateEh+0x22>
    471a:	a4 d0       	rcall	.+328    	; 0x4864 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x18>
    471c:	00 d9       	rcall	.-3584   	; 0x391e <_ZZ12Pub_Sub_DataPcPhjhE3__c_28+0x2>
    471e:	b6 de       	rcall	.-660    	; 0x448c <_ZZ13Run_OperationvE3__c_0+0x10>

00004720 <__ctors_end>:
    4720:	11 24       	eor	r1, r1
    4722:	1f be       	out	0x3f, r1	; 63
    4724:	cf ef       	ldi	r28, 0xFF	; 255
    4726:	d1 e2       	ldi	r29, 0x21	; 33
    4728:	de bf       	out	0x3e, r29	; 62
    472a:	cd bf       	out	0x3d, r28	; 61
    472c:	00 e0       	ldi	r16, 0x00	; 0
    472e:	0c bf       	out	0x3c, r16	; 60

00004730 <__do_copy_data>:
    4730:	19 e0       	ldi	r17, 0x09	; 9
    4732:	a0 e0       	ldi	r26, 0x00	; 0
    4734:	b2 e0       	ldi	r27, 0x02	; 2
    4736:	ee ea       	ldi	r30, 0xAE	; 174
    4738:	f9 ed       	ldi	r31, 0xD9	; 217
    473a:	01 e0       	ldi	r16, 0x01	; 1
    473c:	0b bf       	out	0x3b, r16	; 59
    473e:	02 c0       	rjmp	.+4      	; 0x4744 <__do_copy_data+0x14>
    4740:	07 90       	elpm	r0, Z+
    4742:	0d 92       	st	X+, r0
    4744:	a6 31       	cpi	r26, 0x16	; 22
    4746:	b1 07       	cpc	r27, r17
    4748:	d9 f7       	brne	.-10     	; 0x4740 <__do_copy_data+0x10>

0000474a <__do_clear_bss>:
    474a:	28 e1       	ldi	r18, 0x18	; 24
    474c:	a6 e1       	ldi	r26, 0x16	; 22
    474e:	b9 e0       	ldi	r27, 0x09	; 9
    4750:	01 c0       	rjmp	.+2      	; 0x4754 <.do_clear_bss_start>

00004752 <.do_clear_bss_loop>:
    4752:	1d 92       	st	X+, r1

00004754 <.do_clear_bss_start>:
    4754:	a8 3b       	cpi	r26, 0xB8	; 184
    4756:	b2 07       	cpc	r27, r18
    4758:	e1 f7       	brne	.-8      	; 0x4752 <.do_clear_bss_loop>

0000475a <__do_global_ctors>:
    475a:	13 e2       	ldi	r17, 0x23	; 35
    475c:	c0 e9       	ldi	r28, 0x90	; 144
    475e:	d3 e2       	ldi	r29, 0x23	; 35
    4760:	00 e0       	ldi	r16, 0x00	; 0
    4762:	06 c0       	rjmp	.+12     	; 0x4770 <__do_global_ctors+0x16>
    4764:	21 97       	sbiw	r28, 0x01	; 1
    4766:	01 09       	sbc	r16, r1
    4768:	80 2f       	mov	r24, r16
    476a:	fe 01       	movw	r30, r28
    476c:	0e 94 9b e7 	call	0x1cf36	; 0x1cf36 <__tablejump2__>
    4770:	cb 38       	cpi	r28, 0x8B	; 139
    4772:	d1 07       	cpc	r29, r17
    4774:	80 e0       	ldi	r24, 0x00	; 0
    4776:	08 07       	cpc	r16, r24
    4778:	a9 f7       	brne	.-22     	; 0x4764 <__do_global_ctors+0xa>
    477a:	0e 94 b5 82 	call	0x1056a	; 0x1056a <main>
    477e:	0c 94 d5 ec 	jmp	0x1d9aa	; 0x1d9aa <_exit>

00004782 <__bad_interrupt>:
    4782:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00004786 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    4786:	dc 01       	movw	r26, r24
    4788:	ed 91       	ld	r30, X+
    478a:	fc 91       	ld	r31, X
    478c:	02 80       	ldd	r0, Z+2	; 0x02
    478e:	f3 81       	ldd	r31, Z+3	; 0x03
    4790:	e0 2d       	mov	r30, r0
    4792:	19 94       	eijmp

00004794 <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4794:	ff 92       	push	r15
    4796:	0f 93       	push	r16
    4798:	1f 93       	push	r17
    479a:	cf 93       	push	r28
    479c:	df 93       	push	r29
    479e:	ec 01       	movw	r28, r24
    47a0:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    47a2:	08 81       	ld	r16, Y
    47a4:	19 81       	ldd	r17, Y+1	; 0x01
    47a6:	c8 01       	movw	r24, r16
    47a8:	0e 94 b9 ec 	call	0x1d972	; 0x1d972 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47ac:	f8 16       	cp	r15, r24
    47ae:	21 f0       	breq	.+8      	; 0x47b8 <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    47b0:	6f 2d       	mov	r22, r15
    47b2:	c8 01       	movw	r24, r16
    47b4:	0e 94 c1 ec 	call	0x1d982	; 0x1d982 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47b8:	ce 01       	movw	r24, r28
    47ba:	df 91       	pop	r29
    47bc:	cf 91       	pop	r28
    47be:	1f 91       	pop	r17
    47c0:	0f 91       	pop	r16
    47c2:	ff 90       	pop	r15
    47c4:	08 95       	ret

000047c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    47c6:	0f 93       	push	r16
    47c8:	1f 93       	push	r17
    47ca:	cf 93       	push	r28
    47cc:	df 93       	push	r29
    47ce:	1f 92       	push	r1
    47d0:	1f 92       	push	r1
    47d2:	cd b7       	in	r28, 0x3d	; 61
    47d4:	de b7       	in	r29, 0x3e	; 62
    47d6:	8b 01       	movw	r16, r22
    47d8:	fb 01       	movw	r30, r22
    47da:	60 81       	ld	r22, Z
    47dc:	9a 83       	std	Y+2, r25	; 0x02
    47de:	89 83       	std	Y+1, r24	; 0x01
    47e0:	ce 01       	movw	r24, r28
    47e2:	01 96       	adiw	r24, 0x01	; 1
    47e4:	d7 df       	rcall	.-82     	; 0x4794 <_ZN5EERef6updateEh>
    47e6:	c8 01       	movw	r24, r16
    47e8:	0f 90       	pop	r0
    47ea:	0f 90       	pop	r0
    47ec:	df 91       	pop	r29
    47ee:	cf 91       	pop	r28
    47f0:	1f 91       	pop	r17
    47f2:	0f 91       	pop	r16
    47f4:	08 95       	ret

000047f6 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    47f6:	ef 92       	push	r14
    47f8:	ff 92       	push	r15
    47fa:	0f 93       	push	r16
    47fc:	1f 93       	push	r17
    47fe:	cf 93       	push	r28
    4800:	df 93       	push	r29
    4802:	1f 92       	push	r1
    4804:	1f 92       	push	r1
    4806:	cd b7       	in	r28, 0x3d	; 61
    4808:	de b7       	in	r29, 0x3e	; 62
    480a:	89 e2       	ldi	r24, 0x29	; 41
    480c:	e8 2e       	mov	r14, r24
    480e:	84 e1       	ldi	r24, 0x14	; 20
    4810:	f8 2e       	mov	r15, r24
    4812:	0d ea       	ldi	r16, 0xAD	; 173
    4814:	1e e0       	ldi	r17, 0x0E	; 14
    4816:	f7 01       	movw	r30, r14
    4818:	61 91       	ld	r22, Z+
    481a:	7f 01       	movw	r14, r30
    481c:	1a 83       	std	Y+2, r17	; 0x02
    481e:	09 83       	std	Y+1, r16	; 0x01
    4820:	ce 01       	movw	r24, r28
    4822:	01 96       	adiw	r24, 0x01	; 1
    4824:	b7 df       	rcall	.-146    	; 0x4794 <_ZN5EERef6updateEh>
    4826:	0f 5f       	subi	r16, 0xFF	; 255
    4828:	1f 4f       	sbci	r17, 0xFF	; 255
    482a:	01 3b       	cpi	r16, 0xB1	; 177
    482c:	fe e0       	ldi	r31, 0x0E	; 14
    482e:	1f 07       	cpc	r17, r31
    4830:	91 f7       	brne	.-28     	; 0x4816 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    4832:	89 e2       	ldi	r24, 0x29	; 41
    4834:	94 e1       	ldi	r25, 0x14	; 20
    4836:	0f 90       	pop	r0
    4838:	0f 90       	pop	r0
    483a:	df 91       	pop	r29
    483c:	cf 91       	pop	r28
    483e:	1f 91       	pop	r17
    4840:	0f 91       	pop	r16
    4842:	ff 90       	pop	r15
    4844:	ef 90       	pop	r14
    4846:	08 95       	ret

00004848 <_Z22Hard_Coded_Flush_Valveh>:
    4848:	81 e0       	ldi	r24, 0x01	; 1
    484a:	08 95       	ret

0000484c <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    484c:	80 91 5d 0e 	lds	r24, 0x0E5D	; 0x800e5d <_sExtra_Plot+0xd9>
    4850:	8d 36       	cpi	r24, 0x6D	; 109
    4852:	09 f0       	breq	.+2      	; 0x4856 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    4854:	7c c0       	rjmp	.+248    	; 0x494e <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    4856:	80 91 5c 0e 	lds	r24, 0x0E5C	; 0x800e5c <_sExtra_Plot+0xd8>
    485a:	88 23       	and	r24, r24
    485c:	09 f4       	brne	.+2      	; 0x4860 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    485e:	56 c0       	rjmp	.+172    	; 0x490c <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    4860:	80 91 61 0e 	lds	r24, 0x0E61	; 0x800e61 <_sExtra_Plot+0xdd>
    4864:	86 36       	cpi	r24, 0x66	; 102
    4866:	31 f0       	breq	.+12     	; 0x4874 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    4868:	87 36       	cpi	r24, 0x67	; 103
    486a:	41 f0       	breq	.+16     	; 0x487c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    486c:	85 36       	cpi	r24, 0x65	; 101
    486e:	41 f4       	brne	.+16     	; 0x4880 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    4870:	82 e0       	ldi	r24, 0x02	; 2
    4872:	01 c0       	rjmp	.+2      	; 0x4876 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    4874:	83 e0       	ldi	r24, 0x03	; 3
    4876:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>

				}break;
    487a:	2d c0       	rjmp	.+90     	; 0x48d6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    487c:	84 e0       	ldi	r24, 0x04	; 4
    487e:	fb cf       	rjmp	.-10     	; 0x4876 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    4880:	82 e0       	ldi	r24, 0x02	; 2
    4882:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    4886:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    488a:	81 30       	cpi	r24, 0x01	; 1
    488c:	21 f5       	brne	.+72     	; 0x48d6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    488e:	63 ec       	ldi	r22, 0xC3	; 195
    4890:	78 e0       	ldi	r23, 0x08	; 8
    4892:	85 e5       	ldi	r24, 0x55	; 85
    4894:	94 e1       	ldi	r25, 0x14	; 20
    4896:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    489a:	4a e0       	ldi	r20, 0x0A	; 10
    489c:	50 e0       	ldi	r21, 0x00	; 0
    489e:	60 91 61 0e 	lds	r22, 0x0E61	; 0x800e61 <_sExtra_Plot+0xdd>
    48a2:	85 e5       	ldi	r24, 0x55	; 85
    48a4:	94 e1       	ldi	r25, 0x14	; 20
    48a6:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48aa:	85 e5       	ldi	r24, 0x55	; 85
    48ac:	94 e1       	ldi	r25, 0x14	; 20
    48ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    48b2:	69 ea       	ldi	r22, 0xA9	; 169
    48b4:	78 e0       	ldi	r23, 0x08	; 8
    48b6:	85 e5       	ldi	r24, 0x55	; 85
    48b8:	94 e1       	ldi	r25, 0x14	; 20
    48ba:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    48be:	4a e0       	ldi	r20, 0x0A	; 10
    48c0:	50 e0       	ldi	r21, 0x00	; 0
    48c2:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    48c6:	85 e5       	ldi	r24, 0x55	; 85
    48c8:	94 e1       	ldi	r25, 0x14	; 20
    48ca:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48ce:	85 e5       	ldi	r24, 0x55	; 85
    48d0:	94 e1       	ldi	r25, 0x14	; 20
    48d2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    48d6:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    48da:	81 11       	cpse	r24, r1
    48dc:	46 c0       	rjmp	.+140    	; 0x496a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    48de:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    48e2:	81 30       	cpi	r24, 0x01	; 1
    48e4:	51 f4       	brne	.+20     	; 0x48fa <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    48e6:	6d e7       	ldi	r22, 0x7D	; 125
    48e8:	78 e0       	ldi	r23, 0x08	; 8
    48ea:	85 e5       	ldi	r24, 0x55	; 85
    48ec:	94 e1       	ldi	r25, 0x14	; 20
    48ee:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    48f2:	85 e5       	ldi	r24, 0x55	; 85
    48f4:	94 e1       	ldi	r25, 0x14	; 20
    48f6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    48fa:	83 e0       	ldi	r24, 0x03	; 3
    48fc:	80 93 09 14 	sts	0x1409, r24	; 0x801409 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4900:	69 e0       	ldi	r22, 0x09	; 9
    4902:	74 e1       	ldi	r23, 0x14	; 20
    4904:	88 ea       	ldi	r24, 0xA8	; 168
    4906:	9c e0       	ldi	r25, 0x0C	; 12
    4908:	5e df       	rcall	.-324    	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    490a:	2f c0       	rjmp	.+94     	; 0x496a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    490c:	81 e0       	ldi	r24, 0x01	; 1
    490e:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4912:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    4916:	88 23       	and	r24, r24
    4918:	09 f4       	brne	.+2      	; 0x491c <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    491a:	48 c0       	rjmp	.+144    	; 0x49ac <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    491c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4920:	81 30       	cpi	r24, 0x01	; 1
    4922:	51 f4       	brne	.+20     	; 0x4938 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    4924:	62 e5       	ldi	r22, 0x52	; 82
    4926:	78 e0       	ldi	r23, 0x08	; 8
    4928:	85 e5       	ldi	r24, 0x55	; 85
    492a:	94 e1       	ldi	r25, 0x14	; 20
    492c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4930:	85 e5       	ldi	r24, 0x55	; 85
    4932:	94 e1       	ldi	r25, 0x14	; 20
    4934:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4938:	10 92 09 14 	sts	0x1409, r1	; 0x801409 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    493c:	69 e0       	ldi	r22, 0x09	; 9
    493e:	74 e1       	ldi	r23, 0x14	; 20
    4940:	88 ea       	ldi	r24, 0xA8	; 168
    4942:	9c e0       	ldi	r25, 0x0C	; 12
    4944:	40 df       	rcall	.-384    	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    4946:	85 e0       	ldi	r24, 0x05	; 5
    4948:	0e 94 e0 ac 	call	0x159c0	; 0x159c0 <_Z22Valve_Grouping_Handlerh>
    494c:	0e c0       	rjmp	.+28     	; 0x496a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    494e:	81 e0       	ldi	r24, 0x01	; 1
    4950:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4954:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    4958:	88 23       	and	r24, r24
    495a:	41 f1       	breq	.+80     	; 0x49ac <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    495c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4960:	81 30       	cpi	r24, 0x01	; 1
    4962:	51 f7       	brne	.-44     	; 0x4938 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    4964:	61 e4       	ldi	r22, 0x41	; 65
    4966:	78 e0       	ldi	r23, 0x08	; 8
    4968:	df cf       	rjmp	.-66     	; 0x4928 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    496a:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    496e:	82 30       	cpi	r24, 0x02	; 2
    4970:	d8 f0       	brcs	.+54     	; 0x49a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    4972:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    4976:	81 11       	cpse	r24, r1
    4978:	32 c0       	rjmp	.+100    	; 0x49de <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    497a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    497e:	81 30       	cpi	r24, 0x01	; 1
    4980:	51 f4       	brne	.+20     	; 0x4996 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    4982:	60 e3       	ldi	r22, 0x30	; 48
    4984:	78 e0       	ldi	r23, 0x08	; 8
    4986:	85 e5       	ldi	r24, 0x55	; 85
    4988:	94 e1       	ldi	r25, 0x14	; 20
    498a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    498e:	85 e5       	ldi	r24, 0x55	; 85
    4990:	94 e1       	ldi	r25, 0x14	; 20
    4992:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    4996:	83 e0       	ldi	r24, 0x03	; 3
    4998:	80 93 09 14 	sts	0x1409, r24	; 0x801409 <_sRuble_Parameters+0xbf>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    499c:	69 e0       	ldi	r22, 0x09	; 9
    499e:	74 e1       	ldi	r23, 0x14	; 20
    49a0:	88 ea       	ldi	r24, 0xA8	; 168
    49a2:	9c e0       	ldi	r25, 0x0C	; 12
    49a4:	10 cf       	rjmp	.-480    	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    49a6:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    49a8:	81 30       	cpi	r24, 0x01	; 1
    49aa:	c9 f4       	brne	.+50     	; 0x49de <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    49ac:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    49b0:	88 23       	and	r24, r24
    49b2:	a9 f0       	breq	.+42     	; 0x49de <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    49b4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    49b8:	81 30       	cpi	r24, 0x01	; 1
    49ba:	51 f4       	brne	.+20     	; 0x49d0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    49bc:	6f e1       	ldi	r22, 0x1F	; 31
    49be:	78 e0       	ldi	r23, 0x08	; 8
    49c0:	85 e5       	ldi	r24, 0x55	; 85
    49c2:	94 e1       	ldi	r25, 0x14	; 20
    49c4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    49c8:	85 e5       	ldi	r24, 0x55	; 85
    49ca:	94 e1       	ldi	r25, 0x14	; 20
    49cc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    49d0:	10 92 09 14 	sts	0x1409, r1	; 0x801409 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49d4:	69 e0       	ldi	r22, 0x09	; 9
    49d6:	74 e1       	ldi	r23, 0x14	; 20
    49d8:	88 ea       	ldi	r24, 0xA8	; 168
    49da:	9c e0       	ldi	r25, 0x0C	; 12
    49dc:	f4 ce       	rjmp	.-536    	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    49de:	08 95       	ret

000049e0 <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    49e0:	e5 ef       	ldi	r30, 0xF5	; 245
    49e2:	fd e0       	ldi	r31, 0x0D	; 13
    49e4:	2a ef       	ldi	r18, 0xFA	; 250
    49e6:	3d e0       	ldi	r19, 0x0D	; 13
    49e8:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    49ea:	91 91       	ld	r25, Z+
    49ec:	91 11       	cpse	r25, r1
		{
			total_valve++;
    49ee:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    49f0:	2e 17       	cp	r18, r30
    49f2:	3f 07       	cpc	r19, r31
    49f4:	d1 f7       	brne	.-12     	; 0x49ea <_Z17Flush_Controllingv+0xa>
    49f6:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    49fa:	82 30       	cpi	r24, 0x02	; 2
    49fc:	18 f4       	brcc	.+6      	; 0x4a04 <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    49fe:	81 e0       	ldi	r24, 0x01	; 1
    4a00:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    4a04:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4a08:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    4a0c:	81 34       	cpi	r24, 0x41	; 65
    4a0e:	98 43       	sbci	r25, 0x38	; 56
    4a10:	30 f0       	brcs	.+12     	; 0x4a1e <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    4a12:	80 e4       	ldi	r24, 0x40	; 64
    4a14:	98 e3       	ldi	r25, 0x38	; 56
    4a16:	90 93 8b 0b 	sts	0x0B8B, r25	; 0x800b8b <_sSchedules+0x26d>
    4a1a:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a1e:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    4a22:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <_sSchedules+0x26f>
    4a26:	85 38       	cpi	r24, 0x85	; 133
    4a28:	93 40       	sbci	r25, 0x03	; 3
    4a2a:	30 f0       	brcs	.+12     	; 0x4a38 <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a2c:	84 e8       	ldi	r24, 0x84	; 132
    4a2e:	93 e0       	ldi	r25, 0x03	; 3
    4a30:	90 93 8d 0b 	sts	0x0B8D, r25	; 0x800b8d <_sSchedules+0x26f>
    4a34:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
	}
	
	
	if(flush_time_save > 40)
    4a38:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
    4a3c:	89 32       	cpi	r24, 0x29	; 41
    4a3e:	20 f0       	brcs	.+8      	; 0x4a48 <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a40:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a44:	d8 de       	rcall	.-592    	; 0x47f6 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4a46:	03 c0       	rjmp	.+6      	; 0x4a4e <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4a48:	8f 5f       	subi	r24, 0xFF	; 255
    4a4a:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4a4e:	80 91 f1 0d 	lds	r24, 0x0DF1	; 0x800df1 <_sExtra_Plot+0x6d>
    4a52:	89 36       	cpi	r24, 0x69	; 105
    4a54:	09 f0       	breq	.+2      	; 0x4a58 <_Z17Flush_Controllingv+0x78>
    4a56:	38 c1       	rjmp	.+624    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4a58:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    4a5c:	82 30       	cpi	r24, 0x02	; 2
    4a5e:	09 f4       	brne	.+2      	; 0x4a62 <_Z17Flush_Controllingv+0x82>
    4a60:	f9 c0       	rjmp	.+498    	; 0x4c54 <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4a62:	80 91 33 14 	lds	r24, 0x1433	; 0x801433 <_sRuble_Parameters+0xe9>
    4a66:	90 91 34 14 	lds	r25, 0x1434	; 0x801434 <_sRuble_Parameters+0xea>
    4a6a:	89 2b       	or	r24, r25
    4a6c:	09 f0       	breq	.+2      	; 0x4a70 <_Z17Flush_Controllingv+0x90>
    4a6e:	2c c1       	rjmp	.+600    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4a70:	68 ee       	ldi	r22, 0xE8	; 232
    4a72:	72 e0       	ldi	r23, 0x02	; 2
    4a74:	85 e5       	ldi	r24, 0x55	; 85
    4a76:	94 e1       	ldi	r25, 0x14	; 20
    4a78:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a7c:	40 91 29 14 	lds	r20, 0x1429	; 0x801429 <_sRuble_Parameters+0xdf>
    4a80:	50 91 2a 14 	lds	r21, 0x142A	; 0x80142a <_sRuble_Parameters+0xe0>
    4a84:	60 91 2b 14 	lds	r22, 0x142B	; 0x80142b <_sRuble_Parameters+0xe1>
    4a88:	70 91 2c 14 	lds	r23, 0x142C	; 0x80142c <_sRuble_Parameters+0xe2>
    4a8c:	2a e0       	ldi	r18, 0x0A	; 10
    4a8e:	30 e0       	ldi	r19, 0x00	; 0
    4a90:	85 e5       	ldi	r24, 0x55	; 85
    4a92:	94 e1       	ldi	r25, 0x14	; 20
    4a94:	0e 94 96 d1 	call	0x1a32c	; 0x1a32c <_ZN5Print5printEmi>
				Serial.println();
    4a98:	85 e5       	ldi	r24, 0x55	; 85
    4a9a:	94 e1       	ldi	r25, 0x14	; 20
    4a9c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4aa0:	85 e5       	ldi	r24, 0x55	; 85
    4aa2:	94 e1       	ldi	r25, 0x14	; 20
    4aa4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4aa8:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4aac:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    4ab0:	a0 e0       	ldi	r26, 0x00	; 0
    4ab2:	b0 e0       	ldi	r27, 0x00	; 0
    4ab4:	40 91 29 14 	lds	r20, 0x1429	; 0x801429 <_sRuble_Parameters+0xdf>
    4ab8:	50 91 2a 14 	lds	r21, 0x142A	; 0x80142a <_sRuble_Parameters+0xe0>
    4abc:	60 91 2b 14 	lds	r22, 0x142B	; 0x80142b <_sRuble_Parameters+0xe1>
    4ac0:	70 91 2c 14 	lds	r23, 0x142C	; 0x80142c <_sRuble_Parameters+0xe2>
    4ac4:	84 17       	cp	r24, r20
    4ac6:	95 07       	cpc	r25, r21
    4ac8:	a6 07       	cpc	r26, r22
    4aca:	b7 07       	cpc	r27, r23
    4acc:	08 f0       	brcs	.+2      	; 0x4ad0 <_Z17Flush_Controllingv+0xf0>
    4ace:	fc c0       	rjmp	.+504    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4ad0:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4ad4:	81 30       	cpi	r24, 0x01	; 1
    4ad6:	09 f0       	breq	.+2      	; 0x4ada <_Z17Flush_Controllingv+0xfa>
    4ad8:	68 c0       	rjmp	.+208    	; 0x4baa <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4ada:	80 91 2d 14 	lds	r24, 0x142D	; 0x80142d <_sRuble_Parameters+0xe3>
    4ade:	90 91 2e 14 	lds	r25, 0x142E	; 0x80142e <_sRuble_Parameters+0xe4>
    4ae2:	89 2b       	or	r24, r25
    4ae4:	f9 f0       	breq	.+62     	; 0x4b24 <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4ae6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4aea:	81 30       	cpi	r24, 0x01	; 1
    4aec:	51 f4       	brne	.+20     	; 0x4b02 <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4aee:	66 ed       	ldi	r22, 0xD6	; 214
    4af0:	72 e0       	ldi	r23, 0x02	; 2
    4af2:	85 e5       	ldi	r24, 0x55	; 85
    4af4:	94 e1       	ldi	r25, 0x14	; 20
    4af6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4afa:	85 e5       	ldi	r24, 0x55	; 85
    4afc:	94 e1       	ldi	r25, 0x14	; 20
    4afe:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b02:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    4b06:	81 11       	cpse	r24, r1
    4b08:	13 c1       	rjmp	.+550    	; 0x4d30 <_Z17Flush_Controllingv+0x350>
    4b0a:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4b0e:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4b12:	89 2b       	or	r24, r25
    4b14:	09 f4       	brne	.+2      	; 0x4b18 <_Z17Flush_Controllingv+0x138>
    4b16:	0c c1       	rjmp	.+536    	; 0x4d30 <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b18:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    4b1c:	81 30       	cpi	r24, 0x01	; 1
    4b1e:	09 f0       	breq	.+2      	; 0x4b22 <_Z17Flush_Controllingv+0x142>
    4b20:	d3 c0       	rjmp	.+422    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
    4b22:	06 c1       	rjmp	.+524    	; 0x4d30 <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b24:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    4b28:	83 30       	cpi	r24, 0x03	; 3
    4b2a:	49 f4       	brne	.+18     	; 0x4b3e <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b2c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4b30:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4b34:	88 60       	ori	r24, 0x08	; 8
    4b36:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4b3a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b3e:	84 e0       	ldi	r24, 0x04	; 4
    4b40:	0e 94 3f c6 	call	0x18c7e	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b44:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4b48:	88 23       	and	r24, r24
    4b4a:	09 f4       	brne	.+2      	; 0x4b4e <_Z17Flush_Controllingv+0x16e>
    4b4c:	7d c0       	rjmp	.+250    	; 0x4c48 <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4b4e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4b52:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4b56:	90 62       	ori	r25, 0x20	; 32
    4b58:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4b5c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4b60:	84 e0       	ldi	r24, 0x04	; 4
    4b62:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4b66:	82 e0       	ldi	r24, 0x02	; 2
    4b68:	80 93 0a 0e 	sts	0x0E0A, r24	; 0x800e0a <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4b6c:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4b70:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4b74:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4b78:	91 e0       	ldi	r25, 0x01	; 1
    4b7a:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4b7e:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gRunning_Flush_Num>
    4b82:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4b86:	82 17       	cp	r24, r18
    4b88:	58 f0       	brcs	.+22     	; 0x4ba0 <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4b8a:	90 93 9d 0c 	sts	0x0C9D, r25	; 0x800c9d <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4b8e:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xdf>
    4b92:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe0>
    4b96:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe1>
    4b9a:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe2>
    4b9e:	03 c0       	rjmp	.+6      	; 0x4ba6 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4ba0:	8f 5f       	subi	r24, 0xFF	; 255
    4ba2:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4ba6:	27 de       	rcall	.-946    	; 0x47f6 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4ba8:	4f c0       	rjmp	.+158    	; 0x4c48 <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4baa:	90 91 f0 0d 	lds	r25, 0x0DF0	; 0x800df0 <_sExtra_Plot+0x6c>
    4bae:	91 11       	cpse	r25, r1
    4bb0:	bd c0       	rjmp	.+378    	; 0x4d2c <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4bb2:	20 91 8a 0b 	lds	r18, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4bb6:	30 91 8b 0b 	lds	r19, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4bba:	23 2b       	or	r18, r19
    4bbc:	09 f4       	brne	.+2      	; 0x4bc0 <_Z17Flush_Controllingv+0x1e0>
    4bbe:	b6 c0       	rjmp	.+364    	; 0x4d2c <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4bc0:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    4bc4:	91 11       	cpse	r25, r1
    4bc6:	03 c0       	rjmp	.+6      	; 0x4bce <_Z17Flush_Controllingv+0x1ee>
    4bc8:	88 23       	and	r24, r24
    4bca:	09 f4       	brne	.+2      	; 0x4bce <_Z17Flush_Controllingv+0x1ee>
    4bcc:	81 c0       	rjmp	.+258    	; 0x4cd0 <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4bce:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    4bd2:	81 30       	cpi	r24, 0x01	; 1
    4bd4:	09 f0       	breq	.+2      	; 0x4bd8 <_Z17Flush_Controllingv+0x1f8>
    4bd6:	1a c1       	rjmp	.+564    	; 0x4e0c <_Z17Flush_Controllingv+0x42c>
    4bd8:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    4bdc:	81 30       	cpi	r24, 0x01	; 1
    4bde:	09 f4       	brne	.+2      	; 0x4be2 <_Z17Flush_Controllingv+0x202>
    4be0:	42 c1       	rjmp	.+644    	; 0x4e66 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4be2:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    4be6:	85 30       	cpi	r24, 0x05	; 5
    4be8:	09 f4       	brne	.+2      	; 0x4bec <_Z17Flush_Controllingv+0x20c>
    4bea:	2d c1       	rjmp	.+602    	; 0x4e46 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4bec:	84 e0       	ldi	r24, 0x04	; 4
    4bee:	0e 94 83 c5 	call	0x18b06	; 0x18b06 <_Z26Start_Extra_Plot_Operationh>
    4bf2:	88 23       	and	r24, r24
    4bf4:	09 f4       	brne	.+2      	; 0x4bf8 <_Z17Flush_Controllingv+0x218>
    4bf6:	da c0       	rjmp	.+436    	; 0x4dac <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4bf8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4bfc:	81 30       	cpi	r24, 0x01	; 1
    4bfe:	51 f4       	brne	.+20     	; 0x4c14 <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4c00:	62 eb       	ldi	r22, 0xB2	; 178
    4c02:	72 e0       	ldi	r23, 0x02	; 2
    4c04:	85 e5       	ldi	r24, 0x55	; 85
    4c06:	94 e1       	ldi	r25, 0x14	; 20
    4c08:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4c0c:	85 e5       	ldi	r24, 0x55	; 85
    4c0e:	94 e1       	ldi	r25, 0x14	; 20
    4c10:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4c14:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    4c18:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <_sSchedules+0x26f>
    4c1c:	90 93 2e 14 	sts	0x142E, r25	; 0x80142e <_sRuble_Parameters+0xe4>
    4c20:	80 93 2d 14 	sts	0x142D, r24	; 0x80142d <_sRuble_Parameters+0xe3>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c24:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4c28:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4c2c:	90 62       	ori	r25, 0x20	; 32
    4c2e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4c32:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c36:	84 e0       	ldi	r24, 0x04	; 4
    4c38:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c3c:	82 e0       	ldi	r24, 0x02	; 2
    4c3e:	80 93 0a 0e 	sts	0x0E0A, r24	; 0x800e0a <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c42:	81 e0       	ldi	r24, 0x01	; 1
    4c44:	80 93 09 0e 	sts	0x0E09, r24	; 0x800e09 <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4c48:	6d e9       	ldi	r22, 0x9D	; 157
    4c4a:	7c e0       	ldi	r23, 0x0C	; 12
    4c4c:	87 eb       	ldi	r24, 0xB7	; 183
    4c4e:	9e e0       	ldi	r25, 0x0E	; 14
    4c50:	ba dd       	rcall	.-1164   	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4c52:	3a c0       	rjmp	.+116    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c54:	80 91 2d 14 	lds	r24, 0x142D	; 0x80142d <_sRuble_Parameters+0xe3>
    4c58:	90 91 2e 14 	lds	r25, 0x142E	; 0x80142e <_sRuble_Parameters+0xe4>
    4c5c:	89 2b       	or	r24, r25
    4c5e:	21 f4       	brne	.+8      	; 0x4c68 <_Z17Flush_Controllingv+0x288>
    4c60:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4c64:	88 23       	and	r24, r24
    4c66:	a1 f1       	breq	.+104    	; 0x4cd0 <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4c68:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe4>
    4c6c:	10 92 2d 14 	sts	0x142D, r1	; 0x80142d <_sRuble_Parameters+0xe3>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c70:	84 e0       	ldi	r24, 0x04	; 4
    4c72:	0e 94 3f c6 	call	0x18c7e	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c76:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4c7a:	88 23       	and	r24, r24
    4c7c:	09 f1       	breq	.+66     	; 0x4cc0 <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c7e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4c82:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4c86:	90 62       	ori	r25, 0x20	; 32
    4c88:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4c8c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c90:	84 e0       	ldi	r24, 0x04	; 4
    4c92:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c96:	82 e0       	ldi	r24, 0x02	; 2
    4c98:	80 93 0a 0e 	sts	0x0E0A, r24	; 0x800e0a <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4c9c:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4ca0:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ca4:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4ca8:	81 e0       	ldi	r24, 0x01	; 1
    4caa:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4cae:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xdf>
    4cb2:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe0>
    4cb6:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe1>
    4cba:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe2>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4cbe:	9b dd       	rcall	.-1226   	; 0x47f6 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4cc0:	10 92 36 14 	sts	0x1436, r1	; 0x801436 <_sRuble_Parameters+0xec>
    4cc4:	10 92 35 14 	sts	0x1435, r1	; 0x801435 <_sRuble_Parameters+0xeb>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4cc8:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4ccc:	81 11       	cpse	r24, r1
    4cce:	1d c0       	rjmp	.+58     	; 0x4d0a <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4cd0:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <__data_end>
    4cd4:	88 23       	and	r24, r24
    4cd6:	c9 f0       	breq	.+50     	; 0x4d0a <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4cd8:	80 91 17 09 	lds	r24, 0x0917	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4cdc:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ce0:	8d 33       	cpi	r24, 0x3D	; 61
    4ce2:	91 05       	cpc	r25, r1
    4ce4:	68 f0       	brcs	.+26     	; 0x4d00 <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4ce6:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cea:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4cee:	64 e0       	ldi	r22, 0x04	; 4
    4cf0:	80 e0       	ldi	r24, 0x00	; 0
    4cf2:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4cf6:	88 23       	and	r24, r24
    4cf8:	41 f0       	breq	.+16     	; 0x4d0a <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4cfa:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <__data_end>
    4cfe:	05 c0       	rjmp	.+10     	; 0x4d0a <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4d00:	01 96       	adiw	r24, 0x01	; 1
    4d02:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d06:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4d0a:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gRunning_Flush_Num>
    4d0e:	88 23       	and	r24, r24
    4d10:	21 f0       	breq	.+8      	; 0x4d1a <_Z17Flush_Controllingv+0x33a>
    4d12:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4d16:	98 17       	cp	r25, r24
    4d18:	40 f4       	brcc	.+16     	; 0x4d2a <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4d1a:	81 e0       	ldi	r24, 0x01	; 1
    4d1c:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d20:	6d e9       	ldi	r22, 0x9D	; 157
    4d22:	7c e0       	ldi	r23, 0x0C	; 12
    4d24:	87 eb       	ldi	r24, 0xB7	; 183
    4d26:	9e e0       	ldi	r25, 0x0E	; 14
    4d28:	4e cd       	rjmp	.-1380   	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d2a:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d2c:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d2e:	08 95       	ret
    4d30:	6d e9       	ldi	r22, 0x9D	; 157
    4d32:	7c e0       	ldi	r23, 0x0C	; 12
    4d34:	87 eb       	ldi	r24, 0xB7	; 183
    4d36:	9e e0       	ldi	r25, 0x0E	; 14
    4d38:	46 dd       	rcall	.-1396   	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d3a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4d3e:	81 30       	cpi	r24, 0x01	; 1
    4d40:	51 f4       	brne	.+20     	; 0x4d56 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d42:	64 ec       	ldi	r22, 0xC4	; 196
    4d44:	72 e0       	ldi	r23, 0x02	; 2
    4d46:	85 e5       	ldi	r24, 0x55	; 85
    4d48:	94 e1       	ldi	r25, 0x14	; 20
    4d4a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4d4e:	85 e5       	ldi	r24, 0x55	; 85
    4d50:	94 e1       	ldi	r25, 0x14	; 20
    4d52:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4d56:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    4d5a:	88 23       	and	r24, r24
    4d5c:	31 f0       	breq	.+12     	; 0x4d6a <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4d5e:	88 e5       	ldi	r24, 0x58	; 88
    4d60:	92 e0       	ldi	r25, 0x02	; 2
    4d62:	90 93 34 14 	sts	0x1434, r25	; 0x801434 <_sRuble_Parameters+0xea>
    4d66:	80 93 33 14 	sts	0x1433, r24	; 0x801433 <_sRuble_Parameters+0xe9>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4d6a:	84 e0       	ldi	r24, 0x04	; 4
    4d6c:	0e 94 3f c6 	call	0x18c7e	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4d70:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4d74:	88 23       	and	r24, r24
    4d76:	09 f4       	brne	.+2      	; 0x4d7a <_Z17Flush_Controllingv+0x39a>
    4d78:	ab cf       	rjmp	.-170    	; 0x4cd0 <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4d7a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4d7e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4d82:	90 62       	ori	r25, 0x20	; 32
    4d84:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4d88:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4d8c:	84 e0       	ldi	r24, 0x04	; 4
    4d8e:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4d92:	82 e0       	ldi	r24, 0x02	; 2
    4d94:	80 93 0a 0e 	sts	0x0E0A, r24	; 0x800e0a <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4d98:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4d9c:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4da0:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4da4:	81 e0       	ldi	r24, 0x01	; 1
    4da6:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
    4daa:	2e c0       	rjmp	.+92     	; 0x4e08 <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4dac:	88 e5       	ldi	r24, 0x58	; 88
    4dae:	92 e0       	ldi	r25, 0x02	; 2
    4db0:	90 93 34 14 	sts	0x1434, r25	; 0x801434 <_sRuble_Parameters+0xea>
    4db4:	80 93 33 14 	sts	0x1433, r24	; 0x801433 <_sRuble_Parameters+0xe9>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4db8:	84 e0       	ldi	r24, 0x04	; 4
    4dba:	0e 94 3f c6 	call	0x18c7e	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4dbe:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    4dc2:	88 23       	and	r24, r24
    4dc4:	09 f4       	brne	.+2      	; 0x4dc8 <_Z17Flush_Controllingv+0x3e8>
    4dc6:	84 cf       	rjmp	.-248    	; 0x4cd0 <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dc8:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    4dcc:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    4dd0:	90 62       	ori	r25, 0x20	; 32
    4dd2:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    4dd6:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4dda:	84 e0       	ldi	r24, 0x04	; 4
    4ddc:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4de0:	82 e0       	ldi	r24, 0x02	; 2
    4de2:	80 93 0a 0e 	sts	0x0E0A, r24	; 0x800e0a <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4de6:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4dea:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dee:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4df2:	81 e0       	ldi	r24, 0x01	; 1
    4df4:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4df8:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xdf>
    4dfc:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe0>
    4e00:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe1>
    4e04:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe2>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4e08:	f6 dc       	rcall	.-1556   	; 0x47f6 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4e0a:	5e cf       	rjmp	.-324    	; 0x4cc8 <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4e0c:	82 30       	cpi	r24, 0x02	; 2
    4e0e:	08 f4       	brcc	.+2      	; 0x4e12 <_Z17Flush_Controllingv+0x432>
    4e10:	e8 ce       	rjmp	.-560    	; 0x4be2 <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	02 97       	sbiw	r24, 0x02	; 2
    4e16:	2b e0       	ldi	r18, 0x0B	; 11
    4e18:	28 9f       	mul	r18, r24
    4e1a:	f0 01       	movw	r30, r0
    4e1c:	29 9f       	mul	r18, r25
    4e1e:	f0 0d       	add	r31, r0
    4e20:	11 24       	eor	r1, r1
    4e22:	ea 56       	subi	r30, 0x6A	; 106
    4e24:	f4 4f       	sbci	r31, 0xF4	; 244
    4e26:	80 85       	ldd	r24, Z+8	; 0x08
    4e28:	91 85       	ldd	r25, Z+9	; 0x09
    4e2a:	9c 01       	movw	r18, r24
    4e2c:	23 70       	andi	r18, 0x03	; 3
    4e2e:	33 27       	eor	r19, r19
    4e30:	23 30       	cpi	r18, 0x03	; 3
    4e32:	31 05       	cpc	r19, r1
    4e34:	c1 f4       	brne	.+48     	; 0x4e66 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e36:	82 ff       	sbrs	r24, 2
    4e38:	16 c0       	rjmp	.+44     	; 0x4e66 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e3a:	88 7b       	andi	r24, 0xB8	; 184
    4e3c:	92 70       	andi	r25, 0x02	; 2
    4e3e:	89 2b       	or	r24, r25
    4e40:	09 f4       	brne	.+2      	; 0x4e44 <_Z17Flush_Controllingv+0x464>
    4e42:	cf ce       	rjmp	.-610    	; 0x4be2 <_Z17Flush_Controllingv+0x202>
    4e44:	10 c0       	rjmp	.+32     	; 0x4e66 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4e46:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e4a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e4e:	89 2b       	or	r24, r25
    4e50:	09 f4       	brne	.+2      	; 0x4e54 <_Z17Flush_Controllingv+0x474>
    4e52:	cc ce       	rjmp	.-616    	; 0x4bec <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4e54:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e58:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e5c:	44 96       	adiw	r24, 0x14	; 20
    4e5e:	90 93 34 14 	sts	0x1434, r25	; 0x801434 <_sRuble_Parameters+0xea>
    4e62:	80 93 33 14 	sts	0x1433, r24	; 0x801433 <_sRuble_Parameters+0xe9>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4e66:	80 e0       	ldi	r24, 0x00	; 0
    4e68:	08 95       	ret

00004e6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4e6a:	2f 92       	push	r2
    4e6c:	3f 92       	push	r3
    4e6e:	4f 92       	push	r4
    4e70:	5f 92       	push	r5
    4e72:	6f 92       	push	r6
    4e74:	7f 92       	push	r7
    4e76:	8f 92       	push	r8
    4e78:	9f 92       	push	r9
    4e7a:	af 92       	push	r10
    4e7c:	bf 92       	push	r11
    4e7e:	cf 92       	push	r12
    4e80:	df 92       	push	r13
    4e82:	ef 92       	push	r14
    4e84:	ff 92       	push	r15
    4e86:	0f 93       	push	r16
    4e88:	1f 93       	push	r17
    4e8a:	cf 93       	push	r28
    4e8c:	df 93       	push	r29
    4e8e:	cd b7       	in	r28, 0x3d	; 61
    4e90:	de b7       	in	r29, 0x3e	; 62
    4e92:	e8 97       	sbiw	r28, 0x38	; 56
    4e94:	0f b6       	in	r0, 0x3f	; 63
    4e96:	f8 94       	cli
    4e98:	de bf       	out	0x3e, r29	; 62
    4e9a:	0f be       	out	0x3f, r0	; 63
    4e9c:	cd bf       	out	0x3d, r28	; 61
    4e9e:	38 2e       	mov	r3, r24
    4ea0:	46 2e       	mov	r4, r22
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4ea2:	88 e0       	ldi	r24, 0x08	; 8
    4ea4:	e3 e6       	ldi	r30, 0x63	; 99
    4ea6:	f2 e0       	ldi	r31, 0x02	; 2
    4ea8:	de 01       	movw	r26, r28
    4eaa:	9b 96       	adiw	r26, 0x2b	; 43
    4eac:	01 90       	ld	r0, Z+
    4eae:	0d 92       	st	X+, r0
    4eb0:	8a 95       	dec	r24
    4eb2:	e1 f7       	brne	.-8      	; 0x4eac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4eb4:	9e 01       	movw	r18, r28
    4eb6:	2f 5f       	subi	r18, 0xFF	; 255
    4eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    4eba:	39 01       	movw	r6, r18
    4ebc:	8a e2       	ldi	r24, 0x2A	; 42
    4ebe:	d9 01       	movw	r26, r18
    4ec0:	1d 92       	st	X+, r1
    4ec2:	8a 95       	dec	r24
    4ec4:	e9 f7       	brne	.-6      	; 0x4ec0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4ec6:	10 e0       	ldi	r17, 0x00	; 0
    4ec8:	a1 2e       	mov	r10, r17
    4eca:	1d e0       	ldi	r17, 0x0D	; 13
    4ecc:	b1 2e       	mov	r11, r17
    4ece:	d5 01       	movw	r26, r10
	total_valve_number = _kRESET;
    4ed0:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4ed2:	8c 91       	ld	r24, X
    4ed4:	81 50       	subi	r24, 0x01	; 1
    4ed6:	8e 30       	cpi	r24, 0x0E	; 14
    4ed8:	b0 f5       	brcc	.+108    	; 0x4f46 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdc>
    4eda:	cd 01       	movw	r24, r26
    4edc:	25 e0       	ldi	r18, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4ede:	39 81       	ldd	r19, Y+1	; 0x01
    4ee0:	33 23       	and	r19, r19
    4ee2:	e9 f0       	breq	.+58     	; 0x4f1e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb4>
    4ee4:	60 e0       	ldi	r22, 0x00	; 0
    4ee6:	30 e0       	ldi	r19, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4ee8:	03 2f       	mov	r16, r19
    4eea:	10 e0       	ldi	r17, 0x00	; 0
    4eec:	a3 01       	movw	r20, r6
    4eee:	40 0f       	add	r20, r16
    4ef0:	51 1f       	adc	r21, r17
    4ef2:	fa 01       	movw	r30, r20
    4ef4:	50 81       	ld	r21, Z
    4ef6:	55 23       	and	r21, r21
    4ef8:	b9 f0       	breq	.+46     	; 0x4f28 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4efa:	fc 01       	movw	r30, r24
    4efc:	41 81       	ldd	r20, Z+1	; 0x01
    4efe:	44 23       	and	r20, r20
    4f00:	61 f0       	breq	.+24     	; 0x4f1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb0>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4f02:	54 17       	cp	r21, r20
    4f04:	89 f0       	breq	.+34     	; 0x4f28 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4f06:	e2 e0       	ldi	r30, 0x02	; 2
    4f08:	f0 e0       	ldi	r31, 0x00	; 0
    4f0a:	ec 0f       	add	r30, r28
    4f0c:	fd 1f       	adc	r31, r29
    4f0e:	e0 0f       	add	r30, r16
    4f10:	f1 1f       	adc	r31, r17
    4f12:	40 81       	ld	r20, Z
    4f14:	41 11       	cpse	r20, r1
    4f16:	01 c0       	rjmp	.+2      	; 0x4f1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb0>
							{
								valve_number_not_match_flag = _kSET;
    4f18:	61 e0       	ldi	r22, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f1a:	3f 5f       	subi	r19, 0xFF	; 255
    4f1c:	e5 cf       	rjmp	.-54     	; 0x4ee8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7e>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f1e:	fc 01       	movw	r30, r24
    4f20:	31 81       	ldd	r19, Z+1	; 0x01
    4f22:	31 11       	cpse	r19, r1
    4f24:	03 c0       	rjmp	.+6      	; 0x4f2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc2>
    4f26:	0b c0       	rjmp	.+22     	; 0x4f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f28:	66 23       	and	r22, r22
    4f2a:	49 f0       	breq	.+18     	; 0x4f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f2c:	fc 01       	movw	r30, r24
    4f2e:	31 81       	ldd	r19, Z+1	; 0x01
    4f30:	36 31       	cpi	r19, 0x16	; 22
    4f32:	28 f4       	brcc	.+10     	; 0x4f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f34:	f3 01       	movw	r30, r6
    4f36:	ef 0d       	add	r30, r15
    4f38:	f1 1d       	adc	r31, r1
    4f3a:	30 83       	st	Z, r19
						total_valve_number++;
    4f3c:	f3 94       	inc	r15
    4f3e:	21 50       	subi	r18, 0x01	; 1
    4f40:	01 96       	adiw	r24, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4f42:	21 11       	cpse	r18, r1
    4f44:	cc cf       	rjmp	.-104    	; 0x4ede <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74>
    4f46:	16 96       	adiw	r26, 0x06	; 6
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4f48:	fd e0       	ldi	r31, 0x0D	; 13
    4f4a:	a4 35       	cpi	r26, 0x54	; 84
    4f4c:	bf 07       	cpc	r27, r31
    4f4e:	09 f6       	brne	.-126    	; 0x4ed2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x68>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4f50:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    4f54:	81 30       	cpi	r24, 0x01	; 1
    4f56:	59 f5       	brne	.+86     	; 0x4fae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x144>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4f58:	6e e0       	ldi	r22, 0x0E	; 14
    4f5a:	78 e0       	ldi	r23, 0x08	; 8
    4f5c:	85 e5       	ldi	r24, 0x55	; 85
    4f5e:	94 e1       	ldi	r25, 0x14	; 20
    4f60:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4f64:	85 e5       	ldi	r24, 0x55	; 85
    4f66:	94 e1       	ldi	r25, 0x14	; 20
    4f68:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4f6c:	e1 2c       	mov	r14, r1
    4f6e:	83 01       	movw	r16, r6
    4f70:	0e 0d       	add	r16, r14
    4f72:	11 1d       	adc	r17, r1
    4f74:	d8 01       	movw	r26, r16
    4f76:	8c 91       	ld	r24, X
    4f78:	88 23       	and	r24, r24
    4f7a:	c9 f0       	breq	.+50     	; 0x4fae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x144>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4f7c:	6c ef       	ldi	r22, 0xFC	; 252
    4f7e:	77 e0       	ldi	r23, 0x07	; 7
    4f80:	85 e5       	ldi	r24, 0x55	; 85
    4f82:	94 e1       	ldi	r25, 0x14	; 20
    4f84:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4f88:	f8 01       	movw	r30, r16
    4f8a:	60 81       	ld	r22, Z
    4f8c:	70 e0       	ldi	r23, 0x00	; 0
    4f8e:	4a e0       	ldi	r20, 0x0A	; 10
    4f90:	50 e0       	ldi	r21, 0x00	; 0
    4f92:	85 e5       	ldi	r24, 0x55	; 85
    4f94:	94 e1       	ldi	r25, 0x14	; 20
    4f96:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
			Serial.println();
    4f9a:	85 e5       	ldi	r24, 0x55	; 85
    4f9c:	94 e1       	ldi	r25, 0x14	; 20
    4f9e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    4fa2:	85 e5       	ldi	r24, 0x55	; 85
    4fa4:	94 e1       	ldi	r25, 0x14	; 20
    4fa6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    4faa:	e3 94       	inc	r14
    4fac:	e0 cf       	rjmp	.-64     	; 0x4f6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x104>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    4fae:	f3 e0       	ldi	r31, 0x03	; 3
    4fb0:	4f 12       	cpse	r4, r31
    4fb2:	73 c0       	rjmp	.+230    	; 0x509a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x230>
    4fb4:	a4 e8       	ldi	r26, 0x84	; 132
    4fb6:	bd e0       	ldi	r27, 0x0D	; 13
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    4fb8:	11 96       	adiw	r26, 0x01	; 1
    4fba:	8c 91       	ld	r24, X
    4fbc:	11 97       	sbiw	r26, 0x01	; 1
    4fbe:	85 56       	subi	r24, 0x65	; 101
    4fc0:	8e 30       	cpi	r24, 0x0E	; 14
    4fc2:	b0 f5       	brcc	.+108    	; 0x5030 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1c6>
    4fc4:	cd 01       	movw	r24, r26
    4fc6:	25 e0       	ldi	r18, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    4fc8:	39 81       	ldd	r19, Y+1	; 0x01
    4fca:	33 23       	and	r19, r19
    4fcc:	e9 f0       	breq	.+58     	; 0x5008 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x19e>
    4fce:	60 e0       	ldi	r22, 0x00	; 0
    4fd0:	30 e0       	ldi	r19, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    4fd2:	03 2f       	mov	r16, r19
    4fd4:	10 e0       	ldi	r17, 0x00	; 0
    4fd6:	a3 01       	movw	r20, r6
    4fd8:	40 0f       	add	r20, r16
    4fda:	51 1f       	adc	r21, r17
    4fdc:	fa 01       	movw	r30, r20
    4fde:	50 81       	ld	r21, Z
    4fe0:	55 23       	and	r21, r21
    4fe2:	b9 f0       	breq	.+46     	; 0x5012 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1a8>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    4fe4:	fc 01       	movw	r30, r24
    4fe6:	45 81       	ldd	r20, Z+5	; 0x05
    4fe8:	44 23       	and	r20, r20
    4fea:	61 f0       	breq	.+24     	; 0x5004 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x19a>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    4fec:	54 17       	cp	r21, r20
    4fee:	89 f0       	breq	.+34     	; 0x5012 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1a8>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4ff0:	e2 e0       	ldi	r30, 0x02	; 2
    4ff2:	f0 e0       	ldi	r31, 0x00	; 0
    4ff4:	ec 0f       	add	r30, r28
    4ff6:	fd 1f       	adc	r31, r29
    4ff8:	e0 0f       	add	r30, r16
    4ffa:	f1 1f       	adc	r31, r17
    4ffc:	40 81       	ld	r20, Z
    4ffe:	41 11       	cpse	r20, r1
    5000:	01 c0       	rjmp	.+2      	; 0x5004 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x19a>
								{
									valve_number_not_match_flag = _kSET;
    5002:	61 e0       	ldi	r22, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5004:	3f 5f       	subi	r19, 0xFF	; 255
    5006:	e5 cf       	rjmp	.-54     	; 0x4fd2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x168>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    5008:	fc 01       	movw	r30, r24
    500a:	35 81       	ldd	r19, Z+5	; 0x05
    500c:	31 11       	cpse	r19, r1
    500e:	03 c0       	rjmp	.+6      	; 0x5016 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ac>
    5010:	0b c0       	rjmp	.+22     	; 0x5028 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1be>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5012:	66 23       	and	r22, r22
    5014:	49 f0       	breq	.+18     	; 0x5028 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1be>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5016:	fc 01       	movw	r30, r24
    5018:	35 81       	ldd	r19, Z+5	; 0x05
    501a:	36 31       	cpi	r19, 0x16	; 22
    501c:	28 f4       	brcc	.+10     	; 0x5028 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1be>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    501e:	f3 01       	movw	r30, r6
    5020:	ef 0d       	add	r30, r15
    5022:	f1 1d       	adc	r31, r1
    5024:	30 83       	st	Z, r19
							total_valve_number++;
    5026:	f3 94       	inc	r15
    5028:	21 50       	subi	r18, 0x01	; 1
    502a:	01 96       	adiw	r24, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    502c:	21 11       	cpse	r18, r1
    502e:	cc cf       	rjmp	.-104    	; 0x4fc8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15e>
    5030:	5b 96       	adiw	r26, 0x1b	; 27
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    5032:	fe e0       	ldi	r31, 0x0E	; 14
    5034:	ae 3f       	cpi	r26, 0xFE	; 254
    5036:	bf 07       	cpc	r27, r31
    5038:	09 f0       	breq	.+2      	; 0x503c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d2>
    503a:	be cf       	rjmp	.-132    	; 0x4fb8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14e>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    503c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5040:	81 30       	cpi	r24, 0x01	; 1
    5042:	e1 f5       	brne	.+120    	; 0x50bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x252>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    5044:	6b ee       	ldi	r22, 0xEB	; 235
    5046:	77 e0       	ldi	r23, 0x07	; 7
    5048:	85 e5       	ldi	r24, 0x55	; 85
    504a:	94 e1       	ldi	r25, 0x14	; 20
    504c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5050:	85 e5       	ldi	r24, 0x55	; 85
    5052:	94 e1       	ldi	r25, 0x14	; 20
    5054:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    5058:	f1 2c       	mov	r15, r1
    505a:	83 01       	movw	r16, r6
    505c:	0f 0d       	add	r16, r15
    505e:	11 1d       	adc	r17, r1
    5060:	d8 01       	movw	r26, r16
    5062:	8c 91       	ld	r24, X
    5064:	88 23       	and	r24, r24
    5066:	e1 f0       	breq	.+56     	; 0x50a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x236>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    5068:	69 ed       	ldi	r22, 0xD9	; 217
    506a:	77 e0       	ldi	r23, 0x07	; 7
    506c:	85 e5       	ldi	r24, 0x55	; 85
    506e:	94 e1       	ldi	r25, 0x14	; 20
    5070:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    5074:	f8 01       	movw	r30, r16
    5076:	60 81       	ld	r22, Z
    5078:	70 e0       	ldi	r23, 0x00	; 0
    507a:	4a e0       	ldi	r20, 0x0A	; 10
    507c:	50 e0       	ldi	r21, 0x00	; 0
    507e:	85 e5       	ldi	r24, 0x55	; 85
    5080:	94 e1       	ldi	r25, 0x14	; 20
    5082:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
				Serial.println();
    5086:	85 e5       	ldi	r24, 0x55	; 85
    5088:	94 e1       	ldi	r25, 0x14	; 20
    508a:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    508e:	85 e5       	ldi	r24, 0x55	; 85
    5090:	94 e1       	ldi	r25, 0x14	; 20
    5092:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    5096:	f3 94       	inc	r15
    5098:	e0 cf       	rjmp	.-64     	; 0x505a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1f0>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    509a:	e5 e0       	ldi	r30, 0x05	; 5
    509c:	4e 12       	cpse	r4, r30
    509e:	67 c1       	rjmp	.+718    	; 0x536e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x504>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    50a0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    50a4:	81 30       	cpi	r24, 0x01	; 1
    50a6:	51 f4       	brne	.+20     	; 0x50bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x252>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    50a8:	6e ea       	ldi	r22, 0xAE	; 174
    50aa:	77 e0       	ldi	r23, 0x07	; 7
    50ac:	85 e5       	ldi	r24, 0x55	; 85
    50ae:	94 e1       	ldi	r25, 0x14	; 20
    50b0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50b4:	85 e5       	ldi	r24, 0x55	; 85
    50b6:	94 e1       	ldi	r25, 0x14	; 20
    50b8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    50bc:	07 eb       	ldi	r16, 0xB7	; 183
    50be:	1b e0       	ldi	r17, 0x0B	; 11
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    50c0:	b4 e0       	ldi	r27, 0x04	; 4
    50c2:	cb 2e       	mov	r12, r27
    50c4:	d1 2c       	mov	r13, r1
    50c6:	e1 2c       	mov	r14, r1
    50c8:	f1 2c       	mov	r15, r1
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    50ca:	d8 01       	movw	r26, r16
    50cc:	8c 91       	ld	r24, X
    50ce:	88 23       	and	r24, r24
    50d0:	29 f1       	breq	.+74     	; 0x511c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2b2>
    50d2:	51 2c       	mov	r5, r1
    50d4:	40 e0       	ldi	r20, 0x00	; 0
    50d6:	3a c0       	rjmp	.+116    	; 0x514c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e2>
    50d8:	9e 01       	movw	r18, r28
    50da:	25 5d       	subi	r18, 0xD5	; 213
    50dc:	3f 4f       	sbci	r19, 0xFF	; 255
    50de:	3c ab       	std	Y+52, r19	; 0x34
    50e0:	2b ab       	std	Y+51, r18	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    50e2:	99 24       	eor	r9, r9
    50e4:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    50e6:	a7 01       	movw	r20, r14
    50e8:	4f 5f       	subi	r20, 0xFF	; 255
    50ea:	5f 4f       	sbci	r21, 0xFF	; 255
    50ec:	5e ab       	std	Y+54, r21	; 0x36
    50ee:	4d ab       	std	Y+53, r20	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    50f0:	5d e0       	ldi	r21, 0x0D	; 13
    50f2:	5e 9d       	mul	r21, r14
    50f4:	c0 01       	movw	r24, r0
    50f6:	5f 9d       	mul	r21, r15
    50f8:	90 0d       	add	r25, r0
    50fa:	11 24       	eor	r1, r1
    50fc:	dc 01       	movw	r26, r24
    50fe:	a9 54       	subi	r26, 0x49	; 73
    5100:	b4 4f       	sbci	r27, 0xF4	; 244
    5102:	b8 af       	std	Y+56, r27	; 0x38
    5104:	af ab       	std	Y+55, r26	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    5106:	eb a9       	ldd	r30, Y+51	; 0x33
    5108:	fc a9       	ldd	r31, Y+52	; 0x34
    510a:	81 91       	ld	r24, Z+
    510c:	fc ab       	std	Y+52, r31	; 0x34
    510e:	eb ab       	std	Y+51, r30	; 0x33
    5110:	85 21       	and	r24, r5
    5112:	49 f5       	brne	.+82     	; 0x5166 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fc>
    5114:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    5116:	f4 e0       	ldi	r31, 0x04	; 4
    5118:	9f 12       	cpse	r9, r31
    511a:	f5 cf       	rjmp	.-22     	; 0x5106 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x29c>
    511c:	bf ef       	ldi	r27, 0xFF	; 255
    511e:	eb 1a       	sub	r14, r27
    5120:	fb 0a       	sbc	r15, r27
    5122:	03 5f       	subi	r16, 0xF3	; 243
    5124:	1f 4f       	sbci	r17, 0xFF	; 255
    5126:	e3 e0       	ldi	r30, 0x03	; 3
    5128:	ce 0e       	add	r12, r30
    512a:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    512c:	f6 e0       	ldi	r31, 0x06	; 6
    512e:	ef 16       	cp	r14, r31
    5130:	f1 04       	cpc	r15, r1
    5132:	59 f6       	brne	.-106    	; 0x50ca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x260>
    5134:	d2 c0       	rjmp	.+420    	; 0x52da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x470>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5136:	28 17       	cp	r18, r24
    5138:	39 07       	cpc	r19, r25
    513a:	11 f4       	brne	.+4      	; 0x5140 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2d6>
						{
							total_valve_number |= hex_array[j];
    513c:	50 81       	ld	r21, Z
    513e:	55 2a       	or	r5, r21
    5140:	01 96       	adiw	r24, 0x01	; 1
    5142:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    5144:	c8 16       	cp	r12, r24
    5146:	d9 06       	cpc	r13, r25
    5148:	b1 f7       	brne	.-20     	; 0x5136 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2cc>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    514a:	4f 5f       	subi	r20, 0xFF	; 255
    514c:	f3 01       	movw	r30, r6
    514e:	e4 0f       	add	r30, r20
    5150:	f1 1d       	adc	r31, r1
    5152:	20 81       	ld	r18, Z
    5154:	22 23       	and	r18, r18
    5156:	09 f4       	brne	.+2      	; 0x515a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2f0>
    5158:	bf cf       	rjmp	.-130    	; 0x50d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x26e>
    515a:	c6 01       	movw	r24, r12
    515c:	03 97       	sbiw	r24, 0x03	; 3
    515e:	fe 01       	movw	r30, r28
    5160:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5162:	30 e0       	ldi	r19, 0x00	; 0
    5164:	e8 cf       	rjmp	.-48     	; 0x5136 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2cc>
    5166:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    5168:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    516a:	ac e7       	ldi	r26, 0x7C	; 124
    516c:	b3 e1       	ldi	r27, 0x13	; 19
    516e:	e4 e1       	ldi	r30, 0x14	; 20
    5170:	1d 92       	st	X+, r1
    5172:	ea 95       	dec	r30
    5174:	e9 f7       	brne	.-6      	; 0x5170 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x306>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    5176:	d8 01       	movw	r26, r16
    5178:	11 96       	adiw	r26, 0x01	; 1
    517a:	8c 91       	ld	r24, X
    517c:	11 97       	sbiw	r26, 0x01	; 1
    517e:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    5182:	12 96       	adiw	r26, 0x02	; 2
    5184:	8c 91       	ld	r24, X
    5186:	12 97       	sbiw	r26, 0x02	; 2
    5188:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    518c:	13 96       	adiw	r26, 0x03	; 3
    518e:	8c 91       	ld	r24, X
    5190:	13 97       	sbiw	r26, 0x03	; 3
    5192:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    5196:	14 96       	adiw	r26, 0x04	; 4
    5198:	8c 91       	ld	r24, X
    519a:	14 97       	sbiw	r26, 0x04	; 4
    519c:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    51a0:	15 96       	adiw	r26, 0x05	; 5
    51a2:	8c 91       	ld	r24, X
    51a4:	15 97       	sbiw	r26, 0x05	; 5
    51a6:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    51aa:	16 96       	adiw	r26, 0x06	; 6
    51ac:	8c 91       	ld	r24, X
    51ae:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    51b2:	b2 e0       	ldi	r27, 0x02	; 2
    51b4:	b0 93 82 13 	sts	0x1382, r27	; 0x801382 <_sRuble_Parameters+0x38>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    51b8:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    51bc:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    51c0:	90 92 87 13 	sts	0x1387, r9	; 0x801387 <_sRuble_Parameters+0x3d>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    51c4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    51c8:	81 30       	cpi	r24, 0x01	; 1
    51ca:	39 f5       	brne	.+78     	; 0x521a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3b0>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    51cc:	6b e8       	ldi	r22, 0x8B	; 139
    51ce:	77 e0       	ldi	r23, 0x07	; 7
    51d0:	85 e5       	ldi	r24, 0x55	; 85
    51d2:	94 e1       	ldi	r25, 0x14	; 20
    51d4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    51d8:	4a e0       	ldi	r20, 0x0A	; 10
    51da:	50 e0       	ldi	r21, 0x00	; 0
    51dc:	6d a9       	ldd	r22, Y+53	; 0x35
    51de:	7e a9       	ldd	r23, Y+54	; 0x36
    51e0:	85 e5       	ldi	r24, 0x55	; 85
    51e2:	94 e1       	ldi	r25, 0x14	; 20
    51e4:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    51e8:	85 e5       	ldi	r24, 0x55	; 85
    51ea:	94 e1       	ldi	r25, 0x14	; 20
    51ec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    51f0:	66 e7       	ldi	r22, 0x76	; 118
    51f2:	77 e0       	ldi	r23, 0x07	; 7
    51f4:	85 e5       	ldi	r24, 0x55	; 85
    51f6:	94 e1       	ldi	r25, 0x14	; 20
    51f8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    51fc:	4c e0       	ldi	r20, 0x0C	; 12
    51fe:	50 e0       	ldi	r21, 0x00	; 0
    5200:	6c e7       	ldi	r22, 0x7C	; 124
    5202:	73 e1       	ldi	r23, 0x13	; 19
    5204:	85 e5       	ldi	r24, 0x55	; 85
    5206:	94 e1       	ldi	r25, 0x14	; 20
    5208:	be da       	rcall	.-2692   	; 0x4786 <_ZN5Print5writeEPKcj>
								Serial.println();
    520a:	85 e5       	ldi	r24, 0x55	; 85
    520c:	94 e1       	ldi	r25, 0x14	; 20
    520e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    5212:	85 e5       	ldi	r24, 0x55	; 85
    5214:	94 e1       	ldi	r25, 0x14	; 20
    5216:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    521a:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    521e:	8c e0       	ldi	r24, 0x0C	; 12
    5220:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
// 								{
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5224:	88 eb       	ldi	r24, 0xB8	; 184
    5226:	9b e0       	ldi	r25, 0x0B	; 11
    5228:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    522c:	88 23       	and	r24, r24
    522e:	09 f4       	brne	.+2      	; 0x5232 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3c8>
    5230:	41 c0       	rjmp	.+130    	; 0x52b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x44a>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    5232:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
								
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5236:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5238:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    523a:	28 2f       	mov	r18, r24
    523c:	30 e0       	ldi	r19, 0x00	; 0
    523e:	ef a9       	ldd	r30, Y+55	; 0x37
    5240:	f8 ad       	ldd	r31, Y+56	; 0x38
    5242:	e2 0f       	add	r30, r18
    5244:	f3 1f       	adc	r31, r19
    5246:	d9 01       	movw	r26, r18
    5248:	a0 57       	subi	r26, 0x70	; 112
    524a:	bc 4e       	sbci	r27, 0xEC	; 236
    524c:	41 81       	ldd	r20, Z+1	; 0x01
    524e:	2c 91       	ld	r18, X
    5250:	42 17       	cp	r20, r18
    5252:	11 f0       	breq	.+4      	; 0x5258 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3ee>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    5254:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5256:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5258:	9f 5f       	subi	r25, 0xFF	; 255
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    525a:	8f 5f       	subi	r24, 0xFF	; 255
    525c:	86 30       	cpi	r24, 0x06	; 6
    525e:	68 f3       	brcs	.-38     	; 0x523a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3d0>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5260:	96 30       	cpi	r25, 0x06	; 6
    5262:	c9 f4       	brne	.+50     	; 0x5296 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42c>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5264:	21 e0       	ldi	r18, 0x01	; 1
    5266:	f8 01       	movw	r30, r16
    5268:	23 87       	std	Z+11, r18	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    526a:	20 91 98 13 	lds	r18, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    526e:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5270:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    5274:	90 e0       	ldi	r25, 0x00	; 0
    5276:	98 2f       	mov	r25, r24
    5278:	88 27       	eor	r24, r24
    527a:	30 91 9a 13 	lds	r19, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    527e:	83 2b       	or	r24, r19
    5280:	91 87       	std	Z+9, r25	; 0x09
    5282:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5284:	22 23       	and	r18, r18
    5286:	e9 f0       	breq	.+58     	; 0x52c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x458>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5288:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    528c:	81 30       	cpi	r24, 0x01	; 1
    528e:	d9 f4       	brne	.+54     	; 0x52c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45c>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    5290:	61 e5       	ldi	r22, 0x51	; 81
    5292:	77 e0       	ldi	r23, 0x07	; 7
    5294:	06 c0       	rjmp	.+12     	; 0x52a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x438>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5296:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    529a:	81 30       	cpi	r24, 0x01	; 1
    529c:	a1 f4       	brne	.+40     	; 0x52c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45c>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    529e:	60 e3       	ldi	r22, 0x30	; 48
    52a0:	77 e0       	ldi	r23, 0x07	; 7
    52a2:	85 e5       	ldi	r24, 0x55	; 85
    52a4:	94 e1       	ldi	r25, 0x14	; 20
    52a6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    52aa:	85 e5       	ldi	r24, 0x55	; 85
    52ac:	94 e1       	ldi	r25, 0x14	; 20
    52ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    52b2:	09 c0       	rjmp	.+18     	; 0x52c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45c>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    52b4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    52b8:	81 30       	cpi	r24, 0x01	; 1
    52ba:	29 f4       	brne	.+10     	; 0x52c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45c>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    52bc:	69 e0       	ldi	r22, 0x09	; 9
    52be:	77 e0       	ldi	r23, 0x07	; 7
    52c0:	f0 cf       	rjmp	.-32     	; 0x52a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x438>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    52c2:	e2 e0       	ldi	r30, 0x02	; 2
    52c4:	8e 2e       	mov	r8, r30
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    52c6:	68 ee       	ldi	r22, 0xE8	; 232
    52c8:	73 e0       	ldi	r23, 0x03	; 3
    52ca:	80 e0       	ldi	r24, 0x00	; 0
    52cc:	90 e0       	ldi	r25, 0x00	; 0
    52ce:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    52d2:	32 e0       	ldi	r19, 0x02	; 2
    52d4:	83 12       	cpse	r8, r19
    52d6:	48 cf       	rjmp	.-368    	; 0x5168 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fe>
    52d8:	1d cf       	rjmp	.-454    	; 0x5114 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2aa>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    52da:	43 e0       	ldi	r20, 0x03	; 3
    52dc:	44 16       	cp	r4, r20
    52de:	09 f4       	brne	.+2      	; 0x52e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x478>
    52e0:	df c7       	rjmp	.+4030   	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
    52e2:	55 e0       	ldi	r21, 0x05	; 5
    52e4:	45 12       	cpse	r4, r21
    52e6:	43 c0       	rjmp	.+134    	; 0x536e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x504>
    52e8:	7e e0       	ldi	r23, 0x0E	; 14
    52ea:	f7 2e       	mov	r15, r23
    52ec:	00 e0       	ldi	r16, 0x00	; 0
    52ee:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    52f0:	f5 01       	movw	r30, r10
    52f2:	e0 0f       	add	r30, r16
    52f4:	f1 1f       	adc	r31, r17
    52f6:	e1 81       	ldd	r30, Z+1	; 0x01
    52f8:	e6 31       	cpi	r30, 0x16	; 22
    52fa:	68 f0       	brcs	.+26     	; 0x5316 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ac>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    52fc:	f0 e0       	ldi	r31, 0x00	; 0
    52fe:	ec 53       	subi	r30, 0x3C	; 60
    5300:	fc 4e       	sbci	r31, 0xEC	; 236
    5302:	61 e0       	ldi	r22, 0x01	; 1
    5304:	80 81       	ld	r24, Z
    5306:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
						_kDELAY_MS(200);
    530a:	68 ec       	ldi	r22, 0xC8	; 200
    530c:	70 e0       	ldi	r23, 0x00	; 0
    530e:	80 e0       	ldi	r24, 0x00	; 0
    5310:	90 e0       	ldi	r25, 0x00	; 0
    5312:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5316:	0f 5f       	subi	r16, 0xFF	; 255
    5318:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    531a:	05 30       	cpi	r16, 0x05	; 5
    531c:	11 05       	cpc	r17, r1
    531e:	41 f7       	brne	.-48     	; 0x52f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x486>
    5320:	fa 94       	dec	r15
    5322:	86 e0       	ldi	r24, 0x06	; 6
    5324:	a8 0e       	add	r10, r24
    5326:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    5328:	f1 10       	cpse	r15, r1
    532a:	e0 cf       	rjmp	.-64     	; 0x52ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x482>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    532c:	80 91 d6 0d 	lds	r24, 0x0DD6	; 0x800dd6 <_sExtra_Plot+0x52>
    5330:	88 36       	cpi	r24, 0x68	; 104
    5332:	09 f0       	breq	.+2      	; 0x5336 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4cc>
    5334:	b5 c7       	rjmp	.+3946   	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
    5336:	0a ed       	ldi	r16, 0xDA	; 218
    5338:	1d e0       	ldi	r17, 0x0D	; 13
    533a:	6f ed       	ldi	r22, 0xDF	; 223
    533c:	e6 2e       	mov	r14, r22
    533e:	6d e0       	ldi	r22, 0x0D	; 13
    5340:	f6 2e       	mov	r15, r22
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5342:	d8 01       	movw	r26, r16
    5344:	ed 91       	ld	r30, X+
    5346:	8d 01       	movw	r16, r26
    5348:	e6 31       	cpi	r30, 0x16	; 22
    534a:	68 f0       	brcs	.+26     	; 0x5366 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4fc>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    534c:	f0 e0       	ldi	r31, 0x00	; 0
    534e:	ec 53       	subi	r30, 0x3C	; 60
    5350:	fc 4e       	sbci	r31, 0xEC	; 236
    5352:	61 e0       	ldi	r22, 0x01	; 1
    5354:	80 81       	ld	r24, Z
    5356:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
						_kDELAY_MS(200);
    535a:	68 ec       	ldi	r22, 0xC8	; 200
    535c:	70 e0       	ldi	r23, 0x00	; 0
    535e:	80 e0       	ldi	r24, 0x00	; 0
    5360:	90 e0       	ldi	r25, 0x00	; 0
    5362:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5366:	e0 16       	cp	r14, r16
    5368:	f1 06       	cpc	r15, r17
    536a:	59 f7       	brne	.-42     	; 0x5342 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4d8>
    536c:	99 c7       	rjmp	.+3890   	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
	
	
	
	
	
	if(on_off == _kON)
    536e:	b1 e0       	ldi	r27, 0x01	; 1
    5370:	4b 12       	cpse	r4, r27
    5372:	1f c1       	rjmp	.+574    	; 0x55b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x748>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5374:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5378:	81 30       	cpi	r24, 0x01	; 1
    537a:	51 f4       	brne	.+20     	; 0x5390 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x526>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    537c:	6e ed       	ldi	r22, 0xDE	; 222
    537e:	76 e0       	ldi	r23, 0x06	; 6
    5380:	85 e5       	ldi	r24, 0x55	; 85
    5382:	94 e1       	ldi	r25, 0x14	; 20
    5384:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5388:	85 e5       	ldi	r24, 0x55	; 85
    538a:	94 e1       	ldi	r25, 0x14	; 20
    538c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5390:	07 eb       	ldi	r16, 0xB7	; 183
    5392:	1b e0       	ldi	r17, 0x0B	; 11
    5394:	44 e0       	ldi	r20, 0x04	; 4
    5396:	c4 2e       	mov	r12, r20
    5398:	d1 2c       	mov	r13, r1
    539a:	e1 2c       	mov	r14, r1
    539c:	f1 2c       	mov	r15, r1
						{
							data_send_counter++;
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    539e:	54 e1       	ldi	r21, 0x14	; 20
    53a0:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    53a2:	f8 01       	movw	r30, r16
    53a4:	82 85       	ldd	r24, Z+10	; 0x0a
    53a6:	88 23       	and	r24, r24
    53a8:	21 f1       	breq	.+72     	; 0x53f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x588>
    53aa:	91 2c       	mov	r9, r1
    53ac:	40 e0       	ldi	r20, 0x00	; 0
    53ae:	39 c0       	rjmp	.+114    	; 0x5422 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5b8>
    53b0:	ae 01       	movw	r20, r28
    53b2:	45 5d       	subi	r20, 0xD5	; 213
    53b4:	5f 4f       	sbci	r21, 0xFF	; 255
    53b6:	5c ab       	std	Y+52, r21	; 0x34
    53b8:	4b ab       	std	Y+51, r20	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    53ba:	bb 24       	eor	r11, r11
    53bc:	b3 94       	inc	r11
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    53be:	c7 01       	movw	r24, r14
    53c0:	01 96       	adiw	r24, 0x01	; 1
    53c2:	9e ab       	std	Y+54, r25	; 0x36
    53c4:	8d ab       	std	Y+53, r24	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    53c6:	ad e0       	ldi	r26, 0x0D	; 13
    53c8:	ae 9d       	mul	r26, r14
    53ca:	c0 01       	movw	r24, r0
    53cc:	af 9d       	mul	r26, r15
    53ce:	90 0d       	add	r25, r0
    53d0:	11 24       	eor	r1, r1
    53d2:	fc 01       	movw	r30, r24
    53d4:	e9 54       	subi	r30, 0x49	; 73
    53d6:	f4 4f       	sbci	r31, 0xF4	; 244
    53d8:	f8 af       	std	Y+56, r31	; 0x38
    53da:	ef ab       	std	Y+55, r30	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    53dc:	ab a9       	ldd	r26, Y+51	; 0x33
    53de:	bc a9       	ldd	r27, Y+52	; 0x34
    53e0:	8d 91       	ld	r24, X+
    53e2:	bc ab       	std	Y+52, r27	; 0x34
    53e4:	ab ab       	std	Y+51, r26	; 0x33
    53e6:	89 21       	and	r24, r9
    53e8:	49 f5       	brne	.+82     	; 0x543c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5d2>
    53ea:	b3 94       	inc	r11
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    53ec:	b4 e0       	ldi	r27, 0x04	; 4
    53ee:	bb 12       	cpse	r11, r27
    53f0:	f5 cf       	rjmp	.-22     	; 0x53dc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x572>
    53f2:	ff ef       	ldi	r31, 0xFF	; 255
    53f4:	ef 1a       	sub	r14, r31
    53f6:	ff 0a       	sbc	r15, r31
    53f8:	03 5f       	subi	r16, 0xF3	; 243
    53fa:	1f 4f       	sbci	r17, 0xFF	; 255
    53fc:	23 e0       	ldi	r18, 0x03	; 3
    53fe:	c2 0e       	add	r12, r18
    5400:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    5402:	37 e0       	ldi	r19, 0x07	; 7
    5404:	e3 16       	cp	r14, r19
    5406:	f1 04       	cpc	r15, r1
    5408:	61 f6       	brne	.-104    	; 0x53a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x538>
    540a:	d7 c0       	rjmp	.+430    	; 0x55ba <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x750>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    540c:	28 17       	cp	r18, r24
    540e:	39 07       	cpc	r19, r25
    5410:	11 f4       	brne	.+4      	; 0x5416 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ac>
						{
							total_valve_number |= hex_array[j];
    5412:	50 81       	ld	r21, Z
    5414:	95 2a       	or	r9, r21
    5416:	01 96       	adiw	r24, 0x01	; 1
    5418:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    541a:	c8 16       	cp	r12, r24
    541c:	d9 06       	cpc	r13, r25
    541e:	b1 f7       	brne	.-20     	; 0x540c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5a2>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5420:	4f 5f       	subi	r20, 0xFF	; 255
    5422:	f3 01       	movw	r30, r6
    5424:	e4 0f       	add	r30, r20
    5426:	f1 1d       	adc	r31, r1
    5428:	20 81       	ld	r18, Z
    542a:	22 23       	and	r18, r18
    542c:	09 f4       	brne	.+2      	; 0x5430 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5c6>
    542e:	c0 cf       	rjmp	.-128    	; 0x53b0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x546>
    5430:	c6 01       	movw	r24, r12
    5432:	03 97       	sbiw	r24, 0x03	; 3
    5434:	fe 01       	movw	r30, r28
    5436:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5438:	30 e0       	ldi	r19, 0x00	; 0
    543a:	e8 cf       	rjmp	.-48     	; 0x540c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5a2>
    543c:	a1 2c       	mov	r10, r1
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    543e:	55 24       	eor	r5, r5
    5440:	53 94       	inc	r5
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    5442:	a3 94       	inc	r10
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5444:	ec e7       	ldi	r30, 0x7C	; 124
    5446:	f3 e1       	ldi	r31, 0x13	; 19
    5448:	28 2d       	mov	r18, r8
    544a:	11 92       	st	Z+, r1
    544c:	2a 95       	dec	r18
    544e:	e9 f7       	brne	.-6      	; 0x544a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5e0>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    5450:	d8 01       	movw	r26, r16
    5452:	11 96       	adiw	r26, 0x01	; 1
    5454:	8c 91       	ld	r24, X
    5456:	11 97       	sbiw	r26, 0x01	; 1
    5458:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    545c:	12 96       	adiw	r26, 0x02	; 2
    545e:	8c 91       	ld	r24, X
    5460:	12 97       	sbiw	r26, 0x02	; 2
    5462:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5466:	13 96       	adiw	r26, 0x03	; 3
    5468:	8c 91       	ld	r24, X
    546a:	13 97       	sbiw	r26, 0x03	; 3
    546c:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    5470:	14 96       	adiw	r26, 0x04	; 4
    5472:	8c 91       	ld	r24, X
    5474:	14 97       	sbiw	r26, 0x04	; 4
    5476:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    547a:	15 96       	adiw	r26, 0x05	; 5
    547c:	8c 91       	ld	r24, X
    547e:	15 97       	sbiw	r26, 0x05	; 5
    5480:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5484:	16 96       	adiw	r26, 0x06	; 6
    5486:	8c 91       	ld	r24, X
    5488:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    548c:	b2 e0       	ldi	r27, 0x02	; 2
    548e:	b0 93 82 13 	sts	0x1382, r27	; 0x801382 <_sRuble_Parameters+0x38>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5492:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    5496:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    549a:	b0 92 87 13 	sts	0x1387, r11	; 0x801387 <_sRuble_Parameters+0x3d>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    549e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    54a2:	81 30       	cpi	r24, 0x01	; 1
    54a4:	39 f5       	brne	.+78     	; 0x54f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x68a>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    54a6:	6a eb       	ldi	r22, 0xBA	; 186
    54a8:	76 e0       	ldi	r23, 0x06	; 6
    54aa:	85 e5       	ldi	r24, 0x55	; 85
    54ac:	94 e1       	ldi	r25, 0x14	; 20
    54ae:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    54b2:	4a e0       	ldi	r20, 0x0A	; 10
    54b4:	50 e0       	ldi	r21, 0x00	; 0
    54b6:	6d a9       	ldd	r22, Y+53	; 0x35
    54b8:	7e a9       	ldd	r23, Y+54	; 0x36
    54ba:	85 e5       	ldi	r24, 0x55	; 85
    54bc:	94 e1       	ldi	r25, 0x14	; 20
    54be:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    54c2:	85 e5       	ldi	r24, 0x55	; 85
    54c4:	94 e1       	ldi	r25, 0x14	; 20
    54c6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    54ca:	65 ea       	ldi	r22, 0xA5	; 165
    54cc:	76 e0       	ldi	r23, 0x06	; 6
    54ce:	85 e5       	ldi	r24, 0x55	; 85
    54d0:	94 e1       	ldi	r25, 0x14	; 20
    54d2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    54d6:	46 e0       	ldi	r20, 0x06	; 6
    54d8:	50 e0       	ldi	r21, 0x00	; 0
    54da:	6c e7       	ldi	r22, 0x7C	; 124
    54dc:	73 e1       	ldi	r23, 0x13	; 19
    54de:	85 e5       	ldi	r24, 0x55	; 85
    54e0:	94 e1       	ldi	r25, 0x14	; 20
    54e2:	51 d9       	rcall	.-3422   	; 0x4786 <_ZN5Print5writeEPKcj>
								Serial.println();
    54e4:	85 e5       	ldi	r24, 0x55	; 85
    54e6:	94 e1       	ldi	r25, 0x14	; 20
    54e8:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    54ec:	85 e5       	ldi	r24, 0x55	; 85
    54ee:	94 e1       	ldi	r25, 0x14	; 20
    54f0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    54f4:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    54f8:	8c e0       	ldi	r24, 0x0C	; 12
    54fa:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
// 								{
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    54fe:	88 eb       	ldi	r24, 0xB8	; 184
    5500:	9b e0       	ldi	r25, 0x0B	; 11
    5502:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    5506:	88 23       	and	r24, r24
    5508:	09 f4       	brne	.+2      	; 0x550c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6a2>
    550a:	40 c0       	rjmp	.+128    	; 0x558c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x722>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    550c:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
// 									}
// 								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5510:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5512:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5514:	28 2f       	mov	r18, r24
    5516:	30 e0       	ldi	r19, 0x00	; 0
    5518:	ef a9       	ldd	r30, Y+55	; 0x37
    551a:	f8 ad       	ldd	r31, Y+56	; 0x38
    551c:	e2 0f       	add	r30, r18
    551e:	f3 1f       	adc	r31, r19
    5520:	d9 01       	movw	r26, r18
    5522:	a0 57       	subi	r26, 0x70	; 112
    5524:	bc 4e       	sbci	r27, 0xEC	; 236
    5526:	41 81       	ldd	r20, Z+1	; 0x01
    5528:	2c 91       	ld	r18, X
    552a:	42 17       	cp	r20, r18
    552c:	11 f0       	breq	.+4      	; 0x5532 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c8>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    552e:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5530:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5532:	9f 5f       	subi	r25, 0xFF	; 255
// 								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5534:	8f 5f       	subi	r24, 0xFF	; 255
    5536:	86 30       	cpi	r24, 0x06	; 6
    5538:	68 f3       	brcs	.-38     	; 0x5514 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6aa>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    553a:	96 30       	cpi	r25, 0x06	; 6
    553c:	c1 f4       	brne	.+48     	; 0x556e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x704>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    553e:	f8 01       	movw	r30, r16
    5540:	53 86       	std	Z+11, r5	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5542:	20 91 98 13 	lds	r18, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    5546:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5548:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    554c:	90 e0       	ldi	r25, 0x00	; 0
    554e:	98 2f       	mov	r25, r24
    5550:	88 27       	eor	r24, r24
    5552:	30 91 9a 13 	lds	r19, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    5556:	83 2b       	or	r24, r19
    5558:	91 87       	std	Z+9, r25	; 0x09
    555a:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    555c:	22 23       	and	r18, r18
    555e:	e9 f0       	breq	.+58     	; 0x559a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x730>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5560:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5564:	81 30       	cpi	r24, 0x01	; 1
    5566:	d9 f4       	brne	.+54     	; 0x559e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x734>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    5568:	6f e7       	ldi	r22, 0x7F	; 127
    556a:	76 e0       	ldi	r23, 0x06	; 6
    556c:	06 c0       	rjmp	.+12     	; 0x557a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x710>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    556e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5572:	81 30       	cpi	r24, 0x01	; 1
    5574:	a1 f4       	brne	.+40     	; 0x559e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x734>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    5576:	6d e5       	ldi	r22, 0x5D	; 93
    5578:	76 e0       	ldi	r23, 0x06	; 6
    557a:	85 e5       	ldi	r24, 0x55	; 85
    557c:	94 e1       	ldi	r25, 0x14	; 20
    557e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5582:	85 e5       	ldi	r24, 0x55	; 85
    5584:	94 e1       	ldi	r25, 0x14	; 20
    5586:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    558a:	09 c0       	rjmp	.+18     	; 0x559e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x734>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    558c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5590:	81 30       	cpi	r24, 0x01	; 1
    5592:	29 f4       	brne	.+10     	; 0x559e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x734>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    5594:	6f e2       	ldi	r22, 0x2F	; 47
    5596:	76 e0       	ldi	r23, 0x06	; 6
    5598:	f0 cf       	rjmp	.-32     	; 0x557a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x710>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    559a:	82 e0       	ldi	r24, 0x02	; 2
    559c:	a8 2e       	mov	r10, r24
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    559e:	68 ee       	ldi	r22, 0xE8	; 232
    55a0:	73 e0       	ldi	r23, 0x03	; 3
    55a2:	80 e0       	ldi	r24, 0x00	; 0
    55a4:	90 e0       	ldi	r25, 0x00	; 0
    55a6:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    55aa:	f2 e0       	ldi	r31, 0x02	; 2
    55ac:	af 12       	cpse	r10, r31
    55ae:	49 cf       	rjmp	.-366    	; 0x5442 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5d8>
    55b0:	1c cf       	rjmp	.-456    	; 0x53ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x580>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    55b2:	21 e0       	ldi	r18, 0x01	; 1
    55b4:	24 15       	cp	r18, r4
    55b6:	08 f4       	brcc	.+2      	; 0x55ba <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x750>
    55b8:	72 c6       	rjmp	.+3300   	; 0x629e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1434>
    55ba:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    55be:	3e e0       	ldi	r19, 0x0E	; 14
    55c0:	33 15       	cp	r19, r3
    55c2:	08 f4       	brcc	.+2      	; 0x55c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75c>
    55c4:	63 c3       	rjmp	.+1734   	; 0x5c8c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe22>
    55c6:	46 e0       	ldi	r20, 0x06	; 6
    55c8:	34 9e       	mul	r3, r20
    55ca:	70 01       	movw	r14, r0
    55cc:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    55ce:	81 30       	cpi	r24, 0x01	; 1
    55d0:	c9 f5       	brne	.+114    	; 0x5644 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7da>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    55d2:	61 e2       	ldi	r22, 0x21	; 33
    55d4:	76 e0       	ldi	r23, 0x06	; 6
    55d6:	85 e5       	ldi	r24, 0x55	; 85
    55d8:	94 e1       	ldi	r25, 0x14	; 20
    55da:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    55de:	85 e5       	ldi	r24, 0x55	; 85
    55e0:	94 e1       	ldi	r25, 0x14	; 20
    55e2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    55e6:	00 e0       	ldi	r16, 0x00	; 0
    55e8:	10 e0       	ldi	r17, 0x00	; 0
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    55ea:	c3 2c       	mov	r12, r3
    55ec:	d1 2c       	mov	r13, r1
    55ee:	51 e0       	ldi	r21, 0x01	; 1
    55f0:	c5 1a       	sub	r12, r21
    55f2:	d1 08       	sbc	r13, r1
    55f4:	f8 01       	movw	r30, r16
    55f6:	ee 0d       	add	r30, r14
    55f8:	ff 1d       	adc	r31, r15
    55fa:	e5 50       	subi	r30, 0x05	; 5
    55fc:	f3 4f       	sbci	r31, 0xF3	; 243
    55fe:	4a e0       	ldi	r20, 0x0A	; 10
    5600:	50 e0       	ldi	r21, 0x00	; 0
    5602:	60 81       	ld	r22, Z
    5604:	85 e5       	ldi	r24, 0x55	; 85
    5606:	94 e1       	ldi	r25, 0x14	; 20
    5608:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    560c:	6f e1       	ldi	r22, 0x1F	; 31
    560e:	76 e0       	ldi	r23, 0x06	; 6
    5610:	85 e5       	ldi	r24, 0x55	; 85
    5612:	94 e1       	ldi	r25, 0x14	; 20
    5614:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    5618:	0f 5f       	subi	r16, 0xFF	; 255
    561a:	1f 4f       	sbci	r17, 0xFF	; 255
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    561c:	05 30       	cpi	r16, 0x05	; 5
    561e:	11 05       	cpc	r17, r1
    5620:	49 f7       	brne	.-46     	; 0x55f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78a>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    5622:	64 e0       	ldi	r22, 0x04	; 4
    5624:	76 e0       	ldi	r23, 0x06	; 6
    5626:	85 e5       	ldi	r24, 0x55	; 85
    5628:	94 e1       	ldi	r25, 0x14	; 20
    562a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    562e:	4a e0       	ldi	r20, 0x0A	; 10
    5630:	50 e0       	ldi	r21, 0x00	; 0
    5632:	b6 01       	movw	r22, r12
    5634:	85 e5       	ldi	r24, 0x55	; 85
    5636:	94 e1       	ldi	r25, 0x14	; 20
    5638:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    563c:	85 e5       	ldi	r24, 0x55	; 85
    563e:	94 e1       	ldi	r25, 0x14	; 20
    5640:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5644:	c7 01       	movw	r24, r14
    5646:	85 50       	subi	r24, 0x05	; 5
    5648:	93 4f       	sbci	r25, 0xF3	; 243
    564a:	7c 01       	movw	r14, r24
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    564c:	05 e0       	ldi	r16, 0x05	; 5
    564e:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5650:	c3 2c       	mov	r12, r3
    5652:	d1 2c       	mov	r13, r1
    5654:	91 e0       	ldi	r25, 0x01	; 1
    5656:	c9 1a       	sub	r12, r25
    5658:	d1 08       	sbc	r13, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    565a:	aa 24       	eor	r10, r10
    565c:	a3 94       	inc	r10
    565e:	94 2d       	mov	r25, r4
    5660:	9a 25       	eor	r25, r10
    5662:	91 70       	andi	r25, 0x01	; 1
    5664:	9b ab       	std	Y+51, r25	; 0x33
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5666:	fc e7       	ldi	r31, 0x7C	; 124
    5668:	6f 2e       	mov	r6, r31
    566a:	f3 e1       	ldi	r31, 0x13	; 19
    566c:	7f 2e       	mov	r7, r31
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    566e:	a7 e0       	ldi	r26, 0x07	; 7
    5670:	5a 2e       	mov	r5, r26
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5672:	bd e0       	ldi	r27, 0x0D	; 13
    5674:	bb 2e       	mov	r11, r27
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    5676:	41 10       	cpse	r4, r1
    5678:	1f c0       	rjmp	.+62     	; 0x56b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84e>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    567a:	20 91 a5 13 	lds	r18, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    567e:	32 16       	cp	r3, r18
    5680:	c9 f0       	breq	.+50     	; 0x56b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84a>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    5682:	22 23       	and	r18, r18
    5684:	c9 f0       	breq	.+50     	; 0x56b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84e>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    5686:	d7 01       	movw	r26, r14
    5688:	9c 91       	ld	r25, X
    568a:	b6 e0       	ldi	r27, 0x06	; 6
    568c:	2b 9f       	mul	r18, r27
    568e:	90 01       	movw	r18, r0
    5690:	11 24       	eor	r1, r1
    5692:	40 e0       	ldi	r20, 0x00	; 0
    5694:	50 e0       	ldi	r21, 0x00	; 0
    5696:	80 e0       	ldi	r24, 0x00	; 0
    5698:	fa 01       	movw	r30, r20
    569a:	e2 0f       	add	r30, r18
    569c:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    569e:	e5 50       	subi	r30, 0x05	; 5
    56a0:	f3 4f       	sbci	r31, 0xF3	; 243
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    56a2:	60 81       	ld	r22, Z
    56a4:	96 13       	cpse	r25, r22
    56a6:	01 c0       	rjmp	.+2      	; 0x56aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x840>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    56a8:	81 e0       	ldi	r24, 0x01	; 1
    56aa:	4f 5f       	subi	r20, 0xFF	; 255
    56ac:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    56ae:	45 30       	cpi	r20, 0x05	; 5
    56b0:	51 05       	cpc	r21, r1
    56b2:	91 f7       	brne	.-28     	; 0x5698 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x82e>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    56b4:	81 11       	cpse	r24, r1
    56b6:	d9 c2       	rjmp	.+1458   	; 0x5c6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe00>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    56b8:	f7 01       	movw	r30, r14
    56ba:	10 81       	ld	r17, Z
    56bc:	8f ef       	ldi	r24, 0xFF	; 255
    56be:	81 0f       	add	r24, r17
    56c0:	85 31       	cpi	r24, 0x15	; 21
    56c2:	08 f0       	brcs	.+2      	; 0x56c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x85c>
    56c4:	a7 c2       	rjmp	.+1358   	; 0x5c14 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdaa>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56c6:	14 30       	cpi	r17, 0x04	; 4
    56c8:	a0 f0       	brcs	.+40     	; 0x56f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x888>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56ca:	81 2f       	mov	r24, r17
    56cc:	63 e0       	ldi	r22, 0x03	; 3
    56ce:	0e 94 2a e7 	call	0x1ce54	; 0x1ce54 <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    56d2:	6b ea       	ldi	r22, 0xAB	; 171
    56d4:	16 9f       	mul	r17, r22
    56d6:	61 2d       	mov	r22, r1
    56d8:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56da:	99 23       	and	r25, r25
    56dc:	31 f0       	breq	.+12     	; 0x56ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x880>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    56de:	66 95       	lsr	r22
    56e0:	99 24       	eor	r9, r9
    56e2:	93 94       	inc	r9
    56e4:	96 0e       	add	r9, r22
    56e6:	19 2f       	mov	r17, r25
    56e8:	06 c0       	rjmp	.+12     	; 0x56f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x88c>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    56ea:	96 2e       	mov	r9, r22
    56ec:	96 94       	lsr	r9
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    56ee:	13 e0       	ldi	r17, 0x03	; 3
    56f0:	02 c0       	rjmp	.+4      	; 0x56f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x88c>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    56f2:	99 24       	eor	r9, r9
    56f4:	93 94       	inc	r9
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    56f6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    56fa:	81 30       	cpi	r24, 0x01	; 1
    56fc:	89 f4       	brne	.+34     	; 0x5720 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8b6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    56fe:	60 ef       	ldi	r22, 0xF0	; 240
    5700:	75 e0       	ldi	r23, 0x05	; 5
    5702:	85 e5       	ldi	r24, 0x55	; 85
    5704:	94 e1       	ldi	r25, 0x14	; 20
    5706:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    570a:	4a e0       	ldi	r20, 0x0A	; 10
    570c:	50 e0       	ldi	r21, 0x00	; 0
    570e:	69 2d       	mov	r22, r9
    5710:	85 e5       	ldi	r24, 0x55	; 85
    5712:	94 e1       	ldi	r25, 0x14	; 20
    5714:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    5718:	85 e5       	ldi	r24, 0x55	; 85
    571a:	94 e1       	ldi	r25, 0x14	; 20
    571c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5720:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
    5724:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5726:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    572a:	84 e1       	ldi	r24, 0x14	; 20
    572c:	d3 01       	movw	r26, r6
    572e:	1d 92       	st	X+, r1
    5730:	8a 95       	dec	r24
    5732:	e9 f7       	brne	.-6      	; 0x572e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8c4>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5734:	69 2d       	mov	r22, r9
    5736:	70 e0       	ldi	r23, 0x00	; 0
    5738:	61 50       	subi	r22, 0x01	; 1
    573a:	71 09       	sbc	r23, r1
    573c:	56 9e       	mul	r5, r22
    573e:	c0 01       	movw	r24, r0
    5740:	57 9e       	mul	r5, r23
    5742:	90 0d       	add	r25, r0
    5744:	11 24       	eor	r1, r1
    5746:	86 5b       	subi	r24, 0xB6	; 182
    5748:	9c 4e       	sbci	r25, 0xEC	; 236
    574a:	fc 01       	movw	r30, r24
    574c:	e1 5a       	subi	r30, 0xA1	; 161
    574e:	ff 4f       	sbci	r31, 0xFF	; 255
    5750:	20 81       	ld	r18, Z
    5752:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5756:	31 96       	adiw	r30, 0x01	; 1
    5758:	20 81       	ld	r18, Z
    575a:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    575e:	31 96       	adiw	r30, 0x01	; 1
    5760:	20 81       	ld	r18, Z
    5762:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5766:	31 96       	adiw	r30, 0x01	; 1
    5768:	20 81       	ld	r18, Z
    576a:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    576e:	31 96       	adiw	r30, 0x01	; 1
    5770:	20 81       	ld	r18, Z
    5772:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5776:	31 96       	adiw	r30, 0x01	; 1
    5778:	20 81       	ld	r18, Z
    577a:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    577e:	22 e0       	ldi	r18, 0x02	; 2
    5780:	20 93 82 13 	sts	0x1382, r18	; 0x801382 <_sRuble_Parameters+0x38>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5784:	40 92 83 13 	sts	0x1383, r4	; 0x801383 <_sRuble_Parameters+0x39>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5788:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    578c:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5790:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
    5794:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5798:	10 93 87 13 	sts	0x1387, r17	; 0x801387 <_sRuble_Parameters+0x3d>
    579c:	40 e0       	ldi	r20, 0x00	; 0
    579e:	50 e0       	ldi	r21, 0x00	; 0
    57a0:	14 2f       	mov	r17, r20
    57a2:	81 2c       	mov	r8, r1
    57a4:	91 2c       	mov	r9, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    57a6:	b4 9e       	mul	r11, r20
    57a8:	b0 01       	movw	r22, r0
    57aa:	b5 9e       	mul	r11, r21
    57ac:	70 0d       	add	r23, r0
    57ae:	11 24       	eor	r1, r1
    57b0:	69 54       	subi	r22, 0x49	; 73
    57b2:	74 4f       	sbci	r23, 0xF4	; 244
    57b4:	29 2d       	mov	r18, r9
    57b6:	30 e0       	ldi	r19, 0x00	; 0
    57b8:	fb 01       	movw	r30, r22
    57ba:	e2 0f       	add	r30, r18
    57bc:	f3 1f       	adc	r31, r19
    57be:	28 0f       	add	r18, r24
    57c0:	39 1f       	adc	r19, r25
    57c2:	d9 01       	movw	r26, r18
    57c4:	a1 5a       	subi	r26, 0xA1	; 161
    57c6:	bf 4f       	sbci	r27, 0xFF	; 255
    57c8:	31 81       	ldd	r19, Z+1	; 0x01
    57ca:	2c 91       	ld	r18, X
    57cc:	32 17       	cp	r19, r18
    57ce:	19 f0       	breq	.+6      	; 0x57d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x96c>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    57d0:	81 2c       	mov	r8, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    57d2:	e6 e0       	ldi	r30, 0x06	; 6
    57d4:	9e 2e       	mov	r9, r30
										id_len = _kRESET;
									}
									id_len++;
    57d6:	83 94       	inc	r8
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    57d8:	93 94       	inc	r9
    57da:	b5 e0       	ldi	r27, 0x05	; 5
    57dc:	b9 15       	cp	r27, r9
    57de:	50 f7       	brcc	.-44     	; 0x57b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x94a>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    57e0:	e6 e0       	ldi	r30, 0x06	; 6
    57e2:	8e 16       	cp	r8, r30
    57e4:	31 f0       	breq	.+12     	; 0x57f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x988>
    57e6:	4f 5f       	subi	r20, 0xFF	; 255
    57e8:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    57ea:	47 30       	cpi	r20, 0x07	; 7
    57ec:	51 05       	cpc	r21, r1
    57ee:	c1 f6       	brne	.-80     	; 0x57a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x936>
    57f0:	12 2d       	mov	r17, r2
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    57f2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    57f6:	81 30       	cpi	r24, 0x01	; 1
    57f8:	89 f4       	brne	.+34     	; 0x581c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b2>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    57fa:	6a ed       	ldi	r22, 0xDA	; 218
    57fc:	75 e0       	ldi	r23, 0x05	; 5
    57fe:	85 e5       	ldi	r24, 0x55	; 85
    5800:	94 e1       	ldi	r25, 0x14	; 20
    5802:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5806:	4a e0       	ldi	r20, 0x0A	; 10
    5808:	50 e0       	ldi	r21, 0x00	; 0
    580a:	61 2f       	mov	r22, r17
    580c:	85 e5       	ldi	r24, 0x55	; 85
    580e:	94 e1       	ldi	r25, 0x14	; 20
    5810:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    5814:	85 e5       	ldi	r24, 0x55	; 85
    5816:	94 e1       	ldi	r25, 0x14	; 20
    5818:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
// 										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 									}
// 								}
								data_send_counter++;
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    581c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5820:	81 30       	cpi	r24, 0x01	; 1
    5822:	51 f4       	brne	.+20     	; 0x5838 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9ce>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    5824:	66 eb       	ldi	r22, 0xB6	; 182
    5826:	75 e0       	ldi	r23, 0x05	; 5
    5828:	85 e5       	ldi	r24, 0x55	; 85
    582a:	94 e1       	ldi	r25, 0x14	; 20
    582c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    5830:	85 e5       	ldi	r24, 0x55	; 85
    5832:	94 e1       	ldi	r25, 0x14	; 20
    5834:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    5838:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    583c:	8c e0       	ldi	r24, 0x0C	; 12
    583e:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5842:	88 eb       	ldi	r24, 0xB8	; 184
    5844:	9b e0       	ldi	r25, 0x0B	; 11
    5846:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    584a:	88 23       	and	r24, r24
    584c:	09 f4       	brne	.+2      	; 0x5850 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9e6>
    584e:	83 c1       	rjmp	.+774    	; 0x5b56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcec>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    5850:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
    5854:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5858:	88 23       	and	r24, r24
    585a:	09 f4       	brne	.+2      	; 0x585e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9f4>
    585c:	27 c1       	rjmp	.+590    	; 0x5aac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc42>
    585e:	81 2e       	mov	r8, r17
    5860:	91 2c       	mov	r9, r1
// 												Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 											}
// 										}
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5862:	91 30       	cpi	r25, 0x01	; 1
    5864:	89 f5       	brne	.+98     	; 0x58c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa5e>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5866:	60 ea       	ldi	r22, 0xA0	; 160
    5868:	75 e0       	ldi	r23, 0x05	; 5
    586a:	85 e5       	ldi	r24, 0x55	; 85
    586c:	94 e1       	ldi	r25, 0x14	; 20
    586e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5872:	4a e0       	ldi	r20, 0x0A	; 10
    5874:	50 e0       	ldi	r21, 0x00	; 0
    5876:	60 e9       	ldi	r22, 0x90	; 144
    5878:	73 e1       	ldi	r23, 0x13	; 19
    587a:	85 e5       	ldi	r24, 0x55	; 85
    587c:	94 e1       	ldi	r25, 0x14	; 20
    587e:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
											Serial.println();
    5882:	85 e5       	ldi	r24, 0x55	; 85
    5884:	94 e1       	ldi	r25, 0x14	; 20
    5886:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    588a:	85 e5       	ldi	r24, 0x55	; 85
    588c:	94 e1       	ldi	r25, 0x14	; 20
    588e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5892:	62 e8       	ldi	r22, 0x82	; 130
    5894:	75 e0       	ldi	r23, 0x05	; 5
    5896:	85 e5       	ldi	r24, 0x55	; 85
    5898:	94 e1       	ldi	r25, 0x14	; 20
    589a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    589e:	b8 9c       	mul	r11, r8
    58a0:	b0 01       	movw	r22, r0
    58a2:	b9 9c       	mul	r11, r9
    58a4:	70 0d       	add	r23, r0
    58a6:	11 24       	eor	r1, r1
    58a8:	68 54       	subi	r22, 0x48	; 72
    58aa:	74 4f       	sbci	r23, 0xF4	; 244
    58ac:	47 e0       	ldi	r20, 0x07	; 7
    58ae:	50 e0       	ldi	r21, 0x00	; 0
    58b0:	85 e5       	ldi	r24, 0x55	; 85
    58b2:	94 e1       	ldi	r25, 0x14	; 20
    58b4:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
											Serial.println();
    58b8:	85 e5       	ldi	r24, 0x55	; 85
    58ba:	94 e1       	ldi	r25, 0x14	; 20
    58bc:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    58c0:	85 e5       	ldi	r24, 0x55	; 85
    58c2:	94 e1       	ldi	r25, 0x14	; 20
    58c4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    58c8:	a0 e9       	ldi	r26, 0x90	; 144
    58ca:	b3 e1       	ldi	r27, 0x13	; 19
    58cc:	fd e0       	ldi	r31, 0x0D	; 13
    58ce:	1f 9f       	mul	r17, r31
    58d0:	90 01       	movw	r18, r0
    58d2:	11 24       	eor	r1, r1
    58d4:	80 e0       	ldi	r24, 0x00	; 0
    58d6:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    58d8:	4d 91       	ld	r20, X+
    58da:	f9 01       	movw	r30, r18
    58dc:	e8 0f       	add	r30, r24
    58de:	f9 1f       	adc	r31, r25
    58e0:	e9 54       	subi	r30, 0x49	; 73
    58e2:	f4 4f       	sbci	r31, 0xF4	; 244
    58e4:	51 81       	ldd	r21, Z+1	; 0x01
    58e6:	54 17       	cp	r21, r20
    58e8:	09 f4       	brne	.+2      	; 0x58ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa82>
    58ea:	62 c0       	rjmp	.+196    	; 0x59b0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb46>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    58ec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    58f0:	81 30       	cpi	r24, 0x01	; 1
    58f2:	51 f4       	brne	.+20     	; 0x5908 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa9e>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    58f4:	67 e5       	ldi	r22, 0x57	; 87
    58f6:	75 e0       	ldi	r23, 0x05	; 5
    58f8:	85 e5       	ldi	r24, 0x55	; 85
    58fa:	94 e1       	ldi	r25, 0x14	; 20
    58fc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    5900:	85 e5       	ldi	r24, 0x55	; 85
    5902:	94 e1       	ldi	r25, 0x14	; 20
    5904:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5908:	86 e0       	ldi	r24, 0x06	; 6
    590a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    590e:	84 e6       	ldi	r24, 0x64	; 100
    5910:	90 e0       	ldi	r25, 0x00	; 0
    5912:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    5916:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    591a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    591e:	81 30       	cpi	r24, 0x01	; 1
    5920:	31 f4       	brne	.+12     	; 0x592e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xac4>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    5922:	6a e3       	ldi	r22, 0x3A	; 58
    5924:	75 e0       	ldi	r23, 0x05	; 5
    5926:	85 e5       	ldi	r24, 0x55	; 85
    5928:	94 e1       	ldi	r25, 0x14	; 20
    592a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    592e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5932:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5936:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    593a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    593e:	a0 62       	ori	r26, 0x20	; 32
    5940:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5944:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5948:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    594c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5950:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5954:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    5958:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    595c:	82 60       	ori	r24, 0x02	; 2
    595e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    5962:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    5966:	86 e0       	ldi	r24, 0x06	; 6
    5968:	8c 9d       	mul	r24, r12
    596a:	80 01       	movw	r16, r0
    596c:	8d 9d       	mul	r24, r13
    596e:	10 0d       	add	r17, r0
    5970:	11 24       	eor	r1, r1
    5972:	e1 2c       	mov	r14, r1
    5974:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5976:	f8 01       	movw	r30, r16
    5978:	ee 0d       	add	r30, r14
    597a:	ff 1d       	adc	r31, r15
    597c:	e0 50       	subi	r30, 0x00	; 0
    597e:	f3 4f       	sbci	r31, 0xF3	; 243
    5980:	e1 81       	ldd	r30, Z+1	; 0x01
    5982:	e6 31       	cpi	r30, 0x16	; 22
    5984:	68 f0       	brcs	.+26     	; 0x59a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb36>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5986:	f0 e0       	ldi	r31, 0x00	; 0
    5988:	ec 53       	subi	r30, 0x3C	; 60
    598a:	fc 4e       	sbci	r31, 0xEC	; 236
    598c:	61 e0       	ldi	r22, 0x01	; 1
    598e:	80 81       	ld	r24, Z
    5990:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
															_kDELAY_MS(200);
    5994:	68 ec       	ldi	r22, 0xC8	; 200
    5996:	70 e0       	ldi	r23, 0x00	; 0
    5998:	80 e0       	ldi	r24, 0x00	; 0
    599a:	90 e0       	ldi	r25, 0x00	; 0
    599c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    59a0:	2f ef       	ldi	r18, 0xFF	; 255
    59a2:	e2 1a       	sub	r14, r18
    59a4:	f2 0a       	sbc	r15, r18
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    59a6:	35 e0       	ldi	r19, 0x05	; 5
    59a8:	e3 16       	cp	r14, r19
    59aa:	f1 04       	cpc	r15, r1
    59ac:	21 f7       	brne	.-56     	; 0x5976 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb0c>
    59ae:	28 c4       	rjmp	.+2128   	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
    59b0:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    59b2:	86 30       	cpi	r24, 0x06	; 6
    59b4:	91 05       	cpc	r25, r1
    59b6:	09 f0       	breq	.+2      	; 0x59ba <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb50>
    59b8:	8f cf       	rjmp	.-226    	; 0x58d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa6e>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    59ba:	b8 9c       	mul	r11, r8
    59bc:	f0 01       	movw	r30, r0
    59be:	b9 9c       	mul	r11, r9
    59c0:	f0 0d       	add	r31, r0
    59c2:	11 24       	eor	r1, r1
    59c4:	e9 54       	subi	r30, 0x49	; 73
    59c6:	f4 4f       	sbci	r31, 0xF4	; 244
    59c8:	a3 86       	std	Z+11, r10	; 0x0b
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    59ca:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    59ce:	90 e0       	ldi	r25, 0x00	; 0
    59d0:	98 2f       	mov	r25, r24
    59d2:	88 27       	eor	r24, r24
    59d4:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    59d8:	82 2b       	or	r24, r18
    59da:	91 87       	std	Z+9, r25	; 0x09
    59dc:	80 87       	std	Z+8, r24	; 0x08
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    59de:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    59e2:	48 16       	cp	r4, r24
    59e4:	09 f4       	brne	.+2      	; 0x59e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb7e>
    59e6:	0e c1       	rjmp	.+540    	; 0x5c04 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd9a>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    59e8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    59ec:	81 30       	cpi	r24, 0x01	; 1
    59ee:	51 f4       	brne	.+20     	; 0x5a04 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb9a>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    59f0:	67 e2       	ldi	r22, 0x27	; 39
    59f2:	75 e0       	ldi	r23, 0x05	; 5
    59f4:	85 e5       	ldi	r24, 0x55	; 85
    59f6:	94 e1       	ldi	r25, 0x14	; 20
    59f8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    59fc:	85 e5       	ldi	r24, 0x55	; 85
    59fe:	94 e1       	ldi	r25, 0x14	; 20
    5a00:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5a04:	86 e0       	ldi	r24, 0x06	; 6
    5a06:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5a0a:	84 e6       	ldi	r24, 0x64	; 100
    5a0c:	90 e0       	ldi	r25, 0x00	; 0
    5a0e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    5a12:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a16:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5a1a:	81 30       	cpi	r24, 0x01	; 1
    5a1c:	31 f4       	brne	.+12     	; 0x5a2a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbc0>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5a1e:	6a e0       	ldi	r22, 0x0A	; 10
    5a20:	75 e0       	ldi	r23, 0x05	; 5
    5a22:	85 e5       	ldi	r24, 0x55	; 85
    5a24:	94 e1       	ldi	r25, 0x14	; 20
    5a26:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5a2a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5a2e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5a32:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5a36:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5a3a:	a0 62       	ori	r26, 0x20	; 32
    5a3c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5a40:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5a44:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5a48:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5a4c:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5a50:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    5a54:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    5a58:	82 60       	ori	r24, 0x02	; 2
    5a5a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    5a5e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    5a62:	86 e0       	ldi	r24, 0x06	; 6
    5a64:	8c 9d       	mul	r24, r12
    5a66:	80 01       	movw	r16, r0
    5a68:	8d 9d       	mul	r24, r13
    5a6a:	10 0d       	add	r17, r0
    5a6c:	11 24       	eor	r1, r1
    5a6e:	e1 2c       	mov	r14, r1
    5a70:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5a72:	f8 01       	movw	r30, r16
    5a74:	ee 0d       	add	r30, r14
    5a76:	ff 1d       	adc	r31, r15
    5a78:	e0 50       	subi	r30, 0x00	; 0
    5a7a:	f3 4f       	sbci	r31, 0xF3	; 243
    5a7c:	e1 81       	ldd	r30, Z+1	; 0x01
    5a7e:	e6 31       	cpi	r30, 0x16	; 22
    5a80:	68 f0       	brcs	.+26     	; 0x5a9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc32>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5a82:	f0 e0       	ldi	r31, 0x00	; 0
    5a84:	ec 53       	subi	r30, 0x3C	; 60
    5a86:	fc 4e       	sbci	r31, 0xEC	; 236
    5a88:	61 e0       	ldi	r22, 0x01	; 1
    5a8a:	80 81       	ld	r24, Z
    5a8c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
														_kDELAY_MS(200);
    5a90:	68 ec       	ldi	r22, 0xC8	; 200
    5a92:	70 e0       	ldi	r23, 0x00	; 0
    5a94:	80 e0       	ldi	r24, 0x00	; 0
    5a96:	90 e0       	ldi	r25, 0x00	; 0
    5a98:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5a9c:	4f ef       	ldi	r20, 0xFF	; 255
    5a9e:	e4 1a       	sub	r14, r20
    5aa0:	f4 0a       	sbc	r15, r20
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5aa2:	55 e0       	ldi	r21, 0x05	; 5
    5aa4:	e5 16       	cp	r14, r21
    5aa6:	f1 04       	cpc	r15, r1
    5aa8:	21 f7       	brne	.-56     	; 0x5a72 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc08>
    5aaa:	aa c3       	rjmp	.+1876   	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5aac:	91 30       	cpi	r25, 0x01	; 1
    5aae:	51 f4       	brne	.+20     	; 0x5ac4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc5a>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5ab0:	6f ec       	ldi	r22, 0xCF	; 207
    5ab2:	74 e0       	ldi	r23, 0x04	; 4
    5ab4:	85 e5       	ldi	r24, 0x55	; 85
    5ab6:	94 e1       	ldi	r25, 0x14	; 20
    5ab8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5abc:	85 e5       	ldi	r24, 0x55	; 85
    5abe:	94 e1       	ldi	r25, 0x14	; 20
    5ac0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5ac4:	26 e0       	ldi	r18, 0x06	; 6
    5ac6:	20 93 48 13 	sts	0x1348, r18	; 0x801348 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5aca:	84 e6       	ldi	r24, 0x64	; 100
    5acc:	90 e0       	ldi	r25, 0x00	; 0
    5ace:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    5ad2:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5ad6:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5ada:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5ade:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5ae2:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5ae6:	a0 62       	ori	r26, 0x20	; 32
    5ae8:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5aec:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5af0:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5af4:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5af8:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5afc:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    5b00:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    5b04:	82 60       	ori	r24, 0x02	; 2
    5b06:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    5b0a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    5b0e:	2c 9d       	mul	r18, r12
    5b10:	80 01       	movw	r16, r0
    5b12:	2d 9d       	mul	r18, r13
    5b14:	10 0d       	add	r17, r0
    5b16:	11 24       	eor	r1, r1
    5b18:	e1 2c       	mov	r14, r1
    5b1a:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b1c:	f8 01       	movw	r30, r16
    5b1e:	ee 0d       	add	r30, r14
    5b20:	ff 1d       	adc	r31, r15
    5b22:	e0 50       	subi	r30, 0x00	; 0
    5b24:	f3 4f       	sbci	r31, 0xF3	; 243
    5b26:	e1 81       	ldd	r30, Z+1	; 0x01
    5b28:	e6 31       	cpi	r30, 0x16	; 22
    5b2a:	68 f0       	brcs	.+26     	; 0x5b46 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcdc>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b2c:	f0 e0       	ldi	r31, 0x00	; 0
    5b2e:	ec 53       	subi	r30, 0x3C	; 60
    5b30:	fc 4e       	sbci	r31, 0xEC	; 236
    5b32:	61 e0       	ldi	r22, 0x01	; 1
    5b34:	80 81       	ld	r24, Z
    5b36:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
													_kDELAY_MS(200);
    5b3a:	68 ec       	ldi	r22, 0xC8	; 200
    5b3c:	70 e0       	ldi	r23, 0x00	; 0
    5b3e:	80 e0       	ldi	r24, 0x00	; 0
    5b40:	90 e0       	ldi	r25, 0x00	; 0
    5b42:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5b46:	8f ef       	ldi	r24, 0xFF	; 255
    5b48:	e8 1a       	sub	r14, r24
    5b4a:	f8 0a       	sbc	r15, r24
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b4c:	95 e0       	ldi	r25, 0x05	; 5
    5b4e:	e9 16       	cp	r14, r25
    5b50:	f1 04       	cpc	r15, r1
    5b52:	21 f7       	brne	.-56     	; 0x5b1c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcb2>
    5b54:	55 c3       	rjmp	.+1706   	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b56:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5b5a:	81 30       	cpi	r24, 0x01	; 1
    5b5c:	51 f4       	brne	.+20     	; 0x5b72 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd08>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5b5e:	64 e9       	ldi	r22, 0x94	; 148
    5b60:	74 e0       	ldi	r23, 0x04	; 4
    5b62:	85 e5       	ldi	r24, 0x55	; 85
    5b64:	94 e1       	ldi	r25, 0x14	; 20
    5b66:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5b6a:	85 e5       	ldi	r24, 0x55	; 85
    5b6c:	94 e1       	ldi	r25, 0x14	; 20
    5b6e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b72:	26 e0       	ldi	r18, 0x06	; 6
    5b74:	20 93 48 13 	sts	0x1348, r18	; 0x801348 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5b78:	84 e6       	ldi	r24, 0x64	; 100
    5b7a:	90 e0       	ldi	r25, 0x00	; 0
    5b7c:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    5b80:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5b84:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5b88:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5b8c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5b90:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5b94:	a0 62       	ori	r26, 0x20	; 32
    5b96:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5b9a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5b9e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5ba2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5ba6:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5baa:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    5bae:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    5bb2:	82 60       	ori	r24, 0x02	; 2
    5bb4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    5bb8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    5bbc:	2c 9d       	mul	r18, r12
    5bbe:	80 01       	movw	r16, r0
    5bc0:	2d 9d       	mul	r18, r13
    5bc2:	10 0d       	add	r17, r0
    5bc4:	11 24       	eor	r1, r1
    5bc6:	e1 2c       	mov	r14, r1
    5bc8:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5bca:	f8 01       	movw	r30, r16
    5bcc:	ee 0d       	add	r30, r14
    5bce:	ff 1d       	adc	r31, r15
    5bd0:	e0 50       	subi	r30, 0x00	; 0
    5bd2:	f3 4f       	sbci	r31, 0xF3	; 243
    5bd4:	e1 81       	ldd	r30, Z+1	; 0x01
    5bd6:	e6 31       	cpi	r30, 0x16	; 22
    5bd8:	68 f0       	brcs	.+26     	; 0x5bf4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd8a>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5bda:	f0 e0       	ldi	r31, 0x00	; 0
    5bdc:	ec 53       	subi	r30, 0x3C	; 60
    5bde:	fc 4e       	sbci	r31, 0xEC	; 236
    5be0:	61 e0       	ldi	r22, 0x01	; 1
    5be2:	80 81       	ld	r24, Z
    5be4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
												_kDELAY_MS(200);
    5be8:	68 ec       	ldi	r22, 0xC8	; 200
    5bea:	70 e0       	ldi	r23, 0x00	; 0
    5bec:	80 e0       	ldi	r24, 0x00	; 0
    5bee:	90 e0       	ldi	r25, 0x00	; 0
    5bf0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5bf4:	af ef       	ldi	r26, 0xFF	; 255
    5bf6:	ea 1a       	sub	r14, r26
    5bf8:	fa 0a       	sbc	r15, r26
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5bfa:	b5 e0       	ldi	r27, 0x05	; 5
    5bfc:	eb 16       	cp	r14, r27
    5bfe:	f1 04       	cpc	r15, r1
    5c00:	21 f7       	brne	.-56     	; 0x5bca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd60>
    5c02:	fe c2       	rjmp	.+1532   	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5c04:	68 ee       	ldi	r22, 0xE8	; 232
    5c06:	73 e0       	ldi	r23, 0x03	; 3
    5c08:	80 e0       	ldi	r24, 0x00	; 0
    5c0a:	90 e0       	ldi	r25, 0x00	; 0
    5c0c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5c10:	21 2e       	mov	r2, r17
    5c12:	2d c0       	rjmp	.+90     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5c14:	8a ee       	ldi	r24, 0xEA	; 234
    5c16:	81 0f       	add	r24, r17
    5c18:	8e 34       	cpi	r24, 0x4E	; 78
    5c1a:	78 f4       	brcc	.+30     	; 0x5c3a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdd0>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5c1c:	e1 2f       	mov	r30, r17
    5c1e:	f0 e0       	ldi	r31, 0x00	; 0
    5c20:	ec 53       	subi	r30, 0x3C	; 60
    5c22:	fc 4e       	sbci	r31, 0xEC	; 236
    5c24:	6b a9       	ldd	r22, Y+51	; 0x33
    5c26:	80 81       	ld	r24, Z
    5c28:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
							_kDELAY_MS(200);
    5c2c:	68 ec       	ldi	r22, 0xC8	; 200
    5c2e:	70 e0       	ldi	r23, 0x00	; 0
    5c30:	80 e0       	ldi	r24, 0x00	; 0
    5c32:	90 e0       	ldi	r25, 0x00	; 0
    5c34:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    5c38:	1a c0       	rjmp	.+52     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5c3a:	15 36       	cpi	r17, 0x65	; 101
    5c3c:	c1 f4       	brne	.+48     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
    5c3e:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
							{
								if(on_off == _kON)
    5c42:	e1 e0       	ldi	r30, 0x01	; 1
    5c44:	4e 12       	cpse	r4, r30
    5c46:	05 c0       	rjmp	.+10     	; 0x5c52 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xde8>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5c48:	88 23       	and	r24, r24
    5c4a:	89 f0       	breq	.+34     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5c4c:	40 92 09 14 	sts	0x1409, r4	; 0x801409 <_sRuble_Parameters+0xbf>
    5c50:	05 c0       	rjmp	.+10     	; 0x5c5c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdf2>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5c52:	88 23       	and	r24, r24
    5c54:	61 f0       	breq	.+24     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5c56:	82 e0       	ldi	r24, 0x02	; 2
    5c58:	80 93 09 14 	sts	0x1409, r24	; 0x801409 <_sRuble_Parameters+0xbf>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5c5c:	69 e0       	ldi	r22, 0x09	; 9
    5c5e:	74 e1       	ldi	r23, 0x14	; 20
    5c60:	88 ea       	ldi	r24, 0xA8	; 168
    5c62:	9c e0       	ldi	r25, 0x0C	; 12
    5c64:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5c68:	02 c0       	rjmp	.+4      	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe04>
    5c6a:	81 e0       	ldi	r24, 0x01	; 1
    5c6c:	01 c0       	rjmp	.+2      	; 0x5c70 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe06>
    5c6e:	80 e0       	ldi	r24, 0x00	; 0
    5c70:	01 50       	subi	r16, 0x01	; 1
    5c72:	ff ef       	ldi	r31, 0xFF	; 255
    5c74:	ef 1a       	sub	r14, r31
    5c76:	ff 0a       	sbc	r15, r31
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5c78:	01 11       	cpse	r16, r1
    5c7a:	fd cc       	rjmp	.-1542   	; 0x5676 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x80c>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c7c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5c80:	81 30       	cpi	r24, 0x01	; 1
    5c82:	09 f0       	breq	.+2      	; 0x5c86 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe1c>
    5c84:	0d c3       	rjmp	.+1562   	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5c86:	65 e7       	ldi	r22, 0x75	; 117
    5c88:	74 e0       	ldi	r23, 0x04	; 4
    5c8a:	00 c3       	rjmp	.+1536   	; 0x628c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1422>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c8c:	81 30       	cpi	r24, 0x01	; 1
    5c8e:	51 f4       	brne	.+20     	; 0x5ca4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe3a>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5c90:	67 e6       	ldi	r22, 0x67	; 103
    5c92:	74 e0       	ldi	r23, 0x04	; 4
    5c94:	85 e5       	ldi	r24, 0x55	; 85
    5c96:	94 e1       	ldi	r25, 0x14	; 20
    5c98:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5c9c:	85 e5       	ldi	r24, 0x55	; 85
    5c9e:	94 e1       	ldi	r25, 0x14	; 20
    5ca0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5ca4:	2b e1       	ldi	r18, 0x1B	; 27
    5ca6:	32 9e       	mul	r3, r18
    5ca8:	50 01       	movw	r10, r0
    5caa:	11 24       	eor	r1, r1
    5cac:	e1 2c       	mov	r14, r1
    5cae:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5cb0:	03 2d       	mov	r16, r3
    5cb2:	10 e0       	ldi	r17, 0x00	; 0
    5cb4:	68 01       	movw	r12, r16
    5cb6:	35 e6       	ldi	r19, 0x65	; 101
    5cb8:	c3 1a       	sub	r12, r19
    5cba:	d1 08       	sbc	r13, r1
    5cbc:	f5 01       	movw	r30, r10
    5cbe:	ee 0d       	add	r30, r14
    5cc0:	ff 1d       	adc	r31, r15
    5cc2:	ee 51       	subi	r30, 0x1E	; 30
    5cc4:	fd 4f       	sbci	r31, 0xFD	; 253
    5cc6:	4a e0       	ldi	r20, 0x0A	; 10
    5cc8:	50 e0       	ldi	r21, 0x00	; 0
    5cca:	60 81       	ld	r22, Z
    5ccc:	85 e5       	ldi	r24, 0x55	; 85
    5cce:	94 e1       	ldi	r25, 0x14	; 20
    5cd0:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5cd4:	65 e6       	ldi	r22, 0x65	; 101
    5cd6:	74 e0       	ldi	r23, 0x04	; 4
    5cd8:	85 e5       	ldi	r24, 0x55	; 85
    5cda:	94 e1       	ldi	r25, 0x14	; 20
    5cdc:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5ce0:	85 e5       	ldi	r24, 0x55	; 85
    5ce2:	94 e1       	ldi	r25, 0x14	; 20
    5ce4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5ce8:	4f ef       	ldi	r20, 0xFF	; 255
    5cea:	e4 1a       	sub	r14, r20
    5cec:	f4 0a       	sbc	r15, r20
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5cee:	55 e0       	ldi	r21, 0x05	; 5
    5cf0:	e5 16       	cp	r14, r21
    5cf2:	f1 04       	cpc	r15, r1
    5cf4:	19 f7       	brne	.-58     	; 0x5cbc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe52>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5cf6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5cfa:	81 30       	cpi	r24, 0x01	; 1
    5cfc:	99 f4       	brne	.+38     	; 0x5d24 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xeba>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5cfe:	6f e4       	ldi	r22, 0x4F	; 79
    5d00:	74 e0       	ldi	r23, 0x04	; 4
    5d02:	85 e5       	ldi	r24, 0x55	; 85
    5d04:	94 e1       	ldi	r25, 0x14	; 20
    5d06:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5d0a:	b8 01       	movw	r22, r16
    5d0c:	61 50       	subi	r22, 0x01	; 1
    5d0e:	71 09       	sbc	r23, r1
    5d10:	4a e0       	ldi	r20, 0x0A	; 10
    5d12:	50 e0       	ldi	r21, 0x00	; 0
    5d14:	85 e5       	ldi	r24, 0x55	; 85
    5d16:	94 e1       	ldi	r25, 0x14	; 20
    5d18:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5d1c:	85 e5       	ldi	r24, 0x55	; 85
    5d1e:	94 e1       	ldi	r25, 0x14	; 20
    5d20:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5d24:	2b e1       	ldi	r18, 0x1B	; 27
    5d26:	2c 9d       	mul	r18, r12
    5d28:	c0 01       	movw	r24, r0
    5d2a:	2d 9d       	mul	r18, r13
    5d2c:	90 0d       	add	r25, r0
    5d2e:	11 24       	eor	r1, r1
    5d30:	dc 01       	movw	r26, r24
    5d32:	ac 57       	subi	r26, 0x7C	; 124
    5d34:	b2 4f       	sbci	r27, 0xF2	; 242
    5d36:	7d 01       	movw	r14, r26
    5d38:	b6 e0       	ldi	r27, 0x06	; 6
    5d3a:	3b 9e       	mul	r3, r27
    5d3c:	50 01       	movw	r10, r0
    5d3e:	11 24       	eor	r1, r1
    5d40:	c1 2c       	mov	r12, r1
    5d42:	d1 2c       	mov	r13, r1
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5d44:	52 e0       	ldi	r21, 0x02	; 2
    5d46:	35 2e       	mov	r3, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5d48:	55 24       	eor	r5, r5
    5d4a:	53 94       	inc	r5
    5d4c:	84 2d       	mov	r24, r4
    5d4e:	85 25       	eor	r24, r5
    5d50:	81 70       	andi	r24, 0x01	; 1
    5d52:	8b ab       	std	Y+51, r24	; 0x33
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5d54:	6c e7       	ldi	r22, 0x7C	; 124
    5d56:	66 2e       	mov	r6, r22
    5d58:	63 e1       	ldi	r22, 0x13	; 19
    5d5a:	76 2e       	mov	r7, r22
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5d5c:	0d e0       	ldi	r16, 0x0D	; 13
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5d5e:	f7 01       	movw	r30, r14
    5d60:	ec 0d       	add	r30, r12
    5d62:	fd 1d       	adc	r31, r13
    5d64:	95 80       	ldd	r9, Z+5	; 0x05
    5d66:	8f ef       	ldi	r24, 0xFF	; 255
    5d68:	89 0d       	add	r24, r9
    5d6a:	85 31       	cpi	r24, 0x15	; 21
    5d6c:	08 f0       	brcs	.+2      	; 0x5d70 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf06>
    5d6e:	52 c2       	rjmp	.+1188   	; 0x6214 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13aa>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5d70:	e3 e0       	ldi	r30, 0x03	; 3
    5d72:	e9 15       	cp	r30, r9
    5d74:	90 f4       	brcc	.+36     	; 0x5d9a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf30>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5d76:	fb ea       	ldi	r31, 0xAB	; 171
    5d78:	9f 9e       	mul	r9, r31
    5d7a:	11 2d       	mov	r17, r1
    5d7c:	11 24       	eor	r1, r1
    5d7e:	81 2f       	mov	r24, r17
    5d80:	86 95       	lsr	r24
    5d82:	98 2f       	mov	r25, r24
    5d84:	99 0f       	add	r25, r25
    5d86:	89 0f       	add	r24, r25
    5d88:	98 1a       	sub	r9, r24
    5d8a:	16 95       	lsr	r17
    5d8c:	99 20       	and	r9, r9
    5d8e:	11 f0       	breq	.+4      	; 0x5d94 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf2a>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5d90:	1f 5f       	subi	r17, 0xFF	; 255
    5d92:	04 c0       	rjmp	.+8      	; 0x5d9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf32>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5d94:	43 e0       	ldi	r20, 0x03	; 3
    5d96:	94 2e       	mov	r9, r20
    5d98:	01 c0       	rjmp	.+2      	; 0x5d9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf32>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5d9a:	11 e0       	ldi	r17, 0x01	; 1
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d9c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5da0:	81 30       	cpi	r24, 0x01	; 1
    5da2:	89 f4       	brne	.+34     	; 0x5dc6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf5c>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5da4:	6b e3       	ldi	r22, 0x3B	; 59
    5da6:	74 e0       	ldi	r23, 0x04	; 4
    5da8:	85 e5       	ldi	r24, 0x55	; 85
    5daa:	94 e1       	ldi	r25, 0x14	; 20
    5dac:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5db0:	4a e0       	ldi	r20, 0x0A	; 10
    5db2:	50 e0       	ldi	r21, 0x00	; 0
    5db4:	61 2f       	mov	r22, r17
    5db6:	85 e5       	ldi	r24, 0x55	; 85
    5db8:	94 e1       	ldi	r25, 0x14	; 20
    5dba:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5dbe:	85 e5       	ldi	r24, 0x55	; 85
    5dc0:	94 e1       	ldi	r25, 0x14	; 20
    5dc2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5dc6:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
    5dca:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5dcc:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5dd0:	d3 01       	movw	r26, r6
    5dd2:	e4 e1       	ldi	r30, 0x14	; 20
    5dd4:	1d 92       	st	X+, r1
    5dd6:	ea 95       	dec	r30
    5dd8:	e9 f7       	brne	.-6      	; 0x5dd4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf6a>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5dda:	21 2f       	mov	r18, r17
    5ddc:	30 e0       	ldi	r19, 0x00	; 0
    5dde:	21 50       	subi	r18, 0x01	; 1
    5de0:	31 09       	sbc	r19, r1
    5de2:	f7 e0       	ldi	r31, 0x07	; 7
    5de4:	f2 9f       	mul	r31, r18
    5de6:	c0 01       	movw	r24, r0
    5de8:	f3 9f       	mul	r31, r19
    5dea:	90 0d       	add	r25, r0
    5dec:	11 24       	eor	r1, r1
    5dee:	86 5b       	subi	r24, 0xB6	; 182
    5df0:	9c 4e       	sbci	r25, 0xEC	; 236
    5df2:	fc 01       	movw	r30, r24
    5df4:	e1 5a       	subi	r30, 0xA1	; 161
    5df6:	ff 4f       	sbci	r31, 0xFF	; 255
    5df8:	20 81       	ld	r18, Z
    5dfa:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5dfe:	31 96       	adiw	r30, 0x01	; 1
    5e00:	20 81       	ld	r18, Z
    5e02:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5e06:	31 96       	adiw	r30, 0x01	; 1
    5e08:	20 81       	ld	r18, Z
    5e0a:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5e0e:	31 96       	adiw	r30, 0x01	; 1
    5e10:	20 81       	ld	r18, Z
    5e12:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5e16:	31 96       	adiw	r30, 0x01	; 1
    5e18:	20 81       	ld	r18, Z
    5e1a:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5e1e:	31 96       	adiw	r30, 0x01	; 1
    5e20:	20 81       	ld	r18, Z
    5e22:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5e26:	30 92 82 13 	sts	0x1382, r3	; 0x801382 <_sRuble_Parameters+0x38>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5e2a:	40 92 83 13 	sts	0x1383, r4	; 0x801383 <_sRuble_Parameters+0x39>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5e2e:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    5e32:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5e36:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
    5e3a:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5e3e:	90 92 87 13 	sts	0x1387, r9	; 0x801387 <_sRuble_Parameters+0x3d>
    5e42:	40 e0       	ldi	r20, 0x00	; 0
    5e44:	50 e0       	ldi	r21, 0x00	; 0
    5e46:	14 2f       	mov	r17, r20
    5e48:	81 2c       	mov	r8, r1
    5e4a:	91 2c       	mov	r9, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5e4c:	04 9f       	mul	r16, r20
    5e4e:	b0 01       	movw	r22, r0
    5e50:	05 9f       	mul	r16, r21
    5e52:	70 0d       	add	r23, r0
    5e54:	11 24       	eor	r1, r1
    5e56:	69 54       	subi	r22, 0x49	; 73
    5e58:	74 4f       	sbci	r23, 0xF4	; 244
    5e5a:	29 2d       	mov	r18, r9
    5e5c:	30 e0       	ldi	r19, 0x00	; 0
    5e5e:	fb 01       	movw	r30, r22
    5e60:	e2 0f       	add	r30, r18
    5e62:	f3 1f       	adc	r31, r19
    5e64:	28 0f       	add	r18, r24
    5e66:	39 1f       	adc	r19, r25
    5e68:	d9 01       	movw	r26, r18
    5e6a:	a1 5a       	subi	r26, 0xA1	; 161
    5e6c:	bf 4f       	sbci	r27, 0xFF	; 255
    5e6e:	31 81       	ldd	r19, Z+1	; 0x01
    5e70:	2c 91       	ld	r18, X
    5e72:	32 17       	cp	r19, r18
    5e74:	19 f0       	breq	.+6      	; 0x5e7c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1012>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    5e76:	81 2c       	mov	r8, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    5e78:	36 e0       	ldi	r19, 0x06	; 6
    5e7a:	93 2e       	mov	r9, r19
									id_len = _kRESET;
								}
								id_len++;
    5e7c:	83 94       	inc	r8
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5e7e:	93 94       	inc	r9
    5e80:	25 e0       	ldi	r18, 0x05	; 5
    5e82:	29 15       	cp	r18, r9
    5e84:	50 f7       	brcc	.-44     	; 0x5e5a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xff0>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    5e86:	36 e0       	ldi	r19, 0x06	; 6
    5e88:	83 16       	cp	r8, r19
    5e8a:	31 f0       	breq	.+12     	; 0x5e98 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x102e>
    5e8c:	4f 5f       	subi	r20, 0xFF	; 255
    5e8e:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    5e90:	47 30       	cpi	r20, 0x07	; 7
    5e92:	51 05       	cpc	r21, r1
    5e94:	c1 f6       	brne	.-80     	; 0x5e46 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfdc>
    5e96:	12 2d       	mov	r17, r2
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e98:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5e9c:	81 30       	cpi	r24, 0x01	; 1
    5e9e:	89 f4       	brne	.+34     	; 0x5ec2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1058>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5ea0:	65 e2       	ldi	r22, 0x25	; 37
    5ea2:	74 e0       	ldi	r23, 0x04	; 4
    5ea4:	85 e5       	ldi	r24, 0x55	; 85
    5ea6:	94 e1       	ldi	r25, 0x14	; 20
    5ea8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5eac:	4a e0       	ldi	r20, 0x0A	; 10
    5eae:	50 e0       	ldi	r21, 0x00	; 0
    5eb0:	61 2f       	mov	r22, r17
    5eb2:	85 e5       	ldi	r24, 0x55	; 85
    5eb4:	94 e1       	ldi	r25, 0x14	; 20
    5eb6:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    5eba:	85 e5       	ldi	r24, 0x55	; 85
    5ebc:	94 e1       	ldi	r25, 0x14	; 20
    5ebe:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							data_send_counter++;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ec2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5ec6:	81 30       	cpi	r24, 0x01	; 1
    5ec8:	51 f4       	brne	.+20     	; 0x5ede <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1074>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    5eca:	61 e0       	ldi	r22, 0x01	; 1
    5ecc:	74 e0       	ldi	r23, 0x04	; 4
    5ece:	85 e5       	ldi	r24, 0x55	; 85
    5ed0:	94 e1       	ldi	r25, 0x14	; 20
    5ed2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    5ed6:	85 e5       	ldi	r24, 0x55	; 85
    5ed8:	94 e1       	ldi	r25, 0x14	; 20
    5eda:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    5ede:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5ee2:	8c e0       	ldi	r24, 0x0C	; 12
    5ee4:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5ee8:	88 eb       	ldi	r24, 0xB8	; 184
    5eea:	9b e0       	ldi	r25, 0x0B	; 11
    5eec:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    5ef0:	88 23       	and	r24, r24
    5ef2:	09 f4       	brne	.+2      	; 0x5ef6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x108c>
    5ef4:	52 c1       	rjmp	.+676    	; 0x619a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1330>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    5ef6:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
    5efa:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5efe:	88 23       	and	r24, r24
    5f00:	09 f4       	brne	.+2      	; 0x5f04 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x109a>
    5f02:	ff c0       	rjmp	.+510    	; 0x6102 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1298>
    5f04:	81 2e       	mov	r8, r17
    5f06:	91 2c       	mov	r9, r1
// 											Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 										}
// 									}
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f08:	91 30       	cpi	r25, 0x01	; 1
    5f0a:	89 f5       	brne	.+98     	; 0x5f6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1104>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5f0c:	6b ee       	ldi	r22, 0xEB	; 235
    5f0e:	73 e0       	ldi	r23, 0x03	; 3
    5f10:	85 e5       	ldi	r24, 0x55	; 85
    5f12:	94 e1       	ldi	r25, 0x14	; 20
    5f14:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5f18:	4a e0       	ldi	r20, 0x0A	; 10
    5f1a:	50 e0       	ldi	r21, 0x00	; 0
    5f1c:	60 e9       	ldi	r22, 0x90	; 144
    5f1e:	73 e1       	ldi	r23, 0x13	; 19
    5f20:	85 e5       	ldi	r24, 0x55	; 85
    5f22:	94 e1       	ldi	r25, 0x14	; 20
    5f24:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
										Serial.println();
    5f28:	85 e5       	ldi	r24, 0x55	; 85
    5f2a:	94 e1       	ldi	r25, 0x14	; 20
    5f2c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    5f30:	85 e5       	ldi	r24, 0x55	; 85
    5f32:	94 e1       	ldi	r25, 0x14	; 20
    5f34:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5f38:	6d ec       	ldi	r22, 0xCD	; 205
    5f3a:	73 e0       	ldi	r23, 0x03	; 3
    5f3c:	85 e5       	ldi	r24, 0x55	; 85
    5f3e:	94 e1       	ldi	r25, 0x14	; 20
    5f40:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5f44:	08 9d       	mul	r16, r8
    5f46:	b0 01       	movw	r22, r0
    5f48:	09 9d       	mul	r16, r9
    5f4a:	70 0d       	add	r23, r0
    5f4c:	11 24       	eor	r1, r1
    5f4e:	68 54       	subi	r22, 0x48	; 72
    5f50:	74 4f       	sbci	r23, 0xF4	; 244
    5f52:	47 e0       	ldi	r20, 0x07	; 7
    5f54:	50 e0       	ldi	r21, 0x00	; 0
    5f56:	85 e5       	ldi	r24, 0x55	; 85
    5f58:	94 e1       	ldi	r25, 0x14	; 20
    5f5a:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
										Serial.println();
    5f5e:	85 e5       	ldi	r24, 0x55	; 85
    5f60:	94 e1       	ldi	r25, 0x14	; 20
    5f62:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    5f66:	85 e5       	ldi	r24, 0x55	; 85
    5f68:	94 e1       	ldi	r25, 0x14	; 20
    5f6a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    5f6e:	a0 e9       	ldi	r26, 0x90	; 144
    5f70:	b3 e1       	ldi	r27, 0x13	; 19
    5f72:	4d e0       	ldi	r20, 0x0D	; 13
    5f74:	14 9f       	mul	r17, r20
    5f76:	90 01       	movw	r18, r0
    5f78:	11 24       	eor	r1, r1
    5f7a:	80 e0       	ldi	r24, 0x00	; 0
    5f7c:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    5f7e:	4d 91       	ld	r20, X+
    5f80:	f9 01       	movw	r30, r18
    5f82:	e8 0f       	add	r30, r24
    5f84:	f9 1f       	adc	r31, r25
    5f86:	e9 54       	subi	r30, 0x49	; 73
    5f88:	f4 4f       	sbci	r31, 0xF4	; 244
    5f8a:	51 81       	ldd	r21, Z+1	; 0x01
    5f8c:	54 17       	cp	r21, r20
    5f8e:	09 f4       	brne	.+2      	; 0x5f92 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1128>
    5f90:	4e c0       	rjmp	.+156    	; 0x602e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11c4>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f92:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    5f96:	81 30       	cpi	r24, 0x01	; 1
    5f98:	51 f4       	brne	.+20     	; 0x5fae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1144>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5f9a:	62 ea       	ldi	r22, 0xA2	; 162
    5f9c:	73 e0       	ldi	r23, 0x03	; 3
    5f9e:	85 e5       	ldi	r24, 0x55	; 85
    5fa0:	94 e1       	ldi	r25, 0x14	; 20
    5fa2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5fa6:	85 e5       	ldi	r24, 0x55	; 85
    5fa8:	94 e1       	ldi	r25, 0x14	; 20
    5faa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5fae:	86 e0       	ldi	r24, 0x06	; 6
    5fb0:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5fb4:	84 e6       	ldi	r24, 0x64	; 100
    5fb6:	90 e0       	ldi	r25, 0x00	; 0
    5fb8:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    5fbc:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5fc0:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5fc4:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5fc8:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5fcc:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5fd0:	a0 62       	ori	r26, 0x20	; 32
    5fd2:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5fd6:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5fda:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5fde:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5fe2:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5fe6:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    5fea:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    5fee:	82 60       	ori	r24, 0x02	; 2
    5ff0:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    5ff4:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    5ff8:	00 e0       	ldi	r16, 0x00	; 0
    5ffa:	10 e0       	ldi	r17, 0x00	; 0
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5ffc:	f7 01       	movw	r30, r14
    5ffe:	e0 0f       	add	r30, r16
    6000:	f1 1f       	adc	r31, r17
    6002:	e5 81       	ldd	r30, Z+5	; 0x05
    6004:	e6 31       	cpi	r30, 0x16	; 22
    6006:	68 f0       	brcs	.+26     	; 0x6022 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11b8>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6008:	f0 e0       	ldi	r31, 0x00	; 0
    600a:	ec 53       	subi	r30, 0x3C	; 60
    600c:	fc 4e       	sbci	r31, 0xEC	; 236
    600e:	61 e0       	ldi	r22, 0x01	; 1
    6010:	80 81       	ld	r24, Z
    6012:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
														_kDELAY_MS(200);
    6016:	68 ec       	ldi	r22, 0xC8	; 200
    6018:	70 e0       	ldi	r23, 0x00	; 0
    601a:	80 e0       	ldi	r24, 0x00	; 0
    601c:	90 e0       	ldi	r25, 0x00	; 0
    601e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    6022:	0f 5f       	subi	r16, 0xFF	; 255
    6024:	1f 4f       	sbci	r17, 0xFF	; 255
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6026:	05 30       	cpi	r16, 0x05	; 5
    6028:	11 05       	cpc	r17, r1
    602a:	41 f7       	brne	.-48     	; 0x5ffc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1192>
    602c:	e9 c0       	rjmp	.+466    	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
    602e:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    6030:	86 30       	cpi	r24, 0x06	; 6
    6032:	91 05       	cpc	r25, r1
    6034:	09 f0       	breq	.+2      	; 0x6038 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11ce>
    6036:	a3 cf       	rjmp	.-186    	; 0x5f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1114>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    6038:	08 9d       	mul	r16, r8
    603a:	f0 01       	movw	r30, r0
    603c:	09 9d       	mul	r16, r9
    603e:	f0 0d       	add	r31, r0
    6040:	11 24       	eor	r1, r1
    6042:	e9 54       	subi	r30, 0x49	; 73
    6044:	f4 4f       	sbci	r31, 0xF4	; 244
    6046:	53 86       	std	Z+11, r5	; 0x0b
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    6048:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    604c:	90 e0       	ldi	r25, 0x00	; 0
    604e:	98 2f       	mov	r25, r24
    6050:	88 27       	eor	r24, r24
    6052:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    6056:	82 2b       	or	r24, r18
    6058:	91 87       	std	Z+9, r25	; 0x09
    605a:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    605c:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    6060:	48 16       	cp	r4, r24
    6062:	09 f4       	brne	.+2      	; 0x6066 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11fc>
    6064:	cf c0       	rjmp	.+414    	; 0x6204 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x139a>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    6066:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    606a:	81 30       	cpi	r24, 0x01	; 1
    606c:	51 f4       	brne	.+20     	; 0x6082 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1218>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    606e:	6f e8       	ldi	r22, 0x8F	; 143
    6070:	73 e0       	ldi	r23, 0x03	; 3
    6072:	85 e5       	ldi	r24, 0x55	; 85
    6074:	94 e1       	ldi	r25, 0x14	; 20
    6076:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    607a:	85 e5       	ldi	r24, 0x55	; 85
    607c:	94 e1       	ldi	r25, 0x14	; 20
    607e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6082:	86 e0       	ldi	r24, 0x06	; 6
    6084:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    6088:	84 e6       	ldi	r24, 0x64	; 100
    608a:	90 e0       	ldi	r25, 0x00	; 0
    608c:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    6090:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6094:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    6098:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    609c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    60a0:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    60a4:	a0 62       	ori	r26, 0x20	; 32
    60a6:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    60aa:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    60ae:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    60b2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    60b6:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    60ba:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    60be:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    60c2:	82 60       	ori	r24, 0x02	; 2
    60c4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    60c8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    60cc:	00 e0       	ldi	r16, 0x00	; 0
    60ce:	10 e0       	ldi	r17, 0x00	; 0
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    60d0:	f7 01       	movw	r30, r14
    60d2:	e0 0f       	add	r30, r16
    60d4:	f1 1f       	adc	r31, r17
    60d6:	e5 81       	ldd	r30, Z+5	; 0x05
    60d8:	e6 31       	cpi	r30, 0x16	; 22
    60da:	68 f0       	brcs	.+26     	; 0x60f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x128c>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    60dc:	f0 e0       	ldi	r31, 0x00	; 0
    60de:	ec 53       	subi	r30, 0x3C	; 60
    60e0:	fc 4e       	sbci	r31, 0xEC	; 236
    60e2:	61 e0       	ldi	r22, 0x01	; 1
    60e4:	80 81       	ld	r24, Z
    60e6:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
													_kDELAY_MS(200);
    60ea:	68 ec       	ldi	r22, 0xC8	; 200
    60ec:	70 e0       	ldi	r23, 0x00	; 0
    60ee:	80 e0       	ldi	r24, 0x00	; 0
    60f0:	90 e0       	ldi	r25, 0x00	; 0
    60f2:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    60f6:	0f 5f       	subi	r16, 0xFF	; 255
    60f8:	1f 4f       	sbci	r17, 0xFF	; 255
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    60fa:	05 30       	cpi	r16, 0x05	; 5
    60fc:	11 05       	cpc	r17, r1
    60fe:	41 f7       	brne	.-48     	; 0x60d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1266>
    6100:	7f c0       	rjmp	.+254    	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6102:	91 30       	cpi	r25, 0x01	; 1
    6104:	51 f4       	brne	.+20     	; 0x611a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b0>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    6106:	64 e5       	ldi	r22, 0x54	; 84
    6108:	73 e0       	ldi	r23, 0x03	; 3
    610a:	85 e5       	ldi	r24, 0x55	; 85
    610c:	94 e1       	ldi	r25, 0x14	; 20
    610e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    6112:	85 e5       	ldi	r24, 0x55	; 85
    6114:	94 e1       	ldi	r25, 0x14	; 20
    6116:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    611a:	86 e0       	ldi	r24, 0x06	; 6
    611c:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    6120:	84 e6       	ldi	r24, 0x64	; 100
    6122:	90 e0       	ldi	r25, 0x00	; 0
    6124:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    6128:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    612c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    6130:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    6134:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    6138:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    613c:	a0 62       	ori	r26, 0x20	; 32
    613e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    6142:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    6146:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    614a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    614e:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6152:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    6156:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    615a:	82 60       	ori	r24, 0x02	; 2
    615c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    6160:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    6164:	00 e0       	ldi	r16, 0x00	; 0
    6166:	10 e0       	ldi	r17, 0x00	; 0
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6168:	f7 01       	movw	r30, r14
    616a:	e0 0f       	add	r30, r16
    616c:	f1 1f       	adc	r31, r17
    616e:	e5 81       	ldd	r30, Z+5	; 0x05
    6170:	e6 31       	cpi	r30, 0x16	; 22
    6172:	68 f0       	brcs	.+26     	; 0x618e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1324>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6174:	f0 e0       	ldi	r31, 0x00	; 0
    6176:	ec 53       	subi	r30, 0x3C	; 60
    6178:	fc 4e       	sbci	r31, 0xEC	; 236
    617a:	61 e0       	ldi	r22, 0x01	; 1
    617c:	80 81       	ld	r24, Z
    617e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
												_kDELAY_MS(200);
    6182:	68 ec       	ldi	r22, 0xC8	; 200
    6184:	70 e0       	ldi	r23, 0x00	; 0
    6186:	80 e0       	ldi	r24, 0x00	; 0
    6188:	90 e0       	ldi	r25, 0x00	; 0
    618a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    618e:	0f 5f       	subi	r16, 0xFF	; 255
    6190:	1f 4f       	sbci	r17, 0xFF	; 255
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6192:	05 30       	cpi	r16, 0x05	; 5
    6194:	11 05       	cpc	r17, r1
    6196:	41 f7       	brne	.-48     	; 0x6168 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12fe>
    6198:	33 c0       	rjmp	.+102    	; 0x6200 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1396>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    619a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    619e:	81 30       	cpi	r24, 0x01	; 1
    61a0:	51 f4       	brne	.+20     	; 0x61b6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x134c>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    61a2:	69 e1       	ldi	r22, 0x19	; 25
    61a4:	73 e0       	ldi	r23, 0x03	; 3
    61a6:	85 e5       	ldi	r24, 0x55	; 85
    61a8:	94 e1       	ldi	r25, 0x14	; 20
    61aa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    61ae:	85 e5       	ldi	r24, 0x55	; 85
    61b0:	94 e1       	ldi	r25, 0x14	; 20
    61b2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    61b6:	84 e6       	ldi	r24, 0x64	; 100
    61b8:	90 e0       	ldi	r25, 0x00	; 0
    61ba:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    61be:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    61c2:	86 e0       	ldi	r24, 0x06	; 6
    61c4:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    61c8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    61cc:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    61d0:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    61d4:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    61d8:	a0 62       	ori	r26, 0x20	; 32
    61da:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    61de:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    61e2:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    61e6:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    61ea:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    61ee:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    61f2:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    61f6:	82 60       	ori	r24, 0x02	; 2
    61f8:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    61fc:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    6200:	80 e0       	ldi	r24, 0x00	; 0
    6202:	4f c0       	rjmp	.+158    	; 0x62a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1438>
								}
							}
							_kDELAY_MS(1000);
    6204:	68 ee       	ldi	r22, 0xE8	; 232
    6206:	73 e0       	ldi	r23, 0x03	; 3
    6208:	80 e0       	ldi	r24, 0x00	; 0
    620a:	90 e0       	ldi	r25, 0x00	; 0
    620c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    6210:	21 2e       	mov	r2, r17
    6212:	2e c0       	rjmp	.+92     	; 0x6270 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1406>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6214:	55 e1       	ldi	r21, 0x15	; 21
    6216:	59 15       	cp	r21, r9
    6218:	78 f4       	brcc	.+30     	; 0x6238 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13ce>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    621a:	e9 2d       	mov	r30, r9
    621c:	f0 e0       	ldi	r31, 0x00	; 0
    621e:	ec 53       	subi	r30, 0x3C	; 60
    6220:	fc 4e       	sbci	r31, 0xEC	; 236
    6222:	6b a9       	ldd	r22, Y+51	; 0x33
    6224:	80 81       	ld	r24, Z
    6226:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
						_kDELAY_MS(200);
    622a:	68 ec       	ldi	r22, 0xC8	; 200
    622c:	70 e0       	ldi	r23, 0x00	; 0
    622e:	80 e0       	ldi	r24, 0x00	; 0
    6230:	90 e0       	ldi	r25, 0x00	; 0
    6232:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    6236:	1c c0       	rjmp	.+56     	; 0x6270 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1406>
    6238:	f5 01       	movw	r30, r10
    623a:	ec 0d       	add	r30, r12
    623c:	fd 1d       	adc	r31, r13
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    623e:	e5 50       	subi	r30, 0x05	; 5
    6240:	f3 4f       	sbci	r31, 0xF3	; 243
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    6242:	80 81       	ld	r24, Z
    6244:	85 36       	cpi	r24, 0x65	; 101
    6246:	a1 f4       	brne	.+40     	; 0x6270 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1406>
    6248:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
						{
							if(on_off == _kON)
    624c:	91 e0       	ldi	r25, 0x01	; 1
    624e:	49 12       	cpse	r4, r25
    6250:	05 c0       	rjmp	.+10     	; 0x625c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13f2>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    6252:	88 23       	and	r24, r24
    6254:	69 f0       	breq	.+26     	; 0x6270 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1406>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    6256:	40 92 09 14 	sts	0x1409, r4	; 0x801409 <_sRuble_Parameters+0xbf>
    625a:	04 c0       	rjmp	.+8      	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13fa>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    625c:	88 23       	and	r24, r24
    625e:	41 f0       	breq	.+16     	; 0x6270 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1406>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    6260:	30 92 09 14 	sts	0x1409, r3	; 0x801409 <_sRuble_Parameters+0xbf>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    6264:	69 e0       	ldi	r22, 0x09	; 9
    6266:	74 e1       	ldi	r23, 0x14	; 20
    6268:	88 ea       	ldi	r24, 0xA8	; 168
    626a:	9c e0       	ldi	r25, 0x0C	; 12
    626c:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    6270:	af ef       	ldi	r26, 0xFF	; 255
    6272:	ca 1a       	sub	r12, r26
    6274:	da 0a       	sbc	r13, r26
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    6276:	b5 e0       	ldi	r27, 0x05	; 5
    6278:	cb 16       	cp	r12, r27
    627a:	d1 04       	cpc	r13, r1
    627c:	09 f0       	breq	.+2      	; 0x6280 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1416>
    627e:	6f cd       	rjmp	.-1314   	; 0x5d5e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xef4>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6280:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6284:	81 30       	cpi	r24, 0x01	; 1
    6286:	61 f4       	brne	.+24     	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    6288:	6a ef       	ldi	r22, 0xFA	; 250
    628a:	72 e0       	ldi	r23, 0x02	; 2
    628c:	85 e5       	ldi	r24, 0x55	; 85
    628e:	94 e1       	ldi	r25, 0x14	; 20
    6290:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6294:	85 e5       	ldi	r24, 0x55	; 85
    6296:	94 e1       	ldi	r25, 0x14	; 20
    6298:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    629c:	01 c0       	rjmp	.+2      	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
				return 1;
			}
			
		}break;
	}
}
    629e:	01 c0       	rjmp	.+2      	; 0x62a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1438>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    62a0:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    62a2:	e8 96       	adiw	r28, 0x38	; 56
    62a4:	0f b6       	in	r0, 0x3f	; 63
    62a6:	f8 94       	cli
    62a8:	de bf       	out	0x3e, r29	; 62
    62aa:	0f be       	out	0x3f, r0	; 63
    62ac:	cd bf       	out	0x3d, r28	; 61
    62ae:	df 91       	pop	r29
    62b0:	cf 91       	pop	r28
    62b2:	1f 91       	pop	r17
    62b4:	0f 91       	pop	r16
    62b6:	ff 90       	pop	r15
    62b8:	ef 90       	pop	r14
    62ba:	df 90       	pop	r13
    62bc:	cf 90       	pop	r12
    62be:	bf 90       	pop	r11
    62c0:	af 90       	pop	r10
    62c2:	9f 90       	pop	r9
    62c4:	8f 90       	pop	r8
    62c6:	7f 90       	pop	r7
    62c8:	6f 90       	pop	r6
    62ca:	5f 90       	pop	r5
    62cc:	4f 90       	pop	r4
    62ce:	3f 90       	pop	r3
    62d0:	2f 90       	pop	r2
    62d2:	08 95       	ret

000062d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    62d4:	ff 92       	push	r15
    62d6:	0f 93       	push	r16
    62d8:	1f 93       	push	r17
    62da:	cf 93       	push	r28
    62dc:	df 93       	push	r29
    62de:	0e e1       	ldi	r16, 0x1E	; 30
    62e0:	19 e0       	ldi	r17, 0x09	; 9
    62e2:	ca e1       	ldi	r28, 0x1A	; 26
    62e4:	d5 e0       	ldi	r29, 0x05	; 5
    62e6:	f8 01       	movw	r30, r16
    62e8:	f1 90       	ld	r15, Z+
    62ea:	8f 01       	movw	r16, r30
    62ec:	ce 01       	movw	r24, r28
    62ee:	0e 94 b9 ec 	call	0x1d972	; 0x1d972 <eeprom_read_byte>
    62f2:	f8 16       	cp	r15, r24
    62f4:	21 f0       	breq	.+8      	; 0x62fe <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    62f6:	6f 2d       	mov	r22, r15
    62f8:	ce 01       	movw	r24, r28
    62fa:	0e 94 c1 ec 	call	0x1d982	; 0x1d982 <eeprom_write_byte>
    62fe:	21 96       	adiw	r28, 0x01	; 1
    6300:	c2 39       	cpi	r28, 0x92	; 146
    6302:	f7 e0       	ldi	r31, 0x07	; 7
    6304:	df 07       	cpc	r29, r31
    6306:	79 f7       	brne	.-34     	; 0x62e6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    6308:	8e e1       	ldi	r24, 0x1E	; 30
    630a:	99 e0       	ldi	r25, 0x09	; 9
    630c:	df 91       	pop	r29
    630e:	cf 91       	pop	r28
    6310:	1f 91       	pop	r17
    6312:	0f 91       	pop	r16
    6314:	ff 90       	pop	r15
    6316:	08 95       	ret

00006318 <_Z24Return_Previous_Day_Datev>:
    6318:	90 91 79 13 	lds	r25, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    631c:	20 91 7a 13 	lds	r18, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    6320:	42 2f       	mov	r20, r18
    6322:	50 e0       	ldi	r21, 0x00	; 0
    6324:	fa 01       	movw	r30, r20
    6326:	31 97       	sbiw	r30, 0x01	; 1
    6328:	ec 30       	cpi	r30, 0x0C	; 12
    632a:	f1 05       	cpc	r31, r1
    632c:	08 f0       	brcs	.+2      	; 0x6330 <_Z24Return_Previous_Day_Datev+0x18>
    632e:	52 c0       	rjmp	.+164    	; 0x63d4 <_Z24Return_Previous_Day_Datev+0xbc>
    6330:	88 27       	eor	r24, r24
    6332:	ee 58       	subi	r30, 0x8E	; 142
    6334:	ff 4f       	sbci	r31, 0xFF	; 255
    6336:	8f 4f       	sbci	r24, 0xFF	; 255
    6338:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
    633c:	91 30       	cpi	r25, 0x01	; 1
    633e:	89 f5       	brne	.+98     	; 0x63a2 <_Z24Return_Previous_Day_Datev+0x8a>
    6340:	fa 01       	movw	r30, r20
    6342:	31 97       	sbiw	r30, 0x01	; 1
    6344:	eb 30       	cpi	r30, 0x0B	; 11
    6346:	f1 05       	cpc	r31, r1
    6348:	58 f4       	brcc	.+22     	; 0x6360 <_Z24Return_Previous_Day_Datev+0x48>
    634a:	88 27       	eor	r24, r24
    634c:	e2 58       	subi	r30, 0x82	; 130
    634e:	ff 4f       	sbci	r31, 0xFF	; 255
    6350:	8f 4f       	sbci	r24, 0xFF	; 255
    6352:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
    6356:	8c e0       	ldi	r24, 0x0C	; 12
    6358:	01 c0       	rjmp	.+2      	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    635a:	81 e0       	ldi	r24, 0x01	; 1
    635c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6360:	8f e1       	ldi	r24, 0x1F	; 31
    6362:	08 95       	ret
    6364:	83 e0       	ldi	r24, 0x03	; 3
    6366:	fa cf       	rjmp	.-12     	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    6368:	85 e0       	ldi	r24, 0x05	; 5
    636a:	f8 cf       	rjmp	.-16     	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    636c:	87 e0       	ldi	r24, 0x07	; 7
    636e:	f6 cf       	rjmp	.-20     	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    6370:	88 e0       	ldi	r24, 0x08	; 8
    6372:	f4 cf       	rjmp	.-24     	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    6374:	8a e0       	ldi	r24, 0x0A	; 10
    6376:	f2 cf       	rjmp	.-28     	; 0x635c <_Z24Return_Previous_Day_Datev+0x44>
    6378:	91 30       	cpi	r25, 0x01	; 1
    637a:	99 f4       	brne	.+38     	; 0x63a2 <_Z24Return_Previous_Day_Datev+0x8a>
    637c:	27 30       	cpi	r18, 0x07	; 7
    637e:	59 f0       	breq	.+22     	; 0x6396 <_Z24Return_Previous_Day_Datev+0x7e>
    6380:	20 f4       	brcc	.+8      	; 0x638a <_Z24Return_Previous_Day_Datev+0x72>
    6382:	25 30       	cpi	r18, 0x05	; 5
    6384:	41 f5       	brne	.+80     	; 0x63d6 <_Z24Return_Previous_Day_Datev+0xbe>
    6386:	84 e0       	ldi	r24, 0x04	; 4
    6388:	09 c0       	rjmp	.+18     	; 0x639c <_Z24Return_Previous_Day_Datev+0x84>
    638a:	2a 30       	cpi	r18, 0x0A	; 10
    638c:	31 f0       	breq	.+12     	; 0x639a <_Z24Return_Previous_Day_Datev+0x82>
    638e:	2c 30       	cpi	r18, 0x0C	; 12
    6390:	11 f5       	brne	.+68     	; 0x63d6 <_Z24Return_Previous_Day_Datev+0xbe>
    6392:	8b e0       	ldi	r24, 0x0B	; 11
    6394:	03 c0       	rjmp	.+6      	; 0x639c <_Z24Return_Previous_Day_Datev+0x84>
    6396:	86 e0       	ldi	r24, 0x06	; 6
    6398:	01 c0       	rjmp	.+2      	; 0x639c <_Z24Return_Previous_Day_Datev+0x84>
    639a:	89 e0       	ldi	r24, 0x09	; 9
    639c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    63a0:	1a c0       	rjmp	.+52     	; 0x63d6 <_Z24Return_Previous_Day_Datev+0xbe>
    63a2:	20 93 2b 09 	sts	0x092B, r18	; 0x80092b <_sSchedules+0xd>
    63a6:	13 c0       	rjmp	.+38     	; 0x63ce <_Z24Return_Previous_Day_Datev+0xb6>
    63a8:	91 30       	cpi	r25, 0x01	; 1
    63aa:	71 f4       	brne	.+28     	; 0x63c8 <_Z24Return_Previous_Day_Datev+0xb0>
    63ac:	80 91 7b 13 	lds	r24, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    63b0:	83 70       	andi	r24, 0x03	; 3
    63b2:	29 f0       	breq	.+10     	; 0x63be <_Z24Return_Previous_Day_Datev+0xa6>
    63b4:	82 e0       	ldi	r24, 0x02	; 2
    63b6:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    63ba:	8c e1       	ldi	r24, 0x1C	; 28
    63bc:	08 95       	ret
    63be:	82 e0       	ldi	r24, 0x02	; 2
    63c0:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    63c4:	8d e1       	ldi	r24, 0x1D	; 29
    63c6:	08 95       	ret
    63c8:	83 e0       	ldi	r24, 0x03	; 3
    63ca:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    63ce:	8f ef       	ldi	r24, 0xFF	; 255
    63d0:	89 0f       	add	r24, r25
    63d2:	08 95       	ret
    63d4:	08 95       	ret
    63d6:	8e e1       	ldi	r24, 0x1E	; 30
    63d8:	08 95       	ret

000063da <_Z15Delete_Scheduleh>:
    63da:	88 23       	and	r24, r24
    63dc:	a9 f1       	breq	.+106    	; 0x6448 <_Z15Delete_Scheduleh+0x6e>
    63de:	30 91 7a 0b 	lds	r19, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    63e2:	33 23       	and	r19, r19
    63e4:	89 f1       	breq	.+98     	; 0x6448 <_Z15Delete_Scheduleh+0x6e>
    63e6:	30 91 7a 0b 	lds	r19, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    63ea:	83 13       	cpse	r24, r19
    63ec:	2d c0       	rjmp	.+90     	; 0x6448 <_Z15Delete_Scheduleh+0x6e>
    63ee:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
    63f2:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
    63f6:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    63fa:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
    63fe:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    6402:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    6406:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    640a:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    640e:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    6412:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    6416:	23 30       	cpi	r18, 0x03	; 3
    6418:	51 f0       	breq	.+20     	; 0x642e <_Z15Delete_Scheduleh+0x54>
    641a:	e2 2f       	mov	r30, r18
    641c:	f0 e0       	ldi	r31, 0x00	; 0
    641e:	ee 0f       	add	r30, r30
    6420:	ff 1f       	adc	r31, r31
    6422:	ec 5d       	subi	r30, 0xDC	; 220
    6424:	f4 4f       	sbci	r31, 0xF4	; 244
    6426:	11 82       	std	Z+1, r1	; 0x01
    6428:	10 82       	st	Z, r1
    642a:	2f 5f       	subi	r18, 0xFF	; 255
    642c:	f4 cf       	rjmp	.-24     	; 0x6416 <_Z15Delete_Scheduleh+0x3c>
    642e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    6432:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    6436:	93 30       	cpi	r25, 0x03	; 3
    6438:	39 f0       	breq	.+14     	; 0x6448 <_Z15Delete_Scheduleh+0x6e>
    643a:	e9 2f       	mov	r30, r25
    643c:	f0 e0       	ldi	r31, 0x00	; 0
    643e:	e0 5e       	subi	r30, 0xE0	; 224
    6440:	f4 4f       	sbci	r31, 0xF4	; 244
    6442:	10 82       	st	Z, r1
    6444:	9f 5f       	subi	r25, 0xFF	; 255
    6446:	f7 cf       	rjmp	.-18     	; 0x6436 <_Z15Delete_Scheduleh+0x5c>
    6448:	08 95       	ret

0000644a <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    644a:	ff 92       	push	r15
    644c:	0f 93       	push	r16
    644e:	1f 93       	push	r17
    6450:	cf 93       	push	r28
    6452:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6454:	f0 90 7b 13 	lds	r15, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
	
	if(_sSchedules.Irrigating_Date == 0)
    6458:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    645c:	81 11       	cpse	r24, r1
    645e:	20 c0       	rjmp	.+64     	; 0x64a0 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    6460:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6464:	81 30       	cpi	r24, 0x01	; 1
    6466:	51 f4       	brne	.+20     	; 0x647c <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    6468:	63 e8       	ldi	r22, 0x83	; 131
    646a:	7d e1       	ldi	r23, 0x1D	; 29
    646c:	85 e5       	ldi	r24, 0x55	; 85
    646e:	94 e1       	ldi	r25, 0x14	; 20
    6470:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    6474:	85 e5       	ldi	r24, 0x55	; 85
    6476:	94 e1       	ldi	r25, 0x14	; 20
    6478:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    647c:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    6480:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6484:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    6488:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    648c:	00 91 28 09 	lds	r16, 0x0928	; 0x800928 <_sSchedules+0xa>
    6490:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    6494:	10 e0       	ldi	r17, 0x00	; 0
    6496:	90 e0       	ldi	r25, 0x00	; 0
    6498:	01 96       	adiw	r24, 0x01	; 1
    649a:	08 1b       	sub	r16, r24
    649c:	19 0b       	sbc	r17, r25
    649e:	13 c0       	rjmp	.+38     	; 0x64c6 <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    64a0:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    64a4:	00 91 79 13 	lds	r16, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    64a8:	10 e0       	ldi	r17, 0x00	; 0
    64aa:	90 e0       	ldi	r25, 0x00	; 0
    64ac:	01 96       	adiw	r24, 0x01	; 1
    64ae:	08 1b       	sub	r16, r24
    64b0:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    64b2:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    64b6:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    64ba:	91 11       	cpse	r25, r1
    64bc:	02 c0       	rjmp	.+4      	; 0x64c2 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    64be:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    64c2:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    64c6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    64ca:	81 30       	cpi	r24, 0x01	; 1
    64cc:	89 f4       	brne	.+34     	; 0x64f0 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    64ce:	66 e7       	ldi	r22, 0x76	; 118
    64d0:	7d e1       	ldi	r23, 0x1D	; 29
    64d2:	85 e5       	ldi	r24, 0x55	; 85
    64d4:	94 e1       	ldi	r25, 0x14	; 20
    64d6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    64da:	4a e0       	ldi	r20, 0x0A	; 10
    64dc:	50 e0       	ldi	r21, 0x00	; 0
    64de:	b8 01       	movw	r22, r16
    64e0:	85 e5       	ldi	r24, 0x55	; 85
    64e2:	94 e1       	ldi	r25, 0x14	; 20
    64e4:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    64e8:	85 e5       	ldi	r24, 0x55	; 85
    64ea:	94 e1       	ldi	r25, 0x14	; 20
    64ec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    64f0:	10 16       	cp	r1, r16
    64f2:	11 06       	cpc	r1, r17
    64f4:	24 f4       	brge	.+8      	; 0x64fe <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    64f6:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    64f8:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    64fc:	71 c0       	rjmp	.+226    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    64fe:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6502:	8e 2f       	mov	r24, r30
    6504:	90 e0       	ldi	r25, 0x00	; 0
    6506:	fc 01       	movw	r30, r24
    6508:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    650a:	01 15       	cp	r16, r1
    650c:	11 05       	cpc	r17, r1
    650e:	49 f5       	brne	.+82     	; 0x6562 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    6510:	ec 30       	cpi	r30, 0x0C	; 12
    6512:	f1 05       	cpc	r31, r1
    6514:	08 f0       	brcs	.+2      	; 0x6518 <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    6516:	64 c0       	rjmp	.+200    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    6518:	88 27       	eor	r24, r24
    651a:	e7 57       	subi	r30, 0x77	; 119
    651c:	ff 4f       	sbci	r31, 0xFF	; 255
    651e:	8f 4f       	sbci	r24, 0xFF	; 255
    6520:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    6524:	cc e0       	ldi	r28, 0x0C	; 12
    6526:	18 c0       	rjmp	.+48     	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    6528:	c1 e0       	ldi	r28, 0x01	; 1
    652a:	16 c0       	rjmp	.+44     	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    652c:	8f 2d       	mov	r24, r15
    652e:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    6530:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    6532:	09 f0       	breq	.+2      	; 0x6536 <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    6534:	54 c0       	rjmp	.+168    	; 0x65de <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    6536:	dd e1       	ldi	r29, 0x1D	; 29
    6538:	53 c0       	rjmp	.+166    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    653a:	c3 e0       	ldi	r28, 0x03	; 3
    653c:	0d c0       	rjmp	.+26     	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    653e:	c4 e0       	ldi	r28, 0x04	; 4
    6540:	0e c0       	rjmp	.+28     	; 0x655e <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    6542:	c5 e0       	ldi	r28, 0x05	; 5
    6544:	09 c0       	rjmp	.+18     	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    6546:	c6 e0       	ldi	r28, 0x06	; 6
    6548:	0a c0       	rjmp	.+20     	; 0x655e <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    654a:	c7 e0       	ldi	r28, 0x07	; 7
    654c:	05 c0       	rjmp	.+10     	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    654e:	c8 e0       	ldi	r28, 0x08	; 8
    6550:	03 c0       	rjmp	.+6      	; 0x6558 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    6552:	c9 e0       	ldi	r28, 0x09	; 9
    6554:	04 c0       	rjmp	.+8      	; 0x655e <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    6556:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    6558:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    655a:	42 c0       	rjmp	.+132    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    655c:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    655e:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    6560:	3f c0       	rjmp	.+126    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6562:	ec 30       	cpi	r30, 0x0C	; 12
    6564:	f1 05       	cpc	r31, r1
    6566:	e0 f5       	brcc	.+120    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    6568:	88 27       	eor	r24, r24
    656a:	eb 56       	subi	r30, 0x6B	; 107
    656c:	ff 4f       	sbci	r31, 0xFF	; 255
    656e:	8f 4f       	sbci	r24, 0xFF	; 255
    6570:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    6574:	df e1       	ldi	r29, 0x1F	; 31
    6576:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    6578:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    657a:	32 c0       	rjmp	.+100    	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    657c:	df e1       	ldi	r29, 0x1F	; 31
    657e:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    6580:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    6582:	2e c0       	rjmp	.+92     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    6584:	8f 2d       	mov	r24, r15
    6586:	83 70       	andi	r24, 0x03	; 3
    6588:	11 f0       	breq	.+4      	; 0x658e <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    658a:	dc e1       	ldi	r29, 0x1C	; 28
    658c:	01 c0       	rjmp	.+2      	; 0x6590 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    658e:	dd e1       	ldi	r29, 0x1D	; 29
    6590:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    6592:	c2 e0       	ldi	r28, 0x02	; 2
    6594:	25 c0       	rjmp	.+74     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    6596:	df e1       	ldi	r29, 0x1F	; 31
    6598:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    659a:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    659c:	21 c0       	rjmp	.+66     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    659e:	de e1       	ldi	r29, 0x1E	; 30
    65a0:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    65a2:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    65a4:	1d c0       	rjmp	.+58     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    65a6:	df e1       	ldi	r29, 0x1F	; 31
    65a8:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    65aa:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    65ac:	19 c0       	rjmp	.+50     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    65ae:	de e1       	ldi	r29, 0x1E	; 30
    65b0:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    65b2:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    65b4:	15 c0       	rjmp	.+42     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    65b6:	df e1       	ldi	r29, 0x1F	; 31
    65b8:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    65ba:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    65bc:	11 c0       	rjmp	.+34     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    65be:	df e1       	ldi	r29, 0x1F	; 31
    65c0:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    65c2:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    65c4:	0d c0       	rjmp	.+26     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    65c6:	de e1       	ldi	r29, 0x1E	; 30
    65c8:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    65ca:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    65cc:	09 c0       	rjmp	.+18     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    65ce:	df e1       	ldi	r29, 0x1F	; 31
    65d0:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    65d2:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    65d4:	05 c0       	rjmp	.+10     	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    65d6:	de e1       	ldi	r29, 0x1E	; 30
    65d8:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    65da:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    65dc:	01 c0       	rjmp	.+2      	; 0x65e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    65de:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    65e0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    65e4:	81 30       	cpi	r24, 0x01	; 1
    65e6:	51 f4       	brne	.+20     	; 0x65fc <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    65e8:	6d e5       	ldi	r22, 0x5D	; 93
    65ea:	7d e1       	ldi	r23, 0x1D	; 29
    65ec:	85 e5       	ldi	r24, 0x55	; 85
    65ee:	94 e1       	ldi	r25, 0x14	; 20
    65f0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    65f4:	85 e5       	ldi	r24, 0x55	; 85
    65f6:	94 e1       	ldi	r25, 0x14	; 20
    65f8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    65fc:	d0 93 8e 0b 	sts	0x0B8E, r29	; 0x800b8e <_sSchedules+0x270>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6600:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6604:	81 30       	cpi	r24, 0x01	; 1
    6606:	91 f4       	brne	.+36     	; 0x662c <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    6608:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    660c:	4a e0       	ldi	r20, 0x0A	; 10
    660e:	50 e0       	ldi	r21, 0x00	; 0
    6610:	85 e5       	ldi	r24, 0x55	; 85
    6612:	94 e1       	ldi	r25, 0x14	; 20
    6614:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    6618:	63 e4       	ldi	r22, 0x43	; 67
    661a:	7d e1       	ldi	r23, 0x1D	; 29
    661c:	85 e5       	ldi	r24, 0x55	; 85
    661e:	94 e1       	ldi	r25, 0x14	; 20
    6620:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6624:	85 e5       	ldi	r24, 0x55	; 85
    6626:	94 e1       	ldi	r25, 0x14	; 20
    6628:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    662c:	c0 93 8f 0b 	sts	0x0B8F, r28	; 0x800b8f <_sSchedules+0x271>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6630:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6634:	81 30       	cpi	r24, 0x01	; 1
    6636:	61 f4       	brne	.+24     	; 0x6650 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    6638:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    663c:	4a e0       	ldi	r20, 0x0A	; 10
    663e:	50 e0       	ldi	r21, 0x00	; 0
    6640:	85 e5       	ldi	r24, 0x55	; 85
    6642:	94 e1       	ldi	r25, 0x14	; 20
    6644:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6648:	85 e5       	ldi	r24, 0x55	; 85
    664a:	94 e1       	ldi	r25, 0x14	; 20
    664c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
}
    6650:	df 91       	pop	r29
    6652:	cf 91       	pop	r28
    6654:	1f 91       	pop	r17
    6656:	0f 91       	pop	r16
    6658:	ff 90       	pop	r15
    665a:	08 95       	ret

0000665c <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    665c:	bf 92       	push	r11
    665e:	cf 92       	push	r12
    6660:	df 92       	push	r13
    6662:	ef 92       	push	r14
    6664:	ff 92       	push	r15
    6666:	0f 93       	push	r16
    6668:	1f 93       	push	r17
    666a:	cf 93       	push	r28
    666c:	df 93       	push	r29
    666e:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    6670:	00 91 79 13 	lds	r16, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
	month = _sRuble_Parameters.Update_Local_Date[1];
    6674:	d0 91 7a 13 	lds	r29, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6678:	b0 90 7b 13 	lds	r11, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    667c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6680:	81 30       	cpi	r24, 0x01	; 1
    6682:	09 f0       	breq	.+2      	; 0x6686 <_Z22Day_In_Bet_Schedullingh+0x2a>
    6684:	5a c0       	rjmp	.+180    	; 0x673a <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    6686:	6b e3       	ldi	r22, 0x3B	; 59
    6688:	7d e1       	ldi	r23, 0x1D	; 29
    668a:	85 e5       	ldi	r24, 0x55	; 85
    668c:	94 e1       	ldi	r25, 0x14	; 20
    668e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    6692:	4a e0       	ldi	r20, 0x0A	; 10
    6694:	50 e0       	ldi	r21, 0x00	; 0
    6696:	60 91 79 13 	lds	r22, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    669a:	85 e5       	ldi	r24, 0x55	; 85
    669c:	94 e1       	ldi	r25, 0x14	; 20
    669e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    66a2:	85 e5       	ldi	r24, 0x55	; 85
    66a4:	94 e1       	ldi	r25, 0x14	; 20
    66a6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    66aa:	62 e3       	ldi	r22, 0x32	; 50
    66ac:	7d e1       	ldi	r23, 0x1D	; 29
    66ae:	85 e5       	ldi	r24, 0x55	; 85
    66b0:	94 e1       	ldi	r25, 0x14	; 20
    66b2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    66b6:	4a e0       	ldi	r20, 0x0A	; 10
    66b8:	50 e0       	ldi	r21, 0x00	; 0
    66ba:	60 91 7a 13 	lds	r22, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    66be:	85 e5       	ldi	r24, 0x55	; 85
    66c0:	94 e1       	ldi	r25, 0x14	; 20
    66c2:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    66c6:	85 e5       	ldi	r24, 0x55	; 85
    66c8:	94 e1       	ldi	r25, 0x14	; 20
    66ca:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    66ce:	6a e2       	ldi	r22, 0x2A	; 42
    66d0:	7d e1       	ldi	r23, 0x1D	; 29
    66d2:	85 e5       	ldi	r24, 0x55	; 85
    66d4:	94 e1       	ldi	r25, 0x14	; 20
    66d6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    66da:	4a e0       	ldi	r20, 0x0A	; 10
    66dc:	50 e0       	ldi	r21, 0x00	; 0
    66de:	60 91 7b 13 	lds	r22, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    66e2:	85 e5       	ldi	r24, 0x55	; 85
    66e4:	94 e1       	ldi	r25, 0x14	; 20
    66e6:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    66ea:	85 e5       	ldi	r24, 0x55	; 85
    66ec:	94 e1       	ldi	r25, 0x14	; 20
    66ee:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    66f2:	67 e1       	ldi	r22, 0x17	; 23
    66f4:	7d e1       	ldi	r23, 0x1D	; 29
    66f6:	85 e5       	ldi	r24, 0x55	; 85
    66f8:	94 e1       	ldi	r25, 0x14	; 20
    66fa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    66fe:	60 91 28 09 	lds	r22, 0x0928	; 0x800928 <_sSchedules+0xa>
    6702:	4a e0       	ldi	r20, 0x0A	; 10
    6704:	50 e0       	ldi	r21, 0x00	; 0
    6706:	85 e5       	ldi	r24, 0x55	; 85
    6708:	94 e1       	ldi	r25, 0x14	; 20
    670a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    670e:	85 e5       	ldi	r24, 0x55	; 85
    6710:	94 e1       	ldi	r25, 0x14	; 20
    6712:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    6716:	63 e0       	ldi	r22, 0x03	; 3
    6718:	7d e1       	ldi	r23, 0x1D	; 29
    671a:	85 e5       	ldi	r24, 0x55	; 85
    671c:	94 e1       	ldi	r25, 0x14	; 20
    671e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    6722:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <_sSchedules+0xb>
    6726:	4a e0       	ldi	r20, 0x0A	; 10
    6728:	50 e0       	ldi	r21, 0x00	; 0
    672a:	85 e5       	ldi	r24, 0x55	; 85
    672c:	94 e1       	ldi	r25, 0x14	; 20
    672e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6732:	85 e5       	ldi	r24, 0x55	; 85
    6734:	94 e1       	ldi	r25, 0x14	; 20
    6736:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    673a:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    673e:	cc 24       	eor	r12, r12
    6740:	c3 94       	inc	r12
    6742:	ce 0c       	add	r12, r14
    6744:	d1 2c       	mov	r13, r1
    6746:	10 e0       	ldi	r17, 0x00	; 0
    6748:	96 01       	movw	r18, r12
    674a:	28 0f       	add	r18, r24
    674c:	31 1d       	adc	r19, r1
    674e:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6752:	02 17       	cp	r16, r18
    6754:	13 07       	cpc	r17, r19
    6756:	0c f4       	brge	.+2      	; 0x675a <_Z22Day_In_Bet_Schedullingh+0xfe>
    6758:	44 c0       	rjmp	.+136    	; 0x67e2 <_Z22Day_In_Bet_Schedullingh+0x186>
    675a:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    675e:	d8 13       	cpse	r29, r24
    6760:	40 c0       	rjmp	.+128    	; 0x67e2 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6762:	91 30       	cpi	r25, 0x01	; 1
    6764:	d9 f5       	brne	.+118    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6766:	66 ef       	ldi	r22, 0xF6	; 246
    6768:	7c e1       	ldi	r23, 0x1C	; 28
    676a:	1f c0       	rjmp	.+62     	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    676c:	91 30       	cpi	r25, 0x01	; 1
    676e:	51 f4       	brne	.+20     	; 0x6784 <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6770:	69 ee       	ldi	r22, 0xE9	; 233
    6772:	7c e1       	ldi	r23, 0x1C	; 28
    6774:	85 e5       	ldi	r24, 0x55	; 85
    6776:	94 e1       	ldi	r25, 0x14	; 20
    6778:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    677c:	85 e5       	ldi	r24, 0x55	; 85
    677e:	94 e1       	ldi	r25, 0x14	; 20
    6780:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6784:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6788:	d1 30       	cpi	r29, 0x01	; 1
    678a:	41 f5       	brne	.+80     	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    678c:	8f e1       	ldi	r24, 0x1F	; 31
    678e:	89 1b       	sub	r24, r25
    6790:	98 01       	movw	r18, r16
    6792:	28 0f       	add	r18, r24
    6794:	31 1d       	adc	r19, r1
    6796:	2c 15       	cp	r18, r12
    6798:	3d 05       	cpc	r19, r13
    679a:	0c f4       	brge	.+2      	; 0x679e <_Z22Day_In_Bet_Schedullingh+0x142>
    679c:	bb c1       	rjmp	.+886    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    679e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    67a2:	81 30       	cpi	r24, 0x01	; 1
    67a4:	d9 f4       	brne	.+54     	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    67a6:	6c ed       	ldi	r22, 0xDC	; 220
    67a8:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    67aa:	85 e5       	ldi	r24, 0x55	; 85
    67ac:	94 e1       	ldi	r25, 0x14	; 20
    67ae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    67b2:	85 e5       	ldi	r24, 0x55	; 85
    67b4:	94 e1       	ldi	r25, 0x14	; 20
    67b6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    67ba:	10 c0       	rjmp	.+32     	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    67bc:	91 30       	cpi	r25, 0x01	; 1
    67be:	51 f4       	brne	.+20     	; 0x67d4 <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    67c0:	6f ec       	ldi	r22, 0xCF	; 207
    67c2:	7c e1       	ldi	r23, 0x1C	; 28
    67c4:	85 e5       	ldi	r24, 0x55	; 85
    67c6:	94 e1       	ldi	r25, 0x14	; 20
    67c8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    67cc:	85 e5       	ldi	r24, 0x55	; 85
    67ce:	94 e1       	ldi	r25, 0x14	; 20
    67d0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    67d4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    67d8:	d2 30       	cpi	r29, 0x02	; 2
    67da:	c1 f0       	breq	.+48     	; 0x680c <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    67dc:	c2 e0       	ldi	r28, 0x02	; 2
    67de:	8c 2f       	mov	r24, r28
    67e0:	a9 c3       	rjmp	.+1874   	; 0x6f34 <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    67e2:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    67e6:	d8 17       	cp	r29, r24
    67e8:	09 f4       	brne	.+2      	; 0x67ec <_Z22Day_In_Bet_Schedullingh+0x190>
    67ea:	9b c1       	rjmp	.+822    	; 0x6b22 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    67ec:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    67f0:	4c 2f       	mov	r20, r28
    67f2:	50 e0       	ldi	r21, 0x00	; 0
    67f4:	fa 01       	movw	r30, r20
    67f6:	31 97       	sbiw	r30, 0x01	; 1
    67f8:	ec 30       	cpi	r30, 0x0C	; 12
    67fa:	f1 05       	cpc	r31, r1
    67fc:	08 f0       	brcs	.+2      	; 0x6800 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    67fe:	8a c1       	rjmp	.+788    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6800:	88 27       	eor	r24, r24
    6802:	ef 55       	subi	r30, 0x5F	; 95
    6804:	ff 4f       	sbci	r31, 0xFF	; 255
    6806:	8f 4f       	sbci	r24, 0xFF	; 255
    6808:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    680c:	8f e1       	ldi	r24, 0x1F	; 31
    680e:	89 1b       	sub	r24, r25
    6810:	98 01       	movw	r18, r16
    6812:	28 0f       	add	r18, r24
    6814:	31 1d       	adc	r19, r1
    6816:	2c 15       	cp	r18, r12
    6818:	3d 05       	cpc	r19, r13
    681a:	0c f4       	brge	.+2      	; 0x681e <_Z22Day_In_Bet_Schedullingh+0x1c2>
    681c:	7b c1       	rjmp	.+758    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    681e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6822:	81 30       	cpi	r24, 0x01	; 1
    6824:	d9 f6       	brne	.-74     	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6826:	62 ec       	ldi	r22, 0xC2	; 194
    6828:	7c e1       	ldi	r23, 0x1C	; 28
    682a:	bf cf       	rjmp	.-130    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    682c:	91 30       	cpi	r25, 0x01	; 1
    682e:	51 f4       	brne	.+20     	; 0x6844 <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6830:	65 eb       	ldi	r22, 0xB5	; 181
    6832:	7c e1       	ldi	r23, 0x1C	; 28
    6834:	85 e5       	ldi	r24, 0x55	; 85
    6836:	94 e1       	ldi	r25, 0x14	; 20
    6838:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    683c:	85 e5       	ldi	r24, 0x55	; 85
    683e:	94 e1       	ldi	r25, 0x14	; 20
    6840:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6844:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6848:	d4 30       	cpi	r29, 0x04	; 4
    684a:	41 f6       	brne	.-112    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    684c:	8f e1       	ldi	r24, 0x1F	; 31
    684e:	89 1b       	sub	r24, r25
    6850:	98 01       	movw	r18, r16
    6852:	28 0f       	add	r18, r24
    6854:	31 1d       	adc	r19, r1
    6856:	2c 15       	cp	r18, r12
    6858:	3d 05       	cpc	r19, r13
    685a:	0c f4       	brge	.+2      	; 0x685e <_Z22Day_In_Bet_Schedullingh+0x202>
    685c:	5b c1       	rjmp	.+694    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    685e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6862:	81 30       	cpi	r24, 0x01	; 1
    6864:	09 f0       	breq	.+2      	; 0x6868 <_Z22Day_In_Bet_Schedullingh+0x20c>
    6866:	ba cf       	rjmp	.-140    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6868:	68 ea       	ldi	r22, 0xA8	; 168
    686a:	7c e1       	ldi	r23, 0x1C	; 28
    686c:	9e cf       	rjmp	.-196    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    686e:	91 30       	cpi	r25, 0x01	; 1
    6870:	51 f4       	brne	.+20     	; 0x6886 <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6872:	6b e9       	ldi	r22, 0x9B	; 155
    6874:	7c e1       	ldi	r23, 0x1C	; 28
    6876:	85 e5       	ldi	r24, 0x55	; 85
    6878:	94 e1       	ldi	r25, 0x14	; 20
    687a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    687e:	85 e5       	ldi	r24, 0x55	; 85
    6880:	94 e1       	ldi	r25, 0x14	; 20
    6882:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6886:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    688a:	d6 30       	cpi	r29, 0x06	; 6
    688c:	09 f0       	breq	.+2      	; 0x6890 <_Z22Day_In_Bet_Schedullingh+0x234>
    688e:	a6 cf       	rjmp	.-180    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6890:	8f e1       	ldi	r24, 0x1F	; 31
    6892:	89 1b       	sub	r24, r25
    6894:	98 01       	movw	r18, r16
    6896:	28 0f       	add	r18, r24
    6898:	31 1d       	adc	r19, r1
    689a:	2c 15       	cp	r18, r12
    689c:	3d 05       	cpc	r19, r13
    689e:	0c f4       	brge	.+2      	; 0x68a2 <_Z22Day_In_Bet_Schedullingh+0x246>
    68a0:	39 c1       	rjmp	.+626    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    68a2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    68a6:	81 30       	cpi	r24, 0x01	; 1
    68a8:	09 f0       	breq	.+2      	; 0x68ac <_Z22Day_In_Bet_Schedullingh+0x250>
    68aa:	98 cf       	rjmp	.-208    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    68ac:	6e e8       	ldi	r22, 0x8E	; 142
    68ae:	7c e1       	ldi	r23, 0x1C	; 28
    68b0:	7c cf       	rjmp	.-264    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    68b2:	91 30       	cpi	r25, 0x01	; 1
    68b4:	51 f4       	brne	.+20     	; 0x68ca <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    68b6:	61 e8       	ldi	r22, 0x81	; 129
    68b8:	7c e1       	ldi	r23, 0x1C	; 28
    68ba:	85 e5       	ldi	r24, 0x55	; 85
    68bc:	94 e1       	ldi	r25, 0x14	; 20
    68be:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    68c2:	85 e5       	ldi	r24, 0x55	; 85
    68c4:	94 e1       	ldi	r25, 0x14	; 20
    68c6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    68ca:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    68ce:	d8 30       	cpi	r29, 0x08	; 8
    68d0:	09 f0       	breq	.+2      	; 0x68d4 <_Z22Day_In_Bet_Schedullingh+0x278>
    68d2:	84 cf       	rjmp	.-248    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    68d4:	8f e1       	ldi	r24, 0x1F	; 31
    68d6:	89 1b       	sub	r24, r25
    68d8:	98 01       	movw	r18, r16
    68da:	28 0f       	add	r18, r24
    68dc:	31 1d       	adc	r19, r1
    68de:	2c 15       	cp	r18, r12
    68e0:	3d 05       	cpc	r19, r13
    68e2:	0c f4       	brge	.+2      	; 0x68e6 <_Z22Day_In_Bet_Schedullingh+0x28a>
    68e4:	17 c1       	rjmp	.+558    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    68e6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    68ea:	81 30       	cpi	r24, 0x01	; 1
    68ec:	09 f0       	breq	.+2      	; 0x68f0 <_Z22Day_In_Bet_Schedullingh+0x294>
    68ee:	76 cf       	rjmp	.-276    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    68f0:	64 e7       	ldi	r22, 0x74	; 116
    68f2:	7c e1       	ldi	r23, 0x1C	; 28
    68f4:	5a cf       	rjmp	.-332    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    68f6:	91 30       	cpi	r25, 0x01	; 1
    68f8:	51 f4       	brne	.+20     	; 0x690e <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    68fa:	67 e6       	ldi	r22, 0x67	; 103
    68fc:	7c e1       	ldi	r23, 0x1C	; 28
    68fe:	85 e5       	ldi	r24, 0x55	; 85
    6900:	94 e1       	ldi	r25, 0x14	; 20
    6902:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6906:	85 e5       	ldi	r24, 0x55	; 85
    6908:	94 e1       	ldi	r25, 0x14	; 20
    690a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    690e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6912:	d9 30       	cpi	r29, 0x09	; 9
    6914:	09 f0       	breq	.+2      	; 0x6918 <_Z22Day_In_Bet_Schedullingh+0x2bc>
    6916:	62 cf       	rjmp	.-316    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6918:	8f e1       	ldi	r24, 0x1F	; 31
    691a:	89 1b       	sub	r24, r25
    691c:	98 01       	movw	r18, r16
    691e:	28 0f       	add	r18, r24
    6920:	31 1d       	adc	r19, r1
    6922:	2c 15       	cp	r18, r12
    6924:	3d 05       	cpc	r19, r13
    6926:	0c f4       	brge	.+2      	; 0x692a <_Z22Day_In_Bet_Schedullingh+0x2ce>
    6928:	f5 c0       	rjmp	.+490    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    692a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    692e:	81 30       	cpi	r24, 0x01	; 1
    6930:	09 f0       	breq	.+2      	; 0x6934 <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6932:	54 cf       	rjmp	.-344    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6934:	6a e5       	ldi	r22, 0x5A	; 90
    6936:	7c e1       	ldi	r23, 0x1C	; 28
    6938:	38 cf       	rjmp	.-400    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    693a:	91 30       	cpi	r25, 0x01	; 1
    693c:	51 f4       	brne	.+20     	; 0x6952 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    693e:	6d e4       	ldi	r22, 0x4D	; 77
    6940:	7c e1       	ldi	r23, 0x1C	; 28
    6942:	85 e5       	ldi	r24, 0x55	; 85
    6944:	94 e1       	ldi	r25, 0x14	; 20
    6946:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    694a:	85 e5       	ldi	r24, 0x55	; 85
    694c:	94 e1       	ldi	r25, 0x14	; 20
    694e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6952:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6956:	db 30       	cpi	r29, 0x0B	; 11
    6958:	09 f0       	breq	.+2      	; 0x695c <_Z22Day_In_Bet_Schedullingh+0x300>
    695a:	40 cf       	rjmp	.-384    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    695c:	8f e1       	ldi	r24, 0x1F	; 31
    695e:	89 1b       	sub	r24, r25
    6960:	98 01       	movw	r18, r16
    6962:	28 0f       	add	r18, r24
    6964:	31 1d       	adc	r19, r1
    6966:	2c 15       	cp	r18, r12
    6968:	3d 05       	cpc	r19, r13
    696a:	0c f4       	brge	.+2      	; 0x696e <_Z22Day_In_Bet_Schedullingh+0x312>
    696c:	d3 c0       	rjmp	.+422    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    696e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6972:	81 30       	cpi	r24, 0x01	; 1
    6974:	09 f0       	breq	.+2      	; 0x6978 <_Z22Day_In_Bet_Schedullingh+0x31c>
    6976:	32 cf       	rjmp	.-412    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6978:	60 e4       	ldi	r22, 0x40	; 64
    697a:	7c e1       	ldi	r23, 0x1C	; 28
    697c:	16 cf       	rjmp	.-468    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    697e:	8b 2d       	mov	r24, r11
    6980:	83 70       	andi	r24, 0x03	; 3
    6982:	11 f1       	breq	.+68     	; 0x69c8 <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6984:	91 30       	cpi	r25, 0x01	; 1
    6986:	51 f4       	brne	.+20     	; 0x699c <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6988:	63 e3       	ldi	r22, 0x33	; 51
    698a:	7c e1       	ldi	r23, 0x1C	; 28
    698c:	85 e5       	ldi	r24, 0x55	; 85
    698e:	94 e1       	ldi	r25, 0x14	; 20
    6990:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6994:	85 e5       	ldi	r24, 0x55	; 85
    6996:	94 e1       	ldi	r25, 0x14	; 20
    6998:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    699c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    69a0:	d3 30       	cpi	r29, 0x03	; 3
    69a2:	09 f0       	breq	.+2      	; 0x69a6 <_Z22Day_In_Bet_Schedullingh+0x34a>
    69a4:	b7 c0       	rjmp	.+366    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    69a6:	8c e1       	ldi	r24, 0x1C	; 28
    69a8:	89 1b       	sub	r24, r25
    69aa:	98 01       	movw	r18, r16
    69ac:	28 0f       	add	r18, r24
    69ae:	31 1d       	adc	r19, r1
    69b0:	2c 15       	cp	r18, r12
    69b2:	3d 05       	cpc	r19, r13
    69b4:	0c f4       	brge	.+2      	; 0x69b8 <_Z22Day_In_Bet_Schedullingh+0x35c>
    69b6:	ae c0       	rjmp	.+348    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    69b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    69bc:	81 30       	cpi	r24, 0x01	; 1
    69be:	09 f0       	breq	.+2      	; 0x69c2 <_Z22Day_In_Bet_Schedullingh+0x366>
    69c0:	0d cf       	rjmp	.-486    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    69c2:	66 e2       	ldi	r22, 0x26	; 38
    69c4:	7c e1       	ldi	r23, 0x1C	; 28
    69c6:	cc c0       	rjmp	.+408    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    69c8:	91 30       	cpi	r25, 0x01	; 1
    69ca:	51 f4       	brne	.+20     	; 0x69e0 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    69cc:	69 e1       	ldi	r22, 0x19	; 25
    69ce:	7c e1       	ldi	r23, 0x1C	; 28
    69d0:	85 e5       	ldi	r24, 0x55	; 85
    69d2:	94 e1       	ldi	r25, 0x14	; 20
    69d4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    69d8:	85 e5       	ldi	r24, 0x55	; 85
    69da:	94 e1       	ldi	r25, 0x14	; 20
    69dc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    69e0:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    69e4:	d3 30       	cpi	r29, 0x03	; 3
    69e6:	09 f0       	breq	.+2      	; 0x69ea <_Z22Day_In_Bet_Schedullingh+0x38e>
    69e8:	f9 ce       	rjmp	.-526    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    69ea:	8d e1       	ldi	r24, 0x1D	; 29
    69ec:	89 1b       	sub	r24, r25
    69ee:	98 01       	movw	r18, r16
    69f0:	28 0f       	add	r18, r24
    69f2:	31 1d       	adc	r19, r1
    69f4:	2c 15       	cp	r18, r12
    69f6:	3d 05       	cpc	r19, r13
    69f8:	0c f4       	brge	.+2      	; 0x69fc <_Z22Day_In_Bet_Schedullingh+0x3a0>
    69fa:	8c c0       	rjmp	.+280    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    69fc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6a00:	81 30       	cpi	r24, 0x01	; 1
    6a02:	09 f0       	breq	.+2      	; 0x6a06 <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6a04:	eb ce       	rjmp	.-554    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6a06:	6c e0       	ldi	r22, 0x0C	; 12
    6a08:	7c e1       	ldi	r23, 0x1C	; 28
    6a0a:	aa c0       	rjmp	.+340    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a0c:	91 30       	cpi	r25, 0x01	; 1
    6a0e:	51 f4       	brne	.+20     	; 0x6a24 <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6a10:	6f ef       	ldi	r22, 0xFF	; 255
    6a12:	7b e1       	ldi	r23, 0x1B	; 27
    6a14:	85 e5       	ldi	r24, 0x55	; 85
    6a16:	94 e1       	ldi	r25, 0x14	; 20
    6a18:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a1c:	85 e5       	ldi	r24, 0x55	; 85
    6a1e:	94 e1       	ldi	r25, 0x14	; 20
    6a20:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6a24:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6a28:	d5 30       	cpi	r29, 0x05	; 5
    6a2a:	09 f0       	breq	.+2      	; 0x6a2e <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6a2c:	73 c0       	rjmp	.+230    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a2e:	8e e1       	ldi	r24, 0x1E	; 30
    6a30:	89 1b       	sub	r24, r25
    6a32:	98 01       	movw	r18, r16
    6a34:	28 0f       	add	r18, r24
    6a36:	31 1d       	adc	r19, r1
    6a38:	2c 15       	cp	r18, r12
    6a3a:	3d 05       	cpc	r19, r13
    6a3c:	0c f4       	brge	.+2      	; 0x6a40 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6a3e:	6a c0       	rjmp	.+212    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a40:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6a44:	81 30       	cpi	r24, 0x01	; 1
    6a46:	09 f0       	breq	.+2      	; 0x6a4a <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6a48:	c9 ce       	rjmp	.-622    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6a4a:	62 ef       	ldi	r22, 0xF2	; 242
    6a4c:	7b e1       	ldi	r23, 0x1B	; 27
    6a4e:	ad ce       	rjmp	.-678    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a50:	91 30       	cpi	r25, 0x01	; 1
    6a52:	51 f4       	brne	.+20     	; 0x6a68 <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6a54:	65 ee       	ldi	r22, 0xE5	; 229
    6a56:	7b e1       	ldi	r23, 0x1B	; 27
    6a58:	85 e5       	ldi	r24, 0x55	; 85
    6a5a:	94 e1       	ldi	r25, 0x14	; 20
    6a5c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a60:	85 e5       	ldi	r24, 0x55	; 85
    6a62:	94 e1       	ldi	r25, 0x14	; 20
    6a64:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6a68:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6a6c:	d7 30       	cpi	r29, 0x07	; 7
    6a6e:	09 f0       	breq	.+2      	; 0x6a72 <_Z22Day_In_Bet_Schedullingh+0x416>
    6a70:	51 c0       	rjmp	.+162    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a72:	8e e1       	ldi	r24, 0x1E	; 30
    6a74:	89 1b       	sub	r24, r25
    6a76:	98 01       	movw	r18, r16
    6a78:	28 0f       	add	r18, r24
    6a7a:	31 1d       	adc	r19, r1
    6a7c:	2c 15       	cp	r18, r12
    6a7e:	3d 05       	cpc	r19, r13
    6a80:	0c f4       	brge	.+2      	; 0x6a84 <_Z22Day_In_Bet_Schedullingh+0x428>
    6a82:	48 c0       	rjmp	.+144    	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a84:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6a88:	81 30       	cpi	r24, 0x01	; 1
    6a8a:	09 f0       	breq	.+2      	; 0x6a8e <_Z22Day_In_Bet_Schedullingh+0x432>
    6a8c:	a7 ce       	rjmp	.-690    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6a8e:	68 ed       	ldi	r22, 0xD8	; 216
    6a90:	7b e1       	ldi	r23, 0x1B	; 27
    6a92:	8b ce       	rjmp	.-746    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a94:	91 30       	cpi	r25, 0x01	; 1
    6a96:	51 f4       	brne	.+20     	; 0x6aac <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6a98:	6b ec       	ldi	r22, 0xCB	; 203
    6a9a:	7b e1       	ldi	r23, 0x1B	; 27
    6a9c:	85 e5       	ldi	r24, 0x55	; 85
    6a9e:	94 e1       	ldi	r25, 0x14	; 20
    6aa0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6aa4:	85 e5       	ldi	r24, 0x55	; 85
    6aa6:	94 e1       	ldi	r25, 0x14	; 20
    6aa8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6aac:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6ab0:	da 30       	cpi	r29, 0x0A	; 10
    6ab2:	81 f5       	brne	.+96     	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ab4:	8e e1       	ldi	r24, 0x1E	; 30
    6ab6:	89 1b       	sub	r24, r25
    6ab8:	98 01       	movw	r18, r16
    6aba:	28 0f       	add	r18, r24
    6abc:	31 1d       	adc	r19, r1
    6abe:	2c 15       	cp	r18, r12
    6ac0:	3d 05       	cpc	r19, r13
    6ac2:	44 f1       	brlt	.+80     	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ac4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6ac8:	81 30       	cpi	r24, 0x01	; 1
    6aca:	09 f0       	breq	.+2      	; 0x6ace <_Z22Day_In_Bet_Schedullingh+0x472>
    6acc:	87 ce       	rjmp	.-754    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6ace:	6e eb       	ldi	r22, 0xBE	; 190
    6ad0:	7b e1       	ldi	r23, 0x1B	; 27
    6ad2:	6b ce       	rjmp	.-810    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ad4:	91 30       	cpi	r25, 0x01	; 1
    6ad6:	51 f4       	brne	.+20     	; 0x6aec <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ad8:	61 eb       	ldi	r22, 0xB1	; 177
    6ada:	7b e1       	ldi	r23, 0x1B	; 27
    6adc:	85 e5       	ldi	r24, 0x55	; 85
    6ade:	94 e1       	ldi	r25, 0x14	; 20
    6ae0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ae4:	85 e5       	ldi	r24, 0x55	; 85
    6ae6:	94 e1       	ldi	r25, 0x14	; 20
    6ae8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6aec:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6af0:	dc 30       	cpi	r29, 0x0C	; 12
    6af2:	81 f4       	brne	.+32     	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6af4:	8e e1       	ldi	r24, 0x1E	; 30
    6af6:	89 1b       	sub	r24, r25
    6af8:	98 01       	movw	r18, r16
    6afa:	28 0f       	add	r18, r24
    6afc:	31 1d       	adc	r19, r1
    6afe:	2c 15       	cp	r18, r12
    6b00:	3d 05       	cpc	r19, r13
    6b02:	44 f0       	brlt	.+16     	; 0x6b14 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b04:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6b08:	81 30       	cpi	r24, 0x01	; 1
    6b0a:	09 f0       	breq	.+2      	; 0x6b0e <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6b0c:	67 ce       	rjmp	.-818    	; 0x67dc <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6b0e:	64 ea       	ldi	r22, 0xA4	; 164
    6b10:	7b e1       	ldi	r23, 0x1B	; 27
    6b12:	4b ce       	rjmp	.-874    	; 0x67aa <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b14:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6b18:	81 30       	cpi	r24, 0x01	; 1
    6b1a:	79 f4       	brne	.+30     	; 0x6b3a <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6b1c:	66 e9       	ldi	r22, 0x96	; 150
    6b1e:	7b e1       	ldi	r23, 0x1B	; 27
    6b20:	04 c0       	rjmp	.+8      	; 0x6b2a <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b22:	91 30       	cpi	r25, 0x01	; 1
    6b24:	51 f4       	brne	.+20     	; 0x6b3a <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6b26:	68 e8       	ldi	r22, 0x88	; 136
    6b28:	7b e1       	ldi	r23, 0x1B	; 27
    6b2a:	85 e5       	ldi	r24, 0x55	; 85
    6b2c:	94 e1       	ldi	r25, 0x14	; 20
    6b2e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6b32:	85 e5       	ldi	r24, 0x55	; 85
    6b34:	94 e1       	ldi	r25, 0x14	; 20
    6b36:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6b3a:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6b3e:	f1 2c       	mov	r15, r1
    6b40:	97 01       	movw	r18, r14
    6b42:	28 0f       	add	r18, r24
    6b44:	31 1d       	adc	r19, r1
    6b46:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6b4a:	02 17       	cp	r16, r18
    6b4c:	13 07       	cpc	r17, r19
    6b4e:	1c f1       	brlt	.+70     	; 0x6b96 <_Z22Day_In_Bet_Schedullingh+0x53a>
    6b50:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6b54:	d8 13       	cpse	r29, r24
    6b56:	1f c0       	rjmp	.+62     	; 0x6b96 <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b58:	c1 30       	cpi	r28, 0x01	; 1
    6b5a:	d9 f4       	brne	.+54     	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6b5c:	6b e7       	ldi	r22, 0x7B	; 123
    6b5e:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6b60:	85 e5       	ldi	r24, 0x55	; 85
    6b62:	94 e1       	ldi	r25, 0x14	; 20
    6b64:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6b68:	85 e5       	ldi	r24, 0x55	; 85
    6b6a:	94 e1       	ldi	r25, 0x14	; 20
    6b6c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    6b70:	36 ce       	rjmp	.-916    	; 0x67de <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b72:	c1 30       	cpi	r28, 0x01	; 1
    6b74:	51 f4       	brne	.+20     	; 0x6b8a <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b76:	6e e6       	ldi	r22, 0x6E	; 110
    6b78:	7b e1       	ldi	r23, 0x1B	; 27
    6b7a:	85 e5       	ldi	r24, 0x55	; 85
    6b7c:	94 e1       	ldi	r25, 0x14	; 20
    6b7e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b82:	85 e5       	ldi	r24, 0x55	; 85
    6b84:	94 e1       	ldi	r25, 0x14	; 20
    6b86:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b8a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6b8e:	d1 30       	cpi	r29, 0x01	; 1
    6b90:	b9 f0       	breq	.+46     	; 0x6bc0 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6b92:	c1 e0       	ldi	r28, 0x01	; 1
    6b94:	24 ce       	rjmp	.-952    	; 0x67de <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6b96:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6b9a:	d8 17       	cp	r29, r24
    6b9c:	09 f4       	brne	.+2      	; 0x6ba0 <_Z22Day_In_Bet_Schedullingh+0x544>
    6b9e:	ba c1       	rjmp	.+884    	; 0x6f14 <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6ba0:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6ba4:	8e 2f       	mov	r24, r30
    6ba6:	90 e0       	ldi	r25, 0x00	; 0
    6ba8:	fc 01       	movw	r30, r24
    6baa:	31 97       	sbiw	r30, 0x01	; 1
    6bac:	ec 30       	cpi	r30, 0x0C	; 12
    6bae:	f1 05       	cpc	r31, r1
    6bb0:	08 f0       	brcs	.+2      	; 0x6bb4 <_Z22Day_In_Bet_Schedullingh+0x558>
    6bb2:	a1 c1       	rjmp	.+834    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
    6bb4:	88 27       	eor	r24, r24
    6bb6:	e3 55       	subi	r30, 0x53	; 83
    6bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    6bba:	8f 4f       	sbci	r24, 0xFF	; 255
    6bbc:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6bc0:	8f e1       	ldi	r24, 0x1F	; 31
    6bc2:	89 1b       	sub	r24, r25
    6bc4:	08 0f       	add	r16, r24
    6bc6:	11 1d       	adc	r17, r1
    6bc8:	0e 15       	cp	r16, r14
    6bca:	1f 05       	cpc	r17, r15
    6bcc:	0c f4       	brge	.+2      	; 0x6bd0 <_Z22Day_In_Bet_Schedullingh+0x574>
    6bce:	93 c1       	rjmp	.+806    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bd0:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6bd4:	c1 30       	cpi	r28, 0x01	; 1
    6bd6:	e9 f6       	brne	.-70     	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6bd8:	61 e6       	ldi	r22, 0x61	; 97
    6bda:	7b e1       	ldi	r23, 0x1B	; 27
    6bdc:	c1 cf       	rjmp	.-126    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bde:	c1 30       	cpi	r28, 0x01	; 1
    6be0:	51 f4       	brne	.+20     	; 0x6bf6 <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6be2:	64 e5       	ldi	r22, 0x54	; 84
    6be4:	7b e1       	ldi	r23, 0x1B	; 27
    6be6:	85 e5       	ldi	r24, 0x55	; 85
    6be8:	94 e1       	ldi	r25, 0x14	; 20
    6bea:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6bee:	85 e5       	ldi	r24, 0x55	; 85
    6bf0:	94 e1       	ldi	r25, 0x14	; 20
    6bf2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6bf6:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6bfa:	d2 30       	cpi	r29, 0x02	; 2
    6bfc:	51 f6       	brne	.-108    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6bfe:	8f e1       	ldi	r24, 0x1F	; 31
    6c00:	89 1b       	sub	r24, r25
    6c02:	08 0f       	add	r16, r24
    6c04:	11 1d       	adc	r17, r1
    6c06:	0e 15       	cp	r16, r14
    6c08:	1f 05       	cpc	r17, r15
    6c0a:	0c f4       	brge	.+2      	; 0x6c0e <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6c0c:	74 c1       	rjmp	.+744    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c0e:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6c12:	c1 30       	cpi	r28, 0x01	; 1
    6c14:	09 f0       	breq	.+2      	; 0x6c18 <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6c16:	bd cf       	rjmp	.-134    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c18:	67 e4       	ldi	r22, 0x47	; 71
    6c1a:	7b e1       	ldi	r23, 0x1B	; 27
    6c1c:	a1 cf       	rjmp	.-190    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c1e:	c1 30       	cpi	r28, 0x01	; 1
    6c20:	51 f4       	brne	.+20     	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6c22:	6a e3       	ldi	r22, 0x3A	; 58
    6c24:	7b e1       	ldi	r23, 0x1B	; 27
    6c26:	85 e5       	ldi	r24, 0x55	; 85
    6c28:	94 e1       	ldi	r25, 0x14	; 20
    6c2a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c2e:	85 e5       	ldi	r24, 0x55	; 85
    6c30:	94 e1       	ldi	r25, 0x14	; 20
    6c32:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6c36:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6c3a:	d4 30       	cpi	r29, 0x04	; 4
    6c3c:	09 f0       	breq	.+2      	; 0x6c40 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6c3e:	a9 cf       	rjmp	.-174    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c40:	8f e1       	ldi	r24, 0x1F	; 31
    6c42:	89 1b       	sub	r24, r25
    6c44:	08 0f       	add	r16, r24
    6c46:	11 1d       	adc	r17, r1
    6c48:	0e 15       	cp	r16, r14
    6c4a:	1f 05       	cpc	r17, r15
    6c4c:	0c f4       	brge	.+2      	; 0x6c50 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6c4e:	53 c1       	rjmp	.+678    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c50:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6c54:	c1 30       	cpi	r28, 0x01	; 1
    6c56:	09 f0       	breq	.+2      	; 0x6c5a <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6c58:	9c cf       	rjmp	.-200    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c5a:	6d e2       	ldi	r22, 0x2D	; 45
    6c5c:	7b e1       	ldi	r23, 0x1B	; 27
    6c5e:	80 cf       	rjmp	.-256    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c60:	c1 30       	cpi	r28, 0x01	; 1
    6c62:	51 f4       	brne	.+20     	; 0x6c78 <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6c64:	60 e2       	ldi	r22, 0x20	; 32
    6c66:	7b e1       	ldi	r23, 0x1B	; 27
    6c68:	85 e5       	ldi	r24, 0x55	; 85
    6c6a:	94 e1       	ldi	r25, 0x14	; 20
    6c6c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c70:	85 e5       	ldi	r24, 0x55	; 85
    6c72:	94 e1       	ldi	r25, 0x14	; 20
    6c74:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6c78:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6c7c:	d6 30       	cpi	r29, 0x06	; 6
    6c7e:	09 f0       	breq	.+2      	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x626>
    6c80:	88 cf       	rjmp	.-240    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c82:	8f e1       	ldi	r24, 0x1F	; 31
    6c84:	89 1b       	sub	r24, r25
    6c86:	08 0f       	add	r16, r24
    6c88:	11 1d       	adc	r17, r1
    6c8a:	0e 15       	cp	r16, r14
    6c8c:	1f 05       	cpc	r17, r15
    6c8e:	0c f4       	brge	.+2      	; 0x6c92 <_Z22Day_In_Bet_Schedullingh+0x636>
    6c90:	32 c1       	rjmp	.+612    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c92:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6c96:	c1 30       	cpi	r28, 0x01	; 1
    6c98:	09 f0       	breq	.+2      	; 0x6c9c <_Z22Day_In_Bet_Schedullingh+0x640>
    6c9a:	7b cf       	rjmp	.-266    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c9c:	63 e1       	ldi	r22, 0x13	; 19
    6c9e:	7b e1       	ldi	r23, 0x1B	; 27
    6ca0:	5f cf       	rjmp	.-322    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ca2:	c1 30       	cpi	r28, 0x01	; 1
    6ca4:	51 f4       	brne	.+20     	; 0x6cba <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ca6:	66 e0       	ldi	r22, 0x06	; 6
    6ca8:	7b e1       	ldi	r23, 0x1B	; 27
    6caa:	85 e5       	ldi	r24, 0x55	; 85
    6cac:	94 e1       	ldi	r25, 0x14	; 20
    6cae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cb2:	85 e5       	ldi	r24, 0x55	; 85
    6cb4:	94 e1       	ldi	r25, 0x14	; 20
    6cb6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6cba:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6cbe:	d8 30       	cpi	r29, 0x08	; 8
    6cc0:	09 f0       	breq	.+2      	; 0x6cc4 <_Z22Day_In_Bet_Schedullingh+0x668>
    6cc2:	67 cf       	rjmp	.-306    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6cc4:	8f e1       	ldi	r24, 0x1F	; 31
    6cc6:	89 1b       	sub	r24, r25
    6cc8:	08 0f       	add	r16, r24
    6cca:	11 1d       	adc	r17, r1
    6ccc:	0e 15       	cp	r16, r14
    6cce:	1f 05       	cpc	r17, r15
    6cd0:	0c f4       	brge	.+2      	; 0x6cd4 <_Z22Day_In_Bet_Schedullingh+0x678>
    6cd2:	11 c1       	rjmp	.+546    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cd4:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6cd8:	c1 30       	cpi	r28, 0x01	; 1
    6cda:	09 f0       	breq	.+2      	; 0x6cde <_Z22Day_In_Bet_Schedullingh+0x682>
    6cdc:	5a cf       	rjmp	.-332    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6cde:	69 ef       	ldi	r22, 0xF9	; 249
    6ce0:	7a e1       	ldi	r23, 0x1A	; 26
    6ce2:	3e cf       	rjmp	.-388    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ce4:	c1 30       	cpi	r28, 0x01	; 1
    6ce6:	51 f4       	brne	.+20     	; 0x6cfc <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ce8:	6c ee       	ldi	r22, 0xEC	; 236
    6cea:	7a e1       	ldi	r23, 0x1A	; 26
    6cec:	85 e5       	ldi	r24, 0x55	; 85
    6cee:	94 e1       	ldi	r25, 0x14	; 20
    6cf0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cf4:	85 e5       	ldi	r24, 0x55	; 85
    6cf6:	94 e1       	ldi	r25, 0x14	; 20
    6cf8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6cfc:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6d00:	d9 30       	cpi	r29, 0x09	; 9
    6d02:	09 f0       	breq	.+2      	; 0x6d06 <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6d04:	46 cf       	rjmp	.-372    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d06:	8f e1       	ldi	r24, 0x1F	; 31
    6d08:	89 1b       	sub	r24, r25
    6d0a:	08 0f       	add	r16, r24
    6d0c:	11 1d       	adc	r17, r1
    6d0e:	0e 15       	cp	r16, r14
    6d10:	1f 05       	cpc	r17, r15
    6d12:	0c f4       	brge	.+2      	; 0x6d16 <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6d14:	f0 c0       	rjmp	.+480    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d16:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6d1a:	c1 30       	cpi	r28, 0x01	; 1
    6d1c:	09 f0       	breq	.+2      	; 0x6d20 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6d1e:	39 cf       	rjmp	.-398    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d20:	6f ed       	ldi	r22, 0xDF	; 223
    6d22:	7a e1       	ldi	r23, 0x1A	; 26
    6d24:	1d cf       	rjmp	.-454    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d26:	c1 30       	cpi	r28, 0x01	; 1
    6d28:	51 f4       	brne	.+20     	; 0x6d3e <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d2a:	62 ed       	ldi	r22, 0xD2	; 210
    6d2c:	7a e1       	ldi	r23, 0x1A	; 26
    6d2e:	85 e5       	ldi	r24, 0x55	; 85
    6d30:	94 e1       	ldi	r25, 0x14	; 20
    6d32:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d36:	85 e5       	ldi	r24, 0x55	; 85
    6d38:	94 e1       	ldi	r25, 0x14	; 20
    6d3a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d3e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6d42:	db 30       	cpi	r29, 0x0B	; 11
    6d44:	09 f0       	breq	.+2      	; 0x6d48 <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6d46:	25 cf       	rjmp	.-438    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d48:	8f e1       	ldi	r24, 0x1F	; 31
    6d4a:	89 1b       	sub	r24, r25
    6d4c:	08 0f       	add	r16, r24
    6d4e:	11 1d       	adc	r17, r1
    6d50:	0e 15       	cp	r16, r14
    6d52:	1f 05       	cpc	r17, r15
    6d54:	0c f4       	brge	.+2      	; 0x6d58 <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6d56:	cf c0       	rjmp	.+414    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d58:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6d5c:	c1 30       	cpi	r28, 0x01	; 1
    6d5e:	09 f0       	breq	.+2      	; 0x6d62 <_Z22Day_In_Bet_Schedullingh+0x706>
    6d60:	18 cf       	rjmp	.-464    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d62:	65 ec       	ldi	r22, 0xC5	; 197
    6d64:	7a e1       	ldi	r23, 0x1A	; 26
    6d66:	fc ce       	rjmp	.-520    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6d68:	8b 2d       	mov	r24, r11
    6d6a:	83 70       	andi	r24, 0x03	; 3
    6d6c:	09 f1       	breq	.+66     	; 0x6db0 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d6e:	c1 30       	cpi	r28, 0x01	; 1
    6d70:	51 f4       	brne	.+20     	; 0x6d86 <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6d72:	68 eb       	ldi	r22, 0xB8	; 184
    6d74:	7a e1       	ldi	r23, 0x1A	; 26
    6d76:	85 e5       	ldi	r24, 0x55	; 85
    6d78:	94 e1       	ldi	r25, 0x14	; 20
    6d7a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6d7e:	85 e5       	ldi	r24, 0x55	; 85
    6d80:	94 e1       	ldi	r25, 0x14	; 20
    6d82:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6d86:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6d8a:	d3 30       	cpi	r29, 0x03	; 3
    6d8c:	09 f0       	breq	.+2      	; 0x6d90 <_Z22Day_In_Bet_Schedullingh+0x734>
    6d8e:	01 cf       	rjmp	.-510    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6d90:	8c e1       	ldi	r24, 0x1C	; 28
    6d92:	89 1b       	sub	r24, r25
    6d94:	08 0f       	add	r16, r24
    6d96:	11 1d       	adc	r17, r1
    6d98:	0e 15       	cp	r16, r14
    6d9a:	1f 05       	cpc	r17, r15
    6d9c:	0c f4       	brge	.+2      	; 0x6da0 <_Z22Day_In_Bet_Schedullingh+0x744>
    6d9e:	ab c0       	rjmp	.+342    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6da0:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6da4:	c1 30       	cpi	r28, 0x01	; 1
    6da6:	09 f0       	breq	.+2      	; 0x6daa <_Z22Day_In_Bet_Schedullingh+0x74e>
    6da8:	f4 ce       	rjmp	.-536    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6daa:	6b ea       	ldi	r22, 0xAB	; 171
    6dac:	7a e1       	ldi	r23, 0x1A	; 26
    6dae:	d8 ce       	rjmp	.-592    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6db0:	c1 30       	cpi	r28, 0x01	; 1
    6db2:	51 f4       	brne	.+20     	; 0x6dc8 <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6db4:	6e e9       	ldi	r22, 0x9E	; 158
    6db6:	7a e1       	ldi	r23, 0x1A	; 26
    6db8:	85 e5       	ldi	r24, 0x55	; 85
    6dba:	94 e1       	ldi	r25, 0x14	; 20
    6dbc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6dc0:	85 e5       	ldi	r24, 0x55	; 85
    6dc2:	94 e1       	ldi	r25, 0x14	; 20
    6dc4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6dc8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6dcc:	d3 30       	cpi	r29, 0x03	; 3
    6dce:	09 f0       	breq	.+2      	; 0x6dd2 <_Z22Day_In_Bet_Schedullingh+0x776>
    6dd0:	e0 ce       	rjmp	.-576    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6dd2:	8d e1       	ldi	r24, 0x1D	; 29
    6dd4:	89 1b       	sub	r24, r25
    6dd6:	08 0f       	add	r16, r24
    6dd8:	11 1d       	adc	r17, r1
    6dda:	0e 15       	cp	r16, r14
    6ddc:	1f 05       	cpc	r17, r15
    6dde:	0c f4       	brge	.+2      	; 0x6de2 <_Z22Day_In_Bet_Schedullingh+0x786>
    6de0:	8a c0       	rjmp	.+276    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6de2:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6de6:	c1 30       	cpi	r28, 0x01	; 1
    6de8:	09 f0       	breq	.+2      	; 0x6dec <_Z22Day_In_Bet_Schedullingh+0x790>
    6dea:	d3 ce       	rjmp	.-602    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6dec:	61 e9       	ldi	r22, 0x91	; 145
    6dee:	7a e1       	ldi	r23, 0x1A	; 26
    6df0:	b7 ce       	rjmp	.-658    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6df2:	c1 30       	cpi	r28, 0x01	; 1
    6df4:	51 f4       	brne	.+20     	; 0x6e0a <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6df6:	64 e8       	ldi	r22, 0x84	; 132
    6df8:	7a e1       	ldi	r23, 0x1A	; 26
    6dfa:	85 e5       	ldi	r24, 0x55	; 85
    6dfc:	94 e1       	ldi	r25, 0x14	; 20
    6dfe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e02:	85 e5       	ldi	r24, 0x55	; 85
    6e04:	94 e1       	ldi	r25, 0x14	; 20
    6e06:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6e0a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6e0e:	d5 30       	cpi	r29, 0x05	; 5
    6e10:	09 f0       	breq	.+2      	; 0x6e14 <_Z22Day_In_Bet_Schedullingh+0x7b8>
    6e12:	bf ce       	rjmp	.-642    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e14:	8e e1       	ldi	r24, 0x1E	; 30
    6e16:	89 1b       	sub	r24, r25
    6e18:	08 0f       	add	r16, r24
    6e1a:	11 1d       	adc	r17, r1
    6e1c:	0e 15       	cp	r16, r14
    6e1e:	1f 05       	cpc	r17, r15
    6e20:	0c f4       	brge	.+2      	; 0x6e24 <_Z22Day_In_Bet_Schedullingh+0x7c8>
    6e22:	69 c0       	rjmp	.+210    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e24:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6e28:	c1 30       	cpi	r28, 0x01	; 1
    6e2a:	09 f0       	breq	.+2      	; 0x6e2e <_Z22Day_In_Bet_Schedullingh+0x7d2>
    6e2c:	b2 ce       	rjmp	.-668    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6e2e:	67 e7       	ldi	r22, 0x77	; 119
    6e30:	7a e1       	ldi	r23, 0x1A	; 26
    6e32:	96 ce       	rjmp	.-724    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e34:	c1 30       	cpi	r28, 0x01	; 1
    6e36:	51 f4       	brne	.+20     	; 0x6e4c <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6e38:	6a e6       	ldi	r22, 0x6A	; 106
    6e3a:	7a e1       	ldi	r23, 0x1A	; 26
    6e3c:	85 e5       	ldi	r24, 0x55	; 85
    6e3e:	94 e1       	ldi	r25, 0x14	; 20
    6e40:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e44:	85 e5       	ldi	r24, 0x55	; 85
    6e46:	94 e1       	ldi	r25, 0x14	; 20
    6e48:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6e4c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6e50:	d7 30       	cpi	r29, 0x07	; 7
    6e52:	09 f0       	breq	.+2      	; 0x6e56 <_Z22Day_In_Bet_Schedullingh+0x7fa>
    6e54:	9e ce       	rjmp	.-708    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e56:	8e e1       	ldi	r24, 0x1E	; 30
    6e58:	89 1b       	sub	r24, r25
    6e5a:	08 0f       	add	r16, r24
    6e5c:	11 1d       	adc	r17, r1
    6e5e:	0e 15       	cp	r16, r14
    6e60:	1f 05       	cpc	r17, r15
    6e62:	0c f4       	brge	.+2      	; 0x6e66 <_Z22Day_In_Bet_Schedullingh+0x80a>
    6e64:	48 c0       	rjmp	.+144    	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e66:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6e6a:	c1 30       	cpi	r28, 0x01	; 1
    6e6c:	09 f0       	breq	.+2      	; 0x6e70 <_Z22Day_In_Bet_Schedullingh+0x814>
    6e6e:	91 ce       	rjmp	.-734    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6e70:	6d e5       	ldi	r22, 0x5D	; 93
    6e72:	7a e1       	ldi	r23, 0x1A	; 26
    6e74:	75 ce       	rjmp	.-790    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e76:	c1 30       	cpi	r28, 0x01	; 1
    6e78:	51 f4       	brne	.+20     	; 0x6e8e <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6e7a:	60 e5       	ldi	r22, 0x50	; 80
    6e7c:	7a e1       	ldi	r23, 0x1A	; 26
    6e7e:	85 e5       	ldi	r24, 0x55	; 85
    6e80:	94 e1       	ldi	r25, 0x14	; 20
    6e82:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e86:	85 e5       	ldi	r24, 0x55	; 85
    6e88:	94 e1       	ldi	r25, 0x14	; 20
    6e8a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6e8e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6e92:	da 30       	cpi	r29, 0x0A	; 10
    6e94:	09 f0       	breq	.+2      	; 0x6e98 <_Z22Day_In_Bet_Schedullingh+0x83c>
    6e96:	7d ce       	rjmp	.-774    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e98:	8e e1       	ldi	r24, 0x1E	; 30
    6e9a:	89 1b       	sub	r24, r25
    6e9c:	08 0f       	add	r16, r24
    6e9e:	11 1d       	adc	r17, r1
    6ea0:	0e 15       	cp	r16, r14
    6ea2:	1f 05       	cpc	r17, r15
    6ea4:	44 f1       	brlt	.+80     	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ea6:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6eaa:	c1 30       	cpi	r28, 0x01	; 1
    6eac:	09 f0       	breq	.+2      	; 0x6eb0 <_Z22Day_In_Bet_Schedullingh+0x854>
    6eae:	71 ce       	rjmp	.-798    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6eb0:	63 e4       	ldi	r22, 0x43	; 67
    6eb2:	7a e1       	ldi	r23, 0x1A	; 26
    6eb4:	55 ce       	rjmp	.-854    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6eb6:	c1 30       	cpi	r28, 0x01	; 1
    6eb8:	51 f4       	brne	.+20     	; 0x6ece <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6eba:	66 e3       	ldi	r22, 0x36	; 54
    6ebc:	7a e1       	ldi	r23, 0x1A	; 26
    6ebe:	85 e5       	ldi	r24, 0x55	; 85
    6ec0:	94 e1       	ldi	r25, 0x14	; 20
    6ec2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ec6:	85 e5       	ldi	r24, 0x55	; 85
    6ec8:	94 e1       	ldi	r25, 0x14	; 20
    6eca:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6ece:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6ed2:	dc 30       	cpi	r29, 0x0C	; 12
    6ed4:	09 f0       	breq	.+2      	; 0x6ed8 <_Z22Day_In_Bet_Schedullingh+0x87c>
    6ed6:	5d ce       	rjmp	.-838    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ed8:	8e e1       	ldi	r24, 0x1E	; 30
    6eda:	89 1b       	sub	r24, r25
    6edc:	08 0f       	add	r16, r24
    6ede:	11 1d       	adc	r17, r1
    6ee0:	0e 15       	cp	r16, r14
    6ee2:	1f 05       	cpc	r17, r15
    6ee4:	44 f0       	brlt	.+16     	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ee6:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6eea:	c1 30       	cpi	r28, 0x01	; 1
    6eec:	09 f0       	breq	.+2      	; 0x6ef0 <_Z22Day_In_Bet_Schedullingh+0x894>
    6eee:	51 ce       	rjmp	.-862    	; 0x6b92 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6ef0:	69 e2       	ldi	r22, 0x29	; 41
    6ef2:	7a e1       	ldi	r23, 0x1A	; 26
    6ef4:	35 ce       	rjmp	.-918    	; 0x6b60 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ef6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6efa:	81 30       	cpi	r24, 0x01	; 1
    6efc:	c1 f4       	brne	.+48     	; 0x6f2e <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6efe:	6b e1       	ldi	r22, 0x1B	; 27
    6f00:	7a e1       	ldi	r23, 0x1A	; 26
    6f02:	85 e5       	ldi	r24, 0x55	; 85
    6f04:	94 e1       	ldi	r25, 0x14	; 20
    6f06:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6f0a:	85 e5       	ldi	r24, 0x55	; 85
    6f0c:	94 e1       	ldi	r25, 0x14	; 20
    6f0e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    6f12:	0d c0       	rjmp	.+26     	; 0x6f2e <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f14:	c1 30       	cpi	r28, 0x01	; 1
    6f16:	61 f4       	brne	.+24     	; 0x6f30 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6f18:	6d e0       	ldi	r22, 0x0D	; 13
    6f1a:	7a e1       	ldi	r23, 0x1A	; 26
    6f1c:	85 e5       	ldi	r24, 0x55	; 85
    6f1e:	94 e1       	ldi	r25, 0x14	; 20
    6f20:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6f24:	85 e5       	ldi	r24, 0x55	; 85
    6f26:	94 e1       	ldi	r25, 0x14	; 20
    6f28:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    6f2c:	01 c0       	rjmp	.+2      	; 0x6f30 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    6f2e:	02 c0       	rjmp	.+4      	; 0x6f34 <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    6f30:	c0 e0       	ldi	r28, 0x00	; 0
    6f32:	55 cc       	rjmp	.-1878   	; 0x67de <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    6f34:	df 91       	pop	r29
    6f36:	cf 91       	pop	r28
    6f38:	1f 91       	pop	r17
    6f3a:	0f 91       	pop	r16
    6f3c:	ff 90       	pop	r15
    6f3e:	ef 90       	pop	r14
    6f40:	df 90       	pop	r13
    6f42:	cf 90       	pop	r12
    6f44:	bf 90       	pop	r11
    6f46:	08 95       	ret

00006f48 <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    6f48:	7f 92       	push	r7
    6f4a:	8f 92       	push	r8
    6f4c:	9f 92       	push	r9
    6f4e:	af 92       	push	r10
    6f50:	bf 92       	push	r11
    6f52:	cf 92       	push	r12
    6f54:	df 92       	push	r13
    6f56:	ef 92       	push	r14
    6f58:	ff 92       	push	r15
    6f5a:	0f 93       	push	r16
    6f5c:	1f 93       	push	r17
    6f5e:	cf 93       	push	r28
    6f60:	df 93       	push	r29
    6f62:	c8 2e       	mov	r12, r24
    6f64:	f6 2e       	mov	r15, r22
    6f66:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f68:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6f6c:	81 30       	cpi	r24, 0x01	; 1
    6f6e:	69 f4       	brne	.+26     	; 0x6f8a <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    6f70:	6a ef       	ldi	r22, 0xFA	; 250
    6f72:	79 e1       	ldi	r23, 0x19	; 25
    6f74:	85 e5       	ldi	r24, 0x55	; 85
    6f76:	94 e1       	ldi	r25, 0x14	; 20
    6f78:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    6f7c:	4a e0       	ldi	r20, 0x0A	; 10
    6f7e:	50 e0       	ldi	r21, 0x00	; 0
    6f80:	6c 2d       	mov	r22, r12
    6f82:	85 e5       	ldi	r24, 0x55	; 85
    6f84:	94 e1       	ldi	r25, 0x14	; 20
    6f86:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6f8a:	e0 90 7b 13 	lds	r14, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
	
	if(_sSchedules.Started_Date != 0)
    6f8e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    6f92:	88 23       	and	r24, r24
    6f94:	71 f0       	breq	.+28     	; 0x6fb2 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    6f96:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    6f9a:	81 30       	cpi	r24, 0x01	; 1
    6f9c:	29 f4       	brne	.+10     	; 0x6fa8 <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    6f9e:	00 91 2a 09 	lds	r16, 0x092A	; 0x80092a <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    6fa2:	d0 91 2b 09 	lds	r29, 0x092B	; 0x80092b <_sSchedules+0xd>
    6fa6:	09 c0       	rjmp	.+18     	; 0x6fba <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    6fa8:	00 91 90 0b 	lds	r16, 0x0B90	; 0x800b90 <_sSchedules+0x272>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    6fac:	d0 91 91 0b 	lds	r29, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    6fb0:	04 c0       	rjmp	.+8      	; 0x6fba <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    6fb2:	00 91 79 13 	lds	r16, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
		month = _sRuble_Parameters.Update_Local_Date[1];
    6fb6:	d0 91 7a 13 	lds	r29, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    6fba:	aa 24       	eor	r10, r10
    6fbc:	a3 94       	inc	r10
    6fbe:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fc0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    6fc4:	81 30       	cpi	r24, 0x01	; 1
    6fc6:	09 f0       	breq	.+2      	; 0x6fca <_Z22Day_In_Bet_Schedullinghhh+0x82>
    6fc8:	71 c0       	rjmp	.+226    	; 0x70ac <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    6fca:	62 ef       	ldi	r22, 0xF2	; 242
    6fcc:	79 e1       	ldi	r23, 0x19	; 25
    6fce:	85 e5       	ldi	r24, 0x55	; 85
    6fd0:	94 e1       	ldi	r25, 0x14	; 20
    6fd2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    6fd6:	4a e0       	ldi	r20, 0x0A	; 10
    6fd8:	50 e0       	ldi	r21, 0x00	; 0
    6fda:	60 2f       	mov	r22, r16
    6fdc:	85 e5       	ldi	r24, 0x55	; 85
    6fde:	94 e1       	ldi	r25, 0x14	; 20
    6fe0:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6fe4:	85 e5       	ldi	r24, 0x55	; 85
    6fe6:	94 e1       	ldi	r25, 0x14	; 20
    6fe8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    6fec:	69 ee       	ldi	r22, 0xE9	; 233
    6fee:	79 e1       	ldi	r23, 0x19	; 25
    6ff0:	85 e5       	ldi	r24, 0x55	; 85
    6ff2:	94 e1       	ldi	r25, 0x14	; 20
    6ff4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    6ff8:	4a e0       	ldi	r20, 0x0A	; 10
    6ffa:	50 e0       	ldi	r21, 0x00	; 0
    6ffc:	6d 2f       	mov	r22, r29
    6ffe:	85 e5       	ldi	r24, 0x55	; 85
    7000:	94 e1       	ldi	r25, 0x14	; 20
    7002:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7006:	85 e5       	ldi	r24, 0x55	; 85
    7008:	94 e1       	ldi	r25, 0x14	; 20
    700a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    700e:	61 ee       	ldi	r22, 0xE1	; 225
    7010:	79 e1       	ldi	r23, 0x19	; 25
    7012:	85 e5       	ldi	r24, 0x55	; 85
    7014:	94 e1       	ldi	r25, 0x14	; 20
    7016:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    701a:	4a e0       	ldi	r20, 0x0A	; 10
    701c:	50 e0       	ldi	r21, 0x00	; 0
    701e:	60 91 7b 13 	lds	r22, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    7022:	85 e5       	ldi	r24, 0x55	; 85
    7024:	94 e1       	ldi	r25, 0x14	; 20
    7026:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    702a:	85 e5       	ldi	r24, 0x55	; 85
    702c:	94 e1       	ldi	r25, 0x14	; 20
    702e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    7032:	65 ed       	ldi	r22, 0xD5	; 213
    7034:	79 e1       	ldi	r23, 0x19	; 25
    7036:	85 e5       	ldi	r24, 0x55	; 85
    7038:	94 e1       	ldi	r25, 0x14	; 20
    703a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    703e:	4a e0       	ldi	r20, 0x0A	; 10
    7040:	50 e0       	ldi	r21, 0x00	; 0
    7042:	6f 2d       	mov	r22, r15
    7044:	85 e5       	ldi	r24, 0x55	; 85
    7046:	94 e1       	ldi	r25, 0x14	; 20
    7048:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    704c:	85 e5       	ldi	r24, 0x55	; 85
    704e:	94 e1       	ldi	r25, 0x14	; 20
    7050:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    7054:	67 ec       	ldi	r22, 0xC7	; 199
    7056:	79 e1       	ldi	r23, 0x19	; 25
    7058:	85 e5       	ldi	r24, 0x55	; 85
    705a:	94 e1       	ldi	r25, 0x14	; 20
    705c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    7060:	4a e0       	ldi	r20, 0x0A	; 10
    7062:	50 e0       	ldi	r21, 0x00	; 0
    7064:	67 2d       	mov	r22, r7
    7066:	85 e5       	ldi	r24, 0x55	; 85
    7068:	94 e1       	ldi	r25, 0x14	; 20
    706a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    706e:	85 e5       	ldi	r24, 0x55	; 85
    7070:	94 e1       	ldi	r25, 0x14	; 20
    7072:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    7076:	64 eb       	ldi	r22, 0xB4	; 180
    7078:	79 e1       	ldi	r23, 0x19	; 25
    707a:	85 e5       	ldi	r24, 0x55	; 85
    707c:	94 e1       	ldi	r25, 0x14	; 20
    707e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7082:	85 e5       	ldi	r24, 0x55	; 85
    7084:	94 e1       	ldi	r25, 0x14	; 20
    7086:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    708a:	6f e9       	ldi	r22, 0x9F	; 159
    708c:	79 e1       	ldi	r23, 0x19	; 25
    708e:	85 e5       	ldi	r24, 0x55	; 85
    7090:	94 e1       	ldi	r25, 0x14	; 20
    7092:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7096:	4a e0       	ldi	r20, 0x0A	; 10
    7098:	50 e0       	ldi	r21, 0x00	; 0
    709a:	6a 2d       	mov	r22, r10
    709c:	85 e5       	ldi	r24, 0x55	; 85
    709e:	94 e1       	ldi	r25, 0x14	; 20
    70a0:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    70a4:	85 e5       	ldi	r24, 0x55	; 85
    70a6:	94 e1       	ldi	r25, 0x14	; 20
    70a8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    70ac:	8f 2c       	mov	r8, r15
    70ae:	91 2c       	mov	r9, r1
    70b0:	b1 2c       	mov	r11, r1
    70b2:	10 e0       	ldi	r17, 0x00	; 0
    70b4:	94 01       	movw	r18, r8
    70b6:	2a 0d       	add	r18, r10
    70b8:	3b 1d       	adc	r19, r11
    70ba:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    70be:	02 17       	cp	r16, r18
    70c0:	13 07       	cpc	r17, r19
    70c2:	44 f0       	brlt	.+16     	; 0x70d4 <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    70c4:	d7 11       	cpse	r29, r7
    70c6:	09 c0       	rjmp	.+18     	; 0x70da <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    70c8:	91 30       	cpi	r25, 0x01	; 1
    70ca:	09 f0       	breq	.+2      	; 0x70ce <_Z22Day_In_Bet_Schedullinghhh+0x186>
    70cc:	be c3       	rjmp	.+1916   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    70ce:	62 e9       	ldi	r22, 0x92	; 146
    70d0:	79 e1       	ldi	r23, 0x19	; 25
    70d2:	30 c0       	rjmp	.+96     	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    70d4:	d7 15       	cp	r29, r7
    70d6:	09 f4       	brne	.+2      	; 0x70da <_Z22Day_In_Bet_Schedullinghhh+0x192>
    70d8:	be c1       	rjmp	.+892    	; 0x7456 <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    70da:	47 2d       	mov	r20, r7
    70dc:	50 e0       	ldi	r21, 0x00	; 0
    70de:	fa 01       	movw	r30, r20
    70e0:	31 97       	sbiw	r30, 0x01	; 1
    70e2:	ec 30       	cpi	r30, 0x0C	; 12
    70e4:	f1 05       	cpc	r31, r1
    70e6:	08 f0       	brcs	.+2      	; 0x70ea <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    70e8:	af c1       	rjmp	.+862    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
    70ea:	88 27       	eor	r24, r24
    70ec:	e7 54       	subi	r30, 0x47	; 71
    70ee:	ff 4f       	sbci	r31, 0xFF	; 255
    70f0:	8f 4f       	sbci	r24, 0xFF	; 255
    70f2:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    70f6:	91 30       	cpi	r25, 0x01	; 1
    70f8:	51 f4       	brne	.+20     	; 0x710e <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    70fa:	65 e8       	ldi	r22, 0x85	; 133
    70fc:	79 e1       	ldi	r23, 0x19	; 25
    70fe:	85 e5       	ldi	r24, 0x55	; 85
    7100:	94 e1       	ldi	r25, 0x14	; 20
    7102:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7106:	85 e5       	ldi	r24, 0x55	; 85
    7108:	94 e1       	ldi	r25, 0x14	; 20
    710a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    710e:	d1 30       	cpi	r29, 0x01	; 1
    7110:	09 f0       	breq	.+2      	; 0x7114 <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    7112:	9b c3       	rjmp	.+1846   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7114:	8f e1       	ldi	r24, 0x1F	; 31
    7116:	8f 19       	sub	r24, r15
    7118:	98 01       	movw	r18, r16
    711a:	28 0f       	add	r18, r24
    711c:	31 1d       	adc	r19, r1
    711e:	2a 15       	cp	r18, r10
    7120:	3b 05       	cpc	r19, r11
    7122:	0c f4       	brge	.+2      	; 0x7126 <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    7124:	91 c1       	rjmp	.+802    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7126:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    712a:	81 30       	cpi	r24, 0x01	; 1
    712c:	09 f0       	breq	.+2      	; 0x7130 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    712e:	8d c3       	rjmp	.+1818   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7130:	68 e7       	ldi	r22, 0x78	; 120
    7132:	79 e1       	ldi	r23, 0x19	; 25
    7134:	85 e5       	ldi	r24, 0x55	; 85
    7136:	94 e1       	ldi	r25, 0x14	; 20
    7138:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    713c:	85 e5       	ldi	r24, 0x55	; 85
    713e:	94 e1       	ldi	r25, 0x14	; 20
    7140:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    7144:	82 c3       	rjmp	.+1796   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7146:	91 30       	cpi	r25, 0x01	; 1
    7148:	51 f4       	brne	.+20     	; 0x715e <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    714a:	6b e6       	ldi	r22, 0x6B	; 107
    714c:	79 e1       	ldi	r23, 0x19	; 25
    714e:	85 e5       	ldi	r24, 0x55	; 85
    7150:	94 e1       	ldi	r25, 0x14	; 20
    7152:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7156:	85 e5       	ldi	r24, 0x55	; 85
    7158:	94 e1       	ldi	r25, 0x14	; 20
    715a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    715e:	d2 30       	cpi	r29, 0x02	; 2
    7160:	09 f0       	breq	.+2      	; 0x7164 <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    7162:	73 c3       	rjmp	.+1766   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7164:	8f e1       	ldi	r24, 0x1F	; 31
    7166:	8f 19       	sub	r24, r15
    7168:	98 01       	movw	r18, r16
    716a:	28 0f       	add	r18, r24
    716c:	31 1d       	adc	r19, r1
    716e:	2a 15       	cp	r18, r10
    7170:	3b 05       	cpc	r19, r11
    7172:	0c f4       	brge	.+2      	; 0x7176 <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    7174:	69 c1       	rjmp	.+722    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7176:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    717a:	81 30       	cpi	r24, 0x01	; 1
    717c:	09 f0       	breq	.+2      	; 0x7180 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    717e:	65 c3       	rjmp	.+1738   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7180:	6e e5       	ldi	r22, 0x5E	; 94
    7182:	79 e1       	ldi	r23, 0x19	; 25
    7184:	d7 cf       	rjmp	.-82     	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7186:	91 30       	cpi	r25, 0x01	; 1
    7188:	51 f4       	brne	.+20     	; 0x719e <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    718a:	61 e5       	ldi	r22, 0x51	; 81
    718c:	79 e1       	ldi	r23, 0x19	; 25
    718e:	85 e5       	ldi	r24, 0x55	; 85
    7190:	94 e1       	ldi	r25, 0x14	; 20
    7192:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7196:	85 e5       	ldi	r24, 0x55	; 85
    7198:	94 e1       	ldi	r25, 0x14	; 20
    719a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    719e:	d4 30       	cpi	r29, 0x04	; 4
    71a0:	09 f0       	breq	.+2      	; 0x71a4 <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    71a2:	53 c3       	rjmp	.+1702   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    71a4:	8f e1       	ldi	r24, 0x1F	; 31
    71a6:	8f 19       	sub	r24, r15
    71a8:	98 01       	movw	r18, r16
    71aa:	28 0f       	add	r18, r24
    71ac:	31 1d       	adc	r19, r1
    71ae:	2a 15       	cp	r18, r10
    71b0:	3b 05       	cpc	r19, r11
    71b2:	0c f4       	brge	.+2      	; 0x71b6 <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    71b4:	49 c1       	rjmp	.+658    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    71b6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    71ba:	81 30       	cpi	r24, 0x01	; 1
    71bc:	09 f0       	breq	.+2      	; 0x71c0 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    71be:	45 c3       	rjmp	.+1674   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    71c0:	64 e4       	ldi	r22, 0x44	; 68
    71c2:	79 e1       	ldi	r23, 0x19	; 25
    71c4:	b7 cf       	rjmp	.-146    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    71c6:	91 30       	cpi	r25, 0x01	; 1
    71c8:	51 f4       	brne	.+20     	; 0x71de <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    71ca:	67 e3       	ldi	r22, 0x37	; 55
    71cc:	79 e1       	ldi	r23, 0x19	; 25
    71ce:	85 e5       	ldi	r24, 0x55	; 85
    71d0:	94 e1       	ldi	r25, 0x14	; 20
    71d2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    71d6:	85 e5       	ldi	r24, 0x55	; 85
    71d8:	94 e1       	ldi	r25, 0x14	; 20
    71da:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    71de:	d6 30       	cpi	r29, 0x06	; 6
    71e0:	09 f0       	breq	.+2      	; 0x71e4 <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    71e2:	33 c3       	rjmp	.+1638   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    71e4:	8f e1       	ldi	r24, 0x1F	; 31
    71e6:	8f 19       	sub	r24, r15
    71e8:	98 01       	movw	r18, r16
    71ea:	28 0f       	add	r18, r24
    71ec:	31 1d       	adc	r19, r1
    71ee:	2a 15       	cp	r18, r10
    71f0:	3b 05       	cpc	r19, r11
    71f2:	0c f4       	brge	.+2      	; 0x71f6 <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    71f4:	29 c1       	rjmp	.+594    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    71f6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    71fa:	81 30       	cpi	r24, 0x01	; 1
    71fc:	09 f0       	breq	.+2      	; 0x7200 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    71fe:	25 c3       	rjmp	.+1610   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7200:	6a e2       	ldi	r22, 0x2A	; 42
    7202:	79 e1       	ldi	r23, 0x19	; 25
    7204:	97 cf       	rjmp	.-210    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7206:	91 30       	cpi	r25, 0x01	; 1
    7208:	51 f4       	brne	.+20     	; 0x721e <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    720a:	6d e1       	ldi	r22, 0x1D	; 29
    720c:	79 e1       	ldi	r23, 0x19	; 25
    720e:	85 e5       	ldi	r24, 0x55	; 85
    7210:	94 e1       	ldi	r25, 0x14	; 20
    7212:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7216:	85 e5       	ldi	r24, 0x55	; 85
    7218:	94 e1       	ldi	r25, 0x14	; 20
    721a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    721e:	d8 30       	cpi	r29, 0x08	; 8
    7220:	09 f0       	breq	.+2      	; 0x7224 <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    7222:	13 c3       	rjmp	.+1574   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7224:	8f e1       	ldi	r24, 0x1F	; 31
    7226:	8f 19       	sub	r24, r15
    7228:	98 01       	movw	r18, r16
    722a:	28 0f       	add	r18, r24
    722c:	31 1d       	adc	r19, r1
    722e:	2a 15       	cp	r18, r10
    7230:	3b 05       	cpc	r19, r11
    7232:	0c f4       	brge	.+2      	; 0x7236 <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    7234:	09 c1       	rjmp	.+530    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7236:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    723a:	81 30       	cpi	r24, 0x01	; 1
    723c:	09 f0       	breq	.+2      	; 0x7240 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    723e:	05 c3       	rjmp	.+1546   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7240:	60 e1       	ldi	r22, 0x10	; 16
    7242:	79 e1       	ldi	r23, 0x19	; 25
    7244:	77 cf       	rjmp	.-274    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7246:	91 30       	cpi	r25, 0x01	; 1
    7248:	51 f4       	brne	.+20     	; 0x725e <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    724a:	63 e0       	ldi	r22, 0x03	; 3
    724c:	79 e1       	ldi	r23, 0x19	; 25
    724e:	85 e5       	ldi	r24, 0x55	; 85
    7250:	94 e1       	ldi	r25, 0x14	; 20
    7252:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7256:	85 e5       	ldi	r24, 0x55	; 85
    7258:	94 e1       	ldi	r25, 0x14	; 20
    725a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    725e:	d9 30       	cpi	r29, 0x09	; 9
    7260:	09 f0       	breq	.+2      	; 0x7264 <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    7262:	f3 c2       	rjmp	.+1510   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7264:	8f e1       	ldi	r24, 0x1F	; 31
    7266:	8f 19       	sub	r24, r15
    7268:	98 01       	movw	r18, r16
    726a:	28 0f       	add	r18, r24
    726c:	31 1d       	adc	r19, r1
    726e:	2a 15       	cp	r18, r10
    7270:	3b 05       	cpc	r19, r11
    7272:	0c f4       	brge	.+2      	; 0x7276 <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    7274:	e9 c0       	rjmp	.+466    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7276:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    727a:	81 30       	cpi	r24, 0x01	; 1
    727c:	09 f0       	breq	.+2      	; 0x7280 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    727e:	e5 c2       	rjmp	.+1482   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7280:	66 ef       	ldi	r22, 0xF6	; 246
    7282:	78 e1       	ldi	r23, 0x18	; 24
    7284:	57 cf       	rjmp	.-338    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7286:	91 30       	cpi	r25, 0x01	; 1
    7288:	51 f4       	brne	.+20     	; 0x729e <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    728a:	69 ee       	ldi	r22, 0xE9	; 233
    728c:	78 e1       	ldi	r23, 0x18	; 24
    728e:	85 e5       	ldi	r24, 0x55	; 85
    7290:	94 e1       	ldi	r25, 0x14	; 20
    7292:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7296:	85 e5       	ldi	r24, 0x55	; 85
    7298:	94 e1       	ldi	r25, 0x14	; 20
    729a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    729e:	db 30       	cpi	r29, 0x0B	; 11
    72a0:	09 f0       	breq	.+2      	; 0x72a4 <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    72a2:	d3 c2       	rjmp	.+1446   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    72a4:	8f e1       	ldi	r24, 0x1F	; 31
    72a6:	8f 19       	sub	r24, r15
    72a8:	98 01       	movw	r18, r16
    72aa:	28 0f       	add	r18, r24
    72ac:	31 1d       	adc	r19, r1
    72ae:	2a 15       	cp	r18, r10
    72b0:	3b 05       	cpc	r19, r11
    72b2:	0c f4       	brge	.+2      	; 0x72b6 <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    72b4:	c9 c0       	rjmp	.+402    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    72b6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    72ba:	81 30       	cpi	r24, 0x01	; 1
    72bc:	09 f0       	breq	.+2      	; 0x72c0 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    72be:	c5 c2       	rjmp	.+1418   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    72c0:	6c ed       	ldi	r22, 0xDC	; 220
    72c2:	78 e1       	ldi	r23, 0x18	; 24
    72c4:	37 cf       	rjmp	.-402    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    72c6:	8e 2d       	mov	r24, r14
    72c8:	83 70       	andi	r24, 0x03	; 3
    72ca:	01 f1       	breq	.+64     	; 0x730c <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    72cc:	91 30       	cpi	r25, 0x01	; 1
    72ce:	51 f4       	brne	.+20     	; 0x72e4 <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    72d0:	6f ec       	ldi	r22, 0xCF	; 207
    72d2:	78 e1       	ldi	r23, 0x18	; 24
    72d4:	85 e5       	ldi	r24, 0x55	; 85
    72d6:	94 e1       	ldi	r25, 0x14	; 20
    72d8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    72dc:	85 e5       	ldi	r24, 0x55	; 85
    72de:	94 e1       	ldi	r25, 0x14	; 20
    72e0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    72e4:	d3 30       	cpi	r29, 0x03	; 3
    72e6:	09 f0       	breq	.+2      	; 0x72ea <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    72e8:	b0 c2       	rjmp	.+1376   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    72ea:	8c e1       	ldi	r24, 0x1C	; 28
    72ec:	8f 19       	sub	r24, r15
    72ee:	98 01       	movw	r18, r16
    72f0:	28 0f       	add	r18, r24
    72f2:	31 1d       	adc	r19, r1
    72f4:	2a 15       	cp	r18, r10
    72f6:	3b 05       	cpc	r19, r11
    72f8:	0c f4       	brge	.+2      	; 0x72fc <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    72fa:	a6 c0       	rjmp	.+332    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    72fc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7300:	81 30       	cpi	r24, 0x01	; 1
    7302:	09 f0       	breq	.+2      	; 0x7306 <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    7304:	a2 c2       	rjmp	.+1348   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    7306:	62 ec       	ldi	r22, 0xC2	; 194
    7308:	78 e1       	ldi	r23, 0x18	; 24
    730a:	14 cf       	rjmp	.-472    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    730c:	91 30       	cpi	r25, 0x01	; 1
    730e:	51 f4       	brne	.+20     	; 0x7324 <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    7310:	65 eb       	ldi	r22, 0xB5	; 181
    7312:	78 e1       	ldi	r23, 0x18	; 24
    7314:	85 e5       	ldi	r24, 0x55	; 85
    7316:	94 e1       	ldi	r25, 0x14	; 20
    7318:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    731c:	85 e5       	ldi	r24, 0x55	; 85
    731e:	94 e1       	ldi	r25, 0x14	; 20
    7320:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7324:	d3 30       	cpi	r29, 0x03	; 3
    7326:	09 f0       	breq	.+2      	; 0x732a <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    7328:	90 c2       	rjmp	.+1312   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    732a:	8d e1       	ldi	r24, 0x1D	; 29
    732c:	8f 19       	sub	r24, r15
    732e:	98 01       	movw	r18, r16
    7330:	28 0f       	add	r18, r24
    7332:	31 1d       	adc	r19, r1
    7334:	2a 15       	cp	r18, r10
    7336:	3b 05       	cpc	r19, r11
    7338:	0c f4       	brge	.+2      	; 0x733c <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    733a:	86 c0       	rjmp	.+268    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    733c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7340:	81 30       	cpi	r24, 0x01	; 1
    7342:	09 f0       	breq	.+2      	; 0x7346 <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    7344:	82 c2       	rjmp	.+1284   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    7346:	68 ea       	ldi	r22, 0xA8	; 168
    7348:	78 e1       	ldi	r23, 0x18	; 24
    734a:	f4 ce       	rjmp	.-536    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    734c:	91 30       	cpi	r25, 0x01	; 1
    734e:	51 f4       	brne	.+20     	; 0x7364 <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7350:	6b e9       	ldi	r22, 0x9B	; 155
    7352:	78 e1       	ldi	r23, 0x18	; 24
    7354:	85 e5       	ldi	r24, 0x55	; 85
    7356:	94 e1       	ldi	r25, 0x14	; 20
    7358:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    735c:	85 e5       	ldi	r24, 0x55	; 85
    735e:	94 e1       	ldi	r25, 0x14	; 20
    7360:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7364:	d5 30       	cpi	r29, 0x05	; 5
    7366:	09 f0       	breq	.+2      	; 0x736a <_Z22Day_In_Bet_Schedullinghhh+0x422>
    7368:	70 c2       	rjmp	.+1248   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    736a:	8e e1       	ldi	r24, 0x1E	; 30
    736c:	8f 19       	sub	r24, r15
    736e:	98 01       	movw	r18, r16
    7370:	28 0f       	add	r18, r24
    7372:	31 1d       	adc	r19, r1
    7374:	2a 15       	cp	r18, r10
    7376:	3b 05       	cpc	r19, r11
    7378:	0c f4       	brge	.+2      	; 0x737c <_Z22Day_In_Bet_Schedullinghhh+0x434>
    737a:	66 c0       	rjmp	.+204    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    737c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7380:	81 30       	cpi	r24, 0x01	; 1
    7382:	09 f0       	breq	.+2      	; 0x7386 <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    7384:	62 c2       	rjmp	.+1220   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7386:	6e e8       	ldi	r22, 0x8E	; 142
    7388:	78 e1       	ldi	r23, 0x18	; 24
    738a:	d4 ce       	rjmp	.-600    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    738c:	91 30       	cpi	r25, 0x01	; 1
    738e:	51 f4       	brne	.+20     	; 0x73a4 <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7390:	61 e8       	ldi	r22, 0x81	; 129
    7392:	78 e1       	ldi	r23, 0x18	; 24
    7394:	85 e5       	ldi	r24, 0x55	; 85
    7396:	94 e1       	ldi	r25, 0x14	; 20
    7398:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    739c:	85 e5       	ldi	r24, 0x55	; 85
    739e:	94 e1       	ldi	r25, 0x14	; 20
    73a0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    73a4:	d7 30       	cpi	r29, 0x07	; 7
    73a6:	09 f0       	breq	.+2      	; 0x73aa <_Z22Day_In_Bet_Schedullinghhh+0x462>
    73a8:	50 c2       	rjmp	.+1184   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73aa:	8e e1       	ldi	r24, 0x1E	; 30
    73ac:	8f 19       	sub	r24, r15
    73ae:	98 01       	movw	r18, r16
    73b0:	28 0f       	add	r18, r24
    73b2:	31 1d       	adc	r19, r1
    73b4:	2a 15       	cp	r18, r10
    73b6:	3b 05       	cpc	r19, r11
    73b8:	0c f4       	brge	.+2      	; 0x73bc <_Z22Day_In_Bet_Schedullinghhh+0x474>
    73ba:	46 c0       	rjmp	.+140    	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73bc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    73c0:	81 30       	cpi	r24, 0x01	; 1
    73c2:	09 f0       	breq	.+2      	; 0x73c6 <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    73c4:	42 c2       	rjmp	.+1156   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    73c6:	64 e7       	ldi	r22, 0x74	; 116
    73c8:	78 e1       	ldi	r23, 0x18	; 24
    73ca:	b4 ce       	rjmp	.-664    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73cc:	91 30       	cpi	r25, 0x01	; 1
    73ce:	51 f4       	brne	.+20     	; 0x73e4 <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    73d0:	67 e6       	ldi	r22, 0x67	; 103
    73d2:	78 e1       	ldi	r23, 0x18	; 24
    73d4:	85 e5       	ldi	r24, 0x55	; 85
    73d6:	94 e1       	ldi	r25, 0x14	; 20
    73d8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73dc:	85 e5       	ldi	r24, 0x55	; 85
    73de:	94 e1       	ldi	r25, 0x14	; 20
    73e0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    73e4:	da 30       	cpi	r29, 0x0A	; 10
    73e6:	09 f0       	breq	.+2      	; 0x73ea <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    73e8:	30 c2       	rjmp	.+1120   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73ea:	8e e1       	ldi	r24, 0x1E	; 30
    73ec:	8f 19       	sub	r24, r15
    73ee:	98 01       	movw	r18, r16
    73f0:	28 0f       	add	r18, r24
    73f2:	31 1d       	adc	r19, r1
    73f4:	2a 15       	cp	r18, r10
    73f6:	3b 05       	cpc	r19, r11
    73f8:	3c f1       	brlt	.+78     	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73fa:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    73fe:	81 30       	cpi	r24, 0x01	; 1
    7400:	09 f0       	breq	.+2      	; 0x7404 <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7402:	23 c2       	rjmp	.+1094   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7404:	6a e5       	ldi	r22, 0x5A	; 90
    7406:	78 e1       	ldi	r23, 0x18	; 24
    7408:	95 ce       	rjmp	.-726    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    740a:	91 30       	cpi	r25, 0x01	; 1
    740c:	51 f4       	brne	.+20     	; 0x7422 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    740e:	6d e4       	ldi	r22, 0x4D	; 77
    7410:	78 e1       	ldi	r23, 0x18	; 24
    7412:	85 e5       	ldi	r24, 0x55	; 85
    7414:	94 e1       	ldi	r25, 0x14	; 20
    7416:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    741a:	85 e5       	ldi	r24, 0x55	; 85
    741c:	94 e1       	ldi	r25, 0x14	; 20
    741e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7422:	dc 30       	cpi	r29, 0x0C	; 12
    7424:	09 f0       	breq	.+2      	; 0x7428 <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    7426:	11 c2       	rjmp	.+1058   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7428:	8e e1       	ldi	r24, 0x1E	; 30
    742a:	8f 19       	sub	r24, r15
    742c:	98 01       	movw	r18, r16
    742e:	28 0f       	add	r18, r24
    7430:	31 1d       	adc	r19, r1
    7432:	2a 15       	cp	r18, r10
    7434:	3b 05       	cpc	r19, r11
    7436:	44 f0       	brlt	.+16     	; 0x7448 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7438:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    743c:	81 30       	cpi	r24, 0x01	; 1
    743e:	09 f0       	breq	.+2      	; 0x7442 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    7440:	04 c2       	rjmp	.+1032   	; 0x784a <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7442:	60 e4       	ldi	r22, 0x40	; 64
    7444:	78 e1       	ldi	r23, 0x18	; 24
    7446:	76 ce       	rjmp	.-788    	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7448:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    744c:	81 30       	cpi	r24, 0x01	; 1
    744e:	21 f5       	brne	.+72     	; 0x7498 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    7450:	62 e3       	ldi	r22, 0x32	; 50
    7452:	78 e1       	ldi	r23, 0x18	; 24
    7454:	04 c0       	rjmp	.+8      	; 0x745e <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7456:	91 30       	cpi	r25, 0x01	; 1
    7458:	f9 f4       	brne	.+62     	; 0x7498 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    745a:	64 e2       	ldi	r22, 0x24	; 36
    745c:	78 e1       	ldi	r23, 0x18	; 24
    745e:	85 e5       	ldi	r24, 0x55	; 85
    7460:	94 e1       	ldi	r25, 0x14	; 20
    7462:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7466:	85 e5       	ldi	r24, 0x55	; 85
    7468:	94 e1       	ldi	r25, 0x14	; 20
    746a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
	//printf("\n");
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    746e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7472:	81 30       	cpi	r24, 0x01	; 1
    7474:	89 f4       	brne	.+34     	; 0x7498 <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    7476:	6e e0       	ldi	r22, 0x0E	; 14
    7478:	78 e1       	ldi	r23, 0x18	; 24
    747a:	85 e5       	ldi	r24, 0x55	; 85
    747c:	94 e1       	ldi	r25, 0x14	; 20
    747e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7482:	4a e0       	ldi	r20, 0x0A	; 10
    7484:	50 e0       	ldi	r21, 0x00	; 0
    7486:	6c 2d       	mov	r22, r12
    7488:	85 e5       	ldi	r24, 0x55	; 85
    748a:	94 e1       	ldi	r25, 0x14	; 20
    748c:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7490:	85 e5       	ldi	r24, 0x55	; 85
    7492:	94 e1       	ldi	r25, 0x14	; 20
    7494:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    7498:	d1 2c       	mov	r13, r1
    749a:	8c 0c       	add	r8, r12
    749c:	9d 1c       	adc	r9, r13
    749e:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    74a2:	08 15       	cp	r16, r8
    74a4:	19 05       	cpc	r17, r9
    74a6:	4c f0       	brlt	.+18     	; 0x74ba <_Z22Day_In_Bet_Schedullinghhh+0x572>
    74a8:	d7 11       	cpse	r29, r7
    74aa:	0a c0       	rjmp	.+20     	; 0x74c0 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    74ac:	c1 30       	cpi	r28, 0x01	; 1
    74ae:	11 f0       	breq	.+4      	; 0x74b4 <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 1;
    74b0:	c1 e0       	ldi	r28, 0x01	; 1
    74b2:	ce c1       	rjmp	.+924    	; 0x7850 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    74b4:	6f ef       	ldi	r22, 0xFF	; 255
    74b6:	77 e1       	ldi	r23, 0x17	; 23
    74b8:	84 c1       	rjmp	.+776    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    74ba:	d7 15       	cp	r29, r7
    74bc:	09 f4       	brne	.+2      	; 0x74c0 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    74be:	b7 c1       	rjmp	.+878    	; 0x782e <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    74c0:	47 2d       	mov	r20, r7
    74c2:	50 e0       	ldi	r21, 0x00	; 0
    74c4:	fa 01       	movw	r30, r20
    74c6:	31 97       	sbiw	r30, 0x01	; 1
    74c8:	ec 30       	cpi	r30, 0x0C	; 12
    74ca:	f1 05       	cpc	r31, r1
    74cc:	08 f0       	brcs	.+2      	; 0x74d0 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    74ce:	a0 c1       	rjmp	.+832    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    74d0:	88 27       	eor	r24, r24
    74d2:	eb 53       	subi	r30, 0x3B	; 59
    74d4:	ff 4f       	sbci	r31, 0xFF	; 255
    74d6:	8f 4f       	sbci	r24, 0xFF	; 255
    74d8:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74dc:	c1 30       	cpi	r28, 0x01	; 1
    74de:	51 f4       	brne	.+20     	; 0x74f4 <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    74e0:	60 ef       	ldi	r22, 0xF0	; 240
    74e2:	77 e1       	ldi	r23, 0x17	; 23
    74e4:	85 e5       	ldi	r24, 0x55	; 85
    74e6:	94 e1       	ldi	r25, 0x14	; 20
    74e8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74ec:	85 e5       	ldi	r24, 0x55	; 85
    74ee:	94 e1       	ldi	r25, 0x14	; 20
    74f0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    74f4:	d1 30       	cpi	r29, 0x01	; 1
    74f6:	e1 f6       	brne	.-72     	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    74f8:	8f e1       	ldi	r24, 0x1F	; 31
    74fa:	8f 19       	sub	r24, r15
    74fc:	08 0f       	add	r16, r24
    74fe:	11 1d       	adc	r17, r1
    7500:	0c 15       	cp	r16, r12
    7502:	1d 05       	cpc	r17, r13
    7504:	0c f4       	brge	.+2      	; 0x7508 <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    7506:	84 c1       	rjmp	.+776    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7508:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    750c:	c1 30       	cpi	r28, 0x01	; 1
    750e:	81 f6       	brne	.-96     	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7510:	61 ee       	ldi	r22, 0xE1	; 225
    7512:	77 e1       	ldi	r23, 0x17	; 23
    7514:	56 c1       	rjmp	.+684    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7516:	c1 30       	cpi	r28, 0x01	; 1
    7518:	51 f4       	brne	.+20     	; 0x752e <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    751a:	62 ed       	ldi	r22, 0xD2	; 210
    751c:	77 e1       	ldi	r23, 0x17	; 23
    751e:	85 e5       	ldi	r24, 0x55	; 85
    7520:	94 e1       	ldi	r25, 0x14	; 20
    7522:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7526:	85 e5       	ldi	r24, 0x55	; 85
    7528:	94 e1       	ldi	r25, 0x14	; 20
    752a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    752e:	d2 30       	cpi	r29, 0x02	; 2
    7530:	09 f0       	breq	.+2      	; 0x7534 <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    7532:	be cf       	rjmp	.-132    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7534:	8f e1       	ldi	r24, 0x1F	; 31
    7536:	8f 19       	sub	r24, r15
    7538:	08 0f       	add	r16, r24
    753a:	11 1d       	adc	r17, r1
    753c:	0c 15       	cp	r16, r12
    753e:	1d 05       	cpc	r17, r13
    7540:	0c f4       	brge	.+2      	; 0x7544 <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    7542:	66 c1       	rjmp	.+716    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7544:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7548:	c1 30       	cpi	r28, 0x01	; 1
    754a:	09 f0       	breq	.+2      	; 0x754e <_Z22Day_In_Bet_Schedullinghhh+0x606>
    754c:	b1 cf       	rjmp	.-158    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    754e:	63 ec       	ldi	r22, 0xC3	; 195
    7550:	77 e1       	ldi	r23, 0x17	; 23
    7552:	37 c1       	rjmp	.+622    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7554:	c1 30       	cpi	r28, 0x01	; 1
    7556:	51 f4       	brne	.+20     	; 0x756c <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7558:	64 eb       	ldi	r22, 0xB4	; 180
    755a:	77 e1       	ldi	r23, 0x17	; 23
    755c:	85 e5       	ldi	r24, 0x55	; 85
    755e:	94 e1       	ldi	r25, 0x14	; 20
    7560:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7564:	85 e5       	ldi	r24, 0x55	; 85
    7566:	94 e1       	ldi	r25, 0x14	; 20
    7568:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    756c:	d4 30       	cpi	r29, 0x04	; 4
    756e:	09 f0       	breq	.+2      	; 0x7572 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    7570:	9f cf       	rjmp	.-194    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7572:	8f e1       	ldi	r24, 0x1F	; 31
    7574:	8f 19       	sub	r24, r15
    7576:	08 0f       	add	r16, r24
    7578:	11 1d       	adc	r17, r1
    757a:	0c 15       	cp	r16, r12
    757c:	1d 05       	cpc	r17, r13
    757e:	0c f4       	brge	.+2      	; 0x7582 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    7580:	47 c1       	rjmp	.+654    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7582:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7586:	c1 30       	cpi	r28, 0x01	; 1
    7588:	09 f0       	breq	.+2      	; 0x758c <_Z22Day_In_Bet_Schedullinghhh+0x644>
    758a:	92 cf       	rjmp	.-220    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    758c:	65 ea       	ldi	r22, 0xA5	; 165
    758e:	77 e1       	ldi	r23, 0x17	; 23
    7590:	18 c1       	rjmp	.+560    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7592:	c1 30       	cpi	r28, 0x01	; 1
    7594:	51 f4       	brne	.+20     	; 0x75aa <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7596:	66 e9       	ldi	r22, 0x96	; 150
    7598:	77 e1       	ldi	r23, 0x17	; 23
    759a:	85 e5       	ldi	r24, 0x55	; 85
    759c:	94 e1       	ldi	r25, 0x14	; 20
    759e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75a2:	85 e5       	ldi	r24, 0x55	; 85
    75a4:	94 e1       	ldi	r25, 0x14	; 20
    75a6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    75aa:	d6 30       	cpi	r29, 0x06	; 6
    75ac:	09 f0       	breq	.+2      	; 0x75b0 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    75ae:	80 cf       	rjmp	.-256    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    75b0:	8f e1       	ldi	r24, 0x1F	; 31
    75b2:	8f 19       	sub	r24, r15
    75b4:	08 0f       	add	r16, r24
    75b6:	11 1d       	adc	r17, r1
    75b8:	0c 15       	cp	r16, r12
    75ba:	1d 05       	cpc	r17, r13
    75bc:	0c f4       	brge	.+2      	; 0x75c0 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    75be:	28 c1       	rjmp	.+592    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75c0:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    75c4:	c1 30       	cpi	r28, 0x01	; 1
    75c6:	09 f0       	breq	.+2      	; 0x75ca <_Z22Day_In_Bet_Schedullinghhh+0x682>
    75c8:	73 cf       	rjmp	.-282    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    75ca:	67 e8       	ldi	r22, 0x87	; 135
    75cc:	77 e1       	ldi	r23, 0x17	; 23
    75ce:	f9 c0       	rjmp	.+498    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75d0:	c1 30       	cpi	r28, 0x01	; 1
    75d2:	51 f4       	brne	.+20     	; 0x75e8 <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    75d4:	68 e7       	ldi	r22, 0x78	; 120
    75d6:	77 e1       	ldi	r23, 0x17	; 23
    75d8:	85 e5       	ldi	r24, 0x55	; 85
    75da:	94 e1       	ldi	r25, 0x14	; 20
    75dc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75e0:	85 e5       	ldi	r24, 0x55	; 85
    75e2:	94 e1       	ldi	r25, 0x14	; 20
    75e4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    75e8:	d8 30       	cpi	r29, 0x08	; 8
    75ea:	09 f0       	breq	.+2      	; 0x75ee <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    75ec:	61 cf       	rjmp	.-318    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    75ee:	8f e1       	ldi	r24, 0x1F	; 31
    75f0:	8f 19       	sub	r24, r15
    75f2:	08 0f       	add	r16, r24
    75f4:	11 1d       	adc	r17, r1
    75f6:	0c 15       	cp	r16, r12
    75f8:	1d 05       	cpc	r17, r13
    75fa:	0c f4       	brge	.+2      	; 0x75fe <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    75fc:	09 c1       	rjmp	.+530    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75fe:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7602:	c1 30       	cpi	r28, 0x01	; 1
    7604:	09 f0       	breq	.+2      	; 0x7608 <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    7606:	54 cf       	rjmp	.-344    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7608:	69 e6       	ldi	r22, 0x69	; 105
    760a:	77 e1       	ldi	r23, 0x17	; 23
    760c:	da c0       	rjmp	.+436    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    760e:	c1 30       	cpi	r28, 0x01	; 1
    7610:	51 f4       	brne	.+20     	; 0x7626 <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7612:	6a e5       	ldi	r22, 0x5A	; 90
    7614:	77 e1       	ldi	r23, 0x17	; 23
    7616:	85 e5       	ldi	r24, 0x55	; 85
    7618:	94 e1       	ldi	r25, 0x14	; 20
    761a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    761e:	85 e5       	ldi	r24, 0x55	; 85
    7620:	94 e1       	ldi	r25, 0x14	; 20
    7622:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    7626:	d9 30       	cpi	r29, 0x09	; 9
    7628:	09 f0       	breq	.+2      	; 0x762c <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    762a:	42 cf       	rjmp	.-380    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    762c:	8f e1       	ldi	r24, 0x1F	; 31
    762e:	8f 19       	sub	r24, r15
    7630:	08 0f       	add	r16, r24
    7632:	11 1d       	adc	r17, r1
    7634:	0c 15       	cp	r16, r12
    7636:	1d 05       	cpc	r17, r13
    7638:	0c f4       	brge	.+2      	; 0x763c <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    763a:	ea c0       	rjmp	.+468    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    763c:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7640:	c1 30       	cpi	r28, 0x01	; 1
    7642:	09 f0       	breq	.+2      	; 0x7646 <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    7644:	35 cf       	rjmp	.-406    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7646:	6b e4       	ldi	r22, 0x4B	; 75
    7648:	77 e1       	ldi	r23, 0x17	; 23
    764a:	bb c0       	rjmp	.+374    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    764c:	c1 30       	cpi	r28, 0x01	; 1
    764e:	51 f4       	brne	.+20     	; 0x7664 <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7650:	6c e3       	ldi	r22, 0x3C	; 60
    7652:	77 e1       	ldi	r23, 0x17	; 23
    7654:	85 e5       	ldi	r24, 0x55	; 85
    7656:	94 e1       	ldi	r25, 0x14	; 20
    7658:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    765c:	85 e5       	ldi	r24, 0x55	; 85
    765e:	94 e1       	ldi	r25, 0x14	; 20
    7660:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    7664:	db 30       	cpi	r29, 0x0B	; 11
    7666:	09 f0       	breq	.+2      	; 0x766a <_Z22Day_In_Bet_Schedullinghhh+0x722>
    7668:	23 cf       	rjmp	.-442    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    766a:	8f e1       	ldi	r24, 0x1F	; 31
    766c:	8f 19       	sub	r24, r15
    766e:	08 0f       	add	r16, r24
    7670:	11 1d       	adc	r17, r1
    7672:	0c 15       	cp	r16, r12
    7674:	1d 05       	cpc	r17, r13
    7676:	0c f4       	brge	.+2      	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x732>
    7678:	cb c0       	rjmp	.+406    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    767a:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    767e:	c1 30       	cpi	r28, 0x01	; 1
    7680:	09 f0       	breq	.+2      	; 0x7684 <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    7682:	16 cf       	rjmp	.-468    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7684:	6d e2       	ldi	r22, 0x2D	; 45
    7686:	77 e1       	ldi	r23, 0x17	; 23
    7688:	9c c0       	rjmp	.+312    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    768a:	8e 2d       	mov	r24, r14
    768c:	83 70       	andi	r24, 0x03	; 3
    768e:	f9 f0       	breq	.+62     	; 0x76ce <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7690:	c1 30       	cpi	r28, 0x01	; 1
    7692:	51 f4       	brne	.+20     	; 0x76a8 <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    7694:	6e e1       	ldi	r22, 0x1E	; 30
    7696:	77 e1       	ldi	r23, 0x17	; 23
    7698:	85 e5       	ldi	r24, 0x55	; 85
    769a:	94 e1       	ldi	r25, 0x14	; 20
    769c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    76a0:	85 e5       	ldi	r24, 0x55	; 85
    76a2:	94 e1       	ldi	r25, 0x14	; 20
    76a4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    76a8:	d3 30       	cpi	r29, 0x03	; 3
    76aa:	09 f0       	breq	.+2      	; 0x76ae <_Z22Day_In_Bet_Schedullinghhh+0x766>
    76ac:	01 cf       	rjmp	.-510    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    76ae:	8c e1       	ldi	r24, 0x1C	; 28
    76b0:	8f 19       	sub	r24, r15
    76b2:	08 0f       	add	r16, r24
    76b4:	11 1d       	adc	r17, r1
    76b6:	0c 15       	cp	r16, r12
    76b8:	1d 05       	cpc	r17, r13
    76ba:	0c f4       	brge	.+2      	; 0x76be <_Z22Day_In_Bet_Schedullinghhh+0x776>
    76bc:	a9 c0       	rjmp	.+338    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    76be:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    76c2:	c1 30       	cpi	r28, 0x01	; 1
    76c4:	09 f0       	breq	.+2      	; 0x76c8 <_Z22Day_In_Bet_Schedullinghhh+0x780>
    76c6:	f4 ce       	rjmp	.-536    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    76c8:	6f e0       	ldi	r22, 0x0F	; 15
    76ca:	77 e1       	ldi	r23, 0x17	; 23
    76cc:	7a c0       	rjmp	.+244    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    76ce:	c1 30       	cpi	r28, 0x01	; 1
    76d0:	51 f4       	brne	.+20     	; 0x76e6 <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    76d2:	60 e0       	ldi	r22, 0x00	; 0
    76d4:	77 e1       	ldi	r23, 0x17	; 23
    76d6:	85 e5       	ldi	r24, 0x55	; 85
    76d8:	94 e1       	ldi	r25, 0x14	; 20
    76da:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    76de:	85 e5       	ldi	r24, 0x55	; 85
    76e0:	94 e1       	ldi	r25, 0x14	; 20
    76e2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    76e6:	d3 30       	cpi	r29, 0x03	; 3
    76e8:	09 f0       	breq	.+2      	; 0x76ec <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    76ea:	e2 ce       	rjmp	.-572    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    76ec:	8d e1       	ldi	r24, 0x1D	; 29
    76ee:	8f 19       	sub	r24, r15
    76f0:	08 0f       	add	r16, r24
    76f2:	11 1d       	adc	r17, r1
    76f4:	0c 15       	cp	r16, r12
    76f6:	1d 05       	cpc	r17, r13
    76f8:	0c f4       	brge	.+2      	; 0x76fc <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    76fa:	8a c0       	rjmp	.+276    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    76fc:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7700:	c1 30       	cpi	r28, 0x01	; 1
    7702:	09 f0       	breq	.+2      	; 0x7706 <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    7704:	d5 ce       	rjmp	.-598    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    7706:	61 ef       	ldi	r22, 0xF1	; 241
    7708:	76 e1       	ldi	r23, 0x16	; 22
    770a:	5b c0       	rjmp	.+182    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    770c:	c1 30       	cpi	r28, 0x01	; 1
    770e:	51 f4       	brne	.+20     	; 0x7724 <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7710:	62 ee       	ldi	r22, 0xE2	; 226
    7712:	76 e1       	ldi	r23, 0x16	; 22
    7714:	85 e5       	ldi	r24, 0x55	; 85
    7716:	94 e1       	ldi	r25, 0x14	; 20
    7718:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    771c:	85 e5       	ldi	r24, 0x55	; 85
    771e:	94 e1       	ldi	r25, 0x14	; 20
    7720:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7724:	d5 30       	cpi	r29, 0x05	; 5
    7726:	09 f0       	breq	.+2      	; 0x772a <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    7728:	c3 ce       	rjmp	.-634    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    772a:	8e e1       	ldi	r24, 0x1E	; 30
    772c:	8f 19       	sub	r24, r15
    772e:	08 0f       	add	r16, r24
    7730:	11 1d       	adc	r17, r1
    7732:	0c 15       	cp	r16, r12
    7734:	1d 05       	cpc	r17, r13
    7736:	0c f4       	brge	.+2      	; 0x773a <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    7738:	6b c0       	rjmp	.+214    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    773a:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    773e:	c1 30       	cpi	r28, 0x01	; 1
    7740:	09 f0       	breq	.+2      	; 0x7744 <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    7742:	b6 ce       	rjmp	.-660    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7744:	63 ed       	ldi	r22, 0xD3	; 211
    7746:	76 e1       	ldi	r23, 0x16	; 22
    7748:	3c c0       	rjmp	.+120    	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    774a:	c1 30       	cpi	r28, 0x01	; 1
    774c:	51 f4       	brne	.+20     	; 0x7762 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    774e:	66 ec       	ldi	r22, 0xC6	; 198
    7750:	76 e1       	ldi	r23, 0x16	; 22
    7752:	85 e5       	ldi	r24, 0x55	; 85
    7754:	94 e1       	ldi	r25, 0x14	; 20
    7756:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    775a:	85 e5       	ldi	r24, 0x55	; 85
    775c:	94 e1       	ldi	r25, 0x14	; 20
    775e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    7762:	d7 30       	cpi	r29, 0x07	; 7
    7764:	09 f0       	breq	.+2      	; 0x7768 <_Z22Day_In_Bet_Schedullinghhh+0x820>
    7766:	a4 ce       	rjmp	.-696    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7768:	8e e1       	ldi	r24, 0x1E	; 30
    776a:	8f 19       	sub	r24, r15
    776c:	08 0f       	add	r16, r24
    776e:	11 1d       	adc	r17, r1
    7770:	0c 15       	cp	r16, r12
    7772:	1d 05       	cpc	r17, r13
    7774:	0c f4       	brge	.+2      	; 0x7778 <_Z22Day_In_Bet_Schedullinghhh+0x830>
    7776:	4c c0       	rjmp	.+152    	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7778:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    777c:	c1 30       	cpi	r28, 0x01	; 1
    777e:	09 f0       	breq	.+2      	; 0x7782 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    7780:	97 ce       	rjmp	.-722    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7782:	67 eb       	ldi	r22, 0xB7	; 183
    7784:	76 e1       	ldi	r23, 0x16	; 22
    7786:	1d c0       	rjmp	.+58     	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7788:	c1 30       	cpi	r28, 0x01	; 1
    778a:	51 f4       	brne	.+20     	; 0x77a0 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    778c:	6a ea       	ldi	r22, 0xAA	; 170
    778e:	76 e1       	ldi	r23, 0x16	; 22
    7790:	85 e5       	ldi	r24, 0x55	; 85
    7792:	94 e1       	ldi	r25, 0x14	; 20
    7794:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7798:	85 e5       	ldi	r24, 0x55	; 85
    779a:	94 e1       	ldi	r25, 0x14	; 20
    779c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    77a0:	da 30       	cpi	r29, 0x0A	; 10
    77a2:	09 f0       	breq	.+2      	; 0x77a6 <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    77a4:	85 ce       	rjmp	.-758    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77a6:	8e e1       	ldi	r24, 0x1E	; 30
    77a8:	8f 19       	sub	r24, r15
    77aa:	08 0f       	add	r16, r24
    77ac:	11 1d       	adc	r17, r1
    77ae:	0c 15       	cp	r16, r12
    77b0:	1d 05       	cpc	r17, r13
    77b2:	74 f1       	brlt	.+92     	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77b4:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    77b8:	c1 30       	cpi	r28, 0x01	; 1
    77ba:	09 f0       	breq	.+2      	; 0x77be <_Z22Day_In_Bet_Schedullinghhh+0x876>
    77bc:	79 ce       	rjmp	.-782    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    77be:	6b e9       	ldi	r22, 0x9B	; 155
    77c0:	76 e1       	ldi	r23, 0x16	; 22
    77c2:	85 e5       	ldi	r24, 0x55	; 85
    77c4:	94 e1       	ldi	r25, 0x14	; 20
    77c6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    77ca:	85 e5       	ldi	r24, 0x55	; 85
    77cc:	94 e1       	ldi	r25, 0x14	; 20
    77ce:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    77d2:	3e c0       	rjmp	.+124    	; 0x7850 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77d4:	c1 30       	cpi	r28, 0x01	; 1
    77d6:	51 f4       	brne	.+20     	; 0x77ec <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    77d8:	6c e8       	ldi	r22, 0x8C	; 140
    77da:	76 e1       	ldi	r23, 0x16	; 22
    77dc:	85 e5       	ldi	r24, 0x55	; 85
    77de:	94 e1       	ldi	r25, 0x14	; 20
    77e0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77e4:	85 e5       	ldi	r24, 0x55	; 85
    77e6:	94 e1       	ldi	r25, 0x14	; 20
    77e8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    77ec:	dc 30       	cpi	r29, 0x0C	; 12
    77ee:	09 f0       	breq	.+2      	; 0x77f2 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    77f0:	5f ce       	rjmp	.-834    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77f2:	8e e1       	ldi	r24, 0x1E	; 30
    77f4:	8f 19       	sub	r24, r15
    77f6:	08 0f       	add	r16, r24
    77f8:	11 1d       	adc	r17, r1
    77fa:	0c 15       	cp	r16, r12
    77fc:	1d 05       	cpc	r17, r13
    77fe:	44 f0       	brlt	.+16     	; 0x7810 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7800:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7804:	c1 30       	cpi	r28, 0x01	; 1
    7806:	09 f0       	breq	.+2      	; 0x780a <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    7808:	53 ce       	rjmp	.-858    	; 0x74b0 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    780a:	6d e7       	ldi	r22, 0x7D	; 125
    780c:	76 e1       	ldi	r23, 0x16	; 22
    780e:	d9 cf       	rjmp	.-78     	; 0x77c2 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7810:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7814:	81 30       	cpi	r24, 0x01	; 1
    7816:	c1 f4       	brne	.+48     	; 0x7848 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    7818:	6d e6       	ldi	r22, 0x6D	; 109
    781a:	76 e1       	ldi	r23, 0x16	; 22
    781c:	85 e5       	ldi	r24, 0x55	; 85
    781e:	94 e1       	ldi	r25, 0x14	; 20
    7820:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7824:	85 e5       	ldi	r24, 0x55	; 85
    7826:	94 e1       	ldi	r25, 0x14	; 20
    7828:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    782c:	0d c0       	rjmp	.+26     	; 0x7848 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    782e:	c1 30       	cpi	r28, 0x01	; 1
    7830:	71 f4       	brne	.+28     	; 0x784e <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7832:	6d e5       	ldi	r22, 0x5D	; 93
    7834:	76 e1       	ldi	r23, 0x16	; 22
    7836:	85 e5       	ldi	r24, 0x55	; 85
    7838:	94 e1       	ldi	r25, 0x14	; 20
    783a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    783e:	85 e5       	ldi	r24, 0x55	; 85
    7840:	94 e1       	ldi	r25, 0x14	; 20
    7842:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    7846:	03 c0       	rjmp	.+6      	; 0x784e <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}	
    7848:	04 c0       	rjmp	.+8      	; 0x7852 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    784a:	c2 e0       	ldi	r28, 0x02	; 2
    784c:	01 c0       	rjmp	.+2      	; 0x7850 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			//printf("deny 4");
			return 0;
    784e:	c0 e0       	ldi	r28, 0x00	; 0
    7850:	8c 2f       	mov	r24, r28
		}
		
	}
	
}	
    7852:	df 91       	pop	r29
    7854:	cf 91       	pop	r28
    7856:	1f 91       	pop	r17
    7858:	0f 91       	pop	r16
    785a:	ff 90       	pop	r15
    785c:	ef 90       	pop	r14
    785e:	df 90       	pop	r13
    7860:	cf 90       	pop	r12
    7862:	bf 90       	pop	r11
    7864:	af 90       	pop	r10
    7866:	9f 90       	pop	r9
    7868:	8f 90       	pop	r8
    786a:	7f 90       	pop	r7
    786c:	08 95       	ret

0000786e <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    786e:	8f 92       	push	r8
    7870:	9f 92       	push	r9
    7872:	af 92       	push	r10
    7874:	bf 92       	push	r11
    7876:	cf 92       	push	r12
    7878:	df 92       	push	r13
    787a:	ef 92       	push	r14
    787c:	ff 92       	push	r15
    787e:	0f 93       	push	r16
    7880:	1f 93       	push	r17
    7882:	cf 93       	push	r28
    7884:	df 93       	push	r29
    7886:	cd b7       	in	r28, 0x3d	; 61
    7888:	de b7       	in	r29, 0x3e	; 62
    788a:	aa 97       	sbiw	r28, 0x2a	; 42
    788c:	0f b6       	in	r0, 0x3f	; 63
    788e:	f8 94       	cli
    7890:	de bf       	out	0x3e, r29	; 62
    7892:	0f be       	out	0x3f, r0	; 63
    7894:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    7896:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    789a:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    789e:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
    78a2:	9e 01       	movw	r18, r28
    78a4:	2f 5f       	subi	r18, 0xFF	; 255
    78a6:	3f 4f       	sbci	r19, 0xFF	; 255
    78a8:	69 01       	movw	r12, r18
    78aa:	ce 01       	movw	r24, r28
    78ac:	8b 96       	adiw	r24, 0x2b	; 43
    78ae:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    78b0:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
    78b2:	e8 17       	cp	r30, r24
    78b4:	f9 07       	cpc	r31, r25
    78b6:	e1 f7       	brne	.-8      	; 0x78b0 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    78b8:	20 e0       	ldi	r18, 0x00	; 0
    78ba:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    78bc:	21 15       	cp	r18, r1
    78be:	31 05       	cpc	r19, r1
    78c0:	39 f4       	brne	.+14     	; 0x78d0 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    78c2:	89 81       	ldd	r24, Y+1	; 0x01
    78c4:	81 11       	cpse	r24, r1
    78c6:	1a c0       	rjmp	.+52     	; 0x78fc <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    78c8:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <_sSchedules+0x7a>
    78cc:	89 83       	std	Y+1, r24	; 0x01
    78ce:	16 c0       	rjmp	.+44     	; 0x78fc <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    78d0:	f6 01       	movw	r30, r12
    78d2:	80 e0       	ldi	r24, 0x00	; 0
    78d4:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    78d6:	d9 01       	movw	r26, r18
    78d8:	a8 56       	subi	r26, 0x68	; 104
    78da:	b6 4f       	sbci	r27, 0xF6	; 246
    78dc:	41 91       	ld	r20, Z+
    78de:	5c 91       	ld	r21, X
    78e0:	45 17       	cp	r20, r21
    78e2:	61 f0       	breq	.+24     	; 0x78fc <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    78e4:	41 11       	cpse	r20, r1
    78e6:	06 c0       	rjmp	.+12     	; 0x78f4 <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    78e8:	4c 91       	ld	r20, X
    78ea:	f6 01       	movw	r30, r12
    78ec:	e8 0f       	add	r30, r24
    78ee:	f9 1f       	adc	r31, r25
    78f0:	40 83       	st	Z, r20
					break;
    78f2:	04 c0       	rjmp	.+8      	; 0x78fc <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
    78f4:	01 96       	adiw	r24, 0x01	; 1
    78f6:	8a 32       	cpi	r24, 0x2A	; 42
    78f8:	91 05       	cpc	r25, r1
    78fa:	81 f7       	brne	.-32     	; 0x78dc <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
    78fc:	2f 5f       	subi	r18, 0xFF	; 255
    78fe:	3f 4f       	sbci	r19, 0xFF	; 255
    7900:	2a 32       	cpi	r18, 0x2A	; 42
    7902:	31 05       	cpc	r19, r1
    7904:	d9 f6       	brne	.-74     	; 0x78bc <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7906:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    790a:	81 30       	cpi	r24, 0x01	; 1
    790c:	51 f4       	brne	.+20     	; 0x7922 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    790e:	68 e3       	ldi	r22, 0x38	; 56
    7910:	7f e0       	ldi	r23, 0x0F	; 15
    7912:	85 e5       	ldi	r24, 0x55	; 85
    7914:	94 e1       	ldi	r25, 0x14	; 20
    7916:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    791a:	85 e5       	ldi	r24, 0x55	; 85
    791c:	94 e1       	ldi	r25, 0x14	; 20
    791e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7922:	8b e1       	ldi	r24, 0x1B	; 27
    7924:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7926:	92 e0       	ldi	r25, 0x02	; 2
    7928:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    792a:	25 e0       	ldi	r18, 0x05	; 5
    792c:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    792e:	f6 01       	movw	r30, r12
    7930:	f1 90       	ld	r15, Z+
    7932:	6f 01       	movw	r12, r30
    7934:	ff 20       	and	r15, r15
    7936:	09 f4       	brne	.+2      	; 0x793a <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    7938:	4c c0       	rjmp	.+152    	; 0x79d2 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    793a:	4a e0       	ldi	r20, 0x0A	; 10
    793c:	50 e0       	ldi	r21, 0x00	; 0
    793e:	6f 2d       	mov	r22, r15
    7940:	85 e5       	ldi	r24, 0x55	; 85
    7942:	94 e1       	ldi	r25, 0x14	; 20
    7944:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7948:	0f 2d       	mov	r16, r15
    794a:	10 e0       	ldi	r17, 0x00	; 0
    794c:	05 56       	subi	r16, 0x65	; 101
    794e:	11 09       	sbc	r17, r1
    7950:	e0 9e       	mul	r14, r16
    7952:	c0 01       	movw	r24, r0
    7954:	e1 9e       	mul	r14, r17
    7956:	90 0d       	add	r25, r0
    7958:	11 24       	eor	r1, r1
    795a:	9c 01       	movw	r18, r24
    795c:	2c 57       	subi	r18, 0x7C	; 124
    795e:	32 4f       	sbci	r19, 0xF2	; 242
    7960:	59 01       	movw	r10, r18
    7962:	f9 01       	movw	r30, r18
    7964:	80 81       	ld	r24, Z
    7966:	81 11       	cpse	r24, r1
    7968:	e2 cf       	rjmp	.-60     	; 0x792e <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    796a:	6b e9       	ldi	r22, 0x9B	; 155
    796c:	6f 0d       	add	r22, r15
    796e:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7972:	88 23       	and	r24, r24
    7974:	e1 f2       	breq	.-72     	; 0x792e <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7976:	f5 01       	movw	r30, r10
    7978:	82 81       	ldd	r24, Z+2	; 0x02
    797a:	85 30       	cpi	r24, 0x05	; 5
    797c:	c1 f2       	breq	.-80     	; 0x792e <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    797e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7982:	81 30       	cpi	r24, 0x01	; 1
    7984:	89 f4       	brne	.+34     	; 0x79a8 <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    7986:	69 e1       	ldi	r22, 0x19	; 25
    7988:	7f e0       	ldi	r23, 0x0F	; 15
    798a:	85 e5       	ldi	r24, 0x55	; 85
    798c:	94 e1       	ldi	r25, 0x14	; 20
    798e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    7992:	4a e0       	ldi	r20, 0x0A	; 10
    7994:	50 e0       	ldi	r21, 0x00	; 0
    7996:	b8 01       	movw	r22, r16
    7998:	85 e5       	ldi	r24, 0x55	; 85
    799a:	94 e1       	ldi	r25, 0x14	; 20
    799c:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    79a0:	85 e5       	ldi	r24, 0x55	; 85
    79a2:	94 e1       	ldi	r25, 0x14	; 20
    79a4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    79a8:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    79ac:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    79b0:	90 62       	ori	r25, 0x20	; 32
    79b2:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    79b6:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    79ba:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0xb6>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    79be:	e0 9e       	mul	r14, r16
    79c0:	f0 01       	movw	r30, r0
    79c2:	e1 9e       	mul	r14, r17
    79c4:	f0 0d       	add	r31, r0
    79c6:	11 24       	eor	r1, r1
    79c8:	ec 57       	subi	r30, 0x7C	; 124
    79ca:	f2 4f       	sbci	r31, 0xF2	; 242
    79cc:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    79ce:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    79d0:	ae cf       	rjmp	.-164    	; 0x792e <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				
			}
		}
	}
	
}
    79d2:	aa 96       	adiw	r28, 0x2a	; 42
    79d4:	0f b6       	in	r0, 0x3f	; 63
    79d6:	f8 94       	cli
    79d8:	de bf       	out	0x3e, r29	; 62
    79da:	0f be       	out	0x3f, r0	; 63
    79dc:	cd bf       	out	0x3d, r28	; 61
    79de:	df 91       	pop	r29
    79e0:	cf 91       	pop	r28
    79e2:	1f 91       	pop	r17
    79e4:	0f 91       	pop	r16
    79e6:	ff 90       	pop	r15
    79e8:	ef 90       	pop	r14
    79ea:	df 90       	pop	r13
    79ec:	cf 90       	pop	r12
    79ee:	bf 90       	pop	r11
    79f0:	af 90       	pop	r10
    79f2:	9f 90       	pop	r9
    79f4:	8f 90       	pop	r8
    79f6:	08 95       	ret

000079f8 <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    79f8:	cf 92       	push	r12
    79fa:	df 92       	push	r13
    79fc:	ef 92       	push	r14
    79fe:	ff 92       	push	r15
    7a00:	0f 93       	push	r16
    7a02:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7a04:	90 91 a0 0d 	lds	r25, 0x0DA0	; 0x800da0 <_sExtra_Plot+0x1c>
    7a08:	96 36       	cpi	r25, 0x66	; 102
    7a0a:	09 f0       	breq	.+2      	; 0x7a0e <_Z17Blower_Monitoringh+0x16>
    7a0c:	49 c0       	rjmp	.+146    	; 0x7aa0 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7a0e:	90 91 9f 0d 	lds	r25, 0x0D9F	; 0x800d9f <_sExtra_Plot+0x1b>
    7a12:	91 11       	cpse	r25, r1
    7a14:	45 c0       	rjmp	.+138    	; 0x7aa0 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7a16:	83 30       	cpi	r24, 0x03	; 3
    7a18:	09 f0       	breq	.+2      	; 0x7a1c <_Z17Blower_Monitoringh+0x24>
    7a1a:	42 c0       	rjmp	.+132    	; 0x7aa0 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a1c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7a20:	81 30       	cpi	r24, 0x01	; 1
    7a22:	51 f4       	brne	.+20     	; 0x7a38 <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7a24:	66 e0       	ldi	r22, 0x06	; 6
    7a26:	7f e0       	ldi	r23, 0x0F	; 15
    7a28:	85 e5       	ldi	r24, 0x55	; 85
    7a2a:	94 e1       	ldi	r25, 0x14	; 20
    7a2c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7a30:	85 e5       	ldi	r24, 0x55	; 85
    7a32:	94 e1       	ldi	r25, 0x14	; 20
    7a34:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7a38:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
				_sSchedules.Blower_On_Retry = _kRESET;
    7a3c:	10 92 2e 0b 	sts	0x0B2E, r1	; 0x800b2e <_sSchedules+0x210>
				_sSchedules.Blower_On_Time = _kRESET;
    7a40:	10 92 2c 0b 	sts	0x0B2C, r1	; 0x800b2c <_sSchedules+0x20e>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7a44:	61 e0       	ldi	r22, 0x01	; 1
    7a46:	80 e0       	ldi	r24, 0x00	; 0
    7a48:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7a4c:	88 23       	and	r24, r24
    7a4e:	21 f1       	breq	.+72     	; 0x7a98 <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7a50:	80 91 a1 0d 	lds	r24, 0x0DA1	; 0x800da1 <_sExtra_Plot+0x1d>
    7a54:	85 30       	cpi	r24, 0x05	; 5
    7a56:	01 f1       	breq	.+64     	; 0x7a98 <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a58:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7a5c:	81 30       	cpi	r24, 0x01	; 1
    7a5e:	51 f4       	brne	.+20     	; 0x7a74 <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7a60:	63 ef       	ldi	r22, 0xF3	; 243
    7a62:	7e e0       	ldi	r23, 0x0E	; 14
    7a64:	85 e5       	ldi	r24, 0x55	; 85
    7a66:	94 e1       	ldi	r25, 0x14	; 20
    7a68:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7a6c:	85 e5       	ldi	r24, 0x55	; 85
    7a6e:	94 e1       	ldi	r25, 0x14	; 20
    7a70:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7a74:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    7a78:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    7a7c:	90 62       	ori	r25, 0x20	; 32
    7a7e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    7a82:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7a86:	81 e0       	ldi	r24, 0x01	; 1
    7a88:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7a8c:	82 e0       	ldi	r24, 0x02	; 2
    7a8e:	80 93 b9 0d 	sts	0x0DB9, r24	; 0x800db9 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7a92:	85 e0       	ldi	r24, 0x05	; 5
    7a94:	80 93 a1 0d 	sts	0x0DA1, r24	; 0x800da1 <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7a98:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7a9c:	81 e0       	ldi	r24, 0x01	; 1
    7a9e:	d5 c1       	rjmp	.+938    	; 0x7e4a <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7aa0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7aa4:	90 e0       	ldi	r25, 0x00	; 0
    7aa6:	01 97       	sbiw	r24, 0x01	; 1
    7aa8:	fc 01       	movw	r30, r24
    7aaa:	ee 0f       	add	r30, r30
    7aac:	ff 1f       	adc	r31, r31
    7aae:	e8 0f       	add	r30, r24
    7ab0:	f9 1f       	adc	r31, r25
    7ab2:	ee 0f       	add	r30, r30
    7ab4:	ff 1f       	adc	r31, r31
    7ab6:	ed 53       	subi	r30, 0x3D	; 61
    7ab8:	f6 4f       	sbci	r31, 0xF6	; 246
    7aba:	20 81       	ld	r18, Z
    7abc:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7abe:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7ac2:	90 e0       	ldi	r25, 0x00	; 0
    7ac4:	01 97       	sbiw	r24, 0x01	; 1
    7ac6:	fc 01       	movw	r30, r24
    7ac8:	ee 0f       	add	r30, r30
    7aca:	ff 1f       	adc	r31, r31
    7acc:	e8 0f       	add	r30, r24
    7ace:	f9 1f       	adc	r31, r25
    7ad0:	ee 0f       	add	r30, r30
    7ad2:	ff 1f       	adc	r31, r31
    7ad4:	e7 5e       	subi	r30, 0xE7	; 231
    7ad6:	f5 4f       	sbci	r31, 0xF5	; 245
    7ad8:	40 81       	ld	r20, Z
    7ada:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7adc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7ae0:	90 e0       	ldi	r25, 0x00	; 0
    7ae2:	01 97       	sbiw	r24, 0x01	; 1
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	ee 0f       	add	r30, r30
    7ae8:	ff 1f       	adc	r31, r31
    7aea:	8e 0f       	add	r24, r30
    7aec:	9f 1f       	adc	r25, r31
    7aee:	fc 01       	movw	r30, r24
    7af0:	e1 59       	subi	r30, 0x91	; 145
    7af2:	f5 4f       	sbci	r31, 0xF5	; 245
    7af4:	80 81       	ld	r24, Z
    7af6:	81 30       	cpi	r24, 0x01	; 1
    7af8:	29 f4       	brne	.+10     	; 0x7b04 <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7afa:	42 0f       	add	r20, r18
    7afc:	53 1f       	adc	r21, r19
    7afe:	60 e0       	ldi	r22, 0x00	; 0
    7b00:	70 e0       	ldi	r23, 0x00	; 0
    7b02:	03 c0       	rjmp	.+6      	; 0x7b0a <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7b04:	40 e0       	ldi	r20, 0x00	; 0
    7b06:	50 e0       	ldi	r21, 0x00	; 0
    7b08:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7b0a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b0e:	90 e0       	ldi	r25, 0x00	; 0
    7b10:	01 97       	sbiw	r24, 0x01	; 1
    7b12:	fc 01       	movw	r30, r24
    7b14:	ee 0f       	add	r30, r30
    7b16:	ff 1f       	adc	r31, r31
    7b18:	e8 0f       	add	r30, r24
    7b1a:	f9 1f       	adc	r31, r25
    7b1c:	ee 0f       	add	r30, r30
    7b1e:	ff 1f       	adc	r31, r31
    7b20:	eb 53       	subi	r30, 0x3B	; 59
    7b22:	f6 4f       	sbci	r31, 0xF6	; 246
    7b24:	20 81       	ld	r18, Z
    7b26:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7b28:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b2c:	90 e0       	ldi	r25, 0x00	; 0
    7b2e:	01 97       	sbiw	r24, 0x01	; 1
    7b30:	fc 01       	movw	r30, r24
    7b32:	ee 0f       	add	r30, r30
    7b34:	ff 1f       	adc	r31, r31
    7b36:	e8 0f       	add	r30, r24
    7b38:	f9 1f       	adc	r31, r25
    7b3a:	ee 0f       	add	r30, r30
    7b3c:	ff 1f       	adc	r31, r31
    7b3e:	e5 5e       	subi	r30, 0xE5	; 229
    7b40:	f5 4f       	sbci	r31, 0xF5	; 245
    7b42:	c0 80       	ld	r12, Z
    7b44:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7b46:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b4a:	90 e0       	ldi	r25, 0x00	; 0
    7b4c:	01 97       	sbiw	r24, 0x01	; 1
    7b4e:	fc 01       	movw	r30, r24
    7b50:	ee 0f       	add	r30, r30
    7b52:	ff 1f       	adc	r31, r31
    7b54:	8e 0f       	add	r24, r30
    7b56:	9f 1f       	adc	r25, r31
    7b58:	fc 01       	movw	r30, r24
    7b5a:	e0 59       	subi	r30, 0x90	; 144
    7b5c:	f5 4f       	sbci	r31, 0xF5	; 245
    7b5e:	80 81       	ld	r24, Z
    7b60:	81 30       	cpi	r24, 0x01	; 1
    7b62:	29 f4       	brne	.+10     	; 0x7b6e <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7b64:	c2 0e       	add	r12, r18
    7b66:	d3 1e       	adc	r13, r19
    7b68:	e1 2c       	mov	r14, r1
    7b6a:	f1 2c       	mov	r15, r1
    7b6c:	03 c0       	rjmp	.+6      	; 0x7b74 <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7b6e:	c1 2c       	mov	r12, r1
    7b70:	d1 2c       	mov	r13, r1
    7b72:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7b74:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b78:	90 e0       	ldi	r25, 0x00	; 0
    7b7a:	01 97       	sbiw	r24, 0x01	; 1
    7b7c:	fc 01       	movw	r30, r24
    7b7e:	ee 0f       	add	r30, r30
    7b80:	ff 1f       	adc	r31, r31
    7b82:	e8 0f       	add	r30, r24
    7b84:	f9 1f       	adc	r31, r25
    7b86:	ee 0f       	add	r30, r30
    7b88:	ff 1f       	adc	r31, r31
    7b8a:	e9 53       	subi	r30, 0x39	; 57
    7b8c:	f6 4f       	sbci	r31, 0xF6	; 246
    7b8e:	20 81       	ld	r18, Z
    7b90:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7b92:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b96:	90 e0       	ldi	r25, 0x00	; 0
    7b98:	01 97       	sbiw	r24, 0x01	; 1
    7b9a:	fc 01       	movw	r30, r24
    7b9c:	ee 0f       	add	r30, r30
    7b9e:	ff 1f       	adc	r31, r31
    7ba0:	e8 0f       	add	r30, r24
    7ba2:	f9 1f       	adc	r31, r25
    7ba4:	ee 0f       	add	r30, r30
    7ba6:	ff 1f       	adc	r31, r31
    7ba8:	e3 5e       	subi	r30, 0xE3	; 227
    7baa:	f5 4f       	sbci	r31, 0xF5	; 245
    7bac:	00 81       	ld	r16, Z
    7bae:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7bb0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7bb4:	90 e0       	ldi	r25, 0x00	; 0
    7bb6:	01 97       	sbiw	r24, 0x01	; 1
    7bb8:	fc 01       	movw	r30, r24
    7bba:	ee 0f       	add	r30, r30
    7bbc:	ff 1f       	adc	r31, r31
    7bbe:	8e 0f       	add	r24, r30
    7bc0:	9f 1f       	adc	r25, r31
    7bc2:	fc 01       	movw	r30, r24
    7bc4:	ef 58       	subi	r30, 0x8F	; 143
    7bc6:	f5 4f       	sbci	r31, 0xF5	; 245
    7bc8:	80 81       	ld	r24, Z
    7bca:	81 30       	cpi	r24, 0x01	; 1
    7bcc:	29 f4       	brne	.+10     	; 0x7bd8 <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7bce:	02 0f       	add	r16, r18
    7bd0:	13 1f       	adc	r17, r19
    7bd2:	20 e0       	ldi	r18, 0x00	; 0
    7bd4:	30 e0       	ldi	r19, 0x00	; 0
    7bd6:	03 c0       	rjmp	.+6      	; 0x7bde <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7bd8:	00 e0       	ldi	r16, 0x00	; 0
    7bda:	10 e0       	ldi	r17, 0x00	; 0
    7bdc:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7bde:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    7be2:	81 11       	cpse	r24, r1
    7be4:	06 c0       	rjmp	.+12     	; 0x7bf2 <_Z17Blower_Monitoringh+0x1fa>
    7be6:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    7bea:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    7bee:	89 2b       	or	r24, r25
    7bf0:	11 f0       	breq	.+4      	; 0x7bf6 <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7bf2:	80 e0       	ldi	r24, 0x00	; 0
    7bf4:	2a c1       	rjmp	.+596    	; 0x7e4a <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7bf6:	80 91 2d 0b 	lds	r24, 0x0B2D	; 0x800b2d <_sSchedules+0x20f>
    7bfa:	81 30       	cpi	r24, 0x01	; 1
    7bfc:	89 f1       	breq	.+98     	; 0x7c60 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7bfe:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c02:	90 e0       	ldi	r25, 0x00	; 0
    7c04:	01 97       	sbiw	r24, 0x01	; 1
    7c06:	fc 01       	movw	r30, r24
    7c08:	ee 0f       	add	r30, r30
    7c0a:	ff 1f       	adc	r31, r31
    7c0c:	8e 0f       	add	r24, r30
    7c0e:	9f 1f       	adc	r25, r31
    7c10:	fc 01       	movw	r30, r24
    7c12:	e1 59       	subi	r30, 0x91	; 145
    7c14:	f5 4f       	sbci	r31, 0xF5	; 245
    7c16:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7c18:	81 30       	cpi	r24, 0x01	; 1
    7c1a:	09 f4       	brne	.+2      	; 0x7c1e <_Z17Blower_Monitoringh+0x226>
    7c1c:	cf c0       	rjmp	.+414    	; 0x7dbc <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7c1e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c22:	90 e0       	ldi	r25, 0x00	; 0
    7c24:	01 97       	sbiw	r24, 0x01	; 1
    7c26:	fc 01       	movw	r30, r24
    7c28:	ee 0f       	add	r30, r30
    7c2a:	ff 1f       	adc	r31, r31
    7c2c:	8e 0f       	add	r24, r30
    7c2e:	9f 1f       	adc	r25, r31
    7c30:	fc 01       	movw	r30, r24
    7c32:	e0 59       	subi	r30, 0x90	; 144
    7c34:	f5 4f       	sbci	r31, 0xF5	; 245
    7c36:	80 81       	ld	r24, Z
    7c38:	81 30       	cpi	r24, 0x01	; 1
    7c3a:	09 f4       	brne	.+2      	; 0x7c3e <_Z17Blower_Monitoringh+0x246>
    7c3c:	bf c0       	rjmp	.+382    	; 0x7dbc <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7c3e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c42:	90 e0       	ldi	r25, 0x00	; 0
    7c44:	01 97       	sbiw	r24, 0x01	; 1
    7c46:	fc 01       	movw	r30, r24
    7c48:	ee 0f       	add	r30, r30
    7c4a:	ff 1f       	adc	r31, r31
    7c4c:	8e 0f       	add	r24, r30
    7c4e:	9f 1f       	adc	r25, r31
    7c50:	fc 01       	movw	r30, r24
    7c52:	ef 58       	subi	r30, 0x8F	; 143
    7c54:	f5 4f       	sbci	r31, 0xF5	; 245
    7c56:	80 81       	ld	r24, Z
    7c58:	81 30       	cpi	r24, 0x01	; 1
    7c5a:	09 f0       	breq	.+2      	; 0x7c5e <_Z17Blower_Monitoringh+0x266>
    7c5c:	ae c0       	rjmp	.+348    	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
    7c5e:	ae c0       	rjmp	.+348    	; 0x7dbc <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7c60:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    7c64:	88 23       	and	r24, r24
    7c66:	21 f1       	breq	.+72     	; 0x7cb0 <_Z17Blower_Monitoringh+0x2b8>
    7c68:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7c6c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7c70:	a0 e0       	ldi	r26, 0x00	; 0
    7c72:	b0 e0       	ldi	r27, 0x00	; 0
    7c74:	84 17       	cp	r24, r20
    7c76:	95 07       	cpc	r25, r21
    7c78:	a6 07       	cpc	r26, r22
    7c7a:	b7 07       	cpc	r27, r23
    7c7c:	08 f4       	brcc	.+2      	; 0x7c80 <_Z17Blower_Monitoringh+0x288>
    7c7e:	9d c0       	rjmp	.+314    	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
    7c80:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7c84:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7c88:	a0 e0       	ldi	r26, 0x00	; 0
    7c8a:	b0 e0       	ldi	r27, 0x00	; 0
    7c8c:	8c 15       	cp	r24, r12
    7c8e:	9d 05       	cpc	r25, r13
    7c90:	ae 05       	cpc	r26, r14
    7c92:	bf 05       	cpc	r27, r15
    7c94:	08 f4       	brcc	.+2      	; 0x7c98 <_Z17Blower_Monitoringh+0x2a0>
    7c96:	91 c0       	rjmp	.+290    	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7c98:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7c9c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7ca0:	a0 e0       	ldi	r26, 0x00	; 0
    7ca2:	b0 e0       	ldi	r27, 0x00	; 0
    7ca4:	80 17       	cp	r24, r16
    7ca6:	91 07       	cpc	r25, r17
    7ca8:	a2 07       	cpc	r26, r18
    7caa:	b3 07       	cpc	r27, r19
    7cac:	08 f4       	brcc	.+2      	; 0x7cb0 <_Z17Blower_Monitoringh+0x2b8>
    7cae:	85 c0       	rjmp	.+266    	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
    7cb0:	20 e0       	ldi	r18, 0x00	; 0
    7cb2:	30 e0       	ldi	r19, 0x00	; 0
    7cb4:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7cb6:	5b e1       	ldi	r21, 0x1B	; 27
    7cb8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7cbc:	90 e0       	ldi	r25, 0x00	; 0
    7cbe:	01 97       	sbiw	r24, 0x01	; 1
    7cc0:	fc 01       	movw	r30, r24
    7cc2:	ee 0f       	add	r30, r30
    7cc4:	ff 1f       	adc	r31, r31
    7cc6:	e8 0f       	add	r30, r24
    7cc8:	f9 1f       	adc	r31, r25
    7cca:	e2 0f       	add	r30, r18
    7ccc:	f3 1f       	adc	r31, r19
    7cce:	e8 56       	subi	r30, 0x68	; 104
    7cd0:	f6 4f       	sbci	r31, 0xF6	; 246
    7cd2:	80 81       	ld	r24, Z
    7cd4:	90 e0       	ldi	r25, 0x00	; 0
    7cd6:	85 56       	subi	r24, 0x65	; 101
    7cd8:	91 09       	sbc	r25, r1
    7cda:	58 9f       	mul	r21, r24
    7cdc:	f0 01       	movw	r30, r0
    7cde:	59 9f       	mul	r21, r25
    7ce0:	f0 0d       	add	r31, r0
    7ce2:	11 24       	eor	r1, r1
    7ce4:	ec 57       	subi	r30, 0x7C	; 124
    7ce6:	f2 4f       	sbci	r31, 0xF2	; 242
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7ce8:	81 81       	ldd	r24, Z+1	; 0x01
    7cea:	88 23       	and	r24, r24
    7cec:	b9 f1       	breq	.+110    	; 0x7d5c <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7cee:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7cf2:	90 e0       	ldi	r25, 0x00	; 0
    7cf4:	01 97       	sbiw	r24, 0x01	; 1
    7cf6:	fc 01       	movw	r30, r24
    7cf8:	ee 0f       	add	r30, r30
    7cfa:	ff 1f       	adc	r31, r31
    7cfc:	e8 0f       	add	r30, r24
    7cfe:	f9 1f       	adc	r31, r25
    7d00:	e2 0f       	add	r30, r18
    7d02:	f3 1f       	adc	r31, r19
    7d04:	e8 56       	subi	r30, 0x68	; 104
    7d06:	f6 4f       	sbci	r31, 0xF6	; 246
    7d08:	80 81       	ld	r24, Z
    7d0a:	90 e0       	ldi	r25, 0x00	; 0
    7d0c:	85 56       	subi	r24, 0x65	; 101
    7d0e:	91 09       	sbc	r25, r1
    7d10:	58 9f       	mul	r21, r24
    7d12:	f0 01       	movw	r30, r0
    7d14:	59 9f       	mul	r21, r25
    7d16:	f0 0d       	add	r31, r0
    7d18:	11 24       	eor	r1, r1
    7d1a:	ec 57       	subi	r30, 0x7C	; 124
    7d1c:	f2 4f       	sbci	r31, 0xF2	; 242
    7d1e:	81 81       	ldd	r24, Z+1	; 0x01
    7d20:	85 36       	cpi	r24, 0x65	; 101
    7d22:	e0 f0       	brcs	.+56     	; 0x7d5c <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7d24:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d28:	90 e0       	ldi	r25, 0x00	; 0
    7d2a:	01 97       	sbiw	r24, 0x01	; 1
    7d2c:	fc 01       	movw	r30, r24
    7d2e:	ee 0f       	add	r30, r30
    7d30:	ff 1f       	adc	r31, r31
    7d32:	e8 0f       	add	r30, r24
    7d34:	f9 1f       	adc	r31, r25
    7d36:	e2 0f       	add	r30, r18
    7d38:	f3 1f       	adc	r31, r19
    7d3a:	e8 56       	subi	r30, 0x68	; 104
    7d3c:	f6 4f       	sbci	r31, 0xF6	; 246
    7d3e:	80 81       	ld	r24, Z
    7d40:	90 e0       	ldi	r25, 0x00	; 0
    7d42:	85 56       	subi	r24, 0x65	; 101
    7d44:	91 09       	sbc	r25, r1
    7d46:	58 9f       	mul	r21, r24
    7d48:	f0 01       	movw	r30, r0
    7d4a:	59 9f       	mul	r21, r25
    7d4c:	f0 0d       	add	r31, r0
    7d4e:	11 24       	eor	r1, r1
    7d50:	ec 57       	subi	r30, 0x7C	; 124
    7d52:	f2 4f       	sbci	r31, 0xF2	; 242
    7d54:	82 81       	ldd	r24, Z+2	; 0x02
    7d56:	84 30       	cpi	r24, 0x04	; 4
    7d58:	09 f4       	brne	.+2      	; 0x7d5c <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7d5a:	41 e0       	ldi	r20, 0x01	; 1
    7d5c:	2f 5f       	subi	r18, 0xFF	; 255
    7d5e:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7d60:	23 30       	cpi	r18, 0x03	; 3
    7d62:	31 05       	cpc	r19, r1
    7d64:	09 f0       	breq	.+2      	; 0x7d68 <_Z17Blower_Monitoringh+0x370>
    7d66:	a8 cf       	rjmp	.-176    	; 0x7cb8 <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7d68:	44 23       	and	r20, r20
    7d6a:	19 f0       	breq	.+6      	; 0x7d72 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7d6c:	88 e0       	ldi	r24, 0x08	; 8
    7d6e:	97 e0       	ldi	r25, 0x07	; 7
    7d70:	02 c0       	rjmp	.+4      	; 0x7d76 <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    7d72:	80 e1       	ldi	r24, 0x10	; 16
    7d74:	9e e0       	ldi	r25, 0x0E	; 14
    7d76:	90 93 a1 0c 	sts	0x0CA1, r25	; 0x800ca1 <_gWait_Blower_Time+0x1>
    7d7a:	80 93 a0 0c 	sts	0x0CA0, r24	; 0x800ca0 <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    7d7e:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7d82:	61 e0       	ldi	r22, 0x01	; 1
    7d84:	80 e0       	ldi	r24, 0x00	; 0
    7d86:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7d8a:	88 23       	and	r24, r24
    7d8c:	b1 f0       	breq	.+44     	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7d8e:	80 91 a1 0d 	lds	r24, 0x0DA1	; 0x800da1 <_sExtra_Plot+0x1d>
    7d92:	85 30       	cpi	r24, 0x05	; 5
    7d94:	91 f0       	breq	.+36     	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7d96:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    7d9a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    7d9e:	90 62       	ori	r25, 0x20	; 32
    7da0:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    7da4:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7da8:	81 e0       	ldi	r24, 0x01	; 1
    7daa:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7dae:	82 e0       	ldi	r24, 0x02	; 2
    7db0:	80 93 b9 0d 	sts	0x0DB9, r24	; 0x800db9 <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7db4:	85 e0       	ldi	r24, 0x05	; 5
    7db6:	80 93 a1 0d 	sts	0x0DA1, r24	; 0x800da1 <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    7dba:	47 c0       	rjmp	.+142    	; 0x7e4a <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    7dbc:	80 91 a0 0c 	lds	r24, 0x0CA0	; 0x800ca0 <_gWait_Blower_Time>
    7dc0:	90 91 a1 0c 	lds	r25, 0x0CA1	; 0x800ca1 <_gWait_Blower_Time+0x1>
    7dc4:	89 2b       	or	r24, r25
    7dc6:	c9 f7       	brne	.-14     	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    7dc8:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7dcc:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7dd0:	a0 e0       	ldi	r26, 0x00	; 0
    7dd2:	b0 e0       	ldi	r27, 0x00	; 0
    7dd4:	84 17       	cp	r24, r20
    7dd6:	95 07       	cpc	r25, r21
    7dd8:	a6 07       	cpc	r26, r22
    7dda:	b7 07       	cpc	r27, r23
    7ddc:	b0 f0       	brcs	.+44     	; 0x7e0a <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    7dde:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7de2:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7de6:	a0 e0       	ldi	r26, 0x00	; 0
    7de8:	b0 e0       	ldi	r27, 0x00	; 0
    7dea:	8c 15       	cp	r24, r12
    7dec:	9d 05       	cpc	r25, r13
    7dee:	ae 05       	cpc	r26, r14
    7df0:	bf 05       	cpc	r27, r15
    7df2:	58 f0       	brcs	.+22     	; 0x7e0a <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7df4:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7df8:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7dfc:	a0 e0       	ldi	r26, 0x00	; 0
    7dfe:	b0 e0       	ldi	r27, 0x00	; 0
    7e00:	80 17       	cp	r24, r16
    7e02:	91 07       	cpc	r25, r17
    7e04:	a2 07       	cpc	r26, r18
    7e06:	b3 07       	cpc	r27, r19
    7e08:	c0 f6       	brcc	.-80     	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7e0a:	61 e0       	ldi	r22, 0x01	; 1
    7e0c:	81 e0       	ldi	r24, 0x01	; 1
    7e0e:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7e12:	88 23       	and	r24, r24
    7e14:	b1 f0       	breq	.+44     	; 0x7e42 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    7e16:	21 e0       	ldi	r18, 0x01	; 1
    7e18:	20 93 2d 0b 	sts	0x0B2D, r18	; 0x800b2d <_sSchedules+0x20f>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    7e1c:	8a e5       	ldi	r24, 0x5A	; 90
    7e1e:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <_sSchedules+0x20e>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7e22:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    7e26:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    7e2a:	90 62       	ori	r25, 0x20	; 32
    7e2c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    7e30:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7e34:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7e38:	82 e0       	ldi	r24, 0x02	; 2
    7e3a:	80 93 b9 0d 	sts	0x0DB9, r24	; 0x800db9 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    7e3e:	84 e0       	ldi	r24, 0x04	; 4
    7e40:	ba cf       	rjmp	.-140    	; 0x7db6 <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    7e42:	84 eb       	ldi	r24, 0xB4	; 180
    7e44:	80 93 2e 0b 	sts	0x0B2E, r24	; 0x800b2e <_sSchedules+0x210>
    7e48:	b8 cf       	rjmp	.-144    	; 0x7dba <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    7e4a:	1f 91       	pop	r17
    7e4c:	0f 91       	pop	r16
    7e4e:	ff 90       	pop	r15
    7e50:	ef 90       	pop	r14
    7e52:	df 90       	pop	r13
    7e54:	cf 90       	pop	r12
    7e56:	08 95       	ret

00007e58 <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    7e58:	ef 92       	push	r14
    7e5a:	ff 92       	push	r15
    7e5c:	0f 93       	push	r16
    7e5e:	1f 93       	push	r17
    7e60:	cf 93       	push	r28
    7e62:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    7e64:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    7e68:	81 11       	cpse	r24, r1
    7e6a:	ca c0       	rjmp	.+404    	; 0x8000 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7e6c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7e70:	81 30       	cpi	r24, 0x01	; 1
    7e72:	51 f4       	brne	.+20     	; 0x7e88 <_Z18Edited_In_Schedulev+0x30>
		{
			_kSERAIL_MON_WRITE("my 14");
    7e74:	6d ee       	ldi	r22, 0xED	; 237
    7e76:	7e e0       	ldi	r23, 0x0E	; 14
    7e78:	85 e5       	ldi	r24, 0x55	; 85
    7e7a:	94 e1       	ldi	r25, 0x14	; 20
    7e7c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    7e80:	85 e5       	ldi	r24, 0x55	; 85
    7e82:	94 e1       	ldi	r25, 0x14	; 20
    7e84:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    7e88:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    7e8c:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    7e90:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    7e94:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    7e98:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    7e9c:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    7ea0:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    7ea4:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    7ea8:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    7eac:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    7eb0:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    7eb4:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    7eb8:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    7ebc:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    7ec0:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    7ec4:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    7ec8:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    7ecc:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    7ed0:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    7ed4:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    7ed8:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    7edc:	80 91 94 0b 	lds	r24, 0x0B94	; 0x800b94 <_sSchedules+0x276>
    7ee0:	81 30       	cpi	r24, 0x01	; 1
    7ee2:	21 f0       	breq	.+8      	; 0x7eec <_Z18Edited_In_Schedulev+0x94>
		{
			Return_Calculated_Previous_Day_Date(1);
    7ee4:	81 e0       	ldi	r24, 0x01	; 1
    7ee6:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    7eea:	18 c0       	rjmp	.+48     	; 0x7f1c <_Z18Edited_In_Schedulev+0xc4>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    7eec:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    7ef0:	80 93 8e 0b 	sts	0x0B8E, r24	; 0x800b8e <_sSchedules+0x270>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    7ef4:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    7ef8:	80 93 8f 0b 	sts	0x0B8F, r24	; 0x800b8f <_sSchedules+0x271>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    7efc:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f00:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    7f04:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7f08:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    7f0c:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f10:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    7f14:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7f18:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    7f1c:	00 e0       	ldi	r16, 0x00	; 0
    7f1e:	10 e0       	ldi	r17, 0x00	; 0
    7f20:	e1 2c       	mov	r14, r1
    7f22:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7f24:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7f28:	e7 01       	movw	r28, r14
    7f2a:	c2 5e       	subi	r28, 0xE2	; 226
    7f2c:	d6 4f       	sbci	r29, 0xF6	; 246
    7f2e:	81 30       	cpi	r24, 0x01	; 1
    7f30:	01 f5       	brne	.+64     	; 0x7f72 <_Z18Edited_In_Schedulev+0x11a>
			{
				Serial.println(F("Running list date "));
    7f32:	6a ed       	ldi	r22, 0xDA	; 218
    7f34:	7e e0       	ldi	r23, 0x0E	; 14
    7f36:	85 e5       	ldi	r24, 0x55	; 85
    7f38:	94 e1       	ldi	r25, 0x14	; 20
    7f3a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    7f3e:	fe 01       	movw	r30, r28
    7f40:	e5 5a       	subi	r30, 0xA5	; 165
    7f42:	ff 4f       	sbci	r31, 0xFF	; 255
    7f44:	60 81       	ld	r22, Z
    7f46:	4a e0       	ldi	r20, 0x0A	; 10
    7f48:	50 e0       	ldi	r21, 0x00	; 0
    7f4a:	85 e5       	ldi	r24, 0x55	; 85
    7f4c:	94 e1       	ldi	r25, 0x14	; 20
    7f4e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    7f52:	66 ec       	ldi	r22, 0xC6	; 198
    7f54:	7e e0       	ldi	r23, 0x0E	; 14
    7f56:	85 e5       	ldi	r24, 0x55	; 85
    7f58:	94 e1       	ldi	r25, 0x14	; 20
    7f5a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    7f5e:	fe 01       	movw	r30, r28
    7f60:	e6 59       	subi	r30, 0x96	; 150
    7f62:	ff 4f       	sbci	r31, 0xFF	; 255
    7f64:	60 81       	ld	r22, Z
    7f66:	4a e0       	ldi	r20, 0x0A	; 10
    7f68:	50 e0       	ldi	r21, 0x00	; 0
    7f6a:	85 e5       	ldi	r24, 0x55	; 85
    7f6c:	94 e1       	ldi	r25, 0x14	; 20
    7f6e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
			}
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    7f72:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f76:	fe 01       	movw	r30, r28
    7f78:	e5 5a       	subi	r30, 0xA5	; 165
    7f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    7f7c:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    7f7e:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7f82:	c6 59       	subi	r28, 0x96	; 150
    7f84:	df 4f       	sbci	r29, 0xFF	; 255
    7f86:	88 83       	st	Y, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    7f88:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f8c:	90 e0       	ldi	r25, 0x00	; 0
    7f8e:	f8 01       	movw	r30, r16
    7f90:	ee 0f       	add	r30, r30
    7f92:	ff 1f       	adc	r31, r31
    7f94:	eb 53       	subi	r30, 0x3B	; 59
    7f96:	f5 4f       	sbci	r31, 0xF5	; 245
    7f98:	91 83       	std	Z+1, r25	; 0x01
    7f9a:	80 83       	st	Z, r24
    7f9c:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7fa0:	90 e0       	ldi	r25, 0x00	; 0
    7fa2:	f8 01       	movw	r30, r16
    7fa4:	ee 0f       	add	r30, r30
    7fa6:	ff 1f       	adc	r31, r31
    7fa8:	e9 53       	subi	r30, 0x39	; 57
    7faa:	f5 4f       	sbci	r31, 0xF5	; 245
    7fac:	91 83       	std	Z+1, r25	; 0x01
    7fae:	80 83       	st	Z, r24
    7fb0:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7fb4:	90 e0       	ldi	r25, 0x00	; 0
    7fb6:	f8 01       	movw	r30, r16
    7fb8:	ee 0f       	add	r30, r30
    7fba:	ff 1f       	adc	r31, r31
    7fbc:	e7 53       	subi	r30, 0x37	; 55
    7fbe:	f5 4f       	sbci	r31, 0xF5	; 245
    7fc0:	91 83       	std	Z+1, r25	; 0x01
    7fc2:	80 83       	st	Z, r24
    7fc4:	2f ef       	ldi	r18, 0xFF	; 255
    7fc6:	e2 1a       	sub	r14, r18
    7fc8:	f2 0a       	sbc	r15, r18
    7fca:	0d 5f       	subi	r16, 0xFD	; 253
    7fcc:	1f 4f       	sbci	r17, 0xFF	; 255
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    7fce:	8e e0       	ldi	r24, 0x0E	; 14
    7fd0:	e8 16       	cp	r14, r24
    7fd2:	f1 04       	cpc	r15, r1
    7fd4:	09 f0       	breq	.+2      	; 0x7fd8 <_Z18Edited_In_Schedulev+0x180>
    7fd6:	a6 cf       	rjmp	.-180    	; 0x7f24 <_Z18Edited_In_Schedulev+0xcc>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7fd8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    7fdc:	81 30       	cpi	r24, 0x01	; 1
    7fde:	31 f4       	brne	.+12     	; 0x7fec <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    7fe0:	61 e8       	ldi	r22, 0x81	; 129
    7fe2:	7e e0       	ldi	r23, 0x0E	; 14
    7fe4:	85 e5       	ldi	r24, 0x55	; 85
    7fe6:	94 e1       	ldi	r25, 0x14	; 20
    7fe8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    7fec:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7ff0:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    7ff4:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7ff8:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		return 1;
    7ffc:	81 e0       	ldi	r24, 0x01	; 1
    7ffe:	c0 c4       	rjmp	.+2432   	; 0x8980 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8000:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8004:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8008:	89 2b       	or	r24, r25
    800a:	09 f0       	breq	.+2      	; 0x800e <_Z18Edited_In_Schedulev+0x1b6>
    800c:	18 c4       	rjmp	.+2096   	; 0x883e <_Z18Edited_In_Schedulev+0x9e6>
    800e:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8012:	88 23       	and	r24, r24
    8014:	09 f4       	brne	.+2      	; 0x8018 <_Z18Edited_In_Schedulev+0x1c0>
    8016:	13 c4       	rjmp	.+2086   	; 0x883e <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8018:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    801c:	81 30       	cpi	r24, 0x01	; 1
    801e:	31 f4       	brne	.+12     	; 0x802c <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    8020:	6c e7       	ldi	r22, 0x7C	; 124
    8022:	7e e0       	ldi	r23, 0x0E	; 14
    8024:	85 e5       	ldi	r24, 0x55	; 85
    8026:	94 e1       	ldi	r25, 0x14	; 20
    8028:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    802c:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8030:	88 23       	and	r24, r24
    8032:	09 f4       	brne	.+2      	; 0x8036 <_Z18Edited_In_Schedulev+0x1de>
    8034:	8f c4       	rjmp	.+2334   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    8036:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    803a:	81 30       	cpi	r24, 0x01	; 1
    803c:	31 f4       	brne	.+12     	; 0x804a <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    803e:	67 e7       	ldi	r22, 0x77	; 119
    8040:	7e e0       	ldi	r23, 0x0E	; 14
    8042:	85 e5       	ldi	r24, 0x55	; 85
    8044:	94 e1       	ldi	r25, 0x14	; 20
    8046:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    804a:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
    804e:	88 23       	and	r24, r24
    8050:	09 f4       	brne	.+2      	; 0x8054 <_Z18Edited_In_Schedulev+0x1fc>
    8052:	80 c4       	rjmp	.+2304   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8054:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8058:	81 30       	cpi	r24, 0x01	; 1
    805a:	51 f5       	brne	.+84     	; 0x80b0 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    805c:	62 e7       	ldi	r22, 0x72	; 114
    805e:	7e e0       	ldi	r23, 0x0E	; 14
    8060:	85 e5       	ldi	r24, 0x55	; 85
    8062:	94 e1       	ldi	r25, 0x14	; 20
    8064:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    8068:	6f e5       	ldi	r22, 0x5F	; 95
    806a:	7e e0       	ldi	r23, 0x0E	; 14
    806c:	85 e5       	ldi	r24, 0x55	; 85
    806e:	94 e1       	ldi	r25, 0x14	; 20
    8070:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8074:	85 e5       	ldi	r24, 0x55	; 85
    8076:	94 e1       	ldi	r25, 0x14	; 20
    8078:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    807c:	60 91 88 0b 	lds	r22, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8080:	4a e0       	ldi	r20, 0x0A	; 10
    8082:	50 e0       	ldi	r21, 0x00	; 0
    8084:	85 e5       	ldi	r24, 0x55	; 85
    8086:	94 e1       	ldi	r25, 0x14	; 20
    8088:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    808c:	6c e4       	ldi	r22, 0x4C	; 76
    808e:	7e e0       	ldi	r23, 0x0E	; 14
    8090:	85 e5       	ldi	r24, 0x55	; 85
    8092:	94 e1       	ldi	r25, 0x14	; 20
    8094:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8098:	85 e5       	ldi	r24, 0x55	; 85
    809a:	94 e1       	ldi	r25, 0x14	; 20
    809c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    80a0:	60 91 7a 0b 	lds	r22, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    80a4:	4a e0       	ldi	r20, 0x0A	; 10
    80a6:	50 e0       	ldi	r21, 0x00	; 0
    80a8:	85 e5       	ldi	r24, 0x55	; 85
    80aa:	94 e1       	ldi	r25, 0x14	; 20
    80ac:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    80b0:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    80b4:	90 91 7a 0b 	lds	r25, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    80b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    80bc:	29 13       	cpse	r18, r25
    80be:	1f c1       	rjmp	.+574    	; 0x82fe <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    80c0:	81 30       	cpi	r24, 0x01	; 1
    80c2:	51 f4       	brne	.+20     	; 0x80d8 <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    80c4:	67 e4       	ldi	r22, 0x47	; 71
    80c6:	7e e0       	ldi	r23, 0x0E	; 14
    80c8:	85 e5       	ldi	r24, 0x55	; 85
    80ca:	94 e1       	ldi	r25, 0x14	; 20
    80cc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    80d0:	85 e5       	ldi	r24, 0x55	; 85
    80d2:	94 e1       	ldi	r25, 0x14	; 20
    80d4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    80d8:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    80dc:	f0 e0       	ldi	r31, 0x00	; 0
    80de:	e7 59       	subi	r30, 0x97	; 151
    80e0:	f6 4f       	sbci	r31, 0xF6	; 246
    80e2:	90 81       	ld	r25, Z
    80e4:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    80e8:	98 13       	cpse	r25, r24
    80ea:	04 c0       	rjmp	.+8      	; 0x80f4 <_Z18Edited_In_Schedulev+0x29c>
    80ec:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    80f0:	81 11       	cpse	r24, r1
    80f2:	41 c0       	rjmp	.+130    	; 0x8176 <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    80f4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    80f8:	81 30       	cpi	r24, 0x01	; 1
    80fa:	51 f4       	brne	.+20     	; 0x8110 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    80fc:	62 e4       	ldi	r22, 0x42	; 66
    80fe:	7e e0       	ldi	r23, 0x0E	; 14
    8100:	85 e5       	ldi	r24, 0x55	; 85
    8102:	94 e1       	ldi	r25, 0x14	; 20
    8104:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8108:	85 e5       	ldi	r24, 0x55	; 85
    810a:	94 e1       	ldi	r25, 0x14	; 20
    810c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    8110:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8114:	88 23       	and	r24, r24
    8116:	09 f4       	brne	.+2      	; 0x811a <_Z18Edited_In_Schedulev+0x2c2>
    8118:	2a c4       	rjmp	.+2132   	; 0x896e <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    811a:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    811e:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8122:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8126:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    812a:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    812e:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8132:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8136:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    813a:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    813e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    8142:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8146:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    814a:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    814e:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    8152:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    8156:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    815a:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    815e:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8162:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8166:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    816a:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    816e:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    8172:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    8176:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    817a:	82 30       	cpi	r24, 0x02	; 2
    817c:	08 f4       	brcc	.+2      	; 0x8180 <_Z18Edited_In_Schedulev+0x328>
    817e:	82 c0       	rjmp	.+260    	; 0x8284 <_Z18Edited_In_Schedulev+0x42c>
    8180:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8182:	84 2f       	mov	r24, r20
    8184:	90 e0       	ldi	r25, 0x00	; 0
    8186:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    818a:	30 e0       	ldi	r19, 0x00	; 0
    818c:	21 50       	subi	r18, 0x01	; 1
    818e:	31 09       	sbc	r19, r1
    8190:	82 17       	cp	r24, r18
    8192:	93 07       	cpc	r25, r19
    8194:	84 f5       	brge	.+96     	; 0x81f6 <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8196:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    819a:	82 5e       	subi	r24, 0xE2	; 226
    819c:	96 4f       	sbci	r25, 0xF6	; 246
    819e:	fc 01       	movw	r30, r24
    81a0:	e5 5a       	subi	r30, 0xA5	; 165
    81a2:	ff 4f       	sbci	r31, 0xFF	; 255
    81a4:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    81a6:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    81aa:	3f 96       	adiw	r30, 0x0f	; 15
    81ac:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    81ae:	23 e0       	ldi	r18, 0x03	; 3
    81b0:	42 9f       	mul	r20, r18
    81b2:	c0 01       	movw	r24, r0
    81b4:	11 24       	eor	r1, r1
    81b6:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    81ba:	30 e0       	ldi	r19, 0x00	; 0
    81bc:	fc 01       	movw	r30, r24
    81be:	ee 0f       	add	r30, r30
    81c0:	ff 1f       	adc	r31, r31
    81c2:	eb 53       	subi	r30, 0x3B	; 59
    81c4:	f5 4f       	sbci	r31, 0xF5	; 245
    81c6:	31 83       	std	Z+1, r19	; 0x01
    81c8:	20 83       	st	Z, r18
    81ca:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    81ce:	30 e0       	ldi	r19, 0x00	; 0
    81d0:	fc 01       	movw	r30, r24
    81d2:	ee 0f       	add	r30, r30
    81d4:	ff 1f       	adc	r31, r31
    81d6:	e9 53       	subi	r30, 0x39	; 57
    81d8:	f5 4f       	sbci	r31, 0xF5	; 245
    81da:	31 83       	std	Z+1, r19	; 0x01
    81dc:	20 83       	st	Z, r18
    81de:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    81e2:	30 e0       	ldi	r19, 0x00	; 0
    81e4:	88 0f       	add	r24, r24
    81e6:	99 1f       	adc	r25, r25
    81e8:	fc 01       	movw	r30, r24
    81ea:	e7 53       	subi	r30, 0x37	; 55
    81ec:	f5 4f       	sbci	r31, 0xF5	; 245
    81ee:	31 83       	std	Z+1, r19	; 0x01
    81f0:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    81f2:	4f 5f       	subi	r20, 0xFF	; 255
    81f4:	c6 cf       	rjmp	.-116    	; 0x8182 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    81f6:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    81fa:	81 50       	subi	r24, 0x01	; 1
    81fc:	8f 30       	cpi	r24, 0x0F	; 15
    81fe:	90 f5       	brcc	.+100    	; 0x8264 <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8200:	28 2f       	mov	r18, r24
    8202:	30 e0       	ldi	r19, 0x00	; 0
    8204:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8208:	22 5e       	subi	r18, 0xE2	; 226
    820a:	36 4f       	sbci	r19, 0xF6	; 246
    820c:	f9 01       	movw	r30, r18
    820e:	e5 5a       	subi	r30, 0xA5	; 165
    8210:	ff 4f       	sbci	r31, 0xFF	; 255
    8212:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8214:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    8218:	3f 96       	adiw	r30, 0x0f	; 15
    821a:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    821c:	93 e0       	ldi	r25, 0x03	; 3
    821e:	89 9f       	mul	r24, r25
    8220:	90 01       	movw	r18, r0
    8222:	11 24       	eor	r1, r1
    8224:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8228:	50 e0       	ldi	r21, 0x00	; 0
    822a:	f9 01       	movw	r30, r18
    822c:	ee 0f       	add	r30, r30
    822e:	ff 1f       	adc	r31, r31
    8230:	eb 53       	subi	r30, 0x3B	; 59
    8232:	f5 4f       	sbci	r31, 0xF5	; 245
    8234:	51 83       	std	Z+1, r21	; 0x01
    8236:	40 83       	st	Z, r20
    8238:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    823c:	50 e0       	ldi	r21, 0x00	; 0
    823e:	f9 01       	movw	r30, r18
    8240:	ee 0f       	add	r30, r30
    8242:	ff 1f       	adc	r31, r31
    8244:	e9 53       	subi	r30, 0x39	; 57
    8246:	f5 4f       	sbci	r31, 0xF5	; 245
    8248:	51 83       	std	Z+1, r21	; 0x01
    824a:	40 83       	st	Z, r20
    824c:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8250:	50 e0       	ldi	r21, 0x00	; 0
    8252:	22 0f       	add	r18, r18
    8254:	33 1f       	adc	r19, r19
    8256:	f9 01       	movw	r30, r18
    8258:	e7 53       	subi	r30, 0x37	; 55
    825a:	f5 4f       	sbci	r31, 0xF5	; 245
    825c:	51 83       	std	Z+1, r21	; 0x01
    825e:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8260:	8f 5f       	subi	r24, 0xFF	; 255
    8262:	cc cf       	rjmp	.-104    	; 0x81fc <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8264:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8268:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    826c:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8270:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8274:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8278:	81 30       	cpi	r24, 0x01	; 1
    827a:	09 f0       	breq	.+2      	; 0x827e <_Z18Edited_In_Schedulev+0x426>
    827c:	6b c3       	rjmp	.+1750   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    827e:	60 e1       	ldi	r22, 0x10	; 16
    8280:	7e e0       	ldi	r23, 0x0E	; 14
    8282:	45 c1       	rjmp	.+650    	; 0x850e <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    8284:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8288:	81 30       	cpi	r24, 0x01	; 1
    828a:	09 f0       	breq	.+2      	; 0x828e <_Z18Edited_In_Schedulev+0x436>
    828c:	63 c3       	rjmp	.+1734   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    828e:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    8292:	80 e0       	ldi	r24, 0x00	; 0
    8294:	90 e0       	ldi	r25, 0x00	; 0
    8296:	20 e0       	ldi	r18, 0x00	; 0
    8298:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    829a:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    829e:	a9 01       	movw	r20, r18
    82a0:	42 5e       	subi	r20, 0xE2	; 226
    82a2:	56 4f       	sbci	r21, 0xF6	; 246
    82a4:	fa 01       	movw	r30, r20
    82a6:	e5 5a       	subi	r30, 0xA5	; 165
    82a8:	ff 4f       	sbci	r31, 0xFF	; 255
    82aa:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    82ac:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    82b0:	3f 96       	adiw	r30, 0x0f	; 15
    82b2:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    82b4:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    82b8:	50 e0       	ldi	r21, 0x00	; 0
    82ba:	fc 01       	movw	r30, r24
    82bc:	ee 0f       	add	r30, r30
    82be:	ff 1f       	adc	r31, r31
    82c0:	eb 53       	subi	r30, 0x3B	; 59
    82c2:	f5 4f       	sbci	r31, 0xF5	; 245
    82c4:	51 83       	std	Z+1, r21	; 0x01
    82c6:	40 83       	st	Z, r20
    82c8:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    82cc:	50 e0       	ldi	r21, 0x00	; 0
    82ce:	fc 01       	movw	r30, r24
    82d0:	ee 0f       	add	r30, r30
    82d2:	ff 1f       	adc	r31, r31
    82d4:	e9 53       	subi	r30, 0x39	; 57
    82d6:	f5 4f       	sbci	r31, 0xF5	; 245
    82d8:	51 83       	std	Z+1, r21	; 0x01
    82da:	40 83       	st	Z, r20
    82dc:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    82e0:	50 e0       	ldi	r21, 0x00	; 0
    82e2:	fc 01       	movw	r30, r24
    82e4:	ee 0f       	add	r30, r30
    82e6:	ff 1f       	adc	r31, r31
    82e8:	e7 53       	subi	r30, 0x37	; 55
    82ea:	f5 4f       	sbci	r31, 0xF5	; 245
    82ec:	51 83       	std	Z+1, r21	; 0x01
    82ee:	40 83       	st	Z, r20
    82f0:	2f 5f       	subi	r18, 0xFF	; 255
    82f2:	3f 4f       	sbci	r19, 0xFF	; 255
    82f4:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    82f6:	2f 30       	cpi	r18, 0x0F	; 15
    82f8:	31 05       	cpc	r19, r1
    82fa:	79 f6       	brne	.-98     	; 0x829a <_Z18Edited_In_Schedulev+0x442>
    82fc:	23 c3       	rjmp	.+1606   	; 0x8944 <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    82fe:	81 30       	cpi	r24, 0x01	; 1
    8300:	51 f4       	brne	.+20     	; 0x8316 <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8302:	6b e0       	ldi	r22, 0x0B	; 11
    8304:	7e e0       	ldi	r23, 0x0E	; 14
    8306:	85 e5       	ldi	r24, 0x55	; 85
    8308:	94 e1       	ldi	r25, 0x14	; 20
    830a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    830e:	85 e5       	ldi	r24, 0x55	; 85
    8310:	94 e1       	ldi	r25, 0x14	; 20
    8312:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    8316:	90 91 88 0b 	lds	r25, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    831a:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    831e:	98 17       	cp	r25, r24
    8320:	08 f0       	brcs	.+2      	; 0x8324 <_Z18Edited_In_Schedulev+0x4cc>
    8322:	43 c1       	rjmp	.+646    	; 0x85aa <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8324:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8328:	81 30       	cpi	r24, 0x01	; 1
    832a:	51 f4       	brne	.+20     	; 0x8340 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    832c:	66 e0       	ldi	r22, 0x06	; 6
    832e:	7e e0       	ldi	r23, 0x0E	; 14
    8330:	85 e5       	ldi	r24, 0x55	; 85
    8332:	94 e1       	ldi	r25, 0x14	; 20
    8334:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8338:	85 e5       	ldi	r24, 0x55	; 85
    833a:	94 e1       	ldi	r25, 0x14	; 20
    833c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8340:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8344:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8348:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    834c:	81 30       	cpi	r24, 0x01	; 1
    834e:	51 f4       	brne	.+20     	; 0x8364 <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    8350:	6f ef       	ldi	r22, 0xFF	; 255
    8352:	7d e0       	ldi	r23, 0x0D	; 13
    8354:	85 e5       	ldi	r24, 0x55	; 85
    8356:	94 e1       	ldi	r25, 0x14	; 20
    8358:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    835c:	85 e5       	ldi	r24, 0x55	; 85
    835e:	94 e1       	ldi	r25, 0x14	; 20
    8360:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8364:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8368:	f0 e0       	ldi	r31, 0x00	; 0
    836a:	e7 59       	subi	r30, 0x97	; 151
    836c:	f6 4f       	sbci	r31, 0xF6	; 246
    836e:	90 81       	ld	r25, Z
    8370:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8374:	98 13       	cpse	r25, r24
    8376:	04 c0       	rjmp	.+8      	; 0x8380 <_Z18Edited_In_Schedulev+0x528>
    8378:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    837c:	81 11       	cpse	r24, r1
    837e:	41 c0       	rjmp	.+130    	; 0x8402 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8380:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8384:	81 30       	cpi	r24, 0x01	; 1
    8386:	51 f4       	brne	.+20     	; 0x839c <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    8388:	68 ef       	ldi	r22, 0xF8	; 248
    838a:	7d e0       	ldi	r23, 0x0D	; 13
    838c:	85 e5       	ldi	r24, 0x55	; 85
    838e:	94 e1       	ldi	r25, 0x14	; 20
    8390:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8394:	85 e5       	ldi	r24, 0x55	; 85
    8396:	94 e1       	ldi	r25, 0x14	; 20
    8398:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    839c:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    83a0:	88 23       	and	r24, r24
    83a2:	09 f4       	brne	.+2      	; 0x83a6 <_Z18Edited_In_Schedulev+0x54e>
    83a4:	e7 c2       	rjmp	.+1486   	; 0x8974 <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    83a6:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    83aa:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    83ae:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    83b2:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    83b6:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    83ba:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    83be:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    83c2:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    83c6:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    83ca:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    83ce:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    83d2:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    83d6:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    83da:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    83de:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    83e2:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    83e6:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    83ea:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    83ee:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    83f2:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    83f6:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    83fa:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    83fe:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8402:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8406:	82 30       	cpi	r24, 0x02	; 2
    8408:	08 f4       	brcc	.+2      	; 0x840c <_Z18Edited_In_Schedulev+0x5b4>
    840a:	92 c0       	rjmp	.+292    	; 0x8530 <_Z18Edited_In_Schedulev+0x6d8>
    840c:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    840e:	84 2f       	mov	r24, r20
    8410:	90 e0       	ldi	r25, 0x00	; 0
    8412:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8416:	30 e0       	ldi	r19, 0x00	; 0
    8418:	21 50       	subi	r18, 0x01	; 1
    841a:	31 09       	sbc	r19, r1
    841c:	82 17       	cp	r24, r18
    841e:	93 07       	cpc	r25, r19
    8420:	84 f5       	brge	.+96     	; 0x8482 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8422:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8426:	82 5e       	subi	r24, 0xE2	; 226
    8428:	96 4f       	sbci	r25, 0xF6	; 246
    842a:	fc 01       	movw	r30, r24
    842c:	e5 5a       	subi	r30, 0xA5	; 165
    842e:	ff 4f       	sbci	r31, 0xFF	; 255
    8430:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8432:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    8436:	3f 96       	adiw	r30, 0x0f	; 15
    8438:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    843a:	23 e0       	ldi	r18, 0x03	; 3
    843c:	42 9f       	mul	r20, r18
    843e:	c0 01       	movw	r24, r0
    8440:	11 24       	eor	r1, r1
    8442:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8446:	30 e0       	ldi	r19, 0x00	; 0
    8448:	fc 01       	movw	r30, r24
    844a:	ee 0f       	add	r30, r30
    844c:	ff 1f       	adc	r31, r31
    844e:	eb 53       	subi	r30, 0x3B	; 59
    8450:	f5 4f       	sbci	r31, 0xF5	; 245
    8452:	31 83       	std	Z+1, r19	; 0x01
    8454:	20 83       	st	Z, r18
    8456:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    845a:	30 e0       	ldi	r19, 0x00	; 0
    845c:	fc 01       	movw	r30, r24
    845e:	ee 0f       	add	r30, r30
    8460:	ff 1f       	adc	r31, r31
    8462:	e9 53       	subi	r30, 0x39	; 57
    8464:	f5 4f       	sbci	r31, 0xF5	; 245
    8466:	31 83       	std	Z+1, r19	; 0x01
    8468:	20 83       	st	Z, r18
    846a:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    846e:	30 e0       	ldi	r19, 0x00	; 0
    8470:	88 0f       	add	r24, r24
    8472:	99 1f       	adc	r25, r25
    8474:	fc 01       	movw	r30, r24
    8476:	e7 53       	subi	r30, 0x37	; 55
    8478:	f5 4f       	sbci	r31, 0xF5	; 245
    847a:	31 83       	std	Z+1, r19	; 0x01
    847c:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    847e:	4f 5f       	subi	r20, 0xFF	; 255
    8480:	c6 cf       	rjmp	.-116    	; 0x840e <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8482:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8486:	81 50       	subi	r24, 0x01	; 1
    8488:	8f 30       	cpi	r24, 0x0F	; 15
    848a:	90 f5       	brcc	.+100    	; 0x84f0 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    848c:	28 2f       	mov	r18, r24
    848e:	30 e0       	ldi	r19, 0x00	; 0
    8490:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8494:	22 5e       	subi	r18, 0xE2	; 226
    8496:	36 4f       	sbci	r19, 0xF6	; 246
    8498:	f9 01       	movw	r30, r18
    849a:	e5 5a       	subi	r30, 0xA5	; 165
    849c:	ff 4f       	sbci	r31, 0xFF	; 255
    849e:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    84a0:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    84a4:	3f 96       	adiw	r30, 0x0f	; 15
    84a6:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    84a8:	93 e0       	ldi	r25, 0x03	; 3
    84aa:	89 9f       	mul	r24, r25
    84ac:	90 01       	movw	r18, r0
    84ae:	11 24       	eor	r1, r1
    84b0:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84b4:	50 e0       	ldi	r21, 0x00	; 0
    84b6:	f9 01       	movw	r30, r18
    84b8:	ee 0f       	add	r30, r30
    84ba:	ff 1f       	adc	r31, r31
    84bc:	eb 53       	subi	r30, 0x3B	; 59
    84be:	f5 4f       	sbci	r31, 0xF5	; 245
    84c0:	51 83       	std	Z+1, r21	; 0x01
    84c2:	40 83       	st	Z, r20
    84c4:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84c8:	50 e0       	ldi	r21, 0x00	; 0
    84ca:	f9 01       	movw	r30, r18
    84cc:	ee 0f       	add	r30, r30
    84ce:	ff 1f       	adc	r31, r31
    84d0:	e9 53       	subi	r30, 0x39	; 57
    84d2:	f5 4f       	sbci	r31, 0xF5	; 245
    84d4:	51 83       	std	Z+1, r21	; 0x01
    84d6:	40 83       	st	Z, r20
    84d8:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84dc:	50 e0       	ldi	r21, 0x00	; 0
    84de:	22 0f       	add	r18, r18
    84e0:	33 1f       	adc	r19, r19
    84e2:	f9 01       	movw	r30, r18
    84e4:	e7 53       	subi	r30, 0x37	; 55
    84e6:	f5 4f       	sbci	r31, 0xF5	; 245
    84e8:	51 83       	std	Z+1, r21	; 0x01
    84ea:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    84ec:	8f 5f       	subi	r24, 0xFF	; 255
    84ee:	cc cf       	rjmp	.-104    	; 0x8488 <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    84f0:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    84f4:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    84f8:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    84fc:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8500:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8504:	81 30       	cpi	r24, 0x01	; 1
    8506:	09 f0       	breq	.+2      	; 0x850a <_Z18Edited_In_Schedulev+0x6b2>
    8508:	25 c2       	rjmp	.+1098   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    850a:	66 ec       	ldi	r22, 0xC6	; 198
    850c:	7d e0       	ldi	r23, 0x0D	; 13
    850e:	85 e5       	ldi	r24, 0x55	; 85
    8510:	94 e1       	ldi	r25, 0x14	; 20
    8512:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8516:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    851a:	4a e0       	ldi	r20, 0x0A	; 10
    851c:	50 e0       	ldi	r21, 0x00	; 0
    851e:	85 e5       	ldi	r24, 0x55	; 85
    8520:	94 e1       	ldi	r25, 0x14	; 20
    8522:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    8526:	85 e5       	ldi	r24, 0x55	; 85
    8528:	94 e1       	ldi	r25, 0x14	; 20
    852a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    852e:	12 c2       	rjmp	.+1060   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8530:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8534:	81 30       	cpi	r24, 0x01	; 1
    8536:	09 f0       	breq	.+2      	; 0x853a <_Z18Edited_In_Schedulev+0x6e2>
    8538:	0d c2       	rjmp	.+1050   	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    853a:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    853e:	80 e0       	ldi	r24, 0x00	; 0
    8540:	90 e0       	ldi	r25, 0x00	; 0
    8542:	20 e0       	ldi	r18, 0x00	; 0
    8544:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8546:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    854a:	a9 01       	movw	r20, r18
    854c:	42 5e       	subi	r20, 0xE2	; 226
    854e:	56 4f       	sbci	r21, 0xF6	; 246
    8550:	fa 01       	movw	r30, r20
    8552:	e5 5a       	subi	r30, 0xA5	; 165
    8554:	ff 4f       	sbci	r31, 0xFF	; 255
    8556:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8558:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    855c:	3f 96       	adiw	r30, 0x0f	; 15
    855e:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8560:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8564:	50 e0       	ldi	r21, 0x00	; 0
    8566:	fc 01       	movw	r30, r24
    8568:	ee 0f       	add	r30, r30
    856a:	ff 1f       	adc	r31, r31
    856c:	eb 53       	subi	r30, 0x3B	; 59
    856e:	f5 4f       	sbci	r31, 0xF5	; 245
    8570:	51 83       	std	Z+1, r21	; 0x01
    8572:	40 83       	st	Z, r20
    8574:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8578:	50 e0       	ldi	r21, 0x00	; 0
    857a:	fc 01       	movw	r30, r24
    857c:	ee 0f       	add	r30, r30
    857e:	ff 1f       	adc	r31, r31
    8580:	e9 53       	subi	r30, 0x39	; 57
    8582:	f5 4f       	sbci	r31, 0xF5	; 245
    8584:	51 83       	std	Z+1, r21	; 0x01
    8586:	40 83       	st	Z, r20
    8588:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    858c:	50 e0       	ldi	r21, 0x00	; 0
    858e:	fc 01       	movw	r30, r24
    8590:	ee 0f       	add	r30, r30
    8592:	ff 1f       	adc	r31, r31
    8594:	e7 53       	subi	r30, 0x37	; 55
    8596:	f5 4f       	sbci	r31, 0xF5	; 245
    8598:	51 83       	std	Z+1, r21	; 0x01
    859a:	40 83       	st	Z, r20
    859c:	2f 5f       	subi	r18, 0xFF	; 255
    859e:	3f 4f       	sbci	r19, 0xFF	; 255
    85a0:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    85a2:	2f 30       	cpi	r18, 0x0F	; 15
    85a4:	31 05       	cpc	r19, r1
    85a6:	79 f6       	brne	.-98     	; 0x8546 <_Z18Edited_In_Schedulev+0x6ee>
    85a8:	cd c1       	rjmp	.+922    	; 0x8944 <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    85aa:	90 91 88 0b 	lds	r25, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    85ae:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    85b2:	89 17       	cp	r24, r25
    85b4:	08 f0       	brcs	.+2      	; 0x85b8 <_Z18Edited_In_Schedulev+0x760>
    85b6:	ce c1       	rjmp	.+924    	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    85bc:	81 30       	cpi	r24, 0x01	; 1
    85be:	51 f4       	brne	.+20     	; 0x85d4 <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    85c0:	61 ec       	ldi	r22, 0xC1	; 193
    85c2:	7d e0       	ldi	r23, 0x0D	; 13
    85c4:	85 e5       	ldi	r24, 0x55	; 85
    85c6:	94 e1       	ldi	r25, 0x14	; 20
    85c8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85cc:	85 e5       	ldi	r24, 0x55	; 85
    85ce:	94 e1       	ldi	r25, 0x14	; 20
    85d0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    85d4:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    85d8:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85dc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    85e0:	81 30       	cpi	r24, 0x01	; 1
    85e2:	51 f4       	brne	.+20     	; 0x85f8 <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    85e4:	6c eb       	ldi	r22, 0xBC	; 188
    85e6:	7d e0       	ldi	r23, 0x0D	; 13
    85e8:	85 e5       	ldi	r24, 0x55	; 85
    85ea:	94 e1       	ldi	r25, 0x14	; 20
    85ec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85f0:	85 e5       	ldi	r24, 0x55	; 85
    85f2:	94 e1       	ldi	r25, 0x14	; 20
    85f4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    85f8:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    85fc:	f0 e0       	ldi	r31, 0x00	; 0
    85fe:	e7 59       	subi	r30, 0x97	; 151
    8600:	f6 4f       	sbci	r31, 0xF6	; 246
    8602:	90 81       	ld	r25, Z
    8604:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8608:	98 13       	cpse	r25, r24
    860a:	04 c0       	rjmp	.+8      	; 0x8614 <_Z18Edited_In_Schedulev+0x7bc>
    860c:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8610:	81 11       	cpse	r24, r1
    8612:	41 c0       	rjmp	.+130    	; 0x8696 <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8614:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8618:	81 30       	cpi	r24, 0x01	; 1
    861a:	51 f4       	brne	.+20     	; 0x8630 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    861c:	67 eb       	ldi	r22, 0xB7	; 183
    861e:	7d e0       	ldi	r23, 0x0D	; 13
    8620:	85 e5       	ldi	r24, 0x55	; 85
    8622:	94 e1       	ldi	r25, 0x14	; 20
    8624:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8628:	85 e5       	ldi	r24, 0x55	; 85
    862a:	94 e1       	ldi	r25, 0x14	; 20
    862c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    8630:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8634:	88 23       	and	r24, r24
    8636:	09 f4       	brne	.+2      	; 0x863a <_Z18Edited_In_Schedulev+0x7e2>
    8638:	a0 c1       	rjmp	.+832    	; 0x897a <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    863a:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    863e:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8642:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8646:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    864a:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    864e:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8652:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8656:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    865a:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    865e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    8662:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8666:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    866a:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    866e:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    8672:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    8676:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    867a:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    867e:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8682:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8686:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    868a:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    868e:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    8692:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8696:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    869a:	82 30       	cpi	r24, 0x02	; 2
    869c:	08 f4       	brcc	.+2      	; 0x86a0 <_Z18Edited_In_Schedulev+0x848>
    869e:	92 c0       	rjmp	.+292    	; 0x87c4 <_Z18Edited_In_Schedulev+0x96c>
    86a0:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    86a2:	84 2f       	mov	r24, r20
    86a4:	90 e0       	ldi	r25, 0x00	; 0
    86a6:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    86aa:	30 e0       	ldi	r19, 0x00	; 0
    86ac:	21 50       	subi	r18, 0x01	; 1
    86ae:	31 09       	sbc	r19, r1
    86b0:	82 17       	cp	r24, r18
    86b2:	93 07       	cpc	r25, r19
    86b4:	84 f5       	brge	.+96     	; 0x8716 <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    86b6:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86ba:	82 5e       	subi	r24, 0xE2	; 226
    86bc:	96 4f       	sbci	r25, 0xF6	; 246
    86be:	fc 01       	movw	r30, r24
    86c0:	e5 5a       	subi	r30, 0xA5	; 165
    86c2:	ff 4f       	sbci	r31, 0xFF	; 255
    86c4:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    86c6:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    86ca:	3f 96       	adiw	r30, 0x0f	; 15
    86cc:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    86ce:	23 e0       	ldi	r18, 0x03	; 3
    86d0:	42 9f       	mul	r20, r18
    86d2:	c0 01       	movw	r24, r0
    86d4:	11 24       	eor	r1, r1
    86d6:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86da:	30 e0       	ldi	r19, 0x00	; 0
    86dc:	fc 01       	movw	r30, r24
    86de:	ee 0f       	add	r30, r30
    86e0:	ff 1f       	adc	r31, r31
    86e2:	eb 53       	subi	r30, 0x3B	; 59
    86e4:	f5 4f       	sbci	r31, 0xF5	; 245
    86e6:	31 83       	std	Z+1, r19	; 0x01
    86e8:	20 83       	st	Z, r18
    86ea:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86ee:	30 e0       	ldi	r19, 0x00	; 0
    86f0:	fc 01       	movw	r30, r24
    86f2:	ee 0f       	add	r30, r30
    86f4:	ff 1f       	adc	r31, r31
    86f6:	e9 53       	subi	r30, 0x39	; 57
    86f8:	f5 4f       	sbci	r31, 0xF5	; 245
    86fa:	31 83       	std	Z+1, r19	; 0x01
    86fc:	20 83       	st	Z, r18
    86fe:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8702:	30 e0       	ldi	r19, 0x00	; 0
    8704:	88 0f       	add	r24, r24
    8706:	99 1f       	adc	r25, r25
    8708:	fc 01       	movw	r30, r24
    870a:	e7 53       	subi	r30, 0x37	; 55
    870c:	f5 4f       	sbci	r31, 0xF5	; 245
    870e:	31 83       	std	Z+1, r19	; 0x01
    8710:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8712:	4f 5f       	subi	r20, 0xFF	; 255
    8714:	c6 cf       	rjmp	.-116    	; 0x86a2 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8716:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    871a:	81 50       	subi	r24, 0x01	; 1
    871c:	8f 30       	cpi	r24, 0x0F	; 15
    871e:	90 f5       	brcc	.+100    	; 0x8784 <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8720:	28 2f       	mov	r18, r24
    8722:	30 e0       	ldi	r19, 0x00	; 0
    8724:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8728:	22 5e       	subi	r18, 0xE2	; 226
    872a:	36 4f       	sbci	r19, 0xF6	; 246
    872c:	f9 01       	movw	r30, r18
    872e:	e5 5a       	subi	r30, 0xA5	; 165
    8730:	ff 4f       	sbci	r31, 0xFF	; 255
    8732:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8734:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    8738:	3f 96       	adiw	r30, 0x0f	; 15
    873a:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    873c:	93 e0       	ldi	r25, 0x03	; 3
    873e:	89 9f       	mul	r24, r25
    8740:	90 01       	movw	r18, r0
    8742:	11 24       	eor	r1, r1
    8744:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8748:	50 e0       	ldi	r21, 0x00	; 0
    874a:	f9 01       	movw	r30, r18
    874c:	ee 0f       	add	r30, r30
    874e:	ff 1f       	adc	r31, r31
    8750:	eb 53       	subi	r30, 0x3B	; 59
    8752:	f5 4f       	sbci	r31, 0xF5	; 245
    8754:	51 83       	std	Z+1, r21	; 0x01
    8756:	40 83       	st	Z, r20
    8758:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    875c:	50 e0       	ldi	r21, 0x00	; 0
    875e:	f9 01       	movw	r30, r18
    8760:	ee 0f       	add	r30, r30
    8762:	ff 1f       	adc	r31, r31
    8764:	e9 53       	subi	r30, 0x39	; 57
    8766:	f5 4f       	sbci	r31, 0xF5	; 245
    8768:	51 83       	std	Z+1, r21	; 0x01
    876a:	40 83       	st	Z, r20
    876c:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8770:	50 e0       	ldi	r21, 0x00	; 0
    8772:	22 0f       	add	r18, r18
    8774:	33 1f       	adc	r19, r19
    8776:	f9 01       	movw	r30, r18
    8778:	e7 53       	subi	r30, 0x37	; 55
    877a:	f5 4f       	sbci	r31, 0xF5	; 245
    877c:	51 83       	std	Z+1, r21	; 0x01
    877e:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8780:	8f 5f       	subi	r24, 0xFF	; 255
    8782:	cc cf       	rjmp	.-104    	; 0x871c <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8784:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8788:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    878c:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8790:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8794:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8798:	81 30       	cpi	r24, 0x01	; 1
    879a:	09 f0       	breq	.+2      	; 0x879e <_Z18Edited_In_Schedulev+0x946>
    879c:	db c0       	rjmp	.+438    	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    879e:	65 e8       	ldi	r22, 0x85	; 133
    87a0:	7d e0       	ldi	r23, 0x0D	; 13
    87a2:	85 e5       	ldi	r24, 0x55	; 85
    87a4:	94 e1       	ldi	r25, 0x14	; 20
    87a6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    87aa:	85 e5       	ldi	r24, 0x55	; 85
    87ac:	94 e1       	ldi	r25, 0x14	; 20
    87ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    87b2:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    87b6:	4a e0       	ldi	r20, 0x0A	; 10
    87b8:	50 e0       	ldi	r21, 0x00	; 0
    87ba:	85 e5       	ldi	r24, 0x55	; 85
    87bc:	94 e1       	ldi	r25, 0x14	; 20
    87be:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    87c2:	c8 c0       	rjmp	.+400    	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    87c4:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    87c8:	81 30       	cpi	r24, 0x01	; 1
    87ca:	09 f0       	breq	.+2      	; 0x87ce <_Z18Edited_In_Schedulev+0x976>
    87cc:	c3 c0       	rjmp	.+390    	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    87ce:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    87d2:	80 e0       	ldi	r24, 0x00	; 0
    87d4:	90 e0       	ldi	r25, 0x00	; 0
    87d6:	20 e0       	ldi	r18, 0x00	; 0
    87d8:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    87da:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    87de:	a9 01       	movw	r20, r18
    87e0:	42 5e       	subi	r20, 0xE2	; 226
    87e2:	56 4f       	sbci	r21, 0xF6	; 246
    87e4:	fa 01       	movw	r30, r20
    87e6:	e5 5a       	subi	r30, 0xA5	; 165
    87e8:	ff 4f       	sbci	r31, 0xFF	; 255
    87ea:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    87ec:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    87f0:	3f 96       	adiw	r30, 0x0f	; 15
    87f2:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    87f4:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    87f8:	50 e0       	ldi	r21, 0x00	; 0
    87fa:	fc 01       	movw	r30, r24
    87fc:	ee 0f       	add	r30, r30
    87fe:	ff 1f       	adc	r31, r31
    8800:	eb 53       	subi	r30, 0x3B	; 59
    8802:	f5 4f       	sbci	r31, 0xF5	; 245
    8804:	51 83       	std	Z+1, r21	; 0x01
    8806:	40 83       	st	Z, r20
    8808:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    880c:	50 e0       	ldi	r21, 0x00	; 0
    880e:	fc 01       	movw	r30, r24
    8810:	ee 0f       	add	r30, r30
    8812:	ff 1f       	adc	r31, r31
    8814:	e9 53       	subi	r30, 0x39	; 57
    8816:	f5 4f       	sbci	r31, 0xF5	; 245
    8818:	51 83       	std	Z+1, r21	; 0x01
    881a:	40 83       	st	Z, r20
    881c:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8820:	50 e0       	ldi	r21, 0x00	; 0
    8822:	fc 01       	movw	r30, r24
    8824:	ee 0f       	add	r30, r30
    8826:	ff 1f       	adc	r31, r31
    8828:	e7 53       	subi	r30, 0x37	; 55
    882a:	f5 4f       	sbci	r31, 0xF5	; 245
    882c:	51 83       	std	Z+1, r21	; 0x01
    882e:	40 83       	st	Z, r20
    8830:	2f 5f       	subi	r18, 0xFF	; 255
    8832:	3f 4f       	sbci	r19, 0xFF	; 255
    8834:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8836:	2f 30       	cpi	r18, 0x0F	; 15
    8838:	31 05       	cpc	r19, r1
    883a:	79 f6       	brne	.-98     	; 0x87da <_Z18Edited_In_Schedulev+0x982>
    883c:	83 c0       	rjmp	.+262    	; 0x8944 <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    883e:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8842:	81 11       	cpse	r24, r1
    8844:	88 c0       	rjmp	.+272    	; 0x8956 <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8846:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    884a:	88 23       	and	r24, r24
    884c:	09 f4       	brne	.+2      	; 0x8850 <_Z18Edited_In_Schedulev+0x9f8>
    884e:	83 c0       	rjmp	.+262    	; 0x8956 <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8850:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8854:	81 30       	cpi	r24, 0x01	; 1
    8856:	51 f4       	brne	.+20     	; 0x886c <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    8858:	6f e7       	ldi	r22, 0x7F	; 127
    885a:	7d e0       	ldi	r23, 0x0D	; 13
    885c:	85 e5       	ldi	r24, 0x55	; 85
    885e:	94 e1       	ldi	r25, 0x14	; 20
    8860:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8864:	85 e5       	ldi	r24, 0x55	; 85
    8866:	94 e1       	ldi	r25, 0x14	; 20
    8868:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    886c:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8870:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8874:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    8878:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    887c:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8880:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8884:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    8888:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    888c:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8890:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8894:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    8898:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    889c:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    88a0:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    88a4:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    88a8:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    88ac:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    88b0:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    88b4:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    88b8:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    88bc:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    88c0:	81 e0       	ldi	r24, 0x01	; 1
    88c2:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    88c6:	80 e0       	ldi	r24, 0x00	; 0
    88c8:	90 e0       	ldi	r25, 0x00	; 0
    88ca:	20 e0       	ldi	r18, 0x00	; 0
    88cc:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    88ce:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    88d2:	a9 01       	movw	r20, r18
    88d4:	42 5e       	subi	r20, 0xE2	; 226
    88d6:	56 4f       	sbci	r21, 0xF6	; 246
    88d8:	fa 01       	movw	r30, r20
    88da:	e5 5a       	subi	r30, 0xA5	; 165
    88dc:	ff 4f       	sbci	r31, 0xFF	; 255
    88de:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    88e0:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    88e4:	3f 96       	adiw	r30, 0x0f	; 15
    88e6:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    88e8:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    88ec:	50 e0       	ldi	r21, 0x00	; 0
    88ee:	fc 01       	movw	r30, r24
    88f0:	ee 0f       	add	r30, r30
    88f2:	ff 1f       	adc	r31, r31
    88f4:	eb 53       	subi	r30, 0x3B	; 59
    88f6:	f5 4f       	sbci	r31, 0xF5	; 245
    88f8:	51 83       	std	Z+1, r21	; 0x01
    88fa:	40 83       	st	Z, r20
    88fc:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8900:	50 e0       	ldi	r21, 0x00	; 0
    8902:	fc 01       	movw	r30, r24
    8904:	ee 0f       	add	r30, r30
    8906:	ff 1f       	adc	r31, r31
    8908:	e9 53       	subi	r30, 0x39	; 57
    890a:	f5 4f       	sbci	r31, 0xF5	; 245
    890c:	51 83       	std	Z+1, r21	; 0x01
    890e:	40 83       	st	Z, r20
    8910:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8914:	50 e0       	ldi	r21, 0x00	; 0
    8916:	fc 01       	movw	r30, r24
    8918:	ee 0f       	add	r30, r30
    891a:	ff 1f       	adc	r31, r31
    891c:	e7 53       	subi	r30, 0x37	; 55
    891e:	f5 4f       	sbci	r31, 0xF5	; 245
    8920:	51 83       	std	Z+1, r21	; 0x01
    8922:	40 83       	st	Z, r20
    8924:	2f 5f       	subi	r18, 0xFF	; 255
    8926:	3f 4f       	sbci	r19, 0xFF	; 255
    8928:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    892a:	2e 30       	cpi	r18, 0x0E	; 14
    892c:	31 05       	cpc	r19, r1
    892e:	79 f6       	brne	.-98     	; 0x88ce <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8930:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8934:	81 30       	cpi	r24, 0x01	; 1
    8936:	31 f4       	brne	.+12     	; 0x8944 <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8938:	6a e3       	ldi	r22, 0x3A	; 58
    893a:	7d e0       	ldi	r23, 0x0D	; 13
    893c:	85 e5       	ldi	r24, 0x55	; 85
    893e:	94 e1       	ldi	r25, 0x14	; 20
    8940:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8944:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8948:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    894c:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    8950:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8954:	15 c0       	rjmp	.+42     	; 0x8980 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8956:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    895a:	81 11       	cpse	r24, r1
    895c:	fb cf       	rjmp	.-10     	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
    895e:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8962:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8966:	89 2b       	or	r24, r25
    8968:	09 f4       	brne	.+2      	; 0x896c <_Z18Edited_In_Schedulev+0xb14>
    896a:	72 cf       	rjmp	.-284    	; 0x8850 <_Z18Edited_In_Schedulev+0x9f8>
    896c:	f3 cf       	rjmp	.-26     	; 0x8954 <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    896e:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8972:	d7 cb       	rjmp	.-2130   	; 0x8122 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8974:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8978:	1a cd       	rjmp	.-1484   	; 0x83ae <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    897a:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    897e:	61 ce       	rjmp	.-830    	; 0x8642 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8980:	df 91       	pop	r29
    8982:	cf 91       	pop	r28
    8984:	1f 91       	pop	r17
    8986:	0f 91       	pop	r16
    8988:	ff 90       	pop	r15
    898a:	ef 90       	pop	r14
    898c:	08 95       	ret

0000898e <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    898e:	1f 93       	push	r17
    8990:	cf 93       	push	r28
    8992:	df 93       	push	r29
    8994:	c8 2f       	mov	r28, r24
    8996:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8998:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    899c:	81 30       	cpi	r24, 0x01	; 1
    899e:	89 f4       	brne	.+34     	; 0x89c2 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    89a0:	6f e7       	ldi	r22, 0x7F	; 127
    89a2:	7c e0       	ldi	r23, 0x0C	; 12
    89a4:	85 e5       	ldi	r24, 0x55	; 85
    89a6:	94 e1       	ldi	r25, 0x14	; 20
    89a8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    89ac:	4a e0       	ldi	r20, 0x0A	; 10
    89ae:	50 e0       	ldi	r21, 0x00	; 0
    89b0:	6c 2f       	mov	r22, r28
    89b2:	85 e5       	ldi	r24, 0x55	; 85
    89b4:	94 e1       	ldi	r25, 0x14	; 20
    89b6:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    89ba:	85 e5       	ldi	r24, 0x55	; 85
    89bc:	94 e1       	ldi	r25, 0x14	; 20
    89be:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    89c2:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    89c6:	c8 0f       	add	r28, r24
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    89c8:	d0 91 7b 13 	lds	r29, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    89cc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    89d0:	81 30       	cpi	r24, 0x01	; 1
    89d2:	19 f5       	brne	.+70     	; 0x8a1a <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    89d4:	6e e6       	ldi	r22, 0x6E	; 110
    89d6:	7c e0       	ldi	r23, 0x0C	; 12
    89d8:	85 e5       	ldi	r24, 0x55	; 85
    89da:	94 e1       	ldi	r25, 0x14	; 20
    89dc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    89e0:	4a e0       	ldi	r20, 0x0A	; 10
    89e2:	50 e0       	ldi	r21, 0x00	; 0
    89e4:	6c 2f       	mov	r22, r28
    89e6:	85 e5       	ldi	r24, 0x55	; 85
    89e8:	94 e1       	ldi	r25, 0x14	; 20
    89ea:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    89ee:	85 e5       	ldi	r24, 0x55	; 85
    89f0:	94 e1       	ldi	r25, 0x14	; 20
    89f2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    89f6:	6b e4       	ldi	r22, 0x4B	; 75
    89f8:	7c e0       	ldi	r23, 0x0C	; 12
    89fa:	85 e5       	ldi	r24, 0x55	; 85
    89fc:	94 e1       	ldi	r25, 0x14	; 20
    89fe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8a02:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8a06:	4a e0       	ldi	r20, 0x0A	; 10
    8a08:	50 e0       	ldi	r21, 0x00	; 0
    8a0a:	85 e5       	ldi	r24, 0x55	; 85
    8a0c:	94 e1       	ldi	r25, 0x14	; 20
    8a0e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8a12:	85 e5       	ldi	r24, 0x55	; 85
    8a14:	94 e1       	ldi	r25, 0x14	; 20
    8a16:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8a1a:	81 2f       	mov	r24, r17
    8a1c:	90 e0       	ldi	r25, 0x00	; 0
    8a1e:	fc 01       	movw	r30, r24
    8a20:	31 97       	sbiw	r30, 0x01	; 1
    8a22:	ec 30       	cpi	r30, 0x0C	; 12
    8a24:	f1 05       	cpc	r31, r1
    8a26:	08 f0       	brcs	.+2      	; 0x8a2a <_Z18Next_Day_Calculatehh+0x9c>
    8a28:	56 c0       	rjmp	.+172    	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
    8a2a:	88 27       	eor	r24, r24
    8a2c:	ef 52       	subi	r30, 0x2F	; 47
    8a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    8a30:	8f 4f       	sbci	r24, 0xFF	; 255
    8a32:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
    8a36:	8d 2f       	mov	r24, r29
    8a38:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8a3a:	61 f0       	breq	.+24     	; 0x8a54 <_Z18Next_Day_Calculatehh+0xc6>
			{
				if(date > 28)
    8a3c:	cd 31       	cpi	r28, 0x1D	; 29
    8a3e:	08 f0       	brcs	.+2      	; 0x8a42 <_Z18Next_Day_Calculatehh+0xb4>
    8a40:	4a c0       	rjmp	.+148    	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
    8a42:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8a46:	8c 17       	cp	r24, r28
    8a48:	08 f4       	brcc	.+2      	; 0x8a4c <_Z18Next_Day_Calculatehh+0xbe>
    8a4a:	45 c0       	rjmp	.+138    	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8a4c:	c8 13       	cpse	r28, r24
    8a4e:	0b c0       	rjmp	.+22     	; 0x8a66 <_Z18Next_Day_Calculatehh+0xd8>
					{
						return 1;
    8a50:	81 e0       	ldi	r24, 0x01	; 1
    8a52:	42 c0       	rjmp	.+132    	; 0x8ad8 <_Z18Next_Day_Calculatehh+0x14a>
					}
				}
			}
			else
			{
				if(date > 29)
    8a54:	ce 31       	cpi	r28, 0x1E	; 30
    8a56:	08 f0       	brcs	.+2      	; 0x8a5a <_Z18Next_Day_Calculatehh+0xcc>
    8a58:	3f c0       	rjmp	.+126    	; 0x8ad8 <_Z18Next_Day_Calculatehh+0x14a>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8a5a:	90 91 79 13 	lds	r25, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8a5e:	9c 17       	cp	r25, r28
    8a60:	d8 f1       	brcs	.+118    	; 0x8ad8 <_Z18Next_Day_Calculatehh+0x14a>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8a62:	c9 17       	cp	r28, r25
    8a64:	a9 f3       	breq	.-22     	; 0x8a50 <_Z18Next_Day_Calculatehh+0xc2>
					{
						return 1;
					}
					else
					{
						return 2;
    8a66:	82 e0       	ldi	r24, 0x02	; 2
    8a68:	37 c0       	rjmp	.+110    	; 0x8ad8 <_Z18Next_Day_Calculatehh+0x14a>
			
		}break;
		
		case _eMARCH:
		{
			if(date > 31)
    8a6a:	c0 32       	cpi	r28, 0x20	; 32
    8a6c:	a0 f5       	brcc	.+104    	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8a6e:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8a72:	8c 17       	cp	r24, r28
    8a74:	80 f1       	brcs	.+96     	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a76:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8a7a:	81 30       	cpi	r24, 0x01	; 1
    8a7c:	19 f5       	brne	.+70     	; 0x8ac4 <_Z18Next_Day_Calculatehh+0x136>
					{
						_kSERAIL_MON_WRITE("Required date : ");
    8a7e:	6a e3       	ldi	r22, 0x3A	; 58
    8a80:	7c e0       	ldi	r23, 0x0C	; 12
    8a82:	85 e5       	ldi	r24, 0x55	; 85
    8a84:	94 e1       	ldi	r25, 0x14	; 20
    8a86:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(date);
    8a8a:	4a e0       	ldi	r20, 0x0A	; 10
    8a8c:	50 e0       	ldi	r21, 0x00	; 0
    8a8e:	6c 2f       	mov	r22, r28
    8a90:	85 e5       	ldi	r24, 0x55	; 85
    8a92:	94 e1       	ldi	r25, 0x14	; 20
    8a94:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8a98:	85 e5       	ldi	r24, 0x55	; 85
    8a9a:	94 e1       	ldi	r25, 0x14	; 20
    8a9c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						
						_kSERAIL_MON_WRITE("Current date : ");
    8aa0:	6a e2       	ldi	r22, 0x2A	; 42
    8aa2:	7c e0       	ldi	r23, 0x0C	; 12
    8aa4:	85 e5       	ldi	r24, 0x55	; 85
    8aa6:	94 e1       	ldi	r25, 0x14	; 20
    8aa8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    8aac:	4a e0       	ldi	r20, 0x0A	; 10
    8aae:	50 e0       	ldi	r21, 0x00	; 0
    8ab0:	60 91 79 13 	lds	r22, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8ab4:	85 e5       	ldi	r24, 0x55	; 85
    8ab6:	94 e1       	ldi	r25, 0x14	; 20
    8ab8:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8abc:	85 e5       	ldi	r24, 0x55	; 85
    8abe:	94 e1       	ldi	r25, 0x14	; 20
    8ac0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8ac4:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8ac8:	c1 cf       	rjmp	.-126    	; 0x8a4c <_Z18Next_Day_Calculatehh+0xbe>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8aca:	cf 31       	cpi	r28, 0x1F	; 31
    8acc:	20 f4       	brcc	.+8      	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
    8ace:	b9 cf       	rjmp	.-142    	; 0x8a42 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8ad0:	c0 32       	cpi	r28, 0x20	; 32
    8ad2:	08 f4       	brcc	.+2      	; 0x8ad6 <_Z18Next_Day_Calculatehh+0x148>
    8ad4:	b6 cf       	rjmp	.-148    	; 0x8a42 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
	}
	
	return 0;
    8ad6:	80 e0       	ldi	r24, 0x00	; 0
	
}
    8ad8:	df 91       	pop	r29
    8ada:	cf 91       	pop	r28
    8adc:	1f 91       	pop	r17
    8ade:	08 95       	ret

00008ae0 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8ae0:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8ae2:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    8ae6:	81 30       	cpi	r24, 0x01	; 1
    8ae8:	09 f4       	brne	.+2      	; 0x8aec <_Z22Do_Not_Repeat_Schedulev+0xc>
    8aea:	4b c0       	rjmp	.+150    	; 0x8b82 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8aec:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8af0:	88 23       	and	r24, r24
    8af2:	09 f4       	brne	.+2      	; 0x8af6 <_Z22Do_Not_Repeat_Schedulev+0x16>
    8af4:	46 c0       	rjmp	.+140    	; 0x8b82 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8af6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8afa:	81 30       	cpi	r24, 0x01	; 1
    8afc:	29 f4       	brne	.+10     	; 0x8b08 <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8afe:	60 91 2b 09 	lds	r22, 0x092B	; 0x80092b <_sSchedules+0xd>
    8b02:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8b06:	04 c0       	rjmp	.+8      	; 0x8b10 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8b08:	60 91 91 0b 	lds	r22, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8b0c:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8b10:	3e df       	rcall	.-388    	; 0x898e <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8b12:	81 30       	cpi	r24, 0x01	; 1
    8b14:	09 f0       	breq	.+2      	; 0x8b18 <_Z22Do_Not_Repeat_Schedulev+0x38>
    8b16:	53 c0       	rjmp	.+166    	; 0x8bbe <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8b18:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8b1c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8b20:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8b24:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8b28:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    8b2c:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    8b30:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    8b34:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    8b38:	48 17       	cp	r20, r24
    8b3a:	59 07       	cpc	r21, r25
    8b3c:	6a 07       	cpc	r22, r26
    8b3e:	7b 07       	cpc	r23, r27
    8b40:	00 f5       	brcc	.+64     	; 0x8b82 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8b42:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8b46:	81 30       	cpi	r24, 0x01	; 1
    8b48:	f1 f4       	brne	.+60     	; 0x8b86 <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8b4a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8b4e:	81 30       	cpi	r24, 0x01	; 1
    8b50:	51 f4       	brne	.+20     	; 0x8b66 <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8b52:	62 e0       	ldi	r22, 0x02	; 2
    8b54:	7d e0       	ldi	r23, 0x0D	; 13
    8b56:	85 e5       	ldi	r24, 0x55	; 85
    8b58:	94 e1       	ldi	r25, 0x14	; 20
    8b5a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8b5e:	85 e5       	ldi	r24, 0x55	; 85
    8b60:	94 e1       	ldi	r25, 0x14	; 20
    8b62:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8b66:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    8b6a:	f0 e0       	ldi	r31, 0x00	; 0
    8b6c:	ee 0f       	add	r30, r30
    8b6e:	ff 1f       	adc	r31, r31
    8b70:	e4 5e       	subi	r30, 0xE4	; 228
    8b72:	f6 4f       	sbci	r31, 0xF6	; 246
    8b74:	87 8d       	ldd	r24, Z+31	; 0x1f
    8b76:	90 a1       	ldd	r25, Z+32	; 0x20
    8b78:	01 96       	adiw	r24, 0x01	; 1
    8b7a:	90 93 27 09 	sts	0x0927, r25	; 0x800927 <_sSchedules+0x9>
    8b7e:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <_sSchedules+0x8>
						return 0;
    8b82:	c0 e0       	ldi	r28, 0x00	; 0
    8b84:	3f c0       	rjmp	.+126    	; 0x8c04 <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8b86:	80 e0       	ldi	r24, 0x00	; 0
    8b88:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8b8a:	40 91 90 0b 	lds	r20, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8b8e:	9c 01       	movw	r18, r24
    8b90:	22 5e       	subi	r18, 0xE2	; 226
    8b92:	36 4f       	sbci	r19, 0xF6	; 246
    8b94:	f9 01       	movw	r30, r18
    8b96:	e5 5a       	subi	r30, 0xA5	; 165
    8b98:	ff 4f       	sbci	r31, 0xFF	; 255
    8b9a:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8b9c:	40 91 91 0b 	lds	r20, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8ba0:	3f 96       	adiw	r30, 0x0f	; 15
    8ba2:	40 83       	st	Z, r20
    8ba4:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8ba6:	8f 30       	cpi	r24, 0x0F	; 15
    8ba8:	91 05       	cpc	r25, r1
    8baa:	79 f7       	brne	.-34     	; 0x8b8a <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bac:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8bb0:	c1 30       	cpi	r28, 0x01	; 1
    8bb2:	11 f0       	breq	.+4      	; 0x8bb8 <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8bb4:	c1 e0       	ldi	r28, 0x01	; 1
    8bb6:	26 c0       	rjmp	.+76     	; 0x8c04 <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8bb8:	68 ec       	ldi	r22, 0xC8	; 200
    8bba:	7c e0       	ldi	r23, 0x0C	; 12
    8bbc:	1b c0       	rjmp	.+54     	; 0x8bf4 <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8bbe:	82 30       	cpi	r24, 0x02	; 2
    8bc0:	01 f7       	brne	.-64     	; 0x8b82 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8bc2:	80 e0       	ldi	r24, 0x00	; 0
    8bc4:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8bc6:	40 91 90 0b 	lds	r20, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8bca:	9c 01       	movw	r18, r24
    8bcc:	22 5e       	subi	r18, 0xE2	; 226
    8bce:	36 4f       	sbci	r19, 0xF6	; 246
    8bd0:	f9 01       	movw	r30, r18
    8bd2:	e5 5a       	subi	r30, 0xA5	; 165
    8bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    8bd6:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8bd8:	40 91 91 0b 	lds	r20, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8bdc:	3f 96       	adiw	r30, 0x0f	; 15
    8bde:	40 83       	st	Z, r20
    8be0:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8be2:	8f 30       	cpi	r24, 0x0F	; 15
    8be4:	91 05       	cpc	r25, r1
    8be6:	79 f7       	brne	.-34     	; 0x8bc6 <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8be8:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8bec:	c1 30       	cpi	r28, 0x01	; 1
    8bee:	11 f7       	brne	.-60     	; 0x8bb4 <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8bf0:	60 e9       	ldi	r22, 0x90	; 144
    8bf2:	7c e0       	ldi	r23, 0x0C	; 12
    8bf4:	85 e5       	ldi	r24, 0x55	; 85
    8bf6:	94 e1       	ldi	r25, 0x14	; 20
    8bf8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8bfc:	85 e5       	ldi	r24, 0x55	; 85
    8bfe:	94 e1       	ldi	r25, 0x14	; 20
    8c00:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8c04:	8c 2f       	mov	r24, r28
    8c06:	cf 91       	pop	r28
    8c08:	08 95       	ret

00008c0a <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8c0a:	cf 93       	push	r28
    8c0c:	df 93       	push	r29
    8c0e:	c8 2f       	mov	r28, r24
    8c10:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8c12:	81 e0       	ldi	r24, 0x01	; 1
    8c14:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8c18:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8c1c:	91 11       	cpse	r25, r1
    8c1e:	06 c0       	rjmp	.+12     	; 0x8c2c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8c20:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8c24:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8c28:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8c2c:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    8c30:	88 23       	and	r24, r24
    8c32:	29 f0       	breq	.+10     	; 0x8c3e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8c34:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8c38:	81 30       	cpi	r24, 0x01	; 1
    8c3a:	09 f0       	breq	.+2      	; 0x8c3e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8c3c:	79 c1       	rjmp	.+754    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8c3e:	81 e0       	ldi	r24, 0x01	; 1
    8c40:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8c44:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8c48:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8c4c:	91 30       	cpi	r25, 0x01	; 1
    8c4e:	91 f4       	brne	.+36     	; 0x8c74 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8c50:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8c54:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8c58:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8c5c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8c60:	43 34       	cpi	r20, 0x43	; 67
    8c62:	51 45       	sbci	r21, 0x51	; 81
    8c64:	61 40       	sbci	r22, 0x01	; 1
    8c66:	71 05       	cpc	r23, r1
    8c68:	08 f0       	brcs	.+2      	; 0x8c6c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8c6a:	56 c0       	rjmp	.+172    	; 0x8d18 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8c6c:	c1 30       	cpi	r28, 0x01	; 1
    8c6e:	09 f0       	breq	.+2      	; 0x8c72 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8c70:	53 c0       	rjmp	.+166    	; 0x8d18 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8c72:	6f c0       	rjmp	.+222    	; 0x8d52 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8c74:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8c78:	91 30       	cpi	r25, 0x01	; 1
    8c7a:	d1 f5       	brne	.+116    	; 0x8cf0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8c7c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    8c80:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    8c84:	23 2b       	or	r18, r19
    8c86:	a1 f5       	brne	.+104    	; 0x8cf0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8c88:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8c8c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8c90:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8c94:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8c98:	48 35       	cpi	r20, 0x58	; 88
    8c9a:	52 40       	sbci	r21, 0x02	; 2
    8c9c:	61 05       	cpc	r22, r1
    8c9e:	71 05       	cpc	r23, r1
    8ca0:	08 f4       	brcc	.+2      	; 0x8ca4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8ca2:	d5 c0       	rjmp	.+426    	; 0x8e4e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8ca4:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8ca8:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8cac:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8cb0:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8cb4:	4c 32       	cpi	r20, 0x2C	; 44
    8cb6:	51 40       	sbci	r21, 0x01	; 1
    8cb8:	61 05       	cpc	r22, r1
    8cba:	71 05       	cpc	r23, r1
    8cbc:	08 f0       	brcs	.+2      	; 0x8cc0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8cbe:	e0 c0       	rjmp	.+448    	; 0x8e80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8cc0:	47 e1       	ldi	r20, 0x17	; 23
    8cc2:	50 e5       	ldi	r21, 0x50	; 80
    8cc4:	61 e0       	ldi	r22, 0x01	; 1
    8cc6:	70 e0       	ldi	r23, 0x00	; 0
    8cc8:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    8ccc:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    8cd0:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    8cd4:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8cd8:	81 30       	cpi	r24, 0x01	; 1
    8cda:	51 f4       	brne	.+20     	; 0x8cf0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8cdc:	63 e7       	ldi	r22, 0x73	; 115
    8cde:	7b e0       	ldi	r23, 0x0B	; 11
    8ce0:	85 e5       	ldi	r24, 0x55	; 85
    8ce2:	94 e1       	ldi	r25, 0x14	; 20
    8ce4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8ce8:	85 e5       	ldi	r24, 0x55	; 85
    8cea:	94 e1       	ldi	r25, 0x14	; 20
    8cec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8cf0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8cf4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8cf8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8cfc:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8d00:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8d04:	43 34       	cpi	r20, 0x43	; 67
    8d06:	51 45       	sbci	r21, 0x51	; 81
    8d08:	61 40       	sbci	r22, 0x01	; 1
    8d0a:	71 05       	cpc	r23, r1
    8d0c:	08 f0       	brcs	.+2      	; 0x8d10 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8d0e:	63 c0       	rjmp	.+198    	; 0x8dd6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8d10:	c1 30       	cpi	r28, 0x01	; 1
    8d12:	09 f0       	breq	.+2      	; 0x8d16 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8d14:	60 c0       	rjmp	.+192    	; 0x8dd6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8d16:	34 c0       	rjmp	.+104    	; 0x8d80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d18:	81 30       	cpi	r24, 0x01	; 1
    8d1a:	51 f4       	brne	.+20     	; 0x8d30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8d1c:	69 e9       	ldi	r22, 0x99	; 153
    8d1e:	7b e0       	ldi	r23, 0x0B	; 11
    8d20:	85 e5       	ldi	r24, 0x55	; 85
    8d22:	94 e1       	ldi	r25, 0x14	; 20
    8d24:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8d28:	85 e5       	ldi	r24, 0x55	; 85
    8d2a:	94 e1       	ldi	r25, 0x14	; 20
    8d2c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8d30:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d34:	81 30       	cpi	r24, 0x01	; 1
    8d36:	09 f0       	breq	.+2      	; 0x8d3a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8d38:	fb c0       	rjmp	.+502    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8d3a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8d3e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8d42:	89 2b       	or	r24, r25
    8d44:	09 f0       	breq	.+2      	; 0x8d48 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8d46:	f4 c0       	rjmp	.+488    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8d48:	0e 94 8c 31 	call	0x6318	; 0x6318 <_Z24Return_Previous_Day_Datev>
    8d4c:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8d50:	7b c0       	rjmp	.+246    	; 0x8e48 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d52:	81 30       	cpi	r24, 0x01	; 1
    8d54:	51 f4       	brne	.+20     	; 0x8d6a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8d56:	6d ed       	ldi	r22, 0xDD	; 221
    8d58:	7b e0       	ldi	r23, 0x0B	; 11
    8d5a:	85 e5       	ldi	r24, 0x55	; 85
    8d5c:	94 e1       	ldi	r25, 0x14	; 20
    8d5e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8d62:	85 e5       	ldi	r24, 0x55	; 85
    8d64:	94 e1       	ldi	r25, 0x14	; 20
    8d66:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8d6a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d6e:	81 30       	cpi	r24, 0x01	; 1
    8d70:	f1 f4       	brne	.+60     	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8d72:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8d76:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8d7a:	89 2b       	or	r24, r25
    8d7c:	09 f1       	breq	.+66     	; 0x8dc0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    8d7e:	17 c0       	rjmp	.+46     	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d80:	81 30       	cpi	r24, 0x01	; 1
    8d82:	81 f4       	brne	.+32     	; 0x8da4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    8d84:	61 e5       	ldi	r22, 0x51	; 81
    8d86:	7b e0       	ldi	r23, 0x0B	; 11
    8d88:	85 e5       	ldi	r24, 0x55	; 85
    8d8a:	94 e1       	ldi	r25, 0x14	; 20
    8d8c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8d90:	64 e0       	ldi	r22, 0x04	; 4
    8d92:	7b e0       	ldi	r23, 0x0B	; 11
    8d94:	85 e5       	ldi	r24, 0x55	; 85
    8d96:	94 e1       	ldi	r25, 0x14	; 20
    8d98:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8d9c:	85 e5       	ldi	r24, 0x55	; 85
    8d9e:	94 e1       	ldi	r25, 0x14	; 20
    8da0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8da4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8da8:	81 30       	cpi	r24, 0x01	; 1
    8daa:	09 f4       	brne	.+2      	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8dac:	8a c0       	rjmp	.+276    	; 0x8ec2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    8dae:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <_sSchedules+0xc>
    8db2:	4a e0       	ldi	r20, 0x0A	; 10
    8db4:	50 e0       	ldi	r21, 0x00	; 0
    8db6:	85 e5       	ldi	r24, 0x55	; 85
    8db8:	94 e1       	ldi	r25, 0x14	; 20
    8dba:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    8dbe:	b8 c0       	rjmp	.+368    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8dc0:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8dc4:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8dc8:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    8dcc:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8dd0:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    8dd4:	ec cf       	rjmp	.-40     	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8dd6:	81 30       	cpi	r24, 0x01	; 1
    8dd8:	51 f4       	brne	.+20     	; 0x8dee <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8dda:	61 e7       	ldi	r22, 0x71	; 113
    8ddc:	7a e0       	ldi	r23, 0x0A	; 10
    8dde:	85 e5       	ldi	r24, 0x55	; 85
    8de0:	94 e1       	ldi	r25, 0x14	; 20
    8de2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8de6:	85 e5       	ldi	r24, 0x55	; 85
    8de8:	94 e1       	ldi	r25, 0x14	; 20
    8dea:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0) )
    8dee:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8df2:	81 30       	cpi	r24, 0x01	; 1
    8df4:	09 f0       	breq	.+2      	; 0x8df8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    8df6:	9c c0       	rjmp	.+312    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8df8:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8dfc:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8e00:	89 2b       	or	r24, r25
    8e02:	09 f0       	breq	.+2      	; 0x8e06 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    8e04:	95 c0       	rjmp	.+298    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8e06:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
				{
					if(check_days == 2)
    8e0a:	d2 30       	cpi	r29, 0x02	; 2
    8e0c:	09 f0       	breq	.+2      	; 0x8e10 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    8e0e:	7f c0       	rjmp	.+254    	; 0x8f0e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e10:	81 30       	cpi	r24, 0x01	; 1
    8e12:	51 f4       	brne	.+20     	; 0x8e28 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    8e14:	62 e2       	ldi	r22, 0x22	; 34
    8e16:	7a e0       	ldi	r23, 0x0A	; 10
    8e18:	85 e5       	ldi	r24, 0x55	; 85
    8e1a:	94 e1       	ldi	r25, 0x14	; 20
    8e1c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8e20:	85 e5       	ldi	r24, 0x55	; 85
    8e22:	94 e1       	ldi	r25, 0x14	; 20
    8e24:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8e28:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8e2c:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8e30:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    8e34:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8e38:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8e3c:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8e40:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8e44:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8e48:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    8e4c:	71 c0       	rjmp	.+226    	; 0x8f30 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e4e:	81 30       	cpi	r24, 0x01	; 1
    8e50:	51 f4       	brne	.+20     	; 0x8e66 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    8e52:	65 e8       	ldi	r22, 0x85	; 133
    8e54:	7b e0       	ldi	r23, 0x0B	; 11
    8e56:	85 e5       	ldi	r24, 0x55	; 85
    8e58:	94 e1       	ldi	r25, 0x14	; 20
    8e5a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8e5e:	85 e5       	ldi	r24, 0x55	; 85
    8e60:	94 e1       	ldi	r25, 0x14	; 20
    8e62:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    8e66:	88 e5       	ldi	r24, 0x58	; 88
    8e68:	92 e0       	ldi	r25, 0x02	; 2
    8e6a:	a0 e0       	ldi	r26, 0x00	; 0
    8e6c:	b0 e0       	ldi	r27, 0x00	; 0
    8e6e:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    8e72:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    8e76:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    8e7a:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
    8e7e:	0c c0       	rjmp	.+24     	; 0x8e98 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e80:	81 30       	cpi	r24, 0x01	; 1
    8e82:	51 f4       	brne	.+20     	; 0x8e98 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    8e84:	61 e6       	ldi	r22, 0x61	; 97
    8e86:	7b e0       	ldi	r23, 0x0B	; 11
    8e88:	85 e5       	ldi	r24, 0x55	; 85
    8e8a:	94 e1       	ldi	r25, 0x14	; 20
    8e8c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8e90:	85 e5       	ldi	r24, 0x55	; 85
    8e92:	94 e1       	ldi	r25, 0x14	; 20
    8e94:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    8e98:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    8e9c:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    8ea0:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    8ea4:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    8ea8:	8c 52       	subi	r24, 0x2C	; 44
    8eaa:	91 40       	sbci	r25, 0x01	; 1
    8eac:	a1 09       	sbc	r26, r1
    8eae:	b1 09       	sbc	r27, r1
    8eb0:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    8eb4:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    8eb8:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    8ebc:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
    8ec0:	17 cf       	rjmp	.-466    	; 0x8cf0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8ec2:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8ec6:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8eca:	89 2b       	or	r24, r25
    8ecc:	09 f0       	breq	.+2      	; 0x8ed0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    8ece:	6f cf       	rjmp	.-290    	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ed0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8ed4:	81 30       	cpi	r24, 0x01	; 1
    8ed6:	51 f4       	brne	.+20     	; 0x8eec <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    8ed8:	65 eb       	ldi	r22, 0xB5	; 181
    8eda:	7a e0       	ldi	r23, 0x0A	; 10
    8edc:	85 e5       	ldi	r24, 0x55	; 85
    8ede:	94 e1       	ldi	r25, 0x14	; 20
    8ee0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8ee4:	85 e5       	ldi	r24, 0x55	; 85
    8ee6:	94 e1       	ldi	r25, 0x14	; 20
    8ee8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8eec:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8ef0:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8ef4:	80 91 7a 13 	lds	r24, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    8ef8:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8efc:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8f00:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8f04:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8f08:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
    8f0c:	61 cf       	rjmp	.-318    	; 0x8dd0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f0e:	81 30       	cpi	r24, 0x01	; 1
    8f10:	51 f4       	brne	.+20     	; 0x8f26 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    8f12:	6c ed       	ldi	r22, 0xDC	; 220
    8f14:	79 e0       	ldi	r23, 0x09	; 9
    8f16:	85 e5       	ldi	r24, 0x55	; 85
    8f18:	94 e1       	ldi	r25, 0x14	; 20
    8f1a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f1e:	85 e5       	ldi	r24, 0x55	; 85
    8f20:	94 e1       	ldi	r25, 0x14	; 20
    8f22:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    8f26:	0e 94 8c 31 	call	0x6318	; 0x6318 <_Z24Return_Previous_Day_Datev>
    8f2a:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8f2e:	84 cf       	rjmp	.-248    	; 0x8e38 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    8f30:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    8f34:	80 e0       	ldi	r24, 0x00	; 0
    8f36:	df 91       	pop	r29
    8f38:	cf 91       	pop	r28
    8f3a:	08 95       	ret

00008f3c <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    8f3c:	0f 93       	push	r16
    8f3e:	1f 93       	push	r17
    8f40:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8f42:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8f46:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8f4a:	91 30       	cpi	r25, 0x01	; 1
    8f4c:	09 f0       	breq	.+2      	; 0x8f50 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    8f4e:	51 c0       	rjmp	.+162    	; 0x8ff2 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    8f50:	20 91 79 0b 	lds	r18, 0x0B79	; 0x800b79 <_sSchedules+0x25b>
    8f54:	90 91 79 13 	lds	r25, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    8f58:	29 13       	cpse	r18, r25
    8f5a:	17 c0       	rjmp	.+46     	; 0x8f8a <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8f5c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f60:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f64:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f68:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f6c:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    8f70:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    8f74:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    8f78:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    8f7c:	48 17       	cp	r20, r24
    8f7e:	59 07       	cpc	r21, r25
    8f80:	6a 07       	cpc	r22, r26
    8f82:	7b 07       	cpc	r23, r27
    8f84:	08 f4       	brcc	.+2      	; 0x8f88 <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    8f86:	7f c0       	rjmp	.+254    	; 0x9086 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    8f88:	f9 c0       	rjmp	.+498    	; 0x917c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    8f8a:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    8f8e:	92 30       	cpi	r25, 0x02	; 2
    8f90:	09 f0       	breq	.+2      	; 0x8f94 <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    8f92:	f6 c0       	rjmp	.+492    	; 0x9180 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f94:	81 30       	cpi	r24, 0x01	; 1
    8f96:	51 f4       	brne	.+20     	; 0x8fac <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    8f98:	60 ed       	ldi	r22, 0xD0	; 208
    8f9a:	79 e0       	ldi	r23, 0x09	; 9
    8f9c:	85 e5       	ldi	r24, 0x55	; 85
    8f9e:	94 e1       	ldi	r25, 0x14	; 20
    8fa0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8fa4:	85 e5       	ldi	r24, 0x55	; 85
    8fa6:	94 e1       	ldi	r25, 0x14	; 20
    8fa8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    8fac:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8fb0:	0e 94 2e 33 	call	0x665c	; 0x665c <_Z22Day_In_Bet_Schedullingh>
    8fb4:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    8fb6:	82 30       	cpi	r24, 0x02	; 2
    8fb8:	41 f4       	brne	.+16     	; 0x8fca <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fba:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    8fbe:	81 30       	cpi	r24, 0x01	; 1
    8fc0:	09 f0       	breq	.+2      	; 0x8fc4 <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    8fc2:	b2 c0       	rjmp	.+356    	; 0x9128 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    8fc4:	64 ec       	ldi	r22, 0xC4	; 196
    8fc6:	79 e0       	ldi	r23, 0x09	; 9
    8fc8:	a7 c0       	rjmp	.+334    	; 0x9118 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    8fca:	81 30       	cpi	r24, 0x01	; 1
    8fcc:	09 f0       	breq	.+2      	; 0x8fd0 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    8fce:	d6 c0       	rjmp	.+428    	; 0x917c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    8fd0:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    8fd4:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    8fd8:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    8fdc:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    8fe0:	83 34       	cpi	r24, 0x43	; 67
    8fe2:	91 45       	sbci	r25, 0x51	; 81
    8fe4:	a1 40       	sbci	r26, 0x01	; 1
    8fe6:	b1 05       	cpc	r27, r1
    8fe8:	08 f0       	brcs	.+2      	; 0x8fec <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    8fea:	c8 c0       	rjmp	.+400    	; 0x917c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    8fec:	c0 93 3c 09 	sts	0x093C, r28	; 0x80093c <_sSchedules+0x1e>
    8ff0:	9e c0       	rjmp	.+316    	; 0x912e <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    8ff2:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8ff6:	90 91 f8 13 	lds	r25, 0x13F8	; 0x8013f8 <_sRuble_Parameters+0xae>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    8ffa:	21 11       	cpse	r18, r1
    8ffc:	1a c0       	rjmp	.+52     	; 0x9032 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    8ffe:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9002:	21 11       	cpse	r18, r1
    9004:	16 c0       	rjmp	.+44     	; 0x9032 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9006:	91 30       	cpi	r25, 0x01	; 1
    9008:	a1 f4       	brne	.+40     	; 0x9032 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    900a:	20 91 7c 0b 	lds	r18, 0x0B7C	; 0x800b7c <_sSchedules+0x25e>
    900e:	30 91 7d 0b 	lds	r19, 0x0B7D	; 0x800b7d <_sSchedules+0x25f>
    9012:	23 2b       	or	r18, r19
    9014:	89 f4       	brne	.+34     	; 0x9038 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    9016:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    901a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    901e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9022:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9026:	45 2b       	or	r20, r21
    9028:	46 2b       	or	r20, r22
    902a:	47 2b       	or	r20, r23
    902c:	09 f4       	brne	.+2      	; 0x9030 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    902e:	bf c0       	rjmp	.+382    	; 0x91ae <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    9030:	03 c0       	rjmp	.+6      	; 0x9038 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    9032:	91 30       	cpi	r25, 0x01	; 1
    9034:	09 f0       	breq	.+2      	; 0x9038 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    9036:	96 c0       	rjmp	.+300    	; 0x9164 <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    9038:	20 91 79 0b 	lds	r18, 0x0B79	; 0x800b79 <_sSchedules+0x25b>
    903c:	90 91 79 13 	lds	r25, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    9040:	29 13       	cpse	r18, r25
    9042:	2a c0       	rjmp	.+84     	; 0x9098 <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    9044:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    9048:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    904c:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    9050:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    9054:	40 91 5a 13 	lds	r20, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    9058:	50 91 5b 13 	lds	r21, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    905c:	60 91 5c 13 	lds	r22, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    9060:	70 91 5d 13 	lds	r23, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    9064:	04 17       	cp	r16, r20
    9066:	15 07       	cpc	r17, r21
    9068:	26 07       	cpc	r18, r22
    906a:	37 07       	cpc	r19, r23
    906c:	78 f4       	brcc	.+30     	; 0x908c <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    906e:	81 30       	cpi	r24, 0x01	; 1
    9070:	51 f4       	brne	.+20     	; 0x9086 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    9072:	60 ea       	ldi	r22, 0xA0	; 160
    9074:	79 e0       	ldi	r23, 0x09	; 9
    9076:	85 e5       	ldi	r24, 0x55	; 85
    9078:	94 e1       	ldi	r25, 0x14	; 20
    907a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    907e:	85 e5       	ldi	r24, 0x55	; 85
    9080:	94 e1       	ldi	r25, 0x14	; 20
    9082:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    9086:	10 92 79 0b 	sts	0x0B79, r1	; 0x800b79 <_sSchedules+0x25b>
    908a:	7a c0       	rjmp	.+244    	; 0x9180 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    908c:	81 30       	cpi	r24, 0x01	; 1
    908e:	09 f0       	breq	.+2      	; 0x9092 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    9090:	93 c0       	rjmp	.+294    	; 0x91b8 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    9092:	6c e8       	ldi	r22, 0x8C	; 140
    9094:	79 e0       	ldi	r23, 0x09	; 9
    9096:	6a c0       	rjmp	.+212    	; 0x916c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9098:	81 30       	cpi	r24, 0x01	; 1
    909a:	51 f4       	brne	.+20     	; 0x90b0 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    909c:	6e e7       	ldi	r22, 0x7E	; 126
    909e:	79 e0       	ldi	r23, 0x09	; 9
    90a0:	85 e5       	ldi	r24, 0x55	; 85
    90a2:	94 e1       	ldi	r25, 0x14	; 20
    90a4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    90a8:	85 e5       	ldi	r24, 0x55	; 85
    90aa:	94 e1       	ldi	r25, 0x14	; 20
    90ac:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    90b0:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    90b4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    90b8:	92 30       	cpi	r25, 0x02	; 2
    90ba:	09 f0       	breq	.+2      	; 0x90be <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    90bc:	46 c0       	rjmp	.+140    	; 0x914a <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90be:	81 30       	cpi	r24, 0x01	; 1
    90c0:	51 f4       	brne	.+20     	; 0x90d6 <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    90c2:	60 e7       	ldi	r22, 0x70	; 112
    90c4:	79 e0       	ldi	r23, 0x09	; 9
    90c6:	85 e5       	ldi	r24, 0x55	; 85
    90c8:	94 e1       	ldi	r25, 0x14	; 20
    90ca:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    90ce:	85 e5       	ldi	r24, 0x55	; 85
    90d0:	94 e1       	ldi	r25, 0x14	; 20
    90d2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    90d6:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    90da:	0e 94 2e 33 	call	0x665c	; 0x665c <_Z22Day_In_Bet_Schedullingh>
    90de:	c8 2f       	mov	r28, r24
    90e0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
							
						if(check_true_condition == 2)
    90e4:	c2 30       	cpi	r28, 0x02	; 2
    90e6:	29 f4       	brne	.+10     	; 0x90f2 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    90e8:	81 30       	cpi	r24, 0x01	; 1
    90ea:	f1 f4       	brne	.+60     	; 0x9128 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    90ec:	62 e6       	ldi	r22, 0x62	; 98
    90ee:	79 e0       	ldi	r23, 0x09	; 9
    90f0:	13 c0       	rjmp	.+38     	; 0x9118 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    90f2:	c1 30       	cpi	r28, 0x01	; 1
    90f4:	29 f5       	brne	.+74     	; 0x9140 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    90f6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    90fa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    90fe:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9102:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9106:	43 34       	cpi	r20, 0x43	; 67
    9108:	51 45       	sbci	r21, 0x51	; 81
    910a:	61 40       	sbci	r22, 0x01	; 1
    910c:	71 05       	cpc	r23, r1
    910e:	90 f4       	brcc	.+36     	; 0x9134 <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    9110:	81 30       	cpi	r24, 0x01	; 1
    9112:	51 f4       	brne	.+20     	; 0x9128 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    9114:	64 e5       	ldi	r22, 0x54	; 84
    9116:	79 e0       	ldi	r23, 0x09	; 9
    9118:	85 e5       	ldi	r24, 0x55	; 85
    911a:	94 e1       	ldi	r25, 0x14	; 20
    911c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    9120:	85 e5       	ldi	r24, 0x55	; 85
    9122:	94 e1       	ldi	r25, 0x14	; 20
    9124:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    9128:	81 e0       	ldi	r24, 0x01	; 1
    912a:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    912e:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    9132:	27 c0       	rjmp	.+78     	; 0x9182 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    9134:	81 30       	cpi	r24, 0x01	; 1
    9136:	09 f0       	breq	.+2      	; 0x913a <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    9138:	3f c0       	rjmp	.+126    	; 0x91b8 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    913a:	64 e4       	ldi	r22, 0x44	; 68
    913c:	79 e0       	ldi	r23, 0x09	; 9
    913e:	16 c0       	rjmp	.+44     	; 0x916c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9140:	81 30       	cpi	r24, 0x01	; 1
    9142:	d1 f5       	brne	.+116    	; 0x91b8 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    9144:	64 e3       	ldi	r22, 0x34	; 52
    9146:	79 e0       	ldi	r23, 0x09	; 9
    9148:	11 c0       	rjmp	.+34     	; 0x916c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    914a:	81 30       	cpi	r24, 0x01	; 1
    914c:	b9 f5       	brne	.+110    	; 0x91bc <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    914e:	64 e2       	ldi	r22, 0x24	; 36
    9150:	79 e0       	ldi	r23, 0x09	; 9
    9152:	85 e5       	ldi	r24, 0x55	; 85
    9154:	94 e1       	ldi	r25, 0x14	; 20
    9156:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    915a:	85 e5       	ldi	r24, 0x55	; 85
    915c:	94 e1       	ldi	r25, 0x14	; 20
    915e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    9162:	0e c0       	rjmp	.+28     	; 0x9180 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9164:	81 30       	cpi	r24, 0x01	; 1
    9166:	41 f5       	brne	.+80     	; 0x91b8 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    9168:	60 e1       	ldi	r22, 0x10	; 16
    916a:	79 e0       	ldi	r23, 0x09	; 9
    916c:	85 e5       	ldi	r24, 0x55	; 85
    916e:	94 e1       	ldi	r25, 0x14	; 20
    9170:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9174:	85 e5       	ldi	r24, 0x55	; 85
    9176:	94 e1       	ldi	r25, 0x14	; 20
    9178:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    917c:	c0 e0       	ldi	r28, 0x00	; 0
    917e:	01 c0       	rjmp	.+2      	; 0x9182 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    9180:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9182:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9186:	81 30       	cpi	r24, 0x01	; 1
    9188:	d1 f4       	brne	.+52     	; 0x91be <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    918a:	6b ef       	ldi	r22, 0xFB	; 251
    918c:	78 e0       	ldi	r23, 0x08	; 8
    918e:	85 e5       	ldi	r24, 0x55	; 85
    9190:	94 e1       	ldi	r25, 0x14	; 20
    9192:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    9196:	4a e0       	ldi	r20, 0x0A	; 10
    9198:	50 e0       	ldi	r21, 0x00	; 0
    919a:	6c 2f       	mov	r22, r28
    919c:	85 e5       	ldi	r24, 0x55	; 85
    919e:	94 e1       	ldi	r25, 0x14	; 20
    91a0:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    91a4:	85 e5       	ldi	r24, 0x55	; 85
    91a6:	94 e1       	ldi	r25, 0x14	; 20
    91a8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    91ac:	08 c0       	rjmp	.+16     	; 0x91be <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    91ae:	81 30       	cpi	r24, 0x01	; 1
    91b0:	29 f4       	brne	.+10     	; 0x91bc <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    91b2:	64 eb       	ldi	r22, 0xB4	; 180
    91b4:	79 e0       	ldi	r23, 0x09	; 9
    91b6:	cd cf       	rjmp	.-102    	; 0x9152 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    91b8:	c0 e0       	ldi	r28, 0x00	; 0
    91ba:	01 c0       	rjmp	.+2      	; 0x91be <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    91bc:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    91be:	8c 2f       	mov	r24, r28
    91c0:	cf 91       	pop	r28
    91c2:	1f 91       	pop	r17
    91c4:	0f 91       	pop	r16
    91c6:	08 95       	ret

000091c8 <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    91c8:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    91cc:	81 11       	cpse	r24, r1
    91ce:	2a c0       	rjmp	.+84     	; 0x9224 <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    91d0:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    91d4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    91d8:	81 30       	cpi	r24, 0x01	; 1
    91da:	21 f5       	brne	.+72     	; 0x9224 <_Z16Set_Trigger_Timev+0x5c>
    91dc:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    91e0:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    91e4:	89 2b       	or	r24, r25
    91e6:	f1 f4       	brne	.+60     	; 0x9224 <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    91e8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    91ec:	81 30       	cpi	r24, 0x01	; 1
    91ee:	51 f4       	brne	.+20     	; 0x9204 <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    91f0:	6a ee       	ldi	r22, 0xEA	; 234
    91f2:	78 e0       	ldi	r23, 0x08	; 8
    91f4:	85 e5       	ldi	r24, 0x55	; 85
    91f6:	94 e1       	ldi	r25, 0x14	; 20
    91f8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    91fc:	85 e5       	ldi	r24, 0x55	; 85
    91fe:	94 e1       	ldi	r25, 0x14	; 20
    9200:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    9204:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    9208:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    920c:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    9210:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    9214:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    9218:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    921c:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    9220:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    9224:	80 e0       	ldi	r24, 0x00	; 0
    9226:	08 95       	ret

00009228 <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    9228:	2f 92       	push	r2
    922a:	3f 92       	push	r3
    922c:	4f 92       	push	r4
    922e:	5f 92       	push	r5
    9230:	6f 92       	push	r6
    9232:	7f 92       	push	r7
    9234:	8f 92       	push	r8
    9236:	9f 92       	push	r9
    9238:	af 92       	push	r10
    923a:	bf 92       	push	r11
    923c:	cf 92       	push	r12
    923e:	df 92       	push	r13
    9240:	ef 92       	push	r14
    9242:	ff 92       	push	r15
    9244:	0f 93       	push	r16
    9246:	1f 93       	push	r17
    9248:	cf 93       	push	r28
    924a:	df 93       	push	r29
    924c:	18 2f       	mov	r17, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    924e:	80 91 85 0d 	lds	r24, 0x0D85	; 0x800d85 <_sExtra_Plot+0x1>
    9252:	84 36       	cpi	r24, 0x64	; 100
    9254:	08 f4       	brcc	.+2      	; 0x9258 <_Z17Doser_Pump_On_Offh+0x30>
    9256:	09 c3       	rjmp	.+1554   	; 0x986a <_Z17Doser_Pump_On_Offh+0x642>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    9258:	11 30       	cpi	r17, 0x01	; 1
    925a:	29 f4       	brne	.+10     	; 0x9266 <_Z17Doser_Pump_On_Offh+0x3e>
    925c:	80 91 86 0d 	lds	r24, 0x0D86	; 0x800d86 <_sExtra_Plot+0x2>
    9260:	84 30       	cpi	r24, 0x04	; 4
    9262:	c1 f4       	brne	.+48     	; 0x9294 <_Z17Doser_Pump_On_Offh+0x6c>
    9264:	02 c3       	rjmp	.+1540   	; 0x986a <_Z17Doser_Pump_On_Offh+0x642>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    9266:	11 11       	cpse	r17, r1
    9268:	12 c0       	rjmp	.+36     	; 0x928e <_Z17Doser_Pump_On_Offh+0x66>
    926a:	80 e0       	ldi	r24, 0x00	; 0
    926c:	90 e0       	ldi	r25, 0x00	; 0
    926e:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    9270:	fc 01       	movw	r30, r24
    9272:	e0 5e       	subi	r30, 0xE0	; 224
    9274:	f4 4f       	sbci	r31, 0xF4	; 244
    9276:	30 81       	ld	r19, Z
    9278:	31 30       	cpi	r19, 0x01	; 1
    927a:	09 f4       	brne	.+2      	; 0x927e <_Z17Doser_Pump_On_Offh+0x56>
			{
				number_of_running_tanks++;
    927c:	2f 5f       	subi	r18, 0xFF	; 255
    927e:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    9280:	83 30       	cpi	r24, 0x03	; 3
    9282:	91 05       	cpc	r25, r1
    9284:	a9 f7       	brne	.-22     	; 0x9270 <_Z17Doser_Pump_On_Offh+0x48>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    9286:	22 30       	cpi	r18, 0x02	; 2
    9288:	08 f0       	brcs	.+2      	; 0x928c <_Z17Doser_Pump_On_Offh+0x64>
    928a:	ef c2       	rjmp	.+1502   	; 0x986a <_Z17Doser_Pump_On_Offh+0x642>
    928c:	03 c0       	rjmp	.+6      	; 0x9294 <_Z17Doser_Pump_On_Offh+0x6c>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    928e:	13 30       	cpi	r17, 0x03	; 3
    9290:	09 f4       	brne	.+2      	; 0x9294 <_Z17Doser_Pump_On_Offh+0x6c>
	{
		on_off = _kOFF;
    9292:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    9294:	80 91 84 0d 	lds	r24, 0x0D84	; 0x800d84 <_sExtra_Plot>
    9298:	81 11       	cpse	r24, r1
    929a:	e7 c2       	rjmp	.+1486   	; 0x986a <_Z17Doser_Pump_On_Offh+0x642>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    929c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    92a0:	81 30       	cpi	r24, 0x01	; 1
    92a2:	09 f5       	brne	.+66     	; 0x92e6 <_Z17Doser_Pump_On_Offh+0xbe>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    92a4:	60 ea       	ldi	r22, 0xA0	; 160
    92a6:	70 e1       	ldi	r23, 0x10	; 16
    92a8:	85 e5       	ldi	r24, 0x55	; 85
    92aa:	94 e1       	ldi	r25, 0x14	; 20
    92ac:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    92b0:	85 e5       	ldi	r24, 0x55	; 85
    92b2:	94 e1       	ldi	r25, 0x14	; 20
    92b4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    92b8:	c9 e8       	ldi	r28, 0x89	; 137
    92ba:	dd e0       	ldi	r29, 0x0D	; 13
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    92bc:	69 91       	ld	r22, Y+
    92be:	4a e0       	ldi	r20, 0x0A	; 10
    92c0:	50 e0       	ldi	r21, 0x00	; 0
    92c2:	85 e5       	ldi	r24, 0x55	; 85
    92c4:	94 e1       	ldi	r25, 0x14	; 20
    92c6:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    92ca:	6e e9       	ldi	r22, 0x9E	; 158
    92cc:	70 e1       	ldi	r23, 0x10	; 16
    92ce:	85 e5       	ldi	r24, 0x55	; 85
    92d0:	94 e1       	ldi	r25, 0x14	; 20
    92d2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    92d6:	85 e5       	ldi	r24, 0x55	; 85
    92d8:	94 e1       	ldi	r25, 0x14	; 20
    92da:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    92de:	2d e0       	ldi	r18, 0x0D	; 13
    92e0:	ce 38       	cpi	r28, 0x8E	; 142
    92e2:	d2 07       	cpc	r29, r18
    92e4:	59 f7       	brne	.-42     	; 0x92bc <_Z17Doser_Pump_On_Offh+0x94>
    92e6:	c9 e8       	ldi	r28, 0x89	; 137
    92e8:	dd e0       	ldi	r29, 0x0D	; 13
    92ea:	5e e8       	ldi	r21, 0x8E	; 142
    92ec:	65 2e       	mov	r6, r21
    92ee:	5d e0       	ldi	r21, 0x0D	; 13
    92f0:	75 2e       	mov	r7, r21
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    92f2:	7e 01       	movw	r14, r28
    92f4:	00 e0       	ldi	r16, 0x00	; 0
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    92f6:	6c e7       	ldi	r22, 0x7C	; 124
    92f8:	c6 2e       	mov	r12, r22
    92fa:	63 e1       	ldi	r22, 0x13	; 19
    92fc:	d6 2e       	mov	r13, r22
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    92fe:	77 e0       	ldi	r23, 0x07	; 7
    9300:	27 2e       	mov	r2, r23
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9302:	e2 e0       	ldi	r30, 0x02	; 2
    9304:	3e 2e       	mov	r3, r30
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9306:	fd e0       	ldi	r31, 0x0D	; 13
    9308:	9f 2e       	mov	r9, r31
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    930a:	a3 e0       	ldi	r26, 0x03	; 3
    930c:	4a 2e       	mov	r4, r26
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    930e:	bb ea       	ldi	r27, 0xAB	; 171
    9310:	8b 2e       	mov	r8, r27
    9312:	0a c0       	rjmp	.+20     	; 0x9328 <_Z17Doser_Pump_On_Offh+0x100>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9314:	25 e1       	ldi	r18, 0x15	; 21
    9316:	2b 15       	cp	r18, r11
    9318:	08 f4       	brcc	.+2      	; 0x931c <_Z17Doser_Pump_On_Offh+0xf4>
    931a:	61 c2       	rjmp	.+1218   	; 0x97de <_Z17Doser_Pump_On_Offh+0x5b6>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    931c:	8e e8       	ldi	r24, 0x8E	; 142
    931e:	e8 16       	cp	r14, r24
    9320:	8d e0       	ldi	r24, 0x0D	; 13
    9322:	f8 06       	cpc	r15, r24
    9324:	09 f4       	brne	.+2      	; 0x9328 <_Z17Doser_Pump_On_Offh+0x100>
    9326:	6c c2       	rjmp	.+1240   	; 0x9800 <_Z17Doser_Pump_On_Offh+0x5d8>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    9328:	f7 01       	movw	r30, r14
    932a:	b1 90       	ld	r11, Z+
    932c:	7f 01       	movw	r14, r30
    932e:	8f ef       	ldi	r24, 0xFF	; 255
    9330:	8b 0d       	add	r24, r11
    9332:	85 31       	cpi	r24, 0x15	; 21
    9334:	78 f7       	brcc	.-34     	; 0x9314 <_Z17Doser_Pump_On_Offh+0xec>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9336:	f3 e0       	ldi	r31, 0x03	; 3
    9338:	fb 15       	cp	r31, r11
    933a:	a0 f4       	brcc	.+40     	; 0x9364 <_Z17Doser_Pump_On_Offh+0x13c>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    933c:	8b 2d       	mov	r24, r11
    933e:	64 2d       	mov	r22, r4
    9340:	0e 94 2a e7 	call	0x1ce54	; 0x1ce54 <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9344:	b8 9c       	mul	r11, r8
    9346:	61 2d       	mov	r22, r1
    9348:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    934a:	99 23       	and	r25, r25
    934c:	31 f0       	breq	.+12     	; 0x935a <_Z17Doser_Pump_On_Offh+0x132>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    934e:	66 95       	lsr	r22
    9350:	aa 24       	eor	r10, r10
    9352:	a3 94       	inc	r10
    9354:	a6 0e       	add	r10, r22
    9356:	b9 2e       	mov	r11, r25
    9358:	07 c0       	rjmp	.+14     	; 0x9368 <_Z17Doser_Pump_On_Offh+0x140>
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    935a:	a6 2e       	mov	r10, r22
    935c:	a6 94       	lsr	r10
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    935e:	43 e0       	ldi	r20, 0x03	; 3
    9360:	b4 2e       	mov	r11, r20
    9362:	02 c0       	rjmp	.+4      	; 0x9368 <_Z17Doser_Pump_On_Offh+0x140>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9364:	aa 24       	eor	r10, r10
    9366:	a3 94       	inc	r10
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9368:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    936c:	81 30       	cpi	r24, 0x01	; 1
    936e:	89 f4       	brne	.+34     	; 0x9392 <_Z17Doser_Pump_On_Offh+0x16a>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9370:	6a e8       	ldi	r22, 0x8A	; 138
    9372:	70 e1       	ldi	r23, 0x10	; 16
    9374:	85 e5       	ldi	r24, 0x55	; 85
    9376:	94 e1       	ldi	r25, 0x14	; 20
    9378:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    937c:	4a e0       	ldi	r20, 0x0A	; 10
    937e:	50 e0       	ldi	r21, 0x00	; 0
    9380:	6a 2d       	mov	r22, r10
    9382:	85 e5       	ldi	r24, 0x55	; 85
    9384:	94 e1       	ldi	r25, 0x14	; 20
    9386:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    938a:	85 e5       	ldi	r24, 0x55	; 85
    938c:	94 e1       	ldi	r25, 0x14	; 20
    938e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9392:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
    9396:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9398:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    939c:	f6 01       	movw	r30, r12
    939e:	24 e1       	ldi	r18, 0x14	; 20
    93a0:	11 92       	st	Z+, r1
    93a2:	2a 95       	dec	r18
    93a4:	e9 f7       	brne	.-6      	; 0x93a0 <_Z17Doser_Pump_On_Offh+0x178>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    93a6:	6a 2d       	mov	r22, r10
    93a8:	70 e0       	ldi	r23, 0x00	; 0
    93aa:	61 50       	subi	r22, 0x01	; 1
    93ac:	71 09       	sbc	r23, r1
    93ae:	26 9e       	mul	r2, r22
    93b0:	c0 01       	movw	r24, r0
    93b2:	27 9e       	mul	r2, r23
    93b4:	90 0d       	add	r25, r0
    93b6:	11 24       	eor	r1, r1
    93b8:	86 5b       	subi	r24, 0xB6	; 182
    93ba:	9c 4e       	sbci	r25, 0xEC	; 236
    93bc:	fc 01       	movw	r30, r24
    93be:	e1 5a       	subi	r30, 0xA1	; 161
    93c0:	ff 4f       	sbci	r31, 0xFF	; 255
    93c2:	20 81       	ld	r18, Z
    93c4:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    93c8:	31 96       	adiw	r30, 0x01	; 1
    93ca:	20 81       	ld	r18, Z
    93cc:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    93d0:	31 96       	adiw	r30, 0x01	; 1
    93d2:	20 81       	ld	r18, Z
    93d4:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    93d8:	31 96       	adiw	r30, 0x01	; 1
    93da:	20 81       	ld	r18, Z
    93dc:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    93e0:	31 96       	adiw	r30, 0x01	; 1
    93e2:	20 81       	ld	r18, Z
    93e4:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    93e8:	31 96       	adiw	r30, 0x01	; 1
    93ea:	20 81       	ld	r18, Z
    93ec:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    93f0:	30 92 82 13 	sts	0x1382, r3	; 0x801382 <_sRuble_Parameters+0x38>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    93f4:	10 93 83 13 	sts	0x1383, r17	; 0x801383 <_sRuble_Parameters+0x39>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    93f8:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    93fc:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9400:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
    9404:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9408:	b0 92 87 13 	sts	0x1387, r11	; 0x801387 <_sRuble_Parameters+0x3d>
    940c:	40 e0       	ldi	r20, 0x00	; 0
    940e:	50 e0       	ldi	r21, 0x00	; 0
    9410:	54 2e       	mov	r5, r20
    9412:	a1 2c       	mov	r10, r1
    9414:	b1 2c       	mov	r11, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9416:	94 9e       	mul	r9, r20
    9418:	b0 01       	movw	r22, r0
    941a:	95 9e       	mul	r9, r21
    941c:	70 0d       	add	r23, r0
    941e:	11 24       	eor	r1, r1
    9420:	69 54       	subi	r22, 0x49	; 73
    9422:	74 4f       	sbci	r23, 0xF4	; 244
    9424:	2b 2d       	mov	r18, r11
    9426:	30 e0       	ldi	r19, 0x00	; 0
    9428:	fb 01       	movw	r30, r22
    942a:	e2 0f       	add	r30, r18
    942c:	f3 1f       	adc	r31, r19
    942e:	28 0f       	add	r18, r24
    9430:	39 1f       	adc	r19, r25
    9432:	d9 01       	movw	r26, r18
    9434:	a1 5a       	subi	r26, 0xA1	; 161
    9436:	bf 4f       	sbci	r27, 0xFF	; 255
    9438:	31 81       	ldd	r19, Z+1	; 0x01
    943a:	2c 91       	ld	r18, X
    943c:	32 17       	cp	r19, r18
    943e:	19 f0       	breq	.+6      	; 0x9446 <_Z17Doser_Pump_On_Offh+0x21e>
					{
						compare_id = _kVALVE_ID_LEN;
    9440:	36 e0       	ldi	r19, 0x06	; 6
    9442:	b3 2e       	mov	r11, r19
						id_len = _kRESET;
    9444:	a1 2c       	mov	r10, r1
					}
					id_len++;
    9446:	a3 94       	inc	r10
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9448:	b3 94       	inc	r11
    944a:	e5 e0       	ldi	r30, 0x05	; 5
    944c:	eb 15       	cp	r30, r11
    944e:	50 f7       	brcc	.-44     	; 0x9424 <_Z17Doser_Pump_On_Offh+0x1fc>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9450:	f6 e0       	ldi	r31, 0x06	; 6
    9452:	af 16       	cp	r10, r31
    9454:	31 f0       	breq	.+12     	; 0x9462 <_Z17Doser_Pump_On_Offh+0x23a>
    9456:	4f 5f       	subi	r20, 0xFF	; 255
    9458:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    945a:	47 30       	cpi	r20, 0x07	; 7
    945c:	51 05       	cpc	r21, r1
    945e:	c1 f6       	brne	.-80     	; 0x9410 <_Z17Doser_Pump_On_Offh+0x1e8>
    9460:	01 c0       	rjmp	.+2      	; 0x9464 <_Z17Doser_Pump_On_Offh+0x23c>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9462:	05 2d       	mov	r16, r5
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9464:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9468:	81 30       	cpi	r24, 0x01	; 1
    946a:	89 f4       	brne	.+34     	; 0x948e <_Z17Doser_Pump_On_Offh+0x266>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    946c:	64 e7       	ldi	r22, 0x74	; 116
    946e:	70 e1       	ldi	r23, 0x10	; 16
    9470:	85 e5       	ldi	r24, 0x55	; 85
    9472:	94 e1       	ldi	r25, 0x14	; 20
    9474:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9478:	4a e0       	ldi	r20, 0x0A	; 10
    947a:	50 e0       	ldi	r21, 0x00	; 0
    947c:	60 2f       	mov	r22, r16
    947e:	85 e5       	ldi	r24, 0x55	; 85
    9480:	94 e1       	ldi	r25, 0x14	; 20
    9482:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9486:	85 e5       	ldi	r24, 0x55	; 85
    9488:	94 e1       	ldi	r25, 0x14	; 20
    948a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
// 						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 					}
// 				}
				data_send_counter++;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    948e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9492:	81 30       	cpi	r24, 0x01	; 1
    9494:	51 f4       	brne	.+20     	; 0x94aa <_Z17Doser_Pump_On_Offh+0x282>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9496:	60 e5       	ldi	r22, 0x50	; 80
    9498:	70 e1       	ldi	r23, 0x10	; 16
    949a:	85 e5       	ldi	r24, 0x55	; 85
    949c:	94 e1       	ldi	r25, 0x14	; 20
    949e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    94a2:	85 e5       	ldi	r24, 0x55	; 85
    94a4:	94 e1       	ldi	r25, 0x14	; 20
    94a6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    94aa:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    94ae:	8c e0       	ldi	r24, 0x0C	; 12
    94b0:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    94b4:	88 eb       	ldi	r24, 0xB8	; 184
    94b6:	9b e0       	ldi	r25, 0x0B	; 11
    94b8:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    94bc:	88 23       	and	r24, r24
    94be:	09 f4       	brne	.+2      	; 0x94c2 <_Z17Doser_Pump_On_Offh+0x29a>
    94c0:	41 c1       	rjmp	.+642    	; 0x9744 <_Z17Doser_Pump_On_Offh+0x51c>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    94c2:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
    94c6:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    94ca:	88 23       	and	r24, r24
    94cc:	09 f4       	brne	.+2      	; 0x94d0 <_Z17Doser_Pump_On_Offh+0x2a8>
    94ce:	f4 c0       	rjmp	.+488    	; 0x96b8 <_Z17Doser_Pump_On_Offh+0x490>
    94d0:	a0 2e       	mov	r10, r16
    94d2:	b1 2c       	mov	r11, r1
// 								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 							}
// 						}
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    94d4:	91 30       	cpi	r25, 0x01	; 1
    94d6:	89 f5       	brne	.+98     	; 0x953a <_Z17Doser_Pump_On_Offh+0x312>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    94d8:	6a e3       	ldi	r22, 0x3A	; 58
    94da:	70 e1       	ldi	r23, 0x10	; 16
    94dc:	85 e5       	ldi	r24, 0x55	; 85
    94de:	94 e1       	ldi	r25, 0x14	; 20
    94e0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    94e4:	4a e0       	ldi	r20, 0x0A	; 10
    94e6:	50 e0       	ldi	r21, 0x00	; 0
    94e8:	60 e9       	ldi	r22, 0x90	; 144
    94ea:	73 e1       	ldi	r23, 0x13	; 19
    94ec:	85 e5       	ldi	r24, 0x55	; 85
    94ee:	94 e1       	ldi	r25, 0x14	; 20
    94f0:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    94f4:	85 e5       	ldi	r24, 0x55	; 85
    94f6:	94 e1       	ldi	r25, 0x14	; 20
    94f8:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    94fc:	85 e5       	ldi	r24, 0x55	; 85
    94fe:	94 e1       	ldi	r25, 0x14	; 20
    9500:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9504:	6c e1       	ldi	r22, 0x1C	; 28
    9506:	70 e1       	ldi	r23, 0x10	; 16
    9508:	85 e5       	ldi	r24, 0x55	; 85
    950a:	94 e1       	ldi	r25, 0x14	; 20
    950c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9510:	9a 9c       	mul	r9, r10
    9512:	b0 01       	movw	r22, r0
    9514:	9b 9c       	mul	r9, r11
    9516:	70 0d       	add	r23, r0
    9518:	11 24       	eor	r1, r1
    951a:	68 54       	subi	r22, 0x48	; 72
    951c:	74 4f       	sbci	r23, 0xF4	; 244
    951e:	47 e0       	ldi	r20, 0x07	; 7
    9520:	50 e0       	ldi	r21, 0x00	; 0
    9522:	85 e5       	ldi	r24, 0x55	; 85
    9524:	94 e1       	ldi	r25, 0x14	; 20
    9526:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
							Serial.println();
    952a:	85 e5       	ldi	r24, 0x55	; 85
    952c:	94 e1       	ldi	r25, 0x14	; 20
    952e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9532:	85 e5       	ldi	r24, 0x55	; 85
    9534:	94 e1       	ldi	r25, 0x14	; 20
    9536:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    953a:	a0 e9       	ldi	r26, 0x90	; 144
    953c:	b3 e1       	ldi	r27, 0x13	; 19
    953e:	8d e0       	ldi	r24, 0x0D	; 13
    9540:	08 9f       	mul	r16, r24
    9542:	90 01       	movw	r18, r0
    9544:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9546:	80 e0       	ldi	r24, 0x00	; 0
    9548:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    954a:	4d 91       	ld	r20, X+
    954c:	f9 01       	movw	r30, r18
    954e:	e8 0f       	add	r30, r24
    9550:	f9 1f       	adc	r31, r25
    9552:	e9 54       	subi	r30, 0x49	; 73
    9554:	f4 4f       	sbci	r31, 0xF4	; 244
    9556:	51 81       	ldd	r21, Z+1	; 0x01
    9558:	54 17       	cp	r21, r20
    955a:	09 f4       	brne	.+2      	; 0x955e <_Z17Doser_Pump_On_Offh+0x336>
    955c:	48 c0       	rjmp	.+144    	; 0x95ee <_Z17Doser_Pump_On_Offh+0x3c6>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    955e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9562:	81 30       	cpi	r24, 0x01	; 1
    9564:	51 f4       	brne	.+20     	; 0x957a <_Z17Doser_Pump_On_Offh+0x352>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9566:	61 ef       	ldi	r22, 0xF1	; 241
    9568:	7f e0       	ldi	r23, 0x0F	; 15
    956a:	85 e5       	ldi	r24, 0x55	; 85
    956c:	94 e1       	ldi	r25, 0x14	; 20
    956e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9572:	85 e5       	ldi	r24, 0x55	; 85
    9574:	94 e1       	ldi	r25, 0x14	; 20
    9576:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    957a:	86 e0       	ldi	r24, 0x06	; 6
    957c:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9580:	84 e6       	ldi	r24, 0x64	; 100
    9582:	90 e0       	ldi	r25, 0x00	; 0
    9584:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    9588:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    958c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9590:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9594:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9598:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    959c:	a0 62       	ori	r26, 0x20	; 32
    959e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    95a2:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    95a6:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    95aa:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    95ae:	00 93 fc 13 	sts	0x13FC, r16	; 0x8013fc <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    95b2:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    95b6:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    95ba:	82 60       	ori	r24, 0x02	; 2
    95bc:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    95c0:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95c4:	e9 91       	ld	r30, Y+
    95c6:	e6 31       	cpi	r30, 0x16	; 22
    95c8:	68 f0       	brcs	.+26     	; 0x95e4 <_Z17Doser_Pump_On_Offh+0x3bc>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    95ca:	f0 e0       	ldi	r31, 0x00	; 0
    95cc:	ec 53       	subi	r30, 0x3C	; 60
    95ce:	fc 4e       	sbci	r31, 0xEC	; 236
    95d0:	61 e0       	ldi	r22, 0x01	; 1
    95d2:	80 81       	ld	r24, Z
    95d4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
											_kDELAY_MS(200);
    95d8:	68 ec       	ldi	r22, 0xC8	; 200
    95da:	70 e0       	ldi	r23, 0x00	; 0
    95dc:	80 e0       	ldi	r24, 0x00	; 0
    95de:	90 e0       	ldi	r25, 0x00	; 0
    95e0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    95e4:	6c 16       	cp	r6, r28
    95e6:	7d 06       	cpc	r7, r29
    95e8:	69 f7       	brne	.-38     	; 0x95c4 <_Z17Doser_Pump_On_Offh+0x39c>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    95ea:	80 e0       	ldi	r24, 0x00	; 0
    95ec:	3f c1       	rjmp	.+638    	; 0x986c <_Z17Doser_Pump_On_Offh+0x644>
    95ee:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    95f0:	86 30       	cpi	r24, 0x06	; 6
    95f2:	91 05       	cpc	r25, r1
    95f4:	09 f0       	breq	.+2      	; 0x95f8 <_Z17Doser_Pump_On_Offh+0x3d0>
    95f6:	a9 cf       	rjmp	.-174    	; 0x954a <_Z17Doser_Pump_On_Offh+0x322>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    95f8:	9a 9c       	mul	r9, r10
    95fa:	f0 01       	movw	r30, r0
    95fc:	9b 9c       	mul	r9, r11
    95fe:	f0 0d       	add	r31, r0
    9600:	11 24       	eor	r1, r1
    9602:	e9 54       	subi	r30, 0x49	; 73
    9604:	f4 4f       	sbci	r31, 0xF4	; 244
    9606:	21 e0       	ldi	r18, 0x01	; 1
    9608:	23 87       	std	Z+11, r18	; 0x0b
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    960a:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    960e:	90 e0       	ldi	r25, 0x00	; 0
    9610:	98 2f       	mov	r25, r24
    9612:	88 27       	eor	r24, r24
    9614:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    9618:	82 2b       	or	r24, r18
    961a:	91 87       	std	Z+9, r25	; 0x09
    961c:	80 87       	std	Z+8, r24	; 0x08
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    961e:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    9622:	18 17       	cp	r17, r24
    9624:	09 f4       	brne	.+2      	; 0x9628 <_Z17Doser_Pump_On_Offh+0x400>
    9626:	d6 c0       	rjmp	.+428    	; 0x97d4 <_Z17Doser_Pump_On_Offh+0x5ac>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9628:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    962c:	81 30       	cpi	r24, 0x01	; 1
    962e:	51 f4       	brne	.+20     	; 0x9644 <_Z17Doser_Pump_On_Offh+0x41c>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9630:	6e ed       	ldi	r22, 0xDE	; 222
    9632:	7f e0       	ldi	r23, 0x0F	; 15
    9634:	85 e5       	ldi	r24, 0x55	; 85
    9636:	94 e1       	ldi	r25, 0x14	; 20
    9638:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    963c:	85 e5       	ldi	r24, 0x55	; 85
    963e:	94 e1       	ldi	r25, 0x14	; 20
    9640:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9644:	86 e0       	ldi	r24, 0x06	; 6
    9646:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    964a:	84 e6       	ldi	r24, 0x64	; 100
    964c:	90 e0       	ldi	r25, 0x00	; 0
    964e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    9652:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9656:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    965a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    965e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9662:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9666:	a0 62       	ori	r26, 0x20	; 32
    9668:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    966c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9670:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9674:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    9678:	00 93 fc 13 	sts	0x13FC, r16	; 0x8013fc <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    967c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    9680:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9684:	82 60       	ori	r24, 0x02	; 2
    9686:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    968a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    968e:	e9 91       	ld	r30, Y+
    9690:	e6 31       	cpi	r30, 0x16	; 22
    9692:	68 f0       	brcs	.+26     	; 0x96ae <_Z17Doser_Pump_On_Offh+0x486>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9694:	f0 e0       	ldi	r31, 0x00	; 0
    9696:	ec 53       	subi	r30, 0x3C	; 60
    9698:	fc 4e       	sbci	r31, 0xEC	; 236
    969a:	61 e0       	ldi	r22, 0x01	; 1
    969c:	80 81       	ld	r24, Z
    969e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
										_kDELAY_MS(200);
    96a2:	68 ec       	ldi	r22, 0xC8	; 200
    96a4:	70 e0       	ldi	r23, 0x00	; 0
    96a6:	80 e0       	ldi	r24, 0x00	; 0
    96a8:	90 e0       	ldi	r25, 0x00	; 0
    96aa:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    96ae:	8d e0       	ldi	r24, 0x0D	; 13
    96b0:	ce 38       	cpi	r28, 0x8E	; 142
    96b2:	d8 07       	cpc	r29, r24
    96b4:	61 f7       	brne	.-40     	; 0x968e <_Z17Doser_Pump_On_Offh+0x466>
    96b6:	99 cf       	rjmp	.-206    	; 0x95ea <_Z17Doser_Pump_On_Offh+0x3c2>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    96b8:	91 30       	cpi	r25, 0x01	; 1
    96ba:	51 f4       	brne	.+20     	; 0x96d0 <_Z17Doser_Pump_On_Offh+0x4a8>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    96bc:	63 ea       	ldi	r22, 0xA3	; 163
    96be:	7f e0       	ldi	r23, 0x0F	; 15
    96c0:	85 e5       	ldi	r24, 0x55	; 85
    96c2:	94 e1       	ldi	r25, 0x14	; 20
    96c4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    96c8:	85 e5       	ldi	r24, 0x55	; 85
    96ca:	94 e1       	ldi	r25, 0x14	; 20
    96cc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    96d0:	86 e0       	ldi	r24, 0x06	; 6
    96d2:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    96d6:	84 e6       	ldi	r24, 0x64	; 100
    96d8:	90 e0       	ldi	r25, 0x00	; 0
    96da:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    96de:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    96e2:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    96e6:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    96ea:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    96ee:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    96f2:	a0 62       	ori	r26, 0x20	; 32
    96f4:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    96f8:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    96fc:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9700:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9704:	00 93 fc 13 	sts	0x13FC, r16	; 0x8013fc <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9708:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    970c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9710:	82 60       	ori	r24, 0x02	; 2
    9712:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9716:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    971a:	e9 91       	ld	r30, Y+
    971c:	e6 31       	cpi	r30, 0x16	; 22
    971e:	68 f0       	brcs	.+26     	; 0x973a <_Z17Doser_Pump_On_Offh+0x512>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9720:	f0 e0       	ldi	r31, 0x00	; 0
    9722:	ec 53       	subi	r30, 0x3C	; 60
    9724:	fc 4e       	sbci	r31, 0xEC	; 236
    9726:	61 e0       	ldi	r22, 0x01	; 1
    9728:	80 81       	ld	r24, Z
    972a:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
									_kDELAY_MS(200);
    972e:	68 ec       	ldi	r22, 0xC8	; 200
    9730:	70 e0       	ldi	r23, 0x00	; 0
    9732:	80 e0       	ldi	r24, 0x00	; 0
    9734:	90 e0       	ldi	r25, 0x00	; 0
    9736:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    973a:	ed e0       	ldi	r30, 0x0D	; 13
    973c:	ce 38       	cpi	r28, 0x8E	; 142
    973e:	de 07       	cpc	r29, r30
    9740:	61 f7       	brne	.-40     	; 0x971a <_Z17Doser_Pump_On_Offh+0x4f2>
    9742:	53 cf       	rjmp	.-346    	; 0x95ea <_Z17Doser_Pump_On_Offh+0x3c2>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9744:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9748:	81 30       	cpi	r24, 0x01	; 1
    974a:	51 f4       	brne	.+20     	; 0x9760 <_Z17Doser_Pump_On_Offh+0x538>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    974c:	68 e6       	ldi	r22, 0x68	; 104
    974e:	7f e0       	ldi	r23, 0x0F	; 15
    9750:	85 e5       	ldi	r24, 0x55	; 85
    9752:	94 e1       	ldi	r25, 0x14	; 20
    9754:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9758:	85 e5       	ldi	r24, 0x55	; 85
    975a:	94 e1       	ldi	r25, 0x14	; 20
    975c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9760:	86 e0       	ldi	r24, 0x06	; 6
    9762:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    9766:	84 e6       	ldi	r24, 0x64	; 100
    9768:	90 e0       	ldi	r25, 0x00	; 0
    976a:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    976e:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9772:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9776:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    977a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    977e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9782:	a0 62       	ori	r26, 0x20	; 32
    9784:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9788:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    978c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9790:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    9794:	00 93 fc 13 	sts	0x13FC, r16	; 0x8013fc <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9798:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    979c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    97a0:	82 60       	ori	r24, 0x02	; 2
    97a2:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    97a6:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    97aa:	e9 91       	ld	r30, Y+
    97ac:	e6 31       	cpi	r30, 0x16	; 22
    97ae:	68 f0       	brcs	.+26     	; 0x97ca <_Z17Doser_Pump_On_Offh+0x5a2>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    97b0:	f0 e0       	ldi	r31, 0x00	; 0
    97b2:	ec 53       	subi	r30, 0x3C	; 60
    97b4:	fc 4e       	sbci	r31, 0xEC	; 236
    97b6:	61 e0       	ldi	r22, 0x01	; 1
    97b8:	80 81       	ld	r24, Z
    97ba:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
								_kDELAY_MS(200);
    97be:	68 ec       	ldi	r22, 0xC8	; 200
    97c0:	70 e0       	ldi	r23, 0x00	; 0
    97c2:	80 e0       	ldi	r24, 0x00	; 0
    97c4:	90 e0       	ldi	r25, 0x00	; 0
    97c6:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    97ca:	fd e0       	ldi	r31, 0x0D	; 13
    97cc:	ce 38       	cpi	r28, 0x8E	; 142
    97ce:	df 07       	cpc	r29, r31
    97d0:	61 f7       	brne	.-40     	; 0x97aa <_Z17Doser_Pump_On_Offh+0x582>
    97d2:	0b cf       	rjmp	.-490    	; 0x95ea <_Z17Doser_Pump_On_Offh+0x3c2>
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    97d4:	68 ee       	ldi	r22, 0xE8	; 232
    97d6:	73 e0       	ldi	r23, 0x03	; 3
    97d8:	80 e0       	ldi	r24, 0x00	; 0
    97da:	90 e0       	ldi	r25, 0x00	; 0
    97dc:	0e c0       	rjmp	.+28     	; 0x97fa <_Z17Doser_Pump_On_Offh+0x5d2>
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    97de:	61 e0       	ldi	r22, 0x01	; 1
    97e0:	11 11       	cpse	r17, r1
    97e2:	60 e0       	ldi	r22, 0x00	; 0
    97e4:	eb 2d       	mov	r30, r11
    97e6:	f0 e0       	ldi	r31, 0x00	; 0
    97e8:	ec 53       	subi	r30, 0x3C	; 60
    97ea:	fc 4e       	sbci	r31, 0xEC	; 236
    97ec:	80 81       	ld	r24, Z
    97ee:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
			_kDELAY_MS(200);
    97f2:	68 ec       	ldi	r22, 0xC8	; 200
    97f4:	70 e0       	ldi	r23, 0x00	; 0
    97f6:	80 e0       	ldi	r24, 0x00	; 0
    97f8:	90 e0       	ldi	r25, 0x00	; 0
    97fa:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    97fe:	8e cd       	rjmp	.-1252   	; 0x931c <_Z17Doser_Pump_On_Offh+0xf4>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9800:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9804:	81 30       	cpi	r24, 0x01	; 1
    9806:	51 f4       	brne	.+20     	; 0x981c <_Z17Doser_Pump_On_Offh+0x5f4>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9808:	69 e4       	ldi	r22, 0x49	; 73
    980a:	7f e0       	ldi	r23, 0x0F	; 15
    980c:	85 e5       	ldi	r24, 0x55	; 85
    980e:	94 e1       	ldi	r25, 0x14	; 20
    9810:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9814:	85 e5       	ldi	r24, 0x55	; 85
    9816:	94 e1       	ldi	r25, 0x14	; 20
    9818:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    981c:	11 11       	cpse	r17, r1
    981e:	14 c0       	rjmp	.+40     	; 0x9848 <_Z17Doser_Pump_On_Offh+0x620>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    9820:	80 91 86 0d 	lds	r24, 0x0D86	; 0x800d86 <_sExtra_Plot+0x2>
    9824:	85 30       	cpi	r24, 0x05	; 5
    9826:	09 f1       	breq	.+66     	; 0x986a <_Z17Doser_Pump_On_Offh+0x642>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9828:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    982c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9830:	90 62       	ori	r25, 0x20	; 32
    9832:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9836:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    983a:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    983e:	82 e0       	ldi	r24, 0x02	; 2
    9840:	80 93 9e 0d 	sts	0x0D9E, r24	; 0x800d9e <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    9844:	85 e0       	ldi	r24, 0x05	; 5
    9846:	0f c0       	rjmp	.+30     	; 0x9866 <_Z17Doser_Pump_On_Offh+0x63e>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9848:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    984c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9850:	90 62       	ori	r25, 0x20	; 32
    9852:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9856:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    985a:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    985e:	82 e0       	ldi	r24, 0x02	; 2
    9860:	80 93 9e 0d 	sts	0x0D9E, r24	; 0x800d9e <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    9864:	84 e0       	ldi	r24, 0x04	; 4
    9866:	80 93 86 0d 	sts	0x0D86, r24	; 0x800d86 <_sExtra_Plot+0x2>
	}
	
	return 1;
    986a:	81 e0       	ldi	r24, 0x01	; 1
}
    986c:	df 91       	pop	r29
    986e:	cf 91       	pop	r28
    9870:	1f 91       	pop	r17
    9872:	0f 91       	pop	r16
    9874:	ff 90       	pop	r15
    9876:	ef 90       	pop	r14
    9878:	df 90       	pop	r13
    987a:	cf 90       	pop	r12
    987c:	bf 90       	pop	r11
    987e:	af 90       	pop	r10
    9880:	9f 90       	pop	r9
    9882:	8f 90       	pop	r8
    9884:	7f 90       	pop	r7
    9886:	6f 90       	pop	r6
    9888:	5f 90       	pop	r5
    988a:	4f 90       	pop	r4
    988c:	3f 90       	pop	r3
    988e:	2f 90       	pop	r2
    9890:	08 95       	ret

00009892 <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    9892:	2f 92       	push	r2
    9894:	3f 92       	push	r3
    9896:	4f 92       	push	r4
    9898:	5f 92       	push	r5
    989a:	6f 92       	push	r6
    989c:	7f 92       	push	r7
    989e:	8f 92       	push	r8
    98a0:	9f 92       	push	r9
    98a2:	af 92       	push	r10
    98a4:	bf 92       	push	r11
    98a6:	cf 92       	push	r12
    98a8:	df 92       	push	r13
    98aa:	ef 92       	push	r14
    98ac:	ff 92       	push	r15
    98ae:	0f 93       	push	r16
    98b0:	1f 93       	push	r17
    98b2:	cf 93       	push	r28
    98b4:	df 93       	push	r29
    98b6:	f8 2e       	mov	r15, r24
    98b8:	96 2e       	mov	r9, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    98ba:	c8 2f       	mov	r28, r24
    98bc:	d0 e0       	ldi	r29, 0x00	; 0
    98be:	c2 5e       	subi	r28, 0xE2	; 226
    98c0:	d6 4f       	sbci	r29, 0xF6	; 246
    98c2:	8e 01       	movw	r16, r28
    98c4:	06 58       	subi	r16, 0x86	; 134
    98c6:	1f 4f       	sbci	r17, 0xFF	; 255
    98c8:	f8 01       	movw	r30, r16
    98ca:	80 81       	ld	r24, Z
    98cc:	84 36       	cpi	r24, 0x64	; 100
    98ce:	60 f4       	brcc	.+24     	; 0x98e8 <_Z22Fertilizer_Tank_On_Offhh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    98d0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    98d4:	81 30       	cpi	r24, 0x01	; 1
    98d6:	09 f0       	breq	.+2      	; 0x98da <_Z22Fertilizer_Tank_On_Offhh+0x48>
    98d8:	17 c2       	rjmp	.+1070   	; 0x9d08 <_Z22Fertilizer_Tank_On_Offhh+0x476>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    98da:	62 ea       	ldi	r22, 0xA2	; 162
    98dc:	72 e1       	ldi	r23, 0x12	; 18
    98de:	85 e5       	ldi	r24, 0x55	; 85
    98e0:	94 e1       	ldi	r25, 0x14	; 20
    98e2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    98e6:	0c c2       	rjmp	.+1048   	; 0x9d00 <_Z22Fertilizer_Tank_On_Offhh+0x46e>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    98e8:	f8 01       	movw	r30, r16
    98ea:	80 81       	ld	r24, Z
    98ec:	90 e0       	ldi	r25, 0x00	; 0
    98ee:	85 56       	subi	r24, 0x65	; 101
    98f0:	91 09       	sbc	r25, r1
    98f2:	2b e1       	ldi	r18, 0x1B	; 27
    98f4:	28 9f       	mul	r18, r24
    98f6:	f0 01       	movw	r30, r0
    98f8:	29 9f       	mul	r18, r25
    98fa:	f0 0d       	add	r31, r0
    98fc:	11 24       	eor	r1, r1
    98fe:	ec 57       	subi	r30, 0x7C	; 124
    9900:	f2 4f       	sbci	r31, 0xF2	; 242
    9902:	80 81       	ld	r24, Z
    9904:	81 11       	cpse	r24, r1
    9906:	00 c2       	rjmp	.+1024   	; 0x9d08 <_Z22Fertilizer_Tank_On_Offhh+0x476>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9908:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    990c:	81 30       	cpi	r24, 0x01	; 1
    990e:	a9 f0       	breq	.+42     	; 0x993a <_Z22Fertilizer_Tank_On_Offhh+0xa8>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    9910:	e1 2c       	mov	r14, r1
    9912:	f1 2c       	mov	r15, r1
    9914:	b1 2c       	mov	r11, r1
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9916:	6e 01       	movw	r12, r28
    9918:	fa e7       	ldi	r31, 0x7A	; 122
    991a:	cf 0e       	add	r12, r31
    991c:	d1 1c       	adc	r13, r1
    991e:	0b e1       	ldi	r16, 0x1B	; 27
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9920:	ac e7       	ldi	r26, 0x7C	; 124
    9922:	6a 2e       	mov	r6, r26
    9924:	a3 e1       	ldi	r26, 0x13	; 19
    9926:	7a 2e       	mov	r7, r26
    9928:	b4 e1       	ldi	r27, 0x14	; 20
    992a:	2b 2e       	mov	r2, r27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    992c:	17 e0       	ldi	r17, 0x07	; 7
    992e:	31 2e       	mov	r3, r17
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9930:	82 e0       	ldi	r24, 0x02	; 2
    9932:	58 2e       	mov	r5, r24
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9934:	9d e0       	ldi	r25, 0x0D	; 13
    9936:	89 2e       	mov	r8, r25
    9938:	94 c1       	rjmp	.+808    	; 0x9c62 <_Z22Fertilizer_Tank_On_Offhh+0x3d0>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    993a:	68 e8       	ldi	r22, 0x88	; 136
    993c:	72 e1       	ldi	r23, 0x12	; 18
    993e:	85 e5       	ldi	r24, 0x55	; 85
    9940:	94 e1       	ldi	r25, 0x14	; 20
    9942:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9946:	85 e5       	ldi	r24, 0x55	; 85
    9948:	94 e1       	ldi	r25, 0x14	; 20
    994a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    994e:	4a e0       	ldi	r20, 0x0A	; 10
    9950:	50 e0       	ldi	r21, 0x00	; 0
    9952:	6f 2d       	mov	r22, r15
    9954:	85 e5       	ldi	r24, 0x55	; 85
    9956:	94 e1       	ldi	r25, 0x14	; 20
    9958:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    995c:	85 e5       	ldi	r24, 0x55	; 85
    995e:	94 e1       	ldi	r25, 0x14	; 20
    9960:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    9964:	6a e6       	ldi	r22, 0x6A	; 106
    9966:	72 e1       	ldi	r23, 0x12	; 18
    9968:	85 e5       	ldi	r24, 0x55	; 85
    996a:	94 e1       	ldi	r25, 0x14	; 20
    996c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9970:	85 e5       	ldi	r24, 0x55	; 85
    9972:	94 e1       	ldi	r25, 0x14	; 20
    9974:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    9978:	e1 2c       	mov	r14, r1
    997a:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    997c:	fb e1       	ldi	r31, 0x1B	; 27
    997e:	df 2e       	mov	r13, r31
    9980:	f8 01       	movw	r30, r16
    9982:	80 81       	ld	r24, Z
    9984:	90 e0       	ldi	r25, 0x00	; 0
    9986:	85 56       	subi	r24, 0x65	; 101
    9988:	91 09       	sbc	r25, r1
    998a:	d8 9e       	mul	r13, r24
    998c:	f0 01       	movw	r30, r0
    998e:	d9 9e       	mul	r13, r25
    9990:	f0 0d       	add	r31, r0
    9992:	11 24       	eor	r1, r1
    9994:	ec 57       	subi	r30, 0x7C	; 124
    9996:	f2 4f       	sbci	r31, 0xF2	; 242
    9998:	ee 0d       	add	r30, r14
    999a:	ff 1d       	adc	r31, r15
    999c:	4a e0       	ldi	r20, 0x0A	; 10
    999e:	50 e0       	ldi	r21, 0x00	; 0
    99a0:	65 81       	ldd	r22, Z+5	; 0x05
    99a2:	85 e5       	ldi	r24, 0x55	; 85
    99a4:	94 e1       	ldi	r25, 0x14	; 20
    99a6:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    99aa:	68 e6       	ldi	r22, 0x68	; 104
    99ac:	72 e1       	ldi	r23, 0x12	; 18
    99ae:	85 e5       	ldi	r24, 0x55	; 85
    99b0:	94 e1       	ldi	r25, 0x14	; 20
    99b2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    99b6:	ff ef       	ldi	r31, 0xFF	; 255
    99b8:	ef 1a       	sub	r14, r31
    99ba:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    99bc:	25 e0       	ldi	r18, 0x05	; 5
    99be:	e2 16       	cp	r14, r18
    99c0:	f1 04       	cpc	r15, r1
    99c2:	f1 f6       	brne	.-68     	; 0x9980 <_Z22Fertilizer_Tank_On_Offhh+0xee>
    99c4:	a5 cf       	rjmp	.-182    	; 0x9910 <_Z22Fertilizer_Tank_On_Offhh+0x7e>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    99c6:	f6 01       	movw	r30, r12
    99c8:	80 81       	ld	r24, Z
    99ca:	90 e0       	ldi	r25, 0x00	; 0
    99cc:	85 56       	subi	r24, 0x65	; 101
    99ce:	91 09       	sbc	r25, r1
    99d0:	08 9f       	mul	r16, r24
    99d2:	f0 01       	movw	r30, r0
    99d4:	09 9f       	mul	r16, r25
    99d6:	f0 0d       	add	r31, r0
    99d8:	11 24       	eor	r1, r1
    99da:	ec 57       	subi	r30, 0x7C	; 124
    99dc:	f2 4f       	sbci	r31, 0xF2	; 242
    99de:	ee 0d       	add	r30, r14
    99e0:	ff 1d       	adc	r31, r15
    99e2:	85 81       	ldd	r24, Z+5	; 0x05
    99e4:	88 23       	and	r24, r24
    99e6:	09 f4       	brne	.+2      	; 0x99ea <_Z22Fertilizer_Tank_On_Offhh+0x158>
    99e8:	91 c1       	rjmp	.+802    	; 0x9d0c <_Z22Fertilizer_Tank_On_Offhh+0x47a>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    99ea:	f6 01       	movw	r30, r12
    99ec:	80 81       	ld	r24, Z
    99ee:	90 e0       	ldi	r25, 0x00	; 0
    99f0:	85 56       	subi	r24, 0x65	; 101
    99f2:	91 09       	sbc	r25, r1
    99f4:	08 9f       	mul	r16, r24
    99f6:	f0 01       	movw	r30, r0
    99f8:	09 9f       	mul	r16, r25
    99fa:	f0 0d       	add	r31, r0
    99fc:	11 24       	eor	r1, r1
    99fe:	ec 57       	subi	r30, 0x7C	; 124
    9a00:	f2 4f       	sbci	r31, 0xF2	; 242
    9a02:	ee 0d       	add	r30, r14
    9a04:	ff 1d       	adc	r31, r15
    9a06:	15 81       	ldd	r17, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a08:	14 30       	cpi	r17, 0x04	; 4
    9a0a:	08 f4       	brcc	.+2      	; 0x9a0e <_Z22Fertilizer_Tank_On_Offhh+0x17c>
    9a0c:	29 c2       	rjmp	.+1106   	; 0x9e60 <_Z22Fertilizer_Tank_On_Offhh+0x5ce>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a0e:	6b ea       	ldi	r22, 0xAB	; 171
    9a10:	16 9f       	mul	r17, r22
    9a12:	a1 2c       	mov	r10, r1
    9a14:	11 24       	eor	r1, r1
    9a16:	8a 2d       	mov	r24, r10
    9a18:	86 95       	lsr	r24
    9a1a:	98 2f       	mov	r25, r24
    9a1c:	99 0f       	add	r25, r25
    9a1e:	89 0f       	add	r24, r25
    9a20:	18 1b       	sub	r17, r24
    9a22:	6a 2d       	mov	r22, r10
    9a24:	66 95       	lsr	r22
    9a26:	11 23       	and	r17, r17
    9a28:	09 f4       	brne	.+2      	; 0x9a2c <_Z22Fertilizer_Tank_On_Offhh+0x19a>
    9a2a:	17 c2       	rjmp	.+1070   	; 0x9e5a <_Z22Fertilizer_Tank_On_Offhh+0x5c8>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9a2c:	aa 24       	eor	r10, r10
    9a2e:	a3 94       	inc	r10
    9a30:	a6 0e       	add	r10, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9a32:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9a36:	81 30       	cpi	r24, 0x01	; 1
    9a38:	89 f4       	brne	.+34     	; 0x9a5c <_Z22Fertilizer_Tank_On_Offhh+0x1ca>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9a3a:	64 e5       	ldi	r22, 0x54	; 84
    9a3c:	72 e1       	ldi	r23, 0x12	; 18
    9a3e:	85 e5       	ldi	r24, 0x55	; 85
    9a40:	94 e1       	ldi	r25, 0x14	; 20
    9a42:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9a46:	4a e0       	ldi	r20, 0x0A	; 10
    9a48:	50 e0       	ldi	r21, 0x00	; 0
    9a4a:	6a 2d       	mov	r22, r10
    9a4c:	85 e5       	ldi	r24, 0x55	; 85
    9a4e:	94 e1       	ldi	r25, 0x14	; 20
    9a50:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9a54:	85 e5       	ldi	r24, 0x55	; 85
    9a56:	94 e1       	ldi	r25, 0x14	; 20
    9a58:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9a5c:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
    9a60:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9a62:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9a66:	f3 01       	movw	r30, r6
    9a68:	22 2d       	mov	r18, r2
    9a6a:	11 92       	st	Z+, r1
    9a6c:	2a 95       	dec	r18
    9a6e:	e9 f7       	brne	.-6      	; 0x9a6a <_Z22Fertilizer_Tank_On_Offhh+0x1d8>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9a70:	6a 2d       	mov	r22, r10
    9a72:	70 e0       	ldi	r23, 0x00	; 0
    9a74:	61 50       	subi	r22, 0x01	; 1
    9a76:	71 09       	sbc	r23, r1
    9a78:	36 9e       	mul	r3, r22
    9a7a:	c0 01       	movw	r24, r0
    9a7c:	37 9e       	mul	r3, r23
    9a7e:	90 0d       	add	r25, r0
    9a80:	11 24       	eor	r1, r1
    9a82:	86 5b       	subi	r24, 0xB6	; 182
    9a84:	9c 4e       	sbci	r25, 0xEC	; 236
    9a86:	fc 01       	movw	r30, r24
    9a88:	e1 5a       	subi	r30, 0xA1	; 161
    9a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    9a8c:	20 81       	ld	r18, Z
    9a8e:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9a92:	31 96       	adiw	r30, 0x01	; 1
    9a94:	20 81       	ld	r18, Z
    9a96:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9a9a:	31 96       	adiw	r30, 0x01	; 1
    9a9c:	20 81       	ld	r18, Z
    9a9e:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9aa2:	31 96       	adiw	r30, 0x01	; 1
    9aa4:	20 81       	ld	r18, Z
    9aa6:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9aaa:	31 96       	adiw	r30, 0x01	; 1
    9aac:	20 81       	ld	r18, Z
    9aae:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9ab2:	31 96       	adiw	r30, 0x01	; 1
    9ab4:	20 81       	ld	r18, Z
    9ab6:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9aba:	50 92 82 13 	sts	0x1382, r5	; 0x801382 <_sRuble_Parameters+0x38>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9abe:	90 92 83 13 	sts	0x1383, r9	; 0x801383 <_sRuble_Parameters+0x39>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9ac2:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    9ac6:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9aca:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
    9ace:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9ad2:	10 93 87 13 	sts	0x1387, r17	; 0x801387 <_sRuble_Parameters+0x3d>
    9ad6:	40 e0       	ldi	r20, 0x00	; 0
    9ad8:	50 e0       	ldi	r21, 0x00	; 0
    9ada:	14 2f       	mov	r17, r20
    9adc:	a1 2c       	mov	r10, r1
    9ade:	41 2c       	mov	r4, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9ae0:	84 9e       	mul	r8, r20
    9ae2:	b0 01       	movw	r22, r0
    9ae4:	85 9e       	mul	r8, r21
    9ae6:	70 0d       	add	r23, r0
    9ae8:	11 24       	eor	r1, r1
    9aea:	69 54       	subi	r22, 0x49	; 73
    9aec:	74 4f       	sbci	r23, 0xF4	; 244
    9aee:	2a 2d       	mov	r18, r10
    9af0:	30 e0       	ldi	r19, 0x00	; 0
    9af2:	fb 01       	movw	r30, r22
    9af4:	e2 0f       	add	r30, r18
    9af6:	f3 1f       	adc	r31, r19
    9af8:	28 0f       	add	r18, r24
    9afa:	39 1f       	adc	r19, r25
    9afc:	d9 01       	movw	r26, r18
    9afe:	a1 5a       	subi	r26, 0xA1	; 161
    9b00:	bf 4f       	sbci	r27, 0xFF	; 255
    9b02:	31 81       	ldd	r19, Z+1	; 0x01
    9b04:	2c 91       	ld	r18, X
    9b06:	32 17       	cp	r19, r18
    9b08:	19 f0       	breq	.+6      	; 0x9b10 <_Z22Fertilizer_Tank_On_Offhh+0x27e>
					{
						compare_id = _kVALVE_ID_LEN;
    9b0a:	e6 e0       	ldi	r30, 0x06	; 6
    9b0c:	ae 2e       	mov	r10, r30
						id_len = _kRESET;
    9b0e:	41 2c       	mov	r4, r1
					}
					id_len++;
    9b10:	43 94       	inc	r4
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9b12:	a3 94       	inc	r10
    9b14:	e5 e0       	ldi	r30, 0x05	; 5
    9b16:	ea 15       	cp	r30, r10
    9b18:	50 f7       	brcc	.-44     	; 0x9aee <_Z22Fertilizer_Tank_On_Offhh+0x25c>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9b1a:	f6 e0       	ldi	r31, 0x06	; 6
    9b1c:	4f 12       	cpse	r4, r31
    9b1e:	a3 c1       	rjmp	.+838    	; 0x9e66 <_Z22Fertilizer_Tank_On_Offhh+0x5d4>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b20:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9b24:	81 30       	cpi	r24, 0x01	; 1
    9b26:	89 f4       	brne	.+34     	; 0x9b4a <_Z22Fertilizer_Tank_On_Offhh+0x2b8>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9b28:	6e e3       	ldi	r22, 0x3E	; 62
    9b2a:	72 e1       	ldi	r23, 0x12	; 18
    9b2c:	85 e5       	ldi	r24, 0x55	; 85
    9b2e:	94 e1       	ldi	r25, 0x14	; 20
    9b30:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9b34:	4a e0       	ldi	r20, 0x0A	; 10
    9b36:	50 e0       	ldi	r21, 0x00	; 0
    9b38:	61 2f       	mov	r22, r17
    9b3a:	85 e5       	ldi	r24, 0x55	; 85
    9b3c:	94 e1       	ldi	r25, 0x14	; 20
    9b3e:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9b42:	85 e5       	ldi	r24, 0x55	; 85
    9b44:	94 e1       	ldi	r25, 0x14	; 20
    9b46:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
// 						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 					}
// 				}
				data_send_counter++;
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9b4a:	6a e1       	ldi	r22, 0x1A	; 26
    9b4c:	72 e1       	ldi	r23, 0x12	; 18
    9b4e:	85 e5       	ldi	r24, 0x55	; 85
    9b50:	94 e1       	ldi	r25, 0x14	; 20
    9b52:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9b56:	85 e5       	ldi	r24, 0x55	; 85
    9b58:	94 e1       	ldi	r25, 0x14	; 20
    9b5a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9b5e:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9b62:	8c e0       	ldi	r24, 0x0C	; 12
    9b64:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9b68:	88 eb       	ldi	r24, 0xB8	; 184
    9b6a:	9b e0       	ldi	r25, 0x0B	; 11
    9b6c:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
    9b70:	88 23       	and	r24, r24
    9b72:	09 f4       	brne	.+2      	; 0x9b76 <_Z22Fertilizer_Tank_On_Offhh+0x2e4>
    9b74:	bd c2       	rjmp	.+1402   	; 0xa0f0 <_Z22Fertilizer_Tank_On_Offhh+0x85e>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9b76:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
    9b7a:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9b7e:	88 23       	and	r24, r24
    9b80:	09 f4       	brne	.+2      	; 0x9b84 <_Z22Fertilizer_Tank_On_Offhh+0x2f2>
    9b82:	4e c2       	rjmp	.+1180   	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x78e>
    9b84:	a1 2e       	mov	r10, r17
    9b86:	b1 2c       	mov	r11, r1
// 							}
// 						}
						
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b88:	91 30       	cpi	r25, 0x01	; 1
    9b8a:	89 f5       	brne	.+98     	; 0x9bee <_Z22Fertilizer_Tank_On_Offhh+0x35c>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9b8c:	64 e0       	ldi	r22, 0x04	; 4
    9b8e:	72 e1       	ldi	r23, 0x12	; 18
    9b90:	85 e5       	ldi	r24, 0x55	; 85
    9b92:	94 e1       	ldi	r25, 0x14	; 20
    9b94:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    9b98:	4a e0       	ldi	r20, 0x0A	; 10
    9b9a:	50 e0       	ldi	r21, 0x00	; 0
    9b9c:	60 e9       	ldi	r22, 0x90	; 144
    9b9e:	73 e1       	ldi	r23, 0x13	; 19
    9ba0:	85 e5       	ldi	r24, 0x55	; 85
    9ba2:	94 e1       	ldi	r25, 0x14	; 20
    9ba4:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9ba8:	85 e5       	ldi	r24, 0x55	; 85
    9baa:	94 e1       	ldi	r25, 0x14	; 20
    9bac:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9bb0:	85 e5       	ldi	r24, 0x55	; 85
    9bb2:	94 e1       	ldi	r25, 0x14	; 20
    9bb4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9bb8:	66 ee       	ldi	r22, 0xE6	; 230
    9bba:	71 e1       	ldi	r23, 0x11	; 17
    9bbc:	85 e5       	ldi	r24, 0x55	; 85
    9bbe:	94 e1       	ldi	r25, 0x14	; 20
    9bc0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9bc4:	8a 9c       	mul	r8, r10
    9bc6:	b0 01       	movw	r22, r0
    9bc8:	8b 9c       	mul	r8, r11
    9bca:	70 0d       	add	r23, r0
    9bcc:	11 24       	eor	r1, r1
    9bce:	68 54       	subi	r22, 0x48	; 72
    9bd0:	74 4f       	sbci	r23, 0xF4	; 244
    9bd2:	47 e0       	ldi	r20, 0x07	; 7
    9bd4:	50 e0       	ldi	r21, 0x00	; 0
    9bd6:	85 e5       	ldi	r24, 0x55	; 85
    9bd8:	94 e1       	ldi	r25, 0x14	; 20
    9bda:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
							Serial.println();
    9bde:	85 e5       	ldi	r24, 0x55	; 85
    9be0:	94 e1       	ldi	r25, 0x14	; 20
    9be2:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9be6:	85 e5       	ldi	r24, 0x55	; 85
    9be8:	94 e1       	ldi	r25, 0x14	; 20
    9bea:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    9bee:	a0 e9       	ldi	r26, 0x90	; 144
    9bf0:	b3 e1       	ldi	r27, 0x13	; 19
    9bf2:	8d e0       	ldi	r24, 0x0D	; 13
    9bf4:	18 9f       	mul	r17, r24
    9bf6:	90 01       	movw	r18, r0
    9bf8:	11 24       	eor	r1, r1
    9bfa:	80 e0       	ldi	r24, 0x00	; 0
    9bfc:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9bfe:	4d 91       	ld	r20, X+
    9c00:	fc 01       	movw	r30, r24
    9c02:	e2 0f       	add	r30, r18
    9c04:	f3 1f       	adc	r31, r19
    9c06:	e9 54       	subi	r30, 0x49	; 73
    9c08:	f4 4f       	sbci	r31, 0xF4	; 244
    9c0a:	51 81       	ldd	r21, Z+1	; 0x01
    9c0c:	54 13       	cpse	r21, r20
    9c0e:	33 c1       	rjmp	.+614    	; 0x9e76 <_Z22Fertilizer_Tank_On_Offhh+0x5e4>
    9c10:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    9c12:	86 30       	cpi	r24, 0x06	; 6
    9c14:	91 05       	cpc	r25, r1
    9c16:	99 f7       	brne	.-26     	; 0x9bfe <_Z22Fertilizer_Tank_On_Offhh+0x36c>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9c18:	8a 9c       	mul	r8, r10
    9c1a:	f0 01       	movw	r30, r0
    9c1c:	8b 9c       	mul	r8, r11
    9c1e:	f0 0d       	add	r31, r0
    9c20:	11 24       	eor	r1, r1
    9c22:	e9 54       	subi	r30, 0x49	; 73
    9c24:	f4 4f       	sbci	r31, 0xF4	; 244
    9c26:	21 e0       	ldi	r18, 0x01	; 1
    9c28:	23 87       	std	Z+11, r18	; 0x0b
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9c2a:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    9c2e:	90 e0       	ldi	r25, 0x00	; 0
    9c30:	98 2f       	mov	r25, r24
    9c32:	88 27       	eor	r24, r24
    9c34:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    9c38:	82 2b       	or	r24, r18
    9c3a:	91 87       	std	Z+9, r25	; 0x09
    9c3c:	80 87       	std	Z+8, r24	; 0x08
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9c3e:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    9c42:	98 12       	cpse	r9, r24
    9c44:	83 c1       	rjmp	.+774    	; 0x9f4c <_Z22Fertilizer_Tank_On_Offhh+0x6ba>
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9c46:	68 ee       	ldi	r22, 0xE8	; 232
    9c48:	73 e0       	ldi	r23, 0x03	; 3
    9c4a:	80 e0       	ldi	r24, 0x00	; 0
    9c4c:	90 e0       	ldi	r25, 0x00	; 0
    9c4e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    9c52:	b1 2e       	mov	r11, r17
    9c54:	ff ef       	ldi	r31, 0xFF	; 255
    9c56:	ef 1a       	sub	r14, r31
    9c58:	ff 0a       	sbc	r15, r31
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9c5a:	25 e0       	ldi	r18, 0x05	; 5
    9c5c:	e2 16       	cp	r14, r18
    9c5e:	f1 04       	cpc	r15, r1
    9c60:	99 f0       	breq	.+38     	; 0x9c88 <_Z22Fertilizer_Tank_On_Offhh+0x3f6>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9c62:	f6 01       	movw	r30, r12
    9c64:	80 81       	ld	r24, Z
    9c66:	90 e0       	ldi	r25, 0x00	; 0
    9c68:	85 56       	subi	r24, 0x65	; 101
    9c6a:	91 09       	sbc	r25, r1
    9c6c:	08 9f       	mul	r16, r24
    9c6e:	f0 01       	movw	r30, r0
    9c70:	09 9f       	mul	r16, r25
    9c72:	f0 0d       	add	r31, r0
    9c74:	11 24       	eor	r1, r1
    9c76:	ec 57       	subi	r30, 0x7C	; 124
    9c78:	f2 4f       	sbci	r31, 0xF2	; 242
    9c7a:	ee 0d       	add	r30, r14
    9c7c:	ff 1d       	adc	r31, r15
    9c7e:	85 81       	ldd	r24, Z+5	; 0x05
    9c80:	86 31       	cpi	r24, 0x16	; 22
    9c82:	08 f0       	brcs	.+2      	; 0x9c86 <_Z22Fertilizer_Tank_On_Offhh+0x3f4>
    9c84:	43 c0       	rjmp	.+134    	; 0x9d0c <_Z22Fertilizer_Tank_On_Offhh+0x47a>
    9c86:	9f ce       	rjmp	.-706    	; 0x99c6 <_Z22Fertilizer_Tank_On_Offhh+0x134>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c88:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9c8c:	81 30       	cpi	r24, 0x01	; 1
    9c8e:	51 f4       	brne	.+20     	; 0x9ca4 <_Z22Fertilizer_Tank_On_Offhh+0x412>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9c90:	63 e1       	ldi	r22, 0x13	; 19
    9c92:	71 e1       	ldi	r23, 0x11	; 17
    9c94:	85 e5       	ldi	r24, 0x55	; 85
    9c96:	94 e1       	ldi	r25, 0x14	; 20
    9c98:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9c9c:	85 e5       	ldi	r24, 0x55	; 85
    9c9e:	94 e1       	ldi	r25, 0x14	; 20
    9ca0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    9ca4:	20 91 3a 14 	lds	r18, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    9ca8:	91 10       	cpse	r9, r1
    9caa:	a3 c0       	rjmp	.+326    	; 0x9df2 <_Z22Fertilizer_Tank_On_Offhh+0x560>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    9cac:	8e 01       	movw	r16, r28
    9cae:	06 58       	subi	r16, 0x86	; 134
    9cb0:	1f 4f       	sbci	r17, 0xFF	; 255
    9cb2:	f8 01       	movw	r30, r16
    9cb4:	80 81       	ld	r24, Z
    9cb6:	90 e0       	ldi	r25, 0x00	; 0
    9cb8:	85 56       	subi	r24, 0x65	; 101
    9cba:	91 09       	sbc	r25, r1
    9cbc:	3b e1       	ldi	r19, 0x1B	; 27
    9cbe:	38 9f       	mul	r19, r24
    9cc0:	f0 01       	movw	r30, r0
    9cc2:	39 9f       	mul	r19, r25
    9cc4:	f0 0d       	add	r31, r0
    9cc6:	11 24       	eor	r1, r1
    9cc8:	ec 57       	subi	r30, 0x7C	; 124
    9cca:	f2 4f       	sbci	r31, 0xF2	; 242
    9ccc:	82 81       	ldd	r24, Z+2	; 0x02
    9cce:	85 30       	cpi	r24, 0x05	; 5
    9cd0:	09 f0       	breq	.+2      	; 0x9cd4 <_Z22Fertilizer_Tank_On_Offhh+0x442>
    9cd2:	4d c0       	rjmp	.+154    	; 0x9d6e <_Z22Fertilizer_Tank_On_Offhh+0x4dc>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9cd4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9cd8:	81 30       	cpi	r24, 0x01	; 1
    9cda:	b1 f4       	brne	.+44     	; 0x9d08 <_Z22Fertilizer_Tank_On_Offhh+0x476>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    9cdc:	65 ed       	ldi	r22, 0xD5	; 213
    9cde:	70 e1       	ldi	r23, 0x10	; 16
    9ce0:	85 e5       	ldi	r24, 0x55	; 85
    9ce2:	94 e1       	ldi	r25, 0x14	; 20
    9ce4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9ce8:	c6 58       	subi	r28, 0x86	; 134
    9cea:	df 4f       	sbci	r29, 0xFF	; 255
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9cec:	68 81       	ld	r22, Y
    9cee:	70 e0       	ldi	r23, 0x00	; 0
    9cf0:	65 56       	subi	r22, 0x65	; 101
    9cf2:	71 09       	sbc	r23, r1
    9cf4:	4a e0       	ldi	r20, 0x0A	; 10
    9cf6:	50 e0       	ldi	r21, 0x00	; 0
    9cf8:	85 e5       	ldi	r24, 0x55	; 85
    9cfa:	94 e1       	ldi	r25, 0x14	; 20
    9cfc:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    9d00:	85 e5       	ldi	r24, 0x55	; 85
    9d02:	94 e1       	ldi	r25, 0x14	; 20
    9d04:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    9d08:	81 e0       	ldi	r24, 0x01	; 1
    9d0a:	5c c2       	rjmp	.+1208   	; 0xa1c4 <_Z22Fertilizer_Tank_On_Offhh+0x932>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d0c:	f6 01       	movw	r30, r12
    9d0e:	80 81       	ld	r24, Z
    9d10:	90 e0       	ldi	r25, 0x00	; 0
    9d12:	85 56       	subi	r24, 0x65	; 101
    9d14:	91 09       	sbc	r25, r1
    9d16:	08 9f       	mul	r16, r24
    9d18:	f0 01       	movw	r30, r0
    9d1a:	09 9f       	mul	r16, r25
    9d1c:	f0 0d       	add	r31, r0
    9d1e:	11 24       	eor	r1, r1
    9d20:	ec 57       	subi	r30, 0x7C	; 124
    9d22:	f2 4f       	sbci	r31, 0xF2	; 242
    9d24:	ee 0d       	add	r30, r14
    9d26:	ff 1d       	adc	r31, r15
    9d28:	85 81       	ldd	r24, Z+5	; 0x05
    9d2a:	86 31       	cpi	r24, 0x16	; 22
    9d2c:	08 f4       	brcc	.+2      	; 0x9d30 <_Z22Fertilizer_Tank_On_Offhh+0x49e>
    9d2e:	92 cf       	rjmp	.-220    	; 0x9c54 <_Z22Fertilizer_Tank_On_Offhh+0x3c2>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9d30:	f6 01       	movw	r30, r12
    9d32:	80 81       	ld	r24, Z
    9d34:	61 e0       	ldi	r22, 0x01	; 1
    9d36:	91 10       	cpse	r9, r1
    9d38:	60 e0       	ldi	r22, 0x00	; 0
    9d3a:	90 e0       	ldi	r25, 0x00	; 0
    9d3c:	85 56       	subi	r24, 0x65	; 101
    9d3e:	91 09       	sbc	r25, r1
    9d40:	08 9f       	mul	r16, r24
    9d42:	f0 01       	movw	r30, r0
    9d44:	09 9f       	mul	r16, r25
    9d46:	f0 0d       	add	r31, r0
    9d48:	11 24       	eor	r1, r1
    9d4a:	ec 57       	subi	r30, 0x7C	; 124
    9d4c:	f2 4f       	sbci	r31, 0xF2	; 242
    9d4e:	ee 0d       	add	r30, r14
    9d50:	ff 1d       	adc	r31, r15
    9d52:	e5 81       	ldd	r30, Z+5	; 0x05
    9d54:	f0 e0       	ldi	r31, 0x00	; 0
    9d56:	ec 53       	subi	r30, 0x3C	; 60
    9d58:	fc 4e       	sbci	r31, 0xEC	; 236
    9d5a:	80 81       	ld	r24, Z
    9d5c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
			_kDELAY_MS(200);
    9d60:	68 ec       	ldi	r22, 0xC8	; 200
    9d62:	70 e0       	ldi	r23, 0x00	; 0
    9d64:	80 e0       	ldi	r24, 0x00	; 0
    9d66:	90 e0       	ldi	r25, 0x00	; 0
    9d68:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    9d6c:	73 cf       	rjmp	.-282    	; 0x9c54 <_Z22Fertilizer_Tank_On_Offhh+0x3c2>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9d6e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    9d72:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9d76:	90 62       	ori	r25, 0x20	; 32
    9d78:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9d7c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    9d80:	f8 01       	movw	r30, r16
    9d82:	80 81       	ld	r24, Z
    9d84:	85 56       	subi	r24, 0x65	; 101
    9d86:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9d8a:	80 81       	ld	r24, Z
    9d8c:	90 e0       	ldi	r25, 0x00	; 0
    9d8e:	85 56       	subi	r24, 0x65	; 101
    9d90:	91 09       	sbc	r25, r1
    9d92:	38 9f       	mul	r19, r24
    9d94:	f0 01       	movw	r30, r0
    9d96:	39 9f       	mul	r19, r25
    9d98:	f0 0d       	add	r31, r0
    9d9a:	11 24       	eor	r1, r1
    9d9c:	ec 57       	subi	r30, 0x7C	; 124
    9d9e:	f2 4f       	sbci	r31, 0xF2	; 242
    9da0:	82 e0       	ldi	r24, 0x02	; 2
    9da2:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    9da4:	f8 01       	movw	r30, r16
    9da6:	80 81       	ld	r24, Z
    9da8:	90 e0       	ldi	r25, 0x00	; 0
    9daa:	85 56       	subi	r24, 0x65	; 101
    9dac:	91 09       	sbc	r25, r1
    9dae:	38 9f       	mul	r19, r24
    9db0:	f0 01       	movw	r30, r0
    9db2:	39 9f       	mul	r19, r25
    9db4:	f0 0d       	add	r31, r0
    9db6:	11 24       	eor	r1, r1
    9db8:	ec 57       	subi	r30, 0x7C	; 124
    9dba:	f2 4f       	sbci	r31, 0xF2	; 242
    9dbc:	85 e0       	ldi	r24, 0x05	; 5
    9dbe:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9dc0:	21 30       	cpi	r18, 0x01	; 1
    9dc2:	09 f0       	breq	.+2      	; 0x9dc6 <_Z22Fertilizer_Tank_On_Offhh+0x534>
    9dc4:	a1 cf       	rjmp	.-190    	; 0x9d08 <_Z22Fertilizer_Tank_On_Offhh+0x476>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    9dc6:	64 ef       	ldi	r22, 0xF4	; 244
    9dc8:	70 e1       	ldi	r23, 0x10	; 16
    9dca:	85 e5       	ldi	r24, 0x55	; 85
    9dcc:	94 e1       	ldi	r25, 0x14	; 20
    9dce:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9dd2:	f8 01       	movw	r30, r16
    9dd4:	60 81       	ld	r22, Z
    9dd6:	70 e0       	ldi	r23, 0x00	; 0
    9dd8:	65 56       	subi	r22, 0x65	; 101
    9dda:	71 09       	sbc	r23, r1
    9ddc:	4a e0       	ldi	r20, 0x0A	; 10
    9dde:	50 e0       	ldi	r21, 0x00	; 0
    9de0:	85 e5       	ldi	r24, 0x55	; 85
    9de2:	94 e1       	ldi	r25, 0x14	; 20
    9de4:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    9de8:	85 e5       	ldi	r24, 0x55	; 85
    9dea:	94 e1       	ldi	r25, 0x14	; 20
    9dec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    9df0:	71 cf       	rjmp	.-286    	; 0x9cd4 <_Z22Fertilizer_Tank_On_Offhh+0x442>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9df2:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    9df6:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9dfa:	90 62       	ori	r25, 0x20	; 32
    9dfc:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9e00:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    9e04:	c6 58       	subi	r28, 0x86	; 134
    9e06:	df 4f       	sbci	r29, 0xFF	; 255
    9e08:	88 81       	ld	r24, Y
    9e0a:	85 56       	subi	r24, 0x65	; 101
    9e0c:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9e10:	88 81       	ld	r24, Y
    9e12:	90 e0       	ldi	r25, 0x00	; 0
    9e14:	85 56       	subi	r24, 0x65	; 101
    9e16:	91 09       	sbc	r25, r1
    9e18:	3b e1       	ldi	r19, 0x1B	; 27
    9e1a:	38 9f       	mul	r19, r24
    9e1c:	f0 01       	movw	r30, r0
    9e1e:	39 9f       	mul	r19, r25
    9e20:	f0 0d       	add	r31, r0
    9e22:	11 24       	eor	r1, r1
    9e24:	ec 57       	subi	r30, 0x7C	; 124
    9e26:	f2 4f       	sbci	r31, 0xF2	; 242
    9e28:	82 e0       	ldi	r24, 0x02	; 2
    9e2a:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    9e2c:	88 81       	ld	r24, Y
    9e2e:	90 e0       	ldi	r25, 0x00	; 0
    9e30:	85 56       	subi	r24, 0x65	; 101
    9e32:	91 09       	sbc	r25, r1
    9e34:	38 9f       	mul	r19, r24
    9e36:	f0 01       	movw	r30, r0
    9e38:	39 9f       	mul	r19, r25
    9e3a:	f0 0d       	add	r31, r0
    9e3c:	11 24       	eor	r1, r1
    9e3e:	ec 57       	subi	r30, 0x7C	; 124
    9e40:	f2 4f       	sbci	r31, 0xF2	; 242
    9e42:	84 e0       	ldi	r24, 0x04	; 4
    9e44:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9e46:	21 30       	cpi	r18, 0x01	; 1
    9e48:	09 f0       	breq	.+2      	; 0x9e4c <_Z22Fertilizer_Tank_On_Offhh+0x5ba>
    9e4a:	5e cf       	rjmp	.-324    	; 0x9d08 <_Z22Fertilizer_Tank_On_Offhh+0x476>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    9e4c:	69 eb       	ldi	r22, 0xB9	; 185
    9e4e:	70 e1       	ldi	r23, 0x10	; 16
    9e50:	85 e5       	ldi	r24, 0x55	; 85
    9e52:	94 e1       	ldi	r25, 0x14	; 20
    9e54:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    9e58:	49 cf       	rjmp	.-366    	; 0x9cec <_Z22Fertilizer_Tank_On_Offhh+0x45a>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9e5a:	a6 2e       	mov	r10, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9e5c:	13 e0       	ldi	r17, 0x03	; 3
    9e5e:	e9 cd       	rjmp	.-1070   	; 0x9a32 <_Z22Fertilizer_Tank_On_Offhh+0x1a0>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9e60:	aa 24       	eor	r10, r10
    9e62:	a3 94       	inc	r10
    9e64:	e6 cd       	rjmp	.-1076   	; 0x9a32 <_Z22Fertilizer_Tank_On_Offhh+0x1a0>
    9e66:	4f 5f       	subi	r20, 0xFF	; 255
    9e68:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9e6a:	47 30       	cpi	r20, 0x07	; 7
    9e6c:	51 05       	cpc	r21, r1
    9e6e:	09 f0       	breq	.+2      	; 0x9e72 <_Z22Fertilizer_Tank_On_Offhh+0x5e0>
    9e70:	34 ce       	rjmp	.-920    	; 0x9ada <_Z22Fertilizer_Tank_On_Offhh+0x248>
    9e72:	1b 2d       	mov	r17, r11
    9e74:	55 ce       	rjmp	.-854    	; 0x9b20 <_Z22Fertilizer_Tank_On_Offhh+0x28e>
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9e76:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9e7a:	81 30       	cpi	r24, 0x01	; 1
    9e7c:	51 f4       	brne	.+20     	; 0x9e92 <_Z22Fertilizer_Tank_On_Offhh+0x600>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9e7e:	6b eb       	ldi	r22, 0xBB	; 187
    9e80:	71 e1       	ldi	r23, 0x11	; 17
    9e82:	85 e5       	ldi	r24, 0x55	; 85
    9e84:	94 e1       	ldi	r25, 0x14	; 20
    9e86:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9e8a:	85 e5       	ldi	r24, 0x55	; 85
    9e8c:	94 e1       	ldi	r25, 0x14	; 20
    9e8e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9e92:	86 e0       	ldi	r24, 0x06	; 6
    9e94:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9e98:	84 e6       	ldi	r24, 0x64	; 100
    9e9a:	90 e0       	ldi	r25, 0x00	; 0
    9e9c:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    9ea0:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9ea4:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9ea8:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9eac:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9eb0:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9eb4:	a0 62       	ori	r26, 0x20	; 32
    9eb6:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9eba:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9ebe:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9ec2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    9ec6:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9eca:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    9ece:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9ed2:	82 60       	ori	r24, 0x02	; 2
    9ed4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9ed8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9edc:	00 e0       	ldi	r16, 0x00	; 0
    9ede:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9ee0:	c6 58       	subi	r28, 0x86	; 134
    9ee2:	df 4f       	sbci	r29, 0xFF	; 255
    9ee4:	4b e1       	ldi	r20, 0x1B	; 27
    9ee6:	f4 2e       	mov	r15, r20
    9ee8:	88 81       	ld	r24, Y
    9eea:	90 e0       	ldi	r25, 0x00	; 0
    9eec:	85 56       	subi	r24, 0x65	; 101
    9eee:	91 09       	sbc	r25, r1
    9ef0:	f8 9e       	mul	r15, r24
    9ef2:	f0 01       	movw	r30, r0
    9ef4:	f9 9e       	mul	r15, r25
    9ef6:	f0 0d       	add	r31, r0
    9ef8:	11 24       	eor	r1, r1
    9efa:	ec 57       	subi	r30, 0x7C	; 124
    9efc:	f2 4f       	sbci	r31, 0xF2	; 242
    9efe:	e0 0f       	add	r30, r16
    9f00:	f1 1f       	adc	r31, r17
    9f02:	85 81       	ldd	r24, Z+5	; 0x05
    9f04:	86 31       	cpi	r24, 0x16	; 22
    9f06:	d8 f0       	brcs	.+54     	; 0x9f3e <_Z22Fertilizer_Tank_On_Offhh+0x6ac>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9f08:	88 81       	ld	r24, Y
    9f0a:	90 e0       	ldi	r25, 0x00	; 0
    9f0c:	85 56       	subi	r24, 0x65	; 101
    9f0e:	91 09       	sbc	r25, r1
    9f10:	f8 9e       	mul	r15, r24
    9f12:	f0 01       	movw	r30, r0
    9f14:	f9 9e       	mul	r15, r25
    9f16:	f0 0d       	add	r31, r0
    9f18:	11 24       	eor	r1, r1
    9f1a:	ec 57       	subi	r30, 0x7C	; 124
    9f1c:	f2 4f       	sbci	r31, 0xF2	; 242
    9f1e:	e0 0f       	add	r30, r16
    9f20:	f1 1f       	adc	r31, r17
    9f22:	e5 81       	ldd	r30, Z+5	; 0x05
    9f24:	f0 e0       	ldi	r31, 0x00	; 0
    9f26:	ec 53       	subi	r30, 0x3C	; 60
    9f28:	fc 4e       	sbci	r31, 0xEC	; 236
    9f2a:	61 e0       	ldi	r22, 0x01	; 1
    9f2c:	80 81       	ld	r24, Z
    9f2e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
											_kDELAY_MS(200);
    9f32:	68 ec       	ldi	r22, 0xC8	; 200
    9f34:	70 e0       	ldi	r23, 0x00	; 0
    9f36:	80 e0       	ldi	r24, 0x00	; 0
    9f38:	90 e0       	ldi	r25, 0x00	; 0
    9f3a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9f3e:	0f 5f       	subi	r16, 0xFF	; 255
    9f40:	1f 4f       	sbci	r17, 0xFF	; 255
    9f42:	05 30       	cpi	r16, 0x05	; 5
    9f44:	11 05       	cpc	r17, r1
    9f46:	81 f6       	brne	.-96     	; 0x9ee8 <_Z22Fertilizer_Tank_On_Offhh+0x656>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    9f48:	80 e0       	ldi	r24, 0x00	; 0
    9f4a:	3c c1       	rjmp	.+632    	; 0xa1c4 <_Z22Fertilizer_Tank_On_Offhh+0x932>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f4c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    9f50:	81 30       	cpi	r24, 0x01	; 1
    9f52:	51 f4       	brne	.+20     	; 0x9f68 <_Z22Fertilizer_Tank_On_Offhh+0x6d6>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9f54:	68 ea       	ldi	r22, 0xA8	; 168
    9f56:	71 e1       	ldi	r23, 0x11	; 17
    9f58:	85 e5       	ldi	r24, 0x55	; 85
    9f5a:	94 e1       	ldi	r25, 0x14	; 20
    9f5c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    9f60:	85 e5       	ldi	r24, 0x55	; 85
    9f62:	94 e1       	ldi	r25, 0x14	; 20
    9f64:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9f68:	86 e0       	ldi	r24, 0x06	; 6
    9f6a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9f6e:	84 e6       	ldi	r24, 0x64	; 100
    9f70:	90 e0       	ldi	r25, 0x00	; 0
    9f72:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    9f76:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9f7a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9f7e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9f82:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9f86:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9f8a:	a0 62       	ori	r26, 0x20	; 32
    9f8c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9f90:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9f94:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9f98:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    9f9c:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9fa0:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    9fa4:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    9fa8:	82 60       	ori	r24, 0x02	; 2
    9faa:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    9fae:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9fb2:	00 e0       	ldi	r16, 0x00	; 0
    9fb4:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9fb6:	c6 58       	subi	r28, 0x86	; 134
    9fb8:	df 4f       	sbci	r29, 0xFF	; 255
    9fba:	2b e1       	ldi	r18, 0x1B	; 27
    9fbc:	f2 2e       	mov	r15, r18
    9fbe:	88 81       	ld	r24, Y
    9fc0:	90 e0       	ldi	r25, 0x00	; 0
    9fc2:	85 56       	subi	r24, 0x65	; 101
    9fc4:	91 09       	sbc	r25, r1
    9fc6:	f8 9e       	mul	r15, r24
    9fc8:	f0 01       	movw	r30, r0
    9fca:	f9 9e       	mul	r15, r25
    9fcc:	f0 0d       	add	r31, r0
    9fce:	11 24       	eor	r1, r1
    9fd0:	ec 57       	subi	r30, 0x7C	; 124
    9fd2:	f2 4f       	sbci	r31, 0xF2	; 242
    9fd4:	e0 0f       	add	r30, r16
    9fd6:	f1 1f       	adc	r31, r17
    9fd8:	85 81       	ldd	r24, Z+5	; 0x05
    9fda:	86 31       	cpi	r24, 0x16	; 22
    9fdc:	d8 f0       	brcs	.+54     	; 0xa014 <_Z22Fertilizer_Tank_On_Offhh+0x782>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9fde:	88 81       	ld	r24, Y
    9fe0:	90 e0       	ldi	r25, 0x00	; 0
    9fe2:	85 56       	subi	r24, 0x65	; 101
    9fe4:	91 09       	sbc	r25, r1
    9fe6:	f8 9e       	mul	r15, r24
    9fe8:	f0 01       	movw	r30, r0
    9fea:	f9 9e       	mul	r15, r25
    9fec:	f0 0d       	add	r31, r0
    9fee:	11 24       	eor	r1, r1
    9ff0:	ec 57       	subi	r30, 0x7C	; 124
    9ff2:	f2 4f       	sbci	r31, 0xF2	; 242
    9ff4:	e0 0f       	add	r30, r16
    9ff6:	f1 1f       	adc	r31, r17
    9ff8:	e5 81       	ldd	r30, Z+5	; 0x05
    9ffa:	f0 e0       	ldi	r31, 0x00	; 0
    9ffc:	ec 53       	subi	r30, 0x3C	; 60
    9ffe:	fc 4e       	sbci	r31, 0xEC	; 236
    a000:	61 e0       	ldi	r22, 0x01	; 1
    a002:	80 81       	ld	r24, Z
    a004:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
										_kDELAY_MS(200);
    a008:	68 ec       	ldi	r22, 0xC8	; 200
    a00a:	70 e0       	ldi	r23, 0x00	; 0
    a00c:	80 e0       	ldi	r24, 0x00	; 0
    a00e:	90 e0       	ldi	r25, 0x00	; 0
    a010:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a014:	0f 5f       	subi	r16, 0xFF	; 255
    a016:	1f 4f       	sbci	r17, 0xFF	; 255
    a018:	05 30       	cpi	r16, 0x05	; 5
    a01a:	11 05       	cpc	r17, r1
    a01c:	81 f6       	brne	.-96     	; 0x9fbe <_Z22Fertilizer_Tank_On_Offhh+0x72c>
    a01e:	94 cf       	rjmp	.-216    	; 0x9f48 <_Z22Fertilizer_Tank_On_Offhh+0x6b6>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a020:	91 30       	cpi	r25, 0x01	; 1
    a022:	51 f4       	brne	.+20     	; 0xa038 <_Z22Fertilizer_Tank_On_Offhh+0x7a6>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a024:	6d e6       	ldi	r22, 0x6D	; 109
    a026:	71 e1       	ldi	r23, 0x11	; 17
    a028:	85 e5       	ldi	r24, 0x55	; 85
    a02a:	94 e1       	ldi	r25, 0x14	; 20
    a02c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a030:	85 e5       	ldi	r24, 0x55	; 85
    a032:	94 e1       	ldi	r25, 0x14	; 20
    a034:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a038:	86 e0       	ldi	r24, 0x06	; 6
    a03a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a03e:	84 e6       	ldi	r24, 0x64	; 100
    a040:	90 e0       	ldi	r25, 0x00	; 0
    a042:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    a046:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a04a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    a04e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    a052:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    a056:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    a05a:	a0 62       	ori	r26, 0x20	; 32
    a05c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    a060:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    a064:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    a068:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a06c:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a070:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    a074:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    a078:	82 60       	ori	r24, 0x02	; 2
    a07a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    a07e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a082:	00 e0       	ldi	r16, 0x00	; 0
    a084:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a086:	c6 58       	subi	r28, 0x86	; 134
    a088:	df 4f       	sbci	r29, 0xFF	; 255
    a08a:	9b e1       	ldi	r25, 0x1B	; 27
    a08c:	f9 2e       	mov	r15, r25
    a08e:	88 81       	ld	r24, Y
    a090:	90 e0       	ldi	r25, 0x00	; 0
    a092:	85 56       	subi	r24, 0x65	; 101
    a094:	91 09       	sbc	r25, r1
    a096:	f8 9e       	mul	r15, r24
    a098:	f0 01       	movw	r30, r0
    a09a:	f9 9e       	mul	r15, r25
    a09c:	f0 0d       	add	r31, r0
    a09e:	11 24       	eor	r1, r1
    a0a0:	ec 57       	subi	r30, 0x7C	; 124
    a0a2:	f2 4f       	sbci	r31, 0xF2	; 242
    a0a4:	e0 0f       	add	r30, r16
    a0a6:	f1 1f       	adc	r31, r17
    a0a8:	85 81       	ldd	r24, Z+5	; 0x05
    a0aa:	86 31       	cpi	r24, 0x16	; 22
    a0ac:	d8 f0       	brcs	.+54     	; 0xa0e4 <_Z22Fertilizer_Tank_On_Offhh+0x852>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a0ae:	88 81       	ld	r24, Y
    a0b0:	90 e0       	ldi	r25, 0x00	; 0
    a0b2:	85 56       	subi	r24, 0x65	; 101
    a0b4:	91 09       	sbc	r25, r1
    a0b6:	f8 9e       	mul	r15, r24
    a0b8:	f0 01       	movw	r30, r0
    a0ba:	f9 9e       	mul	r15, r25
    a0bc:	f0 0d       	add	r31, r0
    a0be:	11 24       	eor	r1, r1
    a0c0:	ec 57       	subi	r30, 0x7C	; 124
    a0c2:	f2 4f       	sbci	r31, 0xF2	; 242
    a0c4:	e0 0f       	add	r30, r16
    a0c6:	f1 1f       	adc	r31, r17
    a0c8:	e5 81       	ldd	r30, Z+5	; 0x05
    a0ca:	f0 e0       	ldi	r31, 0x00	; 0
    a0cc:	ec 53       	subi	r30, 0x3C	; 60
    a0ce:	fc 4e       	sbci	r31, 0xEC	; 236
    a0d0:	61 e0       	ldi	r22, 0x01	; 1
    a0d2:	80 81       	ld	r24, Z
    a0d4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
									_kDELAY_MS(200);
    a0d8:	68 ec       	ldi	r22, 0xC8	; 200
    a0da:	70 e0       	ldi	r23, 0x00	; 0
    a0dc:	80 e0       	ldi	r24, 0x00	; 0
    a0de:	90 e0       	ldi	r25, 0x00	; 0
    a0e0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a0e4:	0f 5f       	subi	r16, 0xFF	; 255
    a0e6:	1f 4f       	sbci	r17, 0xFF	; 255
    a0e8:	05 30       	cpi	r16, 0x05	; 5
    a0ea:	11 05       	cpc	r17, r1
    a0ec:	81 f6       	brne	.-96     	; 0xa08e <_Z22Fertilizer_Tank_On_Offhh+0x7fc>
    a0ee:	2c cf       	rjmp	.-424    	; 0x9f48 <_Z22Fertilizer_Tank_On_Offhh+0x6b6>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a0f0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a0f4:	81 30       	cpi	r24, 0x01	; 1
    a0f6:	51 f4       	brne	.+20     	; 0xa10c <_Z22Fertilizer_Tank_On_Offhh+0x87a>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a0f8:	62 e3       	ldi	r22, 0x32	; 50
    a0fa:	71 e1       	ldi	r23, 0x11	; 17
    a0fc:	85 e5       	ldi	r24, 0x55	; 85
    a0fe:	94 e1       	ldi	r25, 0x14	; 20
    a100:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a104:	85 e5       	ldi	r24, 0x55	; 85
    a106:	94 e1       	ldi	r25, 0x14	; 20
    a108:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a10c:	86 e0       	ldi	r24, 0x06	; 6
    a10e:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a112:	84 e6       	ldi	r24, 0x64	; 100
    a114:	90 e0       	ldi	r25, 0x00	; 0
    a116:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    a11a:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a11e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    a122:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    a126:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    a12a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    a12e:	a0 62       	ori	r26, 0x20	; 32
    a130:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    a134:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    a138:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    a13c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a140:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a144:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    a148:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    a14c:	82 60       	ori	r24, 0x02	; 2
    a14e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    a152:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a156:	00 e0       	ldi	r16, 0x00	; 0
    a158:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a15a:	c6 58       	subi	r28, 0x86	; 134
    a15c:	df 4f       	sbci	r29, 0xFF	; 255
    a15e:	8b e1       	ldi	r24, 0x1B	; 27
    a160:	f8 2e       	mov	r15, r24
    a162:	88 81       	ld	r24, Y
    a164:	90 e0       	ldi	r25, 0x00	; 0
    a166:	85 56       	subi	r24, 0x65	; 101
    a168:	91 09       	sbc	r25, r1
    a16a:	f8 9e       	mul	r15, r24
    a16c:	f0 01       	movw	r30, r0
    a16e:	f9 9e       	mul	r15, r25
    a170:	f0 0d       	add	r31, r0
    a172:	11 24       	eor	r1, r1
    a174:	ec 57       	subi	r30, 0x7C	; 124
    a176:	f2 4f       	sbci	r31, 0xF2	; 242
    a178:	e0 0f       	add	r30, r16
    a17a:	f1 1f       	adc	r31, r17
    a17c:	85 81       	ldd	r24, Z+5	; 0x05
    a17e:	86 31       	cpi	r24, 0x16	; 22
    a180:	d8 f0       	brcs	.+54     	; 0xa1b8 <_Z22Fertilizer_Tank_On_Offhh+0x926>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a182:	88 81       	ld	r24, Y
    a184:	90 e0       	ldi	r25, 0x00	; 0
    a186:	85 56       	subi	r24, 0x65	; 101
    a188:	91 09       	sbc	r25, r1
    a18a:	f8 9e       	mul	r15, r24
    a18c:	f0 01       	movw	r30, r0
    a18e:	f9 9e       	mul	r15, r25
    a190:	f0 0d       	add	r31, r0
    a192:	11 24       	eor	r1, r1
    a194:	ec 57       	subi	r30, 0x7C	; 124
    a196:	f2 4f       	sbci	r31, 0xF2	; 242
    a198:	e0 0f       	add	r30, r16
    a19a:	f1 1f       	adc	r31, r17
    a19c:	e5 81       	ldd	r30, Z+5	; 0x05
    a19e:	f0 e0       	ldi	r31, 0x00	; 0
    a1a0:	ec 53       	subi	r30, 0x3C	; 60
    a1a2:	fc 4e       	sbci	r31, 0xEC	; 236
    a1a4:	61 e0       	ldi	r22, 0x01	; 1
    a1a6:	80 81       	ld	r24, Z
    a1a8:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
								_kDELAY_MS(200);
    a1ac:	68 ec       	ldi	r22, 0xC8	; 200
    a1ae:	70 e0       	ldi	r23, 0x00	; 0
    a1b0:	80 e0       	ldi	r24, 0x00	; 0
    a1b2:	90 e0       	ldi	r25, 0x00	; 0
    a1b4:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a1b8:	0f 5f       	subi	r16, 0xFF	; 255
    a1ba:	1f 4f       	sbci	r17, 0xFF	; 255
    a1bc:	05 30       	cpi	r16, 0x05	; 5
    a1be:	11 05       	cpc	r17, r1
    a1c0:	81 f6       	brne	.-96     	; 0xa162 <_Z22Fertilizer_Tank_On_Offhh+0x8d0>
    a1c2:	c2 ce       	rjmp	.-636    	; 0x9f48 <_Z22Fertilizer_Tank_On_Offhh+0x6b6>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a1c4:	df 91       	pop	r29
    a1c6:	cf 91       	pop	r28
    a1c8:	1f 91       	pop	r17
    a1ca:	0f 91       	pop	r16
    a1cc:	ff 90       	pop	r15
    a1ce:	ef 90       	pop	r14
    a1d0:	df 90       	pop	r13
    a1d2:	cf 90       	pop	r12
    a1d4:	bf 90       	pop	r11
    a1d6:	af 90       	pop	r10
    a1d8:	9f 90       	pop	r9
    a1da:	8f 90       	pop	r8
    a1dc:	7f 90       	pop	r7
    a1de:	6f 90       	pop	r6
    a1e0:	5f 90       	pop	r5
    a1e2:	4f 90       	pop	r4
    a1e4:	3f 90       	pop	r3
    a1e6:	2f 90       	pop	r2
    a1e8:	08 95       	ret

0000a1ea <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a1ea:	af 92       	push	r10
    a1ec:	bf 92       	push	r11
    a1ee:	df 92       	push	r13
    a1f0:	ef 92       	push	r14
    a1f2:	ff 92       	push	r15
    a1f4:	0f 93       	push	r16
    a1f6:	1f 93       	push	r17
    a1f8:	cf 93       	push	r28
    a1fa:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a1fc:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    a200:	81 30       	cpi	r24, 0x01	; 1
    a202:	29 f5       	brne	.+74     	; 0xa24e <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a204:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a208:	81 30       	cpi	r24, 0x01	; 1
    a20a:	31 f4       	brne	.+12     	; 0xa218 <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a20c:	6d ee       	ldi	r22, 0xED	; 237
    a20e:	72 e1       	ldi	r23, 0x12	; 18
    a210:	85 e5       	ldi	r24, 0x55	; 85
    a212:	94 e1       	ldi	r25, 0x14	; 20
    a214:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a218:	80 91 86 0d 	lds	r24, 0x0D86	; 0x800d86 <_sExtra_Plot+0x2>
    a21c:	84 30       	cpi	r24, 0x04	; 4
    a21e:	09 f0       	breq	.+2      	; 0xa222 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a220:	45 c1       	rjmp	.+650    	; 0xa4ac <_Z26Fertilizer_Tank_Monitoringv+0x2c2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a222:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a226:	81 30       	cpi	r24, 0x01	; 1
    a228:	31 f4       	brne	.+12     	; 0xa236 <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a22a:	6d ec       	ldi	r22, 0xCD	; 205
    a22c:	72 e1       	ldi	r23, 0x12	; 18
    a22e:	85 e5       	ldi	r24, 0x55	; 85
    a230:	94 e1       	ldi	r25, 0x14	; 20
    a232:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a236:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a238:	df 91       	pop	r29
    a23a:	cf 91       	pop	r28
    a23c:	1f 91       	pop	r17
    a23e:	0f 91       	pop	r16
    a240:	ff 90       	pop	r15
    a242:	ef 90       	pop	r14
    a244:	df 90       	pop	r13
    a246:	bf 90       	pop	r11
    a248:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a24a:	0c 94 14 49 	jmp	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
    a24e:	c0 e0       	ldi	r28, 0x00	; 0
    a250:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a252:	3b e1       	ldi	r19, 0x1B	; 27
    a254:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a256:	48 e7       	ldi	r20, 0x78	; 120
    a258:	d4 2e       	mov	r13, r20
    a25a:	ec 2e       	mov	r14, r28
	
	
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a25c:	8e 01       	movw	r16, r28
    a25e:	02 5e       	subi	r16, 0xE2	; 226
    a260:	16 4f       	sbci	r17, 0xF6	; 246
    a262:	f8 01       	movw	r30, r16
    a264:	e3 50       	subi	r30, 0x03	; 3
    a266:	fe 4f       	sbci	r31, 0xFE	; 254
    a268:	80 81       	ld	r24, Z
    a26a:	81 11       	cpse	r24, r1
    a26c:	7a c0       	rjmp	.+244    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a26e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a272:	90 e0       	ldi	r25, 0x00	; 0
    a274:	01 97       	sbiw	r24, 0x01	; 1
    a276:	fc 01       	movw	r30, r24
    a278:	ee 0f       	add	r30, r30
    a27a:	ff 1f       	adc	r31, r31
    a27c:	e8 0f       	add	r30, r24
    a27e:	f9 1f       	adc	r31, r25
    a280:	ec 0f       	add	r30, r28
    a282:	fd 1f       	adc	r31, r29
    a284:	e1 59       	subi	r30, 0x91	; 145
    a286:	f5 4f       	sbci	r31, 0xF5	; 245
    a288:	80 81       	ld	r24, Z
    a28a:	81 30       	cpi	r24, 0x01	; 1
    a28c:	09 f0       	breq	.+2      	; 0xa290 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a28e:	69 c0       	rjmp	.+210    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a290:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a294:	90 e0       	ldi	r25, 0x00	; 0
    a296:	01 97       	sbiw	r24, 0x01	; 1
    a298:	fc 01       	movw	r30, r24
    a29a:	ee 0f       	add	r30, r30
    a29c:	ff 1f       	adc	r31, r31
    a29e:	e8 0f       	add	r30, r24
    a2a0:	f9 1f       	adc	r31, r25
    a2a2:	ec 0f       	add	r30, r28
    a2a4:	fd 1f       	adc	r31, r29
    a2a6:	e8 56       	subi	r30, 0x68	; 104
    a2a8:	f6 4f       	sbci	r31, 0xF6	; 246
    a2aa:	80 81       	ld	r24, Z
    a2ac:	90 e0       	ldi	r25, 0x00	; 0
    a2ae:	85 56       	subi	r24, 0x65	; 101
    a2b0:	91 09       	sbc	r25, r1
    a2b2:	f8 9e       	mul	r15, r24
    a2b4:	f0 01       	movw	r30, r0
    a2b6:	f9 9e       	mul	r15, r25
    a2b8:	f0 0d       	add	r31, r0
    a2ba:	11 24       	eor	r1, r1
    a2bc:	ec 57       	subi	r30, 0x7C	; 124
    a2be:	f2 4f       	sbci	r31, 0xF2	; 242
    a2c0:	81 81       	ldd	r24, Z+1	; 0x01
    a2c2:	88 23       	and	r24, r24
    a2c4:	09 f4       	brne	.+2      	; 0xa2c8 <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a2c6:	4d c0       	rjmp	.+154    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a2c8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a2cc:	90 e0       	ldi	r25, 0x00	; 0
    a2ce:	01 97       	sbiw	r24, 0x01	; 1
    a2d0:	fc 01       	movw	r30, r24
    a2d2:	ee 0f       	add	r30, r30
    a2d4:	ff 1f       	adc	r31, r31
    a2d6:	e8 0f       	add	r30, r24
    a2d8:	f9 1f       	adc	r31, r25
    a2da:	ec 0f       	add	r30, r28
    a2dc:	fd 1f       	adc	r31, r29
    a2de:	e8 56       	subi	r30, 0x68	; 104
    a2e0:	f6 4f       	sbci	r31, 0xF6	; 246
    a2e2:	80 81       	ld	r24, Z
    a2e4:	90 e0       	ldi	r25, 0x00	; 0
    a2e6:	85 56       	subi	r24, 0x65	; 101
    a2e8:	91 09       	sbc	r25, r1
    a2ea:	f8 9e       	mul	r15, r24
    a2ec:	f0 01       	movw	r30, r0
    a2ee:	f9 9e       	mul	r15, r25
    a2f0:	f0 0d       	add	r31, r0
    a2f2:	11 24       	eor	r1, r1
    a2f4:	ec 57       	subi	r30, 0x7C	; 124
    a2f6:	f2 4f       	sbci	r31, 0xF2	; 242
    a2f8:	81 81       	ldd	r24, Z+1	; 0x01
    a2fa:	85 36       	cpi	r24, 0x65	; 101
    a2fc:	90 f1       	brcs	.+100    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a2fe:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a302:	90 e0       	ldi	r25, 0x00	; 0
    a304:	01 97       	sbiw	r24, 0x01	; 1
    a306:	fc 01       	movw	r30, r24
    a308:	ee 0f       	add	r30, r30
    a30a:	ff 1f       	adc	r31, r31
    a30c:	e8 0f       	add	r30, r24
    a30e:	f9 1f       	adc	r31, r25
    a310:	ec 0f       	add	r30, r28
    a312:	fd 1f       	adc	r31, r29
    a314:	e8 56       	subi	r30, 0x68	; 104
    a316:	f6 4f       	sbci	r31, 0xF6	; 246
    a318:	80 81       	ld	r24, Z
    a31a:	90 e0       	ldi	r25, 0x00	; 0
    a31c:	85 56       	subi	r24, 0x65	; 101
    a31e:	91 09       	sbc	r25, r1
    a320:	f8 9e       	mul	r15, r24
    a322:	f0 01       	movw	r30, r0
    a324:	f9 9e       	mul	r15, r25
    a326:	f0 0d       	add	r31, r0
    a328:	11 24       	eor	r1, r1
    a32a:	ec 57       	subi	r30, 0x7C	; 124
    a32c:	f2 4f       	sbci	r31, 0xF2	; 242
    a32e:	80 81       	ld	r24, Z
    a330:	81 11       	cpse	r24, r1
    a332:	17 c0       	rjmp	.+46     	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a334:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a338:	90 e0       	ldi	r25, 0x00	; 0
    a33a:	01 97       	sbiw	r24, 0x01	; 1
    a33c:	fc 01       	movw	r30, r24
    a33e:	ee 0f       	add	r30, r30
    a340:	ff 1f       	adc	r31, r31
    a342:	e8 0f       	add	r30, r24
    a344:	f9 1f       	adc	r31, r25
    a346:	ec 0f       	add	r30, r28
    a348:	fd 1f       	adc	r31, r29
    a34a:	ee 0f       	add	r30, r30
    a34c:	ff 1f       	adc	r31, r31
    a34e:	eb 53       	subi	r30, 0x3B	; 59
    a350:	f5 4f       	sbci	r31, 0xF5	; 245
    a352:	20 81       	ld	r18, Z
    a354:	31 81       	ldd	r19, Z+1	; 0x01
    a356:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a35a:	90 e0       	ldi	r25, 0x00	; 0
    a35c:	28 17       	cp	r18, r24
    a35e:	39 07       	cpc	r19, r25
    a360:	31 f4       	brne	.+12     	; 0xa36e <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a362:	21 96       	adiw	r28, 0x01	; 1
		return;
	}
	
	
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a364:	c3 30       	cpi	r28, 0x03	; 3
    a366:	d1 05       	cpc	r29, r1
    a368:	09 f0       	breq	.+2      	; 0xa36c <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a36a:	77 cf       	rjmp	.-274    	; 0xa25a <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a36c:	9f c0       	rjmp	.+318    	; 0xa4ac <_Z26Fertilizer_Tank_Monitoringv+0x2c2>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a36e:	58 01       	movw	r10, r16
    a370:	82 e0       	ldi	r24, 0x02	; 2
    a372:	a8 0e       	add	r10, r24
    a374:	b8 1e       	adc	r11, r24
    a376:	f5 01       	movw	r30, r10
    a378:	80 81       	ld	r24, Z
    a37a:	81 30       	cpi	r24, 0x01	; 1
    a37c:	09 f0       	breq	.+2      	; 0xa380 <_Z26Fertilizer_Tank_Monitoringv+0x196>
    a37e:	45 c0       	rjmp	.+138    	; 0xa40a <_Z26Fertilizer_Tank_Monitoringv+0x220>
							{
								Doser_Pump_On_Off(_kON);
    a380:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a384:	8e 01       	movw	r16, r28
    a386:	00 0f       	add	r16, r16
    a388:	11 1f       	adc	r17, r17
    a38a:	0c 5d       	subi	r16, 0xDC	; 220
    a38c:	14 4f       	sbci	r17, 0xF4	; 244
    a38e:	f8 01       	movw	r30, r16
    a390:	20 81       	ld	r18, Z
    a392:	31 81       	ldd	r19, Z+1	; 0x01
    a394:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a398:	90 e0       	ldi	r25, 0x00	; 0
    a39a:	01 97       	sbiw	r24, 0x01	; 1
    a39c:	fc 01       	movw	r30, r24
    a39e:	ee 0f       	add	r30, r30
    a3a0:	ff 1f       	adc	r31, r31
    a3a2:	e8 0f       	add	r30, r24
    a3a4:	f9 1f       	adc	r31, r25
    a3a6:	ec 0f       	add	r30, r28
    a3a8:	fd 1f       	adc	r31, r29
    a3aa:	ee 0f       	add	r30, r30
    a3ac:	ff 1f       	adc	r31, r31
    a3ae:	e7 5e       	subi	r30, 0xE7	; 231
    a3b0:	f5 4f       	sbci	r31, 0xF5	; 245
    a3b2:	80 81       	ld	r24, Z
    a3b4:	91 81       	ldd	r25, Z+1	; 0x01
    a3b6:	82 17       	cp	r24, r18
    a3b8:	93 07       	cpc	r25, r19
    a3ba:	98 f6       	brcc	.-90     	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a3bc:	80 e0       	ldi	r24, 0x00	; 0
    a3be:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a3c2:	f8 01       	movw	r30, r16
    a3c4:	11 82       	std	Z+1, r1	; 0x01
    a3c6:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a3c8:	f5 01       	movw	r30, r10
    a3ca:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a3cc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a3d0:	90 e0       	ldi	r25, 0x00	; 0
    a3d2:	01 97       	sbiw	r24, 0x01	; 1
    a3d4:	fc 01       	movw	r30, r24
    a3d6:	ee 0f       	add	r30, r30
    a3d8:	ff 1f       	adc	r31, r31
    a3da:	e8 0f       	add	r30, r24
    a3dc:	f9 1f       	adc	r31, r25
    a3de:	ec 0f       	add	r30, r28
    a3e0:	fd 1f       	adc	r31, r29
    a3e2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a3e6:	90 e0       	ldi	r25, 0x00	; 0
    a3e8:	ee 0f       	add	r30, r30
    a3ea:	ff 1f       	adc	r31, r31
    a3ec:	eb 53       	subi	r30, 0x3B	; 59
    a3ee:	f5 4f       	sbci	r31, 0xF5	; 245
    a3f0:	91 83       	std	Z+1, r25	; 0x01
    a3f2:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a3f4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a3f8:	90 e0       	ldi	r25, 0x00	; 0
    a3fa:	01 97       	sbiw	r24, 0x01	; 1
    a3fc:	98 2f       	mov	r25, r24
    a3fe:	99 0f       	add	r25, r25
    a400:	89 0f       	add	r24, r25
    a402:	60 e0       	ldi	r22, 0x00	; 0
    a404:	8e 0d       	add	r24, r14
    a406:	45 da       	rcall	.-2934   	; 0x9892 <_Z22Fertilizer_Tank_On_Offhh>
    a408:	ac cf       	rjmp	.-168    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a40a:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    a40e:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    a412:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a416:	90 e0       	ldi	r25, 0x00	; 0
    a418:	01 97       	sbiw	r24, 0x01	; 1
    a41a:	fc 01       	movw	r30, r24
    a41c:	ee 0f       	add	r30, r30
    a41e:	ff 1f       	adc	r31, r31
    a420:	e8 0f       	add	r30, r24
    a422:	f9 1f       	adc	r31, r25
    a424:	ec 0f       	add	r30, r28
    a426:	fd 1f       	adc	r31, r29
    a428:	ee 0f       	add	r30, r30
    a42a:	ff 1f       	adc	r31, r31
    a42c:	ed 53       	subi	r30, 0x3D	; 61
    a42e:	f6 4f       	sbci	r31, 0xF6	; 246
    a430:	80 81       	ld	r24, Z
    a432:	91 81       	ldd	r25, Z+1	; 0x01
    a434:	82 17       	cp	r24, r18
    a436:	93 07       	cpc	r25, r19
    a438:	08 f0       	brcs	.+2      	; 0xa43c <_Z26Fertilizer_Tank_Monitoringv+0x252>
    a43a:	93 cf       	rjmp	.-218    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a43c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a440:	90 e0       	ldi	r25, 0x00	; 0
    a442:	01 97       	sbiw	r24, 0x01	; 1
    a444:	fc 01       	movw	r30, r24
    a446:	ee 0f       	add	r30, r30
    a448:	ff 1f       	adc	r31, r31
    a44a:	e8 0f       	add	r30, r24
    a44c:	f9 1f       	adc	r31, r25
    a44e:	ec 0f       	add	r30, r28
    a450:	fd 1f       	adc	r31, r29
    a452:	ee 0f       	add	r30, r30
    a454:	ff 1f       	adc	r31, r31
    a456:	eb 53       	subi	r30, 0x3B	; 59
    a458:	f5 4f       	sbci	r31, 0xF5	; 245
    a45a:	20 81       	ld	r18, Z
    a45c:	31 81       	ldd	r19, Z+1	; 0x01
    a45e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a462:	90 e0       	ldi	r25, 0x00	; 0
    a464:	28 17       	cp	r18, r24
    a466:	39 07       	cpc	r19, r25
    a468:	09 f4       	brne	.+2      	; 0xa46c <_Z26Fertilizer_Tank_Monitoringv+0x282>
    a46a:	7b cf       	rjmp	.-266    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a46c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a470:	90 e0       	ldi	r25, 0x00	; 0
    a472:	01 97       	sbiw	r24, 0x01	; 1
    a474:	98 2f       	mov	r25, r24
    a476:	99 0f       	add	r25, r25
    a478:	89 0f       	add	r24, r25
    a47a:	61 e0       	ldi	r22, 0x01	; 1
    a47c:	8e 0d       	add	r24, r14
    a47e:	09 da       	rcall	.-3054   	; 0x9892 <_Z22Fertilizer_Tank_On_Offhh>
    a480:	88 23       	and	r24, r24
    a482:	79 f0       	breq	.+30     	; 0xa4a2 <_Z26Fertilizer_Tank_Monitoringv+0x2b8>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a484:	10 92 a1 0c 	sts	0x0CA1, r1	; 0x800ca1 <_gWait_Blower_Time+0x1>
    a488:	10 92 a0 0c 	sts	0x0CA0, r1	; 0x800ca0 <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a48c:	81 e0       	ldi	r24, 0x01	; 1
    a48e:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a492:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a494:	88 23       	and	r24, r24
    a496:	31 f0       	breq	.+12     	; 0xa4a4 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a498:	ee 5f       	subi	r30, 0xFE	; 254
    a49a:	fd 4f       	sbci	r31, 0xFD	; 253
    a49c:	81 e0       	ldi	r24, 0x01	; 1
    a49e:	80 83       	st	Z, r24
    a4a0:	60 cf       	rjmp	.-320    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a4a2:	f8 01       	movw	r30, r16
    a4a4:	e3 50       	subi	r30, 0x03	; 3
    a4a6:	fe 4f       	sbci	r31, 0xFE	; 254
    a4a8:	d0 82       	st	Z, r13
    a4aa:	5b cf       	rjmp	.-330    	; 0xa362 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a4ac:	df 91       	pop	r29
    a4ae:	cf 91       	pop	r28
    a4b0:	1f 91       	pop	r17
    a4b2:	0f 91       	pop	r16
    a4b4:	ff 90       	pop	r15
    a4b6:	ef 90       	pop	r14
    a4b8:	df 90       	pop	r13
    a4ba:	bf 90       	pop	r11
    a4bc:	af 90       	pop	r10
    a4be:	08 95       	ret

0000a4c0 <_Z20Schedules_Monitoringv>:
	
}	
	
	
void Schedules_Monitoring(void)
{
    a4c0:	0f 93       	push	r16
    a4c2:	1f 93       	push	r17
    a4c4:	cf 93       	push	r28
    a4c6:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a4c8:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a4cc:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a4d0:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a4d4:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a4d8:	82 30       	cpi	r24, 0x02	; 2
    a4da:	98 f4       	brcc	.+38     	; 0xa502 <_Z20Schedules_Monitoringv+0x42>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a4dc:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a4e0:	81 30       	cpi	r24, 0x01	; 1
    a4e2:	09 f0       	breq	.+2      	; 0xa4e6 <_Z20Schedules_Monitoringv+0x26>
    a4e4:	aa c0       	rjmp	.+340    	; 0xa63a <_Z20Schedules_Monitoringv+0x17a>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a4e6:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <_sSchedules+0x1>
    a4ea:	91 11       	cpse	r25, r1
    a4ec:	a6 c0       	rjmp	.+332    	; 0xa63a <_Z20Schedules_Monitoringv+0x17a>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a4ee:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    a4f2:	91 30       	cpi	r25, 0x01	; 1
    a4f4:	09 f4       	brne	.+2      	; 0xa4f8 <_Z20Schedules_Monitoringv+0x38>
    a4f6:	a1 c0       	rjmp	.+322    	; 0xa63a <_Z20Schedules_Monitoringv+0x17a>
    a4f8:	90 91 7b 13 	lds	r25, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    a4fc:	96 34       	cpi	r25, 0x46	; 70
    a4fe:	29 f4       	brne	.+10     	; 0xa50a <_Z20Schedules_Monitoringv+0x4a>
    a500:	9c c0       	rjmp	.+312    	; 0xa63a <_Z20Schedules_Monitoringv+0x17a>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a502:	81 e0       	ldi	r24, 0x01	; 1
    a504:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
		}break;
	}
	
}					
    a508:	83 c7       	rjmp	.+3846   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a50a:	90 91 71 13 	lds	r25, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    a50e:	95 30       	cpi	r25, 0x05	; 5
    a510:	09 f0       	breq	.+2      	; 0xa514 <_Z20Schedules_Monitoringv+0x54>
    a512:	42 c0       	rjmp	.+132    	; 0xa598 <_Z20Schedules_Monitoringv+0xd8>
				{
					mode_change = _kSET;
    a514:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    a518:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
    a51c:	81 30       	cpi	r24, 0x01	; 1
    a51e:	61 f4       	brne	.+24     	; 0xa538 <_Z20Schedules_Monitoringv+0x78>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    a520:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
    a524:	81 30       	cpi	r24, 0x01	; 1
    a526:	41 f0       	breq	.+16     	; 0xa538 <_Z20Schedules_Monitoringv+0x78>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    a528:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
    a52c:	81 11       	cpse	r24, r1
    a52e:	04 c0       	rjmp	.+8      	; 0xa538 <_Z20Schedules_Monitoringv+0x78>
						{
							flush_running_status = _kRESET;
    a530:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a534:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    a538:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    a53c:	81 30       	cpi	r24, 0x01	; 1
    a53e:	79 f4       	brne	.+30     	; 0xa55e <_Z20Schedules_Monitoringv+0x9e>
					{
						irrigation_Start_Set = _kRESET;
    a540:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a544:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xbe>
    a548:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a54c:	89 17       	cp	r24, r25
    a54e:	39 f0       	breq	.+14     	; 0xa55e <_Z20Schedules_Monitoringv+0x9e>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a550:	88 23       	and	r24, r24
    a552:	29 f0       	breq	.+10     	; 0xa55e <_Z20Schedules_Monitoringv+0x9e>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a554:	60 e0       	ldi	r22, 0x00	; 0
    a556:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a55a:	10 92 08 14 	sts	0x1408, r1	; 0x801408 <_sRuble_Parameters+0xbe>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    a55e:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a562:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a566:	89 2b       	or	r24, r25
    a568:	41 f4       	brne	.+16     	; 0xa57a <_Z20Schedules_Monitoringv+0xba>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    a56a:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    a56e:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <_sSchedules+0x6>
    a572:	81 30       	cpi	r24, 0x01	; 1
    a574:	09 f0       	breq	.+2      	; 0xa578 <_Z20Schedules_Monitoringv+0xb8>
    a576:	8e c1       	rjmp	.+796    	; 0xa894 <_Z20Schedules_Monitoringv+0x3d4>
    a578:	04 c1       	rjmp	.+520    	; 0xa782 <_Z20Schedules_Monitoringv+0x2c2>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    a57a:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a57e:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a582:	0a 97       	sbiw	r24, 0x0a	; 10
    a584:	08 f0       	brcs	.+2      	; 0xa588 <_Z20Schedules_Monitoringv+0xc8>
    a586:	44 c7       	rjmp	.+3720   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    a588:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    a58c:	88 23       	and	r24, r24
    a58e:	09 f4       	brne	.+2      	; 0xa592 <_Z20Schedules_Monitoringv+0xd2>
    a590:	3f c7       	rjmp	.+3710   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    a592:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
    a596:	3c c7       	rjmp	.+3704   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    a598:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
    a59c:	88 23       	and	r24, r24
    a59e:	09 f4       	brne	.+2      	; 0xa5a2 <_Z20Schedules_Monitoringv+0xe2>
    a5a0:	37 c7       	rjmp	.+3694   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
					{
						mode_change = _kRESET;
    a5a2:	10 92 1d 09 	sts	0x091D, r1	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    a5a6:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    a5aa:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    a5ac:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a5b0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a5b4:	88 23       	and	r24, r24
    a5b6:	89 f1       	breq	.+98     	; 0xa61a <_Z20Schedules_Monitoringv+0x15a>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a5b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a5bc:	81 30       	cpi	r24, 0x01	; 1
    a5be:	51 f4       	brne	.+20     	; 0xa5d4 <_Z20Schedules_Monitoringv+0x114>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    a5c0:	62 e6       	ldi	r22, 0x62	; 98
    a5c2:	73 e1       	ldi	r23, 0x13	; 19
    a5c4:	85 e5       	ldi	r24, 0x55	; 85
    a5c6:	94 e1       	ldi	r25, 0x14	; 20
    a5c8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a5cc:	85 e5       	ldi	r24, 0x55	; 85
    a5ce:	94 e1       	ldi	r25, 0x14	; 20
    a5d0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a5d4:	83 e0       	ldi	r24, 0x03	; 3
    a5d6:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    a5da:	0e 94 37 3c 	call	0x786e	; 0x786e <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    a5de:	83 e0       	ldi	r24, 0x03	; 3
    a5e0:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a5e4:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
    a5e8:	81 11       	cpse	r24, r1
    a5ea:	11 c0       	rjmp	.+34     	; 0xa60e <_Z20Schedules_Monitoringv+0x14e>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    a5ec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a5f0:	81 30       	cpi	r24, 0x01	; 1
    a5f2:	51 f4       	brne	.+20     	; 0xa608 <_Z20Schedules_Monitoringv+0x148>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    a5f4:	66 e5       	ldi	r22, 0x56	; 86
    a5f6:	73 e1       	ldi	r23, 0x13	; 19
    a5f8:	85 e5       	ldi	r24, 0x55	; 85
    a5fa:	94 e1       	ldi	r25, 0x14	; 20
    a5fc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    a600:	85 e5       	ldi	r24, 0x55	; 85
    a602:	94 e1       	ldi	r25, 0x14	; 20
    a604:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a608:	84 e0       	ldi	r24, 0x04	; 4
    a60a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a60e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a612:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    a616:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a61a:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xbe>
    a61e:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a622:	89 17       	cp	r24, r25
    a624:	09 f4       	brne	.+2      	; 0xa628 <_Z20Schedules_Monitoringv+0x168>
    a626:	f4 c6       	rjmp	.+3560   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a628:	88 23       	and	r24, r24
    a62a:	09 f4       	brne	.+2      	; 0xa62e <_Z20Schedules_Monitoringv+0x16e>
    a62c:	f1 c6       	rjmp	.+3554   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a62e:	60 e0       	ldi	r22, 0x00	; 0
    a630:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a634:	10 92 08 14 	sts	0x1408, r1	; 0x801408 <_sRuble_Parameters+0xbe>
    a638:	eb c6       	rjmp	.+3542   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a63a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a63e:	88 23       	and	r24, r24
    a640:	21 f0       	breq	.+8      	; 0xa64a <_Z20Schedules_Monitoringv+0x18a>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a642:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a646:	81 11       	cpse	r24, r1
    a648:	07 c0       	rjmp	.+14     	; 0xa658 <_Z20Schedules_Monitoringv+0x198>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a64a:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a64e:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a652:	89 2b       	or	r24, r25
    a654:	09 f4       	brne	.+2      	; 0xa658 <_Z20Schedules_Monitoringv+0x198>
    a656:	67 c0       	rjmp	.+206    	; 0xa726 <_Z20Schedules_Monitoringv+0x266>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a658:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    a65c:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a65e:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a662:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a666:	81 30       	cpi	r24, 0x01	; 1
    a668:	51 f4       	brne	.+20     	; 0xa67e <_Z20Schedules_Monitoringv+0x1be>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a66a:	6a e4       	ldi	r22, 0x4A	; 74
    a66c:	73 e1       	ldi	r23, 0x13	; 19
    a66e:	85 e5       	ldi	r24, 0x55	; 85
    a670:	94 e1       	ldi	r25, 0x14	; 20
    a672:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a676:	85 e5       	ldi	r24, 0x55	; 85
    a678:	94 e1       	ldi	r25, 0x14	; 20
    a67a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a67e:	80 91 87 0b 	lds	r24, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    a682:	81 11       	cpse	r24, r1
    a684:	83 c6       	rjmp	.+3334   	; 0xb38c <_Z20Schedules_Monitoringv+0xecc>
    a686:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a68a:	81 30       	cpi	r24, 0x01	; 1
    a68c:	09 f4       	brne	.+2      	; 0xa690 <_Z20Schedules_Monitoringv+0x1d0>
    a68e:	7e c6       	rjmp	.+3324   	; 0xb38c <_Z20Schedules_Monitoringv+0xecc>
    a690:	80 91 7b 13 	lds	r24, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    a694:	86 34       	cpi	r24, 0x46	; 70
    a696:	09 f4       	brne	.+2      	; 0xa69a <_Z20Schedules_Monitoringv+0x1da>
    a698:	79 c6       	rjmp	.+3314   	; 0xb38c <_Z20Schedules_Monitoringv+0xecc>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a69a:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a69e:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    a6a2:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a6a6:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a6aa:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a6ae:	81 11       	cpse	r24, r1
    a6b0:	4d c6       	rjmp	.+3226   	; 0xb34c <_Z20Schedules_Monitoringv+0xe8c>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
					if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a6b2:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
    a6b6:	81 11       	cpse	r24, r1
    a6b8:	03 c0       	rjmp	.+6      	; 0xa6c0 <_Z20Schedules_Monitoringv+0x200>
					{
						_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a6ba:	84 e0       	ldi	r24, 0x04	; 4
    a6bc:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
					}
					
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a6c0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a6c4:	81 30       	cpi	r24, 0x01	; 1
    a6c6:	e1 f4       	brne	.+56     	; 0xa700 <_Z20Schedules_Monitoringv+0x240>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    a6c8:	69 e1       	ldi	r22, 0x19	; 25
    a6ca:	73 e1       	ldi	r23, 0x13	; 19
    a6cc:	85 e5       	ldi	r24, 0x55	; 85
    a6ce:	94 e1       	ldi	r25, 0x14	; 20
    a6d0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a6d4:	85 e5       	ldi	r24, 0x55	; 85
    a6d6:	94 e1       	ldi	r25, 0x14	; 20
    a6d8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    a6dc:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    a6e0:	4a e0       	ldi	r20, 0x0A	; 10
    a6e2:	50 e0       	ldi	r21, 0x00	; 0
    a6e4:	85 e5       	ldi	r24, 0x55	; 85
    a6e6:	94 e1       	ldi	r25, 0x14	; 20
    a6e8:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    a6ec:	6b e0       	ldi	r22, 0x0B	; 11
    a6ee:	73 e1       	ldi	r23, 0x13	; 19
    a6f0:	85 e5       	ldi	r24, 0x55	; 85
    a6f2:	94 e1       	ldi	r25, 0x14	; 20
    a6f4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a6f8:	85 e5       	ldi	r24, 0x55	; 85
    a6fa:	94 e1       	ldi	r25, 0x14	; 20
    a6fc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a700:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a704:	81 e0       	ldi	r24, 0x01	; 1
    a706:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a70a:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    a70e:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a712:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a716:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xbe>
    a71a:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a71e:	89 13       	cpse	r24, r25
    a720:	2c c6       	rjmp	.+3160   	; 0xb37a <_Z20Schedules_Monitoringv+0xeba>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a722:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    a726:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a72a:	88 23       	and	r24, r24
    a72c:	c9 f0       	breq	.+50     	; 0xa760 <_Z20Schedules_Monitoringv+0x2a0>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    a72e:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a732:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a736:	81 e0       	ldi	r24, 0x01	; 1
    a738:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a73c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    a740:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a744:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    a748:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a74c:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    a750:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a754:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
				
					Edited_In_Schedule();
    a758:	0e 94 2c 3f 	call	0x7e58	; 0x7e58 <_Z18Edited_In_Schedulev>
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a75c:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a760:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a764:	88 23       	and	r24, r24
    a766:	09 f4       	brne	.+2      	; 0xa76a <_Z20Schedules_Monitoringv+0x2aa>
    a768:	53 c6       	rjmp	.+3238   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    a76a:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    a76e:	85 30       	cpi	r24, 0x05	; 5
    a770:	09 f0       	breq	.+2      	; 0xa774 <_Z20Schedules_Monitoringv+0x2b4>
    a772:	4e c6       	rjmp	.+3228   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
				{
					Stop_Irrigation();
    a774:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    a778:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
    a77c:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
    a780:	47 c6       	rjmp	.+3214   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a782:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    a786:	f0 e0       	ldi	r31, 0x00	; 0
    a788:	e9 57       	subi	r30, 0x79	; 121
    a78a:	f6 4f       	sbci	r31, 0xF6	; 246
    a78c:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    a78e:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    a792:	f0 e0       	ldi	r31, 0x00	; 0
    a794:	e8 58       	subi	r30, 0x88	; 136
    a796:	f6 4f       	sbci	r31, 0xF6	; 246
    a798:	60 81       	ld	r22, Z
    a79a:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a79e:	0e 94 a4 37 	call	0x6f48	; 0x6f48 <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    a7a2:	81 50       	subi	r24, 0x01	; 1
    a7a4:	82 30       	cpi	r24, 0x02	; 2
    a7a6:	08 f4       	brcc	.+2      	; 0xa7aa <_Z20Schedules_Monitoringv+0x2ea>
    a7a8:	8d c1       	rjmp	.+794    	; 0xaac4 <_Z20Schedules_Monitoringv+0x604>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kNUMBER_OF_SCHEDULES+1) /* when reach to the last scheduler */
    a7aa:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a7ae:	80 31       	cpi	r24, 0x10	; 16
    a7b0:	90 f1       	brcs	.+100    	; 0xa816 <_Z20Schedules_Monitoringv+0x356>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a7b2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a7b6:	81 30       	cpi	r24, 0x01	; 1
    a7b8:	31 f4       	brne	.+12     	; 0xa7c6 <_Z20Schedules_Monitoringv+0x306>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    a7ba:	63 ec       	ldi	r22, 0xC3	; 195
    a7bc:	74 e1       	ldi	r23, 0x14	; 20
    a7be:	85 e5       	ldi	r24, 0x55	; 85
    a7c0:	94 e1       	ldi	r25, 0x14	; 20
    a7c2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    a7c6:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a7ca:	81 e0       	ldi	r24, 0x01	; 1
    a7cc:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a7d0:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    a7d4:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    a7d8:	81 30       	cpi	r24, 0x01	; 1
    a7da:	61 f4       	brne	.+24     	; 0xa7f4 <_Z20Schedules_Monitoringv+0x334>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a7dc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a7e0:	81 30       	cpi	r24, 0x01	; 1
    a7e2:	31 f4       	brne	.+12     	; 0xa7f0 <_Z20Schedules_Monitoringv+0x330>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    a7e4:	67 eb       	ldi	r22, 0xB7	; 183
    a7e6:	74 e1       	ldi	r23, 0x14	; 20
    a7e8:	85 e5       	ldi	r24, 0x55	; 85
    a7ea:	94 e1       	ldi	r25, 0x14	; 20
    a7ec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    a7f0:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    a7f4:	82 e0       	ldi	r24, 0x02	; 2
    a7f6:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    a7fa:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    a7fe:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    a802:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    a806:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    a80a:	df 91       	pop	r29
    a80c:	cf 91       	pop	r28
    a80e:	1f 91       	pop	r17
    a810:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a812:	0c 94 6a 31 	jmp	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    a816:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a81a:	8f 5f       	subi	r24, 0xFF	; 255
    a81c:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    a820:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a824:	81 30       	cpi	r24, 0x01	; 1
    a826:	09 f0       	breq	.+2      	; 0xa82a <_Z20Schedules_Monitoringv+0x36a>
    a828:	f3 c5       	rjmp	.+3046   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    a82a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a82e:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    a832:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    a836:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a83a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a83e:	81 30       	cpi	r24, 0x01	; 1
    a840:	91 f4       	brne	.+36     	; 0xa866 <_Z20Schedules_Monitoringv+0x3a6>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    a842:	65 e8       	ldi	r22, 0x85	; 133
    a844:	74 e1       	ldi	r23, 0x14	; 20
    a846:	85 e5       	ldi	r24, 0x55	; 85
    a848:	94 e1       	ldi	r25, 0x14	; 20
    a84a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    a84e:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    a852:	4a e0       	ldi	r20, 0x0A	; 10
    a854:	50 e0       	ldi	r21, 0x00	; 0
    a856:	85 e5       	ldi	r24, 0x55	; 85
    a858:	94 e1       	ldi	r25, 0x14	; 20
    a85a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    a85e:	85 e5       	ldi	r24, 0x55	; 85
    a860:	94 e1       	ldi	r25, 0x14	; 20
    a862:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    a866:	81 e0       	ldi	r24, 0x01	; 1
    a868:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    a86c:	81 e0       	ldi	r24, 0x01	; 1
    a86e:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    a870:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    a874:	9c 01       	movw	r18, r24
    a876:	22 5e       	subi	r18, 0xE2	; 226
    a878:	36 4f       	sbci	r19, 0xF6	; 246
    a87a:	f9 01       	movw	r30, r18
    a87c:	e5 5a       	subi	r30, 0xA5	; 165
    a87e:	ff 4f       	sbci	r31, 0xFF	; 255
    a880:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    a882:	40 91 8f 0b 	lds	r20, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    a886:	3f 96       	adiw	r30, 0x0f	; 15
    a888:	40 83       	st	Z, r20
    a88a:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    a88c:	8e 30       	cpi	r24, 0x0E	; 14
    a88e:	91 05       	cpc	r25, r1
    a890:	79 f7       	brne	.-34     	; 0xa870 <_Z20Schedules_Monitoringv+0x3b0>
    a892:	be c5       	rjmp	.+2940   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    a894:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a898:	81 30       	cpi	r24, 0x01	; 1
    a89a:	b1 f5       	brne	.+108    	; 0xa908 <_Z20Schedules_Monitoringv+0x448>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    a89c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    a8a0:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    a8a4:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    a8a8:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    a8ac:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a8b0:	4c 32       	cpi	r20, 0x2C	; 44
    a8b2:	51 40       	sbci	r21, 0x01	; 1
    a8b4:	61 05       	cpc	r22, r1
    a8b6:	71 05       	cpc	r23, r1
    a8b8:	d0 f4       	brcc	.+52     	; 0xa8ee <_Z20Schedules_Monitoringv+0x42e>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    a8ba:	47 e1       	ldi	r20, 0x17	; 23
    a8bc:	50 e5       	ldi	r21, 0x50	; 80
    a8be:	61 e0       	ldi	r22, 0x01	; 1
    a8c0:	70 e0       	ldi	r23, 0x00	; 0
    a8c2:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    a8c6:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    a8ca:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    a8ce:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a8d2:	81 30       	cpi	r24, 0x01	; 1
    a8d4:	09 f0       	breq	.+2      	; 0xa8d8 <_Z20Schedules_Monitoringv+0x418>
    a8d6:	47 c0       	rjmp	.+142    	; 0xa966 <_Z20Schedules_Monitoringv+0x4a6>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    a8d8:	67 e7       	ldi	r22, 0x77	; 119
    a8da:	74 e1       	ldi	r23, 0x14	; 20
    a8dc:	85 e5       	ldi	r24, 0x55	; 85
    a8de:	94 e1       	ldi	r25, 0x14	; 20
    a8e0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    a8e4:	85 e5       	ldi	r24, 0x55	; 85
    a8e6:	94 e1       	ldi	r25, 0x14	; 20
    a8e8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    a8ec:	3c c0       	rjmp	.+120    	; 0xa966 <_Z20Schedules_Monitoringv+0x4a6>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a8ee:	81 30       	cpi	r24, 0x01	; 1
    a8f0:	31 f5       	brne	.+76     	; 0xa93e <_Z20Schedules_Monitoringv+0x47e>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    a8f2:	69 e6       	ldi	r22, 0x69	; 105
    a8f4:	74 e1       	ldi	r23, 0x14	; 20
    a8f6:	85 e5       	ldi	r24, 0x55	; 85
    a8f8:	94 e1       	ldi	r25, 0x14	; 20
    a8fa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    a8fe:	85 e5       	ldi	r24, 0x55	; 85
    a900:	94 e1       	ldi	r25, 0x14	; 20
    a902:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    a906:	1b c0       	rjmp	.+54     	; 0xa93e <_Z20Schedules_Monitoringv+0x47e>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    a908:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    a90c:	81 11       	cpse	r24, r1
    a90e:	57 c3       	rjmp	.+1710   	; 0xafbe <_Z20Schedules_Monitoringv+0xafe>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    a910:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    a914:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    a918:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    a91c:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    a920:	89 2b       	or	r24, r25
    a922:	8a 2b       	or	r24, r26
    a924:	8b 2b       	or	r24, r27
    a926:	09 f0       	breq	.+2      	; 0xa92a <_Z20Schedules_Monitoringv+0x46a>
    a928:	4a c3       	rjmp	.+1684   	; 0xafbe <_Z20Schedules_Monitoringv+0xafe>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    a92a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    a92e:	81 11       	cpse	r24, r1
    a930:	46 c3       	rjmp	.+1676   	; 0xafbe <_Z20Schedules_Monitoringv+0xafe>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    a932:	80 91 f8 13 	lds	r24, 0x13F8	; 0x8013f8 <_sRuble_Parameters+0xae>
    a936:	81 30       	cpi	r24, 0x01	; 1
    a938:	09 f0       	breq	.+2      	; 0xa93c <_Z20Schedules_Monitoringv+0x47c>
    a93a:	41 c3       	rjmp	.+1666   	; 0xafbe <_Z20Schedules_Monitoringv+0xafe>
    a93c:	29 c3       	rjmp	.+1618   	; 0xaf90 <_Z20Schedules_Monitoringv+0xad0>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    a93e:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    a942:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    a946:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    a94a:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    a94e:	8c 52       	subi	r24, 0x2C	; 44
    a950:	91 40       	sbci	r25, 0x01	; 1
    a952:	a1 09       	sbc	r26, r1
    a954:	b1 09       	sbc	r27, r1
    a956:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    a95a:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    a95e:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    a962:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    a966:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a96a:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xbe>
    a96e:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a972:	89 17       	cp	r24, r25
    a974:	59 f0       	breq	.+22     	; 0xa98c <_Z20Schedules_Monitoringv+0x4cc>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a976:	88 23       	and	r24, r24
    a978:	49 f0       	breq	.+18     	; 0xa98c <_Z20Schedules_Monitoringv+0x4cc>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a97a:	60 e0       	ldi	r22, 0x00	; 0
    a97c:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    a980:	85 e5       	ldi	r24, 0x55	; 85
    a982:	94 e1       	ldi	r25, 0x14	; 20
    a984:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a988:	10 92 08 14 	sts	0x1408, r1	; 0x801408 <_sRuble_Parameters+0xbe>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    a98c:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    a990:	88 23       	and	r24, r24
    a992:	09 f4       	brne	.+2      	; 0xa996 <_Z20Schedules_Monitoringv+0x4d6>
    a994:	43 c0       	rjmp	.+134    	; 0xaa1c <_Z20Schedules_Monitoringv+0x55c>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    a996:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a99a:	81 30       	cpi	r24, 0x01	; 1
    a99c:	51 f4       	brne	.+20     	; 0xa9b2 <_Z20Schedules_Monitoringv+0x4f2>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    a99e:	62 e3       	ldi	r22, 0x32	; 50
    a9a0:	74 e1       	ldi	r23, 0x14	; 20
    a9a2:	85 e5       	ldi	r24, 0x55	; 85
    a9a4:	94 e1       	ldi	r25, 0x14	; 20
    a9a6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    a9aa:	85 e5       	ldi	r24, 0x55	; 85
    a9ac:	94 e1       	ldi	r25, 0x14	; 20
    a9ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    a9b2:	80 91 f2 0d 	lds	r24, 0x0DF2	; 0x800df2 <_sExtra_Plot+0x6e>
    a9b6:	84 30       	cpi	r24, 0x04	; 4
    a9b8:	89 f1       	breq	.+98     	; 0xaa1c <_Z20Schedules_Monitoringv+0x55c>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    a9ba:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    a9be:	81 30       	cpi	r24, 0x01	; 1
    a9c0:	69 f1       	breq	.+90     	; 0xaa1c <_Z20Schedules_Monitoringv+0x55c>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    a9c2:	80 91 f0 0d 	lds	r24, 0x0DF0	; 0x800df0 <_sExtra_Plot+0x6c>
    a9c6:	81 11       	cpse	r24, r1
    a9c8:	29 c0       	rjmp	.+82     	; 0xaa1c <_Z20Schedules_Monitoringv+0x55c>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a9ca:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
    a9ce:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    a9d2:	81 11       	cpse	r24, r1
    a9d4:	13 c0       	rjmp	.+38     	; 0xa9fc <_Z20Schedules_Monitoringv+0x53c>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9d6:	91 30       	cpi	r25, 0x01	; 1
    a9d8:	51 f4       	brne	.+20     	; 0xa9ee <_Z20Schedules_Monitoringv+0x52e>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    a9da:	6b e0       	ldi	r22, 0x0B	; 11
    a9dc:	74 e1       	ldi	r23, 0x14	; 20
    a9de:	85 e5       	ldi	r24, 0x55	; 85
    a9e0:	94 e1       	ldi	r25, 0x14	; 20
    a9e2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    a9e6:	85 e5       	ldi	r24, 0x55	; 85
    a9e8:	94 e1       	ldi	r25, 0x14	; 20
    a9ea:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    a9ee:	88 e5       	ldi	r24, 0x58	; 88
    a9f0:	92 e0       	ldi	r25, 0x02	; 2
    a9f2:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    a9f6:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    a9fa:	0c c0       	rjmp	.+24     	; 0xaa14 <_Z20Schedules_Monitoringv+0x554>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9fc:	91 30       	cpi	r25, 0x01	; 1
    a9fe:	51 f4       	brne	.+20     	; 0xaa14 <_Z20Schedules_Monitoringv+0x554>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    aa00:	6e ef       	ldi	r22, 0xFE	; 254
    aa02:	73 e1       	ldi	r23, 0x13	; 19
    aa04:	85 e5       	ldi	r24, 0x55	; 85
    aa06:	94 e1       	ldi	r25, 0x14	; 20
    aa08:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    aa0c:	85 e5       	ldi	r24, 0x55	; 85
    aa0e:	94 e1       	ldi	r25, 0x14	; 20
    aa10:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    aa14:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aa18:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    aa1c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aa20:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aa24:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    aa28:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    aa2c:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    aa30:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    aa34:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    aa38:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aa3c:	48 17       	cp	r20, r24
    aa3e:	59 07       	cpc	r21, r25
    aa40:	6a 07       	cpc	r22, r26
    aa42:	7b 07       	cpc	r23, r27
    aa44:	80 f4       	brcc	.+32     	; 0xaa66 <_Z20Schedules_Monitoringv+0x5a6>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    aa46:	0e 94 9e 47 	call	0x8f3c	; 0x8f3c <_Z30Compare_Trigger_And_Reset_Timev>
    aa4a:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aa4c:	81 11       	cpse	r24, r1
    aa4e:	d7 c2       	rjmp	.+1454   	; 0xaffe <_Z20Schedules_Monitoringv+0xb3e>
    aa50:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aa54:	81 30       	cpi	r24, 0x01	; 1
    aa56:	09 f0       	breq	.+2      	; 0xaa5a <_Z20Schedules_Monitoringv+0x59a>
    aa58:	db c4       	rjmp	.+2486   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    aa5a:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aa5e:	81 30       	cpi	r24, 0x01	; 1
    aa60:	09 f0       	breq	.+2      	; 0xaa64 <_Z20Schedules_Monitoringv+0x5a4>
    aa62:	d6 c4       	rjmp	.+2476   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    aa64:	cc c2       	rjmp	.+1432   	; 0xaffe <_Z20Schedules_Monitoringv+0xb3e>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    aa66:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aa6a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aa6e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    aa72:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    aa76:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    aa7a:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    aa7e:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    aa82:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aa86:	48 17       	cp	r20, r24
    aa88:	59 07       	cpc	r21, r25
    aa8a:	6a 07       	cpc	r22, r26
    aa8c:	7b 07       	cpc	r23, r27
    aa8e:	08 f4       	brcc	.+2      	; 0xaa92 <_Z20Schedules_Monitoringv+0x5d2>
    aa90:	bf c4       	rjmp	.+2430   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    aa92:	0e 94 9e 47 	call	0x8f3c	; 0x8f3c <_Z30Compare_Trigger_And_Reset_Timev>
    aa96:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aa98:	81 11       	cpse	r24, r1
    aa9a:	f6 c2       	rjmp	.+1516   	; 0xb088 <_Z20Schedules_Monitoringv+0xbc8>
    aa9c:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aaa0:	81 30       	cpi	r24, 0x01	; 1
    aaa2:	29 f4       	brne	.+10     	; 0xaaae <_Z20Schedules_Monitoringv+0x5ee>
    aaa4:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aaa8:	81 30       	cpi	r24, 0x01	; 1
    aaaa:	09 f4       	brne	.+2      	; 0xaaae <_Z20Schedules_Monitoringv+0x5ee>
    aaac:	ed c2       	rjmp	.+1498   	; 0xb088 <_Z20Schedules_Monitoringv+0xbc8>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aaae:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aab2:	81 30       	cpi	r24, 0x01	; 1
    aab4:	09 f0       	breq	.+2      	; 0xaab8 <_Z20Schedules_Monitoringv+0x5f8>
    aab6:	ac c4       	rjmp	.+2392   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    aab8:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aabc:	81 30       	cpi	r24, 0x01	; 1
    aabe:	09 f0       	breq	.+2      	; 0xaac2 <_Z20Schedules_Monitoringv+0x602>
    aac0:	a7 c4       	rjmp	.+2382   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    aac2:	24 c3       	rjmp	.+1608   	; 0xb10c <_Z20Schedules_Monitoringv+0xc4c>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    aac4:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    aac8:	f0 e0       	ldi	r31, 0x00	; 0
    aaca:	e3 5e       	subi	r30, 0xE3	; 227
    aacc:	f6 4f       	sbci	r31, 0xF6	; 246
    aace:	15 ad       	ldd	r17, Z+61	; 0x3d
    aad0:	11 30       	cpi	r17, 0x01	; 1
    aad2:	09 f0       	breq	.+2      	; 0xaad6 <_Z20Schedules_Monitoringv+0x616>
    aad4:	6a ce       	rjmp	.-812    	; 0xa7aa <_Z20Schedules_Monitoringv+0x2ea>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    aad6:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    aada:	f0 e0       	ldi	r31, 0x00	; 0
    aadc:	e7 59       	subi	r30, 0x97	; 151
    aade:	f6 4f       	sbci	r31, 0xF6	; 246
    aae0:	80 81       	ld	r24, Z
    aae2:	90 e0       	ldi	r25, 0x00	; 0
    aae4:	01 97       	sbiw	r24, 0x01	; 1
    aae6:	26 e0       	ldi	r18, 0x06	; 6
    aae8:	28 9f       	mul	r18, r24
    aaea:	f0 01       	movw	r30, r0
    aaec:	29 9f       	mul	r18, r25
    aaee:	f0 0d       	add	r31, r0
    aaf0:	11 24       	eor	r1, r1
    aaf2:	e0 50       	subi	r30, 0x00	; 0
    aaf4:	f3 4f       	sbci	r31, 0xF3	; 243
    aaf6:	80 81       	ld	r24, Z
    aaf8:	88 23       	and	r24, r24
    aafa:	09 f4       	brne	.+2      	; 0xaafe <_Z20Schedules_Monitoringv+0x63e>
    aafc:	56 ce       	rjmp	.-852    	; 0xa7aa <_Z20Schedules_Monitoringv+0x2ea>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    aafe:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ab02:	f0 e0       	ldi	r31, 0x00	; 0
    ab04:	e7 59       	subi	r30, 0x97	; 151
    ab06:	f6 4f       	sbci	r31, 0xF6	; 246
    ab08:	80 81       	ld	r24, Z
    ab0a:	90 e0       	ldi	r25, 0x00	; 0
    ab0c:	01 97       	sbiw	r24, 0x01	; 1
    ab0e:	28 9f       	mul	r18, r24
    ab10:	f0 01       	movw	r30, r0
    ab12:	29 9f       	mul	r18, r25
    ab14:	f0 0d       	add	r31, r0
    ab16:	11 24       	eor	r1, r1
    ab18:	e0 50       	subi	r30, 0x00	; 0
    ab1a:	f3 4f       	sbci	r31, 0xF3	; 243
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    ab1c:	80 81       	ld	r24, Z
    ab1e:	8f 30       	cpi	r24, 0x0F	; 15
    ab20:	08 f0       	brcs	.+2      	; 0xab24 <_Z20Schedules_Monitoringv+0x664>
    ab22:	43 ce       	rjmp	.-890    	; 0xa7aa <_Z20Schedules_Monitoringv+0x2ea>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    ab24:	0e 94 70 45 	call	0x8ae0	; 0x8ae0 <_Z22Do_Not_Repeat_Schedulev>
    ab28:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    ab2a:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <_sSchedules+0x79>
    ab2e:	81 30       	cpi	r24, 0x01	; 1
    ab30:	09 f0       	breq	.+2      	; 0xab34 <_Z20Schedules_Monitoringv+0x674>
    ab32:	4a c1       	rjmp	.+660    	; 0xadc8 <_Z20Schedules_Monitoringv+0x908>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab34:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ab38:	81 30       	cpi	r24, 0x01	; 1
    ab3a:	89 f5       	brne	.+98     	; 0xab9e <_Z20Schedules_Monitoringv+0x6de>
									{
										Serial.println("Running time in sec");
    ab3c:	6f ee       	ldi	r22, 0xEF	; 239
    ab3e:	72 e0       	ldi	r23, 0x02	; 2
    ab40:	85 e5       	ldi	r24, 0x55	; 85
    ab42:	94 e1       	ldi	r25, 0x14	; 20
    ab44:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    ab48:	60 91 26 09 	lds	r22, 0x0926	; 0x800926 <_sSchedules+0x8>
    ab4c:	70 91 27 09 	lds	r23, 0x0927	; 0x800927 <_sSchedules+0x9>
    ab50:	4a e0       	ldi	r20, 0x0A	; 10
    ab52:	50 e0       	ldi	r21, 0x00	; 0
    ab54:	85 e5       	ldi	r24, 0x55	; 85
    ab56:	94 e1       	ldi	r25, 0x14	; 20
    ab58:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
										Serial.println();
    ab5c:	85 e5       	ldi	r24, 0x55	; 85
    ab5e:	94 e1       	ldi	r25, 0x14	; 20
    ab60:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    ab64:	85 e5       	ldi	r24, 0x55	; 85
    ab66:	94 e1       	ldi	r25, 0x14	; 20
    ab68:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    ab6c:	63 e0       	ldi	r22, 0x03	; 3
    ab6e:	73 e0       	ldi	r23, 0x03	; 3
    ab70:	85 e5       	ldi	r24, 0x55	; 85
    ab72:	94 e1       	ldi	r25, 0x14	; 20
    ab74:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    ab78:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    ab7c:	70 e0       	ldi	r23, 0x00	; 0
    ab7e:	61 50       	subi	r22, 0x01	; 1
    ab80:	71 09       	sbc	r23, r1
    ab82:	4a e0       	ldi	r20, 0x0A	; 10
    ab84:	50 e0       	ldi	r21, 0x00	; 0
    ab86:	85 e5       	ldi	r24, 0x55	; 85
    ab88:	94 e1       	ldi	r25, 0x14	; 20
    ab8a:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    ab8e:	85 e5       	ldi	r24, 0x55	; 85
    ab90:	94 e1       	ldi	r25, 0x14	; 20
    ab92:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    ab96:	85 e5       	ldi	r24, 0x55	; 85
    ab98:	94 e1       	ldi	r25, 0x14	; 20
    ab9a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    ab9e:	25 db       	rcall	.-2486   	; 0xa1ea <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    aba0:	81 e0       	ldi	r24, 0x01	; 1
    aba2:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    aba6:	80 91 78 0b 	lds	r24, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    abaa:	8b 35       	cpi	r24, 0x5B	; 91
    abac:	98 f4       	brcc	.+38     	; 0xabd4 <_Z20Schedules_Monitoringv+0x714>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    abae:	80 91 78 0b 	lds	r24, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    abb2:	84 32       	cpi	r24, 0x24	; 36
    abb4:	98 f0       	brcs	.+38     	; 0xabdc <_Z20Schedules_Monitoringv+0x71c>
    abb6:	80 e0       	ldi	r24, 0x00	; 0
    abb8:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    abba:	fc 01       	movw	r30, r24
    abbc:	e0 5e       	subi	r30, 0xE0	; 224
    abbe:	f4 4f       	sbci	r31, 0xF4	; 244
    abc0:	20 81       	ld	r18, Z
    abc2:	21 30       	cpi	r18, 0x01	; 1
    abc4:	09 f4       	brne	.+2      	; 0xabc8 <_Z20Schedules_Monitoringv+0x708>
												{
													number_of_running_tanks++;
    abc6:	cf 5f       	subi	r28, 0xFF	; 255
    abc8:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    abca:	83 30       	cpi	r24, 0x03	; 3
    abcc:	91 05       	cpc	r25, r1
    abce:	a9 f7       	brne	.-22     	; 0xabba <_Z20Schedules_Monitoringv+0x6fa>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    abd0:	cc 23       	and	r28, r28
    abd2:	21 f0       	breq	.+8      	; 0xabdc <_Z20Schedules_Monitoringv+0x71c>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    abd4:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    abd8:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    abdc:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    abe0:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    abe4:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    abe8:	f0 e0       	ldi	r31, 0x00	; 0
    abea:	ee 0f       	add	r30, r30
    abec:	ff 1f       	adc	r31, r31
    abee:	e4 5e       	subi	r30, 0xE4	; 228
    abf0:	f6 4f       	sbci	r31, 0xF6	; 246
    abf2:	87 8d       	ldd	r24, Z+31	; 0x1f
    abf4:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    abf6:	82 17       	cp	r24, r18
    abf8:	93 07       	cpc	r25, r19
    abfa:	18 f0       	brcs	.+6      	; 0xac02 <_Z20Schedules_Monitoringv+0x742>
    abfc:	dd 23       	and	r29, r29
    abfe:	09 f4       	brne	.+2      	; 0xac02 <_Z20Schedules_Monitoringv+0x742>
    ac00:	5f c0       	rjmp	.+190    	; 0xacc0 <_Z20Schedules_Monitoringv+0x800>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    ac02:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac06:	f0 e0       	ldi	r31, 0x00	; 0
    ac08:	e7 59       	subi	r30, 0x97	; 151
    ac0a:	f6 4f       	sbci	r31, 0xF6	; 246
    ac0c:	80 81       	ld	r24, Z
    ac0e:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xbe>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ac12:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										Serial.println("time over");
    ac16:	64 e1       	ldi	r22, 0x14	; 20
    ac18:	73 e0       	ldi	r23, 0x03	; 3
    ac1a:	85 e5       	ldi	r24, 0x55	; 85
    ac1c:	94 e1       	ldi	r25, 0x14	; 20
    ac1e:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ac22:	83 e0       	ldi	r24, 0x03	; 3
    ac24:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    ac28:	0e 94 37 3c 	call	0x786e	; 0x786e <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    ac2c:	83 e0       	ldi	r24, 0x03	; 3
    ac2e:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    ac32:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    ac36:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    ac3a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
										if(Check_for_no_repeat != 1)
    ac3e:	d1 30       	cpi	r29, 0x01	; 1
    ac40:	09 f4       	brne	.+2      	; 0xac44 <_Z20Schedules_Monitoringv+0x784>
    ac42:	30 c1       	rjmp	.+608    	; 0xaea4 <_Z20Schedules_Monitoringv+0x9e4>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac44:	81 30       	cpi	r24, 0x01	; 1
    ac46:	51 f4       	brne	.+20     	; 0xac5c <_Z20Schedules_Monitoringv+0x79c>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    ac48:	6a e2       	ldi	r22, 0x2A	; 42
    ac4a:	76 e1       	ldi	r23, 0x16	; 22
    ac4c:	85 e5       	ldi	r24, 0x55	; 85
    ac4e:	94 e1       	ldi	r25, 0x14	; 20
    ac50:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    ac54:	85 e5       	ldi	r24, 0x55	; 85
    ac56:	94 e1       	ldi	r25, 0x14	; 20
    ac58:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    ac5c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac60:	f0 e0       	ldi	r31, 0x00	; 0
    ac62:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    ac66:	e8 58       	subi	r30, 0x88	; 136
    ac68:	f6 4f       	sbci	r31, 0xF6	; 246
    ac6a:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    ac6c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac70:	f0 e0       	ldi	r31, 0x00	; 0
    ac72:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    ac76:	e9 57       	subi	r30, 0x79	; 121
    ac78:	f6 4f       	sbci	r31, 0xF6	; 246
    ac7a:	80 83       	st	Z, r24
    ac7c:	20 e0       	ldi	r18, 0x00	; 0
    ac7e:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    ac80:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac84:	90 e0       	ldi	r25, 0x00	; 0
    ac86:	01 97       	sbiw	r24, 0x01	; 1
    ac88:	fc 01       	movw	r30, r24
    ac8a:	ee 0f       	add	r30, r30
    ac8c:	ff 1f       	adc	r31, r31
    ac8e:	e8 0f       	add	r30, r24
    ac90:	f9 1f       	adc	r31, r25
    ac92:	e2 0f       	add	r30, r18
    ac94:	f3 1f       	adc	r31, r19
    ac96:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    ac9a:	90 e0       	ldi	r25, 0x00	; 0
    ac9c:	ee 0f       	add	r30, r30
    ac9e:	ff 1f       	adc	r31, r31
    aca0:	eb 53       	subi	r30, 0x3B	; 59
    aca2:	f5 4f       	sbci	r31, 0xF5	; 245
    aca4:	91 83       	std	Z+1, r25	; 0x01
    aca6:	80 83       	st	Z, r24
    aca8:	2f 5f       	subi	r18, 0xFF	; 255
    acaa:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    acac:	23 30       	cpi	r18, 0x03	; 3
    acae:	31 05       	cpc	r19, r1
    acb0:	39 f7       	brne	.-50     	; 0xac80 <_Z20Schedules_Monitoringv+0x7c0>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    acb2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    acb6:	81 30       	cpi	r24, 0x01	; 1
    acb8:	09 f4       	brne	.+2      	; 0xacbc <_Z20Schedules_Monitoringv+0x7fc>
    acba:	35 c1       	rjmp	.+618    	; 0xaf26 <_Z20Schedules_Monitoringv+0xa66>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    acbc:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    acc0:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    acc4:	88 23       	and	r24, r24
    acc6:	09 f4       	brne	.+2      	; 0xacca <_Z20Schedules_Monitoringv+0x80a>
    acc8:	49 c0       	rjmp	.+146    	; 0xad5c <_Z20Schedules_Monitoringv+0x89c>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    acca:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
    acce:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    acd2:	81 11       	cpse	r24, r1
    acd4:	05 c0       	rjmp	.+10     	; 0xace0 <_Z20Schedules_Monitoringv+0x820>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    acd6:	91 30       	cpi	r25, 0x01	; 1
    acd8:	79 f4       	brne	.+30     	; 0xacf8 <_Z20Schedules_Monitoringv+0x838>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    acda:	65 e6       	ldi	r22, 0x65	; 101
    acdc:	75 e1       	ldi	r23, 0x15	; 21
    acde:	04 c0       	rjmp	.+8      	; 0xace8 <_Z20Schedules_Monitoringv+0x828>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ace0:	91 30       	cpi	r25, 0x01	; 1
    ace2:	51 f4       	brne	.+20     	; 0xacf8 <_Z20Schedules_Monitoringv+0x838>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    ace4:	67 e4       	ldi	r22, 0x47	; 71
    ace6:	75 e1       	ldi	r23, 0x15	; 21
    ace8:	85 e5       	ldi	r24, 0x55	; 85
    acea:	94 e1       	ldi	r25, 0x14	; 20
    acec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    acf0:	85 e5       	ldi	r24, 0x55	; 85
    acf2:	94 e1       	ldi	r25, 0x14	; 20
    acf4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    acf8:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    acfc:	88 23       	and	r24, r24
    acfe:	d1 f0       	breq	.+52     	; 0xad34 <_Z20Schedules_Monitoringv+0x874>
											{
												if(_sRuble_Parameters.Dry_Run_Flag == _kSET)
    ad00:	80 91 3c 14 	lds	r24, 0x143C	; 0x80143c <_sRuble_Parameters+0xf2>
    ad04:	81 30       	cpi	r24, 0x01	; 1
    ad06:	29 f4       	brne	.+10     	; 0xad12 <_Z20Schedules_Monitoringv+0x852>
												{
													_sRuble_Parameters.Dry_Run_Flag = _kRESET;
    ad08:	10 92 3c 14 	sts	0x143C, r1	; 0x80143c <_sRuble_Parameters+0xf2>
													_sSchedules.Scheduler_Retry_Timer = 60*60;
    ad0c:	80 e1       	ldi	r24, 0x10	; 16
    ad0e:	9e e0       	ldi	r25, 0x0E	; 14
    ad10:	0d c0       	rjmp	.+26     	; 0xad2c <_Z20Schedules_Monitoringv+0x86c>
												}
												else
												{
													if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    ad12:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    ad16:	81 30       	cpi	r24, 0x01	; 1
    ad18:	39 f4       	brne	.+14     	; 0xad28 <_Z20Schedules_Monitoringv+0x868>
    ad1a:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    ad1e:	81 30       	cpi	r24, 0x01	; 1
    ad20:	19 f4       	brne	.+6      	; 0xad28 <_Z20Schedules_Monitoringv+0x868>
													{
														_sSchedules.Scheduler_Retry_Timer = 4*60;
    ad22:	80 ef       	ldi	r24, 0xF0	; 240
    ad24:	90 e0       	ldi	r25, 0x00	; 0
    ad26:	02 c0       	rjmp	.+4      	; 0xad2c <_Z20Schedules_Monitoringv+0x86c>
													}
													else
													{
														_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ad28:	88 e5       	ldi	r24, 0x58	; 88
    ad2a:	92 e0       	ldi	r25, 0x02	; 2
    ad2c:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ad30:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ad34:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ad38:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ad3c:	83 e0       	ldi	r24, 0x03	; 3
    ad3e:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    ad42:	0e 94 37 3c 	call	0x786e	; 0x786e <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    ad46:	83 e0       	ldi	r24, 0x03	; 3
    ad48:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ad4c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ad50:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    ad54:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    ad58:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    ad5c:	80 91 39 14 	lds	r24, 0x1439	; 0x801439 <_sRuble_Parameters+0xef>
    ad60:	81 11       	cpse	r24, r1
    ad62:	56 c3       	rjmp	.+1708   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ad64:	0e 94 c7 bd 	call	0x17b8e	; 0x17b8e <_Z15Stop_Irrigationv>
    ad68:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ad6c:	81 11       	cpse	r24, r1
    ad6e:	05 c0       	rjmp	.+10     	; 0xad7a <_Z20Schedules_Monitoringv+0x8ba>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad70:	91 30       	cpi	r25, 0x01	; 1
    ad72:	79 f4       	brne	.+30     	; 0xad92 <_Z20Schedules_Monitoringv+0x8d2>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    ad74:	69 e2       	ldi	r22, 0x29	; 41
    ad76:	75 e1       	ldi	r23, 0x15	; 21
    ad78:	04 c0       	rjmp	.+8      	; 0xad82 <_Z20Schedules_Monitoringv+0x8c2>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad7a:	91 30       	cpi	r25, 0x01	; 1
    ad7c:	51 f4       	brne	.+20     	; 0xad92 <_Z20Schedules_Monitoringv+0x8d2>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    ad7e:	60 e0       	ldi	r22, 0x00	; 0
    ad80:	75 e1       	ldi	r23, 0x15	; 21
    ad82:	85 e5       	ldi	r24, 0x55	; 85
    ad84:	94 e1       	ldi	r25, 0x14	; 20
    ad86:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    ad8a:	85 e5       	ldi	r24, 0x55	; 85
    ad8c:	94 e1       	ldi	r25, 0x14	; 20
    ad8e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ad92:	88 e5       	ldi	r24, 0x58	; 88
    ad94:	92 e0       	ldi	r25, 0x02	; 2
    ad96:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ad9a:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ad9e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ada2:	0e 94 6a 31 	call	0x62d4	; 0x62d4 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ada6:	83 e0       	ldi	r24, 0x03	; 3
    ada8:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    adac:	0e 94 37 3c 	call	0x786e	; 0x786e <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    adb0:	83 e0       	ldi	r24, 0x03	; 3
    adb2:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    adb6:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    adba:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    adbe:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    adc2:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
    adc6:	24 c3       	rjmp	.+1608   	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    adc8:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    adcc:	f0 e0       	ldi	r31, 0x00	; 0
    adce:	e7 59       	subi	r30, 0x97	; 151
    add0:	f6 4f       	sbci	r31, 0xF6	; 246
    add2:	80 81       	ld	r24, Z
    add4:	80 93 a5 13 	sts	0x13A5, r24	; 0x8013a5 <_sRuble_Parameters+0x5b>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    add8:	0e 94 83 c1 	call	0x18306	; 0x18306 <_Z16Start_Irrigationv>
    addc:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ade0:	81 11       	cpse	r24, r1
    ade2:	22 c0       	rjmp	.+68     	; 0xae28 <_Z20Schedules_Monitoringv+0x968>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ade4:	91 30       	cpi	r25, 0x01	; 1
    ade6:	51 f4       	brne	.+20     	; 0xadfc <_Z20Schedules_Monitoringv+0x93c>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    ade8:	6a ed       	ldi	r22, 0xDA	; 218
    adea:	74 e1       	ldi	r23, 0x14	; 20
    adec:	85 e5       	ldi	r24, 0x55	; 85
    adee:	94 e1       	ldi	r25, 0x14	; 20
    adf0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    adf4:	85 e5       	ldi	r24, 0x55	; 85
    adf6:	94 e1       	ldi	r25, 0x14	; 20
    adf8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    adfc:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    ae00:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    ae04:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    ae08:	81 30       	cpi	r24, 0x01	; 1
    ae0a:	39 f4       	brne	.+14     	; 0xae1a <_Z20Schedules_Monitoringv+0x95a>
    ae0c:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    ae10:	81 30       	cpi	r24, 0x01	; 1
    ae12:	19 f4       	brne	.+6      	; 0xae1a <_Z20Schedules_Monitoringv+0x95a>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    ae14:	80 ef       	ldi	r24, 0xF0	; 240
    ae16:	90 e0       	ldi	r25, 0x00	; 0
    ae18:	02 c0       	rjmp	.+4      	; 0xae1e <_Z20Schedules_Monitoringv+0x95e>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ae1a:	88 e5       	ldi	r24, 0x58	; 88
    ae1c:	92 e0       	ldi	r25, 0x02	; 2
    ae1e:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ae22:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    ae26:	f1 cc       	rjmp	.-1566   	; 0xa80a <_Z20Schedules_Monitoringv+0x34a>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    ae28:	10 93 1b 09 	sts	0x091B, r17	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae2c:	91 30       	cpi	r25, 0x01	; 1
    ae2e:	51 f4       	brne	.+20     	; 0xae44 <_Z20Schedules_Monitoringv+0x984>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    ae30:	6f ec       	ldi	r22, 0xCF	; 207
    ae32:	74 e1       	ldi	r23, 0x14	; 20
    ae34:	85 e5       	ldi	r24, 0x55	; 85
    ae36:	94 e1       	ldi	r25, 0x14	; 20
    ae38:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae3c:	85 e5       	ldi	r24, 0x55	; 85
    ae3e:	94 e1       	ldi	r25, 0x14	; 20
    ae40:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    ae44:	81 e0       	ldi	r24, 0x01	; 1
    ae46:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    ae4a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    ae4e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ae52:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    ae56:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    ae5a:	80 93 7b 0b 	sts	0x0B7B, r24	; 0x800b7b <_sSchedules+0x25d>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    ae5e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    ae62:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    ae66:	90 93 7d 0b 	sts	0x0B7D, r25	; 0x800b7d <_sSchedules+0x25f>
    ae6a:	80 93 7c 0b 	sts	0x0B7C, r24	; 0x800b7c <_sSchedules+0x25e>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    ae6e:	80 91 24 0b 	lds	r24, 0x0B24	; 0x800b24 <_sSchedules+0x206>
    ae72:	90 91 25 0b 	lds	r25, 0x0B25	; 0x800b25 <_sSchedules+0x207>
    ae76:	90 93 7f 0b 	sts	0x0B7F, r25	; 0x800b7f <_sSchedules+0x261>
    ae7a:	80 93 7e 0b 	sts	0x0B7E, r24	; 0x800b7e <_sSchedules+0x260>
    ae7e:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <_sSchedules+0x208>
    ae82:	90 91 27 0b 	lds	r25, 0x0B27	; 0x800b27 <_sSchedules+0x209>
    ae86:	90 93 81 0b 	sts	0x0B81, r25	; 0x800b81 <_sSchedules+0x263>
    ae8a:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <_sSchedules+0x262>
    ae8e:	80 91 28 0b 	lds	r24, 0x0B28	; 0x800b28 <_sSchedules+0x20a>
    ae92:	90 91 29 0b 	lds	r25, 0x0B29	; 0x800b29 <_sSchedules+0x20b>
    ae96:	90 93 83 0b 	sts	0x0B83, r25	; 0x800b83 <_sSchedules+0x265>
    ae9a:	80 93 82 0b 	sts	0x0B82, r24	; 0x800b82 <_sSchedules+0x264>
										}
																					
										Set_Trigger_Time();								
    ae9e:	0e 94 e4 48 	call	0x91c8	; 0x91c8 <_Z16Set_Trigger_Timev>
    aea2:	b3 cc       	rjmp	.-1690   	; 0xa80a <_Z20Schedules_Monitoringv+0x34a>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    aea4:	81 30       	cpi	r24, 0x01	; 1
    aea6:	51 f4       	brne	.+20     	; 0xaebc <_Z20Schedules_Monitoringv+0x9fc>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    aea8:	66 ef       	ldi	r22, 0xF6	; 246
    aeaa:	75 e1       	ldi	r23, 0x15	; 21
    aeac:	85 e5       	ldi	r24, 0x55	; 85
    aeae:	94 e1       	ldi	r25, 0x14	; 20
    aeb0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    aeb4:	85 e5       	ldi	r24, 0x55	; 85
    aeb6:	94 e1       	ldi	r25, 0x14	; 20
    aeb8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    aebc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    aec0:	81 30       	cpi	r24, 0x01	; 1
    aec2:	51 f4       	brne	.+20     	; 0xaed8 <_Z20Schedules_Monitoringv+0xa18>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    aec4:	60 ec       	ldi	r22, 0xC0	; 192
    aec6:	75 e1       	ldi	r23, 0x15	; 21
    aec8:	85 e5       	ldi	r24, 0x55	; 85
    aeca:	94 e1       	ldi	r25, 0x14	; 20
    aecc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    aed0:	85 e5       	ldi	r24, 0x55	; 85
    aed2:	94 e1       	ldi	r25, 0x14	; 20
    aed4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    aed8:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aedc:	81 e0       	ldi	r24, 0x01	; 1
    aede:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aee2:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    aee6:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    aeea:	81 30       	cpi	r24, 0x01	; 1
    aeec:	81 f4       	brne	.+32     	; 0xaf0e <_Z20Schedules_Monitoringv+0xa4e>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    aeee:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    aef2:	81 30       	cpi	r24, 0x01	; 1
    aef4:	51 f4       	brne	.+20     	; 0xaf0a <_Z20Schedules_Monitoringv+0xa4a>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    aef6:	64 eb       	ldi	r22, 0xB4	; 180
    aef8:	75 e1       	ldi	r23, 0x15	; 21
    aefa:	85 e5       	ldi	r24, 0x55	; 85
    aefc:	94 e1       	ldi	r25, 0x14	; 20
    aefe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    af02:	85 e5       	ldi	r24, 0x55	; 85
    af04:	94 e1       	ldi	r25, 0x14	; 20
    af06:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    af0a:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    af0e:	82 e0       	ldi	r24, 0x02	; 2
    af10:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    af14:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    af18:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    af1c:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    af20:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
    af24:	c6 ce       	rjmp	.-628    	; 0xacb2 <_Z20Schedules_Monitoringv+0x7f2>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    af26:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    af2a:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    af2e:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    af32:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    af36:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    af3a:	81 30       	cpi	r24, 0x01	; 1
    af3c:	91 f4       	brne	.+36     	; 0xaf62 <_Z20Schedules_Monitoringv+0xaa2>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    af3e:	62 e8       	ldi	r22, 0x82	; 130
    af40:	75 e1       	ldi	r23, 0x15	; 21
    af42:	85 e5       	ldi	r24, 0x55	; 85
    af44:	94 e1       	ldi	r25, 0x14	; 20
    af46:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    af4a:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    af4e:	4a e0       	ldi	r20, 0x0A	; 10
    af50:	50 e0       	ldi	r21, 0x00	; 0
    af52:	85 e5       	ldi	r24, 0x55	; 85
    af54:	94 e1       	ldi	r25, 0x14	; 20
    af56:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    af5a:	85 e5       	ldi	r24, 0x55	; 85
    af5c:	94 e1       	ldi	r25, 0x14	; 20
    af5e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    af62:	81 e0       	ldi	r24, 0x01	; 1
    af64:	0e 94 25 32 	call	0x644a	; 0x644a <_Z35Return_Calculated_Previous_Day_Dateh>
    af68:	81 e0       	ldi	r24, 0x01	; 1
    af6a:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    af6c:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    af70:	9c 01       	movw	r18, r24
    af72:	22 5e       	subi	r18, 0xE2	; 226
    af74:	36 4f       	sbci	r19, 0xF6	; 246
    af76:	f9 01       	movw	r30, r18
    af78:	e5 5a       	subi	r30, 0xA5	; 165
    af7a:	ff 4f       	sbci	r31, 0xFF	; 255
    af7c:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    af7e:	40 91 8f 0b 	lds	r20, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    af82:	3f 96       	adiw	r30, 0x0f	; 15
    af84:	40 83       	st	Z, r20
    af86:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    af88:	8e 30       	cpi	r24, 0x0E	; 14
    af8a:	91 05       	cpc	r25, r1
    af8c:	79 f7       	brne	.-34     	; 0xaf6c <_Z20Schedules_Monitoringv+0xaac>
    af8e:	96 ce       	rjmp	.-724    	; 0xacbc <_Z20Schedules_Monitoringv+0x7fc>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    af90:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    af94:	81 30       	cpi	r24, 0x01	; 1
    af96:	51 f4       	brne	.+20     	; 0xafac <_Z20Schedules_Monitoringv+0xaec>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    af98:	69 e5       	ldi	r22, 0x59	; 89
    af9a:	74 e1       	ldi	r23, 0x14	; 20
    af9c:	85 e5       	ldi	r24, 0x55	; 85
    af9e:	94 e1       	ldi	r25, 0x14	; 20
    afa0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    afa4:	85 e5       	ldi	r24, 0x55	; 85
    afa6:	94 e1       	ldi	r25, 0x14	; 20
    afa8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    afac:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
    afb0:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
    afb4:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
    afb8:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
    afbc:	d4 cc       	rjmp	.-1624   	; 0xa966 <_Z20Schedules_Monitoringv+0x4a6>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    afbe:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    afc2:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    afc6:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    afca:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    afce:	89 2b       	or	r24, r25
    afd0:	8a 2b       	or	r24, r26
    afd2:	8b 2b       	or	r24, r27
    afd4:	09 f4       	brne	.+2      	; 0xafd8 <_Z20Schedules_Monitoringv+0xb18>
    afd6:	c7 cc       	rjmp	.-1650   	; 0xa966 <_Z20Schedules_Monitoringv+0x4a6>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    afd8:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    afdc:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    afe0:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    afe4:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    afe8:	8c 32       	cpi	r24, 0x2C	; 44
    afea:	91 40       	sbci	r25, 0x01	; 1
    afec:	a1 05       	cpc	r26, r1
    afee:	b1 05       	cpc	r27, r1
    aff0:	08 f0       	brcs	.+2      	; 0xaff4 <_Z20Schedules_Monitoringv+0xb34>
    aff2:	a5 cc       	rjmp	.-1718   	; 0xa93e <_Z20Schedules_Monitoringv+0x47e>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    aff4:	87 e1       	ldi	r24, 0x17	; 23
    aff6:	90 e5       	ldi	r25, 0x50	; 80
    aff8:	a1 e0       	ldi	r26, 0x01	; 1
    affa:	b0 e0       	ldi	r27, 0x00	; 0
    affc:	ac cc       	rjmp	.-1704   	; 0xa956 <_Z20Schedules_Monitoringv+0x496>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    affe:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b002:	81 30       	cpi	r24, 0x01	; 1
    b004:	51 f4       	brne	.+20     	; 0xb01a <_Z20Schedules_Monitoringv+0xb5a>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b006:	62 ef       	ldi	r22, 0xF2	; 242
    b008:	73 e1       	ldi	r23, 0x13	; 19
    b00a:	85 e5       	ldi	r24, 0x55	; 85
    b00c:	94 e1       	ldi	r25, 0x14	; 20
    b00e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b012:	85 e5       	ldi	r24, 0x55	; 85
    b014:	94 e1       	ldi	r25, 0x14	; 20
    b016:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b01a:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    b01e:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    b022:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    b026:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    b02a:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b02e:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b032:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b036:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b03a:	84 17       	cp	r24, r20
    b03c:	95 07       	cpc	r25, r21
    b03e:	a6 07       	cpc	r26, r22
    b040:	b7 07       	cpc	r27, r23
    b042:	08 f4       	brcc	.+2      	; 0xb046 <_Z20Schedules_Monitoringv+0xb86>
    b044:	e5 c1       	rjmp	.+970    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    b046:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b04a:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b04e:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b052:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b056:	84 17       	cp	r24, r20
    b058:	95 07       	cpc	r25, r21
    b05a:	a6 07       	cpc	r26, r22
    b05c:	b7 07       	cpc	r27, r23
    b05e:	08 f0       	brcs	.+2      	; 0xb062 <_Z20Schedules_Monitoringv+0xba2>
    b060:	d7 c1       	rjmp	.+942    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b062:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b066:	81 30       	cpi	r24, 0x01	; 1
    b068:	51 f4       	brne	.+20     	; 0xb07e <_Z20Schedules_Monitoringv+0xbbe>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b06a:	66 ee       	ldi	r22, 0xE6	; 230
    b06c:	73 e1       	ldi	r23, 0x13	; 19
    b06e:	85 e5       	ldi	r24, 0x55	; 85
    b070:	94 e1       	ldi	r25, 0x14	; 20
    b072:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b076:	85 e5       	ldi	r24, 0x55	; 85
    b078:	94 e1       	ldi	r25, 0x14	; 20
    b07a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b07e:	6c 2f       	mov	r22, r28
    b080:	81 e0       	ldi	r24, 0x01	; 1
    b082:	0e 94 05 46 	call	0x8c0a	; 0x8c0a <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b086:	c1 cb       	rjmp	.-2174   	; 0xa80a <_Z20Schedules_Monitoringv+0x34a>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b088:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b08c:	81 30       	cpi	r24, 0x01	; 1
    b08e:	51 f4       	brne	.+20     	; 0xb0a4 <_Z20Schedules_Monitoringv+0xbe4>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b090:	6a ed       	ldi	r22, 0xDA	; 218
    b092:	73 e1       	ldi	r23, 0x13	; 19
    b094:	85 e5       	ldi	r24, 0x55	; 85
    b096:	94 e1       	ldi	r25, 0x14	; 20
    b098:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b09c:	85 e5       	ldi	r24, 0x55	; 85
    b09e:	94 e1       	ldi	r25, 0x14	; 20
    b0a0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b0a4:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b0a8:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b0ac:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b0b0:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b0b4:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    b0b8:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    b0bc:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    b0c0:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    b0c4:	84 17       	cp	r24, r20
    b0c6:	95 07       	cpc	r25, r21
    b0c8:	a6 07       	cpc	r26, r22
    b0ca:	b7 07       	cpc	r27, r23
    b0cc:	08 f4       	brcc	.+2      	; 0xb0d0 <_Z20Schedules_Monitoringv+0xc10>
    b0ce:	85 c0       	rjmp	.+266    	; 0xb1da <_Z20Schedules_Monitoringv+0xd1a>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b0d0:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b0d4:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b0d8:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b0dc:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b0e0:	48 17       	cp	r20, r24
    b0e2:	59 07       	cpc	r21, r25
    b0e4:	6a 07       	cpc	r22, r26
    b0e6:	7b 07       	cpc	r23, r27
    b0e8:	08 f0       	brcs	.+2      	; 0xb0ec <_Z20Schedules_Monitoringv+0xc2c>
    b0ea:	77 c0       	rjmp	.+238    	; 0xb1da <_Z20Schedules_Monitoringv+0xd1a>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b0ec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b0f0:	81 30       	cpi	r24, 0x01	; 1
    b0f2:	51 f4       	brne	.+20     	; 0xb108 <_Z20Schedules_Monitoringv+0xc48>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b0f4:	6e ec       	ldi	r22, 0xCE	; 206
    b0f6:	73 e1       	ldi	r23, 0x13	; 19
    b0f8:	85 e5       	ldi	r24, 0x55	; 85
    b0fa:	94 e1       	ldi	r25, 0x14	; 20
    b0fc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b100:	85 e5       	ldi	r24, 0x55	; 85
    b102:	94 e1       	ldi	r25, 0x14	; 20
    b104:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b108:	6c 2f       	mov	r22, r28
    b10a:	65 c0       	rjmp	.+202    	; 0xb1d6 <_Z20Schedules_Monitoringv+0xd16>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b10c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b110:	81 30       	cpi	r24, 0x01	; 1
    b112:	51 f4       	brne	.+20     	; 0xb128 <_Z20Schedules_Monitoringv+0xc68>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b114:	66 eb       	ldi	r22, 0xB6	; 182
    b116:	73 e1       	ldi	r23, 0x13	; 19
    b118:	85 e5       	ldi	r24, 0x55	; 85
    b11a:	94 e1       	ldi	r25, 0x14	; 20
    b11c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b120:	85 e5       	ldi	r24, 0x55	; 85
    b122:	94 e1       	ldi	r25, 0x14	; 20
    b124:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b128:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    b12c:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    b130:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    b134:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    b138:	40 91 5a 13 	lds	r20, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    b13c:	50 91 5b 13 	lds	r21, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    b140:	60 91 5c 13 	lds	r22, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    b144:	70 91 5d 13 	lds	r23, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    b148:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b14c:	04 17       	cp	r16, r20
    b14e:	15 07       	cpc	r17, r21
    b150:	26 07       	cpc	r18, r22
    b152:	37 07       	cpc	r19, r23
    b154:	08 f4       	brcc	.+2      	; 0xb158 <_Z20Schedules_Monitoringv+0xc98>
    b156:	73 c0       	rjmp	.+230    	; 0xb23e <_Z20Schedules_Monitoringv+0xd7e>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b158:	81 30       	cpi	r24, 0x01	; 1
    b15a:	51 f4       	brne	.+20     	; 0xb170 <_Z20Schedules_Monitoringv+0xcb0>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b15c:	6a ea       	ldi	r22, 0xAA	; 170
    b15e:	73 e1       	ldi	r23, 0x13	; 19
    b160:	85 e5       	ldi	r24, 0x55	; 85
    b162:	94 e1       	ldi	r25, 0x14	; 20
    b164:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b168:	85 e5       	ldi	r24, 0x55	; 85
    b16a:	94 e1       	ldi	r25, 0x14	; 20
    b16c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b170:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b174:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b178:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b17c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b180:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    b184:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    b188:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    b18c:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    b190:	84 17       	cp	r24, r20
    b192:	95 07       	cpc	r25, r21
    b194:	a6 07       	cpc	r26, r22
    b196:	b7 07       	cpc	r27, r23
    b198:	08 f4       	brcc	.+2      	; 0xb19c <_Z20Schedules_Monitoringv+0xcdc>
    b19a:	81 c0       	rjmp	.+258    	; 0xb29e <_Z20Schedules_Monitoringv+0xdde>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b19c:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b1a0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b1a4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b1a8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b1ac:	48 17       	cp	r20, r24
    b1ae:	59 07       	cpc	r21, r25
    b1b0:	6a 07       	cpc	r22, r26
    b1b2:	7b 07       	cpc	r23, r27
    b1b4:	08 f0       	brcs	.+2      	; 0xb1b8 <_Z20Schedules_Monitoringv+0xcf8>
    b1b6:	73 c0       	rjmp	.+230    	; 0xb29e <_Z20Schedules_Monitoringv+0xdde>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b1bc:	81 30       	cpi	r24, 0x01	; 1
    b1be:	51 f4       	brne	.+20     	; 0xb1d4 <_Z20Schedules_Monitoringv+0xd14>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b1c0:	6e e9       	ldi	r22, 0x9E	; 158
    b1c2:	73 e1       	ldi	r23, 0x13	; 19
    b1c4:	85 e5       	ldi	r24, 0x55	; 85
    b1c6:	94 e1       	ldi	r25, 0x14	; 20
    b1c8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b1cc:	85 e5       	ldi	r24, 0x55	; 85
    b1ce:	94 e1       	ldi	r25, 0x14	; 20
    b1d0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b1d4:	60 e0       	ldi	r22, 0x00	; 0
    b1d6:	81 e0       	ldi	r24, 0x01	; 1
    b1d8:	2c c0       	rjmp	.+88     	; 0xb232 <_Z20Schedules_Monitoringv+0xd72>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b1da:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b1de:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b1e2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b1e6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b1ea:	48 17       	cp	r20, r24
    b1ec:	59 07       	cpc	r21, r25
    b1ee:	6a 07       	cpc	r22, r26
    b1f0:	7b 07       	cpc	r23, r27
    b1f2:	08 f4       	brcc	.+2      	; 0xb1f6 <_Z20Schedules_Monitoringv+0xd36>
    b1f4:	0d c1       	rjmp	.+538    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b1f6:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b1fa:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b1fe:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b202:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b206:	84 17       	cp	r24, r20
    b208:	95 07       	cpc	r25, r21
    b20a:	a6 07       	cpc	r26, r22
    b20c:	b7 07       	cpc	r27, r23
    b20e:	08 f0       	brcs	.+2      	; 0xb212 <_Z20Schedules_Monitoringv+0xd52>
    b210:	ff c0       	rjmp	.+510    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b212:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b216:	81 30       	cpi	r24, 0x01	; 1
    b218:	51 f4       	brne	.+20     	; 0xb22e <_Z20Schedules_Monitoringv+0xd6e>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b21a:	62 ec       	ldi	r22, 0xC2	; 194
    b21c:	73 e1       	ldi	r23, 0x13	; 19
    b21e:	85 e5       	ldi	r24, 0x55	; 85
    b220:	94 e1       	ldi	r25, 0x14	; 20
    b222:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b226:	85 e5       	ldi	r24, 0x55	; 85
    b228:	94 e1       	ldi	r25, 0x14	; 20
    b22a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b22e:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b230:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b232:	df 91       	pop	r29
    b234:	cf 91       	pop	r28
    b236:	1f 91       	pop	r17
    b238:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b23a:	0c 94 05 46 	jmp	0x8c0a	; 0x8c0a <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b23e:	81 30       	cpi	r24, 0x01	; 1
    b240:	51 f4       	brne	.+20     	; 0xb256 <_Z20Schedules_Monitoringv+0xd96>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b242:	66 e8       	ldi	r22, 0x86	; 134
    b244:	73 e1       	ldi	r23, 0x13	; 19
    b246:	85 e5       	ldi	r24, 0x55	; 85
    b248:	94 e1       	ldi	r25, 0x14	; 20
    b24a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b24e:	85 e5       	ldi	r24, 0x55	; 85
    b250:	94 e1       	ldi	r25, 0x14	; 20
    b252:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b256:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b25a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b25e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b262:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b266:	80 91 5a 13 	lds	r24, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    b26a:	90 91 5b 13 	lds	r25, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    b26e:	a0 91 5c 13 	lds	r26, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    b272:	b0 91 5d 13 	lds	r27, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    b276:	84 17       	cp	r24, r20
    b278:	95 07       	cpc	r25, r21
    b27a:	a6 07       	cpc	r26, r22
    b27c:	b7 07       	cpc	r27, r23
    b27e:	d8 f1       	brcs	.+118    	; 0xb2f6 <_Z20Schedules_Monitoringv+0xe36>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b280:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b284:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b288:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b28c:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b290:	48 17       	cp	r20, r24
    b292:	59 07       	cpc	r21, r25
    b294:	6a 07       	cpc	r22, r26
    b296:	7b 07       	cpc	r23, r27
    b298:	08 f4       	brcc	.+2      	; 0xb29c <_Z20Schedules_Monitoringv+0xddc>
    b29a:	49 c0       	rjmp	.+146    	; 0xb32e <_Z20Schedules_Monitoringv+0xe6e>
    b29c:	2c c0       	rjmp	.+88     	; 0xb2f6 <_Z20Schedules_Monitoringv+0xe36>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b29e:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b2a2:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b2a6:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b2aa:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b2ae:	48 17       	cp	r20, r24
    b2b0:	59 07       	cpc	r21, r25
    b2b2:	6a 07       	cpc	r22, r26
    b2b4:	7b 07       	cpc	r23, r27
    b2b6:	08 f4       	brcc	.+2      	; 0xb2ba <_Z20Schedules_Monitoringv+0xdfa>
    b2b8:	ab c0       	rjmp	.+342    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    b2ba:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b2be:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b2c2:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b2c6:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b2ca:	84 17       	cp	r24, r20
    b2cc:	95 07       	cpc	r25, r21
    b2ce:	a6 07       	cpc	r26, r22
    b2d0:	b7 07       	cpc	r27, r23
    b2d2:	08 f0       	brcs	.+2      	; 0xb2d6 <_Z20Schedules_Monitoringv+0xe16>
    b2d4:	9d c0       	rjmp	.+314    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2d6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b2da:	81 30       	cpi	r24, 0x01	; 1
    b2dc:	51 f4       	brne	.+20     	; 0xb2f2 <_Z20Schedules_Monitoringv+0xe32>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b2de:	62 e9       	ldi	r22, 0x92	; 146
    b2e0:	73 e1       	ldi	r23, 0x13	; 19
    b2e2:	85 e5       	ldi	r24, 0x55	; 85
    b2e4:	94 e1       	ldi	r25, 0x14	; 20
    b2e6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b2ea:	85 e5       	ldi	r24, 0x55	; 85
    b2ec:	94 e1       	ldi	r25, 0x14	; 20
    b2ee:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b2f2:	60 e0       	ldi	r22, 0x00	; 0
    b2f4:	9d cf       	rjmp	.-198    	; 0xb230 <_Z20Schedules_Monitoringv+0xd70>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b2f6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b2fa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b2fe:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b302:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b306:	48 17       	cp	r20, r24
    b308:	59 07       	cpc	r21, r25
    b30a:	6a 07       	cpc	r22, r26
    b30c:	7b 07       	cpc	r23, r27
    b30e:	08 f4       	brcc	.+2      	; 0xb312 <_Z20Schedules_Monitoringv+0xe52>
    b310:	7f c0       	rjmp	.+254    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
    b312:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b316:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b31a:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b31e:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b322:	84 17       	cp	r24, r20
    b324:	95 07       	cpc	r25, r21
    b326:	a6 07       	cpc	r26, r22
    b328:	b7 07       	cpc	r27, r23
    b32a:	48 f0       	brcs	.+18     	; 0xb33e <_Z20Schedules_Monitoringv+0xe7e>
    b32c:	71 c0       	rjmp	.+226    	; 0xb410 <_Z20Schedules_Monitoringv+0xf50>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b32e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b332:	81 30       	cpi	r24, 0x01	; 1
    b334:	09 f0       	breq	.+2      	; 0xb338 <_Z20Schedules_Monitoringv+0xe78>
    b336:	4e cf       	rjmp	.-356    	; 0xb1d4 <_Z20Schedules_Monitoringv+0xd14>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b338:	6a e7       	ldi	r22, 0x7A	; 122
    b33a:	73 e1       	ldi	r23, 0x13	; 19
    b33c:	43 cf       	rjmp	.-378    	; 0xb1c4 <_Z20Schedules_Monitoringv+0xd04>
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b33e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b342:	81 30       	cpi	r24, 0x01	; 1
    b344:	b1 f6       	brne	.-84     	; 0xb2f2 <_Z20Schedules_Monitoringv+0xe32>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b346:	6e e6       	ldi	r22, 0x6E	; 110
    b348:	73 e1       	ldi	r23, 0x13	; 19
    b34a:	cb cf       	rjmp	.-106    	; 0xb2e2 <_Z20Schedules_Monitoringv+0xe22>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b34c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b350:	81 30       	cpi	r24, 0x01	; 1
    b352:	51 f4       	brne	.+20     	; 0xb368 <_Z20Schedules_Monitoringv+0xea8>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b354:	62 e3       	ldi	r22, 0x32	; 50
    b356:	73 e1       	ldi	r23, 0x13	; 19
    b358:	85 e5       	ldi	r24, 0x55	; 85
    b35a:	94 e1       	ldi	r25, 0x14	; 20
    b35c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b360:	85 e5       	ldi	r24, 0x55	; 85
    b362:	94 e1       	ldi	r25, 0x14	; 20
    b364:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b368:	83 e0       	ldi	r24, 0x03	; 3
    b36a:	0e 94 14 49 	call	0x9228	; 0x9228 <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b36e:	0e 94 37 3c 	call	0x786e	; 0x786e <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b372:	83 e0       	ldi	r24, 0x03	; 3
    b374:	0e 94 fc 3c 	call	0x79f8	; 0x79f8 <_Z17Blower_Monitoringh>
    b378:	9c c9       	rjmp	.-3272   	; 0xa6b2 <_Z20Schedules_Monitoringv+0x1f2>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b37a:	88 23       	and	r24, r24
    b37c:	09 f4       	brne	.+2      	; 0xb380 <_Z20Schedules_Monitoringv+0xec0>
    b37e:	d1 c9       	rjmp	.-3166   	; 0xa722 <_Z20Schedules_Monitoringv+0x262>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b380:	60 e0       	ldi	r22, 0x00	; 0
    b382:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b386:	10 92 08 14 	sts	0x1408, r1	; 0x801408 <_sRuble_Parameters+0xbe>
    b38a:	cb c9       	rjmp	.-3178   	; 0xa722 <_Z20Schedules_Monitoringv+0x262>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b38c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b390:	88 23       	and	r24, r24
    b392:	b1 f1       	breq	.+108    	; 0xb400 <_Z20Schedules_Monitoringv+0xf40>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b394:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b398:	81 30       	cpi	r24, 0x01	; 1
    b39a:	51 f4       	brne	.+20     	; 0xb3b0 <_Z20Schedules_Monitoringv+0xef0>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b39c:	6e e3       	ldi	r22, 0x3E	; 62
    b39e:	73 e1       	ldi	r23, 0x13	; 19
    b3a0:	85 e5       	ldi	r24, 0x55	; 85
    b3a2:	94 e1       	ldi	r25, 0x14	; 20
    b3a4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b3a8:	85 e5       	ldi	r24, 0x55	; 85
    b3aa:	94 e1       	ldi	r25, 0x14	; 20
    b3ac:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b3b0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b3b4:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b3b8:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    b3bc:	80 93 7b 0b 	sts	0x0B7B, r24	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b3c0:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b3c4:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b3c8:	90 93 7d 0b 	sts	0x0B7D, r25	; 0x800b7d <_sSchedules+0x25f>
    b3cc:	80 93 7c 0b 	sts	0x0B7C, r24	; 0x800b7c <_sSchedules+0x25e>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b3d0:	80 91 24 0b 	lds	r24, 0x0B24	; 0x800b24 <_sSchedules+0x206>
    b3d4:	90 91 25 0b 	lds	r25, 0x0B25	; 0x800b25 <_sSchedules+0x207>
    b3d8:	90 93 7f 0b 	sts	0x0B7F, r25	; 0x800b7f <_sSchedules+0x261>
    b3dc:	80 93 7e 0b 	sts	0x0B7E, r24	; 0x800b7e <_sSchedules+0x260>
    b3e0:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <_sSchedules+0x208>
    b3e4:	90 91 27 0b 	lds	r25, 0x0B27	; 0x800b27 <_sSchedules+0x209>
    b3e8:	90 93 81 0b 	sts	0x0B81, r25	; 0x800b81 <_sSchedules+0x263>
    b3ec:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <_sSchedules+0x262>
    b3f0:	80 91 28 0b 	lds	r24, 0x0B28	; 0x800b28 <_sSchedules+0x20a>
    b3f4:	90 91 29 0b 	lds	r25, 0x0B29	; 0x800b29 <_sSchedules+0x20b>
    b3f8:	90 93 83 0b 	sts	0x0B83, r25	; 0x800b83 <_sSchedules+0x265>
    b3fc:	80 93 82 0b 	sts	0x0B82, r24	; 0x800b82 <_sSchedules+0x264>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b400:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    b404:	81 30       	cpi	r24, 0x01	; 1
    b406:	09 f0       	breq	.+2      	; 0xb40a <_Z20Schedules_Monitoringv+0xf4a>
    b408:	48 c9       	rjmp	.-3440   	; 0xa69a <_Z20Schedules_Monitoringv+0x1da>
						{
							Edited_In_Schedule();
    b40a:	0e 94 2c 3f 	call	0x7e58	; 0x7e58 <_Z18Edited_In_Schedulev>
    b40e:	45 c9       	rjmp	.-3446   	; 0xa69a <_Z20Schedules_Monitoringv+0x1da>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b410:	df 91       	pop	r29
    b412:	cf 91       	pop	r28
    b414:	1f 91       	pop	r17
    b416:	0f 91       	pop	r16
    b418:	08 95       	ret

0000b41a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b41a:	cf 93       	push	r28
    b41c:	df 93       	push	r29
    b41e:	1f 92       	push	r1
    b420:	1f 92       	push	r1
    b422:	cd b7       	in	r28, 0x3d	; 61
    b424:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b426:	60 91 0a 14 	lds	r22, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
    b42a:	8d ea       	ldi	r24, 0xAD	; 173
    b42c:	9c e0       	ldi	r25, 0x0C	; 12
    b42e:	9a 83       	std	Y+2, r25	; 0x02
    b430:	89 83       	std	Y+1, r24	; 0x01
    b432:	ce 01       	movw	r24, r28
    b434:	01 96       	adiw	r24, 0x01	; 1
    b436:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
        return t;
    }
    b43a:	8a e0       	ldi	r24, 0x0A	; 10
    b43c:	94 e1       	ldi	r25, 0x14	; 20
    b43e:	0f 90       	pop	r0
    b440:	0f 90       	pop	r0
    b442:	df 91       	pop	r29
    b444:	cf 91       	pop	r28
    b446:	08 95       	ret

0000b448 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b448:	cf 92       	push	r12
    b44a:	df 92       	push	r13
    b44c:	ef 92       	push	r14
    b44e:	ff 92       	push	r15
    b450:	0f 93       	push	r16
    b452:	1f 93       	push	r17
    b454:	cf 93       	push	r28
    b456:	df 93       	push	r29
    b458:	1f 92       	push	r1
    b45a:	1f 92       	push	r1
    b45c:	cd b7       	in	r28, 0x3d	; 61
    b45e:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b460:	94 e1       	ldi	r25, 0x14	; 20
    b462:	89 9f       	mul	r24, r25
    b464:	90 01       	movw	r18, r0
    b466:	11 24       	eor	r1, r1
    b468:	69 01       	movw	r12, r18
    b46a:	e6 e3       	ldi	r30, 0x36	; 54
    b46c:	ce 1a       	sub	r12, r30
    b46e:	ec ef       	ldi	r30, 0xFC	; 252
    b470:	de 0a       	sbc	r13, r30
    b472:	fd e0       	ldi	r31, 0x0D	; 13
    b474:	8f 9f       	mul	r24, r31
    b476:	80 01       	movw	r16, r0
    b478:	11 24       	eor	r1, r1
    b47a:	09 54       	subi	r16, 0x49	; 73
    b47c:	14 4f       	sbci	r17, 0xF4	; 244
    b47e:	79 01       	movw	r14, r18
    b480:	89 e2       	ldi	r24, 0x29	; 41
    b482:	e8 1a       	sub	r14, r24
    b484:	8c ef       	ldi	r24, 0xFC	; 252
    b486:	f8 0a       	sbc	r15, r24
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b488:	f8 01       	movw	r30, r16
    b48a:	61 91       	ld	r22, Z+
    b48c:	8f 01       	movw	r16, r30
    b48e:	da 82       	std	Y+2, r13	; 0x02
    b490:	c9 82       	std	Y+1, r12	; 0x01
    b492:	ce 01       	movw	r24, r28
    b494:	01 96       	adiw	r24, 0x01	; 1
    b496:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    b49a:	ff ef       	ldi	r31, 0xFF	; 255
    b49c:	cf 1a       	sub	r12, r31
    b49e:	df 0a       	sbc	r13, r31
    b4a0:	ce 14       	cp	r12, r14
    b4a2:	df 04       	cpc	r13, r15
    b4a4:	89 f7       	brne	.-30     	; 0xb488 <_Z16Euro_Data_EEPROMh+0x40>
	return;
}
    b4a6:	0f 90       	pop	r0
    b4a8:	0f 90       	pop	r0
    b4aa:	df 91       	pop	r29
    b4ac:	cf 91       	pop	r28
    b4ae:	1f 91       	pop	r17
    b4b0:	0f 91       	pop	r16
    b4b2:	ff 90       	pop	r15
    b4b4:	ef 90       	pop	r14
    b4b6:	df 90       	pop	r13
    b4b8:	cf 90       	pop	r12
    b4ba:	08 95       	ret

0000b4bc <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b4bc:	cf 92       	push	r12
    b4be:	df 92       	push	r13
    b4c0:	ef 92       	push	r14
    b4c2:	ff 92       	push	r15
    b4c4:	0f 93       	push	r16
    b4c6:	1f 93       	push	r17
    b4c8:	cf 93       	push	r28
    b4ca:	df 93       	push	r29
    b4cc:	1f 92       	push	r1
    b4ce:	1f 92       	push	r1
    b4d0:	cd b7       	in	r28, 0x3d	; 61
    b4d2:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b4d4:	94 e1       	ldi	r25, 0x14	; 20
    b4d6:	89 9f       	mul	r24, r25
    b4d8:	90 01       	movw	r18, r0
    b4da:	11 24       	eor	r1, r1
    b4dc:	69 01       	movw	r12, r18
    b4de:	e2 e5       	ldi	r30, 0x52	; 82
    b4e0:	ce 1a       	sub	r12, r30
    b4e2:	e3 ef       	ldi	r30, 0xF3	; 243
    b4e4:	de 0a       	sbc	r13, r30
    b4e6:	fb e0       	ldi	r31, 0x0B	; 11
    b4e8:	8f 9f       	mul	r24, r31
    b4ea:	80 01       	movw	r16, r0
    b4ec:	11 24       	eor	r1, r1
    b4ee:	0a 56       	subi	r16, 0x6A	; 106
    b4f0:	14 4f       	sbci	r17, 0xF4	; 244
    b4f2:	79 01       	movw	r14, r18
    b4f4:	87 e4       	ldi	r24, 0x47	; 71
    b4f6:	e8 1a       	sub	r14, r24
    b4f8:	83 ef       	ldi	r24, 0xF3	; 243
    b4fa:	f8 0a       	sbc	r15, r24
    b4fc:	f8 01       	movw	r30, r16
    b4fe:	61 91       	ld	r22, Z+
    b500:	8f 01       	movw	r16, r30
    b502:	da 82       	std	Y+2, r13	; 0x02
    b504:	c9 82       	std	Y+1, r12	; 0x01
    b506:	ce 01       	movw	r24, r28
    b508:	01 96       	adiw	r24, 0x01	; 1
    b50a:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    b50e:	ff ef       	ldi	r31, 0xFF	; 255
    b510:	cf 1a       	sub	r12, r31
    b512:	df 0a       	sbc	r13, r31
    b514:	ce 14       	cp	r12, r14
    b516:	df 04       	cpc	r13, r15
    b518:	89 f7       	brne	.-30     	; 0xb4fc <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b51a:	0f 90       	pop	r0
    b51c:	0f 90       	pop	r0
    b51e:	df 91       	pop	r29
    b520:	cf 91       	pop	r28
    b522:	1f 91       	pop	r17
    b524:	0f 91       	pop	r16
    b526:	ff 90       	pop	r15
    b528:	ef 90       	pop	r14
    b52a:	df 90       	pop	r13
    b52c:	cf 90       	pop	r12
    b52e:	08 95       	ret

0000b530 <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b530:	ef 92       	push	r14
    b532:	ff 92       	push	r15
    b534:	0f 93       	push	r16
    b536:	1f 93       	push	r17
    b538:	cf 93       	push	r28
    b53a:	df 93       	push	r29
    b53c:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b53e:	81 e0       	ldi	r24, 0x01	; 1
    b540:	80 93 96 0b 	sts	0x0B96, r24	; 0x800b96 <_sWireless_Pump_Param>
    b544:	c0 e0       	ldi	r28, 0x00	; 0
    b546:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b548:	8d e0       	ldi	r24, 0x0D	; 13
    b54a:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b54c:	20 e0       	ldi	r18, 0x00	; 0
    b54e:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b550:	8c 9f       	mul	r24, r28
    b552:	b0 01       	movw	r22, r0
    b554:	8d 9f       	mul	r24, r29
    b556:	70 0d       	add	r23, r0
    b558:	11 24       	eor	r1, r1
    b55a:	69 54       	subi	r22, 0x49	; 73
    b55c:	74 4f       	sbci	r23, 0xF4	; 244
    b55e:	49 2f       	mov	r20, r25
    b560:	50 e0       	ldi	r21, 0x00	; 0
    b562:	df 01       	movw	r26, r30
    b564:	a4 0f       	add	r26, r20
    b566:	b5 1f       	adc	r27, r21
    b568:	46 0f       	add	r20, r22
    b56a:	57 1f       	adc	r21, r23
    b56c:	1c 91       	ld	r17, X
    b56e:	da 01       	movw	r26, r20
    b570:	11 96       	adiw	r26, 0x01	; 1
    b572:	3c 91       	ld	r19, X
    b574:	13 17       	cp	r17, r19
    b576:	11 f0       	breq	.+4      	; 0xb57c <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b578:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b57a:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b57c:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b57e:	9f 5f       	subi	r25, 0xFF	; 255
    b580:	96 30       	cpi	r25, 0x06	; 6
    b582:	68 f3       	brcs	.-38     	; 0xb55e <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b584:	26 30       	cpi	r18, 0x06	; 6
    b586:	09 f0       	breq	.+2      	; 0xb58a <_Z22Update_Euro_Valve_DataPh+0x5a>
    b588:	b7 c2       	rjmp	.+1390   	; 0xbaf8 <_Z22Update_Euro_Valve_DataPh+0x5c8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    b58a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b58e:	81 30       	cpi	r24, 0x01	; 1
    b590:	51 f4       	brne	.+20     	; 0xb5a6 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    b592:	67 e9       	ldi	r22, 0x97	; 151
    b594:	7f e1       	ldi	r23, 0x1F	; 31
    b596:	85 e5       	ldi	r24, 0x55	; 85
    b598:	94 e1       	ldi	r25, 0x14	; 20
    b59a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    b59e:	85 e5       	ldi	r24, 0x55	; 85
    b5a0:	94 e1       	ldi	r25, 0x14	; 20
    b5a2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    b5a6:	90 91 96 13 	lds	r25, 0x1396	; 0x801396 <_sRuble_Parameters+0x4c>
    b5aa:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b5ae:	91 30       	cpi	r25, 0x01	; 1
    b5b0:	09 f0       	breq	.+2      	; 0xb5b4 <_Z22Update_Euro_Valve_DataPh+0x84>
    b5b2:	3e c1       	rjmp	.+636    	; 0xb830 <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b5b4:	81 30       	cpi	r24, 0x01	; 1
    b5b6:	51 f4       	brne	.+20     	; 0xb5cc <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    b5b8:	6f e7       	ldi	r22, 0x7F	; 127
    b5ba:	7f e1       	ldi	r23, 0x1F	; 31
    b5bc:	85 e5       	ldi	r24, 0x55	; 85
    b5be:	94 e1       	ldi	r25, 0x14	; 20
    b5c0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    b5c4:	85 e5       	ldi	r24, 0x55	; 85
    b5c6:	94 e1       	ldi	r25, 0x14	; 20
    b5c8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    b5cc:	90 91 97 13 	lds	r25, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
    b5d0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b5d4:	99 23       	and	r25, r25
    b5d6:	19 f0       	breq	.+6      	; 0xb5de <_Z22Update_Euro_Valve_DataPh+0xae>
    b5d8:	91 30       	cpi	r25, 0x01	; 1
    b5da:	f1 f0       	breq	.+60     	; 0xb618 <_Z22Update_Euro_Valve_DataPh+0xe8>
    b5dc:	64 c0       	rjmp	.+200    	; 0xb6a6 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b5de:	81 30       	cpi	r24, 0x01	; 1
    b5e0:	51 f4       	brne	.+20     	; 0xb5f6 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    b5e2:	63 e7       	ldi	r22, 0x73	; 115
    b5e4:	7f e1       	ldi	r23, 0x1F	; 31
    b5e6:	85 e5       	ldi	r24, 0x55	; 85
    b5e8:	94 e1       	ldi	r25, 0x14	; 20
    b5ea:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b5ee:	85 e5       	ldi	r24, 0x55	; 85
    b5f0:	94 e1       	ldi	r25, 0x14	; 20
    b5f2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b5f6:	8d e0       	ldi	r24, 0x0D	; 13
    b5f8:	8c 9f       	mul	r24, r28
    b5fa:	f0 01       	movw	r30, r0
    b5fc:	8d 9f       	mul	r24, r29
    b5fe:	f0 0d       	add	r31, r0
    b600:	11 24       	eor	r1, r1
    b602:	e9 54       	subi	r30, 0x49	; 73
    b604:	f4 4f       	sbci	r31, 0xF4	; 244
    b606:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
    b60a:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    b60c:	81 e0       	ldi	r24, 0x01	; 1
    b60e:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    b610:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    b614:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    b616:	55 c0       	rjmp	.+170    	; 0xb6c2 <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b618:	2d e0       	ldi	r18, 0x0D	; 13
    b61a:	2c 9f       	mul	r18, r28
    b61c:	f0 01       	movw	r30, r0
    b61e:	2d 9f       	mul	r18, r29
    b620:	f0 0d       	add	r31, r0
    b622:	11 24       	eor	r1, r1
    b624:	e9 54       	subi	r30, 0x49	; 73
    b626:	f4 4f       	sbci	r31, 0xF4	; 244
    b628:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    b62a:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    b62c:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    b630:	91 11       	cpse	r25, r1
    b632:	16 c0       	rjmp	.+44     	; 0xb660 <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    b634:	81 30       	cpi	r24, 0x01	; 1
    b636:	51 f4       	brne	.+20     	; 0xb64c <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    b638:	68 e5       	ldi	r22, 0x58	; 88
    b63a:	7f e1       	ldi	r23, 0x1F	; 31
    b63c:	85 e5       	ldi	r24, 0x55	; 85
    b63e:	94 e1       	ldi	r25, 0x14	; 20
    b640:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    b644:	85 e5       	ldi	r24, 0x55	; 85
    b646:	94 e1       	ldi	r25, 0x14	; 20
    b648:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    b64c:	8d e0       	ldi	r24, 0x0D	; 13
    b64e:	8c 9f       	mul	r24, r28
    b650:	f0 01       	movw	r30, r0
    b652:	8d 9f       	mul	r24, r29
    b654:	f0 0d       	add	r31, r0
    b656:	11 24       	eor	r1, r1
    b658:	e9 54       	subi	r30, 0x49	; 73
    b65a:	f4 4f       	sbci	r31, 0xF4	; 244
    b65c:	81 e0       	ldi	r24, 0x01	; 1
    b65e:	02 c0       	rjmp	.+4      	; 0xb664 <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    b660:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    b664:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b666:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b66a:	81 30       	cpi	r24, 0x01	; 1
    b66c:	51 f4       	brne	.+20     	; 0xb682 <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    b66e:	66 e4       	ldi	r22, 0x46	; 70
    b670:	7f e1       	ldi	r23, 0x1F	; 31
    b672:	85 e5       	ldi	r24, 0x55	; 85
    b674:	94 e1       	ldi	r25, 0x14	; 20
    b676:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    b67a:	85 e5       	ldi	r24, 0x55	; 85
    b67c:	94 e1       	ldi	r25, 0x14	; 20
    b67e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    b682:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    b686:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    b68a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    b68e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    b692:	a4 60       	ori	r26, 0x04	; 4
    b694:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    b698:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    b69c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    b6a0:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						}break;
    b6a4:	0e c0       	rjmp	.+28     	; 0xb6c2 <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6a6:	81 30       	cpi	r24, 0x01	; 1
    b6a8:	51 f4       	brne	.+20     	; 0xb6be <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    b6aa:	65 e3       	ldi	r22, 0x35	; 53
    b6ac:	7f e1       	ldi	r23, 0x1F	; 31
    b6ae:	85 e5       	ldi	r24, 0x55	; 85
    b6b0:	94 e1       	ldi	r25, 0x14	; 20
    b6b2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b6b6:	85 e5       	ldi	r24, 0x55	; 85
    b6b8:	94 e1       	ldi	r25, 0x14	; 20
    b6ba:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    b6be:	80 e0       	ldi	r24, 0x00	; 0
    b6c0:	21 c2       	rjmp	.+1090   	; 0xbb04 <_Z22Update_Euro_Valve_DataPh+0x5d4>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    b6c2:	8d e0       	ldi	r24, 0x0D	; 13
    b6c4:	8c 9f       	mul	r24, r28
    b6c6:	80 01       	movw	r16, r0
    b6c8:	8d 9f       	mul	r24, r29
    b6ca:	10 0d       	add	r17, r0
    b6cc:	11 24       	eor	r1, r1
    b6ce:	09 54       	subi	r16, 0x49	; 73
    b6d0:	14 4f       	sbci	r17, 0xF4	; 244
    b6d2:	80 91 9a 13 	lds	r24, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
    b6d6:	90 91 9b 13 	lds	r25, 0x139B	; 0x80139b <_sRuble_Parameters+0x51>
    b6da:	98 27       	eor	r25, r24
    b6dc:	89 27       	eor	r24, r25
    b6de:	98 27       	eor	r25, r24
    b6e0:	f8 01       	movw	r30, r16
    b6e2:	91 87       	std	Z+9, r25	; 0x09
    b6e4:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6e6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b6ea:	81 30       	cpi	r24, 0x01	; 1
    b6ec:	09 f0       	breq	.+2      	; 0xb6f0 <_Z22Update_Euro_Valve_DataPh+0x1c0>
    b6ee:	52 c0       	rjmp	.+164    	; 0xb794 <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    b6f0:	6d e1       	ldi	r22, 0x1D	; 29
    b6f2:	7f e1       	ldi	r23, 0x1F	; 31
    b6f4:	85 e5       	ldi	r24, 0x55	; 85
    b6f6:	94 e1       	ldi	r25, 0x14	; 20
    b6f8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    b6fc:	85 e5       	ldi	r24, 0x55	; 85
    b6fe:	94 e1       	ldi	r25, 0x14	; 20
    b700:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    b704:	4a e0       	ldi	r20, 0x0A	; 10
    b706:	50 e0       	ldi	r21, 0x00	; 0
    b708:	d8 01       	movw	r26, r16
    b70a:	6c 91       	ld	r22, X
    b70c:	85 e5       	ldi	r24, 0x55	; 85
    b70e:	94 e1       	ldi	r25, 0x14	; 20
    b710:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b714:	85 e5       	ldi	r24, 0x55	; 85
    b716:	94 e1       	ldi	r25, 0x14	; 20
    b718:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    b71c:	6c e0       	ldi	r22, 0x0C	; 12
    b71e:	7f e1       	ldi	r23, 0x1F	; 31
    b720:	85 e5       	ldi	r24, 0x55	; 85
    b722:	94 e1       	ldi	r25, 0x14	; 20
    b724:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    b728:	f8 01       	movw	r30, r16
    b72a:	60 85       	ldd	r22, Z+8	; 0x08
    b72c:	71 85       	ldd	r23, Z+9	; 0x09
    b72e:	4a e0       	ldi	r20, 0x0A	; 10
    b730:	50 e0       	ldi	r21, 0x00	; 0
    b732:	85 e5       	ldi	r24, 0x55	; 85
    b734:	94 e1       	ldi	r25, 0x14	; 20
    b736:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    b73a:	85 e5       	ldi	r24, 0x55	; 85
    b73c:	94 e1       	ldi	r25, 0x14	; 20
    b73e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    b742:	65 ef       	ldi	r22, 0xF5	; 245
    b744:	7e e1       	ldi	r23, 0x1E	; 30
    b746:	85 e5       	ldi	r24, 0x55	; 85
    b748:	94 e1       	ldi	r25, 0x14	; 20
    b74a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    b74e:	85 e5       	ldi	r24, 0x55	; 85
    b750:	94 e1       	ldi	r25, 0x14	; 20
    b752:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    b756:	4a e0       	ldi	r20, 0x0A	; 10
    b758:	50 e0       	ldi	r21, 0x00	; 0
    b75a:	d8 01       	movw	r26, r16
    b75c:	1b 96       	adiw	r26, 0x0b	; 11
    b75e:	6c 91       	ld	r22, X
    b760:	85 e5       	ldi	r24, 0x55	; 85
    b762:	94 e1       	ldi	r25, 0x14	; 20
    b764:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    b768:	66 ee       	ldi	r22, 0xE6	; 230
    b76a:	7e e1       	ldi	r23, 0x1E	; 30
    b76c:	85 e5       	ldi	r24, 0x55	; 85
    b76e:	94 e1       	ldi	r25, 0x14	; 20
    b770:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    b774:	85 e5       	ldi	r24, 0x55	; 85
    b776:	94 e1       	ldi	r25, 0x14	; 20
    b778:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    b77c:	4a e0       	ldi	r20, 0x0A	; 10
    b77e:	50 e0       	ldi	r21, 0x00	; 0
    b780:	f8 01       	movw	r30, r16
    b782:	62 85       	ldd	r22, Z+10	; 0x0a
    b784:	85 e5       	ldi	r24, 0x55	; 85
    b786:	94 e1       	ldi	r25, 0x14	; 20
    b788:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b78c:	85 e5       	ldi	r24, 0x55	; 85
    b78e:	94 e1       	ldi	r25, 0x14	; 20
    b790:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    b794:	84 e1       	ldi	r24, 0x14	; 20
    b796:	ec e7       	ldi	r30, 0x7C	; 124
    b798:	f3 e1       	ldi	r31, 0x13	; 19
    b79a:	df 01       	movw	r26, r30
    b79c:	1d 92       	st	X+, r1
    b79e:	8a 95       	dec	r24
    b7a0:	e9 f7       	brne	.-6      	; 0xb79c <_Z22Update_Euro_Valve_DataPh+0x26c>
    b7a2:	8f 01       	movw	r16, r30
    b7a4:	8d e0       	ldi	r24, 0x0D	; 13
    b7a6:	8c 9f       	mul	r24, r28
    b7a8:	a0 01       	movw	r20, r0
    b7aa:	8d 9f       	mul	r24, r29
    b7ac:	50 0d       	add	r21, r0
    b7ae:	11 24       	eor	r1, r1
    b7b0:	df 01       	movw	r26, r30
    b7b2:	80 e0       	ldi	r24, 0x00	; 0
    b7b4:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    b7b6:	fa 01       	movw	r30, r20
    b7b8:	e8 0f       	add	r30, r24
    b7ba:	f9 1f       	adc	r31, r25
    b7bc:	e9 54       	subi	r30, 0x49	; 73
    b7be:	f4 4f       	sbci	r31, 0xF4	; 244
    b7c0:	21 81       	ldd	r18, Z+1	; 0x01
    b7c2:	2d 93       	st	X+, r18
    b7c4:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    b7c6:	86 30       	cpi	r24, 0x06	; 6
    b7c8:	91 05       	cpc	r25, r1
    b7ca:	a9 f7       	brne	.-22     	; 0xb7b6 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    b7cc:	81 e0       	ldi	r24, 0x01	; 1
    b7ce:	80 93 82 13 	sts	0x1382, r24	; 0x801382 <_sRuble_Parameters+0x38>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    b7d2:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
    b7d6:	80 93 83 13 	sts	0x1383, r24	; 0x801383 <_sRuble_Parameters+0x39>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    b7da:	8d e0       	ldi	r24, 0x0D	; 13
    b7dc:	8c 9f       	mul	r24, r28
    b7de:	f0 01       	movw	r30, r0
    b7e0:	8d 9f       	mul	r24, r29
    b7e2:	f0 0d       	add	r31, r0
    b7e4:	11 24       	eor	r1, r1
    b7e6:	e9 54       	subi	r30, 0x49	; 73
    b7e8:	f4 4f       	sbci	r31, 0xF4	; 244
    b7ea:	83 85       	ldd	r24, Z+11	; 0x0b
    b7ec:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    b7f0:	f0 92 fc 13 	sts	0x13FC, r15	; 0x8013fc <_sRuble_Parameters+0xb2>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    b7f4:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    b7f8:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    b7fc:	80 68       	ori	r24, 0x80	; 128
    b7fe:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    b802:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    b806:	8f 2d       	mov	r24, r15
    b808:	1f de       	rcall	.-962    	; 0xb448 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    b80a:	40 91 a5 13 	lds	r20, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    b80e:	ce 01       	movw	r24, r28
    b810:	88 0f       	add	r24, r24
    b812:	99 1f       	adc	r25, r25
    b814:	44 23       	and	r20, r20
    b816:	09 f4       	brne	.+2      	; 0xb81a <_Z22Update_Euro_Valve_DataPh+0x2ea>
    b818:	94 c0       	rjmp	.+296    	; 0xb942 <_Z22Update_Euro_Valve_DataPh+0x412>
    b81a:	9c 01       	movw	r18, r24
    b81c:	2c 0f       	add	r18, r28
    b81e:	3d 1f       	adc	r19, r29
    b820:	2f 5f       	subi	r18, 0xFF	; 255
    b822:	3f 4f       	sbci	r19, 0xFF	; 255
    b824:	b6 e0       	ldi	r27, 0x06	; 6
    b826:	4b 9f       	mul	r20, r27
    b828:	a0 01       	movw	r20, r0
    b82a:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b82c:	e3 e0       	ldi	r30, 0x03	; 3
    b82e:	1b c0       	rjmp	.+54     	; 0xb866 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b830:	81 30       	cpi	r24, 0x01	; 1
    b832:	09 f0       	breq	.+2      	; 0xb836 <_Z22Update_Euro_Valve_DataPh+0x306>
    b834:	44 cf       	rjmp	.-376    	; 0xb6be <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    b836:	68 ec       	ldi	r22, 0xC8	; 200
    b838:	7e e1       	ldi	r23, 0x1E	; 30
    b83a:	39 cf       	rjmp	.-398    	; 0xb6ae <_Z22Update_Euro_Valve_DataPh+0x17e>
    b83c:	da 01       	movw	r26, r20
    b83e:	a6 0f       	add	r26, r22
    b840:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b842:	a5 50       	subi	r26, 0x05	; 5
    b844:	b3 4f       	sbci	r27, 0xF3	; 243
    b846:	ac 91       	ld	r26, X
    b848:	b0 e0       	ldi	r27, 0x00	; 0
    b84a:	a2 17       	cp	r26, r18
    b84c:	b3 07       	cpc	r27, r19
    b84e:	71 f0       	breq	.+28     	; 0xb86c <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    b850:	6f 5f       	subi	r22, 0xFF	; 255
    b852:	7f 4f       	sbci	r23, 0xFF	; 255
    b854:	65 30       	cpi	r22, 0x05	; 5
    b856:	71 05       	cpc	r23, r1
    b858:	89 f7       	brne	.-30     	; 0xb83c <_Z22Update_Euro_Valve_DataPh+0x30c>
    b85a:	e1 50       	subi	r30, 0x01	; 1
    b85c:	2f 5f       	subi	r18, 0xFF	; 255
    b85e:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    b860:	ee 23       	and	r30, r30
    b862:	09 f4       	brne	.+2      	; 0xb866 <_Z22Update_Euro_Valve_DataPh+0x336>
    b864:	6e c0       	rjmp	.+220    	; 0xb942 <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b866:	60 e0       	ldi	r22, 0x00	; 0
    b868:	70 e0       	ldi	r23, 0x00	; 0
    b86a:	e8 cf       	rjmp	.-48     	; 0xb83c <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b86c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b870:	81 30       	cpi	r24, 0x01	; 1
    b872:	51 f4       	brne	.+20     	; 0xb888 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    b874:	6c e9       	ldi	r22, 0x9C	; 156
    b876:	7e e1       	ldi	r23, 0x1E	; 30
    b878:	85 e5       	ldi	r24, 0x55	; 85
    b87a:	94 e1       	ldi	r25, 0x14	; 20
    b87c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b880:	85 e5       	ldi	r24, 0x55	; 85
    b882:	94 e1       	ldi	r25, 0x14	; 20
    b884:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    b888:	81 e0       	ldi	r24, 0x01	; 1
    b88a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    b88e:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    b892:	81 11       	cpse	r24, r1
    b894:	13 c0       	rjmp	.+38     	; 0xb8bc <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    b896:	8a e0       	ldi	r24, 0x0A	; 10
    b898:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    b89c:	01 97       	sbiw	r24, 0x01	; 1
    b89e:	21 f0       	breq	.+8      	; 0xb8a8 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    b8a0:	61 e0       	ldi	r22, 0x01	; 1
    b8a2:	8a e0       	ldi	r24, 0x0A	; 10
    b8a4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    b8a8:	8b e0       	ldi	r24, 0x0B	; 11
    b8aa:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    b8ae:	01 97       	sbiw	r24, 0x01	; 1
    b8b0:	71 f1       	breq	.+92     	; 0xb90e <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    b8b2:	61 e0       	ldi	r22, 0x01	; 1
    b8b4:	8b e0       	ldi	r24, 0x0B	; 11
    b8b6:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    b8ba:	29 c0       	rjmp	.+82     	; 0xb90e <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b8bc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b8c0:	81 30       	cpi	r24, 0x01	; 1
    b8c2:	51 f4       	brne	.+20     	; 0xb8d8 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    b8c4:	67 e7       	ldi	r22, 0x77	; 119
    b8c6:	7e e1       	ldi	r23, 0x1E	; 30
    b8c8:	85 e5       	ldi	r24, 0x55	; 85
    b8ca:	94 e1       	ldi	r25, 0x14	; 20
    b8cc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b8d0:	85 e5       	ldi	r24, 0x55	; 85
    b8d2:	94 e1       	ldi	r25, 0x14	; 20
    b8d4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    b8d8:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    b8dc:	62 50       	subi	r22, 0x02	; 2
    b8de:	84 e0       	ldi	r24, 0x04	; 4
    b8e0:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
    b8e4:	81 11       	cpse	r24, r1
    b8e6:	10 c0       	rjmp	.+32     	; 0xb908 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    b8e8:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    b8ec:	81 11       	cpse	r24, r1
    b8ee:	0c c0       	rjmp	.+24     	; 0xb908 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    b8f0:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    b8f4:	81 30       	cpi	r24, 0x01	; 1
    b8f6:	41 f0       	breq	.+16     	; 0xb908 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    b8f8:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
    b8fc:	81 30       	cpi	r24, 0x01	; 1
    b8fe:	21 f0       	breq	.+8      	; 0xb908 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    b900:	81 e0       	ldi	r24, 0x01	; 1
    b902:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
    b906:	02 c0       	rjmp	.+4      	; 0xb90c <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    b908:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    b90c:	86 dd       	rcall	.-1268   	; 0xb41a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    b90e:	8d e0       	ldi	r24, 0x0D	; 13
    b910:	8c 9f       	mul	r24, r28
    b912:	f0 01       	movw	r30, r0
    b914:	8d 9f       	mul	r24, r29
    b916:	f0 0d       	add	r31, r0
    b918:	11 24       	eor	r1, r1
    b91a:	e9 54       	subi	r30, 0x49	; 73
    b91c:	f4 4f       	sbci	r31, 0xF4	; 244
    b91e:	91 e0       	ldi	r25, 0x01	; 1
    b920:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    b922:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    b926:	84 e6       	ldi	r24, 0x64	; 100
    b928:	90 e0       	ldi	r25, 0x00	; 0
    b92a:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    b92e:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b932:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b936:	81 30       	cpi	r24, 0x01	; 1
    b938:	09 f0       	breq	.+2      	; 0xb93c <_Z22Update_Euro_Valve_DataPh+0x40c>
    b93a:	9b c0       	rjmp	.+310    	; 0xba72 <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    b93c:	64 e6       	ldi	r22, 0x64	; 100
    b93e:	7e e1       	ldi	r23, 0x1E	; 30
    b940:	94 c0       	rjmp	.+296    	; 0xba6a <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b942:	8c 0f       	add	r24, r28
    b944:	9d 1f       	adc	r25, r29
    b946:	e4 e8       	ldi	r30, 0x84	; 132
    b948:	fd e0       	ldi	r31, 0x0D	; 13
    b94a:	20 e0       	ldi	r18, 0x00	; 0
    b94c:	30 e0       	ldi	r19, 0x00	; 0
    b94e:	7c 01       	movw	r14, r24
    b950:	44 e0       	ldi	r20, 0x04	; 4
    b952:	e4 0e       	add	r14, r20
    b954:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    b956:	41 81       	ldd	r20, Z+1	; 0x01
    b958:	44 23       	and	r20, r20
    b95a:	09 f4       	brne	.+2      	; 0xb95e <_Z22Update_Euro_Valve_DataPh+0x42e>
    b95c:	a0 c0       	rjmp	.+320    	; 0xba9e <_Z22Update_Euro_Valve_DataPh+0x56e>
    b95e:	ac 01       	movw	r20, r24
    b960:	4f 5f       	subi	r20, 0xFF	; 255
    b962:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b964:	60 e0       	ldi	r22, 0x00	; 0
    b966:	70 e0       	ldi	r23, 0x00	; 0
    b968:	df 01       	movw	r26, r30
    b96a:	a6 0f       	add	r26, r22
    b96c:	b7 1f       	adc	r27, r23
    b96e:	15 96       	adiw	r26, 0x05	; 5
    b970:	ac 91       	ld	r26, X
    b972:	b0 e0       	ldi	r27, 0x00	; 0
    b974:	a4 17       	cp	r26, r20
    b976:	b5 07       	cpc	r27, r21
    b978:	09 f0       	breq	.+2      	; 0xb97c <_Z22Update_Euro_Valve_DataPh+0x44c>
    b97a:	85 c0       	rjmp	.+266    	; 0xba86 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    b97c:	a0 81       	ld	r26, Z
    b97e:	a1 11       	cpse	r26, r1
    b980:	04 c0       	rjmp	.+8      	; 0xb98a <_Z22Update_Euro_Valve_DataPh+0x45a>
    b982:	a1 8d       	ldd	r26, Z+25	; 0x19
    b984:	a1 30       	cpi	r26, 0x01	; 1
    b986:	09 f0       	breq	.+2      	; 0xb98a <_Z22Update_Euro_Valve_DataPh+0x45a>
    b988:	7e c0       	rjmp	.+252    	; 0xba86 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    b98a:	23 30       	cpi	r18, 0x03	; 3
    b98c:	31 05       	cpc	r19, r1
    b98e:	09 f0       	breq	.+2      	; 0xb992 <_Z22Update_Euro_Valve_DataPh+0x462>
    b990:	7a c0       	rjmp	.+244    	; 0xba86 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b992:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b996:	81 30       	cpi	r24, 0x01	; 1
    b998:	51 f4       	brne	.+20     	; 0xb9ae <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    b99a:	60 e3       	ldi	r22, 0x30	; 48
    b99c:	7e e1       	ldi	r23, 0x1E	; 30
    b99e:	85 e5       	ldi	r24, 0x55	; 85
    b9a0:	94 e1       	ldi	r25, 0x14	; 20
    b9a2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    b9a6:	85 e5       	ldi	r24, 0x55	; 85
    b9a8:	94 e1       	ldi	r25, 0x14	; 20
    b9aa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    b9ae:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    b9b2:	81 11       	cpse	r24, r1
    b9b4:	13 c0       	rjmp	.+38     	; 0xb9dc <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    b9b6:	8a e0       	ldi	r24, 0x0A	; 10
    b9b8:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    b9bc:	01 97       	sbiw	r24, 0x01	; 1
    b9be:	21 f0       	breq	.+8      	; 0xb9c8 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    b9c0:	61 e0       	ldi	r22, 0x01	; 1
    b9c2:	8a e0       	ldi	r24, 0x0A	; 10
    b9c4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    b9c8:	8b e0       	ldi	r24, 0x0B	; 11
    b9ca:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    b9ce:	01 97       	sbiw	r24, 0x01	; 1
    b9d0:	71 f1       	breq	.+92     	; 0xba2e <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    b9d2:	61 e0       	ldi	r22, 0x01	; 1
    b9d4:	8b e0       	ldi	r24, 0x0B	; 11
    b9d6:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    b9da:	29 c0       	rjmp	.+82     	; 0xba2e <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b9dc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    b9e0:	81 30       	cpi	r24, 0x01	; 1
    b9e2:	51 f4       	brne	.+20     	; 0xb9f8 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    b9e4:	6d e0       	ldi	r22, 0x0D	; 13
    b9e6:	7e e1       	ldi	r23, 0x1E	; 30
    b9e8:	85 e5       	ldi	r24, 0x55	; 85
    b9ea:	94 e1       	ldi	r25, 0x14	; 20
    b9ec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b9f0:	85 e5       	ldi	r24, 0x55	; 85
    b9f2:	94 e1       	ldi	r25, 0x14	; 20
    b9f4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    b9f8:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    b9fc:	62 50       	subi	r22, 0x02	; 2
    b9fe:	84 e0       	ldi	r24, 0x04	; 4
    ba00:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
    ba04:	81 11       	cpse	r24, r1
    ba06:	10 c0       	rjmp	.+32     	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    ba08:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    ba0c:	81 11       	cpse	r24, r1
    ba0e:	0c c0       	rjmp	.+24     	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    ba10:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    ba14:	81 30       	cpi	r24, 0x01	; 1
    ba16:	41 f0       	breq	.+16     	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    ba18:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
    ba1c:	81 30       	cpi	r24, 0x01	; 1
    ba1e:	21 f0       	breq	.+8      	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    ba20:	81 e0       	ldi	r24, 0x01	; 1
    ba22:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
    ba26:	02 c0       	rjmp	.+4      	; 0xba2c <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    ba28:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    ba2c:	f6 dc       	rcall	.-1556   	; 0xb41a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    ba2e:	10 92 d9 0d 	sts	0x0DD9, r1	; 0x800dd9 <_sExtra_Plot+0x55>
    ba32:	10 92 d8 0d 	sts	0x0DD8, r1	; 0x800dd8 <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    ba36:	10 92 df 0d 	sts	0x0DDF, r1	; 0x800ddf <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    ba3a:	8d e0       	ldi	r24, 0x0D	; 13
    ba3c:	8c 9f       	mul	r24, r28
    ba3e:	f0 01       	movw	r30, r0
    ba40:	8d 9f       	mul	r24, r29
    ba42:	f0 0d       	add	r31, r0
    ba44:	11 24       	eor	r1, r1
    ba46:	e9 54       	subi	r30, 0x49	; 73
    ba48:	f4 4f       	sbci	r31, 0xF4	; 244
    ba4a:	91 e0       	ldi	r25, 0x01	; 1
    ba4c:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    ba4e:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    ba52:	84 e6       	ldi	r24, 0x64	; 100
    ba54:	90 e0       	ldi	r25, 0x00	; 0
    ba56:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    ba5a:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba5e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ba62:	81 30       	cpi	r24, 0x01	; 1
    ba64:	31 f4       	brne	.+12     	; 0xba72 <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    ba66:	67 ef       	ldi	r22, 0xF7	; 247
    ba68:	7d e1       	ldi	r23, 0x1D	; 29
    ba6a:	85 e5       	ldi	r24, 0x55	; 85
    ba6c:	94 e1       	ldi	r25, 0x14	; 20
    ba6e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    ba72:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ba76:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    ba7a:	82 60       	ori	r24, 0x02	; 2
    ba7c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    ba80:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ba84:	34 c0       	rjmp	.+104    	; 0xbaee <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    ba86:	6f 5f       	subi	r22, 0xFF	; 255
    ba88:	7f 4f       	sbci	r23, 0xFF	; 255
    ba8a:	65 30       	cpi	r22, 0x05	; 5
    ba8c:	71 05       	cpc	r23, r1
    ba8e:	09 f0       	breq	.+2      	; 0xba92 <_Z22Update_Euro_Valve_DataPh+0x562>
    ba90:	6b cf       	rjmp	.-298    	; 0xb968 <_Z22Update_Euro_Valve_DataPh+0x438>
    ba92:	4f 5f       	subi	r20, 0xFF	; 255
    ba94:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    ba96:	4e 15       	cp	r20, r14
    ba98:	5f 05       	cpc	r21, r15
    ba9a:	09 f0       	breq	.+2      	; 0xba9e <_Z22Update_Euro_Valve_DataPh+0x56e>
    ba9c:	63 cf       	rjmp	.-314    	; 0xb964 <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    ba9e:	2f 5f       	subi	r18, 0xFF	; 255
    baa0:	3f 4f       	sbci	r19, 0xFF	; 255
    baa2:	7b 96       	adiw	r30, 0x1b	; 27
    baa4:	2e 30       	cpi	r18, 0x0E	; 14
    baa6:	31 05       	cpc	r19, r1
    baa8:	09 f0       	breq	.+2      	; 0xbaac <_Z22Update_Euro_Valve_DataPh+0x57c>
    baaa:	55 cf       	rjmp	.-342    	; 0xb956 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    baac:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    bab0:	81 30       	cpi	r24, 0x01	; 1
    bab2:	c9 f4       	brne	.+50     	; 0xbae6 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bab4:	63 ee       	ldi	r22, 0xE3	; 227
    bab6:	7d e1       	ldi	r23, 0x1D	; 29
    bab8:	85 e5       	ldi	r24, 0x55	; 85
    baba:	94 e1       	ldi	r25, 0x14	; 20
    babc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bac0:	85 e5       	ldi	r24, 0x55	; 85
    bac2:	94 e1       	ldi	r25, 0x14	; 20
    bac4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    bac8:	c5 e8       	ldi	r28, 0x85	; 133
    baca:	d3 e1       	ldi	r29, 0x13	; 19
					for(int k =0; k<count; k++)
    bacc:	c0 17       	cp	r28, r16
    bace:	d1 07       	cpc	r29, r17
    bad0:	51 f0       	breq	.+20     	; 0xbae6 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    bad2:	d8 01       	movw	r26, r16
    bad4:	6d 91       	ld	r22, X+
    bad6:	8d 01       	movw	r16, r26
    bad8:	4a e0       	ldi	r20, 0x0A	; 10
    bada:	50 e0       	ldi	r21, 0x00	; 0
    badc:	85 e5       	ldi	r24, 0x55	; 85
    bade:	94 e1       	ldi	r25, 0x14	; 20
    bae0:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bae4:	f3 cf       	rjmp	.-26     	; 0xbacc <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bae6:	85 e5       	ldi	r24, 0x55	; 85
    bae8:	94 e1       	ldi	r25, 0x14	; 20
    baea:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    baee:	89 e0       	ldi	r24, 0x09	; 9
    baf0:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    baf4:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    baf6:	06 c0       	rjmp	.+12     	; 0xbb04 <_Z22Update_Euro_Valve_DataPh+0x5d4>
    baf8:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bafa:	c7 30       	cpi	r28, 0x07	; 7
    bafc:	d1 05       	cpc	r29, r1
    bafe:	09 f0       	breq	.+2      	; 0xbb02 <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bb00:	24 cd       	rjmp	.-1464   	; 0xb54a <_Z22Update_Euro_Valve_DataPh+0x1a>
    bb02:	dd cd       	rjmp	.-1094   	; 0xb6be <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bb04:	df 91       	pop	r29
    bb06:	cf 91       	pop	r28
    bb08:	1f 91       	pop	r17
    bb0a:	0f 91       	pop	r16
    bb0c:	ff 90       	pop	r15
    bb0e:	ef 90       	pop	r14
    bb10:	08 95       	ret

0000bb12 <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bb12:	1f 93       	push	r17
    bb14:	cf 93       	push	r28
    bb16:	df 93       	push	r29
    bb18:	dc 01       	movw	r26, r24
    bb1a:	20 e0       	ldi	r18, 0x00	; 0
    bb1c:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bb1e:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bb20:	40 e0       	ldi	r20, 0x00	; 0
    bb22:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bb24:	82 9f       	mul	r24, r18
    bb26:	f0 01       	movw	r30, r0
    bb28:	83 9f       	mul	r24, r19
    bb2a:	f0 0d       	add	r31, r0
    bb2c:	11 24       	eor	r1, r1
    bb2e:	ea 56       	subi	r30, 0x6A	; 106
    bb30:	f4 4f       	sbci	r31, 0xF4	; 244
    bb32:	69 2f       	mov	r22, r25
    bb34:	70 e0       	ldi	r23, 0x00	; 0
    bb36:	ed 01       	movw	r28, r26
    bb38:	c6 0f       	add	r28, r22
    bb3a:	d7 1f       	adc	r29, r23
    bb3c:	6e 0f       	add	r22, r30
    bb3e:	7f 1f       	adc	r23, r31
    bb40:	18 81       	ld	r17, Y
    bb42:	eb 01       	movw	r28, r22
    bb44:	59 81       	ldd	r21, Y+1	; 0x01
    bb46:	15 17       	cp	r17, r21
    bb48:	11 f0       	breq	.+4      	; 0xbb4e <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bb4a:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bb4c:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bb4e:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bb50:	9f 5f       	subi	r25, 0xFF	; 255
    bb52:	96 30       	cpi	r25, 0x06	; 6
    bb54:	70 f3       	brcs	.-36     	; 0xbb32 <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bb56:	46 30       	cpi	r20, 0x06	; 6
    bb58:	09 f0       	breq	.+2      	; 0xbb5c <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bb5a:	5a c0       	rjmp	.+180    	; 0xbc10 <_Z25Update_Wireless_Pump_DataPh+0xfe>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb5c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    bb60:	81 30       	cpi	r24, 0x01	; 1
    bb62:	51 f4       	brne	.+20     	; 0xbb78 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bb64:	67 ec       	ldi	r22, 0xC7	; 199
    bb66:	7d e1       	ldi	r23, 0x1D	; 29
    bb68:	85 e5       	ldi	r24, 0x55	; 85
    bb6a:	94 e1       	ldi	r25, 0x14	; 20
    bb6c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bb70:	85 e5       	ldi	r24, 0x55	; 85
    bb72:	94 e1       	ldi	r25, 0x14	; 20
    bb74:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bb78:	c0 91 9a 13 	lds	r28, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
			pump_number = pump_number-1;
    bb7c:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bb7e:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4c>
    bb82:	82 30       	cpi	r24, 0x02	; 2
    bb84:	b9 f0       	breq	.+46     	; 0xbbb4 <_Z25Update_Wireless_Pump_DataPh+0xa2>
    bb86:	83 30       	cpi	r24, 0x03	; 3
    bb88:	01 f5       	brne	.+64     	; 0xbbca <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    bb8a:	8b e0       	ldi	r24, 0x0B	; 11
    bb8c:	c8 9f       	mul	r28, r24
    bb8e:	f0 01       	movw	r30, r0
    bb90:	11 24       	eor	r1, r1
    bb92:	ea 56       	subi	r30, 0x6A	; 106
    bb94:	f4 4f       	sbci	r31, 0xF4	; 244
    bb96:	92 85       	ldd	r25, Z+10	; 0x0a
    bb98:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
    bb9c:	89 2b       	or	r24, r25
    bb9e:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    bba0:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
    bba4:	90 91 99 13 	lds	r25, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
    bba8:	98 27       	eor	r25, r24
    bbaa:	89 27       	eor	r24, r25
    bbac:	98 27       	eor	r25, r24
    bbae:	91 87       	std	Z+9, r25	; 0x09
    bbb0:	80 87       	std	Z+8, r24	; 0x08
				}break;
    bbb2:	0b c0       	rjmp	.+22     	; 0xbbca <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    bbb4:	db e0       	ldi	r29, 0x0B	; 11
    bbb6:	cd 9f       	mul	r28, r29
    bbb8:	f0 01       	movw	r30, r0
    bbba:	11 24       	eor	r1, r1
    bbbc:	ea 56       	subi	r30, 0x6A	; 106
    bbbe:	f4 4f       	sbci	r31, 0xF4	; 244
    bbc0:	92 85       	ldd	r25, Z+10	; 0x0a
    bbc2:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
    bbc6:	89 2b       	or	r24, r25
    bbc8:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bbca:	84 e1       	ldi	r24, 0x14	; 20
    bbcc:	ec e7       	ldi	r30, 0x7C	; 124
    bbce:	f3 e1       	ldi	r31, 0x13	; 19
    bbd0:	df 01       	movw	r26, r30
    bbd2:	1d 92       	st	X+, r1
    bbd4:	8a 95       	dec	r24
    bbd6:	e9 f7       	brne	.-6      	; 0xbbd2 <_Z25Update_Wireless_Pump_DataPh+0xc0>
    bbd8:	df 01       	movw	r26, r30
    bbda:	db e0       	ldi	r29, 0x0B	; 11
    bbdc:	cd 9f       	mul	r28, r29
    bbde:	a0 01       	movw	r20, r0
    bbe0:	11 24       	eor	r1, r1
    bbe2:	80 e0       	ldi	r24, 0x00	; 0
    bbe4:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    bbe6:	fc 01       	movw	r30, r24
    bbe8:	e4 0f       	add	r30, r20
    bbea:	f5 1f       	adc	r31, r21
    bbec:	ea 56       	subi	r30, 0x6A	; 106
    bbee:	f4 4f       	sbci	r31, 0xF4	; 244
    bbf0:	21 81       	ldd	r18, Z+1	; 0x01
    bbf2:	2d 93       	st	X+, r18
    bbf4:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    bbf6:	86 30       	cpi	r24, 0x06	; 6
    bbf8:	91 05       	cpc	r25, r1
    bbfa:	a9 f7       	brne	.-22     	; 0xbbe6 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    bbfc:	81 e0       	ldi	r24, 0x01	; 1
    bbfe:	80 93 82 13 	sts	0x1382, r24	; 0x801382 <_sRuble_Parameters+0x38>
			
			_kLORA_SEND_DATA(count);
    bc02:	87 e0       	ldi	r24, 0x07	; 7
    bc04:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    bc08:	8c 2f       	mov	r24, r28
    bc0a:	58 dc       	rcall	.-1872   	; 0xb4bc <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    bc0c:	81 e0       	ldi	r24, 0x01	; 1
    bc0e:	07 c0       	rjmp	.+14     	; 0xbc1e <_Z25Update_Wireless_Pump_DataPh+0x10c>
    bc10:	2f 5f       	subi	r18, 0xFF	; 255
    bc12:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    bc14:	23 30       	cpi	r18, 0x03	; 3
    bc16:	31 05       	cpc	r19, r1
    bc18:	09 f0       	breq	.+2      	; 0xbc1c <_Z25Update_Wireless_Pump_DataPh+0x10a>
    bc1a:	82 cf       	rjmp	.-252    	; 0xbb20 <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    bc1c:	80 e0       	ldi	r24, 0x00	; 0
}
    bc1e:	df 91       	pop	r29
    bc20:	cf 91       	pop	r28
    bc22:	1f 91       	pop	r17
    bc24:	08 95       	ret

0000bc26 <_Z13Store_All_APNv>:
    bc26:	08 95       	ret

0000bc28 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    bc28:	cf 93       	push	r28
    bc2a:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    bc2c:	80 91 12 0c 	lds	r24, 0x0C12	; 0x800c12 <_ZZ16Check_GSM_SignalvE7counter>
    bc30:	8f 5f       	subi	r24, 0xFF	; 255
    bc32:	80 93 12 0c 	sts	0x0C12, r24	; 0x800c12 <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    bc36:	82 e1       	ldi	r24, 0x12	; 18
    bc38:	96 e1       	ldi	r25, 0x16	; 22
    bc3a:	0e 94 e2 ce 	call	0x19dc4	; 0x19dc4 <_ZN14HardwareSerial9availableEv>
    bc3e:	89 2b       	or	r24, r25
    bc40:	f1 f5       	brne	.+124    	; 0xbcbe <_Z16Check_GSM_Signalv+0x96>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    bc42:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xaf>
    bc46:	82 30       	cpi	r24, 0x02	; 2
    bc48:	c9 f4       	brne	.+50     	; 0xbc7c <_Z16Check_GSM_Signalv+0x54>
	{
		Reading_Time = _kSET;
    bc4a:	81 e0       	ldi	r24, 0x01	; 1
    bc4c:	80 93 93 0c 	sts	0x0C93, r24	; 0x800c93 <Reading_Time>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */	
    bc50:	0e 94 02 69 	call	0xd204	; 0xd204 <_Z18_kGSM_SIG_STRENGTHv>
    bc54:	ec 01       	movw	r28, r24
		Reading_Time = _kRESET;	
    bc56:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <Reading_Time>
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    bc5a:	4a e0       	ldi	r20, 0x0A	; 10
    bc5c:	50 e0       	ldi	r21, 0x00	; 0
    bc5e:	bc 01       	movw	r22, r24
    bc60:	85 e5       	ldi	r24, 0x55	; 85
    bc62:	94 e1       	ldi	r25, 0x14	; 20
    bc64:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    bc68:	c4 31       	cpi	r28, 0x14	; 20
    bc6a:	d1 05       	cpc	r29, r1
    bc6c:	4c f0       	brlt	.+18     	; 0xbc80 <_Z16Check_GSM_Signalv+0x58>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bc6e:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    bc72:	88 7f       	andi	r24, 0xF8	; 248
    bc74:	88 60       	ori	r24, 0x08	; 8
    bc76:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
    bc7a:	02 c0       	rjmp	.+4      	; 0xbc80 <_Z16Check_GSM_Signalv+0x58>
		Reading_Time = _kRESET;	
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    bc7c:	c0 e0       	ldi	r28, 0x00	; 0
    bc7e:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    bc80:	ce 01       	movw	r24, r28
    bc82:	0e 97       	sbiw	r24, 0x0e	; 14
    bc84:	06 97       	sbiw	r24, 0x06	; 6
    bc86:	30 f4       	brcc	.+12     	; 0xbc94 <_Z16Check_GSM_Signalv+0x6c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bc88:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    bc8c:	84 7f       	andi	r24, 0xF4	; 244
    bc8e:	84 60       	ori	r24, 0x04	; 4
    bc90:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    bc94:	ce 01       	movw	r24, r28
    bc96:	06 97       	sbiw	r24, 0x06	; 6
    bc98:	08 97       	sbiw	r24, 0x08	; 8
    bc9a:	28 f4       	brcc	.+10     	; 0xbca6 <_Z16Check_GSM_Signalv+0x7e>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bc9c:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    bca0:	82 7f       	andi	r24, 0xF2	; 242
    bca2:	82 60       	ori	r24, 0x02	; 2
    bca4:	0a c0       	rjmp	.+20     	; 0xbcba <_Z16Check_GSM_Signalv+0x92>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    bca6:	c5 30       	cpi	r28, 0x05	; 5
    bca8:	d1 05       	cpc	r29, r1
    bcaa:	1c f0       	brlt	.+6      	; 0xbcb2 <_Z16Check_GSM_Signalv+0x8a>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    bcac:	c3 36       	cpi	r28, 0x63	; 99
    bcae:	d1 05       	cpc	r29, r1
    bcb0:	34 f0       	brlt	.+12     	; 0xbcbe <_Z16Check_GSM_Signalv+0x96>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    bcb2:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    bcb6:	81 7f       	andi	r24, 0xF1	; 241
    bcb8:	81 60       	ori	r24, 0x01	; 1
    bcba:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
	}
	
}
    bcbe:	df 91       	pop	r29
    bcc0:	cf 91       	pop	r28
    bcc2:	08 95       	ret

0000bcc4 <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    bcc4:	8f 92       	push	r8
    bcc6:	9f 92       	push	r9
    bcc8:	af 92       	push	r10
    bcca:	bf 92       	push	r11
    bccc:	ef 92       	push	r14
    bcce:	ff 92       	push	r15
    bcd0:	0f 93       	push	r16
    bcd2:	1f 93       	push	r17
    bcd4:	cf 93       	push	r28
    bcd6:	df 93       	push	r29
	char i;
	
	for(unsigned char count=0; count <2; count++)
    bcd8:	10 e0       	ldi	r17, 0x00	; 0
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    bcda:	84 ed       	ldi	r24, 0xD4	; 212
    bcdc:	e8 2e       	mov	r14, r24
    bcde:	83 e0       	ldi	r24, 0x03	; 3
    bce0:	f8 2e       	mov	r15, r24
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
	{
		if(count == 0)
    bce2:	11 11       	cpse	r17, r1
    bce4:	1f c0       	rjmp	.+62     	; 0xbd24 <_Z14Get_Local_Timev+0x60>
		{
			Reset_Buffer();
    bce6:	6b d7       	rcall	.+3798   	; 0xcbbe <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZU=1"));
    bce8:	68 ec       	ldi	r22, 0xC8	; 200
    bcea:	70 e2       	ldi	r23, 0x20	; 32
    bcec:	82 e1       	ldi	r24, 0x12	; 18
    bcee:	96 e1       	ldi	r25, 0x16	; 22
    bcf0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
    bcf4:	02 e0       	ldi	r16, 0x02	; 2
    bcf6:	28 eb       	ldi	r18, 0xB8	; 184
    bcf8:	3b e0       	ldi	r19, 0x0B	; 11
    bcfa:	40 e0       	ldi	r20, 0x00	; 0
    bcfc:	50 e0       	ldi	r21, 0x00	; 0
    bcfe:	6e e1       	ldi	r22, 0x1E	; 30
    bd00:	73 e0       	ldi	r23, 0x03	; 3
    bd02:	80 e0       	ldi	r24, 0x00	; 0
    bd04:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    bd06:	c0 d7       	rcall	.+3968   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    bd08:	5a d7       	rcall	.+3764   	; 0xcbbe <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZR=1"));
    bd0a:	6e eb       	ldi	r22, 0xBE	; 190
    bd0c:	70 e2       	ldi	r23, 0x20	; 32
    bd0e:	82 e1       	ldi	r24, 0x12	; 18
    bd10:	96 e1       	ldi	r25, 0x16	; 22
    bd12:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK1",  NULL,3000,2);
    bd16:	28 eb       	ldi	r18, 0xB8	; 184
    bd18:	3b e0       	ldi	r19, 0x0B	; 11
    bd1a:	40 e0       	ldi	r20, 0x00	; 0
    bd1c:	50 e0       	ldi	r21, 0x00	; 0
    bd1e:	61 e2       	ldi	r22, 0x21	; 33
    bd20:	73 e0       	ldi	r23, 0x03	; 3
		}
		else
		{
			Reset_Buffer();
    bd22:	1e c0       	rjmp	.+60     	; 0xbd60 <_Z14Get_Local_Timev+0x9c>
    bd24:	4c d7       	rcall	.+3736   	; 0xcbbe <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    bd26:	61 ea       	ldi	r22, 0xA1	; 161
    bd28:	70 e2       	ldi	r23, 0x20	; 32
    bd2a:	82 e1       	ldi	r24, 0x12	; 18
    bd2c:	96 e1       	ldi	r25, 0x16	; 22
    bd2e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,5000,2);
    bd32:	02 e0       	ldi	r16, 0x02	; 2
    bd34:	28 e8       	ldi	r18, 0x88	; 136
    bd36:	33 e1       	ldi	r19, 0x13	; 19
    bd38:	40 e0       	ldi	r20, 0x00	; 0
    bd3a:	50 e0       	ldi	r21, 0x00	; 0
    bd3c:	6e e1       	ldi	r22, 0x1E	; 30
    bd3e:	73 e0       	ldi	r23, 0x03	; 3
    bd40:	80 e0       	ldi	r24, 0x00	; 0
    bd42:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    bd44:	a1 d7       	rcall	.+3906   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    bd46:	3b d7       	rcall	.+3702   	; 0xcbbe <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP"));
    bd48:	69 e9       	ldi	r22, 0x99	; 153
    bd4a:	70 e2       	ldi	r23, 0x20	; 32
    bd4c:	82 e1       	ldi	r24, 0x12	; 18
    bd4e:	96 e1       	ldi	r25, 0x16	; 22
    bd50:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    bd54:	28 eb       	ldi	r18, 0xB8	; 184
    bd56:	3b e0       	ldi	r19, 0x0B	; 11
    bd58:	40 e0       	ldi	r20, 0x00	; 0
    bd5a:	50 e0       	ldi	r21, 0x00	; 0
    bd5c:	65 e2       	ldi	r22, 0x25	; 37
    bd5e:	73 e0       	ldi	r23, 0x03	; 3
    bd60:	80 e0       	ldi	r24, 0x00	; 0
    bd62:	90 e0       	ldi	r25, 0x00	; 0
		}
		

		Reset_Buffer();
    bd64:	91 d7       	rcall	.+3874   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    bd66:	2b d7       	rcall	.+3670   	; 0xcbbe <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CCLK?"));
    bd68:	60 e9       	ldi	r22, 0x90	; 144
    bd6a:	70 e2       	ldi	r23, 0x20	; 32
    bd6c:	82 e1       	ldi	r24, 0x12	; 18
    bd6e:	96 e1       	ldi	r25, 0x16	; 22
    bd70:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK", NULL,2000,2);
    bd74:	02 e0       	ldi	r16, 0x02	; 2
    bd76:	20 ed       	ldi	r18, 0xD0	; 208
    bd78:	37 e0       	ldi	r19, 0x07	; 7
    bd7a:	40 e0       	ldi	r20, 0x00	; 0
    bd7c:	50 e0       	ldi	r21, 0x00	; 0
    bd7e:	6e e1       	ldi	r22, 0x1E	; 30
    bd80:	73 e0       	ldi	r23, 0x03	; 3
    bd82:	80 e0       	ldi	r24, 0x00	; 0
    bd84:	90 e0       	ldi	r25, 0x00	; 0
    bd86:	80 d7       	rcall	.+3840   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
    bd88:	6e e2       	ldi	r22, 0x2E	; 46
    bd8a:	73 e0       	ldi	r23, 0x03	; 3
    bd8c:	8c e6       	ldi	r24, 0x6C	; 108
    bd8e:	9f e0       	ldi	r25, 0x0F	; 15
    bd90:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    bd94:	89 2b       	or	r24, r25
    bd96:	09 f4       	brne	.+2      	; 0xbd9a <_Z14Get_Local_Timev+0xd6>
    bd98:	0f c1       	rjmp	.+542    	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>
    bd9a:	80 e0       	ldi	r24, 0x00	; 0
    bd9c:	90 e0       	ldi	r25, 0x00	; 0
    bd9e:	c8 2f       	mov	r28, r24
		{
			for(i=0;i<20;i++)
			{
				if(_gPub_Buff[i] == '+' && _gPub_Buff[i+5] == ':')
    bda0:	fc 01       	movw	r30, r24
    bda2:	e4 59       	subi	r30, 0x94	; 148
    bda4:	f0 4f       	sbci	r31, 0xF0	; 240
    bda6:	20 81       	ld	r18, Z
    bda8:	2b 32       	cpi	r18, 0x2B	; 43
    bdaa:	31 f4       	brne	.+12     	; 0xbdb8 <_Z14Get_Local_Timev+0xf4>
    bdac:	fc 01       	movw	r30, r24
    bdae:	ef 58       	subi	r30, 0x8F	; 143
    bdb0:	f0 4f       	sbci	r31, 0xF0	; 240
    bdb2:	20 81       	ld	r18, Z
    bdb4:	2a 33       	cpi	r18, 0x3A	; 58
    bdb6:	29 f0       	breq	.+10     	; 0xbdc2 <_Z14Get_Local_Timev+0xfe>
    bdb8:	01 96       	adiw	r24, 0x01	; 1
		_kSERIAL_AT.println(F("AT+CCLK?"));
		Send_AT_Command(NULL, "OK", NULL,2000,2);
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
		{
			for(i=0;i<20;i++)
    bdba:	84 31       	cpi	r24, 0x14	; 20
    bdbc:	91 05       	cpc	r25, r1
    bdbe:	79 f7       	brne	.-34     	; 0xbd9e <_Z14Get_Local_Timev+0xda>
    bdc0:	c4 e1       	ldi	r28, 0x14	; 20
		{
			return;
		}
		
		/*************************************************** UPDATE TIME AND DATE *********************************************/
		_sRuble_Parameters.Update_Local_Time[0] = ((_gPub_Buff[i+17]-0x30)*10) + (_gPub_Buff[i+18]-0x30);    /* hold hour */
    bdc2:	d0 e0       	ldi	r29, 0x00	; 0
    bdc4:	fe 01       	movw	r30, r28
    bdc6:	e3 58       	subi	r30, 0x83	; 131
    bdc8:	f0 4f       	sbci	r31, 0xF0	; 240
    bdca:	20 81       	ld	r18, Z
    bdcc:	fe 01       	movw	r30, r28
    bdce:	e2 58       	subi	r30, 0x82	; 130
    bdd0:	f0 4f       	sbci	r31, 0xF0	; 240
    bdd2:	90 81       	ld	r25, Z
    bdd4:	22 0f       	add	r18, r18
    bdd6:	20 56       	subi	r18, 0x60	; 96
    bdd8:	82 2f       	mov	r24, r18
    bdda:	88 0f       	add	r24, r24
    bddc:	88 0f       	add	r24, r24
    bdde:	28 0f       	add	r18, r24
    bde0:	90 53       	subi	r25, 0x30	; 48
    bde2:	82 2f       	mov	r24, r18
    bde4:	89 0f       	add	r24, r25
    bde6:	80 93 76 13 	sts	0x1376, r24	; 0x801376 <_sRuble_Parameters+0x2c>
		_sRuble_Parameters.Update_Local_Time[1] = ((_gPub_Buff[i+20]-0X30)*10) + (_gPub_Buff[i+21]-0X30);    /* hold minute */
    bdea:	fe 01       	movw	r30, r28
    bdec:	e0 58       	subi	r30, 0x80	; 128
    bdee:	f0 4f       	sbci	r31, 0xF0	; 240
    bdf0:	90 81       	ld	r25, Z
    bdf2:	fe 01       	movw	r30, r28
    bdf4:	ef 57       	subi	r30, 0x7F	; 127
    bdf6:	f0 4f       	sbci	r31, 0xF0	; 240
    bdf8:	30 81       	ld	r19, Z
    bdfa:	99 0f       	add	r25, r25
    bdfc:	90 56       	subi	r25, 0x60	; 96
    bdfe:	29 2f       	mov	r18, r25
    be00:	22 0f       	add	r18, r18
    be02:	22 0f       	add	r18, r18
    be04:	29 0f       	add	r18, r25
    be06:	30 53       	subi	r19, 0x30	; 48
    be08:	42 2f       	mov	r20, r18
    be0a:	43 0f       	add	r20, r19
    be0c:	40 93 77 13 	sts	0x1377, r20	; 0x801377 <_sRuble_Parameters+0x2d>
		_sRuble_Parameters.Update_Local_Time[2] = ((_gPub_Buff[i+23]-0X30)*10) + (_gPub_Buff[i+24]-0X30);    /* hold second */
    be10:	fe 01       	movw	r30, r28
    be12:	ed 57       	subi	r30, 0x7D	; 125
    be14:	f0 4f       	sbci	r31, 0xF0	; 240
    be16:	90 81       	ld	r25, Z
    be18:	fe 01       	movw	r30, r28
    be1a:	ec 57       	subi	r30, 0x7C	; 124
    be1c:	f0 4f       	sbci	r31, 0xF0	; 240
    be1e:	20 81       	ld	r18, Z
    be20:	99 0f       	add	r25, r25
    be22:	90 56       	subi	r25, 0x60	; 96
    be24:	39 2f       	mov	r19, r25
    be26:	33 0f       	add	r19, r19
    be28:	33 0f       	add	r19, r19
    be2a:	93 0f       	add	r25, r19
    be2c:	20 53       	subi	r18, 0x30	; 48
    be2e:	59 2f       	mov	r21, r25
    be30:	52 0f       	add	r21, r18
    be32:	50 93 78 13 	sts	0x1378, r21	; 0x801378 <_sRuble_Parameters+0x2e>
		
		_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    be36:	28 2f       	mov	r18, r24
    be38:	30 e0       	ldi	r19, 0x00	; 0
    be3a:	a0 e1       	ldi	r26, 0x10	; 16
    be3c:	be e0       	ldi	r27, 0x0E	; 14
    be3e:	0e 94 a3 e7 	call	0x1cf46	; 0x1cf46 <__umulhisi3>
    be42:	4b 01       	movw	r8, r22
    be44:	5c 01       	movw	r10, r24
    be46:	24 2f       	mov	r18, r20
    be48:	30 e0       	ldi	r19, 0x00	; 0
    be4a:	ac e3       	ldi	r26, 0x3C	; 60
    be4c:	b0 e0       	ldi	r27, 0x00	; 0
    be4e:	0e 94 a3 e7 	call	0x1cf46	; 0x1cf46 <__umulhisi3>
    be52:	dc 01       	movw	r26, r24
    be54:	cb 01       	movw	r24, r22
    be56:	88 0d       	add	r24, r8
    be58:	99 1d       	adc	r25, r9
    be5a:	aa 1d       	adc	r26, r10
    be5c:	bb 1d       	adc	r27, r11
    be5e:	85 0f       	add	r24, r21
    be60:	91 1d       	adc	r25, r1
    be62:	a1 1d       	adc	r26, r1
    be64:	b1 1d       	adc	r27, r1
    be66:	80 93 5a 13 	sts	0x135A, r24	; 0x80135a <_sRuble_Parameters+0x10>
    be6a:	90 93 5b 13 	sts	0x135B, r25	; 0x80135b <_sRuble_Parameters+0x11>
    be6e:	a0 93 5c 13 	sts	0x135C, r26	; 0x80135c <_sRuble_Parameters+0x12>
    be72:	b0 93 5d 13 	sts	0x135D, r27	; 0x80135d <_sRuble_Parameters+0x13>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    be76:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    be7a:	81 30       	cpi	r24, 0x01	; 1
    be7c:	91 f4       	brne	.+36     	; 0xbea2 <_Z14Get_Local_Timev+0x1de>
		{
			Serial.println();
    be7e:	85 e5       	ldi	r24, 0x55	; 85
    be80:	94 e1       	ldi	r25, 0x14	; 20
    be82:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
			_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    be86:	40 91 5a 13 	lds	r20, 0x135A	; 0x80135a <_sRuble_Parameters+0x10>
    be8a:	50 91 5b 13 	lds	r21, 0x135B	; 0x80135b <_sRuble_Parameters+0x11>
    be8e:	60 91 5c 13 	lds	r22, 0x135C	; 0x80135c <_sRuble_Parameters+0x12>
    be92:	70 91 5d 13 	lds	r23, 0x135D	; 0x80135d <_sRuble_Parameters+0x13>
    be96:	2a e0       	ldi	r18, 0x0A	; 10
    be98:	30 e0       	ldi	r19, 0x00	; 0
    be9a:	85 e5       	ldi	r24, 0x55	; 85
    be9c:	94 e1       	ldi	r25, 0x14	; 20
    be9e:	0e 94 cd d1 	call	0x1a39a	; 0x1a39a <_ZN5Print7printlnEmi>
		}
		
		_sRuble_Parameters.Update_Local_Date[2] = ((_gPub_Buff[i+8]-0X30)*10) +  (_gPub_Buff[i+9]-0X30);      /* hold date */
    bea2:	fe 01       	movw	r30, r28
    bea4:	ec 58       	subi	r30, 0x8C	; 140
    bea6:	f0 4f       	sbci	r31, 0xF0	; 240
    bea8:	80 81       	ld	r24, Z
    beaa:	fe 01       	movw	r30, r28
    beac:	eb 58       	subi	r30, 0x8B	; 139
    beae:	f0 4f       	sbci	r31, 0xF0	; 240
    beb0:	90 81       	ld	r25, Z
    beb2:	88 0f       	add	r24, r24
    beb4:	80 56       	subi	r24, 0x60	; 96
    beb6:	28 2f       	mov	r18, r24
    beb8:	22 0f       	add	r18, r18
    beba:	22 0f       	add	r18, r18
    bebc:	82 0f       	add	r24, r18
    bebe:	90 53       	subi	r25, 0x30	; 48
    bec0:	89 0f       	add	r24, r25
    bec2:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x31>
		_sRuble_Parameters.Update_Local_Date[1] = ((_gPub_Buff[i+11]-0X30)*10) + (_gPub_Buff[i+12]-0X30);     /* hold month */
    bec6:	fe 01       	movw	r30, r28
    bec8:	e9 58       	subi	r30, 0x89	; 137
    beca:	f0 4f       	sbci	r31, 0xF0	; 240
    becc:	80 81       	ld	r24, Z
    bece:	fe 01       	movw	r30, r28
    bed0:	e8 58       	subi	r30, 0x88	; 136
    bed2:	f0 4f       	sbci	r31, 0xF0	; 240
    bed4:	90 81       	ld	r25, Z
    bed6:	88 0f       	add	r24, r24
    bed8:	80 56       	subi	r24, 0x60	; 96
    beda:	28 2f       	mov	r18, r24
    bedc:	22 0f       	add	r18, r18
    bede:	22 0f       	add	r18, r18
    bee0:	82 0f       	add	r24, r18
    bee2:	90 53       	subi	r25, 0x30	; 48
    bee4:	89 0f       	add	r24, r25
    bee6:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x30>
		_sRuble_Parameters.Update_Local_Date[0] = ((_gPub_Buff[i+14]-0X30)*10) + (_gPub_Buff[i+15]-0X30);
    beea:	fe 01       	movw	r30, r28
    beec:	e6 58       	subi	r30, 0x86	; 134
    beee:	f0 4f       	sbci	r31, 0xF0	; 240
    bef0:	80 81       	ld	r24, Z
    bef2:	c5 58       	subi	r28, 0x85	; 133
    bef4:	d0 4f       	sbci	r29, 0xF0	; 240
    bef6:	98 81       	ld	r25, Y
    bef8:	88 0f       	add	r24, r24
    befa:	80 56       	subi	r24, 0x60	; 96
    befc:	28 2f       	mov	r18, r24
    befe:	22 0f       	add	r18, r18
    bf00:	22 0f       	add	r18, r18
    bf02:	82 0f       	add	r24, r18
    bf04:	90 53       	subi	r25, 0x30	; 48
    bf06:	89 0f       	add	r24, r25
    bf08:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x2f>
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    bf0c:	ec e6       	ldi	r30, 0x6C	; 108
    bf0e:	ff e0       	ldi	r31, 0x0F	; 15
    bf10:	df 01       	movw	r26, r30
    bf12:	c7 01       	movw	r24, r14
    bf14:	1d 92       	st	X+, r1
    bf16:	01 97       	sbiw	r24, 0x01	; 1
    bf18:	e9 f7       	brne	.-6      	; 0xbf14 <_Z14Get_Local_Timev+0x250>
		
		_kSERAIL_MON_WRITE("my date : ");
    bf1a:	65 e8       	ldi	r22, 0x85	; 133
    bf1c:	70 e2       	ldi	r23, 0x20	; 32
    bf1e:	85 e5       	ldi	r24, 0x55	; 85
    bf20:	94 e1       	ldi	r25, 0x14	; 20
    bf22:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    bf26:	4a e0       	ldi	r20, 0x0A	; 10
    bf28:	50 e0       	ldi	r21, 0x00	; 0
    bf2a:	60 91 79 13 	lds	r22, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
    bf2e:	85 e5       	ldi	r24, 0x55	; 85
    bf30:	94 e1       	ldi	r25, 0x14	; 20
    bf32:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    bf36:	85 e5       	ldi	r24, 0x55	; 85
    bf38:	94 e1       	ldi	r25, 0x14	; 20
    bf3a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    bf3e:	69 e7       	ldi	r22, 0x79	; 121
    bf40:	70 e2       	ldi	r23, 0x20	; 32
    bf42:	85 e5       	ldi	r24, 0x55	; 85
    bf44:	94 e1       	ldi	r25, 0x14	; 20
    bf46:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    bf4a:	4a e0       	ldi	r20, 0x0A	; 10
    bf4c:	50 e0       	ldi	r21, 0x00	; 0
    bf4e:	60 91 7a 13 	lds	r22, 0x137A	; 0x80137a <_sRuble_Parameters+0x30>
    bf52:	85 e5       	ldi	r24, 0x55	; 85
    bf54:	94 e1       	ldi	r25, 0x14	; 20
    bf56:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    bf5a:	85 e5       	ldi	r24, 0x55	; 85
    bf5c:	94 e1       	ldi	r25, 0x14	; 20
    bf5e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    bf62:	6e e6       	ldi	r22, 0x6E	; 110
    bf64:	70 e2       	ldi	r23, 0x20	; 32
    bf66:	85 e5       	ldi	r24, 0x55	; 85
    bf68:	94 e1       	ldi	r25, 0x14	; 20
    bf6a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    bf6e:	4a e0       	ldi	r20, 0x0A	; 10
    bf70:	50 e0       	ldi	r21, 0x00	; 0
    bf72:	60 91 7b 13 	lds	r22, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    bf76:	85 e5       	ldi	r24, 0x55	; 85
    bf78:	94 e1       	ldi	r25, 0x14	; 20
    bf7a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    bf7e:	85 e5       	ldi	r24, 0x55	; 85
    bf80:	94 e1       	ldi	r25, 0x14	; 20
    bf82:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		
		if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    bf86:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2c>
    bf8a:	88 31       	cpi	r24, 0x18	; 24
    bf8c:	a8 f4       	brcc	.+42     	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>
    bf8e:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x2d>
    bf92:	8c 33       	cpi	r24, 0x3C	; 60
    bf94:	88 f4       	brcc	.+34     	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>
    bf96:	80 91 78 13 	lds	r24, 0x1378	; 0x801378 <_sRuble_Parameters+0x2e>
    bf9a:	8c 33       	cpi	r24, 0x3C	; 60
    bf9c:	68 f4       	brcc	.+26     	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>
		{
			return;
		}
		_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    bf9e:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    bfa2:	81 60       	ori	r24, 0x01	; 1
    bfa4:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
		
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
    bfa8:	80 91 7b 13 	lds	r24, 0x137B	; 0x80137b <_sRuble_Parameters+0x31>
    bfac:	86 34       	cpi	r24, 0x46	; 70
    bfae:	21 f4       	brne	.+8      	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>

void Get_Local_Time(void)
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
    bfb0:	1f 5f       	subi	r17, 0xFF	; 255
    bfb2:	12 30       	cpi	r17, 0x02	; 2
    bfb4:	09 f0       	breq	.+2      	; 0xbfb8 <_Z14Get_Local_Timev+0x2f4>
    bfb6:	95 ce       	rjmp	.-726    	; 0xbce2 <_Z14Get_Local_Timev+0x1e>
		{
			return;
		}
	}
	
}
    bfb8:	df 91       	pop	r29
    bfba:	cf 91       	pop	r28
    bfbc:	1f 91       	pop	r17
    bfbe:	0f 91       	pop	r16
    bfc0:	ff 90       	pop	r15
    bfc2:	ef 90       	pop	r14
    bfc4:	bf 90       	pop	r11
    bfc6:	af 90       	pop	r10
    bfc8:	9f 90       	pop	r9
    bfca:	8f 90       	pop	r8
    bfcc:	08 95       	ret

0000bfce <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    bfce:	ff 92       	push	r15
    bfd0:	0f 93       	push	r16
    bfd2:	1f 93       	push	r17
    bfd4:	cf 93       	push	r28
    bfd6:	df 93       	push	r29
    bfd8:	cd b7       	in	r28, 0x3d	; 61
    bfda:	de b7       	in	r29, 0x3e	; 62
    bfdc:	c4 56       	subi	r28, 0x64	; 100
    bfde:	d1 09       	sbc	r29, r1
    bfe0:	0f b6       	in	r0, 0x3f	; 63
    bfe2:	f8 94       	cli
    bfe4:	de bf       	out	0x3e, r29	; 62
    bfe6:	0f be       	out	0x3f, r0	; 63
    bfe8:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    bfea:	3a d7       	rcall	.+3700   	; 0xce60 <_Z20Check_Gsm_Connectionv>
    bfec:	f8 2e       	mov	r15, r24
    bfee:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    bff2:	ff 20       	and	r15, r15
    bff4:	09 f4       	brne	.+2      	; 0xbff8 <_Z16Gsm_Gprs_Networkv+0x2a>
    bff6:	bf c0       	rjmp	.+382    	; 0xc176 <_Z16Gsm_Gprs_Networkv+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    bff8:	81 30       	cpi	r24, 0x01	; 1
    bffa:	51 f4       	brne	.+20     	; 0xc010 <_Z16Gsm_Gprs_Networkv+0x42>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    bffc:	6e e4       	ldi	r22, 0x4E	; 78
    bffe:	70 e2       	ldi	r23, 0x20	; 32
    c000:	85 e5       	ldi	r24, 0x55	; 85
    c002:	94 e1       	ldi	r25, 0x14	; 20
    c004:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c008:	85 e5       	ldi	r24, 0x55	; 85
    c00a:	94 e1       	ldi	r25, 0x14	; 20
    c00c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c010:	8e 01       	movw	r16, r28
    c012:	0f 5f       	subi	r16, 0xFF	; 255
    c014:	1f 4f       	sbci	r17, 0xFF	; 255
    c016:	84 e6       	ldi	r24, 0x64	; 100
    c018:	f8 01       	movw	r30, r16
    c01a:	11 92       	st	Z+, r1
    c01c:	8a 95       	dec	r24
    c01e:	e9 f7       	brne	.-6      	; 0xc01a <_Z16Gsm_Gprs_Networkv+0x4c>
		Get_Operator_Name(temp_data);
    c020:	c8 01       	movw	r24, r16
    c022:	d0 d7       	rcall	.+4000   	; 0xcfc4 <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c024:	64 e3       	ldi	r22, 0x34	; 52
    c026:	73 e0       	ldi	r23, 0x03	; 3
    c028:	c8 01       	movw	r24, r16
    c02a:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c02e:	89 2b       	or	r24, r25
    c030:	39 f4       	brne	.+14     	; 0xc040 <_Z16Gsm_Gprs_Networkv+0x72>
    c032:	68 e3       	ldi	r22, 0x38	; 56
    c034:	73 e0       	ldi	r23, 0x03	; 3
    c036:	c8 01       	movw	r24, r16
    c038:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c03c:	89 2b       	or	r24, r25
    c03e:	49 f0       	breq	.+18     	; 0xc052 <_Z16Gsm_Gprs_Networkv+0x84>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c040:	6e e3       	ldi	r22, 0x3E	; 62
    c042:	73 e0       	ldi	r23, 0x03	; 3
    c044:	87 e5       	ldi	r24, 0x57	; 87
    c046:	9d e0       	ldi	r25, 0x0D	; 13
    c048:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c04c:	65 e4       	ldi	r22, 0x45	; 69
    c04e:	70 e2       	ldi	r23, 0x20	; 32
    c050:	2d c0       	rjmp	.+90     	; 0xc0ac <_Z16Gsm_Gprs_Networkv+0xde>
			_kSERIAL_MON_CLEAR();
			check_sim = 1;
		}
		
		else if (strstr(temp_data,"Air") != 0 || strstr(temp_data,"air") != 0)
    c052:	62 e4       	ldi	r22, 0x42	; 66
    c054:	73 e0       	ldi	r23, 0x03	; 3
    c056:	c8 01       	movw	r24, r16
    c058:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c05c:	89 2b       	or	r24, r25
    c05e:	39 f4       	brne	.+14     	; 0xc06e <_Z16Gsm_Gprs_Networkv+0xa0>
    c060:	66 e4       	ldi	r22, 0x46	; 70
    c062:	73 e0       	ldi	r23, 0x03	; 3
    c064:	c8 01       	movw	r24, r16
    c066:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c06a:	89 2b       	or	r24, r25
    c06c:	49 f0       	breq	.+18     	; 0xc080 <_Z16Gsm_Gprs_Networkv+0xb2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"airtelgprs.com");
    c06e:	6a e4       	ldi	r22, 0x4A	; 74
    c070:	73 e0       	ldi	r23, 0x03	; 3
    c072:	87 e5       	ldi	r24, 0x57	; 87
    c074:	9d e0       	ldi	r25, 0x0D	; 13
    c076:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
			_kSERAIL_MON_WRITE("Airtel");
    c07a:	6e e3       	ldi	r22, 0x3E	; 62
    c07c:	70 e2       	ldi	r23, 0x20	; 32
    c07e:	26 c0       	rjmp	.+76     	; 0xc0cc <_Z16Gsm_Gprs_Networkv+0xfe>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c080:	69 e5       	ldi	r22, 0x59	; 89
    c082:	73 e0       	ldi	r23, 0x03	; 3
    c084:	c8 01       	movw	r24, r16
    c086:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c08a:	89 2b       	or	r24, r25
    c08c:	39 f4       	brne	.+14     	; 0xc09c <_Z16Gsm_Gprs_Networkv+0xce>
    c08e:	6d e5       	ldi	r22, 0x5D	; 93
    c090:	73 e0       	ldi	r23, 0x03	; 3
    c092:	c8 01       	movw	r24, r16
    c094:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    c098:	89 2b       	or	r24, r25
    c09a:	b1 f0       	breq	.+44     	; 0xc0c8 <_Z16Gsm_Gprs_Networkv+0xfa>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c09c:	61 e6       	ldi	r22, 0x61	; 97
    c09e:	73 e0       	ldi	r23, 0x03	; 3
    c0a0:	87 e5       	ldi	r24, 0x57	; 87
    c0a2:	9d e0       	ldi	r25, 0x0D	; 13
    c0a4:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c0a8:	6a e3       	ldi	r22, 0x3A	; 58
    c0aa:	70 e2       	ldi	r23, 0x20	; 32
    c0ac:	85 e5       	ldi	r24, 0x55	; 85
    c0ae:	94 e1       	ldi	r25, 0x14	; 20
    c0b0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c0b4:	85 e5       	ldi	r24, 0x55	; 85
    c0b6:	94 e1       	ldi	r25, 0x14	; 20
    c0b8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c0bc:	87 e5       	ldi	r24, 0x57	; 87
    c0be:	9d e0       	ldi	r25, 0x0D	; 13
    c0c0:	ae d7       	rcall	.+3932   	; 0xd01e <_Z12Gprs_ConnectPc>
    c0c2:	81 11       	cpse	r24, r1
    c0c4:	48 c0       	rjmp	.+144    	; 0xc156 <_Z16Gsm_Gprs_Networkv+0x188>
    c0c6:	0b c0       	rjmp	.+22     	; 0xc0de <_Z16Gsm_Gprs_Networkv+0x110>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c0c8:	62 e2       	ldi	r22, 0x22	; 34
    c0ca:	70 e2       	ldi	r23, 0x20	; 32
    c0cc:	85 e5       	ldi	r24, 0x55	; 85
    c0ce:	94 e1       	ldi	r25, 0x14	; 20
    c0d0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c0d4:	85 e5       	ldi	r24, 0x55	; 85
    c0d6:	94 e1       	ldi	r25, 0x14	; 20
    c0d8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    c0dc:	3c c0       	rjmp	.+120    	; 0xc156 <_Z16Gsm_Gprs_Networkv+0x188>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c0de:	6d e0       	ldi	r22, 0x0D	; 13
    c0e0:	70 e2       	ldi	r23, 0x20	; 32
    c0e2:	85 e5       	ldi	r24, 0x55	; 85
    c0e4:	94 e1       	ldi	r25, 0x14	; 20
    c0e6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c0ea:	85 e5       	ldi	r24, 0x55	; 85
    c0ec:	94 e1       	ldi	r25, 0x14	; 20
    c0ee:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				Reset_Buffer();
    c0f2:	65 d5       	rcall	.+2762   	; 0xcbbe <_Z12Reset_Bufferv>
				
// 				if(restart_4g_module == _kRESET)
// 				{
					//restart_4g_module = 60 * 60;
					_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c0f4:	61 e0       	ldi	r22, 0x01	; 1
    c0f6:	70 e2       	ldi	r23, 0x20	; 32
    c0f8:	82 e1       	ldi	r24, 0x12	; 18
    c0fa:	96 e1       	ldi	r25, 0x16	; 22
    c0fc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c100:	01 e0       	ldi	r16, 0x01	; 1
    c102:	20 e1       	ldi	r18, 0x10	; 16
    c104:	37 e2       	ldi	r19, 0x27	; 39
    c106:	40 e0       	ldi	r20, 0x00	; 0
    c108:	50 e0       	ldi	r21, 0x00	; 0
    c10a:	68 e6       	ldi	r22, 0x68	; 104
    c10c:	73 e0       	ldi	r23, 0x03	; 3
    c10e:	80 e0       	ldi	r24, 0x00	; 0
    c110:	90 e0       	ldi	r25, 0x00	; 0
    c112:	ba d5       	rcall	.+2932   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
					_kDELAY_MS(10000);
    c114:	60 e1       	ldi	r22, 0x10	; 16
    c116:	77 e2       	ldi	r23, 0x27	; 39
    c118:	80 e0       	ldi	r24, 0x00	; 0
    c11a:	90 e0       	ldi	r25, 0x00	; 0
    c11c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				/*}*/
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c120:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
    c124:	81 30       	cpi	r24, 0x01	; 1
    c126:	31 f0       	breq	.+12     	; 0xc134 <_Z16Gsm_Gprs_Networkv+0x166>
				{
					_kDELAY_MS(12000);
    c128:	60 ee       	ldi	r22, 0xE0	; 224
    c12a:	7e e2       	ldi	r23, 0x2E	; 46
    c12c:	80 e0       	ldi	r24, 0x00	; 0
    c12e:	90 e0       	ldi	r25, 0x00	; 0
    c130:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				}
				Reset_Buffer();
    c134:	44 d5       	rcall	.+2696   	; 0xcbbe <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
    c136:	6c ef       	ldi	r22, 0xFC	; 252
    c138:	7f e1       	ldi	r23, 0x1F	; 31
    c13a:	82 e1       	ldi	r24, 0x12	; 18
    c13c:	96 e1       	ldi	r25, 0x16	; 22
    c13e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c142:	02 e0       	ldi	r16, 0x02	; 2
    c144:	28 eb       	ldi	r18, 0xB8	; 184
    c146:	3b e0       	ldi	r19, 0x0B	; 11
    c148:	40 e0       	ldi	r20, 0x00	; 0
    c14a:	50 e0       	ldi	r21, 0x00	; 0
    c14c:	6e e1       	ldi	r22, 0x1E	; 30
    c14e:	73 e0       	ldi	r23, 0x03	; 3
    c150:	80 e0       	ldi	r24, 0x00	; 0
    c152:	90 e0       	ldi	r25, 0x00	; 0
    c154:	99 d5       	rcall	.+2866   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c156:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    c15a:	81 30       	cpi	r24, 0x01	; 1
    c15c:	09 f0       	breq	.+2      	; 0xc160 <_Z16Gsm_Gprs_Networkv+0x192>
    c15e:	49 c0       	rjmp	.+146    	; 0xc1f2 <_Z16Gsm_Gprs_Networkv+0x224>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c160:	6c ed       	ldi	r22, 0xDC	; 220
    c162:	7f e1       	ldi	r23, 0x1F	; 31
    c164:	85 e5       	ldi	r24, 0x55	; 85
    c166:	94 e1       	ldi	r25, 0x14	; 20
    c168:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c16c:	85 e5       	ldi	r24, 0x55	; 85
    c16e:	94 e1       	ldi	r25, 0x14	; 20
    c170:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    c174:	3e c0       	rjmp	.+124    	; 0xc1f2 <_Z16Gsm_Gprs_Networkv+0x224>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c176:	81 30       	cpi	r24, 0x01	; 1
    c178:	51 f4       	brne	.+20     	; 0xc18e <_Z16Gsm_Gprs_Networkv+0x1c0>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c17a:	6b eb       	ldi	r22, 0xBB	; 187
    c17c:	7f e1       	ldi	r23, 0x1F	; 31
    c17e:	85 e5       	ldi	r24, 0x55	; 85
    c180:	94 e1       	ldi	r25, 0x14	; 20
    c182:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c186:	85 e5       	ldi	r24, 0x55	; 85
    c188:	94 e1       	ldi	r25, 0x14	; 20
    c18a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		Reset_Buffer();
    c18e:	17 d5       	rcall	.+2606   	; 0xcbbe <_Z12Reset_Bufferv>
		
// 		if(restart_4g_module == _kRESET)
// 		{
			//restart_4g_module = 60 * 60;
			_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c190:	6f ea       	ldi	r22, 0xAF	; 175
    c192:	7f e1       	ldi	r23, 0x1F	; 31
    c194:	82 e1       	ldi	r24, 0x12	; 18
    c196:	96 e1       	ldi	r25, 0x16	; 22
    c198:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c19c:	01 e0       	ldi	r16, 0x01	; 1
    c19e:	20 e1       	ldi	r18, 0x10	; 16
    c1a0:	37 e2       	ldi	r19, 0x27	; 39
    c1a2:	40 e0       	ldi	r20, 0x00	; 0
    c1a4:	50 e0       	ldi	r21, 0x00	; 0
    c1a6:	68 e6       	ldi	r22, 0x68	; 104
    c1a8:	73 e0       	ldi	r23, 0x03	; 3
    c1aa:	80 e0       	ldi	r24, 0x00	; 0
    c1ac:	90 e0       	ldi	r25, 0x00	; 0
    c1ae:	6c d5       	rcall	.+2776   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
    c1b0:	60 e1       	ldi	r22, 0x10	; 16
    c1b2:	77 e2       	ldi	r23, 0x27	; 39
    c1b4:	80 e0       	ldi	r24, 0x00	; 0
    c1b6:	90 e0       	ldi	r25, 0x00	; 0
    c1b8:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
		/*}*/
		
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c1bc:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
    c1c0:	81 30       	cpi	r24, 0x01	; 1
		{
			_kDELAY_MS(12000);
    c1c2:	31 f0       	breq	.+12     	; 0xc1d0 <_Z16Gsm_Gprs_Networkv+0x202>
    c1c4:	60 ee       	ldi	r22, 0xE0	; 224
    c1c6:	7e e2       	ldi	r23, 0x2E	; 46
    c1c8:	80 e0       	ldi	r24, 0x00	; 0
    c1ca:	90 e0       	ldi	r25, 0x00	; 0
    c1cc:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
		}
		Reset_Buffer();
    c1d0:	f6 d4       	rcall	.+2540   	; 0xcbbe <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    c1d2:	6a ea       	ldi	r22, 0xAA	; 170
    c1d4:	7f e1       	ldi	r23, 0x1F	; 31
    c1d6:	82 e1       	ldi	r24, 0x12	; 18
    c1d8:	96 e1       	ldi	r25, 0x16	; 22
    c1da:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c1de:	02 e0       	ldi	r16, 0x02	; 2
    c1e0:	28 eb       	ldi	r18, 0xB8	; 184
    c1e2:	3b e0       	ldi	r19, 0x0B	; 11
    c1e4:	40 e0       	ldi	r20, 0x00	; 0
    c1e6:	50 e0       	ldi	r21, 0x00	; 0
    c1e8:	6e e1       	ldi	r22, 0x1E	; 30
    c1ea:	73 e0       	ldi	r23, 0x03	; 3
    c1ec:	80 e0       	ldi	r24, 0x00	; 0
    c1ee:	90 e0       	ldi	r25, 0x00	; 0
    c1f0:	4b d5       	rcall	.+2710   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
	}
	
}
    c1f2:	8f 2d       	mov	r24, r15
    c1f4:	cc 59       	subi	r28, 0x9C	; 156
    c1f6:	df 4f       	sbci	r29, 0xFF	; 255
    c1f8:	0f b6       	in	r0, 0x3f	; 63
    c1fa:	f8 94       	cli
    c1fc:	de bf       	out	0x3e, r29	; 62
    c1fe:	0f be       	out	0x3f, r0	; 63
    c200:	cd bf       	out	0x3d, r28	; 61
    c202:	df 91       	pop	r29
    c204:	cf 91       	pop	r28
    c206:	1f 91       	pop	r17
    c208:	0f 91       	pop	r16
    c20a:	ff 90       	pop	r15
    c20c:	08 95       	ret

0000c20e <__vector_36>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c20e:	1f 92       	push	r1
    c210:	0f 92       	push	r0
    c212:	0f b6       	in	r0, 0x3f	; 63
    c214:	0f 92       	push	r0
    c216:	11 24       	eor	r1, r1
    c218:	0b b6       	in	r0, 0x3b	; 59
    c21a:	0f 92       	push	r0
    c21c:	2f 93       	push	r18
    c21e:	3f 93       	push	r19
    c220:	8f 93       	push	r24
    c222:	9f 93       	push	r25
    c224:	ef 93       	push	r30
    c226:	ff 93       	push	r31
    c228:	80 91 28 0c 	lds	r24, 0x0C28	; 0x800c28 <int_counter>
    c22c:	90 91 29 0c 	lds	r25, 0x0C29	; 0x800c29 <int_counter+0x1>
    c230:	84 3d       	cpi	r24, 0xD4	; 212
    c232:	93 40       	sbci	r25, 0x03	; 3
    c234:	a0 f4       	brcc	.+40     	; 0xc25e <__vector_36+0x50>
    c236:	80 91 28 0c 	lds	r24, 0x0C28	; 0x800c28 <int_counter>
    c23a:	90 91 29 0c 	lds	r25, 0x0C29	; 0x800c29 <int_counter+0x1>
    c23e:	9c 01       	movw	r18, r24
    c240:	2f 5f       	subi	r18, 0xFF	; 255
    c242:	3f 4f       	sbci	r19, 0xFF	; 255
    c244:	30 93 29 0c 	sts	0x0C29, r19	; 0x800c29 <int_counter+0x1>
    c248:	20 93 28 0c 	sts	0x0C28, r18	; 0x800c28 <int_counter>
    c24c:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    c250:	fc 01       	movw	r30, r24
    c252:	e4 59       	subi	r30, 0x94	; 148
    c254:	f0 4f       	sbci	r31, 0xF0	; 240
    c256:	20 83       	st	Z, r18
    c258:	81 e0       	ldi	r24, 0x01	; 1
    c25a:	80 93 26 0c 	sts	0x0C26, r24	; 0x800c26 <rx_flag>
    c25e:	ff 91       	pop	r31
    c260:	ef 91       	pop	r30
    c262:	9f 91       	pop	r25
    c264:	8f 91       	pop	r24
    c266:	3f 91       	pop	r19
    c268:	2f 91       	pop	r18
    c26a:	0f 90       	pop	r0
    c26c:	0b be       	out	0x3b, r0	; 59
    c26e:	0f 90       	pop	r0
    c270:	0f be       	out	0x3f, r0	; 63
    c272:	0f 90       	pop	r0
    c274:	1f 90       	pop	r1
    c276:	18 95       	reti

0000c278 <__vector_12>:
    c278:	1f 92       	push	r1
    c27a:	0f 92       	push	r0
    c27c:	0f b6       	in	r0, 0x3f	; 63
    c27e:	0f 92       	push	r0
    c280:	11 24       	eor	r1, r1
    c282:	0b b6       	in	r0, 0x3b	; 59
    c284:	0f 92       	push	r0
    c286:	2f 93       	push	r18
    c288:	8f 93       	push	r24
    c28a:	9f 93       	push	r25
    c28c:	ef 93       	push	r30
    c28e:	ff 93       	push	r31
    c290:	e7 e0       	ldi	r30, 0x07	; 7
    c292:	f1 e0       	ldi	r31, 0x01	; 1
    c294:	80 81       	ld	r24, Z
    c296:	80 64       	ori	r24, 0x40	; 64
    c298:	80 83       	st	Z, r24
    c29a:	e8 e0       	ldi	r30, 0x08	; 8
    c29c:	f1 e0       	ldi	r31, 0x01	; 1
    c29e:	80 81       	ld	r24, Z
    c2a0:	8f 7b       	andi	r24, 0xBF	; 191
    c2a2:	80 83       	st	Z, r24
    c2a4:	2f ef       	ldi	r18, 0xFF	; 255
    c2a6:	83 ed       	ldi	r24, 0xD3	; 211
    c2a8:	90 e3       	ldi	r25, 0x30	; 48
    c2aa:	21 50       	subi	r18, 0x01	; 1
    c2ac:	80 40       	sbci	r24, 0x00	; 0
    c2ae:	90 40       	sbci	r25, 0x00	; 0
    c2b0:	e1 f7       	brne	.-8      	; 0xc2aa <__vector_12+0x32>
    c2b2:	00 c0       	rjmp	.+0      	; 0xc2b4 <__vector_12+0x3c>
    c2b4:	00 00       	nop
    c2b6:	80 81       	ld	r24, Z
    c2b8:	80 64       	ori	r24, 0x40	; 64
    c2ba:	80 83       	st	Z, r24
    c2bc:	0f b6       	in	r0, 0x3f	; 63
    c2be:	f8 94       	cli
    c2c0:	a8 95       	wdr
    c2c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c2c6:	88 61       	ori	r24, 0x18	; 24
    c2c8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c2cc:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c2d0:	0f be       	out	0x3f, r0	; 63
    c2d2:	ff 91       	pop	r31
    c2d4:	ef 91       	pop	r30
    c2d6:	9f 91       	pop	r25
    c2d8:	8f 91       	pop	r24
    c2da:	2f 91       	pop	r18
    c2dc:	0f 90       	pop	r0
    c2de:	0b be       	out	0x3b, r0	; 59
    c2e0:	0f 90       	pop	r0
    c2e2:	0f be       	out	0x3f, r0	; 63
    c2e4:	0f 90       	pop	r0
    c2e6:	1f 90       	pop	r1
    c2e8:	18 95       	reti

0000c2ea <_Z20Timer1_Interrupt_Intv>:
    c2ea:	f8 94       	cli
    c2ec:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c2f0:	e1 e8       	ldi	r30, 0x81	; 129
    c2f2:	f0 e0       	ldi	r31, 0x00	; 0
    c2f4:	10 82       	st	Z, r1
    c2f6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c2fa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c2fe:	88 e0       	ldi	r24, 0x08	; 8
    c300:	9d e3       	ldi	r25, 0x3D	; 61
    c302:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c306:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c30a:	80 81       	ld	r24, Z
    c30c:	88 60       	ori	r24, 0x08	; 8
    c30e:	80 83       	st	Z, r24
    c310:	80 81       	ld	r24, Z
    c312:	85 60       	ori	r24, 0x05	; 5
    c314:	80 83       	st	Z, r24
    c316:	ef e6       	ldi	r30, 0x6F	; 111
    c318:	f0 e0       	ldi	r31, 0x00	; 0
    c31a:	80 81       	ld	r24, Z
    c31c:	82 60       	ori	r24, 0x02	; 2
    c31e:	80 83       	st	Z, r24
    c320:	78 94       	sei
    c322:	08 95       	ret

0000c324 <__vector_17>:
    c324:	1f 92       	push	r1
    c326:	0f 92       	push	r0
    c328:	0f b6       	in	r0, 0x3f	; 63
    c32a:	0f 92       	push	r0
    c32c:	11 24       	eor	r1, r1
    c32e:	0b b6       	in	r0, 0x3b	; 59
    c330:	0f 92       	push	r0
    c332:	2f 93       	push	r18
    c334:	3f 93       	push	r19
    c336:	4f 93       	push	r20
    c338:	5f 93       	push	r21
    c33a:	6f 93       	push	r22
    c33c:	7f 93       	push	r23
    c33e:	8f 93       	push	r24
    c340:	9f 93       	push	r25
    c342:	af 93       	push	r26
    c344:	bf 93       	push	r27
    c346:	ef 93       	push	r30
    c348:	ff 93       	push	r31
    c34a:	80 91 91 0c 	lds	r24, 0x0C91	; 0x800c91 <_gdo_not_perform_4g_oper>
    c34e:	90 91 92 0c 	lds	r25, 0x0C92	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    c352:	89 2b       	or	r24, r25
    c354:	49 f0       	breq	.+18     	; 0xc368 <__vector_17+0x44>
    c356:	80 91 91 0c 	lds	r24, 0x0C91	; 0x800c91 <_gdo_not_perform_4g_oper>
    c35a:	90 91 92 0c 	lds	r25, 0x0C92	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    c35e:	01 97       	sbiw	r24, 0x01	; 1
    c360:	90 93 92 0c 	sts	0x0C92, r25	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    c364:	80 93 91 0c 	sts	0x0C91, r24	; 0x800c91 <_gdo_not_perform_4g_oper>
    c368:	80 91 9e 0c 	lds	r24, 0x0C9E	; 0x800c9e <_gfault_Occure>
    c36c:	90 91 9f 0c 	lds	r25, 0x0C9F	; 0x800c9f <_gfault_Occure+0x1>
    c370:	00 97       	sbiw	r24, 0x00	; 0
    c372:	29 f0       	breq	.+10     	; 0xc37e <__vector_17+0x5a>
    c374:	01 97       	sbiw	r24, 0x01	; 1
    c376:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    c37a:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
    c37e:	81 e0       	ldi	r24, 0x01	; 1
    c380:	90 e0       	ldi	r25, 0x00	; 0
    c382:	a0 e0       	ldi	r26, 0x00	; 0
    c384:	b0 e0       	ldi	r27, 0x00	; 0
    c386:	80 93 7e 0c 	sts	0x0C7E, r24	; 0x800c7e <_g_1Sec_Time>
    c38a:	90 93 7f 0c 	sts	0x0C7F, r25	; 0x800c7f <_g_1Sec_Time+0x1>
    c38e:	a0 93 80 0c 	sts	0x0C80, r26	; 0x800c80 <_g_1Sec_Time+0x2>
    c392:	b0 93 81 0c 	sts	0x0C81, r27	; 0x800c81 <_g_1Sec_Time+0x3>
    c396:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
    c39a:	8e 33       	cpi	r24, 0x3E	; 62
    c39c:	28 f4       	brcc	.+10     	; 0xc3a8 <__vector_17+0x84>
    c39e:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
    c3a2:	8f 5f       	subi	r24, 0xFF	; 255
    c3a4:	80 93 96 0c 	sts	0x0C96, r24	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
    c3a8:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
    c3ac:	8b 34       	cpi	r24, 0x4B	; 75
    c3ae:	28 f4       	brcc	.+10     	; 0xc3ba <__vector_17+0x96>
    c3b0:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
    c3b4:	8f 5f       	subi	r24, 0xFF	; 255
    c3b6:	80 93 97 0c 	sts	0x0C97, r24	; 0x800c97 <_gStart_Monitoring_Three_Phase>
    c3ba:	80 91 64 13 	lds	r24, 0x1364	; 0x801364 <_sRuble_Parameters+0x1a>
    c3be:	90 91 65 13 	lds	r25, 0x1365	; 0x801365 <_sRuble_Parameters+0x1b>
    c3c2:	01 96       	adiw	r24, 0x01	; 1
    c3c4:	90 93 65 13 	sts	0x1365, r25	; 0x801365 <_sRuble_Parameters+0x1b>
    c3c8:	80 93 64 13 	sts	0x1364, r24	; 0x801364 <_sRuble_Parameters+0x1a>
    c3cc:	80 91 22 0c 	lds	r24, 0x0C22	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c3d0:	8f 5f       	subi	r24, 0xFF	; 255
    c3d2:	85 30       	cpi	r24, 0x05	; 5
    c3d4:	18 f4       	brcc	.+6      	; 0xc3dc <__vector_17+0xb8>
    c3d6:	80 93 22 0c 	sts	0x0C22, r24	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c3da:	05 c0       	rjmp	.+10     	; 0xc3e6 <__vector_17+0xc2>
    c3dc:	10 92 22 0c 	sts	0x0C22, r1	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c3e0:	81 e0       	ldi	r24, 0x01	; 1
    c3e2:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0xb1>
    c3e6:	80 91 21 0c 	lds	r24, 0x0C21	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c3ea:	8f 5f       	subi	r24, 0xFF	; 255
    c3ec:	8a 30       	cpi	r24, 0x0A	; 10
    c3ee:	18 f4       	brcc	.+6      	; 0xc3f6 <__vector_17+0xd2>
    c3f0:	80 93 21 0c 	sts	0x0C21, r24	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c3f4:	08 c0       	rjmp	.+16     	; 0xc406 <__vector_17+0xe2>
    c3f6:	10 92 21 0c 	sts	0x0C21, r1	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c3fa:	81 e0       	ldi	r24, 0x01	; 1
    c3fc:	90 e0       	ldi	r25, 0x00	; 0
    c3fe:	90 93 67 13 	sts	0x1367, r25	; 0x801367 <_sRuble_Parameters+0x1d>
    c402:	80 93 66 13 	sts	0x1366, r24	; 0x801366 <_sRuble_Parameters+0x1c>
    c406:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbc>
    c40a:	88 23       	and	r24, r24
    c40c:	19 f0       	breq	.+6      	; 0xc414 <__vector_17+0xf0>
    c40e:	81 50       	subi	r24, 0x01	; 1
    c410:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbc>
    c414:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c418:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c41c:	89 2b       	or	r24, r25
    c41e:	49 f0       	breq	.+18     	; 0xc432 <__vector_17+0x10e>
    c420:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c424:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c428:	01 97       	sbiw	r24, 0x01	; 1
    c42a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    c42e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    c432:	80 91 1f 0c 	lds	r24, 0x0C1F	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c436:	90 91 20 0c 	lds	r25, 0x0C20	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c43a:	01 96       	adiw	r24, 0x01	; 1
    c43c:	8d 32       	cpi	r24, 0x2D	; 45
    c43e:	21 e0       	ldi	r18, 0x01	; 1
    c440:	92 07       	cpc	r25, r18
    c442:	28 f4       	brcc	.+10     	; 0xc44e <__vector_17+0x12a>
    c444:	90 93 20 0c 	sts	0x0C20, r25	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c448:	80 93 1f 0c 	sts	0x0C1F, r24	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c44c:	0d c0       	rjmp	.+26     	; 0xc468 <__vector_17+0x144>
    c44e:	10 92 20 0c 	sts	0x0C20, r1	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c452:	10 92 1f 0c 	sts	0x0C1F, r1	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c456:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    c45a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    c45e:	84 60       	ori	r24, 0x04	; 4
    c460:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    c464:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    c468:	e4 e8       	ldi	r30, 0x84	; 132
    c46a:	fd e0       	ldi	r31, 0x0D	; 13
    c46c:	2e ef       	ldi	r18, 0xFE	; 254
    c46e:	3e e0       	ldi	r19, 0x0E	; 14
    c470:	83 81       	ldd	r24, Z+3	; 0x03
    c472:	94 81       	ldd	r25, Z+4	; 0x04
    c474:	00 97       	sbiw	r24, 0x00	; 0
    c476:	19 f0       	breq	.+6      	; 0xc47e <__vector_17+0x15a>
    c478:	01 97       	sbiw	r24, 0x01	; 1
    c47a:	94 83       	std	Z+4, r25	; 0x04
    c47c:	83 83       	std	Z+3, r24	; 0x03
    c47e:	7b 96       	adiw	r30, 0x1b	; 27
    c480:	2e 17       	cp	r18, r30
    c482:	3f 07       	cpc	r19, r31
    c484:	a9 f7       	brne	.-22     	; 0xc470 <__vector_17+0x14c>
    c486:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
    c48a:	81 30       	cpi	r24, 0x01	; 1
    c48c:	59 f4       	brne	.+22     	; 0xc4a4 <__vector_17+0x180>
    c48e:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    c492:	88 23       	and	r24, r24
    c494:	09 f4       	brne	.+2      	; 0xc498 <__vector_17+0x174>
    c496:	75 c0       	rjmp	.+234    	; 0xc582 <__vector_17+0x25e>
    c498:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    c49c:	81 50       	subi	r24, 0x01	; 1
    c49e:	80 93 2e 0b 	sts	0x0B2E, r24	; 0x800b2e <_sSchedules+0x210>
    c4a2:	6f c0       	rjmp	.+222    	; 0xc582 <__vector_17+0x25e>
    c4a4:	20 91 2f 14 	lds	r18, 0x142F	; 0x80142f <_sRuble_Parameters+0xe5>
    c4a8:	80 91 68 13 	lds	r24, 0x1368	; 0x801368 <_sRuble_Parameters+0x1e>
    c4ac:	90 91 69 13 	lds	r25, 0x1369	; 0x801369 <_sRuble_Parameters+0x1f>
    c4b0:	22 23       	and	r18, r18
    c4b2:	e1 f1       	breq	.+120    	; 0xc52c <__vector_17+0x208>
    c4b4:	20 91 97 09 	lds	r18, 0x0997	; 0x800997 <_sSchedules+0x79>
    c4b8:	21 30       	cpi	r18, 0x01	; 1
    c4ba:	79 f4       	brne	.+30     	; 0xc4da <__vector_17+0x1b6>
    c4bc:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    c4c0:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    c4c4:	2f 5f       	subi	r18, 0xFF	; 255
    c4c6:	3f 4f       	sbci	r19, 0xFF	; 255
    c4c8:	30 93 27 09 	sts	0x0927, r19	; 0x800927 <_sSchedules+0x9>
    c4cc:	20 93 26 09 	sts	0x0926, r18	; 0x800926 <_sSchedules+0x8>
    c4d0:	20 91 78 0b 	lds	r18, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    c4d4:	2f 5f       	subi	r18, 0xFF	; 255
    c4d6:	20 93 78 0b 	sts	0x0B78, r18	; 0x800b78 <_sSchedules+0x25a>
    c4da:	20 91 33 14 	lds	r18, 0x1433	; 0x801433 <_sRuble_Parameters+0xe9>
    c4de:	30 91 34 14 	lds	r19, 0x1434	; 0x801434 <_sRuble_Parameters+0xea>
    c4e2:	23 2b       	or	r18, r19
    c4e4:	a1 f4       	brne	.+40     	; 0xc50e <__vector_17+0x1ea>
    c4e6:	40 91 29 14 	lds	r20, 0x1429	; 0x801429 <_sRuble_Parameters+0xdf>
    c4ea:	50 91 2a 14 	lds	r21, 0x142A	; 0x80142a <_sRuble_Parameters+0xe0>
    c4ee:	60 91 2b 14 	lds	r22, 0x142B	; 0x80142b <_sRuble_Parameters+0xe1>
    c4f2:	70 91 2c 14 	lds	r23, 0x142C	; 0x80142c <_sRuble_Parameters+0xe2>
    c4f6:	4f 5f       	subi	r20, 0xFF	; 255
    c4f8:	5f 4f       	sbci	r21, 0xFF	; 255
    c4fa:	6f 4f       	sbci	r22, 0xFF	; 255
    c4fc:	7f 4f       	sbci	r23, 0xFF	; 255
    c4fe:	40 93 29 14 	sts	0x1429, r20	; 0x801429 <_sRuble_Parameters+0xdf>
    c502:	50 93 2a 14 	sts	0x142A, r21	; 0x80142a <_sRuble_Parameters+0xe0>
    c506:	60 93 2b 14 	sts	0x142B, r22	; 0x80142b <_sRuble_Parameters+0xe1>
    c50a:	70 93 2c 14 	sts	0x142C, r23	; 0x80142c <_sRuble_Parameters+0xe2>
    c50e:	00 97       	sbiw	r24, 0x00	; 0
    c510:	79 f4       	brne	.+30     	; 0xc530 <__vector_17+0x20c>
    c512:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
    c516:	30 91 61 13 	lds	r19, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
    c51a:	21 15       	cp	r18, r1
    c51c:	31 05       	cpc	r19, r1
    c51e:	69 f0       	breq	.+26     	; 0xc53a <__vector_17+0x216>
    c520:	21 50       	subi	r18, 0x01	; 1
    c522:	31 09       	sbc	r19, r1
    c524:	30 93 61 13 	sts	0x1361, r19	; 0x801361 <_sRuble_Parameters+0x17>
    c528:	20 93 60 13 	sts	0x1360, r18	; 0x801360 <_sRuble_Parameters+0x16>
    c52c:	00 97       	sbiw	r24, 0x00	; 0
    c52e:	29 f0       	breq	.+10     	; 0xc53a <__vector_17+0x216>
    c530:	01 97       	sbiw	r24, 0x01	; 1
    c532:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
    c536:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
    c53a:	80 e0       	ldi	r24, 0x00	; 0
    c53c:	90 e0       	ldi	r25, 0x00	; 0
    c53e:	9c 01       	movw	r18, r24
    c540:	22 5e       	subi	r18, 0xE2	; 226
    c542:	36 4f       	sbci	r19, 0xF6	; 246
    c544:	f9 01       	movw	r30, r18
    c546:	e3 50       	subi	r30, 0x03	; 3
    c548:	fe 4f       	sbci	r31, 0xFE	; 254
    c54a:	40 81       	ld	r20, Z
    c54c:	44 23       	and	r20, r20
    c54e:	19 f0       	breq	.+6      	; 0xc556 <__vector_17+0x232>
    c550:	40 81       	ld	r20, Z
    c552:	41 50       	subi	r20, 0x01	; 1
    c554:	40 83       	st	Z, r20
    c556:	f9 01       	movw	r30, r18
    c558:	ee 5f       	subi	r30, 0xFE	; 254
    c55a:	fd 4f       	sbci	r31, 0xFD	; 253
    c55c:	20 81       	ld	r18, Z
    c55e:	21 30       	cpi	r18, 0x01	; 1
    c560:	59 f4       	brne	.+22     	; 0xc578 <__vector_17+0x254>
    c562:	fc 01       	movw	r30, r24
    c564:	ee 0f       	add	r30, r30
    c566:	ff 1f       	adc	r31, r31
    c568:	ec 5d       	subi	r30, 0xDC	; 220
    c56a:	f4 4f       	sbci	r31, 0xF4	; 244
    c56c:	20 81       	ld	r18, Z
    c56e:	31 81       	ldd	r19, Z+1	; 0x01
    c570:	2f 5f       	subi	r18, 0xFF	; 255
    c572:	3f 4f       	sbci	r19, 0xFF	; 255
    c574:	31 83       	std	Z+1, r19	; 0x01
    c576:	20 83       	st	Z, r18
    c578:	01 96       	adiw	r24, 0x01	; 1
    c57a:	83 30       	cpi	r24, 0x03	; 3
    c57c:	91 05       	cpc	r25, r1
    c57e:	f9 f6       	brne	.-66     	; 0xc53e <__vector_17+0x21a>
    c580:	86 cf       	rjmp	.-244    	; 0xc48e <__vector_17+0x16a>
    c582:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    c586:	88 23       	and	r24, r24
    c588:	29 f0       	breq	.+10     	; 0xc594 <__vector_17+0x270>
    c58a:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    c58e:	81 50       	subi	r24, 0x01	; 1
    c590:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <_sSchedules+0x20e>
    c594:	80 91 33 14 	lds	r24, 0x1433	; 0x801433 <_sRuble_Parameters+0xe9>
    c598:	90 91 34 14 	lds	r25, 0x1434	; 0x801434 <_sRuble_Parameters+0xea>
    c59c:	00 97       	sbiw	r24, 0x00	; 0
    c59e:	61 f4       	brne	.+24     	; 0xc5b8 <__vector_17+0x294>
    c5a0:	80 91 2d 14 	lds	r24, 0x142D	; 0x80142d <_sRuble_Parameters+0xe3>
    c5a4:	90 91 2e 14 	lds	r25, 0x142E	; 0x80142e <_sRuble_Parameters+0xe4>
    c5a8:	00 97       	sbiw	r24, 0x00	; 0
    c5aa:	59 f0       	breq	.+22     	; 0xc5c2 <__vector_17+0x29e>
    c5ac:	01 97       	sbiw	r24, 0x01	; 1
    c5ae:	90 93 2e 14 	sts	0x142E, r25	; 0x80142e <_sRuble_Parameters+0xe4>
    c5b2:	80 93 2d 14 	sts	0x142D, r24	; 0x80142d <_sRuble_Parameters+0xe3>
    c5b6:	05 c0       	rjmp	.+10     	; 0xc5c2 <__vector_17+0x29e>
    c5b8:	01 97       	sbiw	r24, 0x01	; 1
    c5ba:	90 93 34 14 	sts	0x1434, r25	; 0x801434 <_sRuble_Parameters+0xea>
    c5be:	80 93 33 14 	sts	0x1433, r24	; 0x801433 <_sRuble_Parameters+0xe9>
    c5c2:	80 91 0b 14 	lds	r24, 0x140B	; 0x80140b <_sRuble_Parameters+0xc1>
    c5c6:	90 91 0c 14 	lds	r25, 0x140C	; 0x80140c <_sRuble_Parameters+0xc2>
    c5ca:	00 97       	sbiw	r24, 0x00	; 0
    c5cc:	29 f0       	breq	.+10     	; 0xc5d8 <__vector_17+0x2b4>
    c5ce:	01 97       	sbiw	r24, 0x01	; 1
    c5d0:	90 93 0c 14 	sts	0x140C, r25	; 0x80140c <_sRuble_Parameters+0xc2>
    c5d4:	80 93 0b 14 	sts	0x140B, r24	; 0x80140b <_sRuble_Parameters+0xc1>
    c5d8:	80 91 a2 0c 	lds	r24, 0x0CA2	; 0x800ca2 <_gTime_To_Wait_Lora_Resp>
    c5dc:	90 91 a3 0c 	lds	r25, 0x0CA3	; 0x800ca3 <_gTime_To_Wait_Lora_Resp+0x1>
    c5e0:	01 96       	adiw	r24, 0x01	; 1
    c5e2:	90 93 a3 0c 	sts	0x0CA3, r25	; 0x800ca3 <_gTime_To_Wait_Lora_Resp+0x1>
    c5e6:	80 93 a2 0c 	sts	0x0CA2, r24	; 0x800ca2 <_gTime_To_Wait_Lora_Resp>
    c5ea:	80 91 a0 0c 	lds	r24, 0x0CA0	; 0x800ca0 <_gWait_Blower_Time>
    c5ee:	90 91 a1 0c 	lds	r25, 0x0CA1	; 0x800ca1 <_gWait_Blower_Time+0x1>
    c5f2:	00 97       	sbiw	r24, 0x00	; 0
    c5f4:	29 f0       	breq	.+10     	; 0xc600 <__vector_17+0x2dc>
    c5f6:	01 97       	sbiw	r24, 0x01	; 1
    c5f8:	90 93 a1 0c 	sts	0x0CA1, r25	; 0x800ca1 <_gWait_Blower_Time+0x1>
    c5fc:	80 93 a0 0c 	sts	0x0CA0, r24	; 0x800ca0 <_gWait_Blower_Time>
    c600:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gWdt_Counter>
    c604:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gWdt_Counter+0x1>
    c608:	01 96       	adiw	r24, 0x01	; 1
    c60a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gWdt_Counter+0x1>
    c60e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gWdt_Counter>
    c612:	80 91 99 0c 	lds	r24, 0x0C99	; 0x800c99 <_gTank_Topic_check>
    c616:	8c 33       	cpi	r24, 0x3C	; 60
    c618:	28 f4       	brcc	.+10     	; 0xc624 <__vector_17+0x300>
    c61a:	80 91 99 0c 	lds	r24, 0x0C99	; 0x800c99 <_gTank_Topic_check>
    c61e:	8f 5f       	subi	r24, 0xFF	; 255
    c620:	80 93 99 0c 	sts	0x0C99, r24	; 0x800c99 <_gTank_Topic_check>
    c624:	80 91 9a 0c 	lds	r24, 0x0C9A	; 0x800c9a <_gStart_Wdt>
    c628:	81 30       	cpi	r24, 0x01	; 1
    c62a:	39 f4       	brne	.+14     	; 0xc63a <__vector_17+0x316>
    c62c:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gWdt_Counter>
    c630:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gWdt_Counter+0x1>
    c634:	88 36       	cpi	r24, 0x68	; 104
    c636:	91 40       	sbci	r25, 0x01	; 1
    c638:	08 f4       	brcc	.+2      	; 0xc63c <__vector_17+0x318>
    c63a:	a8 95       	wdr
    c63c:	0e 94 28 85 	call	0x10a50	; 0x10a50 <_Z18Read_Switch_Statusv>
    c640:	80 91 27 0c 	lds	r24, 0x0C27	; 0x800c27 <rx_complete>
    c644:	88 23       	and	r24, r24
    c646:	29 f0       	breq	.+10     	; 0xc652 <__vector_17+0x32e>
    c648:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <monitor_serial_start>
    c64c:	8f 5f       	subi	r24, 0xFF	; 255
    c64e:	80 93 23 0c 	sts	0x0C23, r24	; 0x800c23 <monitor_serial_start>
    c652:	ff 91       	pop	r31
    c654:	ef 91       	pop	r30
    c656:	bf 91       	pop	r27
    c658:	af 91       	pop	r26
    c65a:	9f 91       	pop	r25
    c65c:	8f 91       	pop	r24
    c65e:	7f 91       	pop	r23
    c660:	6f 91       	pop	r22
    c662:	5f 91       	pop	r21
    c664:	4f 91       	pop	r20
    c666:	3f 91       	pop	r19
    c668:	2f 91       	pop	r18
    c66a:	0f 90       	pop	r0
    c66c:	0b be       	out	0x3b, r0	; 59
    c66e:	0f 90       	pop	r0
    c670:	0f be       	out	0x3f, r0	; 63
    c672:	0f 90       	pop	r0
    c674:	1f 90       	pop	r1
    c676:	18 95       	reti

0000c678 <_Z20Timer0_Interrupt_Intv>:
    c678:	f8 94       	cli
    c67a:	a0 eb       	ldi	r26, 0xB0	; 176
    c67c:	b0 e0       	ldi	r27, 0x00	; 0
    c67e:	1c 92       	st	X, r1
    c680:	e1 eb       	ldi	r30, 0xB1	; 177
    c682:	f0 e0       	ldi	r31, 0x00	; 0
    c684:	10 82       	st	Z, r1
    c686:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    c68a:	8c e7       	ldi	r24, 0x7C	; 124
    c68c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    c690:	8c 91       	ld	r24, X
    c692:	82 60       	ori	r24, 0x02	; 2
    c694:	8c 93       	st	X, r24
    c696:	80 81       	ld	r24, Z
    c698:	85 60       	ori	r24, 0x05	; 5
    c69a:	80 83       	st	Z, r24
    c69c:	e0 e7       	ldi	r30, 0x70	; 112
    c69e:	f0 e0       	ldi	r31, 0x00	; 0
    c6a0:	80 81       	ld	r24, Z
    c6a2:	82 60       	ori	r24, 0x02	; 2
    c6a4:	80 83       	st	Z, r24
    c6a6:	78 94       	sei
    c6a8:	08 95       	ret

0000c6aa <__vector_13>:
    c6aa:	1f 92       	push	r1
    c6ac:	0f 92       	push	r0
    c6ae:	0f b6       	in	r0, 0x3f	; 63
    c6b0:	0f 92       	push	r0
    c6b2:	11 24       	eor	r1, r1
    c6b4:	2f 93       	push	r18
    c6b6:	3f 93       	push	r19
    c6b8:	8f 93       	push	r24
    c6ba:	9f 93       	push	r25
    c6bc:	80 91 26 0c 	lds	r24, 0x0C26	; 0x800c26 <rx_flag>
    c6c0:	88 23       	and	r24, r24
    c6c2:	49 f0       	breq	.+18     	; 0xc6d6 <__vector_13+0x2c>
    c6c4:	80 91 24 0c 	lds	r24, 0x0C24	; 0x800c24 <my_timer>
    c6c8:	90 91 25 0c 	lds	r25, 0x0C25	; 0x800c25 <my_timer+0x1>
    c6cc:	01 96       	adiw	r24, 0x01	; 1
    c6ce:	90 93 25 0c 	sts	0x0C25, r25	; 0x800c25 <my_timer+0x1>
    c6d2:	80 93 24 0c 	sts	0x0C24, r24	; 0x800c24 <my_timer>
    c6d6:	20 91 24 0c 	lds	r18, 0x0C24	; 0x800c24 <my_timer>
    c6da:	30 91 25 0c 	lds	r19, 0x0C25	; 0x800c25 <my_timer+0x1>
    c6de:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <Interrupt_Time_Out>
    c6e2:	90 91 95 0c 	lds	r25, 0x0C95	; 0x800c95 <Interrupt_Time_Out+0x1>
    c6e6:	82 17       	cp	r24, r18
    c6e8:	93 07       	cpc	r25, r19
    c6ea:	20 f4       	brcc	.+8      	; 0xc6f4 <__vector_13+0x4a>
    c6ec:	80 91 26 0c 	lds	r24, 0x0C26	; 0x800c26 <rx_flag>
    c6f0:	81 30       	cpi	r24, 0x01	; 1
    c6f2:	c1 f0       	breq	.+48     	; 0xc724 <__vector_13+0x7a>
    c6f4:	90 91 26 0c 	lds	r25, 0x0C26	; 0x800c26 <rx_flag>
    c6f8:	80 91 1e 0c 	lds	r24, 0x0C1E	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c6fc:	91 30       	cpi	r25, 0x01	; 1
    c6fe:	41 f4       	brne	.+16     	; 0xc710 <__vector_13+0x66>
    c700:	81 11       	cpse	r24, r1
    c702:	1f c0       	rjmp	.+62     	; 0xc742 <__vector_13+0x98>
    c704:	90 93 1e 0c 	sts	0x0C1E, r25	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c708:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c70c:	8d 7f       	andi	r24, 0xFD	; 253
    c70e:	07 c0       	rjmp	.+14     	; 0xc71e <__vector_13+0x74>
    c710:	81 30       	cpi	r24, 0x01	; 1
    c712:	b9 f4       	brne	.+46     	; 0xc742 <__vector_13+0x98>
    c714:	10 92 1e 0c 	sts	0x0C1E, r1	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c718:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c71c:	82 60       	ori	r24, 0x02	; 2
    c71e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c722:	0f c0       	rjmp	.+30     	; 0xc742 <__vector_13+0x98>
    c724:	80 93 27 0c 	sts	0x0C27, r24	; 0x800c27 <rx_complete>
    c728:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    c72c:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    c730:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    c734:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    c738:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    c73c:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <monitor_serial_start>
    c740:	d9 cf       	rjmp	.-78     	; 0xc6f4 <__vector_13+0x4a>
    c742:	9f 91       	pop	r25
    c744:	8f 91       	pop	r24
    c746:	3f 91       	pop	r19
    c748:	2f 91       	pop	r18
    c74a:	0f 90       	pop	r0
    c74c:	0f be       	out	0x3f, r0	; 63
    c74e:	0f 90       	pop	r0
    c750:	1f 90       	pop	r1
    c752:	18 95       	reti

0000c754 <_Z8Lcd_Initv>:
    c754:	82 e7       	ldi	r24, 0x72	; 114
    c756:	9c e0       	ldi	r25, 0x0C	; 12
    c758:	0c 94 42 d7 	jmp	0x1ae84	; 0x1ae84 <_ZN17LiquidCrystal_I2C4initEv>
    c75c:	08 95       	ret

0000c75e <_Z14Lcd_Print_BuffPchhh>:
    c75e:	cf 92       	push	r12
    c760:	df 92       	push	r13
    c762:	ef 92       	push	r14
    c764:	ff 92       	push	r15
    c766:	0f 93       	push	r16
    c768:	1f 93       	push	r17
    c76a:	cf 93       	push	r28
    c76c:	df 93       	push	r29
    c76e:	7c 01       	movw	r14, r24
    c770:	c4 2e       	mov	r12, r20
    c772:	ec 01       	movw	r28, r24
    c774:	06 2f       	mov	r16, r22
    c776:	10 e0       	ldi	r17, 0x00	; 0
    c778:	ce 01       	movw	r24, r28
    c77a:	8e 19       	sub	r24, r14
    c77c:	9f 09       	sbc	r25, r15
    c77e:	80 17       	cp	r24, r16
    c780:	91 07       	cpc	r25, r17
    c782:	84 f4       	brge	.+32     	; 0xc7a4 <_Z14Lcd_Print_BuffPchhh+0x46>
    c784:	dd 24       	eor	r13, r13
    c786:	d3 94       	inc	r13
    c788:	d2 0e       	add	r13, r18
    c78a:	4c 2d       	mov	r20, r12
    c78c:	62 2f       	mov	r22, r18
    c78e:	82 e7       	ldi	r24, 0x72	; 114
    c790:	9c e0       	ldi	r25, 0x0C	; 12
    c792:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    c796:	69 91       	ld	r22, Y+
    c798:	82 e7       	ldi	r24, 0x72	; 114
    c79a:	9c e0       	ldi	r25, 0x0C	; 12
    c79c:	0e 94 21 d1 	call	0x1a242	; 0x1a242 <_ZN5Print5printEc>
    c7a0:	2d 2d       	mov	r18, r13
    c7a2:	ea cf       	rjmp	.-44     	; 0xc778 <_Z14Lcd_Print_BuffPchhh+0x1a>
    c7a4:	df 91       	pop	r29
    c7a6:	cf 91       	pop	r28
    c7a8:	1f 91       	pop	r17
    c7aa:	0f 91       	pop	r16
    c7ac:	ff 90       	pop	r15
    c7ae:	ef 90       	pop	r14
    c7b0:	df 90       	pop	r13
    c7b2:	cf 90       	pop	r12
    c7b4:	08 95       	ret

0000c7b6 <_Z9Lcd_Clearv>:
    c7b6:	82 e7       	ldi	r24, 0x72	; 114
    c7b8:	9c e0       	ldi	r25, 0x0C	; 12
    c7ba:	0c 94 83 d6 	jmp	0x1ad06	; 0x1ad06 <_ZN17LiquidCrystal_I2C5clearEv>

0000c7be <_Z9Lora_Initv>:
    c7be:	8a e2       	ldi	r24, 0x2A	; 42
    c7c0:	9c e0       	ldi	r25, 0x0C	; 12
    c7c2:	0c 94 16 dc 	jmp	0x1b82c	; 0x1b82c <_ZN7RH_RF954initEv>

0000c7c6 <_Z14Lora_Availablev>:
    c7c6:	8a e2       	ldi	r24, 0x2A	; 42
    c7c8:	9c e0       	ldi	r25, 0x0C	; 12
    c7ca:	0c 94 36 db 	jmp	0x1b66c	; 0x1b66c <_ZN7RH_RF959availableEv>

0000c7ce <_Z17Lora_Data_Receivev>:
    c7ce:	cf 93       	push	r28
    c7d0:	df 93       	push	r29
    c7d2:	1f 92       	push	r1
    c7d4:	cd b7       	in	r28, 0x3d	; 61
    c7d6:	de b7       	in	r29, 0x3e	; 62
    c7d8:	84 e1       	ldi	r24, 0x14	; 20
    c7da:	e0 e9       	ldi	r30, 0x90	; 144
    c7dc:	f3 e1       	ldi	r31, 0x13	; 19
    c7de:	df 01       	movw	r26, r30
    c7e0:	98 2f       	mov	r25, r24
    c7e2:	1d 92       	st	X+, r1
    c7e4:	9a 95       	dec	r25
    c7e6:	e9 f7       	brne	.-6      	; 0xc7e2 <_Z17Lora_Data_Receivev+0x14>
    c7e8:	89 83       	std	Y+1, r24	; 0x01
    c7ea:	ae 01       	movw	r20, r28
    c7ec:	4f 5f       	subi	r20, 0xFF	; 255
    c7ee:	5f 4f       	sbci	r21, 0xFF	; 255
    c7f0:	bf 01       	movw	r22, r30
    c7f2:	8a e2       	ldi	r24, 0x2A	; 42
    c7f4:	9c e0       	ldi	r25, 0x0C	; 12
    c7f6:	0e 94 b7 d9 	call	0x1b36e	; 0x1b36e <_ZN7RH_RF954recvEPhS0_>
    c7fa:	0f 90       	pop	r0
    c7fc:	df 91       	pop	r29
    c7fe:	cf 91       	pop	r28
    c800:	08 95       	ret

0000c802 <_Z13Lora_Set_Freqv>:
    c802:	4a e5       	ldi	r20, 0x5A	; 90
    c804:	54 e4       	ldi	r21, 0x44	; 68
    c806:	68 e5       	ldi	r22, 0x58	; 88
    c808:	74 e4       	ldi	r23, 0x44	; 68
    c80a:	8a e2       	ldi	r24, 0x2A	; 42
    c80c:	9c e0       	ldi	r25, 0x0C	; 12
    c80e:	0c 94 f5 d9 	jmp	0x1b3ea	; 0x1b3ea <_ZN7RH_RF9512setFrequencyEf>

0000c812 <_Z14Lora_Set_Powerv>:
    c812:	40 e0       	ldi	r20, 0x00	; 0
    c814:	64 e1       	ldi	r22, 0x14	; 20
    c816:	8a e2       	ldi	r24, 0x2A	; 42
    c818:	9c e0       	ldi	r25, 0x0C	; 12
    c81a:	0c 94 ab db 	jmp	0x1b756	; 0x1b756 <_ZN7RH_RF9510setTxPowerEab>

0000c81e <_Z15Lora_Set_Configv>:
    c81e:	60 e0       	ldi	r22, 0x00	; 0
    c820:	8a e2       	ldi	r24, 0x2A	; 42
    c822:	9c e0       	ldi	r25, 0x0C	; 12
    c824:	0e 94 de db 	call	0x1b7bc	; 0x1b7bc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    c828:	6b e0       	ldi	r22, 0x0B	; 11
    c82a:	8a e2       	ldi	r24, 0x2A	; 42
    c82c:	9c e0       	ldi	r25, 0x0C	; 12
    c82e:	0c 94 19 dd 	jmp	0x1ba32	; 0x1ba32 <_ZN7RH_RF9518setSpreadingFactorEh>

0000c832 <_Z20Check_Data_Availablej>:
    c832:	bc 01       	movw	r22, r24
    c834:	8a e2       	ldi	r24, 0x2A	; 42
    c836:	9c e0       	ldi	r25, 0x0C	; 12
    c838:	0c 94 9c d7 	jmp	0x1af38	; 0x1af38 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000c83c <_Z21Seperate_Out_Sub_Datav>:
    c83c:	8f 92       	push	r8
    c83e:	9f 92       	push	r9
    c840:	af 92       	push	r10
    c842:	bf 92       	push	r11
    c844:	cf 92       	push	r12
    c846:	df 92       	push	r13
    c848:	ef 92       	push	r14
    c84a:	ff 92       	push	r15
    c84c:	0f 93       	push	r16
    c84e:	1f 93       	push	r17
    c850:	cf 93       	push	r28
    c852:	df 93       	push	r29
    c854:	cd b7       	in	r28, 0x3d	; 61
    c856:	de b7       	in	r29, 0x3e	; 62
    c858:	c0 53       	subi	r28, 0x30	; 48
    c85a:	d4 40       	sbci	r29, 0x04	; 4
    c85c:	0f b6       	in	r0, 0x3f	; 63
    c85e:	f8 94       	cli
    c860:	de bf       	out	0x3e, r29	; 62
    c862:	0f be       	out	0x3f, r0	; 63
    c864:	cd bf       	out	0x3d, r28	; 61
    c866:	22 e1       	ldi	r18, 0x12	; 18
    c868:	e3 e7       	ldi	r30, 0x73	; 115
    c86a:	f3 e0       	ldi	r31, 0x03	; 3
    c86c:	de 01       	movw	r26, r28
    c86e:	a5 5e       	subi	r26, 0xE5	; 229
    c870:	bb 4f       	sbci	r27, 0xFB	; 251
    c872:	01 90       	ld	r0, Z+
    c874:	0d 92       	st	X+, r0
    c876:	2a 95       	dec	r18
    c878:	e1 f7       	brne	.-8      	; 0xc872 <_Z21Seperate_Out_Sub_Datav+0x36>
    c87a:	24 e1       	ldi	r18, 0x14	; 20
    c87c:	e5 e8       	ldi	r30, 0x85	; 133
    c87e:	f3 e0       	ldi	r31, 0x03	; 3
    c880:	de 01       	movw	r26, r28
    c882:	a9 5f       	subi	r26, 0xF9	; 249
    c884:	bb 4f       	sbci	r27, 0xFB	; 251
    c886:	01 90       	ld	r0, Z+
    c888:	0d 92       	st	X+, r0
    c88a:	2a 95       	dec	r18
    c88c:	e1 f7       	brne	.-8      	; 0xc886 <_Z21Seperate_Out_Sub_Datav+0x4a>
    c88e:	8e 01       	movw	r16, r28
    c890:	0f 5f       	subi	r16, 0xFF	; 255
    c892:	1f 4f       	sbci	r17, 0xFF	; 255
    c894:	24 ed       	ldi	r18, 0xD4	; 212
    c896:	33 e0       	ldi	r19, 0x03	; 3
    c898:	d8 01       	movw	r26, r16
    c89a:	f9 01       	movw	r30, r18
    c89c:	1d 92       	st	X+, r1
    c89e:	31 97       	sbiw	r30, 0x01	; 1
    c8a0:	e9 f7       	brne	.-6      	; 0xc89c <_Z21Seperate_Out_Sub_Datav+0x60>
    c8a2:	be 01       	movw	r22, r28
    c8a4:	6b 52       	subi	r22, 0x2B	; 43
    c8a6:	7c 4f       	sbci	r23, 0xFC	; 252
    c8a8:	22 e3       	ldi	r18, 0x32	; 50
    c8aa:	db 01       	movw	r26, r22
    c8ac:	1d 92       	st	X+, r1
    c8ae:	2a 95       	dec	r18
    c8b0:	e9 f7       	brne	.-6      	; 0xc8ac <_Z21Seperate_Out_Sub_Datav+0x70>
    c8b2:	88 24       	eor	r8, r8
    c8b4:	83 94       	inc	r8
    c8b6:	91 2c       	mov	r9, r1
    c8b8:	40 e0       	ldi	r20, 0x00	; 0
    c8ba:	50 e0       	ldi	r21, 0x00	; 0
    c8bc:	20 e0       	ldi	r18, 0x00	; 0
    c8be:	30 e0       	ldi	r19, 0x00	; 0
    c8c0:	fe 01       	movw	r30, r28
    c8c2:	e3 5d       	subi	r30, 0xD3	; 211
    c8c4:	fb 4f       	sbci	r31, 0xFB	; 251
    c8c6:	aa e0       	ldi	r26, 0x0A	; 10
    c8c8:	fa 2e       	mov	r15, r26
    c8ca:	b4 e6       	ldi	r27, 0x64	; 100
    c8cc:	eb 2e       	mov	r14, r27
    c8ce:	d9 01       	movw	r26, r18
    c8d0:	a4 59       	subi	r26, 0x94	; 148
    c8d2:	b0 4f       	sbci	r27, 0xF0	; 240
    c8d4:	dc 90       	ld	r13, X
    c8d6:	dd 20       	and	r13, r13
    c8d8:	09 f4       	brne	.+2      	; 0xc8dc <_Z21Seperate_Out_Sub_Datav+0xa0>
    c8da:	40 c1       	rjmp	.+640    	; 0xcb5c <_Z21Seperate_Out_Sub_Datav+0x320>
    c8dc:	2f 5f       	subi	r18, 0xFF	; 255
    c8de:	3f 4f       	sbci	r19, 0xFF	; 255
    c8e0:	24 3d       	cpi	r18, 0xD4	; 212
    c8e2:	b3 e0       	ldi	r27, 0x03	; 3
    c8e4:	3b 07       	cpc	r19, r27
    c8e6:	08 f0       	brcs	.+2      	; 0xc8ea <_Z21Seperate_Out_Sub_Datav+0xae>
    c8e8:	55 c1       	rjmp	.+682    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c8ea:	d9 01       	movw	r26, r18
    c8ec:	a4 59       	subi	r26, 0x94	; 148
    c8ee:	b0 4f       	sbci	r27, 0xF0	; 240
    c8f0:	6d 01       	movw	r12, r26
    c8f2:	b1 e0       	ldi	r27, 0x01	; 1
    c8f4:	8b 16       	cp	r8, r27
    c8f6:	91 04       	cpc	r9, r1
    c8f8:	31 f0       	breq	.+12     	; 0xc906 <_Z21Seperate_Out_Sub_Datav+0xca>
    c8fa:	a2 e0       	ldi	r26, 0x02	; 2
    c8fc:	8a 16       	cp	r8, r26
    c8fe:	91 04       	cpc	r9, r1
    c900:	09 f4       	brne	.+2      	; 0xc904 <_Z21Seperate_Out_Sub_Datav+0xc8>
    c902:	8f c0       	rjmp	.+286    	; 0xca22 <_Z21Seperate_Out_Sub_Datav+0x1e6>
    c904:	e4 cf       	rjmp	.-56     	; 0xc8ce <_Z21Seperate_Out_Sub_Datav+0x92>
    c906:	d6 01       	movw	r26, r12
    c908:	bc 90       	ld	r11, X
    c90a:	bb e1       	ldi	r27, 0x1B	; 27
    c90c:	cb 2e       	mov	r12, r27
    c90e:	b4 e0       	ldi	r27, 0x04	; 4
    c910:	db 2e       	mov	r13, r27
    c912:	cc 0e       	add	r12, r28
    c914:	dd 1e       	adc	r13, r29
    c916:	c4 0e       	add	r12, r20
    c918:	d5 1e       	adc	r13, r21
    c91a:	d6 01       	movw	r26, r12
    c91c:	dc 90       	ld	r13, X
    c91e:	bd 14       	cp	r11, r13
    c920:	19 f0       	breq	.+6      	; 0xc928 <_Z21Seperate_Out_Sub_Datav+0xec>
    c922:	40 e0       	ldi	r20, 0x00	; 0
    c924:	50 e0       	ldi	r21, 0x00	; 0
    c926:	d3 cf       	rjmp	.-90     	; 0xc8ce <_Z21Seperate_Out_Sub_Datav+0x92>
    c928:	4f 5f       	subi	r20, 0xFF	; 255
    c92a:	5f 4f       	sbci	r21, 0xFF	; 255
    c92c:	ab e1       	ldi	r26, 0x1B	; 27
    c92e:	ca 2e       	mov	r12, r26
    c930:	a4 e0       	ldi	r26, 0x04	; 4
    c932:	da 2e       	mov	r13, r26
    c934:	cc 0e       	add	r12, r28
    c936:	dd 1e       	adc	r13, r29
    c938:	c4 0e       	add	r12, r20
    c93a:	d5 1e       	adc	r13, r21
    c93c:	d6 01       	movw	r26, r12
    c93e:	dc 90       	ld	r13, X
    c940:	d1 10       	cpse	r13, r1
    c942:	c5 cf       	rjmp	.-118    	; 0xc8ce <_Z21Seperate_Out_Sub_Datav+0x92>
    c944:	af 01       	movw	r20, r30
    c946:	5a 01       	movw	r10, r20
    c948:	ae 1a       	sub	r10, r30
    c94a:	bf 0a       	sbc	r11, r31
    c94c:	d9 01       	movw	r26, r18
    c94e:	a4 59       	subi	r26, 0x94	; 148
    c950:	b0 4f       	sbci	r27, 0xF0	; 240
    c952:	dc 90       	ld	r13, X
    c954:	bd e0       	ldi	r27, 0x0D	; 13
    c956:	db 16       	cp	r13, r27
    c958:	79 f0       	breq	.+30     	; 0xc978 <_Z21Seperate_Out_Sub_Datav+0x13c>
    c95a:	2f 5f       	subi	r18, 0xFF	; 255
    c95c:	3f 4f       	sbci	r19, 0xFF	; 255
    c95e:	24 3d       	cpi	r18, 0xD4	; 212
    c960:	a3 e0       	ldi	r26, 0x03	; 3
    c962:	3a 07       	cpc	r19, r26
    c964:	09 f4       	brne	.+2      	; 0xc968 <_Z21Seperate_Out_Sub_Datav+0x12c>
    c966:	16 c1       	rjmp	.+556    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c968:	d9 01       	movw	r26, r18
    c96a:	a4 59       	subi	r26, 0x94	; 148
    c96c:	b0 4f       	sbci	r27, 0xF0	; 240
    c96e:	dc 90       	ld	r13, X
    c970:	da 01       	movw	r26, r20
    c972:	dd 92       	st	X+, r13
    c974:	ad 01       	movw	r20, r26
    c976:	e7 cf       	rjmp	.-50     	; 0xc946 <_Z21Seperate_Out_Sub_Datav+0x10a>
    c978:	d5 01       	movw	r26, r10
    c97a:	ae 0f       	add	r26, r30
    c97c:	bf 1f       	adc	r27, r31
    c97e:	1c 92       	st	X, r1
    c980:	df 01       	movw	r26, r30
    c982:	0d 90       	ld	r0, X+
    c984:	00 20       	and	r0, r0
    c986:	e9 f7       	brne	.-6      	; 0xc982 <_Z21Seperate_Out_Sub_Datav+0x146>
    c988:	11 97       	sbiw	r26, 0x01	; 1
    c98a:	ad 01       	movw	r20, r26
    c98c:	4e 1b       	sub	r20, r30
    c98e:	5f 0b       	sbc	r21, r31
    c990:	42 30       	cpi	r20, 0x02	; 2
    c992:	51 05       	cpc	r21, r1
    c994:	49 f0       	breq	.+18     	; 0xc9a8 <_Z21Seperate_Out_Sub_Datav+0x16c>
    c996:	08 f4       	brcc	.+2      	; 0xc99a <_Z21Seperate_Out_Sub_Datav+0x15e>
    c998:	fd c0       	rjmp	.+506    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c99a:	43 30       	cpi	r20, 0x03	; 3
    c99c:	51 05       	cpc	r21, r1
    c99e:	49 f0       	breq	.+18     	; 0xc9b2 <_Z21Seperate_Out_Sub_Datav+0x176>
    c9a0:	44 30       	cpi	r20, 0x04	; 4
    c9a2:	51 05       	cpc	r21, r1
    c9a4:	d9 f4       	brne	.+54     	; 0xc9dc <_Z21Seperate_Out_Sub_Datav+0x1a0>
    c9a6:	f6 c0       	rjmp	.+492    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c9a8:	80 81       	ld	r24, Z
    c9aa:	90 e0       	ldi	r25, 0x00	; 0
    c9ac:	c0 97       	sbiw	r24, 0x30	; 48
    c9ae:	b1 f4       	brne	.+44     	; 0xc9dc <_Z21Seperate_Out_Sub_Datav+0x1a0>
    c9b0:	f1 c0       	rjmp	.+482    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c9b2:	80 81       	ld	r24, Z
    c9b4:	90 e0       	ldi	r25, 0x00	; 0
    c9b6:	c0 97       	sbiw	r24, 0x30	; 48
    c9b8:	f8 9e       	mul	r15, r24
    c9ba:	a0 01       	movw	r20, r0
    c9bc:	f9 9e       	mul	r15, r25
    c9be:	50 0d       	add	r21, r0
    c9c0:	11 24       	eor	r1, r1
    c9c2:	91 81       	ldd	r25, Z+1	; 0x01
    c9c4:	89 2f       	mov	r24, r25
    c9c6:	90 e0       	ldi	r25, 0x00	; 0
    c9c8:	c0 97       	sbiw	r24, 0x30	; 48
    c9ca:	84 0f       	add	r24, r20
    c9cc:	95 1f       	adc	r25, r21
    c9ce:	ac 01       	movw	r20, r24
    c9d0:	41 50       	subi	r20, 0x01	; 1
    c9d2:	51 09       	sbc	r21, r1
    c9d4:	42 33       	cpi	r20, 0x32	; 50
    c9d6:	51 05       	cpc	r21, r1
    c9d8:	08 f0       	brcs	.+2      	; 0xc9dc <_Z21Seperate_Out_Sub_Datav+0x1a0>
    c9da:	dc c0       	rjmp	.+440    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c9dc:	2e 5f       	subi	r18, 0xFE	; 254
    c9de:	3f 4f       	sbci	r19, 0xFF	; 255
    c9e0:	24 3d       	cpi	r18, 0xD4	; 212
    c9e2:	b3 e0       	ldi	r27, 0x03	; 3
    c9e4:	3b 07       	cpc	r19, r27
    c9e6:	08 f0       	brcs	.+2      	; 0xc9ea <_Z21Seperate_Out_Sub_Datav+0x1ae>
    c9e8:	d5 c0       	rjmp	.+426    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    c9ea:	6b 01       	movw	r12, r22
    c9ec:	a6 01       	movw	r20, r12
    c9ee:	46 1b       	sub	r20, r22
    c9f0:	57 0b       	sbc	r21, r23
    c9f2:	48 17       	cp	r20, r24
    c9f4:	59 07       	cpc	r21, r25
    c9f6:	20 f0       	brcs	.+8      	; 0xca00 <_Z21Seperate_Out_Sub_Datav+0x1c4>
    c9f8:	42 e0       	ldi	r20, 0x02	; 2
    c9fa:	84 2e       	mov	r8, r20
    c9fc:	91 2c       	mov	r9, r1
    c9fe:	91 cf       	rjmp	.-222    	; 0xc922 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ca00:	a9 01       	movw	r20, r18
    ca02:	4f 5f       	subi	r20, 0xFF	; 255
    ca04:	5f 4f       	sbci	r21, 0xFF	; 255
    ca06:	24 59       	subi	r18, 0x94	; 148
    ca08:	30 4f       	sbci	r19, 0xF0	; 240
    ca0a:	d9 01       	movw	r26, r18
    ca0c:	2c 91       	ld	r18, X
    ca0e:	d6 01       	movw	r26, r12
    ca10:	2d 93       	st	X+, r18
    ca12:	6d 01       	movw	r12, r26
    ca14:	44 3d       	cpi	r20, 0xD4	; 212
    ca16:	b3 e0       	ldi	r27, 0x03	; 3
    ca18:	5b 07       	cpc	r21, r27
    ca1a:	09 f4       	brne	.+2      	; 0xca1e <_Z21Seperate_Out_Sub_Datav+0x1e2>
    ca1c:	bb c0       	rjmp	.+374    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    ca1e:	9a 01       	movw	r18, r20
    ca20:	e5 cf       	rjmp	.-54     	; 0xc9ec <_Z21Seperate_Out_Sub_Datav+0x1b0>
    ca22:	d6 01       	movw	r26, r12
    ca24:	bc 90       	ld	r11, X
    ca26:	b7 e0       	ldi	r27, 0x07	; 7
    ca28:	cb 2e       	mov	r12, r27
    ca2a:	b4 e0       	ldi	r27, 0x04	; 4
    ca2c:	db 2e       	mov	r13, r27
    ca2e:	cc 0e       	add	r12, r28
    ca30:	dd 1e       	adc	r13, r29
    ca32:	c4 0e       	add	r12, r20
    ca34:	d5 1e       	adc	r13, r21
    ca36:	d6 01       	movw	r26, r12
    ca38:	dc 90       	ld	r13, X
    ca3a:	bd 10       	cpse	r11, r13
    ca3c:	72 cf       	rjmp	.-284    	; 0xc922 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ca3e:	4f 5f       	subi	r20, 0xFF	; 255
    ca40:	5f 4f       	sbci	r21, 0xFF	; 255
    ca42:	a7 e0       	ldi	r26, 0x07	; 7
    ca44:	ca 2e       	mov	r12, r26
    ca46:	a4 e0       	ldi	r26, 0x04	; 4
    ca48:	da 2e       	mov	r13, r26
    ca4a:	cc 0e       	add	r12, r28
    ca4c:	dd 1e       	adc	r13, r29
    ca4e:	c4 0e       	add	r12, r20
    ca50:	d5 1e       	adc	r13, r21
    ca52:	d6 01       	movw	r26, r12
    ca54:	dc 90       	ld	r13, X
    ca56:	d1 10       	cpse	r13, r1
    ca58:	3a cf       	rjmp	.-396    	; 0xc8ce <_Z21Seperate_Out_Sub_Datav+0x92>
    ca5a:	6f 01       	movw	r12, r30
    ca5c:	46 01       	movw	r8, r12
    ca5e:	8e 1a       	sub	r8, r30
    ca60:	9f 0a       	sbc	r9, r31
    ca62:	d9 01       	movw	r26, r18
    ca64:	a4 59       	subi	r26, 0x94	; 148
    ca66:	b0 4f       	sbci	r27, 0xF0	; 240
    ca68:	bc 90       	ld	r11, X
    ca6a:	bd e0       	ldi	r27, 0x0D	; 13
    ca6c:	bb 16       	cp	r11, r27
    ca6e:	79 f0       	breq	.+30     	; 0xca8e <_Z21Seperate_Out_Sub_Datav+0x252>
    ca70:	2f 5f       	subi	r18, 0xFF	; 255
    ca72:	3f 4f       	sbci	r19, 0xFF	; 255
    ca74:	24 3d       	cpi	r18, 0xD4	; 212
    ca76:	a3 e0       	ldi	r26, 0x03	; 3
    ca78:	3a 07       	cpc	r19, r26
    ca7a:	09 f4       	brne	.+2      	; 0xca7e <_Z21Seperate_Out_Sub_Datav+0x242>
    ca7c:	8b c0       	rjmp	.+278    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    ca7e:	d9 01       	movw	r26, r18
    ca80:	a4 59       	subi	r26, 0x94	; 148
    ca82:	b0 4f       	sbci	r27, 0xF0	; 240
    ca84:	bc 90       	ld	r11, X
    ca86:	d6 01       	movw	r26, r12
    ca88:	bd 92       	st	X+, r11
    ca8a:	6d 01       	movw	r12, r26
    ca8c:	e7 cf       	rjmp	.-50     	; 0xca5c <_Z21Seperate_Out_Sub_Datav+0x220>
    ca8e:	d4 01       	movw	r26, r8
    ca90:	ae 0f       	add	r26, r30
    ca92:	bf 1f       	adc	r27, r31
    ca94:	1c 92       	st	X, r1
    ca96:	df 01       	movw	r26, r30
    ca98:	0d 90       	ld	r0, X+
    ca9a:	00 20       	and	r0, r0
    ca9c:	e9 f7       	brne	.-6      	; 0xca98 <_Z21Seperate_Out_Sub_Datav+0x25c>
    ca9e:	11 97       	sbiw	r26, 0x01	; 1
    caa0:	ae 1b       	sub	r26, r30
    caa2:	bf 0b       	sbc	r27, r31
    caa4:	a2 30       	cpi	r26, 0x02	; 2
    caa6:	b1 05       	cpc	r27, r1
    caa8:	41 f0       	breq	.+16     	; 0xcaba <_Z21Seperate_Out_Sub_Datav+0x27e>
    caaa:	08 f4       	brcc	.+2      	; 0xcaae <_Z21Seperate_Out_Sub_Datav+0x272>
    caac:	73 c0       	rjmp	.+230    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    caae:	a3 30       	cpi	r26, 0x03	; 3
    cab0:	b1 05       	cpc	r27, r1
    cab2:	39 f0       	breq	.+14     	; 0xcac2 <_Z21Seperate_Out_Sub_Datav+0x286>
    cab4:	14 97       	sbiw	r26, 0x04	; 4
    cab6:	a9 f0       	breq	.+42     	; 0xcae2 <_Z21Seperate_Out_Sub_Datav+0x2a6>
    cab8:	2f c0       	rjmp	.+94     	; 0xcb18 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    caba:	80 81       	ld	r24, Z
    cabc:	90 e0       	ldi	r25, 0x00	; 0
    cabe:	c0 97       	sbiw	r24, 0x30	; 48
    cac0:	0d c0       	rjmp	.+26     	; 0xcadc <_Z21Seperate_Out_Sub_Datav+0x2a0>
    cac2:	80 81       	ld	r24, Z
    cac4:	90 e0       	ldi	r25, 0x00	; 0
    cac6:	c0 97       	sbiw	r24, 0x30	; 48
    cac8:	f8 9e       	mul	r15, r24
    caca:	d0 01       	movw	r26, r0
    cacc:	f9 9e       	mul	r15, r25
    cace:	b0 0d       	add	r27, r0
    cad0:	11 24       	eor	r1, r1
    cad2:	81 81       	ldd	r24, Z+1	; 0x01
    cad4:	90 e0       	ldi	r25, 0x00	; 0
    cad6:	c0 97       	sbiw	r24, 0x30	; 48
    cad8:	8a 0f       	add	r24, r26
    cada:	9b 1f       	adc	r25, r27
    cadc:	00 97       	sbiw	r24, 0x00	; 0
    cade:	e1 f4       	brne	.+56     	; 0xcb18 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cae0:	59 c0       	rjmp	.+178    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    cae2:	a0 81       	ld	r26, Z
    cae4:	b0 e0       	ldi	r27, 0x00	; 0
    cae6:	d0 97       	sbiw	r26, 0x30	; 48
    cae8:	ea 9e       	mul	r14, r26
    caea:	c0 01       	movw	r24, r0
    caec:	eb 9e       	mul	r14, r27
    caee:	90 0d       	add	r25, r0
    caf0:	11 24       	eor	r1, r1
    caf2:	a1 81       	ldd	r26, Z+1	; 0x01
    caf4:	b0 e0       	ldi	r27, 0x00	; 0
    caf6:	d0 97       	sbiw	r26, 0x30	; 48
    caf8:	fa 9e       	mul	r15, r26
    cafa:	60 01       	movw	r12, r0
    cafc:	fb 9e       	mul	r15, r27
    cafe:	d0 0c       	add	r13, r0
    cb00:	11 24       	eor	r1, r1
    cb02:	8c 0d       	add	r24, r12
    cb04:	9d 1d       	adc	r25, r13
    cb06:	a2 81       	ldd	r26, Z+2	; 0x02
    cb08:	b0 e0       	ldi	r27, 0x00	; 0
    cb0a:	d0 97       	sbiw	r26, 0x30	; 48
    cb0c:	8a 0f       	add	r24, r26
    cb0e:	9b 1f       	adc	r25, r27
    cb10:	85 3d       	cpi	r24, 0xD5	; 213
    cb12:	b3 e0       	ldi	r27, 0x03	; 3
    cb14:	9b 07       	cpc	r25, r27
    cb16:	f0 f5       	brcc	.+124    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    cb18:	2e 5f       	subi	r18, 0xFE	; 254
    cb1a:	3f 4f       	sbci	r19, 0xFF	; 255
    cb1c:	24 3d       	cpi	r18, 0xD4	; 212
    cb1e:	a3 e0       	ldi	r26, 0x03	; 3
    cb20:	3a 07       	cpc	r19, r26
    cb22:	c0 f5       	brcc	.+112    	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    cb24:	58 01       	movw	r10, r16
    cb26:	65 01       	movw	r12, r10
    cb28:	c0 1a       	sub	r12, r16
    cb2a:	d1 0a       	sbc	r13, r17
    cb2c:	c8 16       	cp	r12, r24
    cb2e:	d9 06       	cpc	r13, r25
    cb30:	18 f0       	brcs	.+6      	; 0xcb38 <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cb32:	81 2c       	mov	r8, r1
    cb34:	91 2c       	mov	r9, r1
    cb36:	cb ce       	rjmp	.-618    	; 0xc8ce <_Z21Seperate_Out_Sub_Datav+0x92>
    cb38:	69 01       	movw	r12, r18
    cb3a:	bf ef       	ldi	r27, 0xFF	; 255
    cb3c:	cb 1a       	sub	r12, r27
    cb3e:	db 0a       	sbc	r13, r27
    cb40:	24 59       	subi	r18, 0x94	; 148
    cb42:	30 4f       	sbci	r19, 0xF0	; 240
    cb44:	d9 01       	movw	r26, r18
    cb46:	2c 91       	ld	r18, X
    cb48:	d5 01       	movw	r26, r10
    cb4a:	2d 93       	st	X+, r18
    cb4c:	5d 01       	movw	r10, r26
    cb4e:	b4 ed       	ldi	r27, 0xD4	; 212
    cb50:	cb 16       	cp	r12, r27
    cb52:	b3 e0       	ldi	r27, 0x03	; 3
    cb54:	db 06       	cpc	r13, r27
    cb56:	f1 f0       	breq	.+60     	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x358>
    cb58:	96 01       	movw	r18, r12
    cb5a:	e5 cf       	rjmp	.-54     	; 0xcb26 <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cb5c:	8e e6       	ldi	r24, 0x6E	; 110
    cb5e:	ee ef       	ldi	r30, 0xFE	; 254
    cb60:	fe e0       	ldi	r31, 0x0E	; 14
    cb62:	df 01       	movw	r26, r30
    cb64:	1d 92       	st	X+, r1
    cb66:	8a 95       	dec	r24
    cb68:	e9 f7       	brne	.-6      	; 0xcb64 <_Z21Seperate_Out_Sub_Datav+0x328>
    cb6a:	84 ed       	ldi	r24, 0xD4	; 212
    cb6c:	93 e0       	ldi	r25, 0x03	; 3
    cb6e:	ec e6       	ldi	r30, 0x6C	; 108
    cb70:	ff e0       	ldi	r31, 0x0F	; 15
    cb72:	df 01       	movw	r26, r30
    cb74:	9c 01       	movw	r18, r24
    cb76:	1d 92       	st	X+, r1
    cb78:	21 50       	subi	r18, 0x01	; 1
    cb7a:	30 40       	sbci	r19, 0x00	; 0
    cb7c:	e1 f7       	brne	.-8      	; 0xcb76 <_Z21Seperate_Out_Sub_Datav+0x33a>
    cb7e:	8e ef       	ldi	r24, 0xFE	; 254
    cb80:	9e e0       	ldi	r25, 0x0E	; 14
    cb82:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    cb86:	b8 01       	movw	r22, r16
    cb88:	8c e6       	ldi	r24, 0x6C	; 108
    cb8a:	9f e0       	ldi	r25, 0x0F	; 15
    cb8c:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    cb90:	81 e0       	ldi	r24, 0x01	; 1
    cb92:	01 c0       	rjmp	.+2      	; 0xcb96 <_Z21Seperate_Out_Sub_Datav+0x35a>
    cb94:	80 e0       	ldi	r24, 0x00	; 0
    cb96:	c0 5d       	subi	r28, 0xD0	; 208
    cb98:	db 4f       	sbci	r29, 0xFB	; 251
    cb9a:	0f b6       	in	r0, 0x3f	; 63
    cb9c:	f8 94       	cli
    cb9e:	de bf       	out	0x3e, r29	; 62
    cba0:	0f be       	out	0x3f, r0	; 63
    cba2:	cd bf       	out	0x3d, r28	; 61
    cba4:	df 91       	pop	r29
    cba6:	cf 91       	pop	r28
    cba8:	1f 91       	pop	r17
    cbaa:	0f 91       	pop	r16
    cbac:	ff 90       	pop	r15
    cbae:	ef 90       	pop	r14
    cbb0:	df 90       	pop	r13
    cbb2:	cf 90       	pop	r12
    cbb4:	bf 90       	pop	r11
    cbb6:	af 90       	pop	r10
    cbb8:	9f 90       	pop	r9
    cbba:	8f 90       	pop	r8
    cbbc:	08 95       	ret

0000cbbe <_Z12Reset_Bufferv>:
    cbbe:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
    cbc2:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    cbc6:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    cbca:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    cbce:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    cbd2:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    cbd6:	84 ed       	ldi	r24, 0xD4	; 212
    cbd8:	93 e0       	ldi	r25, 0x03	; 3
    cbda:	ec e6       	ldi	r30, 0x6C	; 108
    cbdc:	ff e0       	ldi	r31, 0x0F	; 15
    cbde:	df 01       	movw	r26, r30
    cbe0:	9c 01       	movw	r18, r24
    cbe2:	1d 92       	st	X+, r1
    cbe4:	21 50       	subi	r18, 0x01	; 1
    cbe6:	30 40       	sbci	r19, 0x00	; 0
    cbe8:	e1 f7       	brne	.-8      	; 0xcbe2 <_Z12Reset_Bufferv+0x24>
    cbea:	08 95       	ret

0000cbec <_GLOBAL__sub_I_g_uTick>:
    cbec:	24 e0       	ldi	r18, 0x04	; 4
    cbee:	44 e1       	ldi	r20, 0x14	; 20
    cbf0:	67 e2       	ldi	r22, 0x27	; 39
    cbf2:	82 e7       	ldi	r24, 0x72	; 114
    cbf4:	9c e0       	ldi	r25, 0x0C	; 12
    cbf6:	0e 94 29 d6 	call	0x1ac52	; 0x1ac52 <_ZN17LiquidCrystal_I2CC1Ehhh>
    cbfa:	28 ed       	ldi	r18, 0xD8	; 216
    cbfc:	37 e1       	ldi	r19, 0x17	; 23
    cbfe:	42 e0       	ldi	r20, 0x02	; 2
    cc00:	65 e3       	ldi	r22, 0x35	; 53
    cc02:	8a e2       	ldi	r24, 0x2A	; 42
    cc04:	9c e0       	ldi	r25, 0x0C	; 12
    cc06:	0c 94 71 d9 	jmp	0x1b2e2	; 0x1b2e2 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000cc0a <_Z14Lora_Data_Sendh>:
    cc0a:	cf 93       	push	r28
    cc0c:	c8 2f       	mov	r28, r24
    cc0e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    cc12:	81 30       	cpi	r24, 0x01	; 1
    cc14:	89 f4       	brne	.+34     	; 0xcc38 <_Z14Lora_Data_Sendh+0x2e>
    cc16:	69 e6       	ldi	r22, 0x69	; 105
    cc18:	74 e2       	ldi	r23, 0x24	; 36
    cc1a:	85 e5       	ldi	r24, 0x55	; 85
    cc1c:	94 e1       	ldi	r25, 0x14	; 20
    cc1e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc22:	4a e0       	ldi	r20, 0x0A	; 10
    cc24:	50 e0       	ldi	r21, 0x00	; 0
    cc26:	6c 2f       	mov	r22, r28
    cc28:	85 e5       	ldi	r24, 0x55	; 85
    cc2a:	94 e1       	ldi	r25, 0x14	; 20
    cc2c:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    cc30:	85 e5       	ldi	r24, 0x55	; 85
    cc32:	94 e1       	ldi	r25, 0x14	; 20
    cc34:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    cc38:	4c 2f       	mov	r20, r28
    cc3a:	6c e7       	ldi	r22, 0x7C	; 124
    cc3c:	73 e1       	ldi	r23, 0x13	; 19
    cc3e:	8a e2       	ldi	r24, 0x2A	; 42
    cc40:	9c e0       	ldi	r25, 0x0C	; 12
    cc42:	0e 94 64 db 	call	0x1b6c8	; 0x1b6c8 <_ZN7RH_RF954sendEPKhh>
    cc46:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    cc4a:	81 30       	cpi	r24, 0x01	; 1
    cc4c:	51 f4       	brne	.+20     	; 0xcc62 <_Z14Lora_Data_Sendh+0x58>
    cc4e:	6c e5       	ldi	r22, 0x5C	; 92
    cc50:	74 e2       	ldi	r23, 0x24	; 36
    cc52:	85 e5       	ldi	r24, 0x55	; 85
    cc54:	94 e1       	ldi	r25, 0x14	; 20
    cc56:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc5a:	85 e5       	ldi	r24, 0x55	; 85
    cc5c:	94 e1       	ldi	r25, 0x14	; 20
    cc5e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    cc62:	64 ef       	ldi	r22, 0xF4	; 244
    cc64:	71 e0       	ldi	r23, 0x01	; 1
    cc66:	8a e2       	ldi	r24, 0x2A	; 42
    cc68:	9c e0       	ldi	r25, 0x0C	; 12
    cc6a:	0e 94 d0 d7 	call	0x1afa0	; 0x1afa0 <_ZN15RHGenericDriver14waitPacketSentEj>
    cc6e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    cc72:	81 30       	cpi	r24, 0x01	; 1
    cc74:	39 f4       	brne	.+14     	; 0xcc84 <_Z14Lora_Data_Sendh+0x7a>
    cc76:	62 e5       	ldi	r22, 0x52	; 82
    cc78:	74 e2       	ldi	r23, 0x24	; 36
    cc7a:	85 e5       	ldi	r24, 0x55	; 85
    cc7c:	94 e1       	ldi	r25, 0x14	; 20
    cc7e:	cf 91       	pop	r28
    cc80:	0c 94 2c d1 	jmp	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc84:	cf 91       	pop	r28
    cc86:	08 95       	ret

0000cc88 <_Z15Send_AT_CommandPcS_S_jh>:
    cc88:	4f 92       	push	r4
    cc8a:	5f 92       	push	r5
    cc8c:	6f 92       	push	r6
    cc8e:	7f 92       	push	r7
    cc90:	8f 92       	push	r8
    cc92:	9f 92       	push	r9
    cc94:	af 92       	push	r10
    cc96:	bf 92       	push	r11
    cc98:	cf 92       	push	r12
    cc9a:	df 92       	push	r13
    cc9c:	ef 92       	push	r14
    cc9e:	ff 92       	push	r15
    cca0:	0f 93       	push	r16
    cca2:	1f 93       	push	r17
    cca4:	cf 93       	push	r28
    cca6:	df 93       	push	r29
    cca8:	1f 92       	push	r1
    ccaa:	1f 92       	push	r1
    ccac:	cd b7       	in	r28, 0x3d	; 61
    ccae:	de b7       	in	r29, 0x3e	; 62
    ccb0:	5c 01       	movw	r10, r24
    ccb2:	7b 01       	movw	r14, r22
    ccb4:	6a 01       	movw	r12, r20
    ccb6:	89 01       	movw	r16, r18
    ccb8:	89 2b       	or	r24, r25
    ccba:	31 f0       	breq	.+12     	; 0xccc8 <_Z15Send_AT_CommandPcS_S_jh+0x40>
    ccbc:	64 e6       	ldi	r22, 0x64	; 100
    ccbe:	70 e0       	ldi	r23, 0x00	; 0
    ccc0:	80 e0       	ldi	r24, 0x00	; 0
    ccc2:	90 e0       	ldi	r25, 0x00	; 0
    ccc4:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    ccc8:	10 93 95 0c 	sts	0x0C95, r17	; 0x800c95 <Interrupt_Time_Out+0x1>
    cccc:	00 93 94 0c 	sts	0x0C94, r16	; 0x800c94 <Interrupt_Time_Out>
    ccd0:	a1 14       	cp	r10, r1
    ccd2:	b1 04       	cpc	r11, r1
    ccd4:	31 f0       	breq	.+12     	; 0xcce2 <_Z15Send_AT_CommandPcS_S_jh+0x5a>
    ccd6:	73 df       	rcall	.-282    	; 0xcbbe <_Z12Reset_Bufferv>
    ccd8:	b5 01       	movw	r22, r10
    ccda:	82 e1       	ldi	r24, 0x12	; 18
    ccdc:	96 e1       	ldi	r25, 0x16	; 22
    ccde:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    cce2:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    cce6:	4b 01       	movw	r8, r22
    cce8:	5c 01       	movw	r10, r24
    ccea:	28 01       	movw	r4, r16
    ccec:	61 2c       	mov	r6, r1
    ccee:	71 2c       	mov	r7, r1
    ccf0:	b7 01       	movw	r22, r14
    ccf2:	8c e6       	ldi	r24, 0x6C	; 108
    ccf4:	9f e0       	ldi	r25, 0x0F	; 15
    ccf6:	c1 14       	cp	r12, r1
    ccf8:	d1 04       	cpc	r13, r1
    ccfa:	39 f0       	breq	.+14     	; 0xcd0a <_Z15Send_AT_CommandPcS_S_jh+0x82>
    ccfc:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    cd00:	89 2b       	or	r24, r25
    cd02:	b9 f4       	brne	.+46     	; 0xcd32 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    cd04:	b6 01       	movw	r22, r12
    cd06:	8c e6       	ldi	r24, 0x6C	; 108
    cd08:	9f e0       	ldi	r25, 0x0F	; 15
    cd0a:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    cd0e:	89 2b       	or	r24, r25
    cd10:	81 f4       	brne	.+32     	; 0xcd32 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    cd12:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    cd16:	dc 01       	movw	r26, r24
    cd18:	cb 01       	movw	r24, r22
    cd1a:	88 19       	sub	r24, r8
    cd1c:	99 09       	sbc	r25, r9
    cd1e:	aa 09       	sbc	r26, r10
    cd20:	bb 09       	sbc	r27, r11
    cd22:	84 15       	cp	r24, r4
    cd24:	95 05       	cpc	r25, r5
    cd26:	a6 05       	cpc	r26, r6
    cd28:	b7 05       	cpc	r27, r7
    cd2a:	10 f3       	brcs	.-60     	; 0xccf0 <_Z15Send_AT_CommandPcS_S_jh+0x68>
    cd2c:	00 e0       	ldi	r16, 0x00	; 0
    cd2e:	10 e0       	ldi	r17, 0x00	; 0
    cd30:	02 c0       	rjmp	.+4      	; 0xcd36 <_Z15Send_AT_CommandPcS_S_jh+0xae>
    cd32:	01 e0       	ldi	r16, 0x01	; 1
    cd34:	10 e0       	ldi	r17, 0x00	; 0
    cd36:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
    cd3a:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    cd3e:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    cd42:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    cd46:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    cd4a:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    cd4e:	84 e1       	ldi	r24, 0x14	; 20
    cd50:	95 e0       	ldi	r25, 0x05	; 5
    cd52:	90 93 95 0c 	sts	0x0C95, r25	; 0x800c95 <Interrupt_Time_Out+0x1>
    cd56:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <Interrupt_Time_Out>
    cd5a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    cd5e:	81 30       	cpi	r24, 0x01	; 1
    cd60:	51 f4       	brne	.+20     	; 0xcd76 <_Z15Send_AT_CommandPcS_S_jh+0xee>
    cd62:	6c e6       	ldi	r22, 0x6C	; 108
    cd64:	7f e0       	ldi	r23, 0x0F	; 15
    cd66:	85 e5       	ldi	r24, 0x55	; 85
    cd68:	94 e1       	ldi	r25, 0x14	; 20
    cd6a:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    cd6e:	85 e5       	ldi	r24, 0x55	; 85
    cd70:	94 e1       	ldi	r25, 0x14	; 20
    cd72:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    cd76:	64 e6       	ldi	r22, 0x64	; 100
    cd78:	70 e0       	ldi	r23, 0x00	; 0
    cd7a:	80 e0       	ldi	r24, 0x00	; 0
    cd7c:	90 e0       	ldi	r25, 0x00	; 0
    cd7e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    cd82:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <Reading_Time>
    cd86:	81 11       	cpse	r24, r1
    cd88:	0a c0       	rjmp	.+20     	; 0xcd9e <_Z15Send_AT_CommandPcS_S_jh+0x116>
    cd8a:	84 ed       	ldi	r24, 0xD4	; 212
    cd8c:	93 e0       	ldi	r25, 0x03	; 3
    cd8e:	ec e6       	ldi	r30, 0x6C	; 108
    cd90:	ff e0       	ldi	r31, 0x0F	; 15
    cd92:	df 01       	movw	r26, r30
    cd94:	9c 01       	movw	r18, r24
    cd96:	1d 92       	st	X+, r1
    cd98:	21 50       	subi	r18, 0x01	; 1
    cd9a:	30 40       	sbci	r19, 0x00	; 0
    cd9c:	e1 f7       	brne	.-8      	; 0xcd96 <_Z15Send_AT_CommandPcS_S_jh+0x10e>
    cd9e:	0e 94 5e 7d 	call	0xfabc	; 0xfabc <_Z17Clear_Serial_Datav>
    cda2:	01 15       	cp	r16, r1
    cda4:	11 05       	cpc	r17, r1
    cda6:	89 f4       	brne	.+34     	; 0xcdca <_Z15Send_AT_CommandPcS_S_jh+0x142>
    cda8:	1a 82       	std	Y+2, r1	; 0x02
    cdaa:	19 82       	std	Y+1, r1	; 0x01
    cdac:	69 e9       	ldi	r22, 0x99	; 153
    cdae:	73 e0       	ldi	r23, 0x03	; 3
    cdb0:	85 e5       	ldi	r24, 0x55	; 85
    cdb2:	94 e1       	ldi	r25, 0x14	; 20
    cdb4:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    cdb8:	8a e1       	ldi	r24, 0x1A	; 26
    cdba:	89 83       	std	Y+1, r24	; 0x01
    cdbc:	be 01       	movw	r22, r28
    cdbe:	6f 5f       	subi	r22, 0xFF	; 255
    cdc0:	7f 4f       	sbci	r23, 0xFF	; 255
    cdc2:	82 e1       	ldi	r24, 0x12	; 18
    cdc4:	96 e1       	ldi	r25, 0x16	; 22
    cdc6:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <_ZN5Print5printEPKc>
    cdca:	80 2f       	mov	r24, r16
    cdcc:	0f 90       	pop	r0
    cdce:	0f 90       	pop	r0
    cdd0:	df 91       	pop	r29
    cdd2:	cf 91       	pop	r28
    cdd4:	1f 91       	pop	r17
    cdd6:	0f 91       	pop	r16
    cdd8:	ff 90       	pop	r15
    cdda:	ef 90       	pop	r14
    cddc:	df 90       	pop	r13
    cdde:	cf 90       	pop	r12
    cde0:	bf 90       	pop	r11
    cde2:	af 90       	pop	r10
    cde4:	9f 90       	pop	r9
    cde6:	8f 90       	pop	r8
    cde8:	7f 90       	pop	r7
    cdea:	6f 90       	pop	r6
    cdec:	5f 90       	pop	r5
    cdee:	4f 90       	pop	r4
    cdf0:	08 95       	ret

0000cdf2 <_Z8Gsm_Initv>:
    cdf2:	0f 93       	push	r16
    cdf4:	e4 de       	rcall	.-568    	; 0xcbbe <_Z12Reset_Bufferv>
    cdf6:	69 e3       	ldi	r22, 0x39	; 57
    cdf8:	74 e2       	ldi	r23, 0x24	; 36
    cdfa:	82 e1       	ldi	r24, 0x12	; 18
    cdfc:	96 e1       	ldi	r25, 0x16	; 22
    cdfe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ce02:	02 e0       	ldi	r16, 0x02	; 2
    ce04:	28 ee       	ldi	r18, 0xE8	; 232
    ce06:	33 e0       	ldi	r19, 0x03	; 3
    ce08:	40 e0       	ldi	r20, 0x00	; 0
    ce0a:	50 e0       	ldi	r21, 0x00	; 0
    ce0c:	6e e1       	ldi	r22, 0x1E	; 30
    ce0e:	73 e0       	ldi	r23, 0x03	; 3
    ce10:	80 e0       	ldi	r24, 0x00	; 0
    ce12:	90 e0       	ldi	r25, 0x00	; 0
    ce14:	39 df       	rcall	.-398    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    ce16:	88 23       	and	r24, r24
    ce18:	01 f1       	breq	.+64     	; 0xce5a <_Z8Gsm_Initv+0x68>
    ce1a:	d1 de       	rcall	.-606    	; 0xcbbe <_Z12Reset_Bufferv>
    ce1c:	6b e2       	ldi	r22, 0x2B	; 43
    ce1e:	74 e2       	ldi	r23, 0x24	; 36
    ce20:	82 e1       	ldi	r24, 0x12	; 18
    ce22:	96 e1       	ldi	r25, 0x16	; 22
    ce24:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ce28:	68 ee       	ldi	r22, 0xE8	; 232
    ce2a:	73 e0       	ldi	r23, 0x03	; 3
    ce2c:	80 e0       	ldi	r24, 0x00	; 0
    ce2e:	90 e0       	ldi	r25, 0x00	; 0
    ce30:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    ce34:	c4 de       	rcall	.-632    	; 0xcbbe <_Z12Reset_Bufferv>
    ce36:	61 e2       	ldi	r22, 0x21	; 33
    ce38:	74 e2       	ldi	r23, 0x24	; 36
    ce3a:	82 e1       	ldi	r24, 0x12	; 18
    ce3c:	96 e1       	ldi	r25, 0x16	; 22
    ce3e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ce42:	01 e0       	ldi	r16, 0x01	; 1
    ce44:	28 eb       	ldi	r18, 0xB8	; 184
    ce46:	3b e0       	ldi	r19, 0x0B	; 11
    ce48:	40 e0       	ldi	r20, 0x00	; 0
    ce4a:	50 e0       	ldi	r21, 0x00	; 0
    ce4c:	6e e1       	ldi	r22, 0x1E	; 30
    ce4e:	73 e0       	ldi	r23, 0x03	; 3
    ce50:	80 e0       	ldi	r24, 0x00	; 0
    ce52:	90 e0       	ldi	r25, 0x00	; 0
    ce54:	19 df       	rcall	.-462    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    ce56:	81 e0       	ldi	r24, 0x01	; 1
    ce58:	01 c0       	rjmp	.+2      	; 0xce5c <_Z8Gsm_Initv+0x6a>
    ce5a:	80 e0       	ldi	r24, 0x00	; 0
    ce5c:	0f 91       	pop	r16
    ce5e:	08 95       	ret

0000ce60 <_Z20Check_Gsm_Connectionv>:
    ce60:	0f 93       	push	r16
    ce62:	ad de       	rcall	.-678    	; 0xcbbe <_Z12Reset_Bufferv>
    ce64:	66 e1       	ldi	r22, 0x16	; 22
    ce66:	74 e2       	ldi	r23, 0x24	; 36
    ce68:	82 e1       	ldi	r24, 0x12	; 18
    ce6a:	96 e1       	ldi	r25, 0x16	; 22
    ce6c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ce70:	02 e0       	ldi	r16, 0x02	; 2
    ce72:	28 e8       	ldi	r18, 0x88	; 136
    ce74:	33 e1       	ldi	r19, 0x13	; 19
    ce76:	40 e0       	ldi	r20, 0x00	; 0
    ce78:	50 e0       	ldi	r21, 0x00	; 0
    ce7a:	6e e1       	ldi	r22, 0x1E	; 30
    ce7c:	73 e0       	ldi	r23, 0x03	; 3
    ce7e:	80 e0       	ldi	r24, 0x00	; 0
    ce80:	90 e0       	ldi	r25, 0x00	; 0
    ce82:	02 df       	rcall	.-508    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    ce84:	9c de       	rcall	.-712    	; 0xcbbe <_Z12Reset_Bufferv>
    ce86:	6c e0       	ldi	r22, 0x0C	; 12
    ce88:	74 e2       	ldi	r23, 0x24	; 36
    ce8a:	82 e1       	ldi	r24, 0x12	; 18
    ce8c:	96 e1       	ldi	r25, 0x16	; 22
    ce8e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ce92:	28 eb       	ldi	r18, 0xB8	; 184
    ce94:	3b e0       	ldi	r19, 0x0B	; 11
    ce96:	40 e0       	ldi	r20, 0x00	; 0
    ce98:	50 e0       	ldi	r21, 0x00	; 0
    ce9a:	6e e1       	ldi	r22, 0x1E	; 30
    ce9c:	73 e0       	ldi	r23, 0x03	; 3
    ce9e:	80 e0       	ldi	r24, 0x00	; 0
    cea0:	90 e0       	ldi	r25, 0x00	; 0
    cea2:	f2 de       	rcall	.-540    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cea4:	8c de       	rcall	.-744    	; 0xcbbe <_Z12Reset_Bufferv>
    cea6:	63 e0       	ldi	r22, 0x03	; 3
    cea8:	74 e2       	ldi	r23, 0x24	; 36
    ceaa:	82 e1       	ldi	r24, 0x12	; 18
    ceac:	96 e1       	ldi	r25, 0x16	; 22
    ceae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    ceb2:	28 eb       	ldi	r18, 0xB8	; 184
    ceb4:	3b e0       	ldi	r19, 0x0B	; 11
    ceb6:	4c ea       	ldi	r20, 0xAC	; 172
    ceb8:	53 e0       	ldi	r21, 0x03	; 3
    ceba:	67 eb       	ldi	r22, 0xB7	; 183
    cebc:	73 e0       	ldi	r23, 0x03	; 3
    cebe:	80 e0       	ldi	r24, 0x00	; 0
    cec0:	90 e0       	ldi	r25, 0x00	; 0
    cec2:	e2 de       	rcall	.-572    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cec4:	81 11       	cpse	r24, r1
    cec6:	26 c0       	rjmp	.+76     	; 0xcf14 <_Z20Check_Gsm_Connectionv+0xb4>
    cec8:	68 eb       	ldi	r22, 0xB8	; 184
    ceca:	7b e0       	ldi	r23, 0x0B	; 11
    cecc:	80 e0       	ldi	r24, 0x00	; 0
    cece:	90 e0       	ldi	r25, 0x00	; 0
    ced0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    ced4:	74 de       	rcall	.-792    	; 0xcbbe <_Z12Reset_Bufferv>
    ced6:	69 ef       	ldi	r22, 0xF9	; 249
    ced8:	73 e2       	ldi	r23, 0x23	; 35
    ceda:	82 e1       	ldi	r24, 0x12	; 18
    cedc:	96 e1       	ldi	r25, 0x16	; 22
    cede:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cee2:	28 eb       	ldi	r18, 0xB8	; 184
    cee4:	3b e0       	ldi	r19, 0x0B	; 11
    cee6:	40 e0       	ldi	r20, 0x00	; 0
    cee8:	50 e0       	ldi	r21, 0x00	; 0
    ceea:	6e e1       	ldi	r22, 0x1E	; 30
    ceec:	73 e0       	ldi	r23, 0x03	; 3
    ceee:	80 e0       	ldi	r24, 0x00	; 0
    cef0:	90 e0       	ldi	r25, 0x00	; 0
    cef2:	ca de       	rcall	.-620    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cef4:	64 de       	rcall	.-824    	; 0xcbbe <_Z12Reset_Bufferv>
    cef6:	60 ef       	ldi	r22, 0xF0	; 240
    cef8:	73 e2       	ldi	r23, 0x23	; 35
    cefa:	82 e1       	ldi	r24, 0x12	; 18
    cefc:	96 e1       	ldi	r25, 0x16	; 22
    cefe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf02:	28 eb       	ldi	r18, 0xB8	; 184
    cf04:	3b e0       	ldi	r19, 0x0B	; 11
    cf06:	4c ea       	ldi	r20, 0xAC	; 172
    cf08:	53 e0       	ldi	r21, 0x03	; 3
    cf0a:	67 eb       	ldi	r22, 0xB7	; 183
    cf0c:	73 e0       	ldi	r23, 0x03	; 3
    cf0e:	80 e0       	ldi	r24, 0x00	; 0
    cf10:	90 e0       	ldi	r25, 0x00	; 0
    cf12:	ba de       	rcall	.-652    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cf14:	68 ee       	ldi	r22, 0xE8	; 232
    cf16:	73 e0       	ldi	r23, 0x03	; 3
    cf18:	80 e0       	ldi	r24, 0x00	; 0
    cf1a:	90 e0       	ldi	r25, 0x00	; 0
    cf1c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    cf20:	4e de       	rcall	.-868    	; 0xcbbe <_Z12Reset_Bufferv>
    cf22:	65 ee       	ldi	r22, 0xE5	; 229
    cf24:	73 e2       	ldi	r23, 0x23	; 35
    cf26:	82 e1       	ldi	r24, 0x12	; 18
    cf28:	96 e1       	ldi	r25, 0x16	; 22
    cf2a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf2e:	02 e0       	ldi	r16, 0x02	; 2
    cf30:	28 eb       	ldi	r18, 0xB8	; 184
    cf32:	3b e0       	ldi	r19, 0x0B	; 11
    cf34:	40 e0       	ldi	r20, 0x00	; 0
    cf36:	50 e0       	ldi	r21, 0x00	; 0
    cf38:	6e e1       	ldi	r22, 0x1E	; 30
    cf3a:	73 e0       	ldi	r23, 0x03	; 3
    cf3c:	80 e0       	ldi	r24, 0x00	; 0
    cf3e:	90 e0       	ldi	r25, 0x00	; 0
    cf40:	a3 de       	rcall	.-698    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cf42:	3d de       	rcall	.-902    	; 0xcbbe <_Z12Reset_Bufferv>
    cf44:	6b ed       	ldi	r22, 0xDB	; 219
    cf46:	73 e2       	ldi	r23, 0x23	; 35
    cf48:	82 e1       	ldi	r24, 0x12	; 18
    cf4a:	96 e1       	ldi	r25, 0x16	; 22
    cf4c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf50:	28 eb       	ldi	r18, 0xB8	; 184
    cf52:	3b e0       	ldi	r19, 0x0B	; 11
    cf54:	42 ec       	ldi	r20, 0xC2	; 194
    cf56:	53 e0       	ldi	r21, 0x03	; 3
    cf58:	6e ec       	ldi	r22, 0xCE	; 206
    cf5a:	73 e0       	ldi	r23, 0x03	; 3
    cf5c:	80 e0       	ldi	r24, 0x00	; 0
    cf5e:	90 e0       	ldi	r25, 0x00	; 0
    cf60:	93 de       	rcall	.-730    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cf62:	81 11       	cpse	r24, r1
    cf64:	2b c0       	rjmp	.+86     	; 0xcfbc <_Z20Check_Gsm_Connectionv+0x15c>
    cf66:	68 ee       	ldi	r22, 0xE8	; 232
    cf68:	73 e0       	ldi	r23, 0x03	; 3
    cf6a:	80 e0       	ldi	r24, 0x00	; 0
    cf6c:	90 e0       	ldi	r25, 0x00	; 0
    cf6e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    cf72:	25 de       	rcall	.-950    	; 0xcbbe <_Z12Reset_Bufferv>
    cf74:	60 ed       	ldi	r22, 0xD0	; 208
    cf76:	73 e2       	ldi	r23, 0x23	; 35
    cf78:	82 e1       	ldi	r24, 0x12	; 18
    cf7a:	96 e1       	ldi	r25, 0x16	; 22
    cf7c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf80:	28 eb       	ldi	r18, 0xB8	; 184
    cf82:	3b e0       	ldi	r19, 0x0B	; 11
    cf84:	40 e0       	ldi	r20, 0x00	; 0
    cf86:	50 e0       	ldi	r21, 0x00	; 0
    cf88:	6e e1       	ldi	r22, 0x1E	; 30
    cf8a:	73 e0       	ldi	r23, 0x03	; 3
    cf8c:	80 e0       	ldi	r24, 0x00	; 0
    cf8e:	90 e0       	ldi	r25, 0x00	; 0
    cf90:	7b de       	rcall	.-778    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cf92:	15 de       	rcall	.-982    	; 0xcbbe <_Z12Reset_Bufferv>
    cf94:	66 ec       	ldi	r22, 0xC6	; 198
    cf96:	73 e2       	ldi	r23, 0x23	; 35
    cf98:	82 e1       	ldi	r24, 0x12	; 18
    cf9a:	96 e1       	ldi	r25, 0x16	; 22
    cf9c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cfa0:	28 eb       	ldi	r18, 0xB8	; 184
    cfa2:	3b e0       	ldi	r19, 0x0B	; 11
    cfa4:	42 ec       	ldi	r20, 0xC2	; 194
    cfa6:	53 e0       	ldi	r21, 0x03	; 3
    cfa8:	6e ec       	ldi	r22, 0xCE	; 206
    cfaa:	73 e0       	ldi	r23, 0x03	; 3
    cfac:	80 e0       	ldi	r24, 0x00	; 0
    cfae:	90 e0       	ldi	r25, 0x00	; 0
    cfb0:	6b de       	rcall	.-810    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cfb2:	91 e0       	ldi	r25, 0x01	; 1
    cfb4:	81 11       	cpse	r24, r1
    cfb6:	03 c0       	rjmp	.+6      	; 0xcfbe <_Z20Check_Gsm_Connectionv+0x15e>
    cfb8:	90 e0       	ldi	r25, 0x00	; 0
    cfba:	01 c0       	rjmp	.+2      	; 0xcfbe <_Z20Check_Gsm_Connectionv+0x15e>
    cfbc:	91 e0       	ldi	r25, 0x01	; 1
    cfbe:	89 2f       	mov	r24, r25
    cfc0:	0f 91       	pop	r16
    cfc2:	08 95       	ret

0000cfc4 <_Z17Get_Operator_NamePc>:
    cfc4:	0f 93       	push	r16
    cfc6:	cf 93       	push	r28
    cfc8:	df 93       	push	r29
    cfca:	ec 01       	movw	r28, r24
    cfcc:	f8 dd       	rcall	.-1040   	; 0xcbbe <_Z12Reset_Bufferv>
    cfce:	81 e0       	ldi	r24, 0x01	; 1
    cfd0:	80 93 93 0c 	sts	0x0C93, r24	; 0x800c93 <Reading_Time>
    cfd4:	6d eb       	ldi	r22, 0xBD	; 189
    cfd6:	73 e2       	ldi	r23, 0x23	; 35
    cfd8:	82 e1       	ldi	r24, 0x12	; 18
    cfda:	96 e1       	ldi	r25, 0x16	; 22
    cfdc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    cfe0:	02 e0       	ldi	r16, 0x02	; 2
    cfe2:	28 eb       	ldi	r18, 0xB8	; 184
    cfe4:	3b e0       	ldi	r19, 0x0B	; 11
    cfe6:	40 e0       	ldi	r20, 0x00	; 0
    cfe8:	50 e0       	ldi	r21, 0x00	; 0
    cfea:	6e e1       	ldi	r22, 0x1E	; 30
    cfec:	73 e0       	ldi	r23, 0x03	; 3
    cfee:	80 e0       	ldi	r24, 0x00	; 0
    cff0:	90 e0       	ldi	r25, 0x00	; 0
    cff2:	4a de       	rcall	.-876    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    cff4:	6c e6       	ldi	r22, 0x6C	; 108
    cff6:	7f e0       	ldi	r23, 0x0F	; 15
    cff8:	ce 01       	movw	r24, r28
    cffa:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    cffe:	84 ed       	ldi	r24, 0xD4	; 212
    d000:	93 e0       	ldi	r25, 0x03	; 3
    d002:	ec e6       	ldi	r30, 0x6C	; 108
    d004:	ff e0       	ldi	r31, 0x0F	; 15
    d006:	df 01       	movw	r26, r30
    d008:	9c 01       	movw	r18, r24
    d00a:	1d 92       	st	X+, r1
    d00c:	21 50       	subi	r18, 0x01	; 1
    d00e:	30 40       	sbci	r19, 0x00	; 0
    d010:	e1 f7       	brne	.-8      	; 0xd00a <_Z17Get_Operator_NamePc+0x46>
    d012:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <Reading_Time>
    d016:	df 91       	pop	r29
    d018:	cf 91       	pop	r28
    d01a:	0f 91       	pop	r16
    d01c:	08 95       	ret

0000d01e <_Z12Gprs_ConnectPc>:
    d01e:	ef 92       	push	r14
    d020:	ff 92       	push	r15
    d022:	0f 93       	push	r16
    d024:	cf 93       	push	r28
    d026:	df 93       	push	r29
    d028:	cd b7       	in	r28, 0x3d	; 61
    d02a:	de b7       	in	r29, 0x3e	; 62
    d02c:	a8 97       	sbiw	r28, 0x28	; 40
    d02e:	0f b6       	in	r0, 0x3f	; 63
    d030:	f8 94       	cli
    d032:	de bf       	out	0x3e, r29	; 62
    d034:	0f be       	out	0x3f, r0	; 63
    d036:	cd bf       	out	0x3d, r28	; 61
    d038:	c2 dd       	rcall	.-1148   	; 0xcbbe <_Z12Reset_Bufferv>
    d03a:	87 e5       	ldi	r24, 0x57	; 87
    d03c:	9d e0       	ldi	r25, 0x0D	; 13
    d03e:	9f 93       	push	r25
    d040:	8f 93       	push	r24
    d042:	8a ed       	ldi	r24, 0xDA	; 218
    d044:	93 e0       	ldi	r25, 0x03	; 3
    d046:	9f 93       	push	r25
    d048:	8f 93       	push	r24
    d04a:	ce 01       	movw	r24, r28
    d04c:	01 96       	adiw	r24, 0x01	; 1
    d04e:	7c 01       	movw	r14, r24
    d050:	9f 93       	push	r25
    d052:	8f 93       	push	r24
    d054:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d058:	01 e0       	ldi	r16, 0x01	; 1
    d05a:	28 ee       	ldi	r18, 0xE8	; 232
    d05c:	33 e0       	ldi	r19, 0x03	; 3
    d05e:	40 e0       	ldi	r20, 0x00	; 0
    d060:	50 e0       	ldi	r21, 0x00	; 0
    d062:	6e e1       	ldi	r22, 0x1E	; 30
    d064:	73 e0       	ldi	r23, 0x03	; 3
    d066:	c7 01       	movw	r24, r14
    d068:	0f de       	rcall	.-994    	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d06a:	64 e9       	ldi	r22, 0x94	; 148
    d06c:	73 e2       	ldi	r23, 0x23	; 35
    d06e:	85 e5       	ldi	r24, 0x55	; 85
    d070:	94 e1       	ldi	r25, 0x14	; 20
    d072:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d076:	0f 90       	pop	r0
    d078:	0f 90       	pop	r0
    d07a:	0f 90       	pop	r0
    d07c:	0f 90       	pop	r0
    d07e:	0f 90       	pop	r0
    d080:	0f 90       	pop	r0
    d082:	81 e0       	ldi	r24, 0x01	; 1
    d084:	a8 96       	adiw	r28, 0x28	; 40
    d086:	0f b6       	in	r0, 0x3f	; 63
    d088:	f8 94       	cli
    d08a:	de bf       	out	0x3e, r29	; 62
    d08c:	0f be       	out	0x3f, r0	; 63
    d08e:	cd bf       	out	0x3d, r28	; 61
    d090:	df 91       	pop	r29
    d092:	cf 91       	pop	r28
    d094:	0f 91       	pop	r16
    d096:	ff 90       	pop	r15
    d098:	ef 90       	pop	r14
    d09a:	08 95       	ret

0000d09c <_Z12MQTT_PublishPhS_>:
    d09c:	af 92       	push	r10
    d09e:	bf 92       	push	r11
    d0a0:	cf 92       	push	r12
    d0a2:	df 92       	push	r13
    d0a4:	ef 92       	push	r14
    d0a6:	ff 92       	push	r15
    d0a8:	0f 93       	push	r16
    d0aa:	1f 93       	push	r17
    d0ac:	cf 93       	push	r28
    d0ae:	df 93       	push	r29
    d0b0:	cd b7       	in	r28, 0x3d	; 61
    d0b2:	de b7       	in	r29, 0x3e	; 62
    d0b4:	6e 97       	sbiw	r28, 0x1e	; 30
    d0b6:	0f b6       	in	r0, 0x3f	; 63
    d0b8:	f8 94       	cli
    d0ba:	de bf       	out	0x3e, r29	; 62
    d0bc:	0f be       	out	0x3f, r0	; 63
    d0be:	cd bf       	out	0x3d, r28	; 61
    d0c0:	5c 01       	movw	r10, r24
    d0c2:	6b 01       	movw	r12, r22
    d0c4:	1e e1       	ldi	r17, 0x1E	; 30
    d0c6:	ce 01       	movw	r24, r28
    d0c8:	01 96       	adiw	r24, 0x01	; 1
    d0ca:	7c 01       	movw	r14, r24
    d0cc:	fc 01       	movw	r30, r24
    d0ce:	81 2f       	mov	r24, r17
    d0d0:	11 92       	st	Z+, r1
    d0d2:	8a 95       	dec	r24
    d0d4:	e9 f7       	brne	.-6      	; 0xd0d0 <_Z12MQTT_PublishPhS_+0x34>
    d0d6:	73 dd       	rcall	.-1306   	; 0xcbbe <_Z12Reset_Bufferv>
    d0d8:	f5 01       	movw	r30, r10
    d0da:	01 90       	ld	r0, Z+
    d0dc:	00 20       	and	r0, r0
    d0de:	e9 f7       	brne	.-6      	; 0xd0da <_Z12MQTT_PublishPhS_+0x3e>
    d0e0:	31 97       	sbiw	r30, 0x01	; 1
    d0e2:	ea 19       	sub	r30, r10
    d0e4:	fb 09       	sbc	r31, r11
    d0e6:	ff 93       	push	r31
    d0e8:	ef 93       	push	r30
    d0ea:	81 ef       	ldi	r24, 0xF1	; 241
    d0ec:	93 e0       	ldi	r25, 0x03	; 3
    d0ee:	9f 93       	push	r25
    d0f0:	8f 93       	push	r24
    d0f2:	ff 92       	push	r15
    d0f4:	ef 92       	push	r14
    d0f6:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d0fa:	02 e0       	ldi	r16, 0x02	; 2
    d0fc:	28 eb       	ldi	r18, 0xB8	; 184
    d0fe:	3b e0       	ldi	r19, 0x0B	; 11
    d100:	40 e0       	ldi	r20, 0x00	; 0
    d102:	50 e0       	ldi	r21, 0x00	; 0
    d104:	64 e0       	ldi	r22, 0x04	; 4
    d106:	74 e0       	ldi	r23, 0x04	; 4
    d108:	c7 01       	movw	r24, r14
    d10a:	be dd       	rcall	.-1156   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d10c:	0f 90       	pop	r0
    d10e:	0f 90       	pop	r0
    d110:	0f 90       	pop	r0
    d112:	0f 90       	pop	r0
    d114:	0f 90       	pop	r0
    d116:	0f 90       	pop	r0
    d118:	81 11       	cpse	r24, r1
    d11a:	22 c0       	rjmp	.+68     	; 0xd160 <_Z12MQTT_PublishPhS_+0xc4>
    d11c:	50 dd       	rcall	.-1376   	; 0xcbbe <_Z12Reset_Bufferv>
    d11e:	6a e8       	ldi	r22, 0x8A	; 138
    d120:	73 e2       	ldi	r23, 0x23	; 35
    d122:	82 e1       	ldi	r24, 0x12	; 18
    d124:	96 e1       	ldi	r25, 0x16	; 22
    d126:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d12a:	01 e0       	ldi	r16, 0x01	; 1
    d12c:	28 ee       	ldi	r18, 0xE8	; 232
    d12e:	33 e0       	ldi	r19, 0x03	; 3
    d130:	40 e0       	ldi	r20, 0x00	; 0
    d132:	50 e0       	ldi	r21, 0x00	; 0
    d134:	6e e1       	ldi	r22, 0x1E	; 30
    d136:	73 e0       	ldi	r23, 0x03	; 3
    d138:	80 e0       	ldi	r24, 0x00	; 0
    d13a:	90 e0       	ldi	r25, 0x00	; 0
    d13c:	a5 dd       	rcall	.-1206   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d13e:	8e e1       	ldi	r24, 0x1E	; 30
    d140:	f7 01       	movw	r30, r14
    d142:	11 92       	st	Z+, r1
    d144:	8a 95       	dec	r24
    d146:	e9 f7       	brne	.-6      	; 0xd142 <_Z12MQTT_PublishPhS_+0xa6>
    d148:	8a e1       	ldi	r24, 0x1A	; 26
    d14a:	89 83       	std	Y+1, r24	; 0x01
    d14c:	28 ec       	ldi	r18, 0xC8	; 200
    d14e:	30 e0       	ldi	r19, 0x00	; 0
    d150:	40 e0       	ldi	r20, 0x00	; 0
    d152:	50 e0       	ldi	r21, 0x00	; 0
    d154:	6e e1       	ldi	r22, 0x1E	; 30
    d156:	73 e0       	ldi	r23, 0x03	; 3
    d158:	c7 01       	movw	r24, r14
    d15a:	96 dd       	rcall	.-1236   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d15c:	80 e0       	ldi	r24, 0x00	; 0
    d15e:	41 c0       	rjmp	.+130    	; 0xd1e2 <_Z12MQTT_PublishPhS_+0x146>
    d160:	2e dd       	rcall	.-1444   	; 0xcbbe <_Z12Reset_Bufferv>
    d162:	b5 01       	movw	r22, r10
    d164:	82 e1       	ldi	r24, 0x12	; 18
    d166:	96 e1       	ldi	r25, 0x16	; 22
    d168:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    d16c:	f7 01       	movw	r30, r14
    d16e:	11 92       	st	Z+, r1
    d170:	1a 95       	dec	r17
    d172:	e9 f7       	brne	.-6      	; 0xd16e <_Z12MQTT_PublishPhS_+0xd2>
    d174:	24 dd       	rcall	.-1464   	; 0xcbbe <_Z12Reset_Bufferv>
    d176:	f6 01       	movw	r30, r12
    d178:	01 90       	ld	r0, Z+
    d17a:	00 20       	and	r0, r0
    d17c:	e9 f7       	brne	.-6      	; 0xd178 <_Z12MQTT_PublishPhS_+0xdc>
    d17e:	31 97       	sbiw	r30, 0x01	; 1
    d180:	ec 19       	sub	r30, r12
    d182:	fd 09       	sbc	r31, r13
    d184:	ff 93       	push	r31
    d186:	ef 93       	push	r30
    d188:	86 e0       	ldi	r24, 0x06	; 6
    d18a:	94 e0       	ldi	r25, 0x04	; 4
    d18c:	9f 93       	push	r25
    d18e:	8f 93       	push	r24
    d190:	ff 92       	push	r15
    d192:	ef 92       	push	r14
    d194:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d198:	02 e0       	ldi	r16, 0x02	; 2
    d19a:	28 eb       	ldi	r18, 0xB8	; 184
    d19c:	3b e0       	ldi	r19, 0x0B	; 11
    d19e:	40 e0       	ldi	r20, 0x00	; 0
    d1a0:	50 e0       	ldi	r21, 0x00	; 0
    d1a2:	64 e0       	ldi	r22, 0x04	; 4
    d1a4:	74 e0       	ldi	r23, 0x04	; 4
    d1a6:	c7 01       	movw	r24, r14
    d1a8:	6f dd       	rcall	.-1314   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d1aa:	0f 90       	pop	r0
    d1ac:	0f 90       	pop	r0
    d1ae:	0f 90       	pop	r0
    d1b0:	0f 90       	pop	r0
    d1b2:	0f 90       	pop	r0
    d1b4:	0f 90       	pop	r0
    d1b6:	88 23       	and	r24, r24
    d1b8:	09 f4       	brne	.+2      	; 0xd1bc <_Z12MQTT_PublishPhS_+0x120>
    d1ba:	b0 cf       	rjmp	.-160    	; 0xd11c <_Z12MQTT_PublishPhS_+0x80>
    d1bc:	00 dd       	rcall	.-1536   	; 0xcbbe <_Z12Reset_Bufferv>
    d1be:	b6 01       	movw	r22, r12
    d1c0:	82 e1       	ldi	r24, 0x12	; 18
    d1c2:	96 e1       	ldi	r25, 0x16	; 22
    d1c4:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    d1c8:	28 eb       	ldi	r18, 0xB8	; 184
    d1ca:	3b e0       	ldi	r19, 0x0B	; 11
    d1cc:	40 e0       	ldi	r20, 0x00	; 0
    d1ce:	50 e0       	ldi	r21, 0x00	; 0
    d1d0:	6b e1       	ldi	r22, 0x1B	; 27
    d1d2:	74 e0       	ldi	r23, 0x04	; 4
    d1d4:	8a e2       	ldi	r24, 0x2A	; 42
    d1d6:	94 e0       	ldi	r25, 0x04	; 4
    d1d8:	57 dd       	rcall	.-1362   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d1da:	88 23       	and	r24, r24
    d1dc:	09 f4       	brne	.+2      	; 0xd1e0 <_Z12MQTT_PublishPhS_+0x144>
    d1de:	9e cf       	rjmp	.-196    	; 0xd11c <_Z12MQTT_PublishPhS_+0x80>
    d1e0:	81 e0       	ldi	r24, 0x01	; 1
    d1e2:	6e 96       	adiw	r28, 0x1e	; 30
    d1e4:	0f b6       	in	r0, 0x3f	; 63
    d1e6:	f8 94       	cli
    d1e8:	de bf       	out	0x3e, r29	; 62
    d1ea:	0f be       	out	0x3f, r0	; 63
    d1ec:	cd bf       	out	0x3d, r28	; 61
    d1ee:	df 91       	pop	r29
    d1f0:	cf 91       	pop	r28
    d1f2:	1f 91       	pop	r17
    d1f4:	0f 91       	pop	r16
    d1f6:	ff 90       	pop	r15
    d1f8:	ef 90       	pop	r14
    d1fa:	df 90       	pop	r13
    d1fc:	cf 90       	pop	r12
    d1fe:	bf 90       	pop	r11
    d200:	af 90       	pop	r10
    d202:	08 95       	ret

0000d204 <_Z18_kGSM_SIG_STRENGTHv>:
    d204:	0f 93       	push	r16
    d206:	db dc       	rcall	.-1610   	; 0xcbbe <_Z12Reset_Bufferv>
    d208:	6b e4       	ldi	r22, 0x4B	; 75
    d20a:	74 e2       	ldi	r23, 0x24	; 36
    d20c:	82 e1       	ldi	r24, 0x12	; 18
    d20e:	96 e1       	ldi	r25, 0x16	; 22
    d210:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d214:	01 e0       	ldi	r16, 0x01	; 1
    d216:	20 ed       	ldi	r18, 0xD0	; 208
    d218:	37 e0       	ldi	r19, 0x07	; 7
    d21a:	40 e0       	ldi	r20, 0x00	; 0
    d21c:	50 e0       	ldi	r21, 0x00	; 0
    d21e:	6e e1       	ldi	r22, 0x1E	; 30
    d220:	73 e0       	ldi	r23, 0x03	; 3
    d222:	80 e0       	ldi	r24, 0x00	; 0
    d224:	90 e0       	ldi	r25, 0x00	; 0
    d226:	30 dd       	rcall	.-1440   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d228:	88 23       	and	r24, r24
    d22a:	d1 f1       	breq	.+116    	; 0xd2a0 <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d22c:	6d e3       	ldi	r22, 0x3D	; 61
    d22e:	74 e0       	ldi	r23, 0x04	; 4
    d230:	8c e6       	ldi	r24, 0x6C	; 108
    d232:	9f e0       	ldi	r25, 0x0F	; 15
    d234:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    d238:	89 2b       	or	r24, r25
    d23a:	91 f1       	breq	.+100    	; 0xd2a0 <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d23c:	80 e0       	ldi	r24, 0x00	; 0
    d23e:	90 e0       	ldi	r25, 0x00	; 0
    d240:	28 2f       	mov	r18, r24
    d242:	fc 01       	movw	r30, r24
    d244:	e4 59       	subi	r30, 0x94	; 148
    d246:	f0 4f       	sbci	r31, 0xF0	; 240
    d248:	30 81       	ld	r19, Z
    d24a:	3b 32       	cpi	r19, 0x2B	; 43
    d24c:	31 f4       	brne	.+12     	; 0xd25a <_Z18_kGSM_SIG_STRENGTHv+0x56>
    d24e:	fc 01       	movw	r30, r24
    d250:	e0 59       	subi	r30, 0x90	; 144
    d252:	f0 4f       	sbci	r31, 0xF0	; 240
    d254:	30 81       	ld	r19, Z
    d256:	3a 33       	cpi	r19, 0x3A	; 58
    d258:	29 f0       	breq	.+10     	; 0xd264 <_Z18_kGSM_SIG_STRENGTHv+0x60>
    d25a:	01 96       	adiw	r24, 0x01	; 1
    d25c:	84 31       	cpi	r24, 0x14	; 20
    d25e:	91 05       	cpc	r25, r1
    d260:	79 f7       	brne	.-34     	; 0xd240 <_Z18_kGSM_SIG_STRENGTHv+0x3c>
    d262:	24 e1       	ldi	r18, 0x14	; 20
    d264:	2a 5f       	subi	r18, 0xFA	; 250
    d266:	30 e0       	ldi	r19, 0x00	; 0
    d268:	f9 01       	movw	r30, r18
    d26a:	e4 59       	subi	r30, 0x94	; 148
    d26c:	f0 4f       	sbci	r31, 0xF0	; 240
    d26e:	80 81       	ld	r24, Z
    d270:	f9 01       	movw	r30, r18
    d272:	e3 59       	subi	r30, 0x93	; 147
    d274:	f0 4f       	sbci	r31, 0xF0	; 240
    d276:	90 81       	ld	r25, Z
    d278:	24 ed       	ldi	r18, 0xD4	; 212
    d27a:	33 e0       	ldi	r19, 0x03	; 3
    d27c:	ec e6       	ldi	r30, 0x6C	; 108
    d27e:	ff e0       	ldi	r31, 0x0F	; 15
    d280:	df 01       	movw	r26, r30
    d282:	a9 01       	movw	r20, r18
    d284:	1d 92       	st	X+, r1
    d286:	41 50       	subi	r20, 0x01	; 1
    d288:	50 40       	sbci	r21, 0x00	; 0
    d28a:	e1 f7       	brne	.-8      	; 0xd284 <_Z18_kGSM_SIG_STRENGTHv+0x80>
    d28c:	88 0f       	add	r24, r24
    d28e:	80 56       	subi	r24, 0x60	; 96
    d290:	28 2f       	mov	r18, r24
    d292:	22 0f       	add	r18, r18
    d294:	22 0f       	add	r18, r18
    d296:	82 0f       	add	r24, r18
    d298:	90 53       	subi	r25, 0x30	; 48
    d29a:	89 0f       	add	r24, r25
    d29c:	90 e0       	ldi	r25, 0x00	; 0
    d29e:	1a c0       	rjmp	.+52     	; 0xd2d4 <_Z18_kGSM_SIG_STRENGTHv+0xd0>
    d2a0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    d2a4:	81 30       	cpi	r24, 0x01	; 1
    d2a6:	51 f4       	brne	.+20     	; 0xd2bc <_Z18_kGSM_SIG_STRENGTHv+0xb8>
    d2a8:	6c e3       	ldi	r22, 0x3C	; 60
    d2aa:	74 e2       	ldi	r23, 0x24	; 36
    d2ac:	85 e5       	ldi	r24, 0x55	; 85
    d2ae:	94 e1       	ldi	r25, 0x14	; 20
    d2b0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d2b4:	85 e5       	ldi	r24, 0x55	; 85
    d2b6:	94 e1       	ldi	r25, 0x14	; 20
    d2b8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    d2bc:	84 ed       	ldi	r24, 0xD4	; 212
    d2be:	93 e0       	ldi	r25, 0x03	; 3
    d2c0:	ec e6       	ldi	r30, 0x6C	; 108
    d2c2:	ff e0       	ldi	r31, 0x0F	; 15
    d2c4:	df 01       	movw	r26, r30
    d2c6:	9c 01       	movw	r18, r24
    d2c8:	1d 92       	st	X+, r1
    d2ca:	21 50       	subi	r18, 0x01	; 1
    d2cc:	30 40       	sbci	r19, 0x00	; 0
    d2ce:	e1 f7       	brne	.-8      	; 0xd2c8 <_Z18_kGSM_SIG_STRENGTHv+0xc4>
    d2d0:	80 e0       	ldi	r24, 0x00	; 0
    d2d2:	90 e0       	ldi	r25, 0x00	; 0
    d2d4:	0f 91       	pop	r16
    d2d6:	08 95       	ret

0000d2d8 <_Z17Is_MQTT_Connectedv>:
    d2d8:	0f 93       	push	r16
    d2da:	71 dc       	rcall	.-1822   	; 0xcbbe <_Z12Reset_Bufferv>
    d2dc:	6e e3       	ldi	r22, 0x3E	; 62
    d2de:	73 e2       	ldi	r23, 0x23	; 35
    d2e0:	82 e1       	ldi	r24, 0x12	; 18
    d2e2:	96 e1       	ldi	r25, 0x16	; 22
    d2e4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2e8:	01 e0       	ldi	r16, 0x01	; 1
    d2ea:	28 eb       	ldi	r18, 0xB8	; 184
    d2ec:	3b e0       	ldi	r19, 0x0B	; 11
    d2ee:	40 e0       	ldi	r20, 0x00	; 0
    d2f0:	50 e0       	ldi	r21, 0x00	; 0
    d2f2:	61 e4       	ldi	r22, 0x41	; 65
    d2f4:	74 e0       	ldi	r23, 0x04	; 4
    d2f6:	80 e0       	ldi	r24, 0x00	; 0
    d2f8:	90 e0       	ldi	r25, 0x00	; 0
    d2fa:	c6 dc       	rcall	.-1652   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d2fc:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    d300:	88 23       	and	r24, r24
    d302:	69 f0       	breq	.+26     	; 0xd31e <_Z17Is_MQTT_Connectedv+0x46>
    d304:	91 30       	cpi	r25, 0x01	; 1
    d306:	c1 f4       	brne	.+48     	; 0xd338 <_Z17Is_MQTT_Connectedv+0x60>
    d308:	66 e2       	ldi	r22, 0x26	; 38
    d30a:	73 e2       	ldi	r23, 0x23	; 35
    d30c:	85 e5       	ldi	r24, 0x55	; 85
    d30e:	94 e1       	ldi	r25, 0x14	; 20
    d310:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d314:	85 e5       	ldi	r24, 0x55	; 85
    d316:	94 e1       	ldi	r25, 0x14	; 20
    d318:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    d31c:	0d c0       	rjmp	.+26     	; 0xd338 <_Z17Is_MQTT_Connectedv+0x60>
    d31e:	91 30       	cpi	r25, 0x01	; 1
    d320:	69 f4       	brne	.+26     	; 0xd33c <_Z17Is_MQTT_Connectedv+0x64>
    d322:	6a e0       	ldi	r22, 0x0A	; 10
    d324:	73 e2       	ldi	r23, 0x23	; 35
    d326:	85 e5       	ldi	r24, 0x55	; 85
    d328:	94 e1       	ldi	r25, 0x14	; 20
    d32a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d32e:	85 e5       	ldi	r24, 0x55	; 85
    d330:	94 e1       	ldi	r25, 0x14	; 20
    d332:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    d336:	02 c0       	rjmp	.+4      	; 0xd33c <_Z17Is_MQTT_Connectedv+0x64>
    d338:	81 e0       	ldi	r24, 0x01	; 1
    d33a:	01 c0       	rjmp	.+2      	; 0xd33e <_Z17Is_MQTT_Connectedv+0x66>
    d33c:	80 e0       	ldi	r24, 0x00	; 0
    d33e:	0f 91       	pop	r16
    d340:	08 95       	ret

0000d342 <_Z12MQTT_ConnectPKcS0_S0_>:
    d342:	af 92       	push	r10
    d344:	bf 92       	push	r11
    d346:	cf 92       	push	r12
    d348:	df 92       	push	r13
    d34a:	ef 92       	push	r14
    d34c:	ff 92       	push	r15
    d34e:	0f 93       	push	r16
    d350:	1f 93       	push	r17
    d352:	cf 93       	push	r28
    d354:	df 93       	push	r29
    d356:	cd b7       	in	r28, 0x3d	; 61
    d358:	de b7       	in	r29, 0x3e	; 62
    d35a:	c8 57       	subi	r28, 0x78	; 120
    d35c:	d1 09       	sbc	r29, r1
    d35e:	0f b6       	in	r0, 0x3f	; 63
    d360:	f8 94       	cli
    d362:	de bf       	out	0x3e, r29	; 62
    d364:	0f be       	out	0x3f, r0	; 63
    d366:	cd bf       	out	0x3d, r28	; 61
    d368:	d6 2e       	mov	r13, r22
    d36a:	c7 2e       	mov	r12, r23
    d36c:	b4 2e       	mov	r11, r20
    d36e:	a5 2e       	mov	r10, r21
    d370:	18 e7       	ldi	r17, 0x78	; 120
    d372:	9e 01       	movw	r18, r28
    d374:	2f 5f       	subi	r18, 0xFF	; 255
    d376:	3f 4f       	sbci	r19, 0xFF	; 255
    d378:	79 01       	movw	r14, r18
    d37a:	f9 01       	movw	r30, r18
    d37c:	21 2f       	mov	r18, r17
    d37e:	11 92       	st	Z+, r1
    d380:	2a 95       	dec	r18
    d382:	e9 f7       	brne	.-6      	; 0xd37e <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    d384:	1c dc       	rcall	.-1992   	; 0xcbbe <_Z12Reset_Bufferv>
    d386:	6b e6       	ldi	r22, 0x6B	; 107
    d388:	73 e2       	ldi	r23, 0x23	; 35
    d38a:	82 e1       	ldi	r24, 0x12	; 18
    d38c:	96 e1       	ldi	r25, 0x16	; 22
    d38e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d392:	02 e0       	ldi	r16, 0x02	; 2
    d394:	28 eb       	ldi	r18, 0xB8	; 184
    d396:	3b e0       	ldi	r19, 0x0B	; 11
    d398:	40 e0       	ldi	r20, 0x00	; 0
    d39a:	50 e0       	ldi	r21, 0x00	; 0
    d39c:	67 e5       	ldi	r22, 0x57	; 87
    d39e:	74 e0       	ldi	r23, 0x04	; 4
    d3a0:	80 e0       	ldi	r24, 0x00	; 0
    d3a2:	90 e0       	ldi	r25, 0x00	; 0
    d3a4:	71 dc       	rcall	.-1822   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d3a6:	0b dc       	rcall	.-2026   	; 0xcbbe <_Z12Reset_Bufferv>
    d3a8:	6d e5       	ldi	r22, 0x5D	; 93
    d3aa:	73 e2       	ldi	r23, 0x23	; 35
    d3ac:	82 e1       	ldi	r24, 0x12	; 18
    d3ae:	96 e1       	ldi	r25, 0x16	; 22
    d3b0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3b4:	28 eb       	ldi	r18, 0xB8	; 184
    d3b6:	3b e0       	ldi	r19, 0x0B	; 11
    d3b8:	40 e0       	ldi	r20, 0x00	; 0
    d3ba:	50 e0       	ldi	r21, 0x00	; 0
    d3bc:	6e e1       	ldi	r22, 0x1E	; 30
    d3be:	73 e0       	ldi	r23, 0x03	; 3
    d3c0:	80 e0       	ldi	r24, 0x00	; 0
    d3c2:	90 e0       	ldi	r25, 0x00	; 0
    d3c4:	61 dc       	rcall	.-1854   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d3c6:	fb db       	rcall	.-2058   	; 0xcbbe <_Z12Reset_Bufferv>
    d3c8:	6f e4       	ldi	r22, 0x4F	; 79
    d3ca:	73 e2       	ldi	r23, 0x23	; 35
    d3cc:	82 e1       	ldi	r24, 0x12	; 18
    d3ce:	96 e1       	ldi	r25, 0x16	; 22
    d3d0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3d4:	28 eb       	ldi	r18, 0xB8	; 184
    d3d6:	3b e0       	ldi	r19, 0x0B	; 11
    d3d8:	43 e6       	ldi	r20, 0x63	; 99
    d3da:	54 e0       	ldi	r21, 0x04	; 4
    d3dc:	63 e7       	ldi	r22, 0x73	; 115
    d3de:	74 e0       	ldi	r23, 0x04	; 4
    d3e0:	80 e0       	ldi	r24, 0x00	; 0
    d3e2:	90 e0       	ldi	r25, 0x00	; 0
    d3e4:	51 dc       	rcall	.-1886   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d3e6:	eb db       	rcall	.-2090   	; 0xcbbe <_Z12Reset_Bufferv>
    d3e8:	82 e8       	ldi	r24, 0x82	; 130
    d3ea:	94 e0       	ldi	r25, 0x04	; 4
    d3ec:	9f 93       	push	r25
    d3ee:	8f 93       	push	r24
    d3f0:	89 e8       	ldi	r24, 0x89	; 137
    d3f2:	94 e0       	ldi	r25, 0x04	; 4
    d3f4:	9f 93       	push	r25
    d3f6:	8f 93       	push	r24
    d3f8:	ff 92       	push	r15
    d3fa:	ef 92       	push	r14
    d3fc:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d400:	01 e0       	ldi	r16, 0x01	; 1
    d402:	28 eb       	ldi	r18, 0xB8	; 184
    d404:	3b e0       	ldi	r19, 0x0B	; 11
    d406:	40 e0       	ldi	r20, 0x00	; 0
    d408:	50 e0       	ldi	r21, 0x00	; 0
    d40a:	6e e1       	ldi	r22, 0x1E	; 30
    d40c:	73 e0       	ldi	r23, 0x03	; 3
    d40e:	c7 01       	movw	r24, r14
    d410:	3b dc       	rcall	.-1930   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d412:	f7 01       	movw	r30, r14
    d414:	11 92       	st	Z+, r1
    d416:	1a 95       	dec	r17
    d418:	e9 f7       	brne	.-6      	; 0xd414 <_Z12MQTT_ConnectPKcS0_S0_+0xd2>
    d41a:	af 92       	push	r10
    d41c:	bf 92       	push	r11
    d41e:	cf 92       	push	r12
    d420:	df 92       	push	r13
    d422:	87 e0       	ldi	r24, 0x07	; 7
    d424:	8f 93       	push	r24
    d426:	8b e5       	ldi	r24, 0x5B	; 91
    d428:	8f 93       	push	r24
    d42a:	8f e9       	ldi	r24, 0x9F	; 159
    d42c:	94 e0       	ldi	r25, 0x04	; 4
    d42e:	9f 93       	push	r25
    d430:	8f 93       	push	r24
    d432:	8d ea       	ldi	r24, 0xAD	; 173
    d434:	94 e0       	ldi	r25, 0x04	; 4
    d436:	9f 93       	push	r25
    d438:	8f 93       	push	r24
    d43a:	ff 92       	push	r15
    d43c:	ef 92       	push	r14
    d43e:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d442:	28 e8       	ldi	r18, 0x88	; 136
    d444:	33 e1       	ldi	r19, 0x13	; 19
    d446:	40 e0       	ldi	r20, 0x00	; 0
    d448:	50 e0       	ldi	r21, 0x00	; 0
    d44a:	6e e1       	ldi	r22, 0x1E	; 30
    d44c:	73 e0       	ldi	r23, 0x03	; 3
    d44e:	c7 01       	movw	r24, r14
    d450:	1b dc       	rcall	.-1994   	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    d452:	68 eb       	ldi	r22, 0xB8	; 184
    d454:	7b e0       	ldi	r23, 0x0B	; 11
    d456:	80 e0       	ldi	r24, 0x00	; 0
    d458:	90 e0       	ldi	r25, 0x00	; 0
    d45a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    d45e:	3c df       	rcall	.-392    	; 0xd2d8 <_Z17Is_MQTT_Connectedv>
    d460:	0f b6       	in	r0, 0x3f	; 63
    d462:	f8 94       	cli
    d464:	de bf       	out	0x3e, r29	; 62
    d466:	0f be       	out	0x3f, r0	; 63
    d468:	cd bf       	out	0x3d, r28	; 61
    d46a:	c8 58       	subi	r28, 0x88	; 136
    d46c:	df 4f       	sbci	r29, 0xFF	; 255
    d46e:	0f b6       	in	r0, 0x3f	; 63
    d470:	f8 94       	cli
    d472:	de bf       	out	0x3e, r29	; 62
    d474:	0f be       	out	0x3f, r0	; 63
    d476:	cd bf       	out	0x3d, r28	; 61
    d478:	df 91       	pop	r29
    d47a:	cf 91       	pop	r28
    d47c:	1f 91       	pop	r17
    d47e:	0f 91       	pop	r16
    d480:	ff 90       	pop	r15
    d482:	ef 90       	pop	r14
    d484:	df 90       	pop	r13
    d486:	cf 90       	pop	r12
    d488:	bf 90       	pop	r11
    d48a:	af 90       	pop	r10
    d48c:	08 95       	ret

0000d48e <_Z9MQTT_Loopv>:
    d48e:	83 e0       	ldi	r24, 0x03	; 3
    d490:	db d7       	rcall	.+4022   	; 0xe448 <_Z9Check_Simc>
    d492:	0e 94 14 5e 	call	0xbc28	; 0xbc28 <_Z16Check_GSM_Signalv>
    d496:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xaf>
    d49a:	81 30       	cpi	r24, 0x01	; 1
    d49c:	39 f0       	breq	.+14     	; 0xd4ac <_Z9MQTT_Loopv+0x1e>
    d49e:	1c df       	rcall	.-456    	; 0xd2d8 <_Z17Is_MQTT_Connectedv>
    d4a0:	88 23       	and	r24, r24
    d4a2:	21 f0       	breq	.+8      	; 0xd4ac <_Z9MQTT_Loopv+0x1e>
    d4a4:	80 91 a7 13 	lds	r24, 0x13A7	; 0x8013a7 <_sRuble_Parameters+0x5d>
    d4a8:	81 30       	cpi	r24, 0x01	; 1
    d4aa:	11 f0       	breq	.+4      	; 0xd4b0 <_Z9MQTT_Loopv+0x22>
    d4ac:	80 e0       	ldi	r24, 0x00	; 0
    d4ae:	08 95       	ret
    d4b0:	81 e0       	ldi	r24, 0x01	; 1
    d4b2:	08 95       	ret

0000d4b4 <_Z16Lcd_Special_Charhhhh>:
    d4b4:	df 92       	push	r13
    d4b6:	ef 92       	push	r14
    d4b8:	ff 92       	push	r15
    d4ba:	0f 93       	push	r16
    d4bc:	1f 93       	push	r17
    d4be:	cf 93       	push	r28
    d4c0:	df 93       	push	r29
    d4c2:	cd b7       	in	r28, 0x3d	; 61
    d4c4:	de b7       	in	r29, 0x3e	; 62
    d4c6:	28 97       	sbiw	r28, 0x08	; 8
    d4c8:	0f b6       	in	r0, 0x3f	; 63
    d4ca:	f8 94       	cli
    d4cc:	de bf       	out	0x3e, r29	; 62
    d4ce:	0f be       	out	0x3f, r0	; 63
    d4d0:	cd bf       	out	0x3d, r28	; 61
    d4d2:	f8 2e       	mov	r15, r24
    d4d4:	e6 2e       	mov	r14, r22
    d4d6:	d4 2e       	mov	r13, r20
    d4d8:	8e 01       	movw	r16, r28
    d4da:	0f 5f       	subi	r16, 0xFF	; 255
    d4dc:	1f 4f       	sbci	r17, 0xFF	; 255
    d4de:	88 e0       	ldi	r24, 0x08	; 8
    d4e0:	f8 01       	movw	r30, r16
    d4e2:	11 92       	st	Z+, r1
    d4e4:	8a 95       	dec	r24
    d4e6:	e9 f7       	brne	.-6      	; 0xd4e2 <_Z16Lcd_Special_Charhhhh+0x2e>
    d4e8:	82 2f       	mov	r24, r18
    d4ea:	90 e0       	ldi	r25, 0x00	; 0
    d4ec:	fc 01       	movw	r30, r24
    d4ee:	31 97       	sbiw	r30, 0x01	; 1
    d4f0:	ea 30       	cpi	r30, 0x0A	; 10
    d4f2:	f1 05       	cpc	r31, r1
    d4f4:	08 f0       	brcs	.+2      	; 0xd4f8 <_Z16Lcd_Special_Charhhhh+0x44>
    d4f6:	86 c0       	rjmp	.+268    	; 0xd604 <_Z16Lcd_Special_Charhhhh+0x150>
    d4f8:	88 27       	eor	r24, r24
    d4fa:	e3 52       	subi	r30, 0x23	; 35
    d4fc:	ff 4f       	sbci	r31, 0xFF	; 255
    d4fe:	8f 4f       	sbci	r24, 0xFF	; 255
    d500:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
    d504:	8f e1       	ldi	r24, 0x1F	; 31
    d506:	89 83       	std	Y+1, r24	; 0x01
    d508:	81 e1       	ldi	r24, 0x11	; 17
    d50a:	8a 83       	std	Y+2, r24	; 0x02
    d50c:	8a e0       	ldi	r24, 0x0A	; 10
    d50e:	58 c0       	rjmp	.+176    	; 0xd5c0 <_Z16Lcd_Special_Charhhhh+0x10c>
    d510:	9c e1       	ldi	r25, 0x1C	; 28
    d512:	99 83       	std	Y+1, r25	; 0x01
    d514:	80 e1       	ldi	r24, 0x10	; 16
    d516:	8a 83       	std	Y+2, r24	; 0x02
    d518:	28 e1       	ldi	r18, 0x18	; 24
    d51a:	2b 83       	std	Y+3, r18	; 0x03
    d51c:	8c 83       	std	Y+4, r24	; 0x04
    d51e:	9d 83       	std	Y+5, r25	; 0x05
    d520:	0b c0       	rjmp	.+22     	; 0xd538 <_Z16Lcd_Special_Charhhhh+0x84>
    d522:	8c e1       	ldi	r24, 0x1C	; 28
    d524:	89 83       	std	Y+1, r24	; 0x01
    d526:	90 e1       	ldi	r25, 0x10	; 16
    d528:	9a 83       	std	Y+2, r25	; 0x02
    d52a:	28 e1       	ldi	r18, 0x18	; 24
    d52c:	2b 83       	std	Y+3, r18	; 0x03
    d52e:	9c 83       	std	Y+4, r25	; 0x04
    d530:	8d 83       	std	Y+5, r24	; 0x05
    d532:	84 e0       	ldi	r24, 0x04	; 4
    d534:	8f 83       	std	Y+7, r24	; 0x07
    d536:	84 e1       	ldi	r24, 0x14	; 20
    d538:	88 87       	std	Y+8, r24	; 0x08
    d53a:	64 c0       	rjmp	.+200    	; 0xd604 <_Z16Lcd_Special_Charhhhh+0x150>
    d53c:	8c e1       	ldi	r24, 0x1C	; 28
    d53e:	89 83       	std	Y+1, r24	; 0x01
    d540:	80 e1       	ldi	r24, 0x10	; 16
    d542:	8a 83       	std	Y+2, r24	; 0x02
    d544:	98 e1       	ldi	r25, 0x18	; 24
    d546:	9b 83       	std	Y+3, r25	; 0x03
    d548:	8c 83       	std	Y+4, r24	; 0x04
    d54a:	8d e1       	ldi	r24, 0x1D	; 29
    d54c:	8d 83       	std	Y+5, r24	; 0x05
    d54e:	81 e0       	ldi	r24, 0x01	; 1
    d550:	8e 83       	std	Y+6, r24	; 0x06
    d552:	85 e0       	ldi	r24, 0x05	; 5
    d554:	8f 83       	std	Y+7, r24	; 0x07
    d556:	85 e1       	ldi	r24, 0x15	; 21
    d558:	ef cf       	rjmp	.-34     	; 0xd538 <_Z16Lcd_Special_Charhhhh+0x84>
    d55a:	8c e1       	ldi	r24, 0x1C	; 28
    d55c:	89 83       	std	Y+1, r24	; 0x01
    d55e:	90 e1       	ldi	r25, 0x10	; 16
    d560:	9a 83       	std	Y+2, r25	; 0x02
    d562:	28 e1       	ldi	r18, 0x18	; 24
    d564:	2b 83       	std	Y+3, r18	; 0x03
    d566:	9c 83       	std	Y+4, r25	; 0x04
    d568:	8d 83       	std	Y+5, r24	; 0x05
    d56a:	85 e0       	ldi	r24, 0x05	; 5
    d56c:	8e 83       	std	Y+6, r24	; 0x06
    d56e:	92 e0       	ldi	r25, 0x02	; 2
    d570:	9f 83       	std	Y+7, r25	; 0x07
    d572:	e2 cf       	rjmp	.-60     	; 0xd538 <_Z16Lcd_Special_Charhhhh+0x84>
    d574:	9e e0       	ldi	r25, 0x0E	; 14
    d576:	99 83       	std	Y+1, r25	; 0x01
    d578:	81 e1       	ldi	r24, 0x11	; 17
    d57a:	8a 83       	std	Y+2, r24	; 0x02
    d57c:	8b 83       	std	Y+3, r24	; 0x03
    d57e:	8c 83       	std	Y+4, r24	; 0x04
    d580:	8b e1       	ldi	r24, 0x1B	; 27
    d582:	8d 83       	std	Y+5, r24	; 0x05
    d584:	25 e1       	ldi	r18, 0x15	; 21
    d586:	2e 83       	std	Y+6, r18	; 0x06
    d588:	8f 83       	std	Y+7, r24	; 0x07
    d58a:	98 87       	std	Y+8, r25	; 0x08
    d58c:	3b c0       	rjmp	.+118    	; 0xd604 <_Z16Lcd_Special_Charhhhh+0x150>
    d58e:	87 e0       	ldi	r24, 0x07	; 7
    d590:	89 83       	std	Y+1, r24	; 0x01
    d592:	89 e0       	ldi	r24, 0x09	; 9
    d594:	8a 83       	std	Y+2, r24	; 0x02
    d596:	81 e1       	ldi	r24, 0x11	; 17
    d598:	8b 83       	std	Y+3, r24	; 0x03
    d59a:	8c 83       	std	Y+4, r24	; 0x04
    d59c:	8b e1       	ldi	r24, 0x1B	; 27
    d59e:	8d 83       	std	Y+5, r24	; 0x05
    d5a0:	95 e1       	ldi	r25, 0x15	; 21
    d5a2:	9e 83       	std	Y+6, r25	; 0x06
    d5a4:	8f 83       	std	Y+7, r24	; 0x07
    d5a6:	8f e1       	ldi	r24, 0x1F	; 31
    d5a8:	c7 cf       	rjmp	.-114    	; 0xd538 <_Z16Lcd_Special_Charhhhh+0x84>
    d5aa:	84 e0       	ldi	r24, 0x04	; 4
    d5ac:	89 83       	std	Y+1, r24	; 0x01
    d5ae:	8a 83       	std	Y+2, r24	; 0x02
    d5b0:	8b 83       	std	Y+3, r24	; 0x03
    d5b2:	87 e0       	ldi	r24, 0x07	; 7
    d5b4:	8c 83       	std	Y+4, r24	; 0x04
    d5b6:	26 c0       	rjmp	.+76     	; 0xd604 <_Z16Lcd_Special_Charhhhh+0x150>
    d5b8:	8f e1       	ldi	r24, 0x1F	; 31
    d5ba:	89 83       	std	Y+1, r24	; 0x01
    d5bc:	8a 83       	std	Y+2, r24	; 0x02
    d5be:	8e e0       	ldi	r24, 0x0E	; 14
    d5c0:	8b 83       	std	Y+3, r24	; 0x03
    d5c2:	84 e0       	ldi	r24, 0x04	; 4
    d5c4:	8c 83       	std	Y+4, r24	; 0x04
    d5c6:	8d 83       	std	Y+5, r24	; 0x05
    d5c8:	8e 83       	std	Y+6, r24	; 0x06
    d5ca:	8f 83       	std	Y+7, r24	; 0x07
    d5cc:	1b c0       	rjmp	.+54     	; 0xd604 <_Z16Lcd_Special_Charhhhh+0x150>
    d5ce:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x2d>
    d5d2:	1f 92       	push	r1
    d5d4:	8f 93       	push	r24
    d5d6:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2c>
    d5da:	1f 92       	push	r1
    d5dc:	8f 93       	push	r24
    d5de:	8c ed       	ldi	r24, 0xDC	; 220
    d5e0:	94 e0       	ldi	r25, 0x04	; 4
    d5e2:	9f 93       	push	r25
    d5e4:	8f 93       	push	r24
    d5e6:	1f 93       	push	r17
    d5e8:	0f 93       	push	r16
    d5ea:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    d5ee:	2f e0       	ldi	r18, 0x0F	; 15
    d5f0:	40 e0       	ldi	r20, 0x00	; 0
    d5f2:	65 e0       	ldi	r22, 0x05	; 5
    d5f4:	c8 01       	movw	r24, r16
    d5f6:	b3 d8       	rcall	.-3738   	; 0xc75e <_Z14Lcd_Print_BuffPchhh>
    d5f8:	0f b6       	in	r0, 0x3f	; 63
    d5fa:	f8 94       	cli
    d5fc:	de bf       	out	0x3e, r29	; 62
    d5fe:	0f be       	out	0x3f, r0	; 63
    d600:	cd bf       	out	0x3d, r28	; 61
    d602:	11 c0       	rjmp	.+34     	; 0xd626 <_Z16Lcd_Special_Charhhhh+0x172>
    d604:	a8 01       	movw	r20, r16
    d606:	6f 2d       	mov	r22, r15
    d608:	82 e7       	ldi	r24, 0x72	; 114
    d60a:	9c e0       	ldi	r25, 0x0C	; 12
    d60c:	0e 94 c1 d6 	call	0x1ad82	; 0x1ad82 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    d610:	4d 2d       	mov	r20, r13
    d612:	6e 2d       	mov	r22, r14
    d614:	82 e7       	ldi	r24, 0x72	; 114
    d616:	9c e0       	ldi	r25, 0x0C	; 12
    d618:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d61c:	6f 2d       	mov	r22, r15
    d61e:	82 e7       	ldi	r24, 0x72	; 114
    d620:	9c e0       	ldi	r25, 0x0C	; 12
    d622:	0e 94 e8 d6 	call	0x1add0	; 0x1add0 <_ZN17LiquidCrystal_I2C5writeEh>
    d626:	28 96       	adiw	r28, 0x08	; 8
    d628:	0f b6       	in	r0, 0x3f	; 63
    d62a:	f8 94       	cli
    d62c:	de bf       	out	0x3e, r29	; 62
    d62e:	0f be       	out	0x3f, r0	; 63
    d630:	cd bf       	out	0x3d, r28	; 61
    d632:	df 91       	pop	r29
    d634:	cf 91       	pop	r28
    d636:	1f 91       	pop	r17
    d638:	0f 91       	pop	r16
    d63a:	ff 90       	pop	r15
    d63c:	ef 90       	pop	r14
    d63e:	df 90       	pop	r13
    d640:	08 95       	ret

0000d642 <_Z16Display_Update_1v>:
    d642:	df 92       	push	r13
    d644:	ef 92       	push	r14
    d646:	ff 92       	push	r15
    d648:	0f 93       	push	r16
    d64a:	1f 93       	push	r17
    d64c:	cf 93       	push	r28
    d64e:	df 93       	push	r29
    d650:	cd b7       	in	r28, 0x3d	; 61
    d652:	de b7       	in	r29, 0x3e	; 62
    d654:	65 97       	sbiw	r28, 0x15	; 21
    d656:	0f b6       	in	r0, 0x3f	; 63
    d658:	f8 94       	cli
    d65a:	de bf       	out	0x3e, r29	; 62
    d65c:	0f be       	out	0x3f, r0	; 63
    d65e:	cd bf       	out	0x3d, r28	; 61
    d660:	80 91 71 0c 	lds	r24, 0x0C71	; 0x800c71 <Start_Display_In_Interrupt>
    d664:	81 11       	cpse	r24, r1
    d666:	7a c1       	rjmp	.+756    	; 0xd95c <_Z16Display_Update_1v+0x31a>
    d668:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d66c:	3e 2f       	mov	r19, r30
    d66e:	32 70       	andi	r19, 0x02	; 2
    d670:	20 e0       	ldi	r18, 0x00	; 0
    d672:	40 e0       	ldi	r20, 0x00	; 0
    d674:	50 e0       	ldi	r21, 0x00	; 0
    d676:	60 e0       	ldi	r22, 0x00	; 0
    d678:	70 e0       	ldi	r23, 0x00	; 0
    d67a:	90 e0       	ldi	r25, 0x00	; 0
    d67c:	a0 e0       	ldi	r26, 0x00	; 0
    d67e:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d682:	71 f0       	breq	.+28     	; 0xd6a0 <_Z16Display_Update_1v+0x5e>
    d684:	ed 7f       	andi	r30, 0xFD	; 253
    d686:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d68a:	41 e0       	ldi	r20, 0x01	; 1
    d68c:	82 e7       	ldi	r24, 0x72	; 114
    d68e:	9c e0       	ldi	r25, 0x0C	; 12
    d690:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d694:	61 ee       	ldi	r22, 0xE1	; 225
    d696:	72 e2       	ldi	r23, 0x22	; 34
    d698:	82 e7       	ldi	r24, 0x72	; 114
    d69a:	9c e0       	ldi	r25, 0x0C	; 12
    d69c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d6a0:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d6a4:	3e 2f       	mov	r19, r30
    d6a6:	34 70       	andi	r19, 0x04	; 4
    d6a8:	20 e0       	ldi	r18, 0x00	; 0
    d6aa:	40 e0       	ldi	r20, 0x00	; 0
    d6ac:	50 e0       	ldi	r21, 0x00	; 0
    d6ae:	60 e0       	ldi	r22, 0x00	; 0
    d6b0:	70 e0       	ldi	r23, 0x00	; 0
    d6b2:	80 e0       	ldi	r24, 0x00	; 0
    d6b4:	90 e0       	ldi	r25, 0x00	; 0
    d6b6:	a0 e0       	ldi	r26, 0x00	; 0
    d6b8:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d6bc:	d1 f0       	breq	.+52     	; 0xd6f2 <_Z16Display_Update_1v+0xb0>
    d6be:	eb 7f       	andi	r30, 0xFB	; 251
    d6c0:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d6c4:	41 e0       	ldi	r20, 0x01	; 1
    d6c6:	82 e7       	ldi	r24, 0x72	; 114
    d6c8:	9c e0       	ldi	r25, 0x0C	; 12
    d6ca:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d6ce:	6c ec       	ldi	r22, 0xCC	; 204
    d6d0:	72 e2       	ldi	r23, 0x22	; 34
    d6d2:	82 e7       	ldi	r24, 0x72	; 114
    d6d4:	9c e0       	ldi	r25, 0x0C	; 12
    d6d6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d6da:	42 e0       	ldi	r20, 0x02	; 2
    d6dc:	60 e0       	ldi	r22, 0x00	; 0
    d6de:	82 e7       	ldi	r24, 0x72	; 114
    d6e0:	9c e0       	ldi	r25, 0x0C	; 12
    d6e2:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d6e6:	67 eb       	ldi	r22, 0xB7	; 183
    d6e8:	72 e2       	ldi	r23, 0x22	; 34
    d6ea:	82 e7       	ldi	r24, 0x72	; 114
    d6ec:	9c e0       	ldi	r25, 0x0C	; 12
    d6ee:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d6f2:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d6f6:	3e 2f       	mov	r19, r30
    d6f8:	38 70       	andi	r19, 0x08	; 8
    d6fa:	20 e0       	ldi	r18, 0x00	; 0
    d6fc:	40 e0       	ldi	r20, 0x00	; 0
    d6fe:	50 e0       	ldi	r21, 0x00	; 0
    d700:	60 e0       	ldi	r22, 0x00	; 0
    d702:	70 e0       	ldi	r23, 0x00	; 0
    d704:	80 e0       	ldi	r24, 0x00	; 0
    d706:	90 e0       	ldi	r25, 0x00	; 0
    d708:	a0 e0       	ldi	r26, 0x00	; 0
    d70a:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d70e:	d1 f0       	breq	.+52     	; 0xd744 <_Z16Display_Update_1v+0x102>
    d710:	e7 7f       	andi	r30, 0xF7	; 247
    d712:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d716:	41 e0       	ldi	r20, 0x01	; 1
    d718:	82 e7       	ldi	r24, 0x72	; 114
    d71a:	9c e0       	ldi	r25, 0x0C	; 12
    d71c:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d720:	62 ea       	ldi	r22, 0xA2	; 162
    d722:	72 e2       	ldi	r23, 0x22	; 34
    d724:	82 e7       	ldi	r24, 0x72	; 114
    d726:	9c e0       	ldi	r25, 0x0C	; 12
    d728:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d72c:	42 e0       	ldi	r20, 0x02	; 2
    d72e:	60 e0       	ldi	r22, 0x00	; 0
    d730:	82 e7       	ldi	r24, 0x72	; 114
    d732:	9c e0       	ldi	r25, 0x0C	; 12
    d734:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d738:	6d e8       	ldi	r22, 0x8D	; 141
    d73a:	72 e2       	ldi	r23, 0x22	; 34
    d73c:	82 e7       	ldi	r24, 0x72	; 114
    d73e:	9c e0       	ldi	r25, 0x0C	; 12
    d740:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d744:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d748:	e0 71       	andi	r30, 0x10	; 16
    d74a:	20 e0       	ldi	r18, 0x00	; 0
    d74c:	3e 2f       	mov	r19, r30
    d74e:	40 e0       	ldi	r20, 0x00	; 0
    d750:	50 e0       	ldi	r21, 0x00	; 0
    d752:	60 e0       	ldi	r22, 0x00	; 0
    d754:	70 e0       	ldi	r23, 0x00	; 0
    d756:	80 e0       	ldi	r24, 0x00	; 0
    d758:	90 e0       	ldi	r25, 0x00	; 0
    d75a:	a0 e0       	ldi	r26, 0x00	; 0
    d75c:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d760:	39 f1       	breq	.+78     	; 0xd7b0 <_Z16Display_Update_1v+0x16e>
    d762:	10 92 4a 13 	sts	0x134A, r1	; 0x80134a <_sRuble_Parameters>
    d766:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d76a:	10 92 4c 13 	sts	0x134C, r1	; 0x80134c <_sRuble_Parameters+0x2>
    d76e:	10 92 4d 13 	sts	0x134D, r1	; 0x80134d <_sRuble_Parameters+0x3>
    d772:	10 92 4e 13 	sts	0x134E, r1	; 0x80134e <_sRuble_Parameters+0x4>
    d776:	10 92 4f 13 	sts	0x134F, r1	; 0x80134f <_sRuble_Parameters+0x5>
    d77a:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x6>
    d77e:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0x7>
    d782:	41 e0       	ldi	r20, 0x01	; 1
    d784:	82 e7       	ldi	r24, 0x72	; 114
    d786:	9c e0       	ldi	r25, 0x0C	; 12
    d788:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d78c:	68 e7       	ldi	r22, 0x78	; 120
    d78e:	72 e2       	ldi	r23, 0x22	; 34
    d790:	82 e7       	ldi	r24, 0x72	; 114
    d792:	9c e0       	ldi	r25, 0x0C	; 12
    d794:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d798:	42 e0       	ldi	r20, 0x02	; 2
    d79a:	60 e0       	ldi	r22, 0x00	; 0
    d79c:	82 e7       	ldi	r24, 0x72	; 114
    d79e:	9c e0       	ldi	r25, 0x0C	; 12
    d7a0:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d7a4:	63 e6       	ldi	r22, 0x63	; 99
    d7a6:	72 e2       	ldi	r23, 0x22	; 34
    d7a8:	82 e7       	ldi	r24, 0x72	; 114
    d7aa:	9c e0       	ldi	r25, 0x0C	; 12
    d7ac:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d7b0:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d7b4:	3e 2f       	mov	r19, r30
    d7b6:	30 72       	andi	r19, 0x20	; 32
    d7b8:	20 e0       	ldi	r18, 0x00	; 0
    d7ba:	40 e0       	ldi	r20, 0x00	; 0
    d7bc:	50 e0       	ldi	r21, 0x00	; 0
    d7be:	60 e0       	ldi	r22, 0x00	; 0
    d7c0:	70 e0       	ldi	r23, 0x00	; 0
    d7c2:	80 e0       	ldi	r24, 0x00	; 0
    d7c4:	90 e0       	ldi	r25, 0x00	; 0
    d7c6:	a0 e0       	ldi	r26, 0x00	; 0
    d7c8:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d7cc:	d1 f0       	breq	.+52     	; 0xd802 <_Z16Display_Update_1v+0x1c0>
    d7ce:	ef 7d       	andi	r30, 0xDF	; 223
    d7d0:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d7d4:	41 e0       	ldi	r20, 0x01	; 1
    d7d6:	82 e7       	ldi	r24, 0x72	; 114
    d7d8:	9c e0       	ldi	r25, 0x0C	; 12
    d7da:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d7de:	6e e4       	ldi	r22, 0x4E	; 78
    d7e0:	72 e2       	ldi	r23, 0x22	; 34
    d7e2:	82 e7       	ldi	r24, 0x72	; 114
    d7e4:	9c e0       	ldi	r25, 0x0C	; 12
    d7e6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d7ea:	42 e0       	ldi	r20, 0x02	; 2
    d7ec:	60 e0       	ldi	r22, 0x00	; 0
    d7ee:	82 e7       	ldi	r24, 0x72	; 114
    d7f0:	9c e0       	ldi	r25, 0x0C	; 12
    d7f2:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d7f6:	69 e3       	ldi	r22, 0x39	; 57
    d7f8:	72 e2       	ldi	r23, 0x22	; 34
    d7fa:	82 e7       	ldi	r24, 0x72	; 114
    d7fc:	9c e0       	ldi	r25, 0x0C	; 12
    d7fe:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d802:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d806:	3e 2f       	mov	r19, r30
    d808:	30 74       	andi	r19, 0x40	; 64
    d80a:	20 e0       	ldi	r18, 0x00	; 0
    d80c:	40 e0       	ldi	r20, 0x00	; 0
    d80e:	50 e0       	ldi	r21, 0x00	; 0
    d810:	60 e0       	ldi	r22, 0x00	; 0
    d812:	70 e0       	ldi	r23, 0x00	; 0
    d814:	80 e0       	ldi	r24, 0x00	; 0
    d816:	90 e0       	ldi	r25, 0x00	; 0
    d818:	a0 e0       	ldi	r26, 0x00	; 0
    d81a:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d81e:	d1 f0       	breq	.+52     	; 0xd854 <_Z16Display_Update_1v+0x212>
    d820:	ef 7b       	andi	r30, 0xBF	; 191
    d822:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d826:	41 e0       	ldi	r20, 0x01	; 1
    d828:	82 e7       	ldi	r24, 0x72	; 114
    d82a:	9c e0       	ldi	r25, 0x0C	; 12
    d82c:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d830:	64 e2       	ldi	r22, 0x24	; 36
    d832:	72 e2       	ldi	r23, 0x22	; 34
    d834:	82 e7       	ldi	r24, 0x72	; 114
    d836:	9c e0       	ldi	r25, 0x0C	; 12
    d838:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d83c:	42 e0       	ldi	r20, 0x02	; 2
    d83e:	60 e0       	ldi	r22, 0x00	; 0
    d840:	82 e7       	ldi	r24, 0x72	; 114
    d842:	9c e0       	ldi	r25, 0x0C	; 12
    d844:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d848:	6f e0       	ldi	r22, 0x0F	; 15
    d84a:	72 e2       	ldi	r23, 0x22	; 34
    d84c:	82 e7       	ldi	r24, 0x72	; 114
    d84e:	9c e0       	ldi	r25, 0x0C	; 12
    d850:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d854:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    d858:	3e 2f       	mov	r19, r30
    d85a:	30 78       	andi	r19, 0x80	; 128
    d85c:	20 e0       	ldi	r18, 0x00	; 0
    d85e:	40 e0       	ldi	r20, 0x00	; 0
    d860:	50 e0       	ldi	r21, 0x00	; 0
    d862:	60 e0       	ldi	r22, 0x00	; 0
    d864:	70 e0       	ldi	r23, 0x00	; 0
    d866:	80 e0       	ldi	r24, 0x00	; 0
    d868:	90 e0       	ldi	r25, 0x00	; 0
    d86a:	a0 e0       	ldi	r26, 0x00	; 0
    d86c:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d870:	d1 f0       	breq	.+52     	; 0xd8a6 <_Z16Display_Update_1v+0x264>
    d872:	ef 77       	andi	r30, 0x7F	; 127
    d874:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    d878:	41 e0       	ldi	r20, 0x01	; 1
    d87a:	82 e7       	ldi	r24, 0x72	; 114
    d87c:	9c e0       	ldi	r25, 0x0C	; 12
    d87e:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d882:	6a ef       	ldi	r22, 0xFA	; 250
    d884:	71 e2       	ldi	r23, 0x21	; 33
    d886:	82 e7       	ldi	r24, 0x72	; 114
    d888:	9c e0       	ldi	r25, 0x0C	; 12
    d88a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d88e:	42 e0       	ldi	r20, 0x02	; 2
    d890:	60 e0       	ldi	r22, 0x00	; 0
    d892:	82 e7       	ldi	r24, 0x72	; 114
    d894:	9c e0       	ldi	r25, 0x0C	; 12
    d896:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d89a:	65 ee       	ldi	r22, 0xE5	; 229
    d89c:	71 e2       	ldi	r23, 0x21	; 33
    d89e:	82 e7       	ldi	r24, 0x72	; 114
    d8a0:	9c e0       	ldi	r25, 0x0C	; 12
    d8a2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d8a6:	e0 91 4c 13 	lds	r30, 0x134C	; 0x80134c <_sRuble_Parameters+0x2>
    d8aa:	4e 2f       	mov	r20, r30
    d8ac:	41 70       	andi	r20, 0x01	; 1
    d8ae:	20 e0       	ldi	r18, 0x00	; 0
    d8b0:	30 e0       	ldi	r19, 0x00	; 0
    d8b2:	50 e0       	ldi	r21, 0x00	; 0
    d8b4:	60 e0       	ldi	r22, 0x00	; 0
    d8b6:	70 e0       	ldi	r23, 0x00	; 0
    d8b8:	80 e0       	ldi	r24, 0x00	; 0
    d8ba:	90 e0       	ldi	r25, 0x00	; 0
    d8bc:	a0 e0       	ldi	r26, 0x00	; 0
    d8be:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d8c2:	d1 f0       	breq	.+52     	; 0xd8f8 <_Z16Display_Update_1v+0x2b6>
    d8c4:	ee 7f       	andi	r30, 0xFE	; 254
    d8c6:	e0 93 4c 13 	sts	0x134C, r30	; 0x80134c <_sRuble_Parameters+0x2>
    d8ca:	41 e0       	ldi	r20, 0x01	; 1
    d8cc:	82 e7       	ldi	r24, 0x72	; 114
    d8ce:	9c e0       	ldi	r25, 0x0C	; 12
    d8d0:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d8d4:	60 ed       	ldi	r22, 0xD0	; 208
    d8d6:	71 e2       	ldi	r23, 0x21	; 33
    d8d8:	82 e7       	ldi	r24, 0x72	; 114
    d8da:	9c e0       	ldi	r25, 0x0C	; 12
    d8dc:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d8e0:	42 e0       	ldi	r20, 0x02	; 2
    d8e2:	60 e0       	ldi	r22, 0x00	; 0
    d8e4:	82 e7       	ldi	r24, 0x72	; 114
    d8e6:	9c e0       	ldi	r25, 0x0C	; 12
    d8e8:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d8ec:	6b eb       	ldi	r22, 0xBB	; 187
    d8ee:	71 e2       	ldi	r23, 0x21	; 33
    d8f0:	82 e7       	ldi	r24, 0x72	; 114
    d8f2:	9c e0       	ldi	r25, 0x0C	; 12
    d8f4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d8f8:	e0 91 4c 13 	lds	r30, 0x134C	; 0x80134c <_sRuble_Parameters+0x2>
    d8fc:	4e 2f       	mov	r20, r30
    d8fe:	44 70       	andi	r20, 0x04	; 4
    d900:	20 e0       	ldi	r18, 0x00	; 0
    d902:	30 e0       	ldi	r19, 0x00	; 0
    d904:	50 e0       	ldi	r21, 0x00	; 0
    d906:	60 e0       	ldi	r22, 0x00	; 0
    d908:	70 e0       	ldi	r23, 0x00	; 0
    d90a:	80 e0       	ldi	r24, 0x00	; 0
    d90c:	90 e0       	ldi	r25, 0x00	; 0
    d90e:	a0 e0       	ldi	r26, 0x00	; 0
    d910:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d914:	d9 f0       	breq	.+54     	; 0xd94c <_Z16Display_Update_1v+0x30a>
    d916:	eb 7f       	andi	r30, 0xFB	; 251
    d918:	e0 93 4c 13 	sts	0x134C, r30	; 0x80134c <_sRuble_Parameters+0x2>
    d91c:	41 e0       	ldi	r20, 0x01	; 1
    d91e:	61 e0       	ldi	r22, 0x01	; 1
    d920:	82 e7       	ldi	r24, 0x72	; 114
    d922:	9c e0       	ldi	r25, 0x0C	; 12
    d924:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d928:	69 ea       	ldi	r22, 0xA9	; 169
    d92a:	71 e2       	ldi	r23, 0x21	; 33
    d92c:	82 e7       	ldi	r24, 0x72	; 114
    d92e:	9c e0       	ldi	r25, 0x0C	; 12
    d930:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d934:	42 e0       	ldi	r20, 0x02	; 2
    d936:	60 e0       	ldi	r22, 0x00	; 0
    d938:	82 e7       	ldi	r24, 0x72	; 114
    d93a:	9c e0       	ldi	r25, 0x0C	; 12
    d93c:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d940:	64 e9       	ldi	r22, 0x94	; 148
    d942:	71 e2       	ldi	r23, 0x21	; 33
    d944:	82 e7       	ldi	r24, 0x72	; 114
    d946:	9c e0       	ldi	r25, 0x0C	; 12
    d948:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    d94c:	10 92 1a 0c 	sts	0x0C1A, r1	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    d950:	10 92 1b 0c 	sts	0x0C1B, r1	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    d954:	10 92 1c 0c 	sts	0x0C1C, r1	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    d958:	10 92 1d 0c 	sts	0x0C1D, r1	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    d95c:	80 91 71 0c 	lds	r24, 0x0C71	; 0x800c71 <Start_Display_In_Interrupt>
    d960:	88 23       	and	r24, r24
    d962:	09 f4       	brne	.+2      	; 0xd966 <_Z16Display_Update_1v+0x324>
    d964:	96 c1       	rjmp	.+812    	; 0xdc92 <_Z16Display_Update_1v+0x650>
    d966:	80 91 18 0c 	lds	r24, 0x0C18	; 0x800c18 <_sGSM_Query+0x5>
    d96a:	e0 91 75 13 	lds	r30, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    d96e:	81 30       	cpi	r24, 0x01	; 1
    d970:	09 f4       	brne	.+2      	; 0xd974 <_Z16Display_Update_1v+0x332>
    d972:	9f c0       	rjmp	.+318    	; 0xdab2 <_Z16Display_Update_1v+0x470>
    d974:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xaf>
    d978:	81 30       	cpi	r24, 0x01	; 1
    d97a:	09 f4       	brne	.+2      	; 0xd97e <_Z16Display_Update_1v+0x33c>
    d97c:	9a c0       	rjmp	.+308    	; 0xdab2 <_Z16Display_Update_1v+0x470>
    d97e:	f0 91 4a 13 	lds	r31, 0x134A	; 0x80134a <_sRuble_Parameters>
    d982:	2f 2f       	mov	r18, r31
    d984:	21 70       	andi	r18, 0x01	; 1
    d986:	30 e0       	ldi	r19, 0x00	; 0
    d988:	40 e0       	ldi	r20, 0x00	; 0
    d98a:	50 e0       	ldi	r21, 0x00	; 0
    d98c:	60 e0       	ldi	r22, 0x00	; 0
    d98e:	70 e0       	ldi	r23, 0x00	; 0
    d990:	80 e0       	ldi	r24, 0x00	; 0
    d992:	90 e0       	ldi	r25, 0x00	; 0
    d994:	a0 e0       	ldi	r26, 0x00	; 0
    d996:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d99a:	b9 f0       	breq	.+46     	; 0xd9ca <_Z16Display_Update_1v+0x388>
    d99c:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    d9a0:	80 fd       	sbrc	r24, 0
    d9a2:	0e c0       	rjmp	.+28     	; 0xd9c0 <_Z16Display_Update_1v+0x37e>
    d9a4:	e2 fd       	sbrc	r30, 2
    d9a6:	02 c0       	rjmp	.+4      	; 0xd9ac <_Z16Display_Update_1v+0x36a>
    d9a8:	21 e0       	ldi	r18, 0x01	; 1
    d9aa:	03 c0       	rjmp	.+6      	; 0xd9b2 <_Z16Display_Update_1v+0x370>
    d9ac:	29 e0       	ldi	r18, 0x09	; 9
    d9ae:	40 e0       	ldi	r20, 0x00	; 0
    d9b0:	60 e0       	ldi	r22, 0x00	; 0
    d9b2:	80 e0       	ldi	r24, 0x00	; 0
    d9b4:	7f dd       	rcall	.-1282   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    d9b6:	25 e0       	ldi	r18, 0x05	; 5
    d9b8:	40 e0       	ldi	r20, 0x00	; 0
    d9ba:	61 e0       	ldi	r22, 0x01	; 1
    d9bc:	81 e0       	ldi	r24, 0x01	; 1
    d9be:	7a dd       	rcall	.-1292   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    d9c0:	81 ef       	ldi	r24, 0xF1	; 241
    d9c2:	9f ef       	ldi	r25, 0xFF	; 255
    d9c4:	af ef       	ldi	r26, 0xFF	; 255
    d9c6:	b0 e0       	ldi	r27, 0x00	; 0
    d9c8:	6b c0       	rjmp	.+214    	; 0xdaa0 <_Z16Display_Update_1v+0x45e>
    d9ca:	2f 2f       	mov	r18, r31
    d9cc:	22 70       	andi	r18, 0x02	; 2
    d9ce:	30 e0       	ldi	r19, 0x00	; 0
    d9d0:	40 e0       	ldi	r20, 0x00	; 0
    d9d2:	50 e0       	ldi	r21, 0x00	; 0
    d9d4:	60 e0       	ldi	r22, 0x00	; 0
    d9d6:	70 e0       	ldi	r23, 0x00	; 0
    d9d8:	80 e0       	ldi	r24, 0x00	; 0
    d9da:	90 e0       	ldi	r25, 0x00	; 0
    d9dc:	a0 e0       	ldi	r26, 0x00	; 0
    d9de:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    d9e2:	b9 f0       	breq	.+46     	; 0xda12 <_Z16Display_Update_1v+0x3d0>
    d9e4:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    d9e8:	81 fd       	sbrc	r24, 1
    d9ea:	0e c0       	rjmp	.+28     	; 0xda08 <_Z16Display_Update_1v+0x3c6>
    d9ec:	e2 fd       	sbrc	r30, 2
    d9ee:	02 c0       	rjmp	.+4      	; 0xd9f4 <_Z16Display_Update_1v+0x3b2>
    d9f0:	21 e0       	ldi	r18, 0x01	; 1
    d9f2:	03 c0       	rjmp	.+6      	; 0xd9fa <_Z16Display_Update_1v+0x3b8>
    d9f4:	29 e0       	ldi	r18, 0x09	; 9
    d9f6:	40 e0       	ldi	r20, 0x00	; 0
    d9f8:	60 e0       	ldi	r22, 0x00	; 0
    d9fa:	80 e0       	ldi	r24, 0x00	; 0
    d9fc:	5b dd       	rcall	.-1354   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    d9fe:	22 e0       	ldi	r18, 0x02	; 2
    da00:	40 e0       	ldi	r20, 0x00	; 0
    da02:	61 e0       	ldi	r22, 0x01	; 1
    da04:	89 e0       	ldi	r24, 0x09	; 9
    da06:	56 dd       	rcall	.-1364   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    da08:	82 ef       	ldi	r24, 0xF2	; 242
    da0a:	9f ef       	ldi	r25, 0xFF	; 255
    da0c:	af ef       	ldi	r26, 0xFF	; 255
    da0e:	b0 e0       	ldi	r27, 0x00	; 0
    da10:	47 c0       	rjmp	.+142    	; 0xdaa0 <_Z16Display_Update_1v+0x45e>
    da12:	2f 2f       	mov	r18, r31
    da14:	24 70       	andi	r18, 0x04	; 4
    da16:	30 e0       	ldi	r19, 0x00	; 0
    da18:	40 e0       	ldi	r20, 0x00	; 0
    da1a:	50 e0       	ldi	r21, 0x00	; 0
    da1c:	60 e0       	ldi	r22, 0x00	; 0
    da1e:	70 e0       	ldi	r23, 0x00	; 0
    da20:	80 e0       	ldi	r24, 0x00	; 0
    da22:	90 e0       	ldi	r25, 0x00	; 0
    da24:	a0 e0       	ldi	r26, 0x00	; 0
    da26:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    da2a:	b9 f0       	breq	.+46     	; 0xda5a <_Z16Display_Update_1v+0x418>
    da2c:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    da30:	82 fd       	sbrc	r24, 2
    da32:	0e c0       	rjmp	.+28     	; 0xda50 <_Z16Display_Update_1v+0x40e>
    da34:	e2 fd       	sbrc	r30, 2
    da36:	02 c0       	rjmp	.+4      	; 0xda3c <_Z16Display_Update_1v+0x3fa>
    da38:	21 e0       	ldi	r18, 0x01	; 1
    da3a:	03 c0       	rjmp	.+6      	; 0xda42 <_Z16Display_Update_1v+0x400>
    da3c:	29 e0       	ldi	r18, 0x09	; 9
    da3e:	40 e0       	ldi	r20, 0x00	; 0
    da40:	60 e0       	ldi	r22, 0x00	; 0
    da42:	80 e0       	ldi	r24, 0x00	; 0
    da44:	37 dd       	rcall	.-1426   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    da46:	23 e0       	ldi	r18, 0x03	; 3
    da48:	40 e0       	ldi	r20, 0x00	; 0
    da4a:	61 e0       	ldi	r22, 0x01	; 1
    da4c:	8a e0       	ldi	r24, 0x0A	; 10
    da4e:	32 dd       	rcall	.-1436   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    da50:	84 ef       	ldi	r24, 0xF4	; 244
    da52:	9f ef       	ldi	r25, 0xFF	; 255
    da54:	af ef       	ldi	r26, 0xFF	; 255
    da56:	b0 e0       	ldi	r27, 0x00	; 0
    da58:	23 c0       	rjmp	.+70     	; 0xdaa0 <_Z16Display_Update_1v+0x45e>
    da5a:	2f 2f       	mov	r18, r31
    da5c:	28 70       	andi	r18, 0x08	; 8
    da5e:	30 e0       	ldi	r19, 0x00	; 0
    da60:	40 e0       	ldi	r20, 0x00	; 0
    da62:	50 e0       	ldi	r21, 0x00	; 0
    da64:	60 e0       	ldi	r22, 0x00	; 0
    da66:	70 e0       	ldi	r23, 0x00	; 0
    da68:	80 e0       	ldi	r24, 0x00	; 0
    da6a:	90 e0       	ldi	r25, 0x00	; 0
    da6c:	a0 e0       	ldi	r26, 0x00	; 0
    da6e:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    da72:	a9 f1       	breq	.+106    	; 0xdade <_Z16Display_Update_1v+0x49c>
    da74:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    da78:	83 fd       	sbrc	r24, 3
    da7a:	0e c0       	rjmp	.+28     	; 0xda98 <_Z16Display_Update_1v+0x456>
    da7c:	e2 fd       	sbrc	r30, 2
    da7e:	02 c0       	rjmp	.+4      	; 0xda84 <_Z16Display_Update_1v+0x442>
    da80:	21 e0       	ldi	r18, 0x01	; 1
    da82:	03 c0       	rjmp	.+6      	; 0xda8a <_Z16Display_Update_1v+0x448>
    da84:	29 e0       	ldi	r18, 0x09	; 9
    da86:	40 e0       	ldi	r20, 0x00	; 0
    da88:	60 e0       	ldi	r22, 0x00	; 0
    da8a:	80 e0       	ldi	r24, 0x00	; 0
    da8c:	13 dd       	rcall	.-1498   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    da8e:	24 e0       	ldi	r18, 0x04	; 4
    da90:	40 e0       	ldi	r20, 0x00	; 0
    da92:	61 e0       	ldi	r22, 0x01	; 1
    da94:	82 e0       	ldi	r24, 0x02	; 2
    da96:	0e dd       	rcall	.-1508   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    da98:	88 ef       	ldi	r24, 0xF8	; 248
    da9a:	9f ef       	ldi	r25, 0xFF	; 255
    da9c:	af ef       	ldi	r26, 0xFF	; 255
    da9e:	b0 e0       	ldi	r27, 0x00	; 0
    daa0:	80 93 1a 0c 	sts	0x0C1A, r24	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    daa4:	90 93 1b 0c 	sts	0x0C1B, r25	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    daa8:	a0 93 1c 0c 	sts	0x0C1C, r26	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    daac:	b0 93 1d 0c 	sts	0x0C1D, r27	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    dab0:	16 c0       	rjmp	.+44     	; 0xdade <_Z16Display_Update_1v+0x49c>
    dab2:	e2 fd       	sbrc	r30, 2
    dab4:	02 c0       	rjmp	.+4      	; 0xdaba <_Z16Display_Update_1v+0x478>
    dab6:	21 e0       	ldi	r18, 0x01	; 1
    dab8:	01 c0       	rjmp	.+2      	; 0xdabc <_Z16Display_Update_1v+0x47a>
    daba:	29 e0       	ldi	r18, 0x09	; 9
    dabc:	40 e0       	ldi	r20, 0x00	; 0
    dabe:	60 e0       	ldi	r22, 0x00	; 0
    dac0:	80 e0       	ldi	r24, 0x00	; 0
    dac2:	f8 dc       	rcall	.-1552   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    dac4:	27 e0       	ldi	r18, 0x07	; 7
    dac6:	40 e0       	ldi	r20, 0x00	; 0
    dac8:	61 e0       	ldi	r22, 0x01	; 1
    daca:	82 e0       	ldi	r24, 0x02	; 2
    dacc:	f3 dc       	rcall	.-1562   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    dace:	10 92 1a 0c 	sts	0x0C1A, r1	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    dad2:	10 92 1b 0c 	sts	0x0C1B, r1	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    dad6:	10 92 1c 0c 	sts	0x0C1C, r1	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    dada:	10 92 1d 0c 	sts	0x0C1D, r1	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    dade:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    dae2:	82 fd       	sbrc	r24, 2
    dae4:	02 c0       	rjmp	.+4      	; 0xdaea <_Z16Display_Update_1v+0x4a8>
    dae6:	21 e0       	ldi	r18, 0x01	; 1
    dae8:	01 c0       	rjmp	.+2      	; 0xdaec <_Z16Display_Update_1v+0x4aa>
    daea:	29 e0       	ldi	r18, 0x09	; 9
    daec:	40 e0       	ldi	r20, 0x00	; 0
    daee:	60 e0       	ldi	r22, 0x00	; 0
    daf0:	80 e0       	ldi	r24, 0x00	; 0
    daf2:	e0 dc       	rcall	.-1600   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    daf4:	e0 91 4b 13 	lds	r30, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    daf8:	3e 2f       	mov	r19, r30
    dafa:	31 70       	andi	r19, 0x01	; 1
    dafc:	20 e0       	ldi	r18, 0x00	; 0
    dafe:	40 e0       	ldi	r20, 0x00	; 0
    db00:	50 e0       	ldi	r21, 0x00	; 0
    db02:	60 e0       	ldi	r22, 0x00	; 0
    db04:	70 e0       	ldi	r23, 0x00	; 0
    db06:	80 e0       	ldi	r24, 0x00	; 0
    db08:	90 e0       	ldi	r25, 0x00	; 0
    db0a:	a0 e0       	ldi	r26, 0x00	; 0
    db0c:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    db10:	29 f0       	breq	.+10     	; 0xdb1c <_Z16Display_Update_1v+0x4da>
    db12:	ee 7f       	andi	r30, 0xFE	; 254
    db14:	e0 93 4b 13 	sts	0x134B, r30	; 0x80134b <_sRuble_Parameters+0x1>
    db18:	2a e0       	ldi	r18, 0x0A	; 10
    db1a:	cc dc       	rcall	.-1640   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    db1c:	e0 e0       	ldi	r30, 0x00	; 0
    db1e:	fd e0       	ldi	r31, 0x0D	; 13
    db20:	24 e5       	ldi	r18, 0x54	; 84
    db22:	3d e0       	ldi	r19, 0x0D	; 13
    db24:	80 e0       	ldi	r24, 0x00	; 0
    db26:	90 81       	ld	r25, Z
    db28:	91 11       	cpse	r25, r1
    db2a:	8f 5f       	subi	r24, 0xFF	; 255
    db2c:	36 96       	adiw	r30, 0x06	; 6
    db2e:	2e 17       	cp	r18, r30
    db30:	3f 07       	cpc	r19, r31
    db32:	c9 f7       	brne	.-14     	; 0xdb26 <_Z16Display_Update_1v+0x4e4>
    db34:	80 93 19 0c 	sts	0x0C19, r24	; 0x800c19 <_ZZ16Display_Update_1vE10plot_added>
    db38:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb1>
    db3c:	88 23       	and	r24, r24
    db3e:	09 f4       	brne	.+2      	; 0xdb42 <_Z16Display_Update_1v+0x500>
    db40:	a8 c0       	rjmp	.+336    	; 0xdc92 <_Z16Display_Update_1v+0x650>
    db42:	10 92 fb 13 	sts	0x13FB, r1	; 0x8013fb <_sRuble_Parameters+0xb1>
    db46:	80 91 fa 13 	lds	r24, 0x13FA	; 0x8013fa <_sRuble_Parameters+0xb0>
    db4a:	81 11       	cpse	r24, r1
    db4c:	05 c0       	rjmp	.+10     	; 0xdb58 <_Z16Display_Update_1v+0x516>
    db4e:	28 e0       	ldi	r18, 0x08	; 8
    db50:	40 e0       	ldi	r20, 0x00	; 0
    db52:	62 e0       	ldi	r22, 0x02	; 2
    db54:	84 e0       	ldi	r24, 0x04	; 4
    db56:	ae dc       	rcall	.-1700   	; 0xd4b4 <_Z16Lcd_Special_Charhhhh>
    db58:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    db5c:	83 30       	cpi	r24, 0x03	; 3
    db5e:	b1 f0       	breq	.+44     	; 0xdb8c <_Z16Display_Update_1v+0x54a>
    db60:	85 30       	cpi	r24, 0x05	; 5
    db62:	59 f0       	breq	.+22     	; 0xdb7a <_Z16Display_Update_1v+0x538>
    db64:	82 30       	cpi	r24, 0x02	; 2
    db66:	f1 f4       	brne	.+60     	; 0xdba4 <_Z16Display_Update_1v+0x562>
    db68:	41 e0       	ldi	r20, 0x01	; 1
    db6a:	60 e0       	ldi	r22, 0x00	; 0
    db6c:	82 e7       	ldi	r24, 0x72	; 114
    db6e:	9c e0       	ldi	r25, 0x0C	; 12
    db70:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db74:	65 e5       	ldi	r22, 0x55	; 85
    db76:	71 e2       	ldi	r23, 0x21	; 33
    db78:	11 c0       	rjmp	.+34     	; 0xdb9c <_Z16Display_Update_1v+0x55a>
    db7a:	41 e0       	ldi	r20, 0x01	; 1
    db7c:	60 e0       	ldi	r22, 0x00	; 0
    db7e:	82 e7       	ldi	r24, 0x72	; 114
    db80:	9c e0       	ldi	r25, 0x0C	; 12
    db82:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db86:	6f e7       	ldi	r22, 0x7F	; 127
    db88:	71 e2       	ldi	r23, 0x21	; 33
    db8a:	08 c0       	rjmp	.+16     	; 0xdb9c <_Z16Display_Update_1v+0x55a>
    db8c:	41 e0       	ldi	r20, 0x01	; 1
    db8e:	60 e0       	ldi	r22, 0x00	; 0
    db90:	82 e7       	ldi	r24, 0x72	; 114
    db92:	9c e0       	ldi	r25, 0x0C	; 12
    db94:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db98:	6a e6       	ldi	r22, 0x6A	; 106
    db9a:	71 e2       	ldi	r23, 0x21	; 33
    db9c:	82 e7       	ldi	r24, 0x72	; 114
    db9e:	9c e0       	ldi	r25, 0x0C	; 12
    dba0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dba4:	80 91 19 0c 	lds	r24, 0x0C19	; 0x800c19 <_ZZ16Display_Update_1vE10plot_added>
    dba8:	81 11       	cpse	r24, r1
    dbaa:	15 c0       	rjmp	.+42     	; 0xdbd6 <_Z16Display_Update_1v+0x594>
    dbac:	42 e0       	ldi	r20, 0x02	; 2
    dbae:	60 e0       	ldi	r22, 0x00	; 0
    dbb0:	82 e7       	ldi	r24, 0x72	; 114
    dbb2:	9c e0       	ldi	r25, 0x0C	; 12
    dbb4:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbb8:	60 e4       	ldi	r22, 0x40	; 64
    dbba:	71 e2       	ldi	r23, 0x21	; 33
    dbbc:	82 e7       	ldi	r24, 0x72	; 114
    dbbe:	9c e0       	ldi	r25, 0x0C	; 12
    dbc0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dbc4:	43 e0       	ldi	r20, 0x03	; 3
    dbc6:	60 e0       	ldi	r22, 0x00	; 0
    dbc8:	82 e7       	ldi	r24, 0x72	; 114
    dbca:	9c e0       	ldi	r25, 0x0C	; 12
    dbcc:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbd0:	6b e2       	ldi	r22, 0x2B	; 43
    dbd2:	71 e2       	ldi	r23, 0x21	; 33
    dbd4:	43 c0       	rjmp	.+134    	; 0xdc5c <_Z16Display_Update_1v+0x61a>
    dbd6:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    dbda:	88 23       	and	r24, r24
    dbdc:	59 f1       	breq	.+86     	; 0xdc34 <_Z16Display_Update_1v+0x5f2>
    dbde:	8e 01       	movw	r16, r28
    dbe0:	0f 5f       	subi	r16, 0xFF	; 255
    dbe2:	1f 4f       	sbci	r17, 0xFF	; 255
    dbe4:	95 e1       	ldi	r25, 0x15	; 21
    dbe6:	f8 01       	movw	r30, r16
    dbe8:	11 92       	st	Z+, r1
    dbea:	9a 95       	dec	r25
    dbec:	e9 f7       	brne	.-6      	; 0xdbe8 <_Z16Display_Update_1v+0x5a6>
    dbee:	1f 92       	push	r1
    dbf0:	8f 93       	push	r24
    dbf2:	86 ee       	ldi	r24, 0xE6	; 230
    dbf4:	94 e0       	ldi	r25, 0x04	; 4
    dbf6:	9f 93       	push	r25
    dbf8:	8f 93       	push	r24
    dbfa:	1f 93       	push	r17
    dbfc:	0f 93       	push	r16
    dbfe:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    dc02:	20 e0       	ldi	r18, 0x00	; 0
    dc04:	42 e0       	ldi	r20, 0x02	; 2
    dc06:	64 e1       	ldi	r22, 0x14	; 20
    dc08:	c8 01       	movw	r24, r16
    dc0a:	0e 94 af 63 	call	0xc75e	; 0xc75e <_Z14Lcd_Print_BuffPchhh>
    dc0e:	43 e0       	ldi	r20, 0x03	; 3
    dc10:	60 e0       	ldi	r22, 0x00	; 0
    dc12:	82 e7       	ldi	r24, 0x72	; 114
    dc14:	9c e0       	ldi	r25, 0x0C	; 12
    dc16:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc1a:	66 e1       	ldi	r22, 0x16	; 22
    dc1c:	71 e2       	ldi	r23, 0x21	; 33
    dc1e:	82 e7       	ldi	r24, 0x72	; 114
    dc20:	9c e0       	ldi	r25, 0x0C	; 12
    dc22:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dc26:	0f 90       	pop	r0
    dc28:	0f 90       	pop	r0
    dc2a:	0f 90       	pop	r0
    dc2c:	0f 90       	pop	r0
    dc2e:	0f 90       	pop	r0
    dc30:	0f 90       	pop	r0
    dc32:	18 c0       	rjmp	.+48     	; 0xdc64 <_Z16Display_Update_1v+0x622>
    dc34:	42 e0       	ldi	r20, 0x02	; 2
    dc36:	60 e0       	ldi	r22, 0x00	; 0
    dc38:	82 e7       	ldi	r24, 0x72	; 114
    dc3a:	9c e0       	ldi	r25, 0x0C	; 12
    dc3c:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc40:	61 e0       	ldi	r22, 0x01	; 1
    dc42:	71 e2       	ldi	r23, 0x21	; 33
    dc44:	82 e7       	ldi	r24, 0x72	; 114
    dc46:	9c e0       	ldi	r25, 0x0C	; 12
    dc48:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dc4c:	43 e0       	ldi	r20, 0x03	; 3
    dc4e:	60 e0       	ldi	r22, 0x00	; 0
    dc50:	82 e7       	ldi	r24, 0x72	; 114
    dc52:	9c e0       	ldi	r25, 0x0C	; 12
    dc54:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc58:	6c ee       	ldi	r22, 0xEC	; 236
    dc5a:	70 e2       	ldi	r23, 0x20	; 32
    dc5c:	82 e7       	ldi	r24, 0x72	; 114
    dc5e:	9c e0       	ldi	r25, 0x0C	; 12
    dc60:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dc64:	80 91 2f 14 	lds	r24, 0x142F	; 0x80142f <_sRuble_Parameters+0xe5>
    dc68:	40 e0       	ldi	r20, 0x00	; 0
    dc6a:	63 e0       	ldi	r22, 0x03	; 3
    dc6c:	81 30       	cpi	r24, 0x01	; 1
    dc6e:	39 f4       	brne	.+14     	; 0xdc7e <_Z16Display_Update_1v+0x63c>
    dc70:	82 e7       	ldi	r24, 0x72	; 114
    dc72:	9c e0       	ldi	r25, 0x0C	; 12
    dc74:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc78:	6f ed       	ldi	r22, 0xDF	; 223
    dc7a:	70 e2       	ldi	r23, 0x20	; 32
    dc7c:	06 c0       	rjmp	.+12     	; 0xdc8a <_Z16Display_Update_1v+0x648>
    dc7e:	82 e7       	ldi	r24, 0x72	; 114
    dc80:	9c e0       	ldi	r25, 0x0C	; 12
    dc82:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc86:	62 ed       	ldi	r22, 0xD2	; 210
    dc88:	70 e2       	ldi	r23, 0x20	; 32
    dc8a:	82 e7       	ldi	r24, 0x72	; 114
    dc8c:	9c e0       	ldi	r25, 0x0C	; 12
    dc8e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dc92:	65 96       	adiw	r28, 0x15	; 21
    dc94:	0f b6       	in	r0, 0x3f	; 63
    dc96:	f8 94       	cli
    dc98:	de bf       	out	0x3e, r29	; 62
    dc9a:	0f be       	out	0x3f, r0	; 63
    dc9c:	cd bf       	out	0x3d, r28	; 61
    dc9e:	df 91       	pop	r29
    dca0:	cf 91       	pop	r28
    dca2:	1f 91       	pop	r17
    dca4:	0f 91       	pop	r16
    dca6:	ff 90       	pop	r15
    dca8:	ef 90       	pop	r14
    dcaa:	df 90       	pop	r13
    dcac:	08 95       	ret

0000dcae <_Z19Initialise_Hardwarev>:
    dcae:	0f 93       	push	r16
    dcb0:	1f 93       	push	r17
    dcb2:	cf 93       	push	r28
    dcb4:	df 93       	push	r29
    dcb6:	00 d0       	rcall	.+0      	; 0xdcb8 <_Z19Initialise_Hardwarev+0xa>
    dcb8:	cd b7       	in	r28, 0x3d	; 61
    dcba:	de b7       	in	r29, 0x3e	; 62
    dcbc:	18 e1       	ldi	r17, 0x18	; 24
    dcbe:	89 e2       	ldi	r24, 0x29	; 41
    dcc0:	0f b6       	in	r0, 0x3f	; 63
    dcc2:	f8 94       	cli
    dcc4:	a8 95       	wdr
    dcc6:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    dcca:	0f be       	out	0x3f, r0	; 63
    dccc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    dcd0:	10 92 9a 0c 	sts	0x0C9A, r1	; 0x800c9a <_gStart_Wdt>
    dcd4:	0e 94 75 61 	call	0xc2ea	; 0xc2ea <_Z20Timer1_Interrupt_Intv>
    dcd8:	0e 94 3c 63 	call	0xc678	; 0xc678 <_Z20Timer0_Interrupt_Intv>
    dcdc:	0e 94 aa 63 	call	0xc754	; 0xc754 <_Z8Lcd_Initv>
    dce0:	26 e0       	ldi	r18, 0x06	; 6
    dce2:	40 e8       	ldi	r20, 0x80	; 128
    dce4:	55 e2       	ldi	r21, 0x25	; 37
    dce6:	60 e0       	ldi	r22, 0x00	; 0
    dce8:	70 e0       	ldi	r23, 0x00	; 0
    dcea:	85 e5       	ldi	r24, 0x55	; 85
    dcec:	94 e1       	ldi	r25, 0x14	; 20
    dcee:	0e 94 bc cf 	call	0x19f78	; 0x19f78 <_ZN14HardwareSerial5beginEmh>
    dcf2:	26 e0       	ldi	r18, 0x06	; 6
    dcf4:	40 e8       	ldi	r20, 0x80	; 128
    dcf6:	55 e2       	ldi	r21, 0x25	; 37
    dcf8:	60 e0       	ldi	r22, 0x00	; 0
    dcfa:	70 e0       	ldi	r23, 0x00	; 0
    dcfc:	82 e1       	ldi	r24, 0x12	; 18
    dcfe:	96 e1       	ldi	r25, 0x16	; 22
    dd00:	0e 94 bc cf 	call	0x19f78	; 0x19f78 <_ZN14HardwareSerial5beginEmh>
    dd04:	62 e0       	ldi	r22, 0x02	; 2
    dd06:	83 e1       	ldi	r24, 0x13	; 19
    dd08:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dd0c:	41 e0       	ldi	r20, 0x01	; 1
    dd0e:	60 e0       	ldi	r22, 0x00	; 0
    dd10:	82 e7       	ldi	r24, 0x72	; 114
    dd12:	9c e0       	ldi	r25, 0x0C	; 12
    dd14:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd18:	68 ef       	ldi	r22, 0xF8	; 248
    dd1a:	74 e2       	ldi	r23, 0x24	; 36
    dd1c:	82 e7       	ldi	r24, 0x72	; 114
    dd1e:	9c e0       	ldi	r25, 0x0C	; 12
    dd20:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dd24:	42 e0       	ldi	r20, 0x02	; 2
    dd26:	60 e0       	ldi	r22, 0x00	; 0
    dd28:	82 e7       	ldi	r24, 0x72	; 114
    dd2a:	9c e0       	ldi	r25, 0x0C	; 12
    dd2c:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd30:	63 ee       	ldi	r22, 0xE3	; 227
    dd32:	74 e2       	ldi	r23, 0x24	; 36
    dd34:	82 e7       	ldi	r24, 0x72	; 114
    dd36:	9c e0       	ldi	r25, 0x0C	; 12
    dd38:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dd3c:	68 eb       	ldi	r22, 0xB8	; 184
    dd3e:	7b e0       	ldi	r23, 0x0B	; 11
    dd40:	80 e0       	ldi	r24, 0x00	; 0
    dd42:	90 e0       	ldi	r25, 0x00	; 0
    dd44:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    dd48:	41 e0       	ldi	r20, 0x01	; 1
    dd4a:	60 e0       	ldi	r22, 0x00	; 0
    dd4c:	82 e7       	ldi	r24, 0x72	; 114
    dd4e:	9c e0       	ldi	r25, 0x0C	; 12
    dd50:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd54:	6e ec       	ldi	r22, 0xCE	; 206
    dd56:	74 e2       	ldi	r23, 0x24	; 36
    dd58:	82 e7       	ldi	r24, 0x72	; 114
    dd5a:	9c e0       	ldi	r25, 0x0C	; 12
    dd5c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dd60:	41 e0       	ldi	r20, 0x01	; 1
    dd62:	65 e0       	ldi	r22, 0x05	; 5
    dd64:	82 e7       	ldi	r24, 0x72	; 114
    dd66:	9c e0       	ldi	r25, 0x0C	; 12
    dd68:	0e 94 8d d6 	call	0x1ad1a	; 0x1ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd6c:	61 ec       	ldi	r22, 0xC1	; 193
    dd6e:	74 e2       	ldi	r23, 0x24	; 36
    dd70:	82 e7       	ldi	r24, 0x72	; 114
    dd72:	9c e0       	ldi	r25, 0x0C	; 12
    dd74:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    dd78:	85 e5       	ldi	r24, 0x55	; 85
    dd7a:	94 e1       	ldi	r25, 0x14	; 20
    dd7c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    dd80:	61 e0       	ldi	r22, 0x01	; 1
    dd82:	8d e0       	ldi	r24, 0x0D	; 13
    dd84:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dd88:	61 e0       	ldi	r22, 0x01	; 1
    dd8a:	8a e0       	ldi	r24, 0x0A	; 10
    dd8c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dd90:	61 e0       	ldi	r22, 0x01	; 1
    dd92:	8b e0       	ldi	r24, 0x0B	; 11
    dd94:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dd98:	61 e0       	ldi	r22, 0x01	; 1
    dd9a:	86 e1       	ldi	r24, 0x16	; 22
    dd9c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dda0:	61 e0       	ldi	r22, 0x01	; 1
    dda2:	88 e1       	ldi	r24, 0x18	; 24
    dda4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dda8:	61 e0       	ldi	r22, 0x01	; 1
    ddaa:	8a e1       	ldi	r24, 0x1A	; 26
    ddac:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddb0:	61 e0       	ldi	r22, 0x01	; 1
    ddb2:	8c e1       	ldi	r24, 0x1C	; 28
    ddb4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddb8:	61 e0       	ldi	r22, 0x01	; 1
    ddba:	85 e2       	ldi	r24, 0x25	; 37
    ddbc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddc0:	61 e0       	ldi	r22, 0x01	; 1
    ddc2:	82 e2       	ldi	r24, 0x22	; 34
    ddc4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddc8:	61 e0       	ldi	r22, 0x01	; 1
    ddca:	80 e2       	ldi	r24, 0x20	; 32
    ddcc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddd0:	61 e0       	ldi	r22, 0x01	; 1
    ddd2:	8e e1       	ldi	r24, 0x1E	; 30
    ddd4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddd8:	61 e0       	ldi	r22, 0x01	; 1
    ddda:	87 e1       	ldi	r24, 0x17	; 23
    dddc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dde0:	61 e0       	ldi	r22, 0x01	; 1
    dde2:	89 e1       	ldi	r24, 0x19	; 25
    dde4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dde8:	61 e0       	ldi	r22, 0x01	; 1
    ddea:	8b e1       	ldi	r24, 0x1B	; 27
    ddec:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddf0:	61 e0       	ldi	r22, 0x01	; 1
    ddf2:	8d e1       	ldi	r24, 0x1D	; 29
    ddf4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ddf8:	61 e0       	ldi	r22, 0x01	; 1
    ddfa:	83 e2       	ldi	r24, 0x23	; 35
    ddfc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de00:	61 e0       	ldi	r22, 0x01	; 1
    de02:	81 e2       	ldi	r24, 0x21	; 33
    de04:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de08:	61 e0       	ldi	r22, 0x01	; 1
    de0a:	8f e1       	ldi	r24, 0x1F	; 31
    de0c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de10:	61 e0       	ldi	r22, 0x01	; 1
    de12:	81 e3       	ldi	r24, 0x31	; 49
    de14:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de18:	61 e0       	ldi	r22, 0x01	; 1
    de1a:	86 e0       	ldi	r24, 0x06	; 6
    de1c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de20:	61 e0       	ldi	r22, 0x01	; 1
    de22:	87 e0       	ldi	r24, 0x07	; 7
    de24:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de28:	61 e0       	ldi	r22, 0x01	; 1
    de2a:	88 e0       	ldi	r24, 0x08	; 8
    de2c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de30:	61 e0       	ldi	r22, 0x01	; 1
    de32:	89 e0       	ldi	r24, 0x09	; 9
    de34:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de38:	61 e0       	ldi	r22, 0x01	; 1
    de3a:	80 e3       	ldi	r24, 0x30	; 48
    de3c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de40:	61 e0       	ldi	r22, 0x01	; 1
    de42:	8f e2       	ldi	r24, 0x2F	; 47
    de44:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de48:	61 e0       	ldi	r22, 0x01	; 1
    de4a:	8e e2       	ldi	r24, 0x2E	; 46
    de4c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de50:	61 e0       	ldi	r22, 0x01	; 1
    de52:	8d e2       	ldi	r24, 0x2D	; 45
    de54:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de58:	61 e0       	ldi	r22, 0x01	; 1
    de5a:	85 e3       	ldi	r24, 0x35	; 53
    de5c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de60:	61 e0       	ldi	r22, 0x01	; 1
    de62:	84 e2       	ldi	r24, 0x24	; 36
    de64:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de68:	61 e0       	ldi	r22, 0x01	; 1
    de6a:	81 e0       	ldi	r24, 0x01	; 1
    de6c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de70:	61 e0       	ldi	r22, 0x01	; 1
    de72:	8c e0       	ldi	r24, 0x0C	; 12
    de74:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de78:	61 e0       	ldi	r22, 0x01	; 1
    de7a:	87 e2       	ldi	r24, 0x27	; 39
    de7c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de80:	61 e0       	ldi	r22, 0x01	; 1
    de82:	8e e1       	ldi	r24, 0x1E	; 30
    de84:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de88:	61 e0       	ldi	r22, 0x01	; 1
    de8a:	8e e1       	ldi	r24, 0x1E	; 30
    de8c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    de90:	60 e0       	ldi	r22, 0x00	; 0
    de92:	87 e3       	ldi	r24, 0x37	; 55
    de94:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    de98:	60 e0       	ldi	r22, 0x00	; 0
    de9a:	88 e3       	ldi	r24, 0x38	; 56
    de9c:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dea0:	62 e0       	ldi	r22, 0x02	; 2
    dea2:	89 e3       	ldi	r24, 0x39	; 57
    dea4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dea8:	61 e0       	ldi	r22, 0x01	; 1
    deaa:	8a e0       	ldi	r24, 0x0A	; 10
    deac:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    deb0:	61 e0       	ldi	r22, 0x01	; 1
    deb2:	8b e0       	ldi	r24, 0x0B	; 11
    deb4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    deb8:	60 e0       	ldi	r22, 0x00	; 0
    deba:	89 e3       	ldi	r24, 0x39	; 57
    debc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dec0:	60 e0       	ldi	r22, 0x00	; 0
    dec2:	8a e3       	ldi	r24, 0x3A	; 58
    dec4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    dec8:	60 e0       	ldi	r22, 0x00	; 0
    deca:	8b e3       	ldi	r24, 0x3B	; 59
    decc:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    ded0:	86 e1       	ldi	r24, 0x16	; 22
    ded2:	80 93 da 13 	sts	0x13DA, r24	; 0x8013da <_sRuble_Parameters+0x90>
    ded6:	10 93 db 13 	sts	0x13DB, r17	; 0x8013db <_sRuble_Parameters+0x91>
    deda:	8a e1       	ldi	r24, 0x1A	; 26
    dedc:	80 93 dc 13 	sts	0x13DC, r24	; 0x8013dc <_sRuble_Parameters+0x92>
    dee0:	8c e1       	ldi	r24, 0x1C	; 28
    dee2:	80 93 dd 13 	sts	0x13DD, r24	; 0x8013dd <_sRuble_Parameters+0x93>
    dee6:	85 e2       	ldi	r24, 0x25	; 37
    dee8:	80 93 de 13 	sts	0x13DE, r24	; 0x8013de <_sRuble_Parameters+0x94>
    deec:	82 e2       	ldi	r24, 0x22	; 34
    deee:	80 93 df 13 	sts	0x13DF, r24	; 0x8013df <_sRuble_Parameters+0x95>
    def2:	80 e2       	ldi	r24, 0x20	; 32
    def4:	80 93 e0 13 	sts	0x13E0, r24	; 0x8013e0 <_sRuble_Parameters+0x96>
    def8:	8e e1       	ldi	r24, 0x1E	; 30
    defa:	80 93 e1 13 	sts	0x13E1, r24	; 0x8013e1 <_sRuble_Parameters+0x97>
    defe:	87 e1       	ldi	r24, 0x17	; 23
    df00:	80 93 e2 13 	sts	0x13E2, r24	; 0x8013e2 <_sRuble_Parameters+0x98>
    df04:	89 e1       	ldi	r24, 0x19	; 25
    df06:	80 93 e3 13 	sts	0x13E3, r24	; 0x8013e3 <_sRuble_Parameters+0x99>
    df0a:	8b e1       	ldi	r24, 0x1B	; 27
    df0c:	80 93 e4 13 	sts	0x13E4, r24	; 0x8013e4 <_sRuble_Parameters+0x9a>
    df10:	8d e1       	ldi	r24, 0x1D	; 29
    df12:	80 93 e5 13 	sts	0x13E5, r24	; 0x8013e5 <_sRuble_Parameters+0x9b>
    df16:	83 e2       	ldi	r24, 0x23	; 35
    df18:	80 93 e6 13 	sts	0x13E6, r24	; 0x8013e6 <_sRuble_Parameters+0x9c>
    df1c:	81 e2       	ldi	r24, 0x21	; 33
    df1e:	80 93 e7 13 	sts	0x13E7, r24	; 0x8013e7 <_sRuble_Parameters+0x9d>
    df22:	8f e1       	ldi	r24, 0x1F	; 31
    df24:	80 93 e8 13 	sts	0x13E8, r24	; 0x8013e8 <_sRuble_Parameters+0x9e>
    df28:	81 e3       	ldi	r24, 0x31	; 49
    df2a:	80 93 e9 13 	sts	0x13E9, r24	; 0x8013e9 <_sRuble_Parameters+0x9f>
    df2e:	86 e0       	ldi	r24, 0x06	; 6
    df30:	80 93 ea 13 	sts	0x13EA, r24	; 0x8013ea <_sRuble_Parameters+0xa0>
    df34:	87 e0       	ldi	r24, 0x07	; 7
    df36:	80 93 eb 13 	sts	0x13EB, r24	; 0x8013eb <_sRuble_Parameters+0xa1>
    df3a:	88 e0       	ldi	r24, 0x08	; 8
    df3c:	80 93 ec 13 	sts	0x13EC, r24	; 0x8013ec <_sRuble_Parameters+0xa2>
    df40:	89 e0       	ldi	r24, 0x09	; 9
    df42:	80 93 ed 13 	sts	0x13ED, r24	; 0x8013ed <_sRuble_Parameters+0xa3>
    df46:	80 e3       	ldi	r24, 0x30	; 48
    df48:	80 93 ee 13 	sts	0x13EE, r24	; 0x8013ee <_sRuble_Parameters+0xa4>
    df4c:	8f e2       	ldi	r24, 0x2F	; 47
    df4e:	80 93 ef 13 	sts	0x13EF, r24	; 0x8013ef <_sRuble_Parameters+0xa5>
    df52:	8e e2       	ldi	r24, 0x2E	; 46
    df54:	80 93 f0 13 	sts	0x13F0, r24	; 0x8013f0 <_sRuble_Parameters+0xa6>
    df58:	8d e2       	ldi	r24, 0x2D	; 45
    df5a:	80 93 f1 13 	sts	0x13F1, r24	; 0x8013f1 <_sRuble_Parameters+0xa7>
    df5e:	62 e0       	ldi	r22, 0x02	; 2
    df60:	89 e3       	ldi	r24, 0x39	; 57
    df62:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    df66:	62 e0       	ldi	r22, 0x02	; 2
    df68:	8a e3       	ldi	r24, 0x3A	; 58
    df6a:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    df6e:	62 e0       	ldi	r22, 0x02	; 2
    df70:	8b e3       	ldi	r24, 0x3B	; 59
    df72:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    df76:	0a ed       	ldi	r16, 0xDA	; 218
    df78:	13 e1       	ldi	r17, 0x13	; 19
    df7a:	61 e0       	ldi	r22, 0x01	; 1
    df7c:	f8 01       	movw	r30, r16
    df7e:	81 91       	ld	r24, Z+
    df80:	8f 01       	movw	r16, r30
    df82:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    df86:	f3 e1       	ldi	r31, 0x13	; 19
    df88:	02 3f       	cpi	r16, 0xF2	; 242
    df8a:	1f 07       	cpc	r17, r31
    df8c:	b1 f7       	brne	.-20     	; 0xdf7a <_Z19Initialise_Hardwarev+0x2cc>
    df8e:	6e 98       	cbi	0x0d, 6	; 13
    df90:	76 9a       	sbi	0x0e, 6	; 14
    df92:	68 ee       	ldi	r22, 0xE8	; 232
    df94:	73 e0       	ldi	r23, 0x03	; 3
    df96:	80 e0       	ldi	r24, 0x00	; 0
    df98:	90 e0       	ldi	r25, 0x00	; 0
    df9a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    df9e:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    dfa2:	88 69       	ori	r24, 0x98	; 152
    dfa4:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    dfa8:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    dfac:	86 60       	ori	r24, 0x06	; 6
    dfae:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    dfb2:	78 94       	sei
    dfb4:	68 ee       	ldi	r22, 0xE8	; 232
    dfb6:	73 e0       	ldi	r23, 0x03	; 3
    dfb8:	80 e0       	ldi	r24, 0x00	; 0
    dfba:	90 e0       	ldi	r25, 0x00	; 0
    dfbc:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    dfc0:	98 d3       	rcall	.+1840   	; 0xe6f2 <_Z11Debug_Checkv>
    dfc2:	0e 94 df 63 	call	0xc7be	; 0xc7be <_Z9Lora_Initv>
    dfc6:	88 23       	and	r24, r24
    dfc8:	79 f0       	breq	.+30     	; 0xdfe8 <_Z19Initialise_Hardwarev+0x33a>
    dfca:	0e 94 01 64 	call	0xc802	; 0xc802 <_Z13Lora_Set_Freqv>
    dfce:	0e 94 0f 64 	call	0xc81e	; 0xc81e <_Z15Lora_Set_Configv>
    dfd2:	0e 94 09 64 	call	0xc812	; 0xc812 <_Z14Lora_Set_Powerv>
    dfd6:	10 92 fa 13 	sts	0x13FA, r1	; 0x8013fa <_sRuble_Parameters+0xb0>
    dfda:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    dfde:	81 30       	cpi	r24, 0x01	; 1
    dfe0:	11 f5       	brne	.+68     	; 0xe026 <_Z19Initialise_Hardwarev+0x378>
    dfe2:	62 eb       	ldi	r22, 0xB2	; 178
    dfe4:	74 e2       	ldi	r23, 0x24	; 36
    dfe6:	17 c0       	rjmp	.+46     	; 0xe016 <_Z19Initialise_Hardwarev+0x368>
    dfe8:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <_sRuble_Parameters+0x5a>
    dfec:	82 60       	ori	r24, 0x02	; 2
    dfee:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5a>
    dff2:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    dff6:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    dffa:	91 60       	ori	r25, 0x01	; 1
    dffc:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    e000:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    e004:	81 e0       	ldi	r24, 0x01	; 1
    e006:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0xb0>
    e00a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e00e:	81 30       	cpi	r24, 0x01	; 1
    e010:	51 f4       	brne	.+20     	; 0xe026 <_Z19Initialise_Hardwarev+0x378>
    e012:	6f e9       	ldi	r22, 0x9F	; 159
    e014:	74 e2       	ldi	r23, 0x24	; 36
    e016:	85 e5       	ldi	r24, 0x55	; 85
    e018:	94 e1       	ldi	r25, 0x14	; 20
    e01a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e01e:	85 e5       	ldi	r24, 0x55	; 85
    e020:	94 e1       	ldi	r25, 0x14	; 20
    e022:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    e026:	80 9a       	sbi	0x10, 0	; 16
    e028:	88 98       	cbi	0x11, 0	; 17
    e02a:	68 e8       	ldi	r22, 0x88	; 136
    e02c:	73 e1       	ldi	r23, 0x13	; 19
    e02e:	80 e0       	ldi	r24, 0x00	; 0
    e030:	90 e0       	ldi	r25, 0x00	; 0
    e032:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e036:	81 b3       	in	r24, 0x11	; 17
    e038:	8e 6f       	ori	r24, 0xFE	; 254
    e03a:	81 bb       	out	0x11, r24	; 17
    e03c:	80 91 4c 13 	lds	r24, 0x134C	; 0x80134c <_sRuble_Parameters+0x2>
    e040:	84 60       	ori	r24, 0x04	; 4
    e042:	80 93 4c 13 	sts	0x134C, r24	; 0x80134c <_sRuble_Parameters+0x2>
    e046:	fd da       	rcall	.-2566   	; 0xd642 <_Z16Display_Update_1v>
    e048:	68 e8       	ldi	r22, 0x88	; 136
    e04a:	73 e1       	ldi	r23, 0x13	; 19
    e04c:	80 e0       	ldi	r24, 0x00	; 0
    e04e:	90 e0       	ldi	r25, 0x00	; 0
    e050:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e054:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    e058:	82 60       	ori	r24, 0x02	; 2
    e05a:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
    e05e:	f1 da       	rcall	.-2590   	; 0xd642 <_Z16Display_Update_1v>
    e060:	68 e8       	ldi	r22, 0x88	; 136
    e062:	73 e1       	ldi	r23, 0x13	; 19
    e064:	80 e0       	ldi	r24, 0x00	; 0
    e066:	90 e0       	ldi	r25, 0x00	; 0
    e068:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e06c:	68 e8       	ldi	r22, 0x88	; 136
    e06e:	73 e1       	ldi	r23, 0x13	; 19
    e070:	80 e0       	ldi	r24, 0x00	; 0
    e072:	90 e0       	ldi	r25, 0x00	; 0
    e074:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e078:	68 e8       	ldi	r22, 0x88	; 136
    e07a:	73 e1       	ldi	r23, 0x13	; 19
    e07c:	80 e0       	ldi	r24, 0x00	; 0
    e07e:	90 e0       	ldi	r25, 0x00	; 0
    e080:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e084:	68 e8       	ldi	r22, 0x88	; 136
    e086:	73 e1       	ldi	r23, 0x13	; 19
    e088:	80 e0       	ldi	r24, 0x00	; 0
    e08a:	90 e0       	ldi	r25, 0x00	; 0
    e08c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e090:	68 e8       	ldi	r22, 0x88	; 136
    e092:	73 e1       	ldi	r23, 0x13	; 19
    e094:	80 e0       	ldi	r24, 0x00	; 0
    e096:	90 e0       	ldi	r25, 0x00	; 0
    e098:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e09c:	ce 01       	movw	r24, r28
    e09e:	01 96       	adiw	r24, 0x01	; 1
    e0a0:	23 e0       	ldi	r18, 0x03	; 3
    e0a2:	fc 01       	movw	r30, r24
    e0a4:	11 92       	st	Z+, r1
    e0a6:	2a 95       	dec	r18
    e0a8:	e9 f7       	brne	.-6      	; 0xe0a4 <_Z19Initialise_Hardwarev+0x3f6>
    e0aa:	2a e1       	ldi	r18, 0x1A	; 26
    e0ac:	29 83       	std	Y+1, r18	; 0x01
    e0ae:	01 e0       	ldi	r16, 0x01	; 1
    e0b0:	28 e8       	ldi	r18, 0x88	; 136
    e0b2:	33 e1       	ldi	r19, 0x13	; 19
    e0b4:	40 e0       	ldi	r20, 0x00	; 0
    e0b6:	50 e0       	ldi	r21, 0x00	; 0
    e0b8:	6e e1       	ldi	r22, 0x1E	; 30
    e0ba:	73 e0       	ldi	r23, 0x03	; 3
    e0bc:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e0c0:	0e 94 f9 66 	call	0xcdf2	; 0xcdf2 <_Z8Gsm_Initv>
    e0c4:	20 91 3a 14 	lds	r18, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e0c8:	88 23       	and	r24, r24
    e0ca:	29 f0       	breq	.+10     	; 0xe0d6 <_Z19Initialise_Hardwarev+0x428>
    e0cc:	21 30       	cpi	r18, 0x01	; 1
    e0ce:	e9 f4       	brne	.+58     	; 0xe10a <_Z19Initialise_Hardwarev+0x45c>
    e0d0:	61 e9       	ldi	r22, 0x91	; 145
    e0d2:	74 e2       	ldi	r23, 0x24	; 36
    e0d4:	12 c0       	rjmp	.+36     	; 0xe0fa <_Z19Initialise_Hardwarev+0x44c>
    e0d6:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <_sRuble_Parameters+0x5a>
    e0da:	81 60       	ori	r24, 0x01	; 1
    e0dc:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5a>
    e0e0:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    e0e4:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    e0e8:	91 60       	ori	r25, 0x01	; 1
    e0ea:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    e0ee:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    e0f2:	21 30       	cpi	r18, 0x01	; 1
    e0f4:	51 f4       	brne	.+20     	; 0xe10a <_Z19Initialise_Hardwarev+0x45c>
    e0f6:	6f e7       	ldi	r22, 0x7F	; 127
    e0f8:	74 e2       	ldi	r23, 0x24	; 36
    e0fa:	85 e5       	ldi	r24, 0x55	; 85
    e0fc:	94 e1       	ldi	r25, 0x14	; 20
    e0fe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e102:	85 e5       	ldi	r24, 0x55	; 85
    e104:	94 e1       	ldi	r25, 0x14	; 20
    e106:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    e10a:	81 e0       	ldi	r24, 0x01	; 1
    e10c:	80 93 39 14 	sts	0x1439, r24	; 0x801439 <_sRuble_Parameters+0xef>
    e110:	0f 90       	pop	r0
    e112:	0f 90       	pop	r0
    e114:	0f 90       	pop	r0
    e116:	df 91       	pop	r29
    e118:	cf 91       	pop	r28
    e11a:	1f 91       	pop	r17
    e11c:	0f 91       	pop	r16
    e11e:	08 95       	ret

0000e120 <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e120:	cf 92       	push	r12
    e122:	df 92       	push	r13
    e124:	ef 92       	push	r14
    e126:	ff 92       	push	r15
    e128:	0f 93       	push	r16
    e12a:	cf 93       	push	r28
    e12c:	df 93       	push	r29
    e12e:	cd b7       	in	r28, 0x3d	; 61
    e130:	de b7       	in	r29, 0x3e	; 62
    e132:	c4 56       	subi	r28, 0x64	; 100
    e134:	d1 09       	sbc	r29, r1
    e136:	0f b6       	in	r0, 0x3f	; 63
    e138:	f8 94       	cli
    e13a:	de bf       	out	0x3e, r29	; 62
    e13c:	0f be       	out	0x3f, r0	; 63
    e13e:	cd bf       	out	0x3d, r28	; 61
    e140:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e142:	ce 01       	movw	r24, r28
    e144:	01 96       	adiw	r24, 0x01	; 1
    e146:	6c 01       	movw	r12, r24
    e148:	84 e6       	ldi	r24, 0x64	; 100
    e14a:	f6 01       	movw	r30, r12
    e14c:	11 92       	st	Z+, r1
    e14e:	8a 95       	dec	r24
    e150:	e9 f7       	brne	.-6      	; 0xe14c <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e152:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e156:	81 30       	cpi	r24, 0x01	; 1
    e158:	69 f4       	brne	.+26     	; 0xe174 <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e15a:	f7 01       	movw	r30, r14
    e15c:	01 90       	ld	r0, Z+
    e15e:	00 20       	and	r0, r0
    e160:	e9 f7       	brne	.-6      	; 0xe15c <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e162:	31 97       	sbiw	r30, 0x01	; 1
    e164:	af 01       	movw	r20, r30
    e166:	4e 19       	sub	r20, r14
    e168:	5f 09       	sbc	r21, r15
    e16a:	b7 01       	movw	r22, r14
    e16c:	85 e5       	ldi	r24, 0x55	; 85
    e16e:	94 e1       	ldi	r25, 0x14	; 20
    e170:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
	}
	Reset_Buffer();
    e174:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e178:	f7 01       	movw	r30, r14
    e17a:	01 90       	ld	r0, Z+
    e17c:	00 20       	and	r0, r0
    e17e:	e9 f7       	brne	.-6      	; 0xe17a <_Z14MQTT_SUBSCRIBEPc+0x5a>
    e180:	31 97       	sbiw	r30, 0x01	; 1
    e182:	ee 19       	sub	r30, r14
    e184:	ff 09       	sbc	r31, r15
    e186:	ff 93       	push	r31
    e188:	ef 93       	push	r30
    e18a:	8d ef       	ldi	r24, 0xFD	; 253
    e18c:	94 e0       	ldi	r25, 0x04	; 4
    e18e:	9f 93       	push	r25
    e190:	8f 93       	push	r24
    e192:	df 92       	push	r13
    e194:	cf 92       	push	r12
    e196:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e19a:	02 e0       	ldi	r16, 0x02	; 2
    e19c:	28 eb       	ldi	r18, 0xB8	; 184
    e19e:	3b e0       	ldi	r19, 0x0B	; 11
    e1a0:	40 e0       	ldi	r20, 0x00	; 0
    e1a2:	50 e0       	ldi	r21, 0x00	; 0
    e1a4:	64 e0       	ldi	r22, 0x04	; 4
    e1a6:	74 e0       	ldi	r23, 0x04	; 4
    e1a8:	c6 01       	movw	r24, r12
    e1aa:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e1ae:	0f 90       	pop	r0
    e1b0:	0f 90       	pop	r0
    e1b2:	0f 90       	pop	r0
    e1b4:	0f 90       	pop	r0
    e1b6:	0f 90       	pop	r0
    e1b8:	0f 90       	pop	r0
    e1ba:	81 11       	cpse	r24, r1
    e1bc:	02 c0       	rjmp	.+4      	; 0xe1c2 <_Z14MQTT_SUBSCRIBEPc+0xa2>
				}
				return 1;
			}
		}
	}
	return 0;
    e1be:	80 e0       	ldi	r24, 0x00	; 0
    e1c0:	36 c0       	rjmp	.+108    	; 0xe22e <_Z14MQTT_SUBSCRIBEPc+0x10e>
	Reset_Buffer();
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		Reset_Buffer();
    e1c2:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(topic);
    e1c6:	b7 01       	movw	r22, r14
    e1c8:	82 e1       	ldi	r24, 0x12	; 18
    e1ca:	96 e1       	ldi	r25, 0x16	; 22
    e1cc:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e1d0:	02 e0       	ldi	r16, 0x02	; 2
    e1d2:	28 eb       	ldi	r18, 0xB8	; 184
    e1d4:	3b e0       	ldi	r19, 0x0B	; 11
    e1d6:	40 e0       	ldi	r20, 0x00	; 0
    e1d8:	50 e0       	ldi	r21, 0x00	; 0
    e1da:	64 e0       	ldi	r22, 0x04	; 4
    e1dc:	74 e0       	ldi	r23, 0x04	; 4
    e1de:	85 e1       	ldi	r24, 0x15	; 21
    e1e0:	95 e0       	ldi	r25, 0x05	; 5
    e1e2:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e1e6:	88 23       	and	r24, r24
    e1e8:	51 f3       	breq	.-44     	; 0xe1be <_Z14MQTT_SUBSCRIBEPc+0x9e>
		{
			Reset_Buffer();
    e1ea:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(topic);
    e1ee:	b7 01       	movw	r22, r14
    e1f0:	82 e1       	ldi	r24, 0x12	; 18
    e1f2:	96 e1       	ldi	r25, 0x16	; 22
    e1f4:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e1f8:	28 e8       	ldi	r18, 0x88	; 136
    e1fa:	33 e1       	ldi	r19, 0x13	; 19
    e1fc:	40 e0       	ldi	r20, 0x00	; 0
    e1fe:	50 e0       	ldi	r21, 0x00	; 0
    e200:	6a e2       	ldi	r22, 0x2A	; 42
    e202:	75 e0       	ldi	r23, 0x05	; 5
    e204:	80 e0       	ldi	r24, 0x00	; 0
    e206:	90 e0       	ldi	r25, 0x00	; 0
    e208:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e20c:	88 23       	and	r24, r24
    e20e:	b9 f2       	breq	.-82     	; 0xe1be <_Z14MQTT_SUBSCRIBEPc+0x9e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e210:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e214:	81 30       	cpi	r24, 0x01	; 1
    e216:	51 f4       	brne	.+20     	; 0xe22c <_Z14MQTT_SUBSCRIBEPc+0x10c>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e218:	6e e7       	ldi	r22, 0x7E	; 126
    e21a:	73 e2       	ldi	r23, 0x23	; 35
    e21c:	85 e5       	ldi	r24, 0x55	; 85
    e21e:	94 e1       	ldi	r25, 0x14	; 20
    e220:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e224:	85 e5       	ldi	r24, 0x55	; 85
    e226:	94 e1       	ldi	r25, 0x14	; 20
    e228:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e22c:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e22e:	cc 59       	subi	r28, 0x9C	; 156
    e230:	df 4f       	sbci	r29, 0xFF	; 255
    e232:	0f b6       	in	r0, 0x3f	; 63
    e234:	f8 94       	cli
    e236:	de bf       	out	0x3e, r29	; 62
    e238:	0f be       	out	0x3f, r0	; 63
    e23a:	cd bf       	out	0x3d, r28	; 61
    e23c:	df 91       	pop	r29
    e23e:	cf 91       	pop	r28
    e240:	0f 91       	pop	r16
    e242:	ff 90       	pop	r15
    e244:	ef 90       	pop	r14
    e246:	df 90       	pop	r13
    e248:	cf 90       	pop	r12
    e24a:	08 95       	ret

0000e24c <_Z21Subscribed_data_checkv>:
}

bool Subscribed_data_check(void)
{
	
	if(rx_complete)
    e24c:	80 91 27 0c 	lds	r24, 0x0C27	; 0x800c27 <rx_complete>
    e250:	88 23       	and	r24, r24
    e252:	09 f4       	brne	.+2      	; 0xe256 <_Z21Subscribed_data_checkv+0xa>
    e254:	48 c0       	rjmp	.+144    	; 0xe2e6 <_Z21Subscribed_data_checkv+0x9a>
	{
		rx_complete = _kRESET;
    e256:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e25a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e25e:	81 30       	cpi	r24, 0x01	; 1
    e260:	a9 f4       	brne	.+42     	; 0xe28c <_Z21Subscribed_data_checkv+0x40>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e262:	62 e0       	ldi	r22, 0x02	; 2
    e264:	73 e2       	ldi	r23, 0x23	; 35
    e266:	85 e5       	ldi	r24, 0x55	; 85
    e268:	94 e1       	ldi	r25, 0x14	; 20
    e26a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e26e:	ec e6       	ldi	r30, 0x6C	; 108
    e270:	ff e0       	ldi	r31, 0x0F	; 15
    e272:	01 90       	ld	r0, Z+
    e274:	00 20       	and	r0, r0
    e276:	e9 f7       	brne	.-6      	; 0xe272 <_Z21Subscribed_data_checkv+0x26>
    e278:	31 97       	sbiw	r30, 0x01	; 1
    e27a:	af 01       	movw	r20, r30
    e27c:	4c 56       	subi	r20, 0x6C	; 108
    e27e:	5f 40       	sbci	r21, 0x0F	; 15
    e280:	6c e6       	ldi	r22, 0x6C	; 108
    e282:	7f e0       	ldi	r23, 0x0F	; 15
    e284:	85 e5       	ldi	r24, 0x55	; 85
    e286:	94 e1       	ldi	r25, 0x14	; 20
    e288:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX") && monitor_serial_start < 7)
    e28c:	69 e3       	ldi	r22, 0x39	; 57
    e28e:	75 e0       	ldi	r23, 0x05	; 5
    e290:	8c e6       	ldi	r24, 0x6C	; 108
    e292:	9f e0       	ldi	r25, 0x0F	; 15
    e294:	0e 94 c4 e9 	call	0x1d388	; 0x1d388 <strstr>
    e298:	89 2b       	or	r24, r25
    e29a:	b1 f0       	breq	.+44     	; 0xe2c8 <_Z21Subscribed_data_checkv+0x7c>
    e29c:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <monitor_serial_start>
    e2a0:	87 30       	cpi	r24, 0x07	; 7
    e2a2:	90 f4       	brcc	.+36     	; 0xe2c8 <_Z21Subscribed_data_checkv+0x7c>
		{
			monitor_serial_start = 0;
    e2a4:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <monitor_serial_start>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e2a8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e2ac:	81 30       	cpi	r24, 0x01	; 1
    e2ae:	51 f4       	brne	.+20     	; 0xe2c4 <_Z21Subscribed_data_checkv+0x78>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e2b0:	66 ef       	ldi	r22, 0xF6	; 246
    e2b2:	72 e2       	ldi	r23, 0x22	; 34
    e2b4:	85 e5       	ldi	r24, 0x55	; 85
    e2b6:	94 e1       	ldi	r25, 0x14	; 20
    e2b8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e2bc:	85 e5       	ldi	r24, 0x55	; 85
    e2be:	94 e1       	ldi	r25, 0x14	; 20
    e2c0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e2c4:	81 e0       	ldi	r24, 0x01	; 1
    e2c6:	08 95       	ret
		}
		
		memset((char*)_gPub_Buff,0,strlen((const char*)_gPub_Buff));
    e2c8:	ec e6       	ldi	r30, 0x6C	; 108
    e2ca:	ff e0       	ldi	r31, 0x0F	; 15
    e2cc:	01 90       	ld	r0, Z+
    e2ce:	00 20       	and	r0, r0
    e2d0:	e9 f7       	brne	.-6      	; 0xe2cc <_Z21Subscribed_data_checkv+0x80>
    e2d2:	31 97       	sbiw	r30, 0x01	; 1
    e2d4:	af 01       	movw	r20, r30
    e2d6:	4c 56       	subi	r20, 0x6C	; 108
    e2d8:	5f 40       	sbci	r21, 0x0F	; 15
    e2da:	60 e0       	ldi	r22, 0x00	; 0
    e2dc:	70 e0       	ldi	r23, 0x00	; 0
    e2de:	8c e6       	ldi	r24, 0x6C	; 108
    e2e0:	9f e0       	ldi	r25, 0x0F	; 15
    e2e2:	0e 94 ad e9 	call	0x1d35a	; 0x1d35a <memset>
	}
	
	return 0;
    e2e6:	80 e0       	ldi	r24, 0x00	; 0
			return 1;
		}
	}
	
	return 0;
}
    e2e8:	08 95       	ret

0000e2ea <_ZNK5EERefdeEv>:
	
	if(adc_value < required_current)
	{
		_sPump_Parameter.Irrigation_Status = 1;
	}
}
    e2ea:	fc 01       	movw	r30, r24
    e2ec:	80 81       	ld	r24, Z
    e2ee:	91 81       	ldd	r25, Z+1	; 0x01
    e2f0:	0c 94 b9 ec 	jmp	0x1d972	; 0x1d972 <eeprom_read_byte>

0000e2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>:
    e2f4:	0f 93       	push	r16
    e2f6:	1f 93       	push	r17
    e2f8:	cf 93       	push	r28
    e2fa:	df 93       	push	r29
    e2fc:	1f 92       	push	r1
    e2fe:	1f 92       	push	r1
    e300:	cd b7       	in	r28, 0x3d	; 61
    e302:	de b7       	in	r29, 0x3e	; 62
    e304:	8b 01       	movw	r16, r22
    e306:	9a 83       	std	Y+2, r25	; 0x02
    e308:	89 83       	std	Y+1, r24	; 0x01
    e30a:	ce 01       	movw	r24, r28
    e30c:	01 96       	adiw	r24, 0x01	; 1
    e30e:	ed df       	rcall	.-38     	; 0xe2ea <_ZNK5EERefdeEv>
    e310:	f8 01       	movw	r30, r16
    e312:	80 83       	st	Z, r24
    e314:	c8 01       	movw	r24, r16
    e316:	0f 90       	pop	r0
    e318:	0f 90       	pop	r0
    e31a:	df 91       	pop	r29
    e31c:	cf 91       	pop	r28
    e31e:	1f 91       	pop	r17
    e320:	0f 91       	pop	r16
    e322:	08 95       	ret

0000e324 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>:
    e324:	af 92       	push	r10
    e326:	bf 92       	push	r11
    e328:	cf 92       	push	r12
    e32a:	df 92       	push	r13
    e32c:	ef 92       	push	r14
    e32e:	ff 92       	push	r15
    e330:	0f 93       	push	r16
    e332:	1f 93       	push	r17
    e334:	cf 93       	push	r28
    e336:	df 93       	push	r29
    e338:	1f 92       	push	r1
    e33a:	1f 92       	push	r1
    e33c:	cd b7       	in	r28, 0x3d	; 61
    e33e:	de b7       	in	r29, 0x3e	; 62
    e340:	8b 01       	movw	r16, r22
    e342:	6b 01       	movw	r12, r22
    e344:	24 e0       	ldi	r18, 0x04	; 4
    e346:	c2 0e       	add	r12, r18
    e348:	d1 1c       	adc	r13, r1
    e34a:	7b 01       	movw	r14, r22
    e34c:	5c 01       	movw	r10, r24
    e34e:	a6 1a       	sub	r10, r22
    e350:	b7 0a       	sbc	r11, r23
    e352:	c5 01       	movw	r24, r10
    e354:	8e 0d       	add	r24, r14
    e356:	9f 1d       	adc	r25, r15
    e358:	9a 83       	std	Y+2, r25	; 0x02
    e35a:	89 83       	std	Y+1, r24	; 0x01
    e35c:	ce 01       	movw	r24, r28
    e35e:	01 96       	adiw	r24, 0x01	; 1
    e360:	c4 df       	rcall	.-120    	; 0xe2ea <_ZNK5EERefdeEv>
    e362:	f7 01       	movw	r30, r14
    e364:	81 93       	st	Z+, r24
    e366:	7f 01       	movw	r14, r30
    e368:	ec 15       	cp	r30, r12
    e36a:	fd 05       	cpc	r31, r13
    e36c:	91 f7       	brne	.-28     	; 0xe352 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4+0x2e>
    e36e:	c8 01       	movw	r24, r16
    e370:	0f 90       	pop	r0
    e372:	0f 90       	pop	r0
    e374:	df 91       	pop	r29
    e376:	cf 91       	pop	r28
    e378:	1f 91       	pop	r17
    e37a:	0f 91       	pop	r16
    e37c:	ff 90       	pop	r15
    e37e:	ef 90       	pop	r14
    e380:	df 90       	pop	r13
    e382:	cf 90       	pop	r12
    e384:	bf 90       	pop	r11
    e386:	af 90       	pop	r10
    e388:	08 95       	ret

0000e38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
    e38a:	0f 93       	push	r16
    e38c:	1f 93       	push	r17
    e38e:	cf 93       	push	r28
    e390:	df 93       	push	r29
    e392:	1f 92       	push	r1
    e394:	1f 92       	push	r1
    e396:	cd b7       	in	r28, 0x3d	; 61
    e398:	de b7       	in	r29, 0x3e	; 62
    e39a:	8b 01       	movw	r16, r22
    e39c:	fb 01       	movw	r30, r22
    e39e:	60 81       	ld	r22, Z
    e3a0:	9a 83       	std	Y+2, r25	; 0x02
    e3a2:	89 83       	std	Y+1, r24	; 0x01
    e3a4:	ce 01       	movw	r24, r28
    e3a6:	01 96       	adiw	r24, 0x01	; 1
    e3a8:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    e3ac:	c8 01       	movw	r24, r16
    e3ae:	0f 90       	pop	r0
    e3b0:	0f 90       	pop	r0
    e3b2:	df 91       	pop	r29
    e3b4:	cf 91       	pop	r28
    e3b6:	1f 91       	pop	r17
    e3b8:	0f 91       	pop	r16
    e3ba:	08 95       	ret

0000e3bc <_Z11Check_Phasev>:
    e3bc:	cf 93       	push	r28
    e3be:	87 e3       	ldi	r24, 0x37	; 55
    e3c0:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    e3c4:	89 2b       	or	r24, r25
    e3c6:	69 f0       	breq	.+26     	; 0xe3e2 <_Z11Check_Phasev+0x26>
    e3c8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e3cc:	81 30       	cpi	r24, 0x01	; 1
    e3ce:	31 f4       	brne	.+12     	; 0xe3dc <_Z11Check_Phasev+0x20>
    e3d0:	65 ed       	ldi	r22, 0xD5	; 213
    e3d2:	75 e2       	ldi	r23, 0x25	; 37
    e3d4:	85 e5       	ldi	r24, 0x55	; 85
    e3d6:	94 e1       	ldi	r25, 0x14	; 20
    e3d8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e3dc:	10 92 96 0c 	sts	0x0C96, r1	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
    e3e0:	2f c0       	rjmp	.+94     	; 0xe440 <_Z11Check_Phasev+0x84>
    e3e2:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
    e3e6:	8d 33       	cpi	r24, 0x3D	; 61
    e3e8:	38 f0       	brcs	.+14     	; 0xe3f8 <_Z11Check_Phasev+0x3c>
    e3ea:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e3ee:	81 30       	cpi	r24, 0x01	; 1
    e3f0:	f9 f4       	brne	.+62     	; 0xe430 <_Z11Check_Phasev+0x74>
    e3f2:	65 ec       	ldi	r22, 0xC5	; 197
    e3f4:	75 e2       	ldi	r23, 0x25	; 37
    e3f6:	18 c0       	rjmp	.+48     	; 0xe428 <_Z11Check_Phasev+0x6c>
    e3f8:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
    e3fc:	8d 33       	cpi	r24, 0x3D	; 61
    e3fe:	d0 f4       	brcc	.+52     	; 0xe434 <_Z11Check_Phasev+0x78>
    e400:	87 e3       	ldi	r24, 0x37	; 55
    e402:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    e406:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e40a:	89 2b       	or	r24, r25
    e40c:	49 f0       	breq	.+18     	; 0xe420 <_Z11Check_Phasev+0x64>
    e40e:	c1 30       	cpi	r28, 0x01	; 1
    e410:	b9 f4       	brne	.+46     	; 0xe440 <_Z11Check_Phasev+0x84>
    e412:	6f ea       	ldi	r22, 0xAF	; 175
    e414:	75 e2       	ldi	r23, 0x25	; 37
    e416:	85 e5       	ldi	r24, 0x55	; 85
    e418:	94 e1       	ldi	r25, 0x14	; 20
    e41a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e41e:	11 c0       	rjmp	.+34     	; 0xe442 <_Z11Check_Phasev+0x86>
    e420:	c1 30       	cpi	r28, 0x01	; 1
    e422:	31 f4       	brne	.+12     	; 0xe430 <_Z11Check_Phasev+0x74>
    e424:	6d e9       	ldi	r22, 0x9D	; 157
    e426:	75 e2       	ldi	r23, 0x25	; 37
    e428:	85 e5       	ldi	r24, 0x55	; 85
    e42a:	94 e1       	ldi	r25, 0x14	; 20
    e42c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e430:	c0 e0       	ldi	r28, 0x00	; 0
    e432:	07 c0       	rjmp	.+14     	; 0xe442 <_Z11Check_Phasev+0x86>
    e434:	6b e8       	ldi	r22, 0x8B	; 139
    e436:	75 e2       	ldi	r23, 0x25	; 37
    e438:	85 e5       	ldi	r24, 0x55	; 85
    e43a:	94 e1       	ldi	r25, 0x14	; 20
    e43c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e440:	c1 e0       	ldi	r28, 0x01	; 1
    e442:	8c 2f       	mov	r24, r28
    e444:	cf 91       	pop	r28
    e446:	08 95       	ret

0000e448 <_Z9Check_Simc>:
    e448:	0f 93       	push	r16
    e44a:	cf 93       	push	r28
    e44c:	df 93       	push	r29
    e44e:	1f 92       	push	r1
    e450:	1f 92       	push	r1
    e452:	cd b7       	in	r28, 0x3d	; 61
    e454:	de b7       	in	r29, 0x3e	; 62
    e456:	90 91 8d 0c 	lds	r25, 0x0C8D	; 0x800c8d <_ZZ9Check_SimcE7counter>
    e45a:	9f 5f       	subi	r25, 0xFF	; 255
    e45c:	90 93 8d 0c 	sts	0x0C8D, r25	; 0x800c8d <_ZZ9Check_SimcE7counter>
    e460:	83 30       	cpi	r24, 0x03	; 3
    e462:	09 f0       	breq	.+2      	; 0xe466 <_Z9Check_Simc+0x1e>
    e464:	66 c0       	rjmp	.+204    	; 0xe532 <_Z9Check_Simc+0xea>
    e466:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xaf>
    e46a:	81 30       	cpi	r24, 0x01	; 1
    e46c:	f1 f5       	brne	.+124    	; 0xe4ea <_Z9Check_Simc+0xa2>
    e46e:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    e472:	80 7f       	andi	r24, 0xF0	; 240
    e474:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
    e478:	1a 82       	std	Y+2, r1	; 0x02
    e47a:	19 82       	std	Y+1, r1	; 0x01
    e47c:	8a e1       	ldi	r24, 0x1A	; 26
    e47e:	89 83       	std	Y+1, r24	; 0x01
    e480:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    e484:	be 01       	movw	r22, r28
    e486:	6f 5f       	subi	r22, 0xFF	; 255
    e488:	7f 4f       	sbci	r23, 0xFF	; 255
    e48a:	82 e1       	ldi	r24, 0x12	; 18
    e48c:	96 e1       	ldi	r25, 0x16	; 22
    e48e:	0e 94 3c d1 	call	0x1a278	; 0x1a278 <_ZN5Print7printlnEPKc>
    e492:	6f e7       	ldi	r22, 0x7F	; 127
    e494:	75 e2       	ldi	r23, 0x25	; 37
    e496:	82 e1       	ldi	r24, 0x12	; 18
    e498:	96 e1       	ldi	r25, 0x16	; 22
    e49a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e49e:	01 e0       	ldi	r16, 0x01	; 1
    e4a0:	20 e1       	ldi	r18, 0x10	; 16
    e4a2:	37 e2       	ldi	r19, 0x27	; 39
    e4a4:	40 e0       	ldi	r20, 0x00	; 0
    e4a6:	50 e0       	ldi	r21, 0x00	; 0
    e4a8:	68 e6       	ldi	r22, 0x68	; 104
    e4aa:	73 e0       	ldi	r23, 0x03	; 3
    e4ac:	80 e0       	ldi	r24, 0x00	; 0
    e4ae:	90 e0       	ldi	r25, 0x00	; 0
    e4b0:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e4b4:	60 e1       	ldi	r22, 0x10	; 16
    e4b6:	77 e2       	ldi	r23, 0x27	; 39
    e4b8:	80 e0       	ldi	r24, 0x00	; 0
    e4ba:	90 e0       	ldi	r25, 0x00	; 0
    e4bc:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e4c0:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    e4c4:	6a e7       	ldi	r22, 0x7A	; 122
    e4c6:	75 e2       	ldi	r23, 0x25	; 37
    e4c8:	82 e1       	ldi	r24, 0x12	; 18
    e4ca:	96 e1       	ldi	r25, 0x16	; 22
    e4cc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e4d0:	02 e0       	ldi	r16, 0x02	; 2
    e4d2:	28 eb       	ldi	r18, 0xB8	; 184
    e4d4:	3b e0       	ldi	r19, 0x0B	; 11
    e4d6:	40 e0       	ldi	r20, 0x00	; 0
    e4d8:	50 e0       	ldi	r21, 0x00	; 0
    e4da:	6e e1       	ldi	r22, 0x1E	; 30
    e4dc:	73 e0       	ldi	r23, 0x03	; 3
    e4de:	80 e0       	ldi	r24, 0x00	; 0
    e4e0:	90 e0       	ldi	r25, 0x00	; 0
    e4e2:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e4e6:	0e 94 f9 66 	call	0xcdf2	; 0xcdf2 <_Z8Gsm_Initv>
    e4ea:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    e4ee:	61 e7       	ldi	r22, 0x71	; 113
    e4f0:	75 e2       	ldi	r23, 0x25	; 37
    e4f2:	82 e1       	ldi	r24, 0x12	; 18
    e4f4:	96 e1       	ldi	r25, 0x16	; 22
    e4f6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e4fa:	02 e0       	ldi	r16, 0x02	; 2
    e4fc:	20 ed       	ldi	r18, 0xD0	; 208
    e4fe:	37 e0       	ldi	r19, 0x07	; 7
    e500:	40 e0       	ldi	r20, 0x00	; 0
    e502:	50 e0       	ldi	r21, 0x00	; 0
    e504:	6e e1       	ldi	r22, 0x1E	; 30
    e506:	73 e0       	ldi	r23, 0x03	; 3
    e508:	80 e0       	ldi	r24, 0x00	; 0
    e50a:	90 e0       	ldi	r25, 0x00	; 0
    e50c:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    e510:	81 11       	cpse	r24, r1
    e512:	0a c0       	rjmp	.+20     	; 0xe528 <_Z9Check_Simc+0xe0>
    e514:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
    e518:	80 7f       	andi	r24, 0xF0	; 240
    e51a:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
    e51e:	81 e0       	ldi	r24, 0x01	; 1
    e520:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0xaf>
    e524:	80 e0       	ldi	r24, 0x00	; 0
    e526:	05 c0       	rjmp	.+10     	; 0xe532 <_Z9Check_Simc+0xea>
    e528:	82 e0       	ldi	r24, 0x02	; 2
    e52a:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0xaf>
    e52e:	81 e0       	ldi	r24, 0x01	; 1
    e530:	00 c0       	rjmp	.+0      	; 0xe532 <_Z9Check_Simc+0xea>
    e532:	0f 90       	pop	r0
    e534:	0f 90       	pop	r0
    e536:	df 91       	pop	r29
    e538:	cf 91       	pop	r28
    e53a:	0f 91       	pop	r16
    e53c:	08 95       	ret

0000e53e <_Z31Keeps_Monitor_Server_Connectionv>:
    e53e:	84 e6       	ldi	r24, 0x64	; 100
    e540:	80 93 8c 0c 	sts	0x0C8C, r24	; 0x800c8c <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
    e544:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xac>
    e548:	81 11       	cpse	r24, r1
    e54a:	40 c0       	rjmp	.+128    	; 0xe5cc <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    e54c:	80 91 8b 0c 	lds	r24, 0x0C8B	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e550:	85 36       	cpi	r24, 0x65	; 101
    e552:	a8 f1       	brcs	.+106    	; 0xe5be <_Z31Keeps_Monitor_Server_Connectionv+0x80>
    e554:	10 92 8b 0c 	sts	0x0C8B, r1	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e558:	0e 94 47 6a 	call	0xd48e	; 0xd48e <_Z9MQTT_Loopv>
    e55c:	81 11       	cpse	r24, r1
    e55e:	32 c0       	rjmp	.+100    	; 0xe5c4 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e560:	82 e0       	ldi	r24, 0x02	; 2
    e562:	80 93 a7 13 	sts	0x13A7, r24	; 0x8013a7 <_sRuble_Parameters+0x5d>
    e566:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    e56a:	8b 7f       	andi	r24, 0xFB	; 251
    e56c:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
    e570:	80 91 8a 0c 	lds	r24, 0x0C8A	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e574:	83 30       	cpi	r24, 0x03	; 3
    e576:	78 f4       	brcc	.+30     	; 0xe596 <_Z31Keeps_Monitor_Server_Connectionv+0x58>
    e578:	10 92 f6 13 	sts	0x13F6, r1	; 0x8013f6 <_sRuble_Parameters+0xac>
    e57c:	0e 94 1b 7f 	call	0xfe36	; 0xfe36 <_Z14Ping_to_Serverv>
    e580:	81 11       	cpse	r24, r1
    e582:	06 c0       	rjmp	.+12     	; 0xe590 <_Z31Keeps_Monitor_Server_Connectionv+0x52>
    e584:	80 91 8a 0c 	lds	r24, 0x0C8A	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e588:	8f 5f       	subi	r24, 0xFF	; 255
    e58a:	80 93 8a 0c 	sts	0x0C8A, r24	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e58e:	1a c0       	rjmp	.+52     	; 0xe5c4 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e590:	10 92 8a 0c 	sts	0x0C8A, r1	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e594:	17 c0       	rjmp	.+46     	; 0xe5c4 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e596:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xac>
    e59a:	81 30       	cpi	r24, 0x01	; 1
    e59c:	b9 f0       	breq	.+46     	; 0xe5cc <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    e59e:	81 e0       	ldi	r24, 0x01	; 1
    e5a0:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0xac>
    e5a4:	8e e1       	ldi	r24, 0x1E	; 30
    e5a6:	90 e0       	ldi	r25, 0x00	; 0
    e5a8:	a0 e0       	ldi	r26, 0x00	; 0
    e5aa:	b0 e0       	ldi	r27, 0x00	; 0
    e5ac:	80 93 86 0c 	sts	0x0C86, r24	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e5b0:	90 93 87 0c 	sts	0x0C87, r25	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e5b4:	a0 93 88 0c 	sts	0x0C88, r26	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e5b8:	b0 93 89 0c 	sts	0x0C89, r27	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e5bc:	03 c0       	rjmp	.+6      	; 0xe5c4 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e5be:	8f 5f       	subi	r24, 0xFF	; 255
    e5c0:	80 93 8b 0c 	sts	0x0C8B, r24	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e5c4:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xac>
    e5c8:	88 23       	and	r24, r24
    e5ca:	e1 f0       	breq	.+56     	; 0xe604 <_Z31Keeps_Monitor_Server_Connectionv+0xc6>
    e5cc:	80 91 86 0c 	lds	r24, 0x0C86	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e5d0:	90 91 87 0c 	lds	r25, 0x0C87	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e5d4:	a0 91 88 0c 	lds	r26, 0x0C88	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e5d8:	b0 91 89 0c 	lds	r27, 0x0C89	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e5dc:	00 97       	sbiw	r24, 0x00	; 0
    e5de:	a1 05       	cpc	r26, r1
    e5e0:	b1 05       	cpc	r27, r1
    e5e2:	61 f0       	breq	.+24     	; 0xe5fc <_Z31Keeps_Monitor_Server_Connectionv+0xbe>
    e5e4:	01 97       	sbiw	r24, 0x01	; 1
    e5e6:	a1 09       	sbc	r26, r1
    e5e8:	b1 09       	sbc	r27, r1
    e5ea:	80 93 86 0c 	sts	0x0C86, r24	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e5ee:	90 93 87 0c 	sts	0x0C87, r25	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e5f2:	a0 93 88 0c 	sts	0x0C88, r26	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e5f6:	b0 93 89 0c 	sts	0x0C89, r27	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e5fa:	08 95       	ret
    e5fc:	10 92 f6 13 	sts	0x13F6, r1	; 0x8013f6 <_sRuble_Parameters+0xac>
    e600:	10 92 8a 0c 	sts	0x0C8A, r1	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e604:	08 95       	ret

0000e606 <_Z19Pump_Run_Monitoringv>:
    e606:	cf 92       	push	r12
    e608:	df 92       	push	r13
    e60a:	ef 92       	push	r14
    e60c:	ff 92       	push	r15
    e60e:	cf 93       	push	r28
    e610:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
    e614:	81 11       	cpse	r24, r1
    e616:	50 c0       	rjmp	.+160    	; 0xe6b8 <_Z19Pump_Run_Monitoringv+0xb2>
    e618:	c0 91 07 14 	lds	r28, 0x1407	; 0x801407 <_sRuble_Parameters+0xbd>
    e61c:	c1 30       	cpi	r28, 0x01	; 1
    e61e:	09 f0       	breq	.+2      	; 0xe622 <_Z19Pump_Run_Monitoringv+0x1c>
    e620:	42 c0       	rjmp	.+132    	; 0xe6a6 <_Z19Pump_Run_Monitoringv+0xa0>
    e622:	c0 90 40 13 	lds	r12, 0x1340	; 0x801340 <_sPump_Parameter>
    e626:	d0 90 41 13 	lds	r13, 0x1341	; 0x801341 <_sPump_Parameter+0x1>
    e62a:	e0 90 42 13 	lds	r14, 0x1342	; 0x801342 <_sPump_Parameter+0x2>
    e62e:	f0 90 43 13 	lds	r15, 0x1343	; 0x801343 <_sPump_Parameter+0x3>
    e632:	20 e0       	ldi	r18, 0x00	; 0
    e634:	30 e0       	ldi	r19, 0x00	; 0
    e636:	48 ec       	ldi	r20, 0xC8	; 200
    e638:	52 e4       	ldi	r21, 0x42	; 66
    e63a:	c7 01       	movw	r24, r14
    e63c:	b6 01       	movw	r22, r12
    e63e:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
    e642:	20 e0       	ldi	r18, 0x00	; 0
    e644:	30 e0       	ldi	r19, 0x00	; 0
    e646:	44 eb       	ldi	r20, 0xB4	; 180
    e648:	52 e4       	ldi	r21, 0x42	; 66
    e64a:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    e64e:	9b 01       	movw	r18, r22
    e650:	ac 01       	movw	r20, r24
    e652:	c7 01       	movw	r24, r14
    e654:	b6 01       	movw	r22, r12
    e656:	0e 94 cc cc 	call	0x19998	; 0x19998 <__subsf3>
    e65a:	9b 01       	movw	r18, r22
    e65c:	ac 01       	movw	r20, r24
    e65e:	60 91 44 13 	lds	r22, 0x1344	; 0x801344 <_sPump_Parameter+0x4>
    e662:	70 91 45 13 	lds	r23, 0x1345	; 0x801345 <_sPump_Parameter+0x5>
    e666:	80 91 46 13 	lds	r24, 0x1346	; 0x801346 <_sPump_Parameter+0x6>
    e66a:	90 91 47 13 	lds	r25, 0x1347	; 0x801347 <_sPump_Parameter+0x7>
    e66e:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    e672:	18 16       	cp	r1, r24
    e674:	24 f4       	brge	.+8      	; 0xe67e <_Z19Pump_Run_Monitoringv+0x78>
    e676:	c0 93 2f 14 	sts	0x142F, r28	; 0x80142f <_sRuble_Parameters+0xe5>
    e67a:	82 e0       	ldi	r24, 0x02	; 2
    e67c:	03 c0       	rjmp	.+6      	; 0xe684 <_Z19Pump_Run_Monitoringv+0x7e>
    e67e:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe5>
    e682:	84 e0       	ldi	r24, 0x04	; 4
    e684:	80 93 52 13 	sts	0x1352, r24	; 0x801352 <_sRuble_Parameters+0x8>
    e688:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0x9>
    e68c:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xa>
    e690:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xb>
    e694:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xc>
    e698:	10 92 57 13 	sts	0x1357, r1	; 0x801357 <_sRuble_Parameters+0xd>
    e69c:	10 92 58 13 	sts	0x1358, r1	; 0x801358 <_sRuble_Parameters+0xe>
    e6a0:	10 92 59 13 	sts	0x1359, r1	; 0x801359 <_sRuble_Parameters+0xf>
    e6a4:	20 c0       	rjmp	.+64     	; 0xe6e6 <_Z19Pump_Run_Monitoringv+0xe0>
    e6a6:	8a e0       	ldi	r24, 0x0A	; 10
    e6a8:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    e6ac:	89 2b       	or	r24, r25
    e6ae:	41 f4       	brne	.+16     	; 0xe6c0 <_Z19Pump_Run_Monitoringv+0xba>
    e6b0:	81 e0       	ldi	r24, 0x01	; 1
    e6b2:	80 93 2f 14 	sts	0x142F, r24	; 0x80142f <_sRuble_Parameters+0xe5>
    e6b6:	17 c0       	rjmp	.+46     	; 0xe6e6 <_Z19Pump_Run_Monitoringv+0xe0>
    e6b8:	80 91 0a 14 	lds	r24, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
    e6bc:	81 30       	cpi	r24, 0x01	; 1
    e6be:	19 f0       	breq	.+6      	; 0xe6c6 <_Z19Pump_Run_Monitoringv+0xc0>
    e6c0:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe5>
    e6c4:	10 c0       	rjmp	.+32     	; 0xe6e6 <_Z19Pump_Run_Monitoringv+0xe0>
    e6c6:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    e6ca:	90 e0       	ldi	r25, 0x00	; 0
    e6cc:	02 97       	sbiw	r24, 0x02	; 2
    e6ce:	2b e0       	ldi	r18, 0x0B	; 11
    e6d0:	28 9f       	mul	r18, r24
    e6d2:	f0 01       	movw	r30, r0
    e6d4:	29 9f       	mul	r18, r25
    e6d6:	f0 0d       	add	r31, r0
    e6d8:	11 24       	eor	r1, r1
    e6da:	ea 56       	subi	r30, 0x6A	; 106
    e6dc:	f4 4f       	sbci	r31, 0xF4	; 244
    e6de:	80 85       	ldd	r24, Z+8	; 0x08
    e6e0:	86 ff       	sbrs	r24, 6
    e6e2:	ee cf       	rjmp	.-36     	; 0xe6c0 <_Z19Pump_Run_Monitoringv+0xba>
    e6e4:	e5 cf       	rjmp	.-54     	; 0xe6b0 <_Z19Pump_Run_Monitoringv+0xaa>
    e6e6:	cf 91       	pop	r28
    e6e8:	ff 90       	pop	r15
    e6ea:	ef 90       	pop	r14
    e6ec:	df 90       	pop	r13
    e6ee:	cf 90       	pop	r12
    e6f0:	08 95       	ret

0000e6f2 <_Z11Debug_Checkv>:
    e6f2:	88 e3       	ldi	r24, 0x38	; 56
    e6f4:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    e6f8:	89 2b       	or	r24, r25
    e6fa:	21 f0       	breq	.+8      	; 0xe704 <_Z11Debug_Checkv+0x12>
    e6fc:	10 92 3a 14 	sts	0x143A, r1	; 0x80143a <_sRuble_Parameters+0xf0>
    e700:	81 e0       	ldi	r24, 0x01	; 1
    e702:	08 95       	ret
    e704:	81 e0       	ldi	r24, 0x01	; 1
    e706:	80 93 3a 14 	sts	0x143A, r24	; 0x80143a <_sRuble_Parameters+0xf0>
    e70a:	80 e0       	ldi	r24, 0x00	; 0
    e70c:	08 95       	ret

0000e70e <_Z8My_Delayj>:
    e70e:	ef 92       	push	r14
    e710:	ff 92       	push	r15
    e712:	0f 93       	push	r16
    e714:	1f 93       	push	r17
    e716:	cf 93       	push	r28
    e718:	68 ee       	ldi	r22, 0xE8	; 232
    e71a:	73 e0       	ldi	r23, 0x03	; 3
    e71c:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
    e720:	8b 01       	movw	r16, r22
    e722:	c0 e0       	ldi	r28, 0x00	; 0
    e724:	8c e6       	ldi	r24, 0x6C	; 108
    e726:	e8 2e       	mov	r14, r24
    e728:	8f e0       	ldi	r24, 0x0F	; 15
    e72a:	f8 2e       	mov	r15, r24
    e72c:	8c 2f       	mov	r24, r28
    e72e:	90 e0       	ldi	r25, 0x00	; 0
    e730:	80 17       	cp	r24, r16
    e732:	91 07       	cpc	r25, r17
    e734:	f0 f4       	brcc	.+60     	; 0xe772 <_Z8My_Delayj+0x64>
    e736:	68 ee       	ldi	r22, 0xE8	; 232
    e738:	73 e0       	ldi	r23, 0x03	; 3
    e73a:	80 e0       	ldi	r24, 0x00	; 0
    e73c:	90 e0       	ldi	r25, 0x00	; 0
    e73e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
    e742:	84 dd       	rcall	.-1272   	; 0xe24c <_Z21Subscribed_data_checkv>
    e744:	88 23       	and	r24, r24
    e746:	99 f0       	breq	.+38     	; 0xe76e <_Z8My_Delayj+0x60>
    e748:	0e 94 1e 64 	call	0xc83c	; 0xc83c <_Z21Seperate_Out_Sub_Datav>
    e74c:	88 23       	and	r24, r24
    e74e:	79 f0       	breq	.+30     	; 0xe76e <_Z8My_Delayj+0x60>
    e750:	f7 01       	movw	r30, r14
    e752:	01 90       	ld	r0, Z+
    e754:	00 20       	and	r0, r0
    e756:	e9 f7       	brne	.-6      	; 0xe752 <_Z8My_Delayj+0x44>
    e758:	31 97       	sbiw	r30, 0x01	; 1
    e75a:	af 01       	movw	r20, r30
    e75c:	4c 56       	subi	r20, 0x6C	; 108
    e75e:	5f 40       	sbci	r21, 0x0F	; 15
    e760:	21 e0       	ldi	r18, 0x01	; 1
    e762:	6c e6       	ldi	r22, 0x6C	; 108
    e764:	7f e0       	ldi	r23, 0x0F	; 15
    e766:	8e ef       	ldi	r24, 0xFE	; 254
    e768:	9e e0       	ldi	r25, 0x0E	; 14
    e76a:	0e 94 9f 91 	call	0x1233e	; 0x1233e <_Z12Pub_Sub_DataPcPhjh>
    e76e:	cf 5f       	subi	r28, 0xFF	; 255
    e770:	dd cf       	rjmp	.-70     	; 0xe72c <_Z8My_Delayj+0x1e>
    e772:	cf 91       	pop	r28
    e774:	1f 91       	pop	r17
    e776:	0f 91       	pop	r16
    e778:	ff 90       	pop	r15
    e77a:	ef 90       	pop	r14
    e77c:	08 95       	ret

0000e77e <_Z19Calibration_Of_Pumpv>:
    e77e:	2f 92       	push	r2
    e780:	3f 92       	push	r3
    e782:	4f 92       	push	r4
    e784:	5f 92       	push	r5
    e786:	6f 92       	push	r6
    e788:	7f 92       	push	r7
    e78a:	8f 92       	push	r8
    e78c:	9f 92       	push	r9
    e78e:	af 92       	push	r10
    e790:	bf 92       	push	r11
    e792:	cf 92       	push	r12
    e794:	df 92       	push	r13
    e796:	ef 92       	push	r14
    e798:	ff 92       	push	r15
    e79a:	0f 93       	push	r16
    e79c:	1f 93       	push	r17
    e79e:	cf 93       	push	r28
    e7a0:	df 93       	push	r29
    e7a2:	cd b7       	in	r28, 0x3d	; 61
    e7a4:	de b7       	in	r29, 0x3e	; 62
    e7a6:	c8 56       	subi	r28, 0x68	; 104
    e7a8:	d1 09       	sbc	r29, r1
    e7aa:	0f b6       	in	r0, 0x3f	; 63
    e7ac:	f8 94       	cli
    e7ae:	de bf       	out	0x3e, r29	; 62
    e7b0:	0f be       	out	0x3f, r0	; 63
    e7b2:	cd bf       	out	0x3d, r28	; 61
    e7b4:	60 91 f5 13 	lds	r22, 0x13F5	; 0x8013f5 <_sRuble_Parameters+0xab>
    e7b8:	61 30       	cpi	r22, 0x01	; 1
    e7ba:	09 f0       	breq	.+2      	; 0xe7be <_Z19Calibration_Of_Pumpv+0x40>
    e7bc:	e3 c0       	rjmp	.+454    	; 0xe984 <_Z19Calibration_Of_Pumpv+0x206>
    e7be:	10 92 f5 13 	sts	0x13F5, r1	; 0x8013f5 <_sRuble_Parameters+0xab>
    e7c2:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    e7c6:	62 30       	cpi	r22, 0x02	; 2
    e7c8:	c0 f1       	brcs	.+112    	; 0xe83a <_Z19Calibration_Of_Pumpv+0xbc>
    e7ca:	8e 01       	movw	r16, r28
    e7cc:	07 5d       	subi	r16, 0xD7	; 215
    e7ce:	1f 4f       	sbci	r17, 0xFF	; 255
    e7d0:	88 e2       	ldi	r24, 0x28	; 40
    e7d2:	f8 01       	movw	r30, r16
    e7d4:	11 92       	st	Z+, r1
    e7d6:	8a 95       	dec	r24
    e7d8:	e9 f7       	brne	.-6      	; 0xe7d4 <_Z19Calibration_Of_Pumpv+0x56>
    e7da:	62 50       	subi	r22, 0x02	; 2
    e7dc:	81 e0       	ldi	r24, 0x01	; 1
    e7de:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
    e7e2:	88 23       	and	r24, r24
    e7e4:	19 f0       	breq	.+6      	; 0xe7ec <_Z19Calibration_Of_Pumpv+0x6e>
    e7e6:	62 e4       	ldi	r22, 0x42	; 66
    e7e8:	75 e0       	ldi	r23, 0x05	; 5
    e7ea:	02 c0       	rjmp	.+4      	; 0xe7f0 <_Z19Calibration_Of_Pumpv+0x72>
    e7ec:	66 e5       	ldi	r22, 0x56	; 86
    e7ee:	75 e0       	ldi	r23, 0x05	; 5
    e7f0:	c8 01       	movw	r24, r16
    e7f2:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    e7f6:	9e 01       	movw	r18, r28
    e7f8:	2f 5f       	subi	r18, 0xFF	; 255
    e7fa:	3f 4f       	sbci	r19, 0xFF	; 255
    e7fc:	79 01       	movw	r14, r18
    e7fe:	88 e2       	ldi	r24, 0x28	; 40
    e800:	f9 01       	movw	r30, r18
    e802:	11 92       	st	Z+, r1
    e804:	8a 95       	dec	r24
    e806:	e9 f7       	brne	.-6      	; 0xe802 <_Z19Calibration_Of_Pumpv+0x84>
    e808:	8a e6       	ldi	r24, 0x6A	; 106
    e80a:	93 e1       	ldi	r25, 0x13	; 19
    e80c:	9f 93       	push	r25
    e80e:	8f 93       	push	r24
    e810:	8b e6       	ldi	r24, 0x6B	; 107
    e812:	95 e0       	ldi	r25, 0x05	; 5
    e814:	9f 93       	push	r25
    e816:	8f 93       	push	r24
    e818:	3f 93       	push	r19
    e81a:	2f 93       	push	r18
    e81c:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    e820:	b8 01       	movw	r22, r16
    e822:	c7 01       	movw	r24, r14
    e824:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
    e828:	81 e0       	ldi	r24, 0x01	; 1
    e82a:	90 e0       	ldi	r25, 0x00	; 0
    e82c:	0f 90       	pop	r0
    e82e:	0f 90       	pop	r0
    e830:	0f 90       	pop	r0
    e832:	0f 90       	pop	r0
    e834:	0f 90       	pop	r0
    e836:	0f 90       	pop	r0
    e838:	51 c1       	rjmp	.+674    	; 0xeadc <_Z19Calibration_Of_Pumpv+0x35e>
    e83a:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    e83e:	a9 96       	adiw	r28, 0x29	; 41
    e840:	6c af       	std	Y+60, r22	; 0x3c
    e842:	7d af       	std	Y+61, r23	; 0x3d
    e844:	8e af       	std	Y+62, r24	; 0x3e
    e846:	9f af       	std	Y+63, r25	; 0x3f
    e848:	a9 97       	sbiw	r28, 0x29	; 41
    e84a:	8e 01       	movw	r16, r28
    e84c:	0f 5a       	subi	r16, 0xAF	; 175
    e84e:	1f 4f       	sbci	r17, 0xFF	; 255
    e850:	78 01       	movw	r14, r16
    e852:	f4 e1       	ldi	r31, 0x14	; 20
    e854:	ef 0e       	add	r14, r31
    e856:	f1 1c       	adc	r15, r1
    e858:	68 01       	movw	r12, r16
    e85a:	18 01       	movw	r2, r16
    e85c:	68 ec       	ldi	r22, 0xC8	; 200
    e85e:	75 e0       	ldi	r23, 0x05	; 5
    e860:	84 ea       	ldi	r24, 0xA4	; 164
    e862:	9c e0       	ldi	r25, 0x0C	; 12
    e864:	0e 94 59 d5 	call	0x1aab2	; 0x1aab2 <_ZN13EnergyMonitor8calcIrmsEj>
    e868:	f6 01       	movw	r30, r12
    e86a:	61 93       	st	Z+, r22
    e86c:	71 93       	st	Z+, r23
    e86e:	81 93       	st	Z+, r24
    e870:	91 93       	st	Z+, r25
    e872:	6f 01       	movw	r12, r30
    e874:	ee 15       	cp	r30, r14
    e876:	ff 05       	cpc	r31, r15
    e878:	89 f7       	brne	.-30     	; 0xe85c <_Z19Calibration_Of_Pumpv+0xde>
    e87a:	e1 2c       	mov	r14, r1
    e87c:	e3 94       	inc	r14
    e87e:	fe 2c       	mov	r15, r14
    e880:	25 e0       	ldi	r18, 0x05	; 5
    e882:	f2 12       	cpse	r15, r18
    e884:	06 c0       	rjmp	.+12     	; 0xe892 <_Z19Calibration_Of_Pumpv+0x114>
    e886:	0c 5f       	subi	r16, 0xFC	; 252
    e888:	1f 4f       	sbci	r17, 0xFF	; 255
    e88a:	f5 e0       	ldi	r31, 0x05	; 5
    e88c:	ef 12       	cpse	r14, r31
    e88e:	f6 cf       	rjmp	.-20     	; 0xe87c <_Z19Calibration_Of_Pumpv+0xfe>
    e890:	24 c0       	rjmp	.+72     	; 0xe8da <_Z19Calibration_Of_Pumpv+0x15c>
    e892:	f8 01       	movw	r30, r16
    e894:	40 80       	ld	r4, Z
    e896:	51 80       	ldd	r5, Z+1	; 0x01
    e898:	62 80       	ldd	r6, Z+2	; 0x02
    e89a:	73 80       	ldd	r7, Z+3	; 0x03
    e89c:	61 01       	movw	r12, r2
    e89e:	f4 e0       	ldi	r31, 0x04	; 4
    e8a0:	ff 9e       	mul	r15, r31
    e8a2:	c0 0c       	add	r12, r0
    e8a4:	d1 1c       	adc	r13, r1
    e8a6:	11 24       	eor	r1, r1
    e8a8:	f6 01       	movw	r30, r12
    e8aa:	80 80       	ld	r8, Z
    e8ac:	91 80       	ldd	r9, Z+1	; 0x01
    e8ae:	a2 80       	ldd	r10, Z+2	; 0x02
    e8b0:	b3 80       	ldd	r11, Z+3	; 0x03
    e8b2:	a5 01       	movw	r20, r10
    e8b4:	94 01       	movw	r18, r8
    e8b6:	c3 01       	movw	r24, r6
    e8b8:	b2 01       	movw	r22, r4
    e8ba:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    e8be:	18 16       	cp	r1, r24
    e8c0:	54 f4       	brge	.+20     	; 0xe8d6 <_Z19Calibration_Of_Pumpv+0x158>
    e8c2:	f8 01       	movw	r30, r16
    e8c4:	80 82       	st	Z, r8
    e8c6:	91 82       	std	Z+1, r9	; 0x01
    e8c8:	a2 82       	std	Z+2, r10	; 0x02
    e8ca:	b3 82       	std	Z+3, r11	; 0x03
    e8cc:	f6 01       	movw	r30, r12
    e8ce:	40 82       	st	Z, r4
    e8d0:	51 82       	std	Z+1, r5	; 0x01
    e8d2:	62 82       	std	Z+2, r6	; 0x02
    e8d4:	73 82       	std	Z+3, r7	; 0x03
    e8d6:	f3 94       	inc	r15
    e8d8:	d3 cf       	rjmp	.-90     	; 0xe880 <_Z19Calibration_Of_Pumpv+0x102>
    e8da:	f1 01       	movw	r30, r2
    e8dc:	60 85       	ldd	r22, Z+8	; 0x08
    e8de:	71 85       	ldd	r23, Z+9	; 0x09
    e8e0:	82 85       	ldd	r24, Z+10	; 0x0a
    e8e2:	93 85       	ldd	r25, Z+11	; 0x0b
    e8e4:	60 93 44 13 	sts	0x1344, r22	; 0x801344 <_sPump_Parameter+0x4>
    e8e8:	70 93 45 13 	sts	0x1345, r23	; 0x801345 <_sPump_Parameter+0x5>
    e8ec:	80 93 46 13 	sts	0x1346, r24	; 0x801346 <_sPump_Parameter+0x6>
    e8f0:	90 93 47 13 	sts	0x1347, r25	; 0x801347 <_sPump_Parameter+0x7>
    e8f4:	20 e0       	ldi	r18, 0x00	; 0
    e8f6:	30 e0       	ldi	r19, 0x00	; 0
    e8f8:	40 e0       	ldi	r20, 0x00	; 0
    e8fa:	50 e4       	ldi	r21, 0x40	; 64
    e8fc:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    e900:	18 16       	cp	r1, r24
    e902:	54 f5       	brge	.+84     	; 0xe958 <_Z19Calibration_Of_Pumpv+0x1da>
    e904:	84 e4       	ldi	r24, 0x44	; 68
    e906:	e8 2e       	mov	r14, r24
    e908:	83 e1       	ldi	r24, 0x13	; 19
    e90a:	f8 2e       	mov	r15, r24
    e90c:	0f e0       	ldi	r16, 0x0F	; 15
    e90e:	15 e0       	ldi	r17, 0x05	; 5
    e910:	f7 01       	movw	r30, r14
    e912:	61 91       	ld	r22, Z+
    e914:	7f 01       	movw	r14, r30
    e916:	1a 83       	std	Y+2, r17	; 0x02
    e918:	09 83       	std	Y+1, r16	; 0x01
    e91a:	ce 01       	movw	r24, r28
    e91c:	01 96       	adiw	r24, 0x01	; 1
    e91e:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    e922:	0f 5f       	subi	r16, 0xFF	; 255
    e924:	1f 4f       	sbci	r17, 0xFF	; 255
    e926:	03 31       	cpi	r16, 0x13	; 19
    e928:	f5 e0       	ldi	r31, 0x05	; 5
    e92a:	1f 07       	cpc	r17, r31
    e92c:	89 f7       	brne	.-30     	; 0xe910 <_Z19Calibration_Of_Pumpv+0x192>
    e92e:	60 e4       	ldi	r22, 0x40	; 64
    e930:	73 e1       	ldi	r23, 0x13	; 19
    e932:	8f e0       	ldi	r24, 0x0F	; 15
    e934:	95 e0       	ldi	r25, 0x05	; 5
    e936:	f6 dc       	rcall	.-1556   	; 0xe324 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    e938:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    e93c:	81 30       	cpi	r24, 0x01	; 1
    e93e:	09 f0       	breq	.+2      	; 0xe942 <_Z19Calibration_Of_Pumpv+0x1c4>
    e940:	4e c0       	rjmp	.+156    	; 0xe9de <_Z19Calibration_Of_Pumpv+0x260>
    e942:	6e e6       	ldi	r22, 0x6E	; 110
    e944:	76 e2       	ldi	r23, 0x26	; 38
    e946:	85 e5       	ldi	r24, 0x55	; 85
    e948:	94 e1       	ldi	r25, 0x14	; 20
    e94a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e94e:	85 e5       	ldi	r24, 0x55	; 85
    e950:	94 e1       	ldi	r25, 0x14	; 20
    e952:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    e956:	43 c0       	rjmp	.+134    	; 0xe9de <_Z19Calibration_Of_Pumpv+0x260>
    e958:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    e95c:	dc 01       	movw	r26, r24
    e95e:	cb 01       	movw	r24, r22
    e960:	a9 96       	adiw	r28, 0x29	; 41
    e962:	2c ad       	ldd	r18, Y+60	; 0x3c
    e964:	3d ad       	ldd	r19, Y+61	; 0x3d
    e966:	4e ad       	ldd	r20, Y+62	; 0x3e
    e968:	5f ad       	ldd	r21, Y+63	; 0x3f
    e96a:	a9 97       	sbiw	r28, 0x29	; 41
    e96c:	82 1b       	sub	r24, r18
    e96e:	93 0b       	sbc	r25, r19
    e970:	a4 0b       	sbc	r26, r20
    e972:	b5 0b       	sbc	r27, r21
    e974:	80 31       	cpi	r24, 0x10	; 16
    e976:	97 42       	sbci	r25, 0x27	; 39
    e978:	a1 05       	cpc	r26, r1
    e97a:	b1 05       	cpc	r27, r1
    e97c:	08 f4       	brcc	.+2      	; 0xe980 <_Z19Calibration_Of_Pumpv+0x202>
    e97e:	65 cf       	rjmp	.-310    	; 0xe84a <_Z19Calibration_Of_Pumpv+0xcc>
    e980:	80 e0       	ldi	r24, 0x00	; 0
    e982:	2e c0       	rjmp	.+92     	; 0xe9e0 <_Z19Calibration_Of_Pumpv+0x262>
    e984:	62 30       	cpi	r22, 0x02	; 2
    e986:	08 f4       	brcc	.+2      	; 0xe98a <_Z19Calibration_Of_Pumpv+0x20c>
    e988:	61 c0       	rjmp	.+194    	; 0xea4c <_Z19Calibration_Of_Pumpv+0x2ce>
    e98a:	62 50       	subi	r22, 0x02	; 2
    e98c:	86 e0       	ldi	r24, 0x06	; 6
    e98e:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
    e992:	10 92 f5 13 	sts	0x13F5, r1	; 0x8013f5 <_sRuble_Parameters+0xab>
    e996:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    e99a:	6b 01       	movw	r12, r22
    e99c:	7c 01       	movw	r14, r24
    e99e:	1b e0       	ldi	r17, 0x0B	; 11
    e9a0:	0e 94 6f cc 	call	0x198de	; 0x198de <_Z14Lora_Operationv>
    e9a4:	80 91 f5 13 	lds	r24, 0x13F5	; 0x8013f5 <_sRuble_Parameters+0xab>
    e9a8:	90 e0       	ldi	r25, 0x00	; 0
    e9aa:	02 97       	sbiw	r24, 0x02	; 2
    e9ac:	18 9f       	mul	r17, r24
    e9ae:	f0 01       	movw	r30, r0
    e9b0:	19 9f       	mul	r17, r25
    e9b2:	f0 0d       	add	r31, r0
    e9b4:	11 24       	eor	r1, r1
    e9b6:	ea 56       	subi	r30, 0x6A	; 106
    e9b8:	f4 4f       	sbci	r31, 0xF4	; 244
    e9ba:	82 85       	ldd	r24, Z+10	; 0x0a
    e9bc:	80 fd       	sbrc	r24, 0
    e9be:	4a c0       	rjmp	.+148    	; 0xea54 <_Z19Calibration_Of_Pumpv+0x2d6>
    e9c0:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    e9c4:	dc 01       	movw	r26, r24
    e9c6:	cb 01       	movw	r24, r22
    e9c8:	8c 19       	sub	r24, r12
    e9ca:	9d 09       	sbc	r25, r13
    e9cc:	ae 09       	sbc	r26, r14
    e9ce:	bf 09       	sbc	r27, r15
    e9d0:	80 31       	cpi	r24, 0x10	; 16
    e9d2:	97 42       	sbci	r25, 0x27	; 39
    e9d4:	a1 05       	cpc	r26, r1
    e9d6:	b1 05       	cpc	r27, r1
    e9d8:	18 f3       	brcs	.-58     	; 0xe9a0 <_Z19Calibration_Of_Pumpv+0x222>
    e9da:	80 e0       	ldi	r24, 0x00	; 0
    e9dc:	3c c0       	rjmp	.+120    	; 0xea56 <_Z19Calibration_Of_Pumpv+0x2d8>
    e9de:	81 e0       	ldi	r24, 0x01	; 1
    e9e0:	8e 01       	movw	r16, r28
    e9e2:	07 5d       	subi	r16, 0xD7	; 215
    e9e4:	1f 4f       	sbci	r17, 0xFF	; 255
    e9e6:	98 e2       	ldi	r25, 0x28	; 40
    e9e8:	f8 01       	movw	r30, r16
    e9ea:	11 92       	st	Z+, r1
    e9ec:	9a 95       	dec	r25
    e9ee:	e9 f7       	brne	.-6      	; 0xe9ea <_Z19Calibration_Of_Pumpv+0x26c>
    e9f0:	88 23       	and	r24, r24
    e9f2:	69 f1       	breq	.+90     	; 0xea4e <_Z19Calibration_Of_Pumpv+0x2d0>
    e9f4:	81 e0       	ldi	r24, 0x01	; 1
    e9f6:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xbd>
    e9fa:	67 e0       	ldi	r22, 0x07	; 7
    e9fc:	74 e1       	ldi	r23, 0x14	; 20
    e9fe:	81 ea       	ldi	r24, 0xA1	; 161
    ea00:	9c e0       	ldi	r25, 0x0C	; 12
    ea02:	c3 dc       	rcall	.-1658   	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    ea04:	62 e4       	ldi	r22, 0x42	; 66
    ea06:	75 e0       	ldi	r23, 0x05	; 5
    ea08:	c8 01       	movw	r24, r16
    ea0a:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    ea0e:	ae 01       	movw	r20, r28
    ea10:	4f 5f       	subi	r20, 0xFF	; 255
    ea12:	5f 4f       	sbci	r21, 0xFF	; 255
    ea14:	7a 01       	movw	r14, r20
    ea16:	88 e2       	ldi	r24, 0x28	; 40
    ea18:	fa 01       	movw	r30, r20
    ea1a:	11 92       	st	Z+, r1
    ea1c:	8a 95       	dec	r24
    ea1e:	e9 f7       	brne	.-6      	; 0xea1a <_Z19Calibration_Of_Pumpv+0x29c>
    ea20:	8a e6       	ldi	r24, 0x6A	; 106
    ea22:	93 e1       	ldi	r25, 0x13	; 19
    ea24:	9f 93       	push	r25
    ea26:	8f 93       	push	r24
    ea28:	8b e6       	ldi	r24, 0x6B	; 107
    ea2a:	95 e0       	ldi	r25, 0x05	; 5
    ea2c:	9f 93       	push	r25
    ea2e:	8f 93       	push	r24
    ea30:	5f 93       	push	r21
    ea32:	4f 93       	push	r20
    ea34:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    ea38:	b8 01       	movw	r22, r16
    ea3a:	c7 01       	movw	r24, r14
    ea3c:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
    ea40:	0f 90       	pop	r0
    ea42:	0f 90       	pop	r0
    ea44:	0f 90       	pop	r0
    ea46:	0f 90       	pop	r0
    ea48:	0f 90       	pop	r0
    ea4a:	0f 90       	pop	r0
    ea4c:	47 c0       	rjmp	.+142    	; 0xeadc <_Z19Calibration_Of_Pumpv+0x35e>
    ea4e:	66 e5       	ldi	r22, 0x56	; 86
    ea50:	75 e0       	ldi	r23, 0x05	; 5
    ea52:	da cf       	rjmp	.-76     	; 0xea08 <_Z19Calibration_Of_Pumpv+0x28a>
    ea54:	81 e0       	ldi	r24, 0x01	; 1
    ea56:	8e 01       	movw	r16, r28
    ea58:	07 5d       	subi	r16, 0xD7	; 215
    ea5a:	1f 4f       	sbci	r17, 0xFF	; 255
    ea5c:	98 e2       	ldi	r25, 0x28	; 40
    ea5e:	f8 01       	movw	r30, r16
    ea60:	11 92       	st	Z+, r1
    ea62:	9a 95       	dec	r25
    ea64:	e9 f7       	brne	.-6      	; 0xea60 <_Z19Calibration_Of_Pumpv+0x2e2>
    ea66:	88 23       	and	r24, r24
    ea68:	59 f0       	breq	.+22     	; 0xea80 <_Z19Calibration_Of_Pumpv+0x302>
    ea6a:	81 e0       	ldi	r24, 0x01	; 1
    ea6c:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xbd>
    ea70:	67 e0       	ldi	r22, 0x07	; 7
    ea72:	74 e1       	ldi	r23, 0x14	; 20
    ea74:	81 ea       	ldi	r24, 0xA1	; 161
    ea76:	9c e0       	ldi	r25, 0x0C	; 12
    ea78:	88 dc       	rcall	.-1776   	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    ea7a:	62 e4       	ldi	r22, 0x42	; 66
    ea7c:	75 e0       	ldi	r23, 0x05	; 5
    ea7e:	02 c0       	rjmp	.+4      	; 0xea84 <_Z19Calibration_Of_Pumpv+0x306>
    ea80:	66 e5       	ldi	r22, 0x56	; 86
    ea82:	75 e0       	ldi	r23, 0x05	; 5
    ea84:	c8 01       	movw	r24, r16
    ea86:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    ea8a:	9e 01       	movw	r18, r28
    ea8c:	2f 5f       	subi	r18, 0xFF	; 255
    ea8e:	3f 4f       	sbci	r19, 0xFF	; 255
    ea90:	79 01       	movw	r14, r18
    ea92:	88 e2       	ldi	r24, 0x28	; 40
    ea94:	f9 01       	movw	r30, r18
    ea96:	11 92       	st	Z+, r1
    ea98:	8a 95       	dec	r24
    ea9a:	e9 f7       	brne	.-6      	; 0xea96 <_Z19Calibration_Of_Pumpv+0x318>
    ea9c:	8a e6       	ldi	r24, 0x6A	; 106
    ea9e:	93 e1       	ldi	r25, 0x13	; 19
    eaa0:	9f 93       	push	r25
    eaa2:	8f 93       	push	r24
    eaa4:	8b e6       	ldi	r24, 0x6B	; 107
    eaa6:	95 e0       	ldi	r25, 0x05	; 5
    eaa8:	9f 93       	push	r25
    eaaa:	8f 93       	push	r24
    eaac:	3f 93       	push	r19
    eaae:	2f 93       	push	r18
    eab0:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
    eab4:	b8 01       	movw	r22, r16
    eab6:	c7 01       	movw	r24, r14
    eab8:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
    eabc:	80 91 f5 13 	lds	r24, 0x13F5	; 0x8013f5 <_sRuble_Parameters+0xab>
    eac0:	90 e0       	ldi	r25, 0x00	; 0
    eac2:	02 97       	sbiw	r24, 0x02	; 2
    eac4:	2b e0       	ldi	r18, 0x0B	; 11
    eac6:	28 9f       	mul	r18, r24
    eac8:	f0 01       	movw	r30, r0
    eaca:	29 9f       	mul	r18, r25
    eacc:	f0 0d       	add	r31, r0
    eace:	11 24       	eor	r1, r1
    ead0:	ea 56       	subi	r30, 0x6A	; 106
    ead2:	f4 4f       	sbci	r31, 0xF4	; 244
    ead4:	82 85       	ldd	r24, Z+10	; 0x0a
    ead6:	8c 7f       	andi	r24, 0xFC	; 252
    ead8:	82 87       	std	Z+10, r24	; 0x0a
    eada:	b2 cf       	rjmp	.-156    	; 0xea40 <_Z19Calibration_Of_Pumpv+0x2c2>
    eadc:	c8 59       	subi	r28, 0x98	; 152
    eade:	df 4f       	sbci	r29, 0xFF	; 255
    eae0:	0f b6       	in	r0, 0x3f	; 63
    eae2:	f8 94       	cli
    eae4:	de bf       	out	0x3e, r29	; 62
    eae6:	0f be       	out	0x3f, r0	; 63
    eae8:	cd bf       	out	0x3d, r28	; 61
    eaea:	df 91       	pop	r29
    eaec:	cf 91       	pop	r28
    eaee:	1f 91       	pop	r17
    eaf0:	0f 91       	pop	r16
    eaf2:	ff 90       	pop	r15
    eaf4:	ef 90       	pop	r14
    eaf6:	df 90       	pop	r13
    eaf8:	cf 90       	pop	r12
    eafa:	bf 90       	pop	r11
    eafc:	af 90       	pop	r10
    eafe:	9f 90       	pop	r9
    eb00:	8f 90       	pop	r8
    eb02:	7f 90       	pop	r7
    eb04:	6f 90       	pop	r6
    eb06:	5f 90       	pop	r5
    eb08:	4f 90       	pop	r4
    eb0a:	3f 90       	pop	r3
    eb0c:	2f 90       	pop	r2
    eb0e:	08 95       	ret

0000eb10 <_Z14Faults_Handlerv>:
    eb10:	4f 92       	push	r4
    eb12:	5f 92       	push	r5
    eb14:	6f 92       	push	r6
    eb16:	7f 92       	push	r7
    eb18:	8f 92       	push	r8
    eb1a:	9f 92       	push	r9
    eb1c:	af 92       	push	r10
    eb1e:	bf 92       	push	r11
    eb20:	cf 92       	push	r12
    eb22:	df 92       	push	r13
    eb24:	ef 92       	push	r14
    eb26:	ff 92       	push	r15
    eb28:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    eb2c:	82 30       	cpi	r24, 0x02	; 2
    eb2e:	08 f4       	brcc	.+2      	; 0xeb32 <_Z14Faults_Handlerv+0x22>
    eb30:	64 c0       	rjmp	.+200    	; 0xebfa <_Z14Faults_Handlerv+0xea>
    eb32:	90 91 71 13 	lds	r25, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    eb36:	29 2f       	mov	r18, r25
    eb38:	2d 7f       	andi	r18, 0xFD	; 253
    eb3a:	21 30       	cpi	r18, 0x01	; 1
    eb3c:	19 f0       	breq	.+6      	; 0xeb44 <_Z14Faults_Handlerv+0x34>
    eb3e:	95 30       	cpi	r25, 0x05	; 5
    eb40:	09 f0       	breq	.+2      	; 0xeb44 <_Z14Faults_Handlerv+0x34>
    eb42:	0f c3       	rjmp	.+1566   	; 0xf162 <_Z14Faults_Handlerv+0x652>
    eb44:	90 91 0a 14 	lds	r25, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
    eb48:	91 30       	cpi	r25, 0x01	; 1
    eb4a:	09 f0       	breq	.+2      	; 0xeb4e <_Z14Faults_Handlerv+0x3e>
    eb4c:	0a c3       	rjmp	.+1556   	; 0xf162 <_Z14Faults_Handlerv+0x652>
    eb4e:	90 e0       	ldi	r25, 0x00	; 0
    eb50:	02 97       	sbiw	r24, 0x02	; 2
    eb52:	2b e0       	ldi	r18, 0x0B	; 11
    eb54:	28 9f       	mul	r18, r24
    eb56:	f0 01       	movw	r30, r0
    eb58:	29 9f       	mul	r18, r25
    eb5a:	f0 0d       	add	r31, r0
    eb5c:	11 24       	eor	r1, r1
    eb5e:	ea 56       	subi	r30, 0x6A	; 106
    eb60:	f4 4f       	sbci	r31, 0xF4	; 244
    eb62:	80 85       	ldd	r24, Z+8	; 0x08
    eb64:	91 85       	ldd	r25, Z+9	; 0x09
    eb66:	9c 01       	movw	r18, r24
    eb68:	23 70       	andi	r18, 0x03	; 3
    eb6a:	33 27       	eor	r19, r19
    eb6c:	23 30       	cpi	r18, 0x03	; 3
    eb6e:	31 05       	cpc	r19, r1
    eb70:	39 f4       	brne	.+14     	; 0xeb80 <_Z14Faults_Handlerv+0x70>
    eb72:	82 ff       	sbrs	r24, 2
    eb74:	05 c0       	rjmp	.+10     	; 0xeb80 <_Z14Faults_Handlerv+0x70>
    eb76:	88 7b       	andi	r24, 0xB8	; 184
    eb78:	92 70       	andi	r25, 0x02	; 2
    eb7a:	89 2b       	or	r24, r25
    eb7c:	09 f4       	brne	.+2      	; 0xeb80 <_Z14Faults_Handlerv+0x70>
    eb7e:	f1 c2       	rjmp	.+1506   	; 0xf162 <_Z14Faults_Handlerv+0x652>
    eb80:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    eb84:	81 30       	cpi	r24, 0x01	; 1
    eb86:	d1 f4       	brne	.+52     	; 0xebbc <_Z14Faults_Handlerv+0xac>
    eb88:	66 e4       	ldi	r22, 0x46	; 70
    eb8a:	76 e2       	ldi	r23, 0x26	; 38
    eb8c:	85 e5       	ldi	r24, 0x55	; 85
    eb8e:	94 e1       	ldi	r25, 0x14	; 20
    eb90:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    eb94:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    eb98:	90 e0       	ldi	r25, 0x00	; 0
    eb9a:	02 97       	sbiw	r24, 0x02	; 2
    eb9c:	2b e0       	ldi	r18, 0x0B	; 11
    eb9e:	28 9f       	mul	r18, r24
    eba0:	f0 01       	movw	r30, r0
    eba2:	29 9f       	mul	r18, r25
    eba4:	f0 0d       	add	r31, r0
    eba6:	11 24       	eor	r1, r1
    eba8:	ea 56       	subi	r30, 0x6A	; 106
    ebaa:	f4 4f       	sbci	r31, 0xF4	; 244
    ebac:	60 85       	ldd	r22, Z+8	; 0x08
    ebae:	71 85       	ldd	r23, Z+9	; 0x09
    ebb0:	4a e0       	ldi	r20, 0x0A	; 10
    ebb2:	50 e0       	ldi	r21, 0x00	; 0
    ebb4:	85 e5       	ldi	r24, 0x55	; 85
    ebb6:	94 e1       	ldi	r25, 0x14	; 20
    ebb8:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
    ebbc:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    ebc0:	90 e0       	ldi	r25, 0x00	; 0
    ebc2:	02 97       	sbiw	r24, 0x02	; 2
    ebc4:	2b e0       	ldi	r18, 0x0B	; 11
    ebc6:	28 9f       	mul	r18, r24
    ebc8:	f0 01       	movw	r30, r0
    ebca:	29 9f       	mul	r18, r25
    ebcc:	f0 0d       	add	r31, r0
    ebce:	11 24       	eor	r1, r1
    ebd0:	ea 56       	subi	r30, 0x6A	; 106
    ebd2:	f4 4f       	sbci	r31, 0xF4	; 244
    ebd4:	80 85       	ldd	r24, Z+8	; 0x08
    ebd6:	83 ff       	sbrs	r24, 3
    ebd8:	03 c0       	rjmp	.+6      	; 0xebe0 <_Z14Faults_Handlerv+0xd0>
    ebda:	81 e0       	ldi	r24, 0x01	; 1
    ebdc:	80 93 3c 14 	sts	0x143C, r24	; 0x80143c <_sRuble_Parameters+0xf2>
    ebe0:	84 e0       	ldi	r24, 0x04	; 4
    ebe2:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    ebe6:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ebea:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    ebee:	82 60       	ori	r24, 0x02	; 2
    ebf0:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    ebf4:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ebf8:	b4 c2       	rjmp	.+1384   	; 0xf162 <_Z14Faults_Handlerv+0x652>
    ebfa:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    ebfe:	88 23       	and	r24, r24
    ec00:	41 f0       	breq	.+16     	; 0xec12 <_Z14Faults_Handlerv+0x102>
    ec02:	80 91 9e 0c 	lds	r24, 0x0C9E	; 0x800c9e <_gfault_Occure>
    ec06:	90 91 9f 0c 	lds	r25, 0x0C9F	; 0x800c9f <_gfault_Occure+0x1>
    ec0a:	89 2b       	or	r24, r25
    ec0c:	11 f4       	brne	.+4      	; 0xec12 <_Z14Faults_Handlerv+0x102>
    ec0e:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
    ec12:	80 91 66 13 	lds	r24, 0x1366	; 0x801366 <_sRuble_Parameters+0x1c>
    ec16:	90 91 67 13 	lds	r25, 0x1367	; 0x801367 <_sRuble_Parameters+0x1d>
    ec1a:	89 2b       	or	r24, r25
    ec1c:	e9 f0       	breq	.+58     	; 0xec58 <_Z14Faults_Handlerv+0x148>
    ec1e:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ec22:	88 23       	and	r24, r24
    ec24:	39 f0       	breq	.+14     	; 0xec34 <_Z14Faults_Handlerv+0x124>
    ec26:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ec2a:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ec2e:	8f 5f       	subi	r24, 0xFF	; 255
    ec30:	80 93 8e 0c 	sts	0x0C8E, r24	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ec34:	10 92 67 13 	sts	0x1367, r1	; 0x801367 <_sRuble_Parameters+0x1d>
    ec38:	10 92 66 13 	sts	0x1366, r1	; 0x801366 <_sRuble_Parameters+0x1c>
    ec3c:	68 ec       	ldi	r22, 0xC8	; 200
    ec3e:	75 e0       	ldi	r23, 0x05	; 5
    ec40:	84 ea       	ldi	r24, 0xA4	; 164
    ec42:	9c e0       	ldi	r25, 0x0C	; 12
    ec44:	0e 94 59 d5 	call	0x1aab2	; 0x1aab2 <_ZN13EnergyMonitor8calcIrmsEj>
    ec48:	60 93 44 13 	sts	0x1344, r22	; 0x801344 <_sPump_Parameter+0x4>
    ec4c:	70 93 45 13 	sts	0x1345, r23	; 0x801345 <_sPump_Parameter+0x5>
    ec50:	80 93 46 13 	sts	0x1346, r24	; 0x801346 <_sPump_Parameter+0x6>
    ec54:	90 93 47 13 	sts	0x1347, r25	; 0x801347 <_sPump_Parameter+0x7>
    ec58:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    ec5c:	81 30       	cpi	r24, 0x01	; 1
    ec5e:	51 f5       	brne	.+84     	; 0xecb4 <_Z14Faults_Handlerv+0x1a4>
    ec60:	ad db       	rcall	.-2214   	; 0xe3bc <_Z11Check_Phasev>
    ec62:	81 30       	cpi	r24, 0x01	; 1
    ec64:	21 f5       	brne	.+72     	; 0xecae <_Z14Faults_Handlerv+0x19e>
    ec66:	8a e0       	ldi	r24, 0x0A	; 10
    ec68:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    ec6c:	89 2b       	or	r24, r25
    ec6e:	59 f4       	brne	.+22     	; 0xec86 <_Z14Faults_Handlerv+0x176>
    ec70:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    ec74:	98 2f       	mov	r25, r24
    ec76:	9d 7f       	andi	r25, 0xFD	; 253
    ec78:	91 30       	cpi	r25, 0x01	; 1
    ec7a:	11 f0       	breq	.+4      	; 0xec80 <_Z14Faults_Handlerv+0x170>
    ec7c:	85 30       	cpi	r24, 0x05	; 5
    ec7e:	19 f4       	brne	.+6      	; 0xec86 <_Z14Faults_Handlerv+0x176>
    ec80:	8c e0       	ldi	r24, 0x0C	; 12
    ec82:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    ec86:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    ec8a:	81 11       	cpse	r24, r1
    ec8c:	15 c0       	rjmp	.+42     	; 0xecb8 <_Z14Faults_Handlerv+0x1a8>
    ec8e:	81 e0       	ldi	r24, 0x01	; 1
    ec90:	80 93 fe 13 	sts	0x13FE, r24	; 0x8013fe <_sRuble_Parameters+0xb4>
    ec94:	84 e0       	ldi	r24, 0x04	; 4
    ec96:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    ec9a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ec9e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    eca2:	82 60       	ori	r24, 0x02	; 2
    eca4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    eca8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ecac:	05 c0       	rjmp	.+10     	; 0xecb8 <_Z14Faults_Handlerv+0x1a8>
    ecae:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
    ecb2:	81 11       	cpse	r24, r1
    ecb4:	10 92 fe 13 	sts	0x13FE, r1	; 0x8013fe <_sRuble_Parameters+0xb4>
    ecb8:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xbd>
    ecbc:	88 23       	and	r24, r24
    ecbe:	09 f4       	brne	.+2      	; 0xecc2 <_Z14Faults_Handlerv+0x1b2>
    ecc0:	50 c2       	rjmp	.+1184   	; 0xf162 <_Z14Faults_Handlerv+0x652>
    ecc2:	c0 90 44 13 	lds	r12, 0x1344	; 0x801344 <_sPump_Parameter+0x4>
    ecc6:	d0 90 45 13 	lds	r13, 0x1345	; 0x801345 <_sPump_Parameter+0x5>
    ecca:	e0 90 46 13 	lds	r14, 0x1346	; 0x801346 <_sPump_Parameter+0x6>
    ecce:	f0 90 47 13 	lds	r15, 0x1347	; 0x801347 <_sPump_Parameter+0x7>
    ecd2:	40 90 40 13 	lds	r4, 0x1340	; 0x801340 <_sPump_Parameter>
    ecd6:	50 90 41 13 	lds	r5, 0x1341	; 0x801341 <_sPump_Parameter+0x1>
    ecda:	60 90 42 13 	lds	r6, 0x1342	; 0x801342 <_sPump_Parameter+0x2>
    ecde:	70 90 43 13 	lds	r7, 0x1343	; 0x801343 <_sPump_Parameter+0x3>
    ece2:	20 e0       	ldi	r18, 0x00	; 0
    ece4:	30 e0       	ldi	r19, 0x00	; 0
    ece6:	48 ec       	ldi	r20, 0xC8	; 200
    ece8:	52 e4       	ldi	r21, 0x42	; 66
    ecea:	c3 01       	movw	r24, r6
    ecec:	b2 01       	movw	r22, r4
    ecee:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
    ecf2:	4b 01       	movw	r8, r22
    ecf4:	5c 01       	movw	r10, r24
    ecf6:	20 e0       	ldi	r18, 0x00	; 0
    ecf8:	30 e0       	ldi	r19, 0x00	; 0
    ecfa:	40 e7       	ldi	r20, 0x70	; 112
    ecfc:	51 e4       	ldi	r21, 0x41	; 65
    ecfe:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    ed02:	9b 01       	movw	r18, r22
    ed04:	ac 01       	movw	r20, r24
    ed06:	c7 01       	movw	r24, r14
    ed08:	b6 01       	movw	r22, r12
    ed0a:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
    ed0e:	87 ff       	sbrs	r24, 7
    ed10:	43 c0       	rjmp	.+134    	; 0xed98 <_Z14Faults_Handlerv+0x288>
    ed12:	20 91 52 13 	lds	r18, 0x1352	; 0x801352 <_sRuble_Parameters+0x8>
    ed16:	30 91 53 13 	lds	r19, 0x1353	; 0x801353 <_sRuble_Parameters+0x9>
    ed1a:	40 91 54 13 	lds	r20, 0x1354	; 0x801354 <_sRuble_Parameters+0xa>
    ed1e:	50 91 55 13 	lds	r21, 0x1355	; 0x801355 <_sRuble_Parameters+0xb>
    ed22:	60 91 56 13 	lds	r22, 0x1356	; 0x801356 <_sRuble_Parameters+0xc>
    ed26:	70 91 57 13 	lds	r23, 0x1357	; 0x801357 <_sRuble_Parameters+0xd>
    ed2a:	80 91 58 13 	lds	r24, 0x1358	; 0x801358 <_sRuble_Parameters+0xe>
    ed2e:	90 91 59 13 	lds	r25, 0x1359	; 0x801359 <_sRuble_Parameters+0xf>
    ed32:	a2 e0       	ldi	r26, 0x02	; 2
    ed34:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    ed38:	79 f5       	brne	.+94     	; 0xed98 <_Z14Faults_Handlerv+0x288>
    ed3a:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ed3e:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ed42:	84 e0       	ldi	r24, 0x04	; 4
    ed44:	80 93 52 13 	sts	0x1352, r24	; 0x801352 <_sRuble_Parameters+0x8>
    ed48:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0x9>
    ed4c:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xa>
    ed50:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xb>
    ed54:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xc>
    ed58:	10 92 57 13 	sts	0x1357, r1	; 0x801357 <_sRuble_Parameters+0xd>
    ed5c:	10 92 58 13 	sts	0x1358, r1	; 0x801358 <_sRuble_Parameters+0xe>
    ed60:	10 92 59 13 	sts	0x1359, r1	; 0x801359 <_sRuble_Parameters+0xf>
    ed64:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    ed68:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    ed6c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    ed70:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    ed74:	84 60       	ori	r24, 0x04	; 4
    ed76:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    ed7a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    ed7e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    ed82:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    ed86:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ed8a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    ed8e:	84 60       	ori	r24, 0x04	; 4
    ed90:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    ed94:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ed98:	20 e0       	ldi	r18, 0x00	; 0
    ed9a:	30 e0       	ldi	r19, 0x00	; 0
    ed9c:	40 e9       	ldi	r20, 0x90	; 144
    ed9e:	51 e4       	ldi	r21, 0x41	; 65
    eda0:	c5 01       	movw	r24, r10
    eda2:	b4 01       	movw	r22, r8
    eda4:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    eda8:	9b 01       	movw	r18, r22
    edaa:	ac 01       	movw	r20, r24
    edac:	c7 01       	movw	r24, r14
    edae:	b6 01       	movw	r22, r12
    edb0:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    edb4:	18 16       	cp	r1, r24
    edb6:	0c f0       	brlt	.+2      	; 0xedba <_Z14Faults_Handlerv+0x2aa>
    edb8:	43 c0       	rjmp	.+134    	; 0xee40 <_Z14Faults_Handlerv+0x330>
    edba:	20 91 52 13 	lds	r18, 0x1352	; 0x801352 <_sRuble_Parameters+0x8>
    edbe:	30 91 53 13 	lds	r19, 0x1353	; 0x801353 <_sRuble_Parameters+0x9>
    edc2:	40 91 54 13 	lds	r20, 0x1354	; 0x801354 <_sRuble_Parameters+0xa>
    edc6:	50 91 55 13 	lds	r21, 0x1355	; 0x801355 <_sRuble_Parameters+0xb>
    edca:	60 91 56 13 	lds	r22, 0x1356	; 0x801356 <_sRuble_Parameters+0xc>
    edce:	70 91 57 13 	lds	r23, 0x1357	; 0x801357 <_sRuble_Parameters+0xd>
    edd2:	80 91 58 13 	lds	r24, 0x1358	; 0x801358 <_sRuble_Parameters+0xe>
    edd6:	90 91 59 13 	lds	r25, 0x1359	; 0x801359 <_sRuble_Parameters+0xf>
    edda:	a4 e0       	ldi	r26, 0x04	; 4
    eddc:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
    ede0:	79 f5       	brne	.+94     	; 0xee40 <_Z14Faults_Handlerv+0x330>
    ede2:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ede6:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    edea:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    edee:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    edf2:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    edf6:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    edfa:	82 60       	ori	r24, 0x02	; 2
    edfc:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    ee00:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    ee04:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    ee08:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    ee0c:	82 e0       	ldi	r24, 0x02	; 2
    ee0e:	80 93 52 13 	sts	0x1352, r24	; 0x801352 <_sRuble_Parameters+0x8>
    ee12:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0x9>
    ee16:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xa>
    ee1a:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xb>
    ee1e:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xc>
    ee22:	10 92 57 13 	sts	0x1357, r1	; 0x801357 <_sRuble_Parameters+0xd>
    ee26:	10 92 58 13 	sts	0x1358, r1	; 0x801358 <_sRuble_Parameters+0xe>
    ee2a:	10 92 59 13 	sts	0x1359, r1	; 0x801359 <_sRuble_Parameters+0xf>
    ee2e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ee32:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    ee36:	84 60       	ori	r24, 0x04	; 4
    ee38:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    ee3c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ee40:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    ee44:	82 30       	cpi	r24, 0x02	; 2
    ee46:	a9 f0       	breq	.+42     	; 0xee72 <_Z14Faults_Handlerv+0x362>
    ee48:	80 91 64 13 	lds	r24, 0x1364	; 0x801364 <_sRuble_Parameters+0x1a>
    ee4c:	90 91 65 13 	lds	r25, 0x1365	; 0x801365 <_sRuble_Parameters+0x1b>
    ee50:	89 37       	cpi	r24, 0x79	; 121
    ee52:	91 05       	cpc	r25, r1
    ee54:	08 f4       	brcc	.+2      	; 0xee58 <_Z14Faults_Handlerv+0x348>
    ee56:	85 c1       	rjmp	.+778    	; 0xf162 <_Z14Faults_Handlerv+0x652>
    ee58:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
    ee5c:	81 11       	cpse	r24, r1
    ee5e:	09 c0       	rjmp	.+18     	; 0xee72 <_Z14Faults_Handlerv+0x362>
    ee60:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
    ee64:	81 11       	cpse	r24, r1
    ee66:	05 c0       	rjmp	.+10     	; 0xee72 <_Z14Faults_Handlerv+0x362>
    ee68:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
    ee6c:	81 30       	cpi	r24, 0x01	; 1
    ee6e:	09 f0       	breq	.+2      	; 0xee72 <_Z14Faults_Handlerv+0x362>
    ee70:	78 c1       	rjmp	.+752    	; 0xf162 <_Z14Faults_Handlerv+0x652>
    ee72:	89 e7       	ldi	r24, 0x79	; 121
    ee74:	90 e0       	ldi	r25, 0x00	; 0
    ee76:	90 93 65 13 	sts	0x1365, r25	; 0x801365 <_sRuble_Parameters+0x1b>
    ee7a:	80 93 64 13 	sts	0x1364, r24	; 0x801364 <_sRuble_Parameters+0x1a>
    ee7e:	20 e0       	ldi	r18, 0x00	; 0
    ee80:	30 e0       	ldi	r19, 0x00	; 0
    ee82:	40 e0       	ldi	r20, 0x00	; 0
    ee84:	52 e4       	ldi	r21, 0x42	; 66
    ee86:	c5 01       	movw	r24, r10
    ee88:	b4 01       	movw	r22, r8
    ee8a:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    ee8e:	a3 01       	movw	r20, r6
    ee90:	92 01       	movw	r18, r4
    ee92:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
    ee96:	9b 01       	movw	r18, r22
    ee98:	ac 01       	movw	r20, r24
    ee9a:	c7 01       	movw	r24, r14
    ee9c:	b6 01       	movw	r22, r12
    ee9e:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    eea2:	18 16       	cp	r1, r24
    eea4:	0c f0       	brlt	.+2      	; 0xeea8 <_Z14Faults_Handlerv+0x398>
    eea6:	52 c0       	rjmp	.+164    	; 0xef4c <_Z14Faults_Handlerv+0x43c>
    eea8:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    eeac:	89 30       	cpi	r24, 0x09	; 9
    eeae:	09 f4       	brne	.+2      	; 0xeeb2 <_Z14Faults_Handlerv+0x3a2>
    eeb0:	53 c0       	rjmp	.+166    	; 0xef58 <_Z14Faults_Handlerv+0x448>
    eeb2:	89 e0       	ldi	r24, 0x09	; 9
    eeb4:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    eeb8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    eebc:	81 30       	cpi	r24, 0x01	; 1
    eebe:	71 f4       	brne	.+28     	; 0xeedc <_Z14Faults_Handlerv+0x3cc>
    eec0:	65 e3       	ldi	r22, 0x35	; 53
    eec2:	76 e2       	ldi	r23, 0x26	; 38
    eec4:	85 e5       	ldi	r24, 0x55	; 85
    eec6:	94 e1       	ldi	r25, 0x14	; 20
    eec8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    eecc:	4a e0       	ldi	r20, 0x0A	; 10
    eece:	50 e0       	ldi	r21, 0x00	; 0
    eed0:	60 91 8e 0c 	lds	r22, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    eed4:	85 e5       	ldi	r24, 0x55	; 85
    eed6:	94 e1       	ldi	r25, 0x14	; 20
    eed8:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    eedc:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    eee0:	84 30       	cpi	r24, 0x04	; 4
    eee2:	d0 f1       	brcs	.+116    	; 0xef58 <_Z14Faults_Handlerv+0x448>
    eee4:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    eee8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    eeec:	81 30       	cpi	r24, 0x01	; 1
    eeee:	51 f4       	brne	.+20     	; 0xef04 <_Z14Faults_Handlerv+0x3f4>
    eef0:	65 e2       	ldi	r22, 0x25	; 37
    eef2:	76 e2       	ldi	r23, 0x26	; 38
    eef4:	85 e5       	ldi	r24, 0x55	; 85
    eef6:	94 e1       	ldi	r25, 0x14	; 20
    eef8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    eefc:	85 e5       	ldi	r24, 0x55	; 85
    eefe:	94 e1       	ldi	r25, 0x14	; 20
    ef00:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    ef04:	89 e0       	ldi	r24, 0x09	; 9
    ef06:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    ef0a:	84 e6       	ldi	r24, 0x64	; 100
    ef0c:	90 e0       	ldi	r25, 0x00	; 0
    ef0e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    ef12:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
    ef16:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    ef1a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    ef1e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    ef22:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    ef26:	80 62       	ori	r24, 0x20	; 32
    ef28:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    ef2c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    ef30:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    ef34:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    ef38:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    ef3c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    ef40:	82 60       	ori	r24, 0x02	; 2
    ef42:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    ef46:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    ef4a:	06 c0       	rjmp	.+12     	; 0xef58 <_Z14Faults_Handlerv+0x448>
    ef4c:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ef50:	89 30       	cpi	r24, 0x09	; 9
    ef52:	11 f4       	brne	.+4      	; 0xef58 <_Z14Faults_Handlerv+0x448>
    ef54:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ef58:	c0 90 44 13 	lds	r12, 0x1344	; 0x801344 <_sPump_Parameter+0x4>
    ef5c:	d0 90 45 13 	lds	r13, 0x1345	; 0x801345 <_sPump_Parameter+0x5>
    ef60:	e0 90 46 13 	lds	r14, 0x1346	; 0x801346 <_sPump_Parameter+0x6>
    ef64:	f0 90 47 13 	lds	r15, 0x1347	; 0x801347 <_sPump_Parameter+0x7>
    ef68:	20 e0       	ldi	r18, 0x00	; 0
    ef6a:	30 e0       	ldi	r19, 0x00	; 0
    ef6c:	48 ec       	ldi	r20, 0xC8	; 200
    ef6e:	52 e4       	ldi	r21, 0x42	; 66
    ef70:	60 91 40 13 	lds	r22, 0x1340	; 0x801340 <_sPump_Parameter>
    ef74:	70 91 41 13 	lds	r23, 0x1341	; 0x801341 <_sPump_Parameter+0x1>
    ef78:	80 91 42 13 	lds	r24, 0x1342	; 0x801342 <_sPump_Parameter+0x2>
    ef7c:	90 91 43 13 	lds	r25, 0x1343	; 0x801343 <_sPump_Parameter+0x3>
    ef80:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
    ef84:	4b 01       	movw	r8, r22
    ef86:	5c 01       	movw	r10, r24
    ef88:	20 e0       	ldi	r18, 0x00	; 0
    ef8a:	30 e0       	ldi	r19, 0x00	; 0
    ef8c:	48 e6       	ldi	r20, 0x68	; 104
    ef8e:	52 e4       	ldi	r21, 0x42	; 66
    ef90:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    ef94:	9b 01       	movw	r18, r22
    ef96:	ac 01       	movw	r20, r24
    ef98:	c7 01       	movw	r24, r14
    ef9a:	b6 01       	movw	r22, r12
    ef9c:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
    efa0:	87 ff       	sbrs	r24, 7
    efa2:	65 c0       	rjmp	.+202    	; 0xf06e <_Z14Faults_Handlerv+0x55e>
    efa4:	20 e0       	ldi	r18, 0x00	; 0
    efa6:	30 e0       	ldi	r19, 0x00	; 0
    efa8:	40 ea       	ldi	r20, 0xA0	; 160
    efaa:	51 e4       	ldi	r21, 0x41	; 65
    efac:	c5 01       	movw	r24, r10
    efae:	b4 01       	movw	r22, r8
    efb0:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    efb4:	9b 01       	movw	r18, r22
    efb6:	ac 01       	movw	r20, r24
    efb8:	c7 01       	movw	r24, r14
    efba:	b6 01       	movw	r22, r12
    efbc:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
    efc0:	18 16       	cp	r1, r24
    efc2:	0c f0       	brlt	.+2      	; 0xefc6 <_Z14Faults_Handlerv+0x4b6>
    efc4:	5a c0       	rjmp	.+180    	; 0xf07a <_Z14Faults_Handlerv+0x56a>
    efc6:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    efca:	81 30       	cpi	r24, 0x01	; 1
    efcc:	09 f4       	brne	.+2      	; 0xefd0 <_Z14Faults_Handlerv+0x4c0>
    efce:	55 c0       	rjmp	.+170    	; 0xf07a <_Z14Faults_Handlerv+0x56a>
    efd0:	81 e0       	ldi	r24, 0x01	; 1
    efd2:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    efd6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    efda:	81 30       	cpi	r24, 0x01	; 1
    efdc:	71 f4       	brne	.+28     	; 0xeffa <_Z14Faults_Handlerv+0x4ea>
    efde:	67 e1       	ldi	r22, 0x17	; 23
    efe0:	76 e2       	ldi	r23, 0x26	; 38
    efe2:	85 e5       	ldi	r24, 0x55	; 85
    efe4:	94 e1       	ldi	r25, 0x14	; 20
    efe6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    efea:	4a e0       	ldi	r20, 0x0A	; 10
    efec:	50 e0       	ldi	r21, 0x00	; 0
    efee:	60 91 8e 0c 	lds	r22, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    eff2:	85 e5       	ldi	r24, 0x55	; 85
    eff4:	94 e1       	ldi	r25, 0x14	; 20
    eff6:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    effa:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    effe:	84 30       	cpi	r24, 0x04	; 4
    f000:	e0 f1       	brcs	.+120    	; 0xf07a <_Z14Faults_Handlerv+0x56a>
    f002:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f006:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f00a:	81 30       	cpi	r24, 0x01	; 1
    f00c:	51 f4       	brne	.+20     	; 0xf022 <_Z14Faults_Handlerv+0x512>
    f00e:	6a e0       	ldi	r22, 0x0A	; 10
    f010:	76 e2       	ldi	r23, 0x26	; 38
    f012:	85 e5       	ldi	r24, 0x55	; 85
    f014:	94 e1       	ldi	r25, 0x14	; 20
    f016:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f01a:	85 e5       	ldi	r24, 0x55	; 85
    f01c:	94 e1       	ldi	r25, 0x14	; 20
    f01e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f022:	81 e0       	ldi	r24, 0x01	; 1
    f024:	80 93 3c 14 	sts	0x143C, r24	; 0x80143c <_sRuble_Parameters+0xf2>
    f028:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    f02c:	84 e6       	ldi	r24, 0x64	; 100
    f02e:	90 e0       	ldi	r25, 0x00	; 0
    f030:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    f034:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
    f038:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    f03c:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    f040:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    f044:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    f048:	90 61       	ori	r25, 0x10	; 16
    f04a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    f04e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    f052:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    f056:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    f05a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    f05e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    f062:	82 60       	ori	r24, 0x02	; 2
    f064:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    f068:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    f06c:	06 c0       	rjmp	.+12     	; 0xf07a <_Z14Faults_Handlerv+0x56a>
    f06e:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f072:	81 30       	cpi	r24, 0x01	; 1
    f074:	11 f4       	brne	.+4      	; 0xf07a <_Z14Faults_Handlerv+0x56a>
    f076:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f07a:	20 e0       	ldi	r18, 0x00	; 0
    f07c:	30 e0       	ldi	r19, 0x00	; 0
    f07e:	48 ec       	ldi	r20, 0xC8	; 200
    f080:	52 e4       	ldi	r21, 0x42	; 66
    f082:	60 91 40 13 	lds	r22, 0x1340	; 0x801340 <_sPump_Parameter>
    f086:	70 91 41 13 	lds	r23, 0x1341	; 0x801341 <_sPump_Parameter+0x1>
    f08a:	80 91 42 13 	lds	r24, 0x1342	; 0x801342 <_sPump_Parameter+0x2>
    f08e:	90 91 43 13 	lds	r25, 0x1343	; 0x801343 <_sPump_Parameter+0x3>
    f092:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
    f096:	20 e0       	ldi	r18, 0x00	; 0
    f098:	30 e0       	ldi	r19, 0x00	; 0
    f09a:	40 e7       	ldi	r20, 0x70	; 112
    f09c:	51 e4       	ldi	r21, 0x41	; 65
    f09e:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    f0a2:	9b 01       	movw	r18, r22
    f0a4:	ac 01       	movw	r20, r24
    f0a6:	60 91 44 13 	lds	r22, 0x1344	; 0x801344 <_sPump_Parameter+0x4>
    f0aa:	70 91 45 13 	lds	r23, 0x1345	; 0x801345 <_sPump_Parameter+0x5>
    f0ae:	80 91 46 13 	lds	r24, 0x1346	; 0x801346 <_sPump_Parameter+0x6>
    f0b2:	90 91 47 13 	lds	r25, 0x1347	; 0x801347 <_sPump_Parameter+0x7>
    f0b6:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
    f0ba:	87 ff       	sbrs	r24, 7
    f0bc:	46 c0       	rjmp	.+140    	; 0xf14a <_Z14Faults_Handlerv+0x63a>
    f0be:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    f0c2:	98 2f       	mov	r25, r24
    f0c4:	9d 7f       	andi	r25, 0xFD	; 253
    f0c6:	91 30       	cpi	r25, 0x01	; 1
    f0c8:	19 f0       	breq	.+6      	; 0xf0d0 <_Z14Faults_Handlerv+0x5c0>
    f0ca:	85 30       	cpi	r24, 0x05	; 5
    f0cc:	09 f0       	breq	.+2      	; 0xf0d0 <_Z14Faults_Handlerv+0x5c0>
    f0ce:	43 c0       	rjmp	.+134    	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f0d0:	8a e0       	ldi	r24, 0x0A	; 10
    f0d2:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
    f0d6:	89 2b       	or	r24, r25
    f0d8:	f1 f5       	brne	.+124    	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f0da:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
    f0de:	84 30       	cpi	r24, 0x04	; 4
    f0e0:	d1 f1       	breq	.+116    	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f0e2:	81 e0       	ldi	r24, 0x01	; 1
    f0e4:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f0e8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f0ec:	81 30       	cpi	r24, 0x01	; 1
    f0ee:	31 f4       	brne	.+12     	; 0xf0fc <_Z14Faults_Handlerv+0x5ec>
    f0f0:	69 ef       	ldi	r22, 0xF9	; 249
    f0f2:	75 e2       	ldi	r23, 0x25	; 37
    f0f4:	85 e5       	ldi	r24, 0x55	; 85
    f0f6:	94 e1       	ldi	r25, 0x14	; 20
    f0f8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f0fc:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f100:	84 30       	cpi	r24, 0x04	; 4
    f102:	48 f1       	brcs	.+82     	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f104:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f108:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f10c:	81 30       	cpi	r24, 0x01	; 1
    f10e:	51 f4       	brne	.+20     	; 0xf124 <_Z14Faults_Handlerv+0x614>
    f110:	69 ee       	ldi	r22, 0xE9	; 233
    f112:	75 e2       	ldi	r23, 0x25	; 37
    f114:	85 e5       	ldi	r24, 0x55	; 85
    f116:	94 e1       	ldi	r25, 0x14	; 20
    f118:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f11c:	85 e5       	ldi	r24, 0x55	; 85
    f11e:	94 e1       	ldi	r25, 0x14	; 20
    f120:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f124:	84 e0       	ldi	r24, 0x04	; 4
    f126:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
    f12a:	84 e6       	ldi	r24, 0x64	; 100
    f12c:	90 e0       	ldi	r25, 0x00	; 0
    f12e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
    f132:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
    f136:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    f13a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    f13e:	82 60       	ori	r24, 0x02	; 2
    f140:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    f144:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
    f148:	06 c0       	rjmp	.+12     	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f14a:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f14e:	84 30       	cpi	r24, 0x04	; 4
    f150:	11 f4       	brne	.+4      	; 0xf156 <_Z14Faults_Handlerv+0x646>
    f152:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f156:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f15a:	81 11       	cpse	r24, r1
    f15c:	02 c0       	rjmp	.+4      	; 0xf162 <_Z14Faults_Handlerv+0x652>
    f15e:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f162:	ff 90       	pop	r15
    f164:	ef 90       	pop	r14
    f166:	df 90       	pop	r13
    f168:	cf 90       	pop	r12
    f16a:	bf 90       	pop	r11
    f16c:	af 90       	pop	r10
    f16e:	9f 90       	pop	r9
    f170:	8f 90       	pop	r8
    f172:	7f 90       	pop	r7
    f174:	6f 90       	pop	r6
    f176:	5f 90       	pop	r5
    f178:	4f 90       	pop	r4
    f17a:	08 95       	ret

0000f17c <_Z18Local_Time_Settingv>:
    f17c:	0f 93       	push	r16
    f17e:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    f182:	6e e6       	ldi	r22, 0x6E	; 110
    f184:	75 e2       	ldi	r23, 0x25	; 37
    f186:	82 e1       	ldi	r24, 0x12	; 18
    f188:	96 e1       	ldi	r25, 0x16	; 22
    f18a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f18e:	02 e0       	ldi	r16, 0x02	; 2
    f190:	28 eb       	ldi	r18, 0xB8	; 184
    f192:	3b e0       	ldi	r19, 0x0B	; 11
    f194:	40 e0       	ldi	r20, 0x00	; 0
    f196:	50 e0       	ldi	r21, 0x00	; 0
    f198:	6e e1       	ldi	r22, 0x1E	; 30
    f19a:	73 e0       	ldi	r23, 0x03	; 3
    f19c:	80 e0       	ldi	r24, 0x00	; 0
    f19e:	90 e0       	ldi	r25, 0x00	; 0
    f1a0:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    f1a4:	88 23       	and	r24, r24
    f1a6:	c1 f1       	breq	.+112    	; 0xf218 <_Z18Local_Time_Settingv+0x9c>
    f1a8:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    f1ac:	69 e6       	ldi	r22, 0x69	; 105
    f1ae:	75 e2       	ldi	r23, 0x25	; 37
    f1b0:	82 e1       	ldi	r24, 0x12	; 18
    f1b2:	96 e1       	ldi	r25, 0x16	; 22
    f1b4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f1b8:	28 eb       	ldi	r18, 0xB8	; 184
    f1ba:	3b e0       	ldi	r19, 0x0B	; 11
    f1bc:	40 e0       	ldi	r20, 0x00	; 0
    f1be:	50 e0       	ldi	r21, 0x00	; 0
    f1c0:	6e e1       	ldi	r22, 0x1E	; 30
    f1c2:	73 e0       	ldi	r23, 0x03	; 3
    f1c4:	80 e0       	ldi	r24, 0x00	; 0
    f1c6:	90 e0       	ldi	r25, 0x00	; 0
    f1c8:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    f1cc:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
    f1d0:	60 e6       	ldi	r22, 0x60	; 96
    f1d2:	75 e2       	ldi	r23, 0x25	; 37
    f1d4:	82 e1       	ldi	r24, 0x12	; 18
    f1d6:	96 e1       	ldi	r25, 0x16	; 22
    f1d8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f1dc:	20 e1       	ldi	r18, 0x10	; 16
    f1de:	37 e2       	ldi	r19, 0x27	; 39
    f1e0:	40 e0       	ldi	r20, 0x00	; 0
    f1e2:	50 e0       	ldi	r21, 0x00	; 0
    f1e4:	6e e1       	ldi	r22, 0x1E	; 30
    f1e6:	73 e0       	ldi	r23, 0x03	; 3
    f1e8:	80 e0       	ldi	r24, 0x00	; 0
    f1ea:	90 e0       	ldi	r25, 0x00	; 0
    f1ec:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    f1f0:	81 11       	cpse	r24, r1
    f1f2:	15 c0       	rjmp	.+42     	; 0xf21e <_Z18Local_Time_Settingv+0xa2>
    f1f4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f1f8:	81 30       	cpi	r24, 0x01	; 1
    f1fa:	51 f4       	brne	.+20     	; 0xf210 <_Z18Local_Time_Settingv+0x94>
    f1fc:	63 e5       	ldi	r22, 0x53	; 83
    f1fe:	75 e2       	ldi	r23, 0x25	; 37
    f200:	85 e5       	ldi	r24, 0x55	; 85
    f202:	94 e1       	ldi	r25, 0x14	; 20
    f204:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f208:	85 e5       	ldi	r24, 0x55	; 85
    f20a:	94 e1       	ldi	r25, 0x14	; 20
    f20c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f210:	81 e0       	ldi	r24, 0x01	; 1
    f212:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0xaf>
    f216:	03 c0       	rjmp	.+6      	; 0xf21e <_Z18Local_Time_Settingv+0xa2>
    f218:	81 e0       	ldi	r24, 0x01	; 1
    f21a:	80 93 18 0c 	sts	0x0C18, r24	; 0x800c18 <_sGSM_Query+0x5>
    f21e:	0f 91       	pop	r16
    f220:	08 95       	ret

0000f222 <_Z21Exra_Plot_Data_EEPROMh>:
    f222:	cf 92       	push	r12
    f224:	df 92       	push	r13
    f226:	ef 92       	push	r14
    f228:	ff 92       	push	r15
    f22a:	0f 93       	push	r16
    f22c:	1f 93       	push	r17
    f22e:	cf 93       	push	r28
    f230:	df 93       	push	r29
    f232:	1f 92       	push	r1
    f234:	1f 92       	push	r1
    f236:	cd b7       	in	r28, 0x3d	; 61
    f238:	de b7       	in	r29, 0x3e	; 62
    f23a:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f23e:	08 2f       	mov	r16, r24
    f240:	10 e0       	ldi	r17, 0x00	; 0
    f242:	91 30       	cpi	r25, 0x01	; 1
    f244:	d9 f0       	breq	.+54     	; 0xf27c <_Z21Exra_Plot_Data_EEPROMh+0x5a>
    f246:	01 50       	subi	r16, 0x01	; 1
    f248:	11 09       	sbc	r17, r1
    f24a:	8e e1       	ldi	r24, 0x1E	; 30
    f24c:	80 9f       	mul	r24, r16
    f24e:	90 01       	movw	r18, r0
    f250:	81 9f       	mul	r24, r17
    f252:	30 0d       	add	r19, r0
    f254:	11 24       	eor	r1, r1
    f256:	79 01       	movw	r14, r18
    f258:	8f e0       	ldi	r24, 0x0F	; 15
    f25a:	e8 1a       	sub	r14, r24
    f25c:	86 ef       	ldi	r24, 0xF6	; 246
    f25e:	f8 0a       	sbc	r15, r24
    f260:	8b e1       	ldi	r24, 0x1B	; 27
    f262:	80 9f       	mul	r24, r16
    f264:	a0 01       	movw	r20, r0
    f266:	81 9f       	mul	r24, r17
    f268:	50 0d       	add	r21, r0
    f26a:	11 24       	eor	r1, r1
    f26c:	fa 01       	movw	r30, r20
    f26e:	ec 57       	subi	r30, 0x7C	; 124
    f270:	f2 4f       	sbci	r31, 0xF2	; 242
    f272:	6f 01       	movw	r12, r30
    f274:	89 01       	movw	r16, r18
    f276:	04 5f       	subi	r16, 0xF4	; 244
    f278:	15 4f       	sbci	r17, 0xF5	; 245
    f27a:	5f c0       	rjmp	.+190    	; 0xf33a <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f27c:	85 e5       	ldi	r24, 0x55	; 85
    f27e:	94 e1       	ldi	r25, 0x14	; 20
    f280:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
    f284:	65 e4       	ldi	r22, 0x45	; 69
    f286:	75 e2       	ldi	r23, 0x25	; 37
    f288:	85 e5       	ldi	r24, 0x55	; 85
    f28a:	94 e1       	ldi	r25, 0x14	; 20
    f28c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    f290:	4a e0       	ldi	r20, 0x0A	; 10
    f292:	50 e0       	ldi	r21, 0x00	; 0
    f294:	b8 01       	movw	r22, r16
    f296:	85 e5       	ldi	r24, 0x55	; 85
    f298:	94 e1       	ldi	r25, 0x14	; 20
    f29a:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
    f29e:	85 e5       	ldi	r24, 0x55	; 85
    f2a0:	94 e1       	ldi	r25, 0x14	; 20
    f2a2:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
    f2a6:	85 e5       	ldi	r24, 0x55	; 85
    f2a8:	94 e1       	ldi	r25, 0x14	; 20
    f2aa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f2ae:	6e e2       	ldi	r22, 0x2E	; 46
    f2b0:	75 e2       	ldi	r23, 0x25	; 37
    f2b2:	85 e5       	ldi	r24, 0x55	; 85
    f2b4:	94 e1       	ldi	r25, 0x14	; 20
    f2b6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f2ba:	69 e1       	ldi	r22, 0x19	; 25
    f2bc:	75 e2       	ldi	r23, 0x25	; 37
    f2be:	85 e5       	ldi	r24, 0x55	; 85
    f2c0:	94 e1       	ldi	r25, 0x14	; 20
    f2c2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    f2c6:	c8 01       	movw	r24, r16
    f2c8:	01 97       	sbiw	r24, 0x01	; 1
    f2ca:	2b e1       	ldi	r18, 0x1B	; 27
    f2cc:	28 9f       	mul	r18, r24
    f2ce:	60 01       	movw	r12, r0
    f2d0:	29 9f       	mul	r18, r25
    f2d2:	d0 0c       	add	r13, r0
    f2d4:	11 24       	eor	r1, r1
    f2d6:	f6 01       	movw	r30, r12
    f2d8:	ec 57       	subi	r30, 0x7C	; 124
    f2da:	f2 4f       	sbci	r31, 0xF2	; 242
    f2dc:	4a e0       	ldi	r20, 0x0A	; 10
    f2de:	50 e0       	ldi	r21, 0x00	; 0
    f2e0:	61 81       	ldd	r22, Z+1	; 0x01
    f2e2:	85 e5       	ldi	r24, 0x55	; 85
    f2e4:	94 e1       	ldi	r25, 0x14	; 20
    f2e6:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
    f2ea:	85 e5       	ldi	r24, 0x55	; 85
    f2ec:	94 e1       	ldi	r25, 0x14	; 20
    f2ee:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f2f2:	e1 2c       	mov	r14, r1
    f2f4:	f1 2c       	mov	r15, r1
    f2f6:	85 e5       	ldi	r24, 0x55	; 85
    f2f8:	94 e1       	ldi	r25, 0x14	; 20
    f2fa:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
    f2fe:	6d e0       	ldi	r22, 0x0D	; 13
    f300:	75 e2       	ldi	r23, 0x25	; 37
    f302:	85 e5       	ldi	r24, 0x55	; 85
    f304:	94 e1       	ldi	r25, 0x14	; 20
    f306:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
    f30a:	f7 01       	movw	r30, r14
    f30c:	ec 0d       	add	r30, r12
    f30e:	fd 1d       	adc	r31, r13
    f310:	ec 57       	subi	r30, 0x7C	; 124
    f312:	f2 4f       	sbci	r31, 0xF2	; 242
    f314:	4a e0       	ldi	r20, 0x0A	; 10
    f316:	50 e0       	ldi	r21, 0x00	; 0
    f318:	65 81       	ldd	r22, Z+5	; 0x05
    f31a:	85 e5       	ldi	r24, 0x55	; 85
    f31c:	94 e1       	ldi	r25, 0x14	; 20
    f31e:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
    f322:	85 e5       	ldi	r24, 0x55	; 85
    f324:	94 e1       	ldi	r25, 0x14	; 20
    f326:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f32a:	ff ef       	ldi	r31, 0xFF	; 255
    f32c:	ef 1a       	sub	r14, r31
    f32e:	ff 0a       	sbc	r15, r31
    f330:	85 e0       	ldi	r24, 0x05	; 5
    f332:	e8 16       	cp	r14, r24
    f334:	f1 04       	cpc	r15, r1
    f336:	f9 f6       	brne	.-66     	; 0xf2f6 <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f338:	86 cf       	rjmp	.-244    	; 0xf246 <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f33a:	f6 01       	movw	r30, r12
    f33c:	61 91       	ld	r22, Z+
    f33e:	6f 01       	movw	r12, r30
    f340:	fa 82       	std	Y+2, r15	; 0x02
    f342:	e9 82       	std	Y+1, r14	; 0x01
    f344:	ce 01       	movw	r24, r28
    f346:	01 96       	adiw	r24, 0x01	; 1
    f348:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    f34c:	ff ef       	ldi	r31, 0xFF	; 255
    f34e:	ef 1a       	sub	r14, r31
    f350:	ff 0a       	sbc	r15, r31
    f352:	e0 16       	cp	r14, r16
    f354:	f1 06       	cpc	r15, r17
    f356:	89 f7       	brne	.-30     	; 0xf33a <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f358:	0f 90       	pop	r0
    f35a:	0f 90       	pop	r0
    f35c:	df 91       	pop	r29
    f35e:	cf 91       	pop	r28
    f360:	1f 91       	pop	r17
    f362:	0f 91       	pop	r16
    f364:	ff 90       	pop	r15
    f366:	ef 90       	pop	r14
    f368:	df 90       	pop	r13
    f36a:	cf 90       	pop	r12
    f36c:	08 95       	ret

0000f36e <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f36e:	4f 92       	push	r4
    f370:	5f 92       	push	r5
    f372:	6f 92       	push	r6
    f374:	7f 92       	push	r7
    f376:	8f 92       	push	r8
    f378:	9f 92       	push	r9
    f37a:	af 92       	push	r10
    f37c:	bf 92       	push	r11
    f37e:	cf 92       	push	r12
    f380:	df 92       	push	r13
    f382:	ef 92       	push	r14
    f384:	ff 92       	push	r15
    f386:	0f 93       	push	r16
    f388:	1f 93       	push	r17
    f38a:	cf 93       	push	r28
    f38c:	df 93       	push	r29
    f38e:	cd b7       	in	r28, 0x3d	; 61
    f390:	de b7       	in	r29, 0x3e	; 62
    f392:	e4 97       	sbiw	r28, 0x34	; 52
    f394:	0f b6       	in	r0, 0x3f	; 63
    f396:	f8 94       	cli
    f398:	de bf       	out	0x3e, r29	; 62
    f39a:	0f be       	out	0x3f, r0	; 63
    f39c:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f39e:	60 e4       	ldi	r22, 0x40	; 64
    f3a0:	73 e1       	ldi	r23, 0x13	; 19
    f3a2:	8f e0       	ldi	r24, 0x0F	; 15
    f3a4:	95 e0       	ldi	r25, 0x05	; 5
    f3a6:	0e 94 92 71 	call	0xe324	; 0xe324 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f3aa:	aa e6       	ldi	r26, 0x6A	; 106
    f3ac:	ea 2e       	mov	r14, r26
    f3ae:	a3 e1       	ldi	r26, 0x13	; 19
    f3b0:	fa 2e       	mov	r15, r26
    f3b2:	67 01       	movw	r12, r14
    f3b4:	00 e0       	ldi	r16, 0x00	; 0
    f3b6:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f3b8:	ce 01       	movw	r24, r28
    f3ba:	01 96       	adiw	r24, 0x01	; 1
    f3bc:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f3be:	1a 83       	std	Y+2, r17	; 0x02
    f3c0:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f3c2:	c3 01       	movw	r24, r6
    f3c4:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f3c8:	f6 01       	movw	r30, r12
    f3ca:	81 93       	st	Z+, r24
    f3cc:	6f 01       	movw	r12, r30
    f3ce:	0f 5f       	subi	r16, 0xFF	; 255
    f3d0:	1f 4f       	sbci	r17, 0xFF	; 255
    f3d2:	07 30       	cpi	r16, 0x07	; 7
    f3d4:	11 05       	cpc	r17, r1
    f3d6:	99 f7       	brne	.-26     	; 0xf3be <_Z11Read_EEPROMv+0x50>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f3d8:	f7 01       	movw	r30, r14
    f3da:	61 91       	ld	r22, Z+
    f3dc:	7f 01       	movw	r14, r30
    f3de:	85 e5       	ldi	r24, 0x55	; 85
    f3e0:	94 e1       	ldi	r25, 0x14	; 20
    f3e2:	0e 94 51 cf 	call	0x19ea2	; 0x19ea2 <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f3e6:	f0 e7       	ldi	r31, 0x70	; 112
    f3e8:	ef 16       	cp	r14, r31
    f3ea:	f3 e1       	ldi	r31, 0x13	; 19
    f3ec:	ff 06       	cpc	r15, r31
    f3ee:	a1 f7       	brne	.-24     	; 0xf3d8 <_Z11Read_EEPROMv+0x6a>
    f3f0:	e0 e0       	ldi	r30, 0x00	; 0
    f3f2:	ce 2e       	mov	r12, r30
    f3f4:	ed e0       	ldi	r30, 0x0D	; 13
    f3f6:	de 2e       	mov	r13, r30
    f3f8:	08 e0       	ldi	r16, 0x08	; 8
    f3fa:	10 e0       	ldi	r17, 0x00	; 0
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f3fc:	f2 e3       	ldi	r31, 0x32	; 50
    f3fe:	5f 2e       	mov	r5, r31
    f400:	f3 01       	movw	r30, r6
    f402:	35 2d       	mov	r19, r5
    f404:	11 92       	st	Z+, r1
    f406:	3a 95       	dec	r19
    f408:	e9 f7       	brne	.-6      	; 0xf404 <_Z11Read_EEPROMv+0x96>
    f40a:	48 01       	movw	r8, r16
    f40c:	86 e0       	ldi	r24, 0x06	; 6
    f40e:	88 0e       	add	r8, r24
    f410:	91 1c       	adc	r9, r1
    f412:	56 01       	movw	r10, r12
    f414:	78 01       	movw	r14, r16
    f416:	fc aa       	std	Y+52, r15	; 0x34
    f418:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f41a:	ce 01       	movw	r24, r28
    f41c:	c3 96       	adiw	r24, 0x33	; 51
    f41e:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f422:	f5 01       	movw	r30, r10
    f424:	81 93       	st	Z+, r24
    f426:	5f 01       	movw	r10, r30
    f428:	ff ef       	ldi	r31, 0xFF	; 255
    f42a:	ef 1a       	sub	r14, r31
    f42c:	ff 0a       	sbc	r15, r31
    f42e:	8e 14       	cp	r8, r14
    f430:	9f 04       	cpc	r9, r15
    f432:	89 f7       	brne	.-30     	; 0xf416 <_Z11Read_EEPROMv+0xa8>
    f434:	08 5d       	subi	r16, 0xD8	; 216
    f436:	1f 4f       	sbci	r17, 0xFF	; 255
    f438:	36 e0       	ldi	r19, 0x06	; 6
    f43a:	c3 0e       	add	r12, r19
    f43c:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f43e:	08 33       	cpi	r16, 0x38	; 56
    f440:	82 e0       	ldi	r24, 0x02	; 2
    f442:	18 07       	cpc	r17, r24
    f444:	e9 f6       	brne	.-70     	; 0xf400 <_Z11Read_EEPROMv+0x92>
    f446:	77 eb       	ldi	r23, 0xB7	; 183
    f448:	67 2e       	mov	r6, r23
    f44a:	7b e0       	ldi	r23, 0x0B	; 11
    f44c:	77 2e       	mov	r7, r23
    f44e:	63 01       	movw	r12, r6
    f450:	0a ec       	ldi	r16, 0xCA	; 202
    f452:	13 e0       	ldi	r17, 0x03	; 3
    f454:	48 01       	movw	r8, r16
    f456:	9d e0       	ldi	r25, 0x0D	; 13
    f458:	89 0e       	add	r8, r25
    f45a:	91 1c       	adc	r9, r1
    f45c:	56 01       	movw	r10, r12
    f45e:	78 01       	movw	r14, r16
    f460:	fc aa       	std	Y+52, r15	; 0x34
    f462:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f464:	ce 01       	movw	r24, r28
    f466:	c3 96       	adiw	r24, 0x33	; 51
    f468:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f46c:	f5 01       	movw	r30, r10
    f46e:	81 93       	st	Z+, r24
    f470:	5f 01       	movw	r10, r30
    f472:	ff ef       	ldi	r31, 0xFF	; 255
    f474:	ef 1a       	sub	r14, r31
    f476:	ff 0a       	sbc	r15, r31
    f478:	e8 14       	cp	r14, r8
    f47a:	f9 04       	cpc	r15, r9
    f47c:	89 f7       	brne	.-30     	; 0xf460 <_Z11Read_EEPROMv+0xf2>
    f47e:	0c 5e       	subi	r16, 0xEC	; 236
    f480:	1f 4f       	sbci	r17, 0xFF	; 255
    f482:	3d e0       	ldi	r19, 0x0D	; 13
    f484:	c3 0e       	add	r12, r19
    f486:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f488:	06 35       	cpi	r16, 0x56	; 86
    f48a:	84 e0       	ldi	r24, 0x04	; 4
    f48c:	18 07       	cpc	r17, r24
    f48e:	11 f7       	brne	.-60     	; 0xf454 <_Z11Read_EEPROMv+0xe6>
    f490:	82 e1       	ldi	r24, 0x12	; 18
    f492:	9c e0       	ldi	r25, 0x0C	; 12
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f494:	24 e0       	ldi	r18, 0x04	; 4
    f496:	f3 01       	movw	r30, r6
    f498:	22 87       	std	Z+10, r18	; 0x0a
    f49a:	fd e0       	ldi	r31, 0x0D	; 13
    f49c:	6f 0e       	add	r6, r31
    f49e:	71 1c       	adc	r7, r1
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f4a0:	86 15       	cp	r24, r6
    f4a2:	97 05       	cpc	r25, r7
    f4a4:	c1 f7       	brne	.-16     	; 0xf496 <_Z11Read_EEPROMv+0x128>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f4a6:	61 e7       	ldi	r22, 0x71	; 113
    f4a8:	73 e1       	ldi	r23, 0x13	; 19
    f4aa:	88 ed       	ldi	r24, 0xD8	; 216
    f4ac:	94 e0       	ldi	r25, 0x04	; 4
    f4ae:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f4b2:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    f4b6:	83 30       	cpi	r24, 0x03	; 3
    f4b8:	99 f0       	breq	.+38     	; 0xf4e0 <_Z11Read_EEPROMv+0x172>
    f4ba:	28 f4       	brcc	.+10     	; 0xf4c6 <_Z11Read_EEPROMv+0x158>
    f4bc:	81 30       	cpi	r24, 0x01	; 1
    f4be:	39 f0       	breq	.+14     	; 0xf4ce <_Z11Read_EEPROMv+0x160>
    f4c0:	82 30       	cpi	r24, 0x02	; 2
    f4c2:	d1 f1       	breq	.+116    	; 0xf538 <_Z11Read_EEPROMv+0x1ca>
    f4c4:	42 c0       	rjmp	.+132    	; 0xf54a <_Z11Read_EEPROMv+0x1dc>
    f4c6:	84 30       	cpi	r24, 0x04	; 4
    f4c8:	b9 f1       	breq	.+110    	; 0xf538 <_Z11Read_EEPROMv+0x1ca>
    f4ca:	85 30       	cpi	r24, 0x05	; 5
    f4cc:	f1 f5       	brne	.+124    	; 0xf54a <_Z11Read_EEPROMv+0x1dc>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f4ce:	85 e0       	ldi	r24, 0x05	; 5
    f4d0:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f4d4:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    f4d8:	8e 7f       	andi	r24, 0xFE	; 254
    f4da:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
    f4de:	38 c0       	rjmp	.+112    	; 0xf550 <_Z11Read_EEPROMv+0x1e2>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f4e0:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    f4e4:	8e 7f       	andi	r24, 0xFE	; 254
    f4e6:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f4ea:	84 e0       	ldi	r24, 0x04	; 4
    f4ec:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f4f0:	63 ef       	ldi	r22, 0xF3	; 243
    f4f2:	73 e1       	ldi	r23, 0x13	; 19
    f4f4:	86 e9       	ldi	r24, 0x96	; 150
    f4f6:	9c e0       	ldi	r25, 0x0C	; 12
    f4f8:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f4fc:	88 e9       	ldi	r24, 0x98	; 152
    f4fe:	9c e0       	ldi	r25, 0x0C	; 12
    f500:	9c ab       	std	Y+52, r25	; 0x34
    f502:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f504:	ce 01       	movw	r24, r28
    f506:	c3 96       	adiw	r24, 0x33	; 51
    f508:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f50c:	80 93 60 13 	sts	0x1360, r24	; 0x801360 <_sRuble_Parameters+0x16>
    f510:	89 e9       	ldi	r24, 0x99	; 153
    f512:	9c e0       	ldi	r25, 0x0C	; 12
    f514:	9c ab       	std	Y+52, r25	; 0x34
    f516:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f518:	ce 01       	movw	r24, r28
    f51a:	c3 96       	adiw	r24, 0x33	; 51
    f51c:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f520:	80 93 61 13 	sts	0x1361, r24	; 0x801361 <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f524:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
    f528:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
    f52c:	88 60       	ori	r24, 0x08	; 8
    f52e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
    f532:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
		}break;
    f536:	15 c0       	rjmp	.+42     	; 0xf562 <_Z11Read_EEPROMv+0x1f4>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f538:	84 e0       	ldi	r24, 0x04	; 4
    f53a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f53e:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    f542:	81 60       	ori	r24, 0x01	; 1
    f544:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
		}break;
    f548:	0c c0       	rjmp	.+24     	; 0xf562 <_Z11Read_EEPROMv+0x1f4>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f54a:	85 e0       	ldi	r24, 0x05	; 5
    f54c:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f550:	84 e0       	ldi	r24, 0x04	; 4
    f552:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f556:	61 e7       	ldi	r22, 0x71	; 113
    f558:	73 e1       	ldi	r23, 0x13	; 19
    f55a:	88 ed       	ldi	r24, 0xD8	; 216
    f55c:	94 e0       	ldi	r25, 0x04	; 4
    f55e:	0e 94 c5 71 	call	0xe38a	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    f562:	67 ef       	ldi	r22, 0xF7	; 247
    f564:	73 e1       	ldi	r23, 0x13	; 19
    f566:	88 e1       	ldi	r24, 0x18	; 24
    f568:	95 e0       	ldi	r25, 0x05	; 5
    f56a:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    f56e:	6f ef       	ldi	r22, 0xFF	; 255
    f570:	73 e1       	ldi	r23, 0x13	; 19
    f572:	89 e1       	ldi	r24, 0x19	; 25
    f574:	95 e0       	ldi	r25, 0x05	; 5
    f576:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f57a:	6e e1       	ldi	r22, 0x1E	; 30
    f57c:	e6 2e       	mov	r14, r22
    f57e:	69 e0       	ldi	r22, 0x09	; 9
    f580:	f6 2e       	mov	r15, r22
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f582:	0a e1       	ldi	r16, 0x1A	; 26
    f584:	15 e0       	ldi	r17, 0x05	; 5
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f586:	1c ab       	std	Y+52, r17	; 0x34
    f588:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f58a:	ce 01       	movw	r24, r28
    f58c:	c3 96       	adiw	r24, 0x33	; 51
    f58e:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f592:	f7 01       	movw	r30, r14
    f594:	81 93       	st	Z+, r24
    f596:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f598:	0f 5f       	subi	r16, 0xFF	; 255
    f59a:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f59c:	02 39       	cpi	r16, 0x92	; 146
    f59e:	f7 e0       	ldi	r31, 0x07	; 7
    f5a0:	1f 07       	cpc	r17, r31
    f5a2:	89 f7       	brne	.-30     	; 0xf586 <_Z11Read_EEPROMv+0x218>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    f5a4:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    f5a8:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    f5ac:	10 92 1f 0b 	sts	0x0B1F, r1	; 0x800b1f <_sSchedules+0x201>
	_sSchedules.New_Schedules_Occur = _kRESET;
    f5b0:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    f5b4:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    f5b8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    f5bc:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    f5c0:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    f5c4:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    f5c8:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    f5cc:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    f5d0:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
    f5d4:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
    f5d8:	99 23       	and	r25, r25
    f5da:	21 f1       	breq	.+72     	; 0xf624 <_Z11Read_EEPROMv+0x2b6>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f5dc:	81 30       	cpi	r24, 0x01	; 1
    f5de:	11 f0       	breq	.+4      	; 0xf5e4 <_Z11Read_EEPROMv+0x276>
    f5e0:	85 30       	cpi	r24, 0x05	; 5
    f5e2:	89 f4       	brne	.+34     	; 0xf606 <_Z11Read_EEPROMv+0x298>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f5e4:	85 e0       	ldi	r24, 0x05	; 5
    f5e6:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f5ea:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    f5ee:	8e 7f       	andi	r24, 0xFE	; 254
    f5f0:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f5f4:	84 e0       	ldi	r24, 0x04	; 4
    f5f6:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f5fa:	61 e7       	ldi	r22, 0x71	; 113
    f5fc:	73 e1       	ldi	r23, 0x13	; 19
    f5fe:	88 ed       	ldi	r24, 0xD8	; 216
    f600:	94 e0       	ldi	r25, 0x04	; 4
    f602:	0e 94 c5 71 	call	0xe38a	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    f606:	04 e8       	ldi	r16, 0x84	; 132
    f608:	1d e0       	ldi	r17, 0x0D	; 13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f60a:	21 ef       	ldi	r18, 0xF1	; 241
    f60c:	e2 2e       	mov	r14, r18
    f60e:	29 e0       	ldi	r18, 0x09	; 9
    f610:	f2 2e       	mov	r15, r18
    f612:	3e ef       	ldi	r19, 0xFE	; 254
    f614:	73 2e       	mov	r7, r19
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f616:	66 24       	eor	r6, r6
    f618:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f61a:	45 e0       	ldi	r20, 0x05	; 5
    f61c:	54 2e       	mov	r5, r20
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f61e:	52 e0       	ldi	r21, 0x02	; 2
    f620:	45 2e       	mov	r4, r21
    f622:	14 c0       	rjmp	.+40     	; 0xf64c <_Z11Read_EEPROMv+0x2de>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f624:	81 30       	cpi	r24, 0x01	; 1
    f626:	11 f0       	breq	.+4      	; 0xf62c <_Z11Read_EEPROMv+0x2be>
    f628:	85 30       	cpi	r24, 0x05	; 5
    f62a:	69 f7       	brne	.-38     	; 0xf606 <_Z11Read_EEPROMv+0x298>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    f62c:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
    f630:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    f634:	85 e0       	ldi	r24, 0x05	; 5
    f636:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f63a:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    f63e:	8e 7f       	andi	r24, 0xFE	; 254
    f640:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f644:	84 e0       	ldi	r24, 0x04	; 4
    f646:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
			}break;
    f64a:	dd cf       	rjmp	.-70     	; 0xf606 <_Z11Read_EEPROMv+0x298>
    f64c:	47 01       	movw	r8, r14
    f64e:	3b e1       	ldi	r19, 0x1B	; 27
    f650:	83 0e       	add	r8, r19
    f652:	91 1c       	adc	r9, r1
    f654:	58 01       	movw	r10, r16
    f656:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f658:	dc aa       	std	Y+52, r13	; 0x34
    f65a:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f65c:	ce 01       	movw	r24, r28
    f65e:	c3 96       	adiw	r24, 0x33	; 51
    f660:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f664:	f5 01       	movw	r30, r10
    f666:	81 93       	st	Z+, r24
    f668:	5f 01       	movw	r10, r30
    f66a:	ff ef       	ldi	r31, 0xFF	; 255
    f66c:	cf 1a       	sub	r12, r31
    f66e:	df 0a       	sbc	r13, r31
    f670:	8c 14       	cp	r8, r12
    f672:	9d 04       	cpc	r9, r13
    f674:	89 f7       	brne	.-30     	; 0xf658 <_Z11Read_EEPROMv+0x2ea>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f676:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f67a:	81 30       	cpi	r24, 0x01	; 1
    f67c:	91 f4       	brne	.+36     	; 0xf6a2 <_Z11Read_EEPROMv+0x334>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    f67e:	67 ec       	ldi	r22, 0xC7	; 199
    f680:	76 e2       	ldi	r23, 0x26	; 38
    f682:	85 e5       	ldi	r24, 0x55	; 85
    f684:	94 e1       	ldi	r25, 0x14	; 20
    f686:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    f68a:	4a e0       	ldi	r20, 0x0A	; 10
    f68c:	50 e0       	ldi	r21, 0x00	; 0
    f68e:	f8 01       	movw	r30, r16
    f690:	61 81       	ldd	r22, Z+1	; 0x01
    f692:	85 e5       	ldi	r24, 0x55	; 85
    f694:	94 e1       	ldi	r25, 0x14	; 20
    f696:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    f69a:	85 e5       	ldi	r24, 0x55	; 85
    f69c:	94 e1       	ldi	r25, 0x14	; 20
    f69e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    f6a2:	f8 01       	movw	r30, r16
    f6a4:	83 81       	ldd	r24, Z+3	; 0x03
    f6a6:	94 81       	ldd	r25, Z+4	; 0x04
    f6a8:	89 2b       	or	r24, r25
    f6aa:	c9 f0       	breq	.+50     	; 0xf6de <_Z11Read_EEPROMv+0x370>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f6ac:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f6b0:	81 30       	cpi	r24, 0x01	; 1
    f6b2:	99 f4       	brne	.+38     	; 0xf6da <_Z11Read_EEPROMv+0x36c>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    f6b4:	6f ea       	ldi	r22, 0xAF	; 175
    f6b6:	76 e2       	ldi	r23, 0x26	; 38
    f6b8:	85 e5       	ldi	r24, 0x55	; 85
    f6ba:	94 e1       	ldi	r25, 0x14	; 20
    f6bc:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    f6c0:	f8 01       	movw	r30, r16
    f6c2:	63 81       	ldd	r22, Z+3	; 0x03
    f6c4:	74 81       	ldd	r23, Z+4	; 0x04
    f6c6:	4a e0       	ldi	r20, 0x0A	; 10
    f6c8:	50 e0       	ldi	r21, 0x00	; 0
    f6ca:	85 e5       	ldi	r24, 0x55	; 85
    f6cc:	94 e1       	ldi	r25, 0x14	; 20
    f6ce:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    f6d2:	85 e5       	ldi	r24, 0x55	; 85
    f6d4:	94 e1       	ldi	r25, 0x14	; 20
    f6d6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f6da:	f8 01       	movw	r30, r16
    f6dc:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    f6de:	f8 01       	movw	r30, r16
    f6e0:	83 81       	ldd	r24, Z+3	; 0x03
    f6e2:	94 81       	ldd	r25, Z+4	; 0x04
    f6e4:	89 2b       	or	r24, r25
    f6e6:	a1 f4       	brne	.+40     	; 0xf710 <_Z11Read_EEPROMv+0x3a2>
    f6e8:	82 85       	ldd	r24, Z+10	; 0x0a
    f6ea:	81 11       	cpse	r24, r1
    f6ec:	11 c0       	rjmp	.+34     	; 0xf710 <_Z11Read_EEPROMv+0x3a2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f6ee:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f6f2:	81 30       	cpi	r24, 0x01	; 1
    f6f4:	51 f4       	brne	.+20     	; 0xf70a <_Z11Read_EEPROMv+0x39c>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    f6f6:	63 e9       	ldi	r22, 0x93	; 147
    f6f8:	76 e2       	ldi	r23, 0x26	; 38
    f6fa:	85 e5       	ldi	r24, 0x55	; 85
    f6fc:	94 e1       	ldi	r25, 0x14	; 20
    f6fe:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f702:	85 e5       	ldi	r24, 0x55	; 85
    f704:	94 e1       	ldi	r25, 0x14	; 20
    f706:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f70a:	f8 01       	movw	r30, r16
    f70c:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    f70e:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    f710:	f8 01       	movw	r30, r16
    f712:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    f714:	82 81       	ldd	r24, Z+2	; 0x02
    f716:	82 30       	cpi	r24, 0x02	; 2
    f718:	49 f0       	breq	.+18     	; 0xf72c <_Z11Read_EEPROMv+0x3be>
    f71a:	83 30       	cpi	r24, 0x03	; 3
    f71c:	11 f4       	brne	.+4      	; 0xf722 <_Z11Read_EEPROMv+0x3b4>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f71e:	42 82       	std	Z+2, r4	; 0x02
			}break;
    f720:	05 c0       	rjmp	.+10     	; 0xf72c <_Z11Read_EEPROMv+0x3be>
			
			default:
			{
				if(i < 2 || i > 9)
    f722:	f7 e0       	ldi	r31, 0x07	; 7
    f724:	f7 15       	cp	r31, r7
    f726:	28 f4       	brcc	.+10     	; 0xf732 <_Z11Read_EEPROMv+0x3c4>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f728:	f8 01       	movw	r30, r16
    f72a:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f72c:	c1 2c       	mov	r12, r1
    f72e:	d1 2c       	mov	r13, r1
    f730:	0a c0       	rjmp	.+20     	; 0xf746 <_Z11Read_EEPROMv+0x3d8>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f732:	f8 01       	movw	r30, r16
    f734:	62 82       	std	Z+2, r6	; 0x02
    f736:	fa cf       	rjmp	.-12     	; 0xf72c <_Z11Read_EEPROMv+0x3be>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    f738:	ff ef       	ldi	r31, 0xFF	; 255
    f73a:	cf 1a       	sub	r12, r31
    f73c:	df 0a       	sbc	r13, r31
    f73e:	35 e0       	ldi	r19, 0x05	; 5
    f740:	c3 16       	cp	r12, r19
    f742:	d1 04       	cpc	r13, r1
    f744:	e9 f0       	breq	.+58     	; 0xf780 <_Z11Read_EEPROMv+0x412>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f746:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f74a:	81 30       	cpi	r24, 0x01	; 1
    f74c:	a9 f7       	brne	.-22     	; 0xf738 <_Z11Read_EEPROMv+0x3ca>
			{
				Serial.println();
    f74e:	85 e5       	ldi	r24, 0x55	; 85
    f750:	94 e1       	ldi	r25, 0x14	; 20
    f752:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f756:	67 e8       	ldi	r22, 0x87	; 135
    f758:	76 e2       	ldi	r23, 0x26	; 38
    f75a:	85 e5       	ldi	r24, 0x55	; 85
    f75c:	94 e1       	ldi	r25, 0x14	; 20
    f75e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    f762:	4a e0       	ldi	r20, 0x0A	; 10
    f764:	50 e0       	ldi	r21, 0x00	; 0
    f766:	f8 01       	movw	r30, r16
    f768:	ec 0d       	add	r30, r12
    f76a:	fd 1d       	adc	r31, r13
    f76c:	65 81       	ldd	r22, Z+5	; 0x05
    f76e:	85 e5       	ldi	r24, 0x55	; 85
    f770:	94 e1       	ldi	r25, 0x14	; 20
    f772:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    f776:	85 e5       	ldi	r24, 0x55	; 85
    f778:	94 e1       	ldi	r25, 0x14	; 20
    f77a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f77e:	dc cf       	rjmp	.-72     	; 0xf738 <_Z11Read_EEPROMv+0x3ca>
    f780:	05 5e       	subi	r16, 0xE5	; 229
    f782:	1f 4f       	sbci	r17, 0xFF	; 255
    f784:	73 94       	inc	r7
    f786:	8e e1       	ldi	r24, 0x1E	; 30
    f788:	e8 0e       	add	r14, r24
    f78a:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    f78c:	95 e9       	ldi	r25, 0x95	; 149
    f78e:	e9 16       	cp	r14, r25
    f790:	9b e0       	ldi	r25, 0x0B	; 11
    f792:	f9 06       	cpc	r15, r25
    f794:	09 f0       	breq	.+2      	; 0xf798 <_Z11Read_EEPROMv+0x42a>
    f796:	5a cf       	rjmp	.-332    	; 0xf64c <_Z11Read_EEPROMv+0x2de>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    f798:	67 e0       	ldi	r22, 0x07	; 7
    f79a:	74 e1       	ldi	r23, 0x14	; 20
    f79c:	81 ea       	ldi	r24, 0xA1	; 161
    f79e:	9c e0       	ldi	r25, 0x0C	; 12
    f7a0:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    f7a4:	69 e0       	ldi	r22, 0x09	; 9
    f7a6:	74 e1       	ldi	r23, 0x14	; 20
    f7a8:	88 ea       	ldi	r24, 0xA8	; 168
    f7aa:	9c e0       	ldi	r25, 0x0C	; 12
    f7ac:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    f7b0:	6a e0       	ldi	r22, 0x0A	; 10
    f7b2:	74 e1       	ldi	r23, 0x14	; 20
    f7b4:	8d ea       	ldi	r24, 0xAD	; 173
    f7b6:	9c e0       	ldi	r25, 0x0C	; 12
    f7b8:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f7bc:	91 e2       	ldi	r25, 0x21	; 33
    f7be:	e9 2e       	mov	r14, r25
    f7c0:	94 e1       	ldi	r25, 0x14	; 20
    f7c2:	f9 2e       	mov	r15, r25
    f7c4:	08 e8       	ldi	r16, 0x88	; 136
    f7c6:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f7c8:	1c ab       	std	Y+52, r17	; 0x34
    f7ca:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f7cc:	ce 01       	movw	r24, r28
    f7ce:	c3 96       	adiw	r24, 0x33	; 51
    f7d0:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f7d4:	f7 01       	movw	r30, r14
    f7d6:	81 93       	st	Z+, r24
    f7d8:	7f 01       	movw	r14, r30
    f7da:	0f 5f       	subi	r16, 0xFF	; 255
    f7dc:	1f 4f       	sbci	r17, 0xFF	; 255
    f7de:	0d 38       	cpi	r16, 0x8D	; 141
    f7e0:	fe e0       	ldi	r31, 0x0E	; 14
    f7e2:	1f 07       	cpc	r17, r31
    f7e4:	89 f7       	brne	.-30     	; 0xf7c8 <_Z11Read_EEPROMv+0x45a>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f7e6:	66 e2       	ldi	r22, 0x26	; 38
    f7e8:	74 e1       	ldi	r23, 0x14	; 20
    f7ea:	8b ea       	ldi	r24, 0xAB	; 171
    f7ec:	9e e0       	ldi	r25, 0x0E	; 14
    f7ee:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    f7f2:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
    f7f6:	81 50       	subi	r24, 0x01	; 1
    f7f8:	84 30       	cpi	r24, 0x04	; 4
    f7fa:	48 f0       	brcs	.+18     	; 0xf80e <_Z11Read_EEPROMv+0x4a0>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    f7fc:	81 e0       	ldi	r24, 0x01	; 1
    f7fe:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f802:	66 e2       	ldi	r22, 0x26	; 38
    f804:	74 e1       	ldi	r23, 0x14	; 20
    f806:	8b ea       	ldi	r24, 0xAB	; 171
    f808:	9e e0       	ldi	r25, 0x0E	; 14
    f80a:	0e 94 c5 71 	call	0xe38a	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    f80e:	69 e2       	ldi	r22, 0x29	; 41
    f810:	74 e1       	ldi	r23, 0x14	; 20
    f812:	8d ea       	ldi	r24, 0xAD	; 173
    f814:	9e e0       	ldi	r25, 0x0E	; 14
    f816:	0e 94 92 71 	call	0xe324	; 0xe324 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f81a:	86 e9       	ldi	r24, 0x96	; 150
    f81c:	c8 2e       	mov	r12, r24
    f81e:	8b e0       	ldi	r24, 0x0B	; 11
    f820:	d8 2e       	mov	r13, r24
    f822:	0e ea       	ldi	r16, 0xAE	; 174
    f824:	1c e0       	ldi	r17, 0x0C	; 12
    f826:	48 01       	movw	r8, r16
    f828:	3b e0       	ldi	r19, 0x0B	; 11
    f82a:	83 0e       	add	r8, r19
    f82c:	91 1c       	adc	r9, r1
    f82e:	56 01       	movw	r10, r12
    f830:	78 01       	movw	r14, r16
    f832:	fc aa       	std	Y+52, r15	; 0x34
    f834:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f836:	ce 01       	movw	r24, r28
    f838:	c3 96       	adiw	r24, 0x33	; 51
    f83a:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f83e:	f5 01       	movw	r30, r10
    f840:	81 93       	st	Z+, r24
    f842:	5f 01       	movw	r10, r30
    f844:	ff ef       	ldi	r31, 0xFF	; 255
    f846:	ef 1a       	sub	r14, r31
    f848:	ff 0a       	sbc	r15, r31
    f84a:	8e 14       	cp	r8, r14
    f84c:	9f 04       	cpc	r9, r15
    f84e:	89 f7       	brne	.-30     	; 0xf832 <_Z11Read_EEPROMv+0x4c4>
    f850:	0c 5e       	subi	r16, 0xEC	; 236
    f852:	1f 4f       	sbci	r17, 0xFF	; 255
    f854:	3b e0       	ldi	r19, 0x0B	; 11
    f856:	c3 0e       	add	r12, r19
    f858:	d1 1c       	adc	r13, r1
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
    f85a:	0a 3e       	cpi	r16, 0xEA	; 234
    f85c:	8c e0       	ldi	r24, 0x0C	; 12
    f85e:	18 07       	cpc	r17, r24
    f860:	11 f7       	brne	.-60     	; 0xf826 <_Z11Read_EEPROMv+0x4b8>
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    f862:	6d e9       	ldi	r22, 0x9D	; 157
    f864:	7c e0       	ldi	r23, 0x0C	; 12
    f866:	87 eb       	ldi	r24, 0xB7	; 183
    f868:	9e e0       	ldi	r25, 0x0E	; 14
    f86a:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
}
    f86e:	e4 96       	adiw	r28, 0x34	; 52
    f870:	0f b6       	in	r0, 0x3f	; 63
    f872:	f8 94       	cli
    f874:	de bf       	out	0x3e, r29	; 62
    f876:	0f be       	out	0x3f, r0	; 63
    f878:	cd bf       	out	0x3d, r28	; 61
    f87a:	df 91       	pop	r29
    f87c:	cf 91       	pop	r28
    f87e:	1f 91       	pop	r17
    f880:	0f 91       	pop	r16
    f882:	ff 90       	pop	r15
    f884:	ef 90       	pop	r14
    f886:	df 90       	pop	r13
    f888:	cf 90       	pop	r12
    f88a:	bf 90       	pop	r11
    f88c:	af 90       	pop	r10
    f88e:	9f 90       	pop	r9
    f890:	8f 90       	pop	r8
    f892:	7f 90       	pop	r7
    f894:	6f 90       	pop	r6
    f896:	5f 90       	pop	r5
    f898:	4f 90       	pop	r4
    f89a:	08 95       	ret

0000f89c <_Z20Param_Initializationv>:
volatile unsigned int _gdo_not_perform_4g_oper;
volatile unsigned char reconnection_retry_count;


void Param_Initialization(void)
{
    f89c:	cf 92       	push	r12
    f89e:	df 92       	push	r13
    f8a0:	ef 92       	push	r14
    f8a2:	ff 92       	push	r15
    f8a4:	0f 93       	push	r16
    f8a6:	1f 93       	push	r17
    f8a8:	cf 93       	push	r28
    f8aa:	df 93       	push	r29
    f8ac:	00 d0       	rcall	.+0      	; 0xf8ae <_Z20Param_Initializationv+0x12>
    f8ae:	cd b7       	in	r28, 0x3d	; 61
    f8b0:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    f8b2:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    f8b4:	62 e8       	ldi	r22, 0x82	; 130
    f8b6:	74 e0       	ldi	r23, 0x04	; 4
    f8b8:	8a e6       	ldi	r24, 0x6A	; 106
    f8ba:	93 e1       	ldi	r25, 0x13	; 19
    f8bc:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    f8c0:	8a e6       	ldi	r24, 0x6A	; 106
    f8c2:	e8 2e       	mov	r14, r24
    f8c4:	83 e1       	ldi	r24, 0x13	; 19
    f8c6:	f8 2e       	mov	r15, r24
    f8c8:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f8ca:	00 e0       	ldi	r16, 0x00	; 0
    f8cc:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f8ce:	f6 01       	movw	r30, r12
    f8d0:	61 91       	ld	r22, Z+
    f8d2:	6f 01       	movw	r12, r30
    f8d4:	1a 83       	std	Y+2, r17	; 0x02
    f8d6:	09 83       	std	Y+1, r16	; 0x01
    f8d8:	ce 01       	movw	r24, r28
    f8da:	01 96       	adiw	r24, 0x01	; 1
    f8dc:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f8e0:	0f 5f       	subi	r16, 0xFF	; 255
    f8e2:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f8e4:	07 30       	cpi	r16, 0x07	; 7
    f8e6:	11 05       	cpc	r17, r1
    f8e8:	91 f7       	brne	.-28     	; 0xf8ce <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    f8ea:	85 e5       	ldi	r24, 0x55	; 85
    f8ec:	94 e1       	ldi	r25, 0x14	; 20
    f8ee:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    f8f2:	85 e5       	ldi	r24, 0x55	; 85
    f8f4:	94 e1       	ldi	r25, 0x14	; 20
    f8f6:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    f8fa:	f7 01       	movw	r30, r14
    f8fc:	61 91       	ld	r22, Z+
    f8fe:	7f 01       	movw	r14, r30
    f900:	85 e5       	ldi	r24, 0x55	; 85
    f902:	94 e1       	ldi	r25, 0x14	; 20
    f904:	0e 94 51 cf 	call	0x19ea2	; 0x19ea2 <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    f908:	f0 e7       	ldi	r31, 0x70	; 112
    f90a:	ef 16       	cp	r14, r31
    f90c:	f3 e1       	ldi	r31, 0x13	; 19
    f90e:	ff 06       	cpc	r15, r31
    f910:	a1 f7       	brne	.-24     	; 0xf8fa <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    f912:	85 e5       	ldi	r24, 0x55	; 85
    f914:	94 e1       	ldi	r25, 0x14	; 20
    f916:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    f91a:	27 d1       	rcall	.+590    	; 0xfb6a <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    f91c:	27 d1       	rcall	.+590    	; 0xfb6c <_Z21Store_MQTT_Sub_Topicsv>
    f91e:	0e 94 13 5e 	call	0xbc26	; 0xbc26 <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    f922:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    f924:	6d 5f       	subi	r22, 0xFD	; 253
    f926:	7f 4f       	sbci	r23, 0xFF	; 255
    f928:	84 ef       	ldi	r24, 0xF4	; 244
    f92a:	94 e0       	ldi	r25, 0x04	; 4
    f92c:	0e 94 7a 71 	call	0xe2f4	; 0xe2f4 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f930:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    f932:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    f936:	92 30       	cpi	r25, 0x02	; 2
    f938:	81 f4       	brne	.+32     	; 0xf95a <_Z20Param_Initializationv+0xbe>
    f93a:	91 e0       	ldi	r25, 0x01	; 1
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    f93c:	90 93 a6 13 	sts	0x13A6, r25	; 0x8013a6 <_sRuble_Parameters+0x5c>
    f940:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f942:	e1 f4       	brne	.+56     	; 0xf97c <_Z20Param_Initializationv+0xe0>
    f944:	65 e8       	ldi	r22, 0x85	; 133
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    f946:	77 e2       	ldi	r23, 0x27	; 39
    f948:	85 e5       	ldi	r24, 0x55	; 85
    f94a:	94 e1       	ldi	r25, 0x14	; 20
    f94c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f950:	85 e5       	ldi	r24, 0x55	; 85
			_kSERIAL_MON_CLEAR();
    f952:	94 e1       	ldi	r25, 0x14	; 20
    f954:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f958:	11 c0       	rjmp	.+34     	; 0xf97c <_Z20Param_Initializationv+0xe0>
    f95a:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    f95c:	90 93 a6 13 	sts	0x13A6, r25	; 0x8013a6 <_sRuble_Parameters+0x5c>
    f960:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f962:	51 f4       	brne	.+20     	; 0xf978 <_Z20Param_Initializationv+0xdc>
    f964:	64 e6       	ldi	r22, 0x64	; 100
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    f966:	77 e2       	ldi	r23, 0x27	; 39
    f968:	85 e5       	ldi	r24, 0x55	; 85
    f96a:	94 e1       	ldi	r25, 0x14	; 20
    f96c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f970:	85 e5       	ldi	r24, 0x55	; 85
			_kSERIAL_MON_CLEAR();
    f972:	94 e1       	ldi	r25, 0x14	; 20
    f974:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f978:	0e 94 5d 85 	call	0x10aba	; 0x10aba <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    f97c:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    f97e:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0xaf>
	
	
	Local_Time_Setting();
    f982:	fc db       	rcall	.-2056   	; 0xf17c <_Z18Local_Time_Settingv>
    f984:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    f988:	81 30       	cpi	r24, 0x01	; 1
    f98a:	e1 f0       	breq	.+56     	; 0xf9c4 <_Z20Param_Initializationv+0x128>
    f98c:	90 91 f9 13 	lds	r25, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xaf>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    f990:	91 30       	cpi	r25, 0x01	; 1
    f992:	c1 f4       	brne	.+48     	; 0xf9c4 <_Z20Param_Initializationv+0x128>
    f994:	0e 94 db 63 	call	0xc7b6	; 0xc7b6 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    f998:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    f99a:	40 e0       	ldi	r20, 0x00	; 0
    f99c:	6a e0       	ldi	r22, 0x0A	; 10
    f99e:	87 e8       	ldi	r24, 0x87	; 135
    f9a0:	95 e0       	ldi	r25, 0x05	; 5
    f9a2:	0e 94 af 63 	call	0xc75e	; 0xc75e <_Z14Lcd_Print_BuffPchhh>
    f9a6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f9aa:	81 30       	cpi	r24, 0x01	; 1
    f9ac:	51 f4       	brne	.+20     	; 0xf9c2 <_Z20Param_Initializationv+0x126>
    f9ae:	6d e4       	ldi	r22, 0x4D	; 77
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    f9b0:	77 e2       	ldi	r23, 0x27	; 39
    f9b2:	85 e5       	ldi	r24, 0x55	; 85
    f9b4:	94 e1       	ldi	r25, 0x14	; 20
    f9b6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    f9ba:	85 e5       	ldi	r24, 0x55	; 85
				_kSERIAL_MON_CLEAR();
    f9bc:	94 e1       	ldi	r25, 0x14	; 20
    f9be:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    f9c2:	ff cf       	rjmp	.-2      	; 0xf9c2 <_Z20Param_Initializationv+0x126>
    f9c4:	90 91 a4 13 	lds	r25, 0x13A4	; 0x8013a4 <_sRuble_Parameters+0x5a>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    f9c8:	90 fd       	sbrc	r25, 0
    f9ca:	09 c0       	rjmp	.+18     	; 0xf9de <_Z20Param_Initializationv+0x142>
    f9cc:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    f9d0:	80 62       	ori	r24, 0x20	; 32
    f9d2:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
		Display_Update_1();
    f9d6:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    f9da:	ad d3       	rcall	.+1882   	; 0x10136 <_Z11Init_Brokerv>
    f9dc:	28 c0       	rjmp	.+80     	; 0xfa2e <_Z20Param_Initializationv+0x192>
    f9de:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    f9e0:	c1 f0       	breq	.+48     	; 0xfa12 <_Z20Param_Initializationv+0x176>
    f9e2:	0e 94 db 63 	call	0xc7b6	; 0xc7b6 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    f9e6:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    f9e8:	40 e0       	ldi	r20, 0x00	; 0
    f9ea:	6a e0       	ldi	r22, 0x0A	; 10
    f9ec:	82 e9       	ldi	r24, 0x92	; 146
    f9ee:	95 e0       	ldi	r25, 0x05	; 5
    f9f0:	0e 94 af 63 	call	0xc75e	; 0xc75e <_Z14Lcd_Print_BuffPchhh>
    f9f4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f9f8:	81 30       	cpi	r24, 0x01	; 1
    f9fa:	51 f4       	brne	.+20     	; 0xfa10 <_Z20Param_Initializationv+0x174>
    f9fc:	67 ef       	ldi	r22, 0xF7	; 247
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    f9fe:	76 e2       	ldi	r23, 0x26	; 38
    fa00:	85 e5       	ldi	r24, 0x55	; 85
    fa02:	94 e1       	ldi	r25, 0x14	; 20
    fa04:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fa08:	85 e5       	ldi	r24, 0x55	; 85
				_kSERIAL_MON_CLEAR();
    fa0a:	94 e1       	ldi	r25, 0x14	; 20
    fa0c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    fa10:	ff cf       	rjmp	.-2      	; 0xfa10 <_Z20Param_Initializationv+0x174>
    fa12:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fa16:	81 30       	cpi	r24, 0x01	; 1
    fa18:	51 f4       	brne	.+20     	; 0xfa2e <_Z20Param_Initializationv+0x192>
    fa1a:	6c ed       	ldi	r22, 0xDC	; 220
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    fa1c:	76 e2       	ldi	r23, 0x26	; 38
    fa1e:	85 e5       	ldi	r24, 0x55	; 85
    fa20:	94 e1       	ldi	r25, 0x14	; 20
    fa22:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fa26:	85 e5       	ldi	r24, 0x55	; 85
				_kSERIAL_MON_CLEAR();
    fa28:	94 e1       	ldi	r25, 0x14	; 20
    fa2a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    fa2e:	9f dc       	rcall	.-1730   	; 0xf36e <_Z11Read_EEPROMv>
    fa30:	07 eb       	ldi	r16, 0xB7	; 183
    fa32:	1b e0       	ldi	r17, 0x0B	; 11
    fa34:	e1 2c       	mov	r14, r1
    fa36:	f1 2c       	mov	r15, r1
    fa38:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fa3a:	d3 94       	inc	r13
    fa3c:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    fa3e:	6f 5f       	subi	r22, 0xFF	; 255
    fa40:	7f 4f       	sbci	r23, 0xFF	; 255
    fa42:	c7 01       	movw	r24, r14
    fa44:	87 55       	subi	r24, 0x57	; 87
    fa46:	9c 4e       	sbci	r25, 0xEC	; 236
    fa48:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
    fa4c:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    fa4e:	80 81       	ld	r24, Z
    fa50:	81 11       	cpse	r24, r1
    fa52:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fa54:	f7 e0       	ldi	r31, 0x07	; 7
    fa56:	ef 0e       	add	r14, r31
    fa58:	f1 1c       	adc	r15, r1
    fa5a:	03 5f       	subi	r16, 0xF3	; 243
    fa5c:	1f 4f       	sbci	r17, 0xFF	; 255
    fa5e:	81 e3       	ldi	r24, 0x31	; 49
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    fa60:	e8 16       	cp	r14, r24
    fa62:	f1 04       	cpc	r15, r1
    fa64:	59 f7       	brne	.-42     	; 0xfa3c <_Z20Param_Initializationv+0x1a0>
    fa66:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    fa6a:	81 50       	subi	r24, 0x01	; 1
    fa6c:	85 30       	cpi	r24, 0x05	; 5
    fa6e:	80 f0       	brcs	.+32     	; 0xfa90 <_Z20Param_Initializationv+0x1f4>
    fa70:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    fa74:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
    fa78:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    fa7a:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
    fa7e:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fa80:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
    fa84:	61 e7       	ldi	r22, 0x71	; 113
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fa86:	73 e1       	ldi	r23, 0x13	; 19
    fa88:	88 ed       	ldi	r24, 0xD8	; 216
    fa8a:	94 e0       	ldi	r25, 0x04	; 4
    fa8c:	0e 94 c5 71 	call	0xe38a	; 0xe38a <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    fa90:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    fa92:	30 e0       	ldi	r19, 0x00	; 0
    fa94:	40 ec       	ldi	r20, 0xC0	; 192
    fa96:	50 e4       	ldi	r21, 0x40	; 64
    fa98:	65 e4       	ldi	r22, 0x45	; 69
    fa9a:	70 e0       	ldi	r23, 0x00	; 0
    fa9c:	84 ea       	ldi	r24, 0xA4	; 164
    fa9e:	9c e0       	ldi	r25, 0x0C	; 12
    faa0:	0e 94 1c d5 	call	0x1aa38	; 0x1aa38 <_ZN13EnergyMonitor7currentEjd>
    faa4:	0f 90       	pop	r0
	
}
    faa6:	0f 90       	pop	r0
    faa8:	0f 90       	pop	r0
    faaa:	df 91       	pop	r29
    faac:	cf 91       	pop	r28
    faae:	1f 91       	pop	r17
    fab0:	0f 91       	pop	r16
    fab2:	ff 90       	pop	r15
    fab4:	ef 90       	pop	r14
    fab6:	df 90       	pop	r13
    fab8:	cf 90       	pop	r12
    faba:	08 95       	ret

0000fabc <_Z17Clear_Serial_Datav>:
    fabc:	cf 92       	push	r12
	}	
}


void Clear_Serial_Data(void)
{
    fabe:	df 92       	push	r13
    fac0:	ef 92       	push	r14
    fac2:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    fac4:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    fac8:	6b 01       	movw	r12, r22
    faca:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    facc:	82 e1       	ldi	r24, 0x12	; 18
    face:	96 e1       	ldi	r25, 0x16	; 22
    fad0:	0e 94 e2 ce 	call	0x19dc4	; 0x19dc4 <_ZN14HardwareSerial9availableEv>
    fad4:	18 16       	cp	r1, r24
    fad6:	19 06       	cpc	r1, r25
    fad8:	94 f4       	brge	.+36     	; 0xfafe <_Z17Clear_Serial_Datav+0x42>
    fada:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
    fade:	dc 01       	movw	r26, r24
    fae0:	cb 01       	movw	r24, r22
    fae2:	8c 19       	sub	r24, r12
    fae4:	9d 09       	sbc	r25, r13
    fae6:	ae 09       	sbc	r26, r14
    fae8:	bf 09       	sbc	r27, r15
    faea:	84 36       	cpi	r24, 0x64	; 100
    faec:	91 05       	cpc	r25, r1
    faee:	a1 05       	cpc	r26, r1
    faf0:	b1 05       	cpc	r27, r1
    faf2:	28 f4       	brcc	.+10     	; 0xfafe <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); 
    faf4:	82 e1       	ldi	r24, 0x12	; 18
    faf6:	96 e1       	ldi	r25, 0x16	; 22
    faf8:	0e 94 03 cf 	call	0x19e06	; 0x19e06 <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fafc:	e7 cf       	rjmp	.-50     	; 0xfacc <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); 
	}
}
    fafe:	ff 90       	pop	r15
    fb00:	ef 90       	pop	r14
    fb02:	df 90       	pop	r13
    fb04:	cf 90       	pop	r12
    fb06:	08 95       	ret

0000fb08 <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    fb08:	80 e0       	ldi	r24, 0x00	; 0
    fb0a:	08 95       	ret

0000fb0c <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    fb0c:	df 92       	push	r13
    fb0e:	ef 92       	push	r14
    fb10:	ff 92       	push	r15
    fb12:	0f 93       	push	r16
    fb14:	1f 93       	push	r17
    fb16:	cf 93       	push	r28
    fb18:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    fb1a:	98 e2       	ldi	r25, 0x28	; 40
    fb1c:	89 9f       	mul	r24, r25
    fb1e:	90 01       	movw	r18, r0
    fb20:	11 24       	eor	r1, r1
    fb22:	89 01       	movw	r16, r18
    fb24:	08 5f       	subi	r16, 0xF8	; 248
    fb26:	1f 4f       	sbci	r17, 0xFF	; 255
    fb28:	96 e0       	ldi	r25, 0x06	; 6
    fb2a:	89 9f       	mul	r24, r25
    fb2c:	e0 01       	movw	r28, r0
    fb2e:	11 24       	eor	r1, r1
    fb30:	c0 50       	subi	r28, 0x00	; 0
    fb32:	d3 4f       	sbci	r29, 0xF3	; 243
    fb34:	79 01       	movw	r14, r18
    fb36:	8e e0       	ldi	r24, 0x0E	; 14
    fb38:	e8 0e       	add	r14, r24
    fb3a:	f1 1c       	adc	r15, r1
    fb3c:	d9 90       	ld	r13, Y+

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    fb3e:	c8 01       	movw	r24, r16
    fb40:	0e 94 b9 ec 	call	0x1d972	; 0x1d972 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    fb44:	d8 16       	cp	r13, r24
    fb46:	21 f0       	breq	.+8      	; 0xfb50 <_Z16Lira_Data_EEPROMh+0x44>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    fb48:	6d 2d       	mov	r22, r13
    fb4a:	c8 01       	movw	r24, r16
    fb4c:	0e 94 c1 ec 	call	0x1d982	; 0x1d982 <eeprom_write_byte>
    fb50:	0f 5f       	subi	r16, 0xFF	; 255
    fb52:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fb54:	0e 15       	cp	r16, r14
    fb56:	1f 05       	cpc	r17, r15
    fb58:	89 f7       	brne	.-30     	; 0xfb3c <_Z16Lira_Data_EEPROMh+0x30>
	return;
}
    fb5a:	df 91       	pop	r29
    fb5c:	cf 91       	pop	r28
    fb5e:	1f 91       	pop	r17
    fb60:	0f 91       	pop	r16
    fb62:	ff 90       	pop	r15
    fb64:	ef 90       	pop	r14
    fb66:	df 90       	pop	r13
    fb68:	08 95       	ret

0000fb6a <_Z21Store_MQTT_Pub_Topicsv>:
    fb6a:	08 95       	ret

0000fb6c <_Z21Store_MQTT_Sub_Topicsv>:
		
}


void Store_MQTT_Sub_Topics(void)
{	
    fb6c:	08 95       	ret

0000fb6e <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    fb6e:	ff 92       	push	r15
    fb70:	0f 93       	push	r16
    fb72:	1f 93       	push	r17
    fb74:	cf 93       	push	r28
    fb76:	df 93       	push	r29
    fb78:	cd b7       	in	r28, 0x3d	; 61
    fb7a:	de b7       	in	r29, 0x3e	; 62
    fb7c:	a8 97       	sbiw	r28, 0x28	; 40
    fb7e:	0f b6       	in	r0, 0x3f	; 63
    fb80:	f8 94       	cli
    fb82:	de bf       	out	0x3e, r29	; 62
    fb84:	0f be       	out	0x3f, r0	; 63
    fb86:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char temp_sub_topic[40];
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fb88:	8e 01       	movw	r16, r28
    fb8a:	0f 5f       	subi	r16, 0xFF	; 255
    fb8c:	1f 4f       	sbci	r17, 0xFF	; 255
    fb8e:	88 e2       	ldi	r24, 0x28	; 40
    fb90:	f8 01       	movw	r30, r16
    fb92:	11 92       	st	Z+, r1
    fb94:	8a 95       	dec	r24
    fb96:	e9 f7       	brne	.-6      	; 0xfb92 <_Z21Subscribe_MQTT_Topicsv+0x24>
	sprintf((char *)temp_sub_topic,"SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);
    fb98:	8a e6       	ldi	r24, 0x6A	; 106
    fb9a:	93 e1       	ldi	r25, 0x13	; 19
    fb9c:	9f 93       	push	r25
    fb9e:	8f 93       	push	r24
    fba0:	8d e9       	ldi	r24, 0x9D	; 157
    fba2:	95 e0       	ldi	r25, 0x05	; 5
    fba4:	9f 93       	push	r25
    fba6:	8f 93       	push	r24
    fba8:	1f 93       	push	r17
    fbaa:	0f 93       	push	r16
    fbac:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fbb0:	c8 01       	movw	r24, r16
    fbb2:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fbb6:	0f 90       	pop	r0
    fbb8:	0f 90       	pop	r0
    fbba:	0f 90       	pop	r0
    fbbc:	0f 90       	pop	r0
    fbbe:	0f 90       	pop	r0
    fbc0:	0f 90       	pop	r0
    fbc2:	81 11       	cpse	r24, r1
    fbc4:	0f c0       	rjmp	.+30     	; 0xfbe4 <_Z21Subscribe_MQTT_Topicsv+0x76>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fbc6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    fbca:	81 30       	cpi	r24, 0x01	; 1
    fbcc:	69 f4       	brne	.+26     	; 0xfbe8 <_Z21Subscribe_MQTT_Topicsv+0x7a>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
    fbce:	6a ea       	ldi	r22, 0xAA	; 170
    fbd0:	77 e2       	ldi	r23, 0x27	; 39
    fbd2:	85 e5       	ldi	r24, 0x55	; 85
    fbd4:	94 e1       	ldi	r25, 0x14	; 20
    fbd6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fbda:	85 e5       	ldi	r24, 0x55	; 85
    fbdc:	94 e1       	ldi	r25, 0x14	; 20
    fbde:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    fbe2:	02 c0       	rjmp	.+4      	; 0xfbe8 <_Z21Subscribe_MQTT_Topicsv+0x7a>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
    fbe4:	f1 2c       	mov	r15, r1
    fbe6:	02 c0       	rjmp	.+4      	; 0xfbec <_Z21Subscribe_MQTT_Topicsv+0x7e>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
    fbe8:	ff 24       	eor	r15, r15
    fbea:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fbec:	88 e2       	ldi	r24, 0x28	; 40
    fbee:	f8 01       	movw	r30, r16
    fbf0:	11 92       	st	Z+, r1
    fbf2:	8a 95       	dec	r24
    fbf4:	e9 f7       	brne	.-6      	; 0xfbf0 <_Z21Subscribe_MQTT_Topicsv+0x82>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);
    fbf6:	8a e6       	ldi	r24, 0x6A	; 106
    fbf8:	93 e1       	ldi	r25, 0x13	; 19
    fbfa:	9f 93       	push	r25
    fbfc:	8f 93       	push	r24
    fbfe:	83 eb       	ldi	r24, 0xB3	; 179
    fc00:	95 e0       	ldi	r25, 0x05	; 5
    fc02:	9f 93       	push	r25
    fc04:	8f 93       	push	r24
    fc06:	1f 93       	push	r17
    fc08:	0f 93       	push	r16
    fc0a:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	//SICCA/CONFIG/SETUP/PLOT/
		
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fc0e:	c8 01       	movw	r24, r16
    fc10:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fc14:	0f 90       	pop	r0
    fc16:	0f 90       	pop	r0
    fc18:	0f 90       	pop	r0
    fc1a:	0f 90       	pop	r0
    fc1c:	0f 90       	pop	r0
    fc1e:	0f 90       	pop	r0
    fc20:	81 11       	cpse	r24, r1
    fc22:	02 c0       	rjmp	.+4      	; 0xfc28 <_Z21Subscribe_MQTT_Topicsv+0xba>
	{
		temp_flag = _kSET;
    fc24:	ff 24       	eor	r15, r15
    fc26:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fc28:	88 e2       	ldi	r24, 0x28	; 40
    fc2a:	f8 01       	movw	r30, r16
    fc2c:	11 92       	st	Z+, r1
    fc2e:	8a 95       	dec	r24
    fc30:	e9 f7       	brne	.-6      	; 0xfc2c <_Z21Subscribe_MQTT_Topicsv+0xbe>
	sprintf((char *)temp_sub_topic,"SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    fc32:	8a e6       	ldi	r24, 0x6A	; 106
    fc34:	93 e1       	ldi	r25, 0x13	; 19
    fc36:	9f 93       	push	r25
    fc38:	8f 93       	push	r24
    fc3a:	8e ec       	ldi	r24, 0xCE	; 206
    fc3c:	95 e0       	ldi	r25, 0x05	; 5
    fc3e:	9f 93       	push	r25
    fc40:	8f 93       	push	r24
    fc42:	1f 93       	push	r17
    fc44:	0f 93       	push	r16
    fc46:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fc4a:	c8 01       	movw	r24, r16
    fc4c:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fc50:	0f 90       	pop	r0
    fc52:	0f 90       	pop	r0
    fc54:	0f 90       	pop	r0
    fc56:	0f 90       	pop	r0
    fc58:	0f 90       	pop	r0
    fc5a:	0f 90       	pop	r0
    fc5c:	81 11       	cpse	r24, r1
    fc5e:	02 c0       	rjmp	.+4      	; 0xfc64 <_Z21Subscribe_MQTT_Topicsv+0xf6>
	{
		temp_flag = _kSET;
    fc60:	ff 24       	eor	r15, r15
    fc62:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fc64:	88 e2       	ldi	r24, 0x28	; 40
    fc66:	f8 01       	movw	r30, r16
    fc68:	11 92       	st	Z+, r1
    fc6a:	8a 95       	dec	r24
    fc6c:	e9 f7       	brne	.-6      	; 0xfc68 <_Z21Subscribe_MQTT_Topicsv+0xfa>
	sprintf((char *)temp_sub_topic,"SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);
    fc6e:	8a e6       	ldi	r24, 0x6A	; 106
    fc70:	93 e1       	ldi	r25, 0x13	; 19
    fc72:	9f 93       	push	r25
    fc74:	8f 93       	push	r24
    fc76:	86 ee       	ldi	r24, 0xE6	; 230
    fc78:	95 e0       	ldi	r25, 0x05	; 5
    fc7a:	9f 93       	push	r25
    fc7c:	8f 93       	push	r24
    fc7e:	1f 93       	push	r17
    fc80:	0f 93       	push	r16
    fc82:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fc86:	c8 01       	movw	r24, r16
    fc88:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fc8c:	0f 90       	pop	r0
    fc8e:	0f 90       	pop	r0
    fc90:	0f 90       	pop	r0
    fc92:	0f 90       	pop	r0
    fc94:	0f 90       	pop	r0
    fc96:	0f 90       	pop	r0
    fc98:	81 11       	cpse	r24, r1
    fc9a:	02 c0       	rjmp	.+4      	; 0xfca0 <_Z21Subscribe_MQTT_Topicsv+0x132>
	{
		temp_flag = _kSET;
    fc9c:	ff 24       	eor	r15, r15
    fc9e:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fca0:	88 e2       	ldi	r24, 0x28	; 40
    fca2:	f8 01       	movw	r30, r16
    fca4:	11 92       	st	Z+, r1
    fca6:	8a 95       	dec	r24
    fca8:	e9 f7       	brne	.-6      	; 0xfca4 <_Z21Subscribe_MQTT_Topicsv+0x136>
	sprintf((char *)temp_sub_topic,"SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);
    fcaa:	8a e6       	ldi	r24, 0x6A	; 106
    fcac:	93 e1       	ldi	r25, 0x13	; 19
    fcae:	9f 93       	push	r25
    fcb0:	8f 93       	push	r24
    fcb2:	85 ef       	ldi	r24, 0xF5	; 245
    fcb4:	95 e0       	ldi	r25, 0x05	; 5
    fcb6:	9f 93       	push	r25
    fcb8:	8f 93       	push	r24
    fcba:	1f 93       	push	r17
    fcbc:	0f 93       	push	r16
    fcbe:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fcc2:	c8 01       	movw	r24, r16
    fcc4:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fcc8:	0f 90       	pop	r0
    fcca:	0f 90       	pop	r0
    fccc:	0f 90       	pop	r0
    fcce:	0f 90       	pop	r0
    fcd0:	0f 90       	pop	r0
    fcd2:	0f 90       	pop	r0
    fcd4:	81 11       	cpse	r24, r1
    fcd6:	02 c0       	rjmp	.+4      	; 0xfcdc <_Z21Subscribe_MQTT_Topicsv+0x16e>
	{
		temp_flag = _kSET;
    fcd8:	ff 24       	eor	r15, r15
    fcda:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fcdc:	88 e2       	ldi	r24, 0x28	; 40
    fcde:	f8 01       	movw	r30, r16
    fce0:	11 92       	st	Z+, r1
    fce2:	8a 95       	dec	r24
    fce4:	e9 f7       	brne	.-6      	; 0xfce0 <_Z21Subscribe_MQTT_Topicsv+0x172>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);
    fce6:	8a e6       	ldi	r24, 0x6A	; 106
    fce8:	93 e1       	ldi	r25, 0x13	; 19
    fcea:	9f 93       	push	r25
    fcec:	8f 93       	push	r24
    fcee:	89 e0       	ldi	r24, 0x09	; 9
    fcf0:	96 e0       	ldi	r25, 0x06	; 6
    fcf2:	9f 93       	push	r25
    fcf4:	8f 93       	push	r24
    fcf6:	1f 93       	push	r17
    fcf8:	0f 93       	push	r16
    fcfa:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fcfe:	c8 01       	movw	r24, r16
    fd00:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fd04:	0f 90       	pop	r0
    fd06:	0f 90       	pop	r0
    fd08:	0f 90       	pop	r0
    fd0a:	0f 90       	pop	r0
    fd0c:	0f 90       	pop	r0
    fd0e:	0f 90       	pop	r0
    fd10:	81 11       	cpse	r24, r1
    fd12:	02 c0       	rjmp	.+4      	; 0xfd18 <_Z21Subscribe_MQTT_Topicsv+0x1aa>
	{
		temp_flag = _kSET;
    fd14:	ff 24       	eor	r15, r15
    fd16:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}



	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd18:	88 e2       	ldi	r24, 0x28	; 40
    fd1a:	f8 01       	movw	r30, r16
    fd1c:	11 92       	st	Z+, r1
    fd1e:	8a 95       	dec	r24
    fd20:	e9 f7       	brne	.-6      	; 0xfd1c <_Z21Subscribe_MQTT_Topicsv+0x1ae>
	sprintf((char *)temp_sub_topic,"SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);
    fd22:	8a e6       	ldi	r24, 0x6A	; 106
    fd24:	93 e1       	ldi	r25, 0x13	; 19
    fd26:	9f 93       	push	r25
    fd28:	8f 93       	push	r24
    fd2a:	8f e1       	ldi	r24, 0x1F	; 31
    fd2c:	96 e0       	ldi	r25, 0x06	; 6
    fd2e:	9f 93       	push	r25
    fd30:	8f 93       	push	r24
    fd32:	1f 93       	push	r17
    fd34:	0f 93       	push	r16
    fd36:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fd3a:	c8 01       	movw	r24, r16
    fd3c:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fd40:	0f 90       	pop	r0
    fd42:	0f 90       	pop	r0
    fd44:	0f 90       	pop	r0
    fd46:	0f 90       	pop	r0
    fd48:	0f 90       	pop	r0
    fd4a:	0f 90       	pop	r0
    fd4c:	81 11       	cpse	r24, r1
    fd4e:	02 c0       	rjmp	.+4      	; 0xfd54 <_Z21Subscribe_MQTT_Topicsv+0x1e6>
	{
		temp_flag = _kSET;
    fd50:	ff 24       	eor	r15, r15
    fd52:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}

	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd54:	88 e2       	ldi	r24, 0x28	; 40
    fd56:	f8 01       	movw	r30, r16
    fd58:	11 92       	st	Z+, r1
    fd5a:	8a 95       	dec	r24
    fd5c:	e9 f7       	brne	.-6      	; 0xfd58 <_Z21Subscribe_MQTT_Topicsv+0x1ea>
	sprintf((char *)temp_sub_topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    fd5e:	8a e6       	ldi	r24, 0x6A	; 106
    fd60:	93 e1       	ldi	r25, 0x13	; 19
    fd62:	9f 93       	push	r25
    fd64:	8f 93       	push	r24
    fd66:	82 e3       	ldi	r24, 0x32	; 50
    fd68:	96 e0       	ldi	r25, 0x06	; 6
    fd6a:	9f 93       	push	r25
    fd6c:	8f 93       	push	r24
    fd6e:	1f 93       	push	r17
    fd70:	0f 93       	push	r16
    fd72:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fd76:	c8 01       	movw	r24, r16
    fd78:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fd7c:	0f 90       	pop	r0
    fd7e:	0f 90       	pop	r0
    fd80:	0f 90       	pop	r0
    fd82:	0f 90       	pop	r0
    fd84:	0f 90       	pop	r0
    fd86:	0f 90       	pop	r0
    fd88:	81 11       	cpse	r24, r1
    fd8a:	02 c0       	rjmp	.+4      	; 0xfd90 <_Z21Subscribe_MQTT_Topicsv+0x222>
	{
		temp_flag = _kSET;
    fd8c:	ff 24       	eor	r15, r15
    fd8e:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd90:	88 e2       	ldi	r24, 0x28	; 40
    fd92:	f8 01       	movw	r30, r16
    fd94:	11 92       	st	Z+, r1
    fd96:	8a 95       	dec	r24
    fd98:	e9 f7       	brne	.-6      	; 0xfd94 <_Z21Subscribe_MQTT_Topicsv+0x226>
	sprintf((char *)temp_sub_topic,"SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
    fd9a:	8a e6       	ldi	r24, 0x6A	; 106
    fd9c:	93 e1       	ldi	r25, 0x13	; 19
    fd9e:	9f 93       	push	r25
    fda0:	8f 93       	push	r24
    fda2:	84 e4       	ldi	r24, 0x44	; 68
    fda4:	96 e0       	ldi	r25, 0x06	; 6
    fda6:	9f 93       	push	r25
    fda8:	8f 93       	push	r24
    fdaa:	1f 93       	push	r17
    fdac:	0f 93       	push	r16
    fdae:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fdb2:	c8 01       	movw	r24, r16
    fdb4:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fdb8:	0f 90       	pop	r0
    fdba:	0f 90       	pop	r0
    fdbc:	0f 90       	pop	r0
    fdbe:	0f 90       	pop	r0
    fdc0:	0f 90       	pop	r0
    fdc2:	0f 90       	pop	r0
    fdc4:	81 11       	cpse	r24, r1
    fdc6:	02 c0       	rjmp	.+4      	; 0xfdcc <_Z21Subscribe_MQTT_Topicsv+0x25e>
	{
		temp_flag = _kSET;
    fdc8:	ff 24       	eor	r15, r15
    fdca:	f3 94       	inc	r15
	}
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fdcc:	88 e2       	ldi	r24, 0x28	; 40
    fdce:	f8 01       	movw	r30, r16
    fdd0:	11 92       	st	Z+, r1
    fdd2:	8a 95       	dec	r24
    fdd4:	e9 f7       	brne	.-6      	; 0xfdd0 <_Z21Subscribe_MQTT_Topicsv+0x262>
	sprintf((char *)temp_sub_topic,"SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    fdd6:	8a e6       	ldi	r24, 0x6A	; 106
    fdd8:	93 e1       	ldi	r25, 0x13	; 19
    fdda:	9f 93       	push	r25
    fddc:	8f 93       	push	r24
    fdde:	84 e5       	ldi	r24, 0x54	; 84
    fde0:	96 e0       	ldi	r25, 0x06	; 6
    fde2:	9f 93       	push	r25
    fde4:	8f 93       	push	r24
    fde6:	1f 93       	push	r17
    fde8:	0f 93       	push	r16
    fdea:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fdee:	c8 01       	movw	r24, r16
    fdf0:	0e 94 90 70 	call	0xe120	; 0xe120 <_Z14MQTT_SUBSCRIBEPc>
    fdf4:	0f 90       	pop	r0
    fdf6:	0f 90       	pop	r0
    fdf8:	0f 90       	pop	r0
    fdfa:	0f 90       	pop	r0
    fdfc:	0f 90       	pop	r0
    fdfe:	0f 90       	pop	r0
    fe00:	88 23       	and	r24, r24
    fe02:	11 f0       	breq	.+4      	; 0xfe08 <_Z21Subscribe_MQTT_Topicsv+0x29a>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
    fe04:	ff 20       	and	r15, r15
    fe06:	31 f0       	breq	.+12     	; 0xfe14 <_Z21Subscribe_MQTT_Topicsv+0x2a6>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    fe08:	82 e0       	ldi	r24, 0x02	; 2
    fe0a:	80 93 a7 13 	sts	0x13A7, r24	; 0x8013a7 <_sRuble_Parameters+0x5d>
    fe0e:	ff 24       	eor	r15, r15
    fe10:	f3 94       	inc	r15
    fe12:	03 c0       	rjmp	.+6      	; 0xfe1a <_Z21Subscribe_MQTT_Topicsv+0x2ac>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
    fe14:	81 e0       	ldi	r24, 0x01	; 1
    fe16:	80 93 a7 13 	sts	0x13A7, r24	; 0x8013a7 <_sRuble_Parameters+0x5d>
	}
	
	return !temp_flag;
}
    fe1a:	81 e0       	ldi	r24, 0x01	; 1
    fe1c:	8f 25       	eor	r24, r15
    fe1e:	a8 96       	adiw	r28, 0x28	; 40
    fe20:	0f b6       	in	r0, 0x3f	; 63
    fe22:	f8 94       	cli
    fe24:	de bf       	out	0x3e, r29	; 62
    fe26:	0f be       	out	0x3f, r0	; 63
    fe28:	cd bf       	out	0x3d, r28	; 61
    fe2a:	df 91       	pop	r29
    fe2c:	cf 91       	pop	r28
    fe2e:	1f 91       	pop	r17
    fe30:	0f 91       	pop	r16
    fe32:	ff 90       	pop	r15
    fe34:	08 95       	ret

0000fe36 <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
    fe36:	0f 93       	push	r16
    fe38:	cf 93       	push	r28
	if(_gdo_not_perform_4g_oper)
    fe3a:	80 91 91 0c 	lds	r24, 0x0C91	; 0x800c91 <_gdo_not_perform_4g_oper>
    fe3e:	90 91 92 0c 	lds	r25, 0x0C92	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    fe42:	89 2b       	or	r24, r25
    fe44:	11 f0       	breq	.+4      	; 0xfe4a <_Z14Ping_to_Serverv+0x14>
	{
		return 0;
    fe46:	c0 e0       	ldi	r28, 0x00	; 0
    fe48:	72 c1       	rjmp	.+740    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
	}
	
	Reset_Buffer();
    fe4a:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
   _kSERIAL_AT.println(F("ATE0"));
    fe4e:	60 ea       	ldi	r22, 0xA0	; 160
    fe50:	78 e2       	ldi	r23, 0x28	; 40
    fe52:	82 e1       	ldi	r24, 0x12	; 18
    fe54:	96 e1       	ldi	r25, 0x16	; 22
    fe56:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
    fe5a:	02 e0       	ldi	r16, 0x02	; 2
    fe5c:	28 eb       	ldi	r18, 0xB8	; 184
    fe5e:	3b e0       	ldi	r19, 0x0B	; 11
    fe60:	40 e0       	ldi	r20, 0x00	; 0
    fe62:	50 e0       	ldi	r21, 0x00	; 0
    fe64:	6e e1       	ldi	r22, 0x1E	; 30
    fe66:	73 e0       	ldi	r23, 0x03	; 3
    fe68:	80 e0       	ldi	r24, 0x00	; 0
    fe6a:	90 e0       	ldi	r25, 0x00	; 0
    fe6c:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
	
	
	if (!Check_Sim(_eDIRESCT_CHECK))
    fe70:	83 e0       	ldi	r24, 0x03	; 3
    fe72:	0e 94 24 72 	call	0xe448	; 0xe448 <_Z9Check_Simc>
    fe76:	c8 2f       	mov	r28, r24
    fe78:	81 11       	cpse	r24, r1
    fe7a:	0f c0       	rjmp	.+30     	; 0xfe9a <_Z14Ping_to_Serverv+0x64>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe7c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    fe80:	81 30       	cpi	r24, 0x01	; 1
    fe82:	09 f7       	brne	.-62     	; 0xfe46 <_Z14Ping_to_Serverv+0x10>
		{
			_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
    fe84:	6f e8       	ldi	r22, 0x8F	; 143
    fe86:	78 e2       	ldi	r23, 0x28	; 40
    fe88:	85 e5       	ldi	r24, 0x55	; 85
    fe8a:	94 e1       	ldi	r25, 0x14	; 20
    fe8c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fe90:	85 e5       	ldi	r24, 0x55	; 85
    fe92:	94 e1       	ldi	r25, 0x14	; 20
    fe94:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
    fe98:	4a c1       	rjmp	.+660    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
		}
		return 0;
	}
	
	
	Reset_Buffer();
    fe9a:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
    fe9e:	61 e8       	ldi	r22, 0x81	; 129
    fea0:	78 e2       	ldi	r23, 0x28	; 40
    fea2:	82 e1       	ldi	r24, 0x12	; 18
    fea4:	96 e1       	ldi	r25, 0x16	; 22
    fea6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
    feaa:	01 e0       	ldi	r16, 0x01	; 1
    feac:	28 eb       	ldi	r18, 0xB8	; 184
    feae:	3b e0       	ldi	r19, 0x0B	; 11
    feb0:	40 e0       	ldi	r20, 0x00	; 0
    feb2:	50 e0       	ldi	r21, 0x00	; 0
    feb4:	6e e1       	ldi	r22, 0x1E	; 30
    feb6:	73 e0       	ldi	r23, 0x03	; 3
    feb8:	80 e0       	ldi	r24, 0x00	; 0
    feba:	90 e0       	ldi	r25, 0x00	; 0
    febc:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
    fec0:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    fec4:	88 23       	and	r24, r24
    fec6:	29 f0       	breq	.+10     	; 0xfed2 <_Z14Ping_to_Serverv+0x9c>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fec8:	91 30       	cpi	r25, 0x01	; 1
    feca:	79 f4       	brne	.+30     	; 0xfeea <_Z14Ping_to_Serverv+0xb4>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
    fecc:	65 e7       	ldi	r22, 0x75	; 117
    fece:	78 e2       	ldi	r23, 0x28	; 40
    fed0:	04 c0       	rjmp	.+8      	; 0xfeda <_Z14Ping_to_Serverv+0xa4>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fed2:	91 30       	cpi	r25, 0x01	; 1
    fed4:	51 f4       	brne	.+20     	; 0xfeea <_Z14Ping_to_Serverv+0xb4>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
    fed6:	6e e5       	ldi	r22, 0x5E	; 94
    fed8:	78 e2       	ldi	r23, 0x28	; 40
    feda:	85 e5       	ldi	r24, 0x55	; 85
    fedc:	94 e1       	ldi	r25, 0x14	; 20
    fede:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fee2:	85 e5       	ldi	r24, 0x55	; 85
    fee4:	94 e1       	ldi	r25, 0x14	; 20
    fee6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
    feea:	0e 94 e7 5f 	call	0xbfce	; 0xbfce <_Z16Gsm_Gprs_Networkv>
    feee:	c8 2f       	mov	r28, r24
    fef0:	81 11       	cpse	r24, r1
    fef2:	06 c0       	rjmp	.+12     	; 0xff00 <_Z14Ping_to_Serverv+0xca>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    fef4:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    fef8:	8b 7f       	andi	r24, 0xFB	; 251
    fefa:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
    fefe:	17 c1       	rjmp	.+558    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
		return 0;
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
    ff00:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    ff04:	80 64       	ori	r24, 0x40	; 64
    ff06:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
    ff0a:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
    ff0e:	0e 94 6c 69 	call	0xd2d8	; 0xd2d8 <_Z17Is_MQTT_Connectedv>
    ff12:	c8 2f       	mov	r28, r24
    ff14:	88 23       	and	r24, r24
    ff16:	59 f0       	breq	.+22     	; 0xff2e <_Z14Ping_to_Serverv+0xf8>
    ff18:	80 91 a7 13 	lds	r24, 0x13A7	; 0x8013a7 <_sRuble_Parameters+0x5d>
    ff1c:	82 30       	cpi	r24, 0x02	; 2
    ff1e:	39 f0       	breq	.+14     	; 0xff2e <_Z14Ping_to_Serverv+0xf8>
			return 0;
		}
	}
	else
	{
		reconnection_retry_count = _kRESET;
    ff20:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <reconnection_retry_count>
		_gdo_not_perform_4g_oper = _kRESET;
    ff24:	10 92 92 0c 	sts	0x0C92, r1	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    ff28:	10 92 91 0c 	sts	0x0C91, r1	; 0x800c91 <_gdo_not_perform_4g_oper>
    ff2c:	00 c1       	rjmp	.+512    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
	 Display_Update_1();  // 20/1/2022
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff2e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ff32:	81 30       	cpi	r24, 0x01	; 1
    ff34:	51 f4       	brne	.+20     	; 0xff4a <_Z14Ping_to_Serverv+0x114>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
    ff36:	64 e4       	ldi	r22, 0x44	; 68
    ff38:	78 e2       	ldi	r23, 0x28	; 40
    ff3a:	85 e5       	ldi	r24, 0x55	; 85
    ff3c:	94 e1       	ldi	r25, 0x14	; 20
    ff3e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    ff42:	85 e5       	ldi	r24, 0x55	; 85
    ff44:	94 e1       	ldi	r25, 0x14	; 20
    ff46:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
    ff4a:	10 92 4a 13 	sts	0x134A, r1	; 0x80134a <_sRuble_Parameters>
    ff4e:	84 e0       	ldi	r24, 0x04	; 4
    ff50:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
    ff54:	10 92 4c 13 	sts	0x134C, r1	; 0x80134c <_sRuble_Parameters+0x2>
    ff58:	10 92 4d 13 	sts	0x134D, r1	; 0x80134d <_sRuble_Parameters+0x3>
    ff5c:	10 92 4e 13 	sts	0x134E, r1	; 0x80134e <_sRuble_Parameters+0x4>
    ff60:	10 92 4f 13 	sts	0x134F, r1	; 0x80134f <_sRuble_Parameters+0x5>
    ff64:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x6>
    ff68:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
    ff6c:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
    ff70:	4b e6       	ldi	r20, 0x6B	; 107
    ff72:	56 e0       	ldi	r21, 0x06	; 6
    ff74:	6c e7       	ldi	r22, 0x7C	; 124
    ff76:	76 e0       	ldi	r23, 0x06	; 6
    ff78:	cb 01       	movw	r24, r22
    ff7a:	0e 94 a1 69 	call	0xd342	; 0xd342 <_Z12MQTT_ConnectPKcS0_S0_>
    ff7e:	c8 2f       	mov	r28, r24
    ff80:	88 23       	and	r24, r24
    ff82:	09 f4       	brne	.+2      	; 0xff86 <_Z14Ping_to_Serverv+0x150>
    ff84:	74 c0       	rjmp	.+232    	; 0x1006e <_Z14Ping_to_Serverv+0x238>
		{
			_gdo_not_perform_4g_oper = _kRESET;
    ff86:	10 92 92 0c 	sts	0x0C92, r1	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
    ff8a:	10 92 91 0c 	sts	0x0C91, r1	; 0x800c91 <_gdo_not_perform_4g_oper>
			reconnection_retry_count = _kRESET;
    ff8e:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <reconnection_retry_count>
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff92:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ff96:	81 30       	cpi	r24, 0x01	; 1
    ff98:	51 f4       	brne	.+20     	; 0xffae <_Z14Ping_to_Serverv+0x178>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
    ff9a:	60 e3       	ldi	r22, 0x30	; 48
    ff9c:	78 e2       	ldi	r23, 0x28	; 40
    ff9e:	85 e5       	ldi	r24, 0x55	; 85
    ffa0:	94 e1       	ldi	r25, 0x14	; 20
    ffa2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    ffa6:	85 e5       	ldi	r24, 0x55	; 85
    ffa8:	94 e1       	ldi	r25, 0x14	; 20
    ffaa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
    ffae:	90 91 4a 13 	lds	r25, 0x134A	; 0x80134a <_sRuble_Parameters>
    ffb2:	98 60       	ori	r25, 0x08	; 8
    ffb4:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
    ffb8:	80 68       	ori	r24, 0x80	; 128
    ffba:	90 93 4a 13 	sts	0x134A, r25	; 0x80134a <_sRuble_Parameters>
    ffbe:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
    ffc2:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
    ffc6:	d3 dd       	rcall	.-1114   	; 0xfb6e <_Z21Subscribe_MQTT_Topicsv>
    ffc8:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
    ffcc:	88 23       	and	r24, r24
    ffce:	91 f0       	breq	.+36     	; 0xfff4 <_Z14Ping_to_Serverv+0x1be>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    ffd0:	91 30       	cpi	r25, 0x01	; 1
    ffd2:	51 f4       	brne	.+20     	; 0xffe8 <_Z14Ping_to_Serverv+0x1b2>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
    ffd4:	6b e1       	ldi	r22, 0x1B	; 27
    ffd6:	78 e2       	ldi	r23, 0x28	; 40
    ffd8:	85 e5       	ldi	r24, 0x55	; 85
    ffda:	94 e1       	ldi	r25, 0x14	; 20
    ffdc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
    ffe0:	85 e5       	ldi	r24, 0x55	; 85
    ffe2:	94 e1       	ldi	r25, 0x14	; 20
    ffe4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
    ffe8:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
    ffec:	84 60       	ori	r24, 0x04	; 4
    ffee:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
    fff2:	08 c0       	rjmp	.+16     	; 0x10004 <_Z14Ping_to_Serverv+0x1ce>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    fff4:	91 30       	cpi	r25, 0x01	; 1
    fff6:	31 f4       	brne	.+12     	; 0x10004 <_Z14Ping_to_Serverv+0x1ce>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
    fff8:	62 e0       	ldi	r22, 0x02	; 2
    fffa:	78 e2       	ldi	r23, 0x28	; 40
    fffc:	85 e5       	ldi	r24, 0x55	; 85
    fffe:	94 e1       	ldi	r25, 0x14	; 20
   10000:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
   10004:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   10008:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1000c:	84 60       	ori	r24, 0x04	; 4
   1000e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   10012:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10016:	e0 91 a6 13 	lds	r30, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   1001a:	70 91 4a 13 	lds	r23, 0x134A	; 0x80134a <_sRuble_Parameters>
   1001e:	90 91 4b 13 	lds	r25, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
   10022:	80 91 4c 13 	lds	r24, 0x134C	; 0x80134c <_sRuble_Parameters+0x2>
   10026:	60 91 4d 13 	lds	r22, 0x134D	; 0x80134d <_sRuble_Parameters+0x3>
   1002a:	50 91 4e 13 	lds	r21, 0x134E	; 0x80134e <_sRuble_Parameters+0x4>
   1002e:	40 91 4f 13 	lds	r20, 0x134F	; 0x80134f <_sRuble_Parameters+0x5>
   10032:	30 91 50 13 	lds	r19, 0x1350	; 0x801350 <_sRuble_Parameters+0x6>
   10036:	20 91 51 13 	lds	r18, 0x1351	; 0x801351 <_sRuble_Parameters+0x7>
   1003a:	e1 30       	cpi	r30, 0x01	; 1
   1003c:	21 f0       	breq	.+8      	; 0x10046 <_Z14Ping_to_Serverv+0x210>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   1003e:	98 60       	ori	r25, 0x08	; 8
   10040:	90 93 4b 13 	sts	0x134B, r25	; 0x80134b <_sRuble_Parameters+0x1>
   10044:	11 c0       	rjmp	.+34     	; 0x10068 <_Z14Ping_to_Serverv+0x232>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   10046:	81 60       	ori	r24, 0x01	; 1
   10048:	70 93 4a 13 	sts	0x134A, r23	; 0x80134a <_sRuble_Parameters>
   1004c:	90 93 4b 13 	sts	0x134B, r25	; 0x80134b <_sRuble_Parameters+0x1>
   10050:	80 93 4c 13 	sts	0x134C, r24	; 0x80134c <_sRuble_Parameters+0x2>
   10054:	60 93 4d 13 	sts	0x134D, r22	; 0x80134d <_sRuble_Parameters+0x3>
   10058:	50 93 4e 13 	sts	0x134E, r21	; 0x80134e <_sRuble_Parameters+0x4>
   1005c:	40 93 4f 13 	sts	0x134F, r20	; 0x80134f <_sRuble_Parameters+0x5>
   10060:	30 93 50 13 	sts	0x1350, r19	; 0x801350 <_sRuble_Parameters+0x6>
   10064:	20 93 51 13 	sts	0x1351, r18	; 0x801351 <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   10068:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   1006c:	60 c0       	rjmp	.+192    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
			 
			 return 1;
		}
		else
		{
			reconnection_retry_count++;
   1006e:	80 91 90 0c 	lds	r24, 0x0C90	; 0x800c90 <reconnection_retry_count>
   10072:	8f 5f       	subi	r24, 0xFF	; 255
   10074:	80 93 90 0c 	sts	0x0C90, r24	; 0x800c90 <reconnection_retry_count>
			if(reconnection_retry_count > 2)
   10078:	80 91 90 0c 	lds	r24, 0x0C90	; 0x800c90 <reconnection_retry_count>
   1007c:	83 30       	cpi	r24, 0x03	; 3
   1007e:	48 f0       	brcs	.+18     	; 0x10092 <_Z14Ping_to_Serverv+0x25c>
			{
				reconnection_retry_count = _kRESET;
   10080:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <reconnection_retry_count>
				_gdo_not_perform_4g_oper = 50 * 60;
   10084:	88 eb       	ldi	r24, 0xB8	; 184
   10086:	9b e0       	ldi	r25, 0x0B	; 11
   10088:	90 93 92 0c 	sts	0x0C92, r25	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
   1008c:	80 93 91 0c 	sts	0x0C91, r24	; 0x800c91 <_gdo_not_perform_4g_oper>
   10090:	4e c0       	rjmp	.+156    	; 0x1012e <_Z14Ping_to_Serverv+0x2f8>
			}
			else
			{
				_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10092:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   10096:	8b 7f       	andi	r24, 0xFB	; 251
   10098:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   1009c:	80 91 4a 13 	lds	r24, 0x134A	; 0x80134a <_sRuble_Parameters>
   100a0:	81 60       	ori	r24, 0x01	; 1
   100a2:	80 93 4a 13 	sts	0x134A, r24	; 0x80134a <_sRuble_Parameters>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   100a6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   100aa:	81 30       	cpi	r24, 0x01	; 1
   100ac:	51 f4       	brne	.+20     	; 0x100c2 <_Z14Ping_to_Serverv+0x28c>
				{
					_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   100ae:	67 ee       	ldi	r22, 0xE7	; 231
   100b0:	77 e2       	ldi	r23, 0x27	; 39
   100b2:	85 e5       	ldi	r24, 0x55	; 85
   100b4:	94 e1       	ldi	r25, 0x14	; 20
   100b6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   100ba:	85 e5       	ldi	r24, 0x55	; 85
   100bc:	94 e1       	ldi	r25, 0x14	; 20
   100be:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
				}
				
				Reset_Buffer();
   100c2:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
   100c6:	6b ed       	ldi	r22, 0xDB	; 219
   100c8:	77 e2       	ldi	r23, 0x27	; 39
   100ca:	82 e1       	ldi	r24, 0x12	; 18
   100cc:	96 e1       	ldi	r25, 0x16	; 22
   100ce:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
   100d2:	01 e0       	ldi	r16, 0x01	; 1
   100d4:	20 e1       	ldi	r18, 0x10	; 16
   100d6:	37 e2       	ldi	r19, 0x27	; 39
   100d8:	40 e0       	ldi	r20, 0x00	; 0
   100da:	50 e0       	ldi	r21, 0x00	; 0
   100dc:	68 e6       	ldi	r22, 0x68	; 104
   100de:	73 e0       	ldi	r23, 0x03	; 3
   100e0:	80 e0       	ldi	r24, 0x00	; 0
   100e2:	90 e0       	ldi	r25, 0x00	; 0
   100e4:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
   100e8:	60 e1       	ldi	r22, 0x10	; 16
   100ea:	77 e2       	ldi	r23, 0x27	; 39
   100ec:	80 e0       	ldi	r24, 0x00	; 0
   100ee:	90 e0       	ldi	r25, 0x00	; 0
   100f0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				/*}*/
				
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   100f4:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   100f8:	81 30       	cpi	r24, 0x01	; 1
   100fa:	31 f0       	breq	.+12     	; 0x10108 <_Z14Ping_to_Serverv+0x2d2>
				{
					_kDELAY_MS(12000);
   100fc:	60 ee       	ldi	r22, 0xE0	; 224
   100fe:	7e e2       	ldi	r23, 0x2E	; 46
   10100:	80 e0       	ldi	r24, 0x00	; 0
   10102:	90 e0       	ldi	r25, 0x00	; 0
   10104:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
				}
				
				Reset_Buffer();
   10108:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
   1010c:	66 ed       	ldi	r22, 0xD6	; 214
   1010e:	77 e2       	ldi	r23, 0x27	; 39
   10110:	82 e1       	ldi	r24, 0x12	; 18
   10112:	96 e1       	ldi	r25, 0x16	; 22
   10114:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
   10118:	02 e0       	ldi	r16, 0x02	; 2
   1011a:	28 eb       	ldi	r18, 0xB8	; 184
   1011c:	3b e0       	ldi	r19, 0x0B	; 11
   1011e:	40 e0       	ldi	r20, 0x00	; 0
   10120:	50 e0       	ldi	r21, 0x00	; 0
   10122:	6e e1       	ldi	r22, 0x1E	; 30
   10124:	73 e0       	ldi	r23, 0x03	; 3
   10126:	80 e0       	ldi	r24, 0x00	; 0
   10128:	90 e0       	ldi	r25, 0x00	; 0
   1012a:	0e 94 44 66 	call	0xcc88	; 0xcc88 <_Z15Send_AT_CommandPcS_S_jh>
	{
		reconnection_retry_count = _kRESET;
		_gdo_not_perform_4g_oper = _kRESET;
		return 1;
	}
}
   1012e:	8c 2f       	mov	r24, r28
   10130:	cf 91       	pop	r28
   10132:	0f 91       	pop	r16
   10134:	08 95       	ret

00010136 <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   10136:	2f 92       	push	r2
   10138:	3f 92       	push	r3
   1013a:	4f 92       	push	r4
   1013c:	5f 92       	push	r5
   1013e:	6f 92       	push	r6
   10140:	7f 92       	push	r7
   10142:	8f 92       	push	r8
   10144:	9f 92       	push	r9
   10146:	af 92       	push	r10
   10148:	bf 92       	push	r11
   1014a:	cf 92       	push	r12
   1014c:	df 92       	push	r13
   1014e:	ef 92       	push	r14
   10150:	ff 92       	push	r15
   10152:	0f 93       	push	r16
   10154:	1f 93       	push	r17
   10156:	cf 93       	push	r28
   10158:	df 93       	push	r29
   1015a:	cd b7       	in	r28, 0x3d	; 61
   1015c:	de b7       	in	r29, 0x3e	; 62
   1015e:	a8 97       	sbiw	r28, 0x28	; 40
   10160:	0f b6       	in	r0, 0x3f	; 63
   10162:	f8 94       	cli
   10164:	de bf       	out	0x3e, r29	; 62
   10166:	0f be       	out	0x3f, r0	; 63
   10168:	cd bf       	out	0x3d, r28	; 61
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   1016a:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   1016e:	81 30       	cpi	r24, 0x01	; 1
   10170:	89 f4       	brne	.+34     	; 0x10194 <_Z11Init_Brokerv+0x5e>
	{
		 if(Ping_to_Server())
   10172:	61 de       	rcall	.-830    	; 0xfe36 <_Z14Ping_to_Serverv>
   10174:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   10178:	88 23       	and	r24, r24
   1017a:	c9 f0       	breq	.+50     	; 0x101ae <_Z11Init_Brokerv+0x78>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1017c:	91 30       	cpi	r25, 0x01	; 1
   1017e:	51 f4       	brne	.+20     	; 0x10194 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   10180:	68 e1       	ldi	r22, 0x18	; 24
   10182:	79 e2       	ldi	r23, 0x29	; 41
   10184:	85 e5       	ldi	r24, 0x55	; 85
   10186:	94 e1       	ldi	r25, 0x14	; 20
   10188:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   1018c:	85 e5       	ldi	r24, 0x55	; 85
   1018e:	94 e1       	ldi	r25, 0x14	; 20
   10190:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10194:	3e ef       	ldi	r19, 0xFE	; 254
   10196:	a3 2e       	mov	r10, r19
   10198:	3e e0       	ldi	r19, 0x0E	; 14
   1019a:	b3 2e       	mov	r11, r19
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1019c:	4a e6       	ldi	r20, 0x6A	; 106
   1019e:	e4 2e       	mov	r14, r20
   101a0:	43 e1       	ldi	r20, 0x13	; 19
   101a2:	f4 2e       	mov	r15, r20
			if(Subscribed_data_check())
			{
				if(Seperate_Out_Sub_Data())
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   101a4:	5c e6       	ldi	r21, 0x6C	; 108
   101a6:	85 2e       	mov	r8, r21
   101a8:	5f e0       	ldi	r21, 0x0F	; 15
   101aa:	95 2e       	mov	r9, r21
   101ac:	18 c0       	rjmp	.+48     	; 0x101de <_Z11Init_Brokerv+0xa8>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   101ae:	91 30       	cpi	r25, 0x01	; 1
   101b0:	89 f7       	brne	.-30     	; 0x10194 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   101b2:	62 e0       	ldi	r22, 0x02	; 2
   101b4:	79 e2       	ldi	r23, 0x29	; 41
   101b6:	e6 cf       	rjmp	.-52     	; 0x10184 <_Z11Init_Brokerv+0x4e>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   101b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   101bc:	81 30       	cpi	r24, 0x01	; 1
   101be:	51 f4       	brne	.+20     	; 0x101d4 <_Z11Init_Brokerv+0x9e>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   101c0:	6f ed       	ldi	r22, 0xDF	; 223
   101c2:	78 e2       	ldi	r23, 0x28	; 40
   101c4:	85 e5       	ldi	r24, 0x55	; 85
   101c6:	94 e1       	ldi	r25, 0x14	; 20
   101c8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   101cc:	85 e5       	ldi	r24, 0x55	; 85
   101ce:	94 e1       	ldi	r25, 0x14	; 20
   101d0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   101d4:	80 91 56 0d 	lds	r24, 0x0D56	; 0x800d56 <_ZZ11Init_BrokervE13connect_count>
   101d8:	83 30       	cpi	r24, 0x03	; 3
   101da:	08 f4       	brcc	.+2      	; 0x101de <_Z11Init_Brokerv+0xa8>
   101dc:	5c c0       	rjmp	.+184    	; 0x10296 <_Z11Init_Brokerv+0x160>
	
	//_kLCD_CLEAR();
	
	unsigned char temp_topic[40];   
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   101de:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   101e2:	8e 01       	movw	r16, r28
   101e4:	0f 5f       	subi	r16, 0xFF	; 255
   101e6:	1f 4f       	sbci	r17, 0xFF	; 255
   101e8:	81 30       	cpi	r24, 0x01	; 1
   101ea:	f1 f1       	breq	.+124    	; 0x10268 <_Z11Init_Brokerv+0x132>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   101ec:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   101f0:	8e e6       	ldi	r24, 0x6E	; 110
   101f2:	d5 01       	movw	r26, r10
   101f4:	1d 92       	st	X+, r1
   101f6:	8a 95       	dec	r24
   101f8:	e9 f7       	brne	.-6      	; 0x101f4 <_Z11Init_Brokerv+0xbe>
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   101fa:	88 e2       	ldi	r24, 0x28	; 40
   101fc:	f8 01       	movw	r30, r16
   101fe:	11 92       	st	Z+, r1
   10200:	8a 95       	dec	r24
   10202:	e9 f7       	brne	.-6      	; 0x101fe <_Z11Init_Brokerv+0xc8>
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10204:	67 e8       	ldi	r22, 0x87	; 135
   10206:	76 e0       	ldi	r23, 0x06	; 6
   10208:	8e ef       	ldi	r24, 0xFE	; 254
   1020a:	9e e0       	ldi	r25, 0x0E	; 14
   1020c:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   10210:	ff 92       	push	r15
   10212:	ef 92       	push	r14
   10214:	8a e9       	ldi	r24, 0x9A	; 154
   10216:	96 e0       	ldi	r25, 0x06	; 6
   10218:	9f 93       	push	r25
   1021a:	8f 93       	push	r24
   1021c:	1f 93       	push	r17
   1021e:	0f 93       	push	r16
   10220:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
		//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
   10224:	6e ef       	ldi	r22, 0xFE	; 254
   10226:	7e e0       	ldi	r23, 0x0E	; 14
   10228:	cb 01       	movw	r24, r22
   1022a:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   1022e:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   10232:	2b 01       	movw	r4, r22
   10234:	3c 01       	movw	r6, r24
   10236:	0f 90       	pop	r0
   10238:	0f 90       	pop	r0
   1023a:	0f 90       	pop	r0
   1023c:	0f 90       	pop	r0
   1023e:	0f 90       	pop	r0
   10240:	0f 90       	pop	r0
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10242:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   10246:	dc 01       	movw	r26, r24
   10248:	cb 01       	movw	r24, r22
   1024a:	84 19       	sub	r24, r4
   1024c:	95 09       	sbc	r25, r5
   1024e:	a6 09       	sbc	r26, r6
   10250:	b7 09       	sbc	r27, r7
   10252:	88 39       	cpi	r24, 0x98	; 152
   10254:	9a 43       	sbci	r25, 0x3A	; 58
   10256:	a1 05       	cpc	r26, r1
   10258:	b1 05       	cpc	r27, r1
   1025a:	b0 f4       	brcc	.+44     	; 0x10288 <_Z11Init_Brokerv+0x152>
   1025c:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   10260:	81 30       	cpi	r24, 0x01	; 1
   10262:	09 f0       	breq	.+2      	; 0x10266 <_Z11Init_Brokerv+0x130>
   10264:	65 c0       	rjmp	.+202    	; 0x10330 <_Z11Init_Brokerv+0x1fa>
   10266:	10 c0       	rjmp	.+32     	; 0x10288 <_Z11Init_Brokerv+0x152>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10268:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1026c:	81 30       	cpi	r24, 0x01	; 1
   1026e:	09 f0       	breq	.+2      	; 0x10272 <_Z11Init_Brokerv+0x13c>
   10270:	30 c1       	rjmp	.+608    	; 0x104d2 <_Z11Init_Brokerv+0x39c>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   10272:	65 ea       	ldi	r22, 0xA5	; 165
   10274:	78 e2       	ldi	r23, 0x28	; 40
   10276:	85 e5       	ldi	r24, 0x55	; 85
   10278:	94 e1       	ldi	r25, 0x14	; 20
   1027a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   1027e:	85 e5       	ldi	r24, 0x55	; 85
   10280:	94 e1       	ldi	r25, 0x14	; 20
   10282:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   10286:	25 c1       	rjmp	.+586    	; 0x104d2 <_Z11Init_Brokerv+0x39c>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   10288:	10 92 56 0d 	sts	0x0D56, r1	; 0x800d56 <_ZZ11Init_BrokervE13connect_count>
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1028c:	8a e9       	ldi	r24, 0x9A	; 154
   1028e:	c8 2e       	mov	r12, r24
   10290:	86 e0       	ldi	r24, 0x06	; 6
   10292:	d8 2e       	mov	r13, r24
   10294:	9f cf       	rjmp	.-194    	; 0x101d4 <_Z11Init_Brokerv+0x9e>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10296:	90 91 a6 13 	lds	r25, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   1029a:	91 30       	cpi	r25, 0x01	; 1
   1029c:	09 f4       	brne	.+2      	; 0x102a0 <_Z11Init_Brokerv+0x16a>
   1029e:	9f cf       	rjmp	.-194    	; 0x101de <_Z11Init_Brokerv+0xa8>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   102a0:	8f 5f       	subi	r24, 0xFF	; 255
   102a2:	80 93 56 0d 	sts	0x0D56, r24	; 0x800d56 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   102a6:	c7 dd       	rcall	.-1138   	; 0xfe36 <_Z14Ping_to_Serverv>
   102a8:	88 23       	and	r24, r24
   102aa:	09 f4       	brne	.+2      	; 0x102ae <_Z11Init_Brokerv+0x178>
   102ac:	85 cf       	rjmp	.-246    	; 0x101b8 <_Z11Init_Brokerv+0x82>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   102ae:	80 91 4b 13 	lds	r24, 0x134B	; 0x80134b <_sRuble_Parameters+0x1>
   102b2:	88 60       	ori	r24, 0x08	; 8
   102b4:	80 93 4b 13 	sts	0x134B, r24	; 0x80134b <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   102b8:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
				 
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   102bc:	8e e6       	ldi	r24, 0x6E	; 110
   102be:	d5 01       	movw	r26, r10
   102c0:	1d 92       	st	X+, r1
   102c2:	8a 95       	dec	r24
   102c4:	e9 f7       	brne	.-6      	; 0x102c0 <_Z11Init_Brokerv+0x18a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   102c6:	88 e2       	ldi	r24, 0x28	; 40
   102c8:	f8 01       	movw	r30, r16
   102ca:	11 92       	st	Z+, r1
   102cc:	8a 95       	dec	r24
   102ce:	e9 f7       	brne	.-6      	; 0x102ca <_Z11Init_Brokerv+0x194>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   102d0:	67 e8       	ldi	r22, 0x87	; 135
   102d2:	76 e0       	ldi	r23, 0x06	; 6
   102d4:	8e ef       	ldi	r24, 0xFE	; 254
   102d6:	9e e0       	ldi	r25, 0x0E	; 14
   102d8:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   102dc:	ff 92       	push	r15
   102de:	ef 92       	push	r14
   102e0:	df 92       	push	r13
   102e2:	cf 92       	push	r12
   102e4:	1f 93       	push	r17
   102e6:	0f 93       	push	r16
   102e8:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
				 //MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   102ec:	6e ef       	ldi	r22, 0xFE	; 254
   102ee:	7e e0       	ldi	r23, 0x0E	; 14
   102f0:	c8 01       	movw	r24, r16
   102f2:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
				 
				previous = millis();
   102f6:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   102fa:	2b 01       	movw	r4, r22
   102fc:	3c 01       	movw	r6, r24
   102fe:	0f 90       	pop	r0
   10300:	0f 90       	pop	r0
   10302:	0f 90       	pop	r0
   10304:	0f 90       	pop	r0
   10306:	0f 90       	pop	r0
   10308:	0f 90       	pop	r0
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1030a:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   1030e:	dc 01       	movw	r26, r24
   10310:	cb 01       	movw	r24, r22
   10312:	84 19       	sub	r24, r4
   10314:	95 09       	sbc	r25, r5
   10316:	a6 09       	sbc	r26, r6
   10318:	b7 09       	sbc	r27, r7
   1031a:	88 39       	cpi	r24, 0x98	; 152
   1031c:	9a 43       	sbci	r25, 0x3A	; 58
   1031e:	a1 05       	cpc	r26, r1
   10320:	b1 05       	cpc	r27, r1
   10322:	00 f5       	brcc	.+64     	; 0x10364 <_Z11Init_Brokerv+0x22e>
   10324:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   10328:	81 30       	cpi	r24, 0x01	; 1
   1032a:	09 f0       	breq	.+2      	; 0x1032e <_Z11Init_Brokerv+0x1f8>
   1032c:	86 c0       	rjmp	.+268    	; 0x1043a <_Z11Init_Brokerv+0x304>
   1032e:	1a c0       	rjmp	.+52     	; 0x10364 <_Z11Init_Brokerv+0x22e>
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   10330:	0e 94 26 71 	call	0xe24c	; 0xe24c <_Z21Subscribed_data_checkv>
   10334:	88 23       	and	r24, r24
   10336:	09 f4       	brne	.+2      	; 0x1033a <_Z11Init_Brokerv+0x204>
   10338:	84 cf       	rjmp	.-248    	; 0x10242 <_Z11Init_Brokerv+0x10c>
			{
				if(Seperate_Out_Sub_Data())
   1033a:	0e 94 1e 64 	call	0xc83c	; 0xc83c <_Z21Seperate_Out_Sub_Datav>
   1033e:	88 23       	and	r24, r24
   10340:	09 f4       	brne	.+2      	; 0x10344 <_Z11Init_Brokerv+0x20e>
   10342:	7f cf       	rjmp	.-258    	; 0x10242 <_Z11Init_Brokerv+0x10c>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10344:	f4 01       	movw	r30, r8
   10346:	01 90       	ld	r0, Z+
   10348:	00 20       	and	r0, r0
   1034a:	e9 f7       	brne	.-6      	; 0x10346 <_Z11Init_Brokerv+0x210>
   1034c:	31 97       	sbiw	r30, 0x01	; 1
   1034e:	af 01       	movw	r20, r30
   10350:	4c 56       	subi	r20, 0x6C	; 108
   10352:	5f 40       	sbci	r21, 0x0F	; 15
   10354:	21 e0       	ldi	r18, 0x01	; 1
   10356:	6c e6       	ldi	r22, 0x6C	; 108
   10358:	7f e0       	ldi	r23, 0x0F	; 15
   1035a:	8e ef       	ldi	r24, 0xFE	; 254
   1035c:	9e e0       	ldi	r25, 0x0E	; 14
   1035e:	0e 94 9f 91 	call	0x1233e	; 0x1233e <_Z12Pub_Sub_DataPcPhjh>
   10362:	6f cf       	rjmp	.-290    	; 0x10242 <_Z11Init_Brokerv+0x10c>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   10364:	10 92 56 0d 	sts	0x0D56, r1	; 0x800d56 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10368:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1036c:	81 30       	cpi	r24, 0x01	; 1
   1036e:	51 f4       	brne	.+20     	; 0x10384 <_Z11Init_Brokerv+0x24e>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   10370:	63 ef       	ldi	r22, 0xF3	; 243
   10372:	78 e2       	ldi	r23, 0x28	; 40
   10374:	85 e5       	ldi	r24, 0x55	; 85
   10376:	94 e1       	ldi	r25, 0x14	; 20
   10378:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   1037c:	85 e5       	ldi	r24, 0x55	; 85
   1037e:	94 e1       	ldi	r25, 0x14	; 20
   10380:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   10384:	10 92 55 0d 	sts	0x0D55, r1	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   10388:	10 92 54 0d 	sts	0x0D54, r1	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1038c:	9e e6       	ldi	r25, 0x6E	; 110
   1038e:	79 2e       	mov	r7, r25
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10390:	28 e2       	ldi	r18, 0x28	; 40
   10392:	62 2e       	mov	r6, r18
				 continue;
			 }
			 
			loop_count = 0;
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   10394:	80 91 54 0d 	lds	r24, 0x0D54	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
   10398:	90 91 55 0d 	lds	r25, 0x0D55	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   1039c:	0a 97       	sbiw	r24, 0x0a	; 10
   1039e:	08 f0       	brcs	.+2      	; 0x103a2 <_Z11Init_Brokerv+0x26c>
   103a0:	47 c0       	rjmp	.+142    	; 0x10430 <_Z11Init_Brokerv+0x2fa>
   103a2:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   103a6:	81 30       	cpi	r24, 0x01	; 1
   103a8:	09 f4       	brne	.+2      	; 0x103ac <_Z11Init_Brokerv+0x276>
   103aa:	42 c0       	rjmp	.+132    	; 0x10430 <_Z11Init_Brokerv+0x2fa>
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   103ac:	d5 01       	movw	r26, r10
   103ae:	e7 2d       	mov	r30, r7
   103b0:	1d 92       	st	X+, r1
   103b2:	ea 95       	dec	r30
   103b4:	e9 f7       	brne	.-6      	; 0x103b0 <_Z11Init_Brokerv+0x27a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   103b6:	d8 01       	movw	r26, r16
   103b8:	e6 2d       	mov	r30, r6
   103ba:	1d 92       	st	X+, r1
   103bc:	ea 95       	dec	r30
   103be:	e9 f7       	brne	.-6      	; 0x103ba <_Z11Init_Brokerv+0x284>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   103c0:	67 e8       	ldi	r22, 0x87	; 135
   103c2:	76 e0       	ldi	r23, 0x06	; 6
   103c4:	8e ef       	ldi	r24, 0xFE	; 254
   103c6:	9e e0       	ldi	r25, 0x0E	; 14
   103c8:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   103cc:	ff 92       	push	r15
   103ce:	ef 92       	push	r14
   103d0:	df 92       	push	r13
   103d2:	cf 92       	push	r12
   103d4:	1f 93       	push	r17
   103d6:	0f 93       	push	r16
   103d8:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
				// MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   103dc:	6e ef       	ldi	r22, 0xFE	; 254
   103de:	7e e0       	ldi	r23, 0x0E	; 14
   103e0:	c8 01       	movw	r24, r16
   103e2:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
				
				loop_count++;
   103e6:	80 91 54 0d 	lds	r24, 0x0D54	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
   103ea:	90 91 55 0d 	lds	r25, 0x0D55	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   103ee:	01 96       	adiw	r24, 0x01	; 1
   103f0:	90 93 55 0d 	sts	0x0D55, r25	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   103f4:	80 93 54 0d 	sts	0x0D54, r24	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   103f8:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   103fc:	1b 01       	movw	r2, r22
   103fe:	2c 01       	movw	r4, r24
   10400:	0f 90       	pop	r0
   10402:	0f 90       	pop	r0
   10404:	0f 90       	pop	r0
   10406:	0f 90       	pop	r0
   10408:	0f 90       	pop	r0
   1040a:	0f 90       	pop	r0
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1040c:	0e 94 5c d3 	call	0x1a6b8	; 0x1a6b8 <millis>
   10410:	dc 01       	movw	r26, r24
   10412:	cb 01       	movw	r24, r22
   10414:	82 19       	sub	r24, r2
   10416:	93 09       	sbc	r25, r3
   10418:	a4 09       	sbc	r26, r4
   1041a:	b5 09       	sbc	r27, r5
   1041c:	88 3a       	cpi	r24, 0xA8	; 168
   1041e:	91 46       	sbci	r25, 0x61	; 97
   10420:	a1 05       	cpc	r26, r1
   10422:	b1 05       	cpc	r27, r1
   10424:	e0 f5       	brcc	.+120    	; 0x1049e <_Z11Init_Brokerv+0x368>
   10426:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sRuble_Parameters+0x5c>
   1042a:	81 30       	cpi	r24, 0x01	; 1
   1042c:	01 f5       	brne	.+64     	; 0x1046e <_Z11Init_Brokerv+0x338>
   1042e:	37 c0       	rjmp	.+110    	; 0x1049e <_Z11Init_Brokerv+0x368>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   10430:	10 92 55 0d 	sts	0x0D55, r1	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   10434:	10 92 54 0d 	sts	0x0D54, r1	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
   10438:	cd ce       	rjmp	.-614    	; 0x101d4 <_Z11Init_Brokerv+0x9e>
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
				 
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   1043a:	0e 94 26 71 	call	0xe24c	; 0xe24c <_Z21Subscribed_data_checkv>
   1043e:	88 23       	and	r24, r24
   10440:	09 f4       	brne	.+2      	; 0x10444 <_Z11Init_Brokerv+0x30e>
   10442:	63 cf       	rjmp	.-314    	; 0x1030a <_Z11Init_Brokerv+0x1d4>
					 {
						 if(Seperate_Out_Sub_Data())
   10444:	0e 94 1e 64 	call	0xc83c	; 0xc83c <_Z21Seperate_Out_Sub_Datav>
   10448:	88 23       	and	r24, r24
   1044a:	09 f4       	brne	.+2      	; 0x1044e <_Z11Init_Brokerv+0x318>
   1044c:	5e cf       	rjmp	.-324    	; 0x1030a <_Z11Init_Brokerv+0x1d4>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1044e:	f4 01       	movw	r30, r8
   10450:	01 90       	ld	r0, Z+
   10452:	00 20       	and	r0, r0
   10454:	e9 f7       	brne	.-6      	; 0x10450 <_Z11Init_Brokerv+0x31a>
   10456:	31 97       	sbiw	r30, 0x01	; 1
   10458:	af 01       	movw	r20, r30
   1045a:	4c 56       	subi	r20, 0x6C	; 108
   1045c:	5f 40       	sbci	r21, 0x0F	; 15
   1045e:	21 e0       	ldi	r18, 0x01	; 1
   10460:	6c e6       	ldi	r22, 0x6C	; 108
   10462:	7f e0       	ldi	r23, 0x0F	; 15
   10464:	8e ef       	ldi	r24, 0xFE	; 254
   10466:	9e e0       	ldi	r25, 0x0E	; 14
   10468:	0e 94 9f 91 	call	0x1233e	; 0x1233e <_Z12Pub_Sub_DataPcPhjh>
   1046c:	4e cf       	rjmp	.-356    	; 0x1030a <_Z11Init_Brokerv+0x1d4>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   1046e:	0e 94 26 71 	call	0xe24c	; 0xe24c <_Z21Subscribed_data_checkv>
   10472:	88 23       	and	r24, r24
   10474:	59 f2       	breq	.-106    	; 0x1040c <_Z11Init_Brokerv+0x2d6>
					{
						if(Seperate_Out_Sub_Data())
   10476:	0e 94 1e 64 	call	0xc83c	; 0xc83c <_Z21Seperate_Out_Sub_Datav>
   1047a:	88 23       	and	r24, r24
   1047c:	39 f2       	breq	.-114    	; 0x1040c <_Z11Init_Brokerv+0x2d6>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1047e:	f4 01       	movw	r30, r8
   10480:	01 90       	ld	r0, Z+
   10482:	00 20       	and	r0, r0
   10484:	e9 f7       	brne	.-6      	; 0x10480 <_Z11Init_Brokerv+0x34a>
   10486:	31 97       	sbiw	r30, 0x01	; 1
   10488:	af 01       	movw	r20, r30
   1048a:	4c 56       	subi	r20, 0x6C	; 108
   1048c:	5f 40       	sbci	r21, 0x0F	; 15
   1048e:	21 e0       	ldi	r18, 0x01	; 1
   10490:	6c e6       	ldi	r22, 0x6C	; 108
   10492:	7f e0       	ldi	r23, 0x0F	; 15
   10494:	8e ef       	ldi	r24, 0xFE	; 254
   10496:	9e e0       	ldi	r25, 0x0E	; 14
   10498:	0e 94 9f 91 	call	0x1233e	; 0x1233e <_Z12Pub_Sub_DataPcPhjh>
   1049c:	b7 cf       	rjmp	.-146    	; 0x1040c <_Z11Init_Brokerv+0x2d6>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   1049e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   104a2:	81 30       	cpi	r24, 0x01	; 1
   104a4:	09 f0       	breq	.+2      	; 0x104a8 <_Z11Init_Brokerv+0x372>
   104a6:	76 cf       	rjmp	.-276    	; 0x10394 <_Z11Init_Brokerv+0x25e>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   104a8:	64 ec       	ldi	r22, 0xC4	; 196
   104aa:	78 e2       	ldi	r23, 0x28	; 40
   104ac:	85 e5       	ldi	r24, 0x55	; 85
   104ae:	94 e1       	ldi	r25, 0x14	; 20
   104b0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   104b4:	60 91 54 0d 	lds	r22, 0x0D54	; 0x800d54 <_ZZ11Init_BrokervE10loop_count>
   104b8:	70 91 55 0d 	lds	r23, 0x0D55	; 0x800d55 <_ZZ11Init_BrokervE10loop_count+0x1>
   104bc:	4a e0       	ldi	r20, 0x0A	; 10
   104be:	50 e0       	ldi	r21, 0x00	; 0
   104c0:	85 e5       	ldi	r24, 0x55	; 85
   104c2:	94 e1       	ldi	r25, 0x14	; 20
   104c4:	0e 94 b8 d1 	call	0x1a370	; 0x1a370 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   104c8:	85 e5       	ldi	r24, 0x55	; 85
   104ca:	94 e1       	ldi	r25, 0x14	; 20
   104cc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   104d0:	61 cf       	rjmp	.-318    	; 0x10394 <_Z11Init_Brokerv+0x25e>

	/******************* published the topic that Ruble is Restarted ********************/
	//unsigned char temp[33];
	//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	
	memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   104d2:	8e e6       	ldi	r24, 0x6E	; 110
   104d4:	ee ef       	ldi	r30, 0xFE	; 254
   104d6:	fe e0       	ldi	r31, 0x0E	; 14
   104d8:	df 01       	movw	r26, r30
   104da:	1d 92       	st	X+, r1
   104dc:	8a 95       	dec	r24
   104de:	e9 f7       	brne	.-6      	; 0x104da <_Z11Init_Brokerv+0x3a4>
	sprintf((char *)_gRecvd_Data,"{\"sicca_start\": \"true\"}");
   104e0:	69 ea       	ldi	r22, 0xA9	; 169
   104e2:	76 e0       	ldi	r23, 0x06	; 6
   104e4:	cf 01       	movw	r24, r30
   104e6:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
	memset((char *)temp_topic, 0, sizeof(temp_topic));
   104ea:	88 e2       	ldi	r24, 0x28	; 40
   104ec:	f8 01       	movw	r30, r16
   104ee:	11 92       	st	Z+, r1
   104f0:	8a 95       	dec	r24
   104f2:	e9 f7       	brne	.-6      	; 0x104ee <_Z11Init_Brokerv+0x3b8>
	
	sprintf((char *)temp_topic,"SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);
   104f4:	8a e6       	ldi	r24, 0x6A	; 106
   104f6:	93 e1       	ldi	r25, 0x13	; 19
   104f8:	9f 93       	push	r25
   104fa:	8f 93       	push	r24
   104fc:	81 ec       	ldi	r24, 0xC1	; 193
   104fe:	96 e0       	ldi	r25, 0x06	; 6
   10500:	9f 93       	push	r25
   10502:	8f 93       	push	r24
   10504:	1f 93       	push	r17
   10506:	0f 93       	push	r16
   10508:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
	
	//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	
	MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1050c:	6e ef       	ldi	r22, 0xFE	; 254
   1050e:	7e e0       	ldi	r23, 0x0E	; 14
   10510:	c8 01       	movw	r24, r16
   10512:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   10516:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1051a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1051e:	84 60       	ori	r24, 0x04	; 4
   10520:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   10524:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
	
}
   10528:	0f 90       	pop	r0
   1052a:	0f 90       	pop	r0
   1052c:	0f 90       	pop	r0
   1052e:	0f 90       	pop	r0
   10530:	0f 90       	pop	r0
   10532:	0f 90       	pop	r0
   10534:	80 e0       	ldi	r24, 0x00	; 0
   10536:	a8 96       	adiw	r28, 0x28	; 40
   10538:	0f b6       	in	r0, 0x3f	; 63
   1053a:	f8 94       	cli
   1053c:	de bf       	out	0x3e, r29	; 62
   1053e:	0f be       	out	0x3f, r0	; 63
   10540:	cd bf       	out	0x3d, r28	; 61
   10542:	df 91       	pop	r29
   10544:	cf 91       	pop	r28
   10546:	1f 91       	pop	r17
   10548:	0f 91       	pop	r16
   1054a:	ff 90       	pop	r15
   1054c:	ef 90       	pop	r14
   1054e:	df 90       	pop	r13
   10550:	cf 90       	pop	r12
   10552:	bf 90       	pop	r11
   10554:	af 90       	pop	r10
   10556:	9f 90       	pop	r9
   10558:	8f 90       	pop	r8
   1055a:	7f 90       	pop	r7
   1055c:	6f 90       	pop	r6
   1055e:	5f 90       	pop	r5
   10560:	4f 90       	pop	r4
   10562:	3f 90       	pop	r3
   10564:	2f 90       	pop	r2
   10566:	08 95       	ret

00010568 <initVariant>:
   10568:	08 95       	ret

0001056a <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   1056a:	0e 94 d2 d3 	call	0x1a7a4	; 0x1a7a4 <init>

	initVariant();
   1056e:	fc df       	rcall	.-8      	; 0x10568 <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Interrupt_Time_Out = 1300;
   10570:	84 e1       	ldi	r24, 0x14	; 20
   10572:	95 e0       	ldi	r25, 0x05	; 5
   10574:	90 93 95 0c 	sts	0x0C95, r25	; 0x800c95 <Interrupt_Time_Out+0x1>
   10578:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <Interrupt_Time_Out>
	
	Initialise_Hardware();
   1057c:	0e 94 57 6e 	call	0xdcae	; 0xdcae <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   10580:	8d d9       	rcall	.-3302   	; 0xf89c <_Z20Param_Initializationv>
	
	while (_kSERAIL_AT_CHECK())
   10582:	82 e1       	ldi	r24, 0x12	; 18
   10584:	96 e1       	ldi	r25, 0x16	; 22
   10586:	0e 94 e2 ce 	call	0x19dc4	; 0x19dc4 <_ZN14HardwareSerial9availableEv>
   1058a:	89 2b       	or	r24, r25
   1058c:	29 f0       	breq	.+10     	; 0x10598 <main+0x2e>
	{
		_kSERIAL_AT_READ();
   1058e:	82 e1       	ldi	r24, 0x12	; 18
   10590:	96 e1       	ldi	r25, 0x16	; 22
   10592:	0e 94 03 cf 	call	0x19e06	; 0x19e06 <_ZN14HardwareSerial4readEv>
	
	Initialise_Hardware();
	
	Param_Initialization();
	
	while (_kSERAIL_AT_CHECK())
   10596:	f5 cf       	rjmp	.-22     	; 0x10582 <main+0x18>
	{
		_kSERIAL_AT_READ();
	}
	
	Reading_Time = _kSET;
   10598:	c1 e0       	ldi	r28, 0x01	; 1
   1059a:	c0 93 93 0c 	sts	0x0C93, r28	; 0x800c93 <Reading_Time>
	Get_Local_Time();
   1059e:	0e 94 62 5e 	call	0xbcc4	; 0xbcc4 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   105a2:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <Reading_Time>
	Check_GSM_Signal();
   105a6:	0e 94 14 5e 	call	0xbc28	; 0xbc28 <_Z16Check_GSM_Signalv>

	Start_Display_In_Interrupt = 1;
   105aa:	c0 93 71 0c 	sts	0x0C71, r28	; 0x800c71 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   105ae:	c0 93 fb 13 	sts	0x13FB, r28	; 0x8013fb <_sRuble_Parameters+0xb1>
   
	tickcount = g_uTick;
   105b2:	80 91 82 0c 	lds	r24, 0x0C82	; 0x800c82 <g_uTick>
   105b6:	90 91 83 0c 	lds	r25, 0x0C83	; 0x800c83 <g_uTick+0x1>
   105ba:	a0 91 84 0c 	lds	r26, 0x0C84	; 0x800c84 <g_uTick+0x2>
   105be:	b0 91 85 0c 	lds	r27, 0x0C85	; 0x800c85 <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   105c2:	10 92 fe 13 	sts	0x13FE, r1	; 0x8013fe <_sRuble_Parameters+0xb4>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   105c6:	84 e0       	ldi	r24, 0x04	; 4
   105c8:	80 93 52 13 	sts	0x1352, r24	; 0x801352 <_sRuble_Parameters+0x8>
   105cc:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0x9>
   105d0:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xa>
   105d4:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xb>
   105d8:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xc>
   105dc:	10 92 57 13 	sts	0x1357, r1	; 0x801357 <_sRuble_Parameters+0xd>
   105e0:	10 92 58 13 	sts	0x1358, r1	; 0x801358 <_sRuble_Parameters+0xe>
   105e4:	10 92 59 13 	sts	0x1359, r1	; 0x801359 <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   105e8:	83 e0       	ldi	r24, 0x03	; 3
   105ea:	0e 94 e0 ac 	call	0x159c0	; 0x159c0 <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   105ee:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   105f2:	81 30       	cpi	r24, 0x01	; 1
   105f4:	c1 f4       	brne	.+48     	; 0x10626 <main+0xbc>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   105f6:	6c e3       	ldi	r22, 0x3C	; 60
   105f8:	79 e2       	ldi	r23, 0x29	; 41
   105fa:	85 e5       	ldi	r24, 0x55	; 85
   105fc:	94 e1       	ldi	r25, 0x14	; 20
   105fe:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   10602:	40 91 40 13 	lds	r20, 0x1340	; 0x801340 <_sPump_Parameter>
   10606:	50 91 41 13 	lds	r21, 0x1341	; 0x801341 <_sPump_Parameter+0x1>
   1060a:	60 91 42 13 	lds	r22, 0x1342	; 0x801342 <_sPump_Parameter+0x2>
   1060e:	70 91 43 13 	lds	r23, 0x1343	; 0x801343 <_sPump_Parameter+0x3>
   10612:	22 e0       	ldi	r18, 0x02	; 2
   10614:	30 e0       	ldi	r19, 0x00	; 0
   10616:	85 e5       	ldi	r24, 0x55	; 85
   10618:	94 e1       	ldi	r25, 0x14	; 20
   1061a:	0e 94 02 d3 	call	0x1a604	; 0x1a604 <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   1061e:	85 e5       	ldi	r24, 0x55	; 85
   10620:	94 e1       	ldi	r25, 0x14	; 20
   10622:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   10626:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   1062a:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   1062e:	86 e9       	ldi	r24, 0x96	; 150
   10630:	90 e0       	ldi	r25, 0x00	; 0
   10632:	90 93 0c 14 	sts	0x140C, r25	; 0x80140c <_sRuble_Parameters+0xc2>
   10636:	80 93 0b 14 	sts	0x140B, r24	; 0x80140b <_sRuble_Parameters+0xc1>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   1063a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1063e:	81 30       	cpi	r24, 0x01	; 1
   10640:	91 f4       	brne	.+36     	; 0x10666 <main+0xfc>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   10642:	69 e2       	ldi	r22, 0x29	; 41
   10644:	79 e2       	ldi	r23, 0x29	; 41
   10646:	85 e5       	ldi	r24, 0x55	; 85
   10648:	94 e1       	ldi	r25, 0x14	; 20
   1064a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   1064e:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
   10652:	4a e0       	ldi	r20, 0x0A	; 10
   10654:	50 e0       	ldi	r21, 0x00	; 0
   10656:	85 e5       	ldi	r24, 0x55	; 85
   10658:	94 e1       	ldi	r25, 0x14	; 20
   1065a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   1065e:	85 e5       	ldi	r24, 0x55	; 85
   10660:	94 e1       	ldi	r25, 0x14	; 20
   10662:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   10666:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   1066a:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xde>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   1066e:	10 92 09 14 	sts	0x1409, r1	; 0x801409 <_sRuble_Parameters+0xbf>
	_sRuble_Parameters.Electricity_Status        = _kON;
   10672:	c1 e0       	ldi	r28, 0x01	; 1
   10674:	c0 93 f8 13 	sts	0x13F8, r28	; 0x8013f8 <_sRuble_Parameters+0xae>
	
	Select_Operation_Mode();
   10678:	0e 94 af be 	call	0x17d5e	; 0x17d5e <_Z21Select_Operation_Modev>

	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   1067c:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10680:	10 92 f0 0d 	sts	0x0DF0, r1	; 0x800df0 <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   10684:	c0 93 f2 0d 	sts	0x0DF2, r28	; 0x800df2 <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10688:	10 92 9f 0d 	sts	0x0D9F, r1	; 0x800d9f <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   1068c:	85 e0       	ldi	r24, 0x05	; 5
   1068e:	80 93 a1 0d 	sts	0x0DA1, r24	; 0x800da1 <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10692:	10 92 d5 0d 	sts	0x0DD5, r1	; 0x800dd5 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10696:	10 92 ee 0d 	sts	0x0DEE, r1	; 0x800dee <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   1069a:	10 92 d7 0d 	sts	0x0DD7, r1	; 0x800dd7 <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   1069e:	10 92 ef 0d 	sts	0x0DEF, r1	; 0x800def <_sExtra_Plot+0x6b>
	
	delay(5000);
   106a2:	68 e8       	ldi	r22, 0x88	; 136
   106a4:	73 e1       	ldi	r23, 0x13	; 19
   106a6:	80 e0       	ldi	r24, 0x00	; 0
   106a8:	90 e0       	ldi	r25, 0x00	; 0
   106aa:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
	Reading_Time = _kSET;
   106ae:	c0 93 93 0c 	sts	0x0C93, r28	; 0x800c93 <Reading_Time>
	Get_Local_Time();
   106b2:	0e 94 62 5e 	call	0xbcc4	; 0xbcc4 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   106b6:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <Reading_Time>
	

	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   106ba:	80 91 fc 0d 	lds	r24, 0x0DFC	; 0x800dfc <_sExtra_Plot+0x78>
   106be:	90 91 fd 0d 	lds	r25, 0x0DFD	; 0x800dfd <_sExtra_Plot+0x79>
   106c2:	00 97       	sbiw	r24, 0x00	; 0
   106c4:	01 f1       	breq	.+64     	; 0x10706 <main+0x19c>
   106c6:	20 91 f1 0d 	lds	r18, 0x0DF1	; 0x800df1 <_sExtra_Plot+0x6d>
   106ca:	29 36       	cpi	r18, 0x69	; 105
   106cc:	e1 f4       	brne	.+56     	; 0x10706 <main+0x19c>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   106ce:	60 91 02 0e 	lds	r22, 0x0E02	; 0x800e02 <_sExtra_Plot+0x7e>
   106d2:	70 91 03 0e 	lds	r23, 0x0E03	; 0x800e03 <_sExtra_Plot+0x7f>
   106d6:	40 e1       	ldi	r20, 0x10	; 16
   106d8:	5e e0       	ldi	r21, 0x0E	; 14
   106da:	64 9f       	mul	r22, r20
   106dc:	90 01       	movw	r18, r0
   106de:	65 9f       	mul	r22, r21
   106e0:	30 0d       	add	r19, r0
   106e2:	74 9f       	mul	r23, r20
   106e4:	30 0d       	add	r19, r0
   106e6:	11 24       	eor	r1, r1
   106e8:	30 93 8b 0b 	sts	0x0B8B, r19	; 0x800b8b <_sSchedules+0x26d>
   106ec:	20 93 8a 0b 	sts	0x0B8A, r18	; 0x800b8a <_sSchedules+0x26c>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   106f0:	4c e3       	ldi	r20, 0x3C	; 60
   106f2:	48 9f       	mul	r20, r24
   106f4:	90 01       	movw	r18, r0
   106f6:	49 9f       	mul	r20, r25
   106f8:	30 0d       	add	r19, r0
   106fa:	11 24       	eor	r1, r1
   106fc:	30 93 8d 0b 	sts	0x0B8D, r19	; 0x800b8d <_sSchedules+0x26f>
   10700:	20 93 8c 0b 	sts	0x0B8C, r18	; 0x800b8c <_sSchedules+0x26e>
   10704:	08 c0       	rjmp	.+16     	; 0x10716 <main+0x1ac>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   10706:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   1070a:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
		_sSchedules.Flush_Schedule_For = 0;
   1070e:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   10712:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
	}
	
	_gStart_Wdt = _kSET;
   10716:	81 e0       	ldi	r24, 0x01	; 1
   10718:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   1071c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	
	_gStart_Monitoring_Three_Phase = 0;
   10720:	10 92 97 0c 	sts	0x0C97, r1	; 0x800c97 <_gStart_Monitoring_Three_Phase>
	_gTimer_For_Three_Phase_Testing = _kRESET;
   10724:	10 92 96 0c 	sts	0x0C96, r1	; 0x800c96 <_gTimer_For_Three_Phase_Testing>
			Keeps_Monitor_Server_Connection();	
			
			if(timer_count > 80)          
			{
				timer_count = 0;
				Reading_Time = _kSET;
   10728:	11 e0       	ldi	r17, 0x01	; 1
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1072a:	cc e6       	ldi	r28, 0x6C	; 108
   1072c:	df e0       	ldi	r29, 0x0F	; 15
	_gTimer_For_Three_Phase_Testing = _kRESET;
	
	
	while (1)
	{
		if(_g_1Sec_Time)
   1072e:	80 91 7e 0c 	lds	r24, 0x0C7E	; 0x800c7e <_g_1Sec_Time>
   10732:	90 91 7f 0c 	lds	r25, 0x0C7F	; 0x800c7f <_g_1Sec_Time+0x1>
   10736:	a0 91 80 0c 	lds	r26, 0x0C80	; 0x800c80 <_g_1Sec_Time+0x2>
   1073a:	b0 91 81 0c 	lds	r27, 0x0C81	; 0x800c81 <_g_1Sec_Time+0x3>
   1073e:	89 2b       	or	r24, r25
   10740:	8a 2b       	or	r24, r26
   10742:	8b 2b       	or	r24, r27
   10744:	09 f4       	brne	.+2      	; 0x10748 <main+0x1de>
   10746:	48 c0       	rjmp	.+144    	; 0x107d8 <main+0x26e>
		{
			_g_1Sec_Time = _kRESET;
   10748:	10 92 7e 0c 	sts	0x0C7E, r1	; 0x800c7e <_g_1Sec_Time>
   1074c:	10 92 7f 0c 	sts	0x0C7F, r1	; 0x800c7f <_g_1Sec_Time+0x1>
   10750:	10 92 80 0c 	sts	0x0C80, r1	; 0x800c80 <_g_1Sec_Time+0x2>
   10754:	10 92 81 0c 	sts	0x0C81, r1	; 0x800c81 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   10758:	80 91 82 0c 	lds	r24, 0x0C82	; 0x800c82 <g_uTick>
   1075c:	90 91 83 0c 	lds	r25, 0x0C83	; 0x800c83 <g_uTick+0x1>
   10760:	a0 91 84 0c 	lds	r26, 0x0C84	; 0x800c84 <g_uTick+0x2>
   10764:	b0 91 85 0c 	lds	r27, 0x0C85	; 0x800c85 <g_uTick+0x3>
			timer_count++;
   10768:	80 91 6b 0d 	lds	r24, 0x0D6B	; 0x800d6b <_ZZ4mainE11timer_count>
   1076c:	8f 5f       	subi	r24, 0xFF	; 255
   1076e:	80 93 6b 0d 	sts	0x0D6B, r24	; 0x800d6b <_ZZ4mainE11timer_count>
			_gWdt_Counter = 0;
   10772:	10 92 9c 0c 	sts	0x0C9C, r1	; 0x800c9c <_gWdt_Counter+0x1>
   10776:	10 92 9b 0c 	sts	0x0C9B, r1	; 0x800c9b <_gWdt_Counter>
			
			Publish_Data();
   1077a:	0e 94 de a2 	call	0x145bc	; 0x145bc <_Z12Publish_Datav>
			
			Lora_Operation();
   1077e:	0e 94 6f cc 	call	0x198de	; 0x198de <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   10782:	0e 94 82 c7 	call	0x18f04	; 0x18f04 <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             
   10786:	0e 94 6e c2 	call	0x184dc	; 0x184dc <_Z13Run_Operationv>
			
			Display_Update_1();
   1078a:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   1078e:	0e 94 9f 72 	call	0xe53e	; 0xe53e <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 80)          
   10792:	80 91 6b 0d 	lds	r24, 0x0D6B	; 0x800d6b <_ZZ4mainE11timer_count>
   10796:	81 35       	cpi	r24, 0x51	; 81
   10798:	58 f0       	brcs	.+22     	; 0x107b0 <main+0x246>
			{
				timer_count = 0;
   1079a:	10 92 6b 0d 	sts	0x0D6B, r1	; 0x800d6b <_ZZ4mainE11timer_count>
				Reading_Time = _kSET;
   1079e:	10 93 93 0c 	sts	0x0C93, r17	; 0x800c93 <Reading_Time>
				Get_Local_Time();
   107a2:	0e 94 62 5e 	call	0xbcc4	; 0xbcc4 <_Z14Get_Local_Timev>
				Reading_Time = _kRESET;
   107a6:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <Reading_Time>
				Hard_Coded_Flush_Valve(_kON);	
   107aa:	81 e0       	ldi	r24, 0x01	; 1
   107ac:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check(); 
   107b0:	0e 94 26 24 	call	0x484c	; 0x484c <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   107b4:	0e 94 3b c8 	call	0x19076	; 0x19076 <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   107b8:	0e 94 1b c9 	call	0x19236	; 0x19236 <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   107bc:	0e 94 be c8 	call	0x1917c	; 0x1917c <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   107c0:	0e 94 03 73 	call	0xe606	; 0xe606 <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   107c4:	0e 94 f0 24 	call	0x49e0	; 0x49e0 <_Z17Flush_Controllingv>
			
			Debug_Check();
   107c8:	0e 94 79 73 	call	0xe6f2	; 0xe6f2 <_Z11Debug_Checkv>
			
			Calibration_Of_Pump();
   107cc:	0e 94 bf 73 	call	0xe77e	; 0xe77e <_Z19Calibration_Of_Pumpv>
			
			Select_Operation_Mode();
   107d0:	0e 94 af be 	call	0x17d5e	; 0x17d5e <_Z21Select_Operation_Modev>
			
			Faults_Handler();
   107d4:	0e 94 88 75 	call	0xeb10	; 0xeb10 <_Z14Faults_Handlerv>
			
		}	
		
		if(Subscribed_data_check())
   107d8:	0e 94 26 71 	call	0xe24c	; 0xe24c <_Z21Subscribed_data_checkv>
   107dc:	88 23       	and	r24, r24
   107de:	09 f4       	brne	.+2      	; 0x107e2 <main+0x278>
   107e0:	a6 cf       	rjmp	.-180    	; 0x1072e <main+0x1c4>
		{
			if(Seperate_Out_Sub_Data())
   107e2:	0e 94 1e 64 	call	0xc83c	; 0xc83c <_Z21Seperate_Out_Sub_Datav>
   107e6:	88 23       	and	r24, r24
   107e8:	09 f4       	brne	.+2      	; 0x107ec <main+0x282>
   107ea:	a1 cf       	rjmp	.-190    	; 0x1072e <main+0x1c4>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   107ec:	fe 01       	movw	r30, r28
   107ee:	01 90       	ld	r0, Z+
   107f0:	00 20       	and	r0, r0
   107f2:	e9 f7       	brne	.-6      	; 0x107ee <main+0x284>
   107f4:	31 97       	sbiw	r30, 0x01	; 1
   107f6:	af 01       	movw	r20, r30
   107f8:	4c 56       	subi	r20, 0x6C	; 108
   107fa:	5f 40       	sbci	r21, 0x0F	; 15
   107fc:	21 e0       	ldi	r18, 0x01	; 1
   107fe:	6c e6       	ldi	r22, 0x6C	; 108
   10800:	7f e0       	ldi	r23, 0x0F	; 15
   10802:	8e ef       	ldi	r24, 0xFE	; 254
   10804:	9e e0       	ldi	r25, 0x0E	; 14
   10806:	0e 94 9f 91 	call	0x1233e	; 0x1233e <_Z12Pub_Sub_DataPcPhjh>
   1080a:	91 cf       	rjmp	.-222    	; 0x1072e <main+0x1c4>

0001080c <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   1080c:	fc 01       	movw	r30, r24
   1080e:	26 81       	ldd	r18, Z+6	; 0x06
   10810:	37 81       	ldd	r19, Z+7	; 0x07
   10812:	62 0f       	add	r22, r18
   10814:	73 1f       	adc	r23, r19
   10816:	84 81       	ldd	r24, Z+4	; 0x04
   10818:	95 81       	ldd	r25, Z+5	; 0x05
   1081a:	86 17       	cp	r24, r22
   1081c:	97 07       	cpc	r25, r23
   1081e:	38 f0       	brcs	.+14     	; 0x1082e <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   10820:	82 81       	ldd	r24, Z+2	; 0x02
   10822:	93 81       	ldd	r25, Z+3	; 0x03
   10824:	77 83       	std	Z+7, r23	; 0x07
   10826:	66 83       	std	Z+6, r22	; 0x06
   10828:	82 0f       	add	r24, r18
   1082a:	93 1f       	adc	r25, r19
   1082c:	08 95       	ret
   1082e:	80 e0       	ldi	r24, 0x00	; 0
   10830:	90 e0       	ldi	r25, 0x00	; 0
   10832:	08 95       	ret

00010834 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>:
   10834:	77 fd       	sbrc	r23, 7
   10836:	06 c0       	rjmp	.+12     	; 0x10844 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25+0x10>
   10838:	ab 01       	movw	r20, r22
   1083a:	77 0f       	add	r23, r23
   1083c:	66 0b       	sbc	r22, r22
   1083e:	77 0b       	sbc	r23, r23
   10840:	24 e0       	ldi	r18, 0x04	; 4
   10842:	09 c0       	rjmp	.+18     	; 0x10856 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25+0x22>
   10844:	44 27       	eor	r20, r20
   10846:	55 27       	eor	r21, r21
   10848:	46 1b       	sub	r20, r22
   1084a:	57 0b       	sbc	r21, r23
   1084c:	05 2e       	mov	r0, r21
   1084e:	00 0c       	add	r0, r0
   10850:	66 0b       	sbc	r22, r22
   10852:	77 0b       	sbc	r23, r23
   10854:	25 e0       	ldi	r18, 0x05	; 5
   10856:	fc 01       	movw	r30, r24
   10858:	20 83       	st	Z, r18
   1085a:	41 83       	std	Z+1, r20	; 0x01
   1085c:	52 83       	std	Z+2, r21	; 0x02
   1085e:	63 83       	std	Z+3, r22	; 0x03
   10860:	74 83       	std	Z+4, r23	; 0x04
   10862:	81 e0       	ldi	r24, 0x01	; 1
   10864:	08 95       	ret

00010866 <_ZN5Print5writeEPKc>:
   10866:	61 15       	cp	r22, r1
   10868:	71 05       	cpc	r23, r1
   1086a:	79 f0       	breq	.+30     	; 0x1088a <_ZN5Print5writeEPKc+0x24>
   1086c:	fb 01       	movw	r30, r22
   1086e:	01 90       	ld	r0, Z+
   10870:	00 20       	and	r0, r0
   10872:	e9 f7       	brne	.-6      	; 0x1086e <_ZN5Print5writeEPKc+0x8>
   10874:	31 97       	sbiw	r30, 0x01	; 1
   10876:	af 01       	movw	r20, r30
   10878:	46 1b       	sub	r20, r22
   1087a:	57 0b       	sbc	r21, r23
   1087c:	dc 01       	movw	r26, r24
   1087e:	ed 91       	ld	r30, X+
   10880:	fc 91       	ld	r31, X
   10882:	02 80       	ldd	r0, Z+2	; 0x02
   10884:	f3 81       	ldd	r31, Z+3	; 0x03
   10886:	e0 2d       	mov	r30, r0
   10888:	19 94       	eijmp
   1088a:	80 e0       	ldi	r24, 0x00	; 0
   1088c:	90 e0       	ldi	r25, 0x00	; 0
   1088e:	08 95       	ret

00010890 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   10890:	db 01       	movw	r26, r22
   10892:	10 97       	sbiw	r26, 0x00	; 0
   10894:	49 f0       	breq	.+18     	; 0x108a8 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   10896:	ed 91       	ld	r30, X+
   10898:	fc 91       	ld	r31, X
   1089a:	11 97       	sbiw	r26, 0x01	; 1
   1089c:	01 90       	ld	r0, Z+
   1089e:	f0 81       	ld	r31, Z
   108a0:	e0 2d       	mov	r30, r0
   108a2:	bc 01       	movw	r22, r24
   108a4:	cd 01       	movw	r24, r26
   108a6:	19 94       	eijmp
   108a8:	80 e0       	ldi	r24, 0x00	; 0
   108aa:	90 e0       	ldi	r25, 0x00	; 0
   108ac:	08 95       	ret

000108ae <_ZN11ArduinoJson9JsonArray7invalidEv>:
   108ae:	80 91 49 14 	lds	r24, 0x1449	; 0x801449 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   108b2:	81 11       	cpse	r24, r1
   108b4:	0b c0       	rjmp	.+22     	; 0x108cc <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   108b6:	10 92 52 14 	sts	0x1452, r1	; 0x801452 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   108ba:	10 92 51 14 	sts	0x1451, r1	; 0x801451 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   108be:	10 92 54 14 	sts	0x1454, r1	; 0x801454 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   108c2:	10 92 53 14 	sts	0x1453, r1	; 0x801453 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   108c6:	81 e0       	ldi	r24, 0x01	; 1
   108c8:	80 93 49 14 	sts	0x1449, r24	; 0x801449 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   108cc:	81 e5       	ldi	r24, 0x51	; 81
   108ce:	94 e1       	ldi	r25, 0x14	; 20
   108d0:	08 95       	ret

000108d2 <_ZN11ArduinoJson10JsonObject7invalidEv>:
   108d2:	80 91 3d 14 	lds	r24, 0x143D	; 0x80143d <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   108d6:	81 11       	cpse	r24, r1
   108d8:	0b c0       	rjmp	.+22     	; 0x108f0 <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   108da:	10 92 46 14 	sts	0x1446, r1	; 0x801446 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   108de:	10 92 45 14 	sts	0x1445, r1	; 0x801445 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   108e2:	10 92 48 14 	sts	0x1448, r1	; 0x801448 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   108e6:	10 92 47 14 	sts	0x1447, r1	; 0x801447 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   108ea:	81 e0       	ldi	r24, 0x01	; 1
   108ec:	80 93 3d 14 	sts	0x143D, r24	; 0x80143d <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   108f0:	85 e4       	ldi	r24, 0x45	; 69
   108f2:	94 e1       	ldi	r25, 0x14	; 20
   108f4:	08 95       	ret

000108f6 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   108f6:	cf 93       	push	r28
   108f8:	df 93       	push	r29
   108fa:	ec 01       	movw	r28, r24
   108fc:	bc 01       	movw	r22, r24
   108fe:	84 e0       	ldi	r24, 0x04	; 4
   10900:	90 e0       	ldi	r25, 0x00	; 0
   10902:	c6 df       	rcall	.-116    	; 0x10890 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   10904:	00 97       	sbiw	r24, 0x00	; 0
   10906:	41 f0       	breq	.+16     	; 0x10918 <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   10908:	fc 01       	movw	r30, r24
   1090a:	d1 83       	std	Z+1, r29	; 0x01
   1090c:	c0 83       	st	Z, r28
   1090e:	13 82       	std	Z+3, r1	; 0x03
   10910:	12 82       	std	Z+2, r1	; 0x02
   10912:	df 91       	pop	r29
   10914:	cf 91       	pop	r28
   10916:	08 95       	ret
   10918:	df 91       	pop	r29
   1091a:	cf 91       	pop	r28
   1091c:	da cf       	rjmp	.-76     	; 0x108d2 <_ZN11ArduinoJson10JsonObject7invalidEv>

0001091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   1091e:	0f 93       	push	r16
   10920:	1f 93       	push	r17
   10922:	cf 93       	push	r28
   10924:	df 93       	push	r29
   10926:	1f 92       	push	r1
   10928:	1f 92       	push	r1
   1092a:	cd b7       	in	r28, 0x3d	; 61
   1092c:	de b7       	in	r29, 0x3e	; 62
   1092e:	8b 01       	movw	r16, r22
   10930:	fb 01       	movw	r30, r22
   10932:	60 81       	ld	r22, Z
   10934:	9a 83       	std	Y+2, r25	; 0x02
   10936:	89 83       	std	Y+1, r24	; 0x01
   10938:	ce 01       	movw	r24, r28
   1093a:	01 96       	adiw	r24, 0x01	; 1
   1093c:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   10940:	c8 01       	movw	r24, r16
   10942:	0f 90       	pop	r0
   10944:	0f 90       	pop	r0
   10946:	df 91       	pop	r29
   10948:	cf 91       	pop	r28
   1094a:	1f 91       	pop	r17
   1094c:	0f 91       	pop	r16
   1094e:	08 95       	ret

00010950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>:
   10950:	ef 92       	push	r14
   10952:	ff 92       	push	r15
   10954:	0f 93       	push	r16
   10956:	1f 93       	push	r17
   10958:	cf 93       	push	r28
   1095a:	df 93       	push	r29
   1095c:	1f 92       	push	r1
   1095e:	1f 92       	push	r1
   10960:	cd b7       	in	r28, 0x3d	; 61
   10962:	de b7       	in	r29, 0x3e	; 62
   10964:	8c 01       	movw	r16, r24
   10966:	8a e4       	ldi	r24, 0x4A	; 74
   10968:	e8 2e       	mov	r14, r24
   1096a:	83 e1       	ldi	r24, 0x13	; 19
   1096c:	f8 2e       	mov	r15, r24
   1096e:	f7 01       	movw	r30, r14
   10970:	66 89       	ldd	r22, Z+22	; 0x16
   10972:	1a 83       	std	Y+2, r17	; 0x02
   10974:	09 83       	std	Y+1, r16	; 0x01
   10976:	ce 01       	movw	r24, r28
   10978:	01 96       	adiw	r24, 0x01	; 1
   1097a:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   1097e:	f7 01       	movw	r30, r14
   10980:	67 89       	ldd	r22, Z+23	; 0x17
   10982:	0f 5f       	subi	r16, 0xFF	; 255
   10984:	1f 4f       	sbci	r17, 0xFF	; 255
   10986:	1a 83       	std	Y+2, r17	; 0x02
   10988:	09 83       	std	Y+1, r16	; 0x01
   1098a:	ce 01       	movw	r24, r28
   1098c:	01 96       	adiw	r24, 0x01	; 1
   1098e:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   10992:	80 e6       	ldi	r24, 0x60	; 96
   10994:	93 e1       	ldi	r25, 0x13	; 19
   10996:	0f 90       	pop	r0
   10998:	0f 90       	pop	r0
   1099a:	df 91       	pop	r29
   1099c:	cf 91       	pop	r28
   1099e:	1f 91       	pop	r17
   109a0:	0f 91       	pop	r16
   109a2:	ff 90       	pop	r15
   109a4:	ef 90       	pop	r14
   109a6:	08 95       	ret

000109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>:
   109a8:	ef 92       	push	r14
   109aa:	ff 92       	push	r15
   109ac:	0f 93       	push	r16
   109ae:	1f 93       	push	r17
   109b0:	cf 93       	push	r28
   109b2:	df 93       	push	r29
   109b4:	1f 92       	push	r1
   109b6:	1f 92       	push	r1
   109b8:	cd b7       	in	r28, 0x3d	; 61
   109ba:	de b7       	in	r29, 0x3e	; 62
   109bc:	81 e2       	ldi	r24, 0x21	; 33
   109be:	e8 2e       	mov	r14, r24
   109c0:	84 e1       	ldi	r24, 0x14	; 20
   109c2:	f8 2e       	mov	r15, r24
   109c4:	08 e8       	ldi	r16, 0x88	; 136
   109c6:	1e e0       	ldi	r17, 0x0E	; 14
   109c8:	f7 01       	movw	r30, r14
   109ca:	61 91       	ld	r22, Z+
   109cc:	7f 01       	movw	r14, r30
   109ce:	1a 83       	std	Y+2, r17	; 0x02
   109d0:	09 83       	std	Y+1, r16	; 0x01
   109d2:	ce 01       	movw	r24, r28
   109d4:	01 96       	adiw	r24, 0x01	; 1
   109d6:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   109da:	0f 5f       	subi	r16, 0xFF	; 255
   109dc:	1f 4f       	sbci	r17, 0xFF	; 255
   109de:	0d 38       	cpi	r16, 0x8D	; 141
   109e0:	fe e0       	ldi	r31, 0x0E	; 14
   109e2:	1f 07       	cpc	r17, r31
   109e4:	89 f7       	brne	.-30     	; 0x109c8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39+0x20>
   109e6:	81 e2       	ldi	r24, 0x21	; 33
   109e8:	94 e1       	ldi	r25, 0x14	; 20
   109ea:	0f 90       	pop	r0
   109ec:	0f 90       	pop	r0
   109ee:	df 91       	pop	r29
   109f0:	cf 91       	pop	r28
   109f2:	1f 91       	pop	r17
   109f4:	0f 91       	pop	r16
   109f6:	ff 90       	pop	r15
   109f8:	ef 90       	pop	r14
   109fa:	08 95       	ret

000109fc <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>:
   109fc:	ef 92       	push	r14
   109fe:	ff 92       	push	r15
   10a00:	0f 93       	push	r16
   10a02:	1f 93       	push	r17
   10a04:	cf 93       	push	r28
   10a06:	df 93       	push	r29
   10a08:	1f 92       	push	r1
   10a0a:	1f 92       	push	r1
   10a0c:	cd b7       	in	r28, 0x3d	; 61
   10a0e:	de b7       	in	r29, 0x3e	; 62
   10a10:	8e e1       	ldi	r24, 0x1E	; 30
   10a12:	e8 2e       	mov	r14, r24
   10a14:	89 e0       	ldi	r24, 0x09	; 9
   10a16:	f8 2e       	mov	r15, r24
   10a18:	0a e1       	ldi	r16, 0x1A	; 26
   10a1a:	15 e0       	ldi	r17, 0x05	; 5
   10a1c:	f7 01       	movw	r30, r14
   10a1e:	61 91       	ld	r22, Z+
   10a20:	7f 01       	movw	r14, r30
   10a22:	1a 83       	std	Y+2, r17	; 0x02
   10a24:	09 83       	std	Y+1, r16	; 0x01
   10a26:	ce 01       	movw	r24, r28
   10a28:	01 96       	adiw	r24, 0x01	; 1
   10a2a:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   10a2e:	0f 5f       	subi	r16, 0xFF	; 255
   10a30:	1f 4f       	sbci	r17, 0xFF	; 255
   10a32:	02 39       	cpi	r16, 0x92	; 146
   10a34:	f7 e0       	ldi	r31, 0x07	; 7
   10a36:	1f 07       	cpc	r17, r31
   10a38:	89 f7       	brne	.-30     	; 0x10a1c <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41+0x20>
   10a3a:	8e e1       	ldi	r24, 0x1E	; 30
   10a3c:	99 e0       	ldi	r25, 0x09	; 9
   10a3e:	0f 90       	pop	r0
   10a40:	0f 90       	pop	r0
   10a42:	df 91       	pop	r29
   10a44:	cf 91       	pop	r28
   10a46:	1f 91       	pop	r17
   10a48:	0f 91       	pop	r16
   10a4a:	ff 90       	pop	r15
   10a4c:	ef 90       	pop	r14
   10a4e:	08 95       	ret

00010a50 <_Z18Read_Switch_Statusv>:
   10a50:	61 e0       	ldi	r22, 0x01	; 1
   10a52:	84 e2       	ldi	r24, 0x24	; 36
   10a54:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   10a58:	86 e2       	ldi	r24, 0x26	; 38
   10a5a:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   10a5e:	30 91 83 0d 	lds	r19, 0x0D83	; 0x800d83 <_ZZ18Read_Switch_StatusvE9key_press>
   10a62:	33 23       	and	r19, r19
   10a64:	b9 f0       	breq	.+46     	; 0x10a94 <_Z18Read_Switch_Statusv+0x44>
   10a66:	90 91 82 0d 	lds	r25, 0x0D82	; 0x800d82 <_ZZ18Read_Switch_StatusvE10time_count>
   10a6a:	94 30       	cpi	r25, 0x04	; 4
   10a6c:	30 f0       	brcs	.+12     	; 0x10a7a <_Z18Read_Switch_Statusv+0x2a>
   10a6e:	31 30       	cpi	r19, 0x01	; 1
   10a70:	61 f4       	brne	.+24     	; 0x10a8a <_Z18Read_Switch_Statusv+0x3a>
   10a72:	82 e0       	ldi	r24, 0x02	; 2
   10a74:	80 93 74 13 	sts	0x1374, r24	; 0x801374 <_sRuble_Parameters+0x2a>
   10a78:	08 c0       	rjmp	.+16     	; 0x10a8a <_Z18Read_Switch_Statusv+0x3a>
   10a7a:	21 e0       	ldi	r18, 0x01	; 1
   10a7c:	82 27       	eor	r24, r18
   10a7e:	38 13       	cpse	r19, r24
   10a80:	04 c0       	rjmp	.+8      	; 0x10a8a <_Z18Read_Switch_Statusv+0x3a>
   10a82:	9f 5f       	subi	r25, 0xFF	; 255
   10a84:	90 93 82 0d 	sts	0x0D82, r25	; 0x800d82 <_ZZ18Read_Switch_StatusvE10time_count>
   10a88:	08 95       	ret
   10a8a:	10 92 82 0d 	sts	0x0D82, r1	; 0x800d82 <_ZZ18Read_Switch_StatusvE10time_count>
   10a8e:	10 92 83 0d 	sts	0x0D83, r1	; 0x800d83 <_ZZ18Read_Switch_StatusvE9key_press>
   10a92:	08 95       	ret
   10a94:	91 e0       	ldi	r25, 0x01	; 1
   10a96:	89 27       	eor	r24, r25
   10a98:	80 93 83 0d 	sts	0x0D83, r24	; 0x800d83 <_ZZ18Read_Switch_StatusvE9key_press>
   10a9c:	81 11       	cpse	r24, r1
   10a9e:	0c c0       	rjmp	.+24     	; 0x10ab8 <_Z18Read_Switch_Statusv+0x68>
   10aa0:	80 91 81 0d 	lds	r24, 0x0D81	; 0x800d81 <_ZZ18Read_Switch_StatusvE11time_count2>
   10aa4:	84 30       	cpi	r24, 0x04	; 4
   10aa6:	28 f0       	brcs	.+10     	; 0x10ab2 <_Z18Read_Switch_Statusv+0x62>
   10aa8:	10 92 81 0d 	sts	0x0D81, r1	; 0x800d81 <_ZZ18Read_Switch_StatusvE11time_count2>
   10aac:	90 93 74 13 	sts	0x1374, r25	; 0x801374 <_sRuble_Parameters+0x2a>
   10ab0:	08 95       	ret
   10ab2:	8f 5f       	subi	r24, 0xFF	; 255
   10ab4:	80 93 81 0d 	sts	0x0D81, r24	; 0x800d81 <_ZZ18Read_Switch_StatusvE11time_count2>
   10ab8:	08 95       	ret

00010aba <_Z16Dummy_Data_Storev>:
   10aba:	8f 92       	push	r8
   10abc:	9f 92       	push	r9
   10abe:	af 92       	push	r10
   10ac0:	bf 92       	push	r11
   10ac2:	cf 92       	push	r12
   10ac4:	df 92       	push	r13
   10ac6:	ef 92       	push	r14
   10ac8:	ff 92       	push	r15
   10aca:	0f 93       	push	r16
   10acc:	1f 93       	push	r17
   10ace:	cf 93       	push	r28
   10ad0:	df 93       	push	r29
   10ad2:	1f 92       	push	r1
   10ad4:	1f 92       	push	r1
   10ad6:	cd b7       	in	r28, 0x3d	; 61
   10ad8:	de b7       	in	r29, 0x3e	; 62
   10ada:	f0 e0       	ldi	r31, 0x00	; 0
   10adc:	ef 2e       	mov	r14, r31
   10ade:	fd e0       	ldi	r31, 0x0D	; 13
   10ae0:	ff 2e       	mov	r15, r31
   10ae2:	10 e0       	ldi	r17, 0x00	; 0
   10ae4:	f7 01       	movw	r30, r14
   10ae6:	10 82       	st	Z, r1
   10ae8:	81 2f       	mov	r24, r17
   10aea:	10 d8       	rcall	.-4064   	; 0xfb0c <_Z16Lira_Data_EEPROMh>
   10aec:	f6 e0       	ldi	r31, 0x06	; 6
   10aee:	ef 0e       	add	r14, r31
   10af0:	f1 1c       	adc	r15, r1
   10af2:	1f 5f       	subi	r17, 0xFF	; 255
   10af4:	1e 30       	cpi	r17, 0x0E	; 14
   10af6:	b1 f7       	brne	.-20     	; 0x10ae4 <_Z16Dummy_Data_Storev+0x2a>
   10af8:	e7 eb       	ldi	r30, 0xB7	; 183
   10afa:	ee 2e       	mov	r14, r30
   10afc:	eb e0       	ldi	r30, 0x0B	; 11
   10afe:	fe 2e       	mov	r15, r30
   10b00:	10 e0       	ldi	r17, 0x00	; 0
   10b02:	f7 01       	movw	r30, r14
   10b04:	10 82       	st	Z, r1
   10b06:	81 2f       	mov	r24, r17
   10b08:	0e 94 24 5a 	call	0xb448	; 0xb448 <_Z16Euro_Data_EEPROMh>
   10b0c:	fd e0       	ldi	r31, 0x0D	; 13
   10b0e:	ef 0e       	add	r14, r31
   10b10:	f1 1c       	adc	r15, r1
   10b12:	1f 5f       	subi	r17, 0xFF	; 255
   10b14:	17 30       	cpi	r17, 0x07	; 7
   10b16:	a9 f7       	brne	.-22     	; 0x10b02 <_Z16Dummy_Data_Storev+0x48>
   10b18:	89 e0       	ldi	r24, 0x09	; 9
   10b1a:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0xad>
   10b1e:	67 ef       	ldi	r22, 0xF7	; 247
   10b20:	73 e1       	ldi	r23, 0x13	; 19
   10b22:	88 e1       	ldi	r24, 0x18	; 24
   10b24:	95 e0       	ldi	r25, 0x05	; 5
   10b26:	fb de       	rcall	.-522    	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10b28:	82 e0       	ldi	r24, 0x02	; 2
   10b2a:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0xb5>
   10b2e:	6f ef       	ldi	r22, 0xFF	; 255
   10b30:	73 e1       	ldi	r23, 0x13	; 19
   10b32:	89 e1       	ldi	r24, 0x19	; 25
   10b34:	95 e0       	ldi	r25, 0x05	; 5
   10b36:	f3 de       	rcall	.-538    	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10b38:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <_sSchedules>
   10b3c:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
   10b40:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_sSchedules+0x2>
   10b44:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10b48:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
   10b4c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   10b50:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <_sSchedules+0x7>
   10b54:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
   10b58:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
   10b5c:	81 e0       	ldi	r24, 0x01	; 1
   10b5e:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
   10b62:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
   10b66:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
   10b6a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
   10b6e:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
   10b72:	41 e0       	ldi	r20, 0x01	; 1
   10b74:	50 e0       	ldi	r21, 0x00	; 0
   10b76:	60 e0       	ldi	r22, 0x00	; 0
   10b78:	70 e0       	ldi	r23, 0x00	; 0
   10b7a:	40 93 31 09 	sts	0x0931, r20	; 0x800931 <_sSchedules+0x13>
   10b7e:	50 93 32 09 	sts	0x0932, r21	; 0x800932 <_sSchedules+0x14>
   10b82:	60 93 33 09 	sts	0x0933, r22	; 0x800933 <_sSchedules+0x15>
   10b86:	70 93 34 09 	sts	0x0934, r23	; 0x800934 <_sSchedules+0x16>
   10b8a:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
   10b8e:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
   10b92:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
   10b96:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
   10b9a:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   10b9e:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <_sSchedules+0x1c>
   10ba2:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <_sSchedules+0x1d>
   10ba6:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
   10baa:	80 e0       	ldi	r24, 0x00	; 0
   10bac:	90 e0       	ldi	r25, 0x00	; 0
   10bae:	fc 01       	movw	r30, r24
   10bb0:	ee 0f       	add	r30, r30
   10bb2:	ff 1f       	adc	r31, r31
   10bb4:	e2 5e       	subi	r30, 0xE2	; 226
   10bb6:	f6 4f       	sbci	r31, 0xF6	; 246
   10bb8:	10 a2       	std	Z+32, r1	; 0x20
   10bba:	17 8e       	std	Z+31, r1	; 0x1f
   10bbc:	01 96       	adiw	r24, 0x01	; 1
   10bbe:	8f 30       	cpi	r24, 0x0F	; 15
   10bc0:	91 05       	cpc	r25, r1
   10bc2:	a9 f7       	brne	.-22     	; 0x10bae <_Z16Dummy_Data_Storev+0xf4>
   10bc4:	80 e0       	ldi	r24, 0x00	; 0
   10bc6:	90 e0       	ldi	r25, 0x00	; 0
   10bc8:	fc 01       	movw	r30, r24
   10bca:	e2 5e       	subi	r30, 0xE2	; 226
   10bcc:	f6 4f       	sbci	r31, 0xF6	; 246
   10bce:	15 ae       	std	Z+61, r1	; 0x3d
   10bd0:	01 96       	adiw	r24, 0x01	; 1
   10bd2:	8f 30       	cpi	r24, 0x0F	; 15
   10bd4:	91 05       	cpc	r25, r1
   10bd6:	c1 f7       	brne	.-16     	; 0x10bc8 <_Z16Dummy_Data_Storev+0x10e>
   10bd8:	80 e0       	ldi	r24, 0x00	; 0
   10bda:	90 e0       	ldi	r25, 0x00	; 0
   10bdc:	fc 01       	movw	r30, r24
   10bde:	e6 59       	subi	r30, 0x96	; 150
   10be0:	f6 4f       	sbci	r31, 0xF6	; 246
   10be2:	10 82       	st	Z, r1
   10be4:	01 96       	adiw	r24, 0x01	; 1
   10be6:	8f 30       	cpi	r24, 0x0F	; 15
   10be8:	91 05       	cpc	r25, r1
   10bea:	c1 f7       	brne	.-16     	; 0x10bdc <_Z16Dummy_Data_Storev+0x122>
   10bec:	80 e0       	ldi	r24, 0x00	; 0
   10bee:	90 e0       	ldi	r25, 0x00	; 0
   10bf0:	9c 01       	movw	r18, r24
   10bf2:	22 5e       	subi	r18, 0xE2	; 226
   10bf4:	36 4f       	sbci	r19, 0xF6	; 246
   10bf6:	f9 01       	movw	r30, r18
   10bf8:	e5 5a       	subi	r30, 0xA5	; 165
   10bfa:	ff 4f       	sbci	r31, 0xFF	; 255
   10bfc:	10 82       	st	Z, r1
   10bfe:	3f 96       	adiw	r30, 0x0f	; 15
   10c00:	10 82       	st	Z, r1
   10c02:	01 96       	adiw	r24, 0x01	; 1
   10c04:	8f 30       	cpi	r24, 0x0F	; 15
   10c06:	91 05       	cpc	r25, r1
   10c08:	99 f7       	brne	.-26     	; 0x10bf0 <_Z16Dummy_Data_Storev+0x136>
   10c0a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   10c0e:	80 e0       	ldi	r24, 0x00	; 0
   10c10:	90 e0       	ldi	r25, 0x00	; 0
   10c12:	fc 01       	movw	r30, r24
   10c14:	e8 56       	subi	r30, 0x68	; 104
   10c16:	f6 4f       	sbci	r31, 0xF6	; 246
   10c18:	10 82       	st	Z, r1
   10c1a:	01 96       	adiw	r24, 0x01	; 1
   10c1c:	8b 32       	cpi	r24, 0x2B	; 43
   10c1e:	91 05       	cpc	r25, r1
   10c20:	c1 f7       	brne	.-16     	; 0x10c12 <_Z16Dummy_Data_Storev+0x158>
   10c22:	80 e0       	ldi	r24, 0x00	; 0
   10c24:	90 e0       	ldi	r25, 0x00	; 0
   10c26:	fc 01       	movw	r30, r24
   10c28:	e8 56       	subi	r30, 0x68	; 104
   10c2a:	f6 4f       	sbci	r31, 0xF6	; 246
   10c2c:	10 82       	st	Z, r1
   10c2e:	01 96       	adiw	r24, 0x01	; 1
   10c30:	8b 32       	cpi	r24, 0x2B	; 43
   10c32:	91 05       	cpc	r25, r1
   10c34:	c1 f7       	brne	.-16     	; 0x10c26 <_Z16Dummy_Data_Storev+0x16c>
   10c36:	80 e0       	ldi	r24, 0x00	; 0
   10c38:	90 e0       	ldi	r25, 0x00	; 0
   10c3a:	fc 01       	movw	r30, r24
   10c3c:	ee 0f       	add	r30, r30
   10c3e:	ff 1f       	adc	r31, r31
   10c40:	ed 53       	subi	r30, 0x3D	; 61
   10c42:	f6 4f       	sbci	r31, 0xF6	; 246
   10c44:	11 82       	std	Z+1, r1	; 0x01
   10c46:	10 82       	st	Z, r1
   10c48:	01 96       	adiw	r24, 0x01	; 1
   10c4a:	8b 32       	cpi	r24, 0x2B	; 43
   10c4c:	91 05       	cpc	r25, r1
   10c4e:	a9 f7       	brne	.-22     	; 0x10c3a <_Z16Dummy_Data_Storev+0x180>
   10c50:	80 e0       	ldi	r24, 0x00	; 0
   10c52:	90 e0       	ldi	r25, 0x00	; 0
   10c54:	fc 01       	movw	r30, r24
   10c56:	ee 0f       	add	r30, r30
   10c58:	ff 1f       	adc	r31, r31
   10c5a:	e7 5e       	subi	r30, 0xE7	; 231
   10c5c:	f5 4f       	sbci	r31, 0xF5	; 245
   10c5e:	11 82       	std	Z+1, r1	; 0x01
   10c60:	10 82       	st	Z, r1
   10c62:	01 96       	adiw	r24, 0x01	; 1
   10c64:	8b 32       	cpi	r24, 0x2B	; 43
   10c66:	91 05       	cpc	r25, r1
   10c68:	a9 f7       	brne	.-22     	; 0x10c54 <_Z16Dummy_Data_Storev+0x19a>
   10c6a:	80 e0       	ldi	r24, 0x00	; 0
   10c6c:	90 e0       	ldi	r25, 0x00	; 0
   10c6e:	fc 01       	movw	r30, r24
   10c70:	e1 59       	subi	r30, 0x91	; 145
   10c72:	f5 4f       	sbci	r31, 0xF5	; 245
   10c74:	10 82       	st	Z, r1
   10c76:	01 96       	adiw	r24, 0x01	; 1
   10c78:	8b 32       	cpi	r24, 0x2B	; 43
   10c7a:	91 05       	cpc	r25, r1
   10c7c:	c1 f7       	brne	.-16     	; 0x10c6e <_Z16Dummy_Data_Storev+0x1b4>
   10c7e:	80 e0       	ldi	r24, 0x00	; 0
   10c80:	90 e0       	ldi	r25, 0x00	; 0
   10c82:	fc 01       	movw	r30, r24
   10c84:	ee 0f       	add	r30, r30
   10c86:	ff 1f       	adc	r31, r31
   10c88:	eb 53       	subi	r30, 0x3B	; 59
   10c8a:	f5 4f       	sbci	r31, 0xF5	; 245
   10c8c:	11 82       	std	Z+1, r1	; 0x01
   10c8e:	10 82       	st	Z, r1
   10c90:	01 96       	adiw	r24, 0x01	; 1
   10c92:	8b 32       	cpi	r24, 0x2B	; 43
   10c94:	91 05       	cpc	r25, r1
   10c96:	a9 f7       	brne	.-22     	; 0x10c82 <_Z16Dummy_Data_Storev+0x1c8>
   10c98:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <_sSchedules+0x1fd>
   10c9c:	10 92 1c 0b 	sts	0x0B1C, r1	; 0x800b1c <_sSchedules+0x1fe>
   10ca0:	10 92 1d 0b 	sts	0x0B1D, r1	; 0x800b1d <_sSchedules+0x1ff>
   10ca4:	10 92 1e 0b 	sts	0x0B1E, r1	; 0x800b1e <_sSchedules+0x200>
   10ca8:	10 92 1f 0b 	sts	0x0B1F, r1	; 0x800b1f <_sSchedules+0x201>
   10cac:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
   10cb0:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
   10cb4:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
   10cb8:	10 92 23 0b 	sts	0x0B23, r1	; 0x800b23 <_sSchedules+0x205>
   10cbc:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
   10cc0:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
   10cc4:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
   10cc8:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
   10ccc:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
   10cd0:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
   10cd4:	10 92 2b 0b 	sts	0x0B2B, r1	; 0x800b2b <_sSchedules+0x20d>
   10cd8:	10 92 2a 0b 	sts	0x0B2A, r1	; 0x800b2a <_sSchedules+0x20c>
   10cdc:	10 92 2c 0b 	sts	0x0B2C, r1	; 0x800b2c <_sSchedules+0x20e>
   10ce0:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
   10ce4:	10 92 2e 0b 	sts	0x0B2E, r1	; 0x800b2e <_sSchedules+0x210>
   10ce8:	10 92 33 0b 	sts	0x0B33, r1	; 0x800b33 <_sSchedules+0x215>
   10cec:	10 92 34 0b 	sts	0x0B34, r1	; 0x800b34 <_sSchedules+0x216>
   10cf0:	10 92 35 0b 	sts	0x0B35, r1	; 0x800b35 <_sSchedules+0x217>
   10cf4:	10 92 36 0b 	sts	0x0B36, r1	; 0x800b36 <_sSchedules+0x218>
   10cf8:	10 92 37 0b 	sts	0x0B37, r1	; 0x800b37 <_sSchedules+0x219>
   10cfc:	10 92 38 0b 	sts	0x0B38, r1	; 0x800b38 <_sSchedules+0x21a>
   10d00:	10 92 39 0b 	sts	0x0B39, r1	; 0x800b39 <_sSchedules+0x21b>
   10d04:	10 92 3a 0b 	sts	0x0B3A, r1	; 0x800b3a <_sSchedules+0x21c>
   10d08:	10 92 3b 0b 	sts	0x0B3B, r1	; 0x800b3b <_sSchedules+0x21d>
   10d0c:	80 e0       	ldi	r24, 0x00	; 0
   10d0e:	90 e0       	ldi	r25, 0x00	; 0
   10d10:	fc 01       	movw	r30, r24
   10d12:	ee 0f       	add	r30, r30
   10d14:	ff 1f       	adc	r31, r31
   10d16:	e4 5c       	subi	r30, 0xC4	; 196
   10d18:	f4 4f       	sbci	r31, 0xF4	; 244
   10d1a:	11 82       	std	Z+1, r1	; 0x01
   10d1c:	10 82       	st	Z, r1
   10d1e:	01 96       	adiw	r24, 0x01	; 1
   10d20:	8f 30       	cpi	r24, 0x0F	; 15
   10d22:	91 05       	cpc	r25, r1
   10d24:	a9 f7       	brne	.-22     	; 0x10d10 <_Z16Dummy_Data_Storev+0x256>
   10d26:	80 e0       	ldi	r24, 0x00	; 0
   10d28:	90 e0       	ldi	r25, 0x00	; 0
   10d2a:	fc 01       	movw	r30, r24
   10d2c:	e6 5a       	subi	r30, 0xA6	; 166
   10d2e:	f4 4f       	sbci	r31, 0xF4	; 244
   10d30:	10 82       	st	Z, r1
   10d32:	01 96       	adiw	r24, 0x01	; 1
   10d34:	8f 30       	cpi	r24, 0x0F	; 15
   10d36:	91 05       	cpc	r25, r1
   10d38:	c1 f7       	brne	.-16     	; 0x10d2a <_Z16Dummy_Data_Storev+0x270>
   10d3a:	80 e0       	ldi	r24, 0x00	; 0
   10d3c:	90 e0       	ldi	r25, 0x00	; 0
   10d3e:	fc 01       	movw	r30, r24
   10d40:	e7 59       	subi	r30, 0x97	; 151
   10d42:	f4 4f       	sbci	r31, 0xF4	; 244
   10d44:	10 82       	st	Z, r1
   10d46:	01 96       	adiw	r24, 0x01	; 1
   10d48:	8f 30       	cpi	r24, 0x0F	; 15
   10d4a:	91 05       	cpc	r25, r1
   10d4c:	c1 f7       	brne	.-16     	; 0x10d3e <_Z16Dummy_Data_Storev+0x284>
   10d4e:	80 e0       	ldi	r24, 0x00	; 0
   10d50:	90 e0       	ldi	r25, 0x00	; 0
   10d52:	fc 01       	movw	r30, r24
   10d54:	e7 59       	subi	r30, 0x97	; 151
   10d56:	f4 4f       	sbci	r31, 0xF4	; 244
   10d58:	10 82       	st	Z, r1
   10d5a:	01 96       	adiw	r24, 0x01	; 1
   10d5c:	8b 32       	cpi	r24, 0x2B	; 43
   10d5e:	91 05       	cpc	r25, r1
   10d60:	c1 f7       	brne	.-16     	; 0x10d52 <_Z16Dummy_Data_Storev+0x298>
   10d62:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   10d66:	10 92 2f 0b 	sts	0x0B2F, r1	; 0x800b2f <_sSchedules+0x211>
   10d6a:	10 92 30 0b 	sts	0x0B30, r1	; 0x800b30 <_sSchedules+0x212>
   10d6e:	10 92 31 0b 	sts	0x0B31, r1	; 0x800b31 <_sSchedules+0x213>
   10d72:	10 92 32 0b 	sts	0x0B32, r1	; 0x800b32 <_sSchedules+0x214>
   10d76:	42 de       	rcall	.-892    	; 0x109fc <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   10d78:	24 e8       	ldi	r18, 0x84	; 132
   10d7a:	e2 2e       	mov	r14, r18
   10d7c:	2d e0       	ldi	r18, 0x0D	; 13
   10d7e:	f2 2e       	mov	r15, r18
   10d80:	01 ef       	ldi	r16, 0xF1	; 241
   10d82:	19 e0       	ldi	r17, 0x09	; 9
   10d84:	f7 01       	movw	r30, r14
   10d86:	11 82       	std	Z+1, r1	; 0x01
   10d88:	10 92 89 0d 	sts	0x0D89, r1	; 0x800d89 <_sExtra_Plot+0x5>
   10d8c:	10 92 a5 0d 	sts	0x0DA5, r1	; 0x800da5 <_sExtra_Plot+0x21>
   10d90:	10 92 c1 0d 	sts	0x0DC1, r1	; 0x800dc1 <_sExtra_Plot+0x3d>
   10d94:	10 92 dd 0d 	sts	0x0DDD, r1	; 0x800ddd <_sExtra_Plot+0x59>
   10d98:	10 92 f9 0d 	sts	0x0DF9, r1	; 0x800df9 <_sExtra_Plot+0x75>
   10d9c:	48 01       	movw	r8, r16
   10d9e:	fb e1       	ldi	r31, 0x1B	; 27
   10da0:	8f 0e       	add	r8, r31
   10da2:	91 1c       	adc	r9, r1
   10da4:	57 01       	movw	r10, r14
   10da6:	68 01       	movw	r12, r16
   10da8:	f5 01       	movw	r30, r10
   10daa:	61 91       	ld	r22, Z+
   10dac:	5f 01       	movw	r10, r30
   10dae:	da 82       	std	Y+2, r13	; 0x02
   10db0:	c9 82       	std	Y+1, r12	; 0x01
   10db2:	ce 01       	movw	r24, r28
   10db4:	01 96       	adiw	r24, 0x01	; 1
   10db6:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   10dba:	ff ef       	ldi	r31, 0xFF	; 255
   10dbc:	cf 1a       	sub	r12, r31
   10dbe:	df 0a       	sbc	r13, r31
   10dc0:	8c 14       	cp	r8, r12
   10dc2:	9d 04       	cpc	r9, r13
   10dc4:	89 f7       	brne	.-30     	; 0x10da8 <_Z16Dummy_Data_Storev+0x2ee>
   10dc6:	8b e1       	ldi	r24, 0x1B	; 27
   10dc8:	e8 0e       	add	r14, r24
   10dca:	f1 1c       	adc	r15, r1
   10dcc:	02 5e       	subi	r16, 0xE2	; 226
   10dce:	1f 4f       	sbci	r17, 0xFF	; 255
   10dd0:	05 39       	cpi	r16, 0x95	; 149
   10dd2:	eb e0       	ldi	r30, 0x0B	; 11
   10dd4:	1e 07       	cpc	r17, r30
   10dd6:	b1 f6       	brne	.-84     	; 0x10d84 <_Z16Dummy_Data_Storev+0x2ca>
   10dd8:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   10ddc:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   10de0:	86 e9       	ldi	r24, 0x96	; 150
   10de2:	9c e0       	ldi	r25, 0x0C	; 12
   10de4:	b5 dd       	rcall	.-1174   	; 0x10950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   10de6:	10 92 f3 13 	sts	0x13F3, r1	; 0x8013f3 <_sRuble_Parameters+0xa9>
   10dea:	63 ef       	ldi	r22, 0xF3	; 243
   10dec:	73 e1       	ldi	r23, 0x13	; 19
   10dee:	86 e9       	ldi	r24, 0x96	; 150
   10df0:	9c e0       	ldi	r25, 0x0C	; 12
   10df2:	95 dd       	rcall	.-1238   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10df4:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   10df8:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   10dfc:	85 e0       	ldi	r24, 0x05	; 5
   10dfe:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   10e02:	61 e7       	ldi	r22, 0x71	; 113
   10e04:	73 e1       	ldi	r23, 0x13	; 19
   10e06:	88 ed       	ldi	r24, 0xD8	; 216
   10e08:	94 e0       	ldi	r25, 0x04	; 4
   10e0a:	89 dd       	rcall	.-1262   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e0c:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xbd>
   10e10:	67 e0       	ldi	r22, 0x07	; 7
   10e12:	74 e1       	ldi	r23, 0x14	; 20
   10e14:	81 ea       	ldi	r24, 0xA1	; 161
   10e16:	9c e0       	ldi	r25, 0x0C	; 12
   10e18:	82 dd       	rcall	.-1276   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e1a:	10 92 09 14 	sts	0x1409, r1	; 0x801409 <_sRuble_Parameters+0xbf>
   10e1e:	69 e0       	ldi	r22, 0x09	; 9
   10e20:	74 e1       	ldi	r23, 0x14	; 20
   10e22:	88 ea       	ldi	r24, 0xA8	; 168
   10e24:	9c e0       	ldi	r25, 0x0C	; 12
   10e26:	7b dd       	rcall	.-1290   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e28:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   10e2c:	6a e0       	ldi	r22, 0x0A	; 10
   10e2e:	74 e1       	ldi	r23, 0x14	; 20
   10e30:	8d ea       	ldi	r24, 0xAD	; 173
   10e32:	9c e0       	ldi	r25, 0x0C	; 12
   10e34:	74 dd       	rcall	.-1304   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e36:	01 e2       	ldi	r16, 0x21	; 33
   10e38:	14 e1       	ldi	r17, 0x14	; 20
   10e3a:	96 e2       	ldi	r25, 0x26	; 38
   10e3c:	e9 2e       	mov	r14, r25
   10e3e:	94 e1       	ldi	r25, 0x14	; 20
   10e40:	f9 2e       	mov	r15, r25
   10e42:	f8 01       	movw	r30, r16
   10e44:	11 92       	st	Z+, r1
   10e46:	8f 01       	movw	r16, r30
   10e48:	af dd       	rcall	.-1186   	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   10e4a:	e0 16       	cp	r14, r16
   10e4c:	f1 06       	cpc	r15, r17
   10e4e:	c9 f7       	brne	.-14     	; 0x10e42 <_Z16Dummy_Data_Storev+0x388>
   10e50:	81 e0       	ldi	r24, 0x01	; 1
   10e52:	80 93 26 14 	sts	0x1426, r24	; 0x801426 <_sRuble_Parameters+0xdc>
   10e56:	66 e2       	ldi	r22, 0x26	; 38
   10e58:	74 e1       	ldi	r23, 0x14	; 20
   10e5a:	8b ea       	ldi	r24, 0xAB	; 171
   10e5c:	9e e0       	ldi	r25, 0x0E	; 14
   10e5e:	5f dd       	rcall	.-1346   	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e60:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xdf>
   10e64:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe0>
   10e68:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe1>
   10e6c:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe2>
   10e70:	89 e2       	ldi	r24, 0x29	; 41
   10e72:	e8 2e       	mov	r14, r24
   10e74:	84 e1       	ldi	r24, 0x14	; 20
   10e76:	f8 2e       	mov	r15, r24
   10e78:	0d ea       	ldi	r16, 0xAD	; 173
   10e7a:	1e e0       	ldi	r17, 0x0E	; 14
   10e7c:	f7 01       	movw	r30, r14
   10e7e:	61 91       	ld	r22, Z+
   10e80:	7f 01       	movw	r14, r30
   10e82:	1a 83       	std	Y+2, r17	; 0x02
   10e84:	09 83       	std	Y+1, r16	; 0x01
   10e86:	ce 01       	movw	r24, r28
   10e88:	01 96       	adiw	r24, 0x01	; 1
   10e8a:	0e 94 ca 23 	call	0x4794	; 0x4794 <_ZN5EERef6updateEh>
   10e8e:	0f 5f       	subi	r16, 0xFF	; 255
   10e90:	1f 4f       	sbci	r17, 0xFF	; 255
   10e92:	01 3b       	cpi	r16, 0xB1	; 177
   10e94:	fe e0       	ldi	r31, 0x0E	; 14
   10e96:	1f 07       	cpc	r17, r31
   10e98:	89 f7       	brne	.-30     	; 0x10e7c <_Z16Dummy_Data_Storev+0x3c2>
   10e9a:	06 e9       	ldi	r16, 0x96	; 150
   10e9c:	1b e0       	ldi	r17, 0x0B	; 11
   10e9e:	f1 2c       	mov	r15, r1
   10ea0:	f8 01       	movw	r30, r16
   10ea2:	11 86       	std	Z+9, r1	; 0x09
   10ea4:	10 86       	std	Z+8, r1	; 0x08
   10ea6:	10 82       	st	Z, r1
   10ea8:	12 86       	std	Z+10, r1	; 0x0a
   10eaa:	8f 2d       	mov	r24, r15
   10eac:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z20Wireless_Pump_EEPROMh>
   10eb0:	f3 94       	inc	r15
   10eb2:	05 5f       	subi	r16, 0xF5	; 245
   10eb4:	1f 4f       	sbci	r17, 0xFF	; 255
   10eb6:	f3 e0       	ldi	r31, 0x03	; 3
   10eb8:	ff 12       	cpse	r15, r31
   10eba:	f2 cf       	rjmp	.-28     	; 0x10ea0 <_Z16Dummy_Data_Storev+0x3e6>
   10ebc:	0f 90       	pop	r0
   10ebe:	0f 90       	pop	r0
   10ec0:	df 91       	pop	r29
   10ec2:	cf 91       	pop	r28
   10ec4:	1f 91       	pop	r17
   10ec6:	0f 91       	pop	r16
   10ec8:	ff 90       	pop	r15
   10eca:	ef 90       	pop	r14
   10ecc:	df 90       	pop	r13
   10ece:	cf 90       	pop	r12
   10ed0:	bf 90       	pop	r11
   10ed2:	af 90       	pop	r10
   10ed4:	9f 90       	pop	r9
   10ed6:	8f 90       	pop	r8
   10ed8:	08 95       	ret

00010eda <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   10eda:	0f 93       	push	r16
   10edc:	1f 93       	push	r17
   10ede:	cf 93       	push	r28
   10ee0:	df 93       	push	r29
   10ee2:	dc 01       	movw	r26, r24
   10ee4:	12 96       	adiw	r26, 0x02	; 2
   10ee6:	ed 91       	ld	r30, X+
   10ee8:	fc 91       	ld	r31, X
   10eea:	13 97       	sbiw	r26, 0x03	; 3
   10eec:	30 97       	sbiw	r30, 0x00	; 0
   10eee:	a1 f0       	breq	.+40     	; 0x10f18 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10ef0:	61 15       	cp	r22, r1
   10ef2:	71 05       	cpc	r23, r1
   10ef4:	31 f0       	breq	.+12     	; 0x10f02 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   10ef6:	01 90       	ld	r0, Z+
   10ef8:	f0 81       	ld	r31, Z
   10efa:	e0 2d       	mov	r30, r0
   10efc:	61 50       	subi	r22, 0x01	; 1
   10efe:	71 09       	sbc	r23, r1
   10f00:	f5 cf       	rjmp	.-22     	; 0x10eec <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   10f02:	82 81       	ldd	r24, Z+2	; 0x02
   10f04:	83 30       	cpi	r24, 0x03	; 3
   10f06:	08 f0       	brcs	.+2      	; 0x10f0a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   10f08:	44 c0       	rjmp	.+136    	; 0x10f92 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   10f0a:	81 30       	cpi	r24, 0x01	; 1
   10f0c:	28 f0       	brcs	.+10     	; 0x10f18 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10f0e:	03 80       	ldd	r0, Z+3	; 0x03
   10f10:	f4 81       	ldd	r31, Z+4	; 0x04
   10f12:	e0 2d       	mov	r30, r0
   10f14:	30 97       	sbiw	r30, 0x00	; 0
   10f16:	21 f4       	brne	.+8      	; 0x10f20 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   10f18:	60 e0       	ldi	r22, 0x00	; 0
   10f1a:	70 e0       	ldi	r23, 0x00	; 0
   10f1c:	cb 01       	movw	r24, r22
   10f1e:	4f c0       	rjmp	.+158    	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f20:	80 81       	ld	r24, Z
   10f22:	84 37       	cpi	r24, 0x74	; 116
   10f24:	71 f1       	breq	.+92     	; 0x10f82 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   10f26:	8b 32       	cpi	r24, 0x2B	; 43
   10f28:	29 f0       	breq	.+10     	; 0x10f34 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   10f2a:	8d 32       	cpi	r24, 0x2D	; 45
   10f2c:	21 f4       	brne	.+8      	; 0x10f36 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   10f2e:	31 96       	adiw	r30, 0x01	; 1
   10f30:	d1 e0       	ldi	r29, 0x01	; 1
   10f32:	02 c0       	rjmp	.+4      	; 0x10f38 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   10f34:	31 96       	adiw	r30, 0x01	; 1
   10f36:	d0 e0       	ldi	r29, 0x00	; 0
   10f38:	20 e0       	ldi	r18, 0x00	; 0
   10f3a:	30 e0       	ldi	r19, 0x00	; 0
   10f3c:	a9 01       	movw	r20, r18
   10f3e:	c1 91       	ld	r28, Z+
   10f40:	80 ed       	ldi	r24, 0xD0	; 208
   10f42:	8c 0f       	add	r24, r28
   10f44:	8a 30       	cpi	r24, 0x0A	; 10
   10f46:	98 f4       	brcc	.+38     	; 0x10f6e <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   10f48:	aa e0       	ldi	r26, 0x0A	; 10
   10f4a:	b0 e0       	ldi	r27, 0x00	; 0
   10f4c:	0e 94 b2 e7 	call	0x1cf64	; 0x1cf64 <__muluhisi3>
   10f50:	2c 2f       	mov	r18, r28
   10f52:	30 e0       	ldi	r19, 0x00	; 0
   10f54:	20 53       	subi	r18, 0x30	; 48
   10f56:	31 09       	sbc	r19, r1
   10f58:	89 01       	movw	r16, r18
   10f5a:	33 0f       	add	r19, r19
   10f5c:	22 0b       	sbc	r18, r18
   10f5e:	33 0b       	sbc	r19, r19
   10f60:	a9 01       	movw	r20, r18
   10f62:	98 01       	movw	r18, r16
   10f64:	26 0f       	add	r18, r22
   10f66:	37 1f       	adc	r19, r23
   10f68:	48 1f       	adc	r20, r24
   10f6a:	59 1f       	adc	r21, r25
   10f6c:	e8 cf       	rjmp	.-48     	; 0x10f3e <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   10f6e:	dd 23       	and	r29, r29
   10f70:	69 f0       	breq	.+26     	; 0x10f8c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   10f72:	66 27       	eor	r22, r22
   10f74:	77 27       	eor	r23, r23
   10f76:	cb 01       	movw	r24, r22
   10f78:	62 1b       	sub	r22, r18
   10f7a:	73 0b       	sbc	r23, r19
   10f7c:	84 0b       	sbc	r24, r20
   10f7e:	95 0b       	sbc	r25, r21
   10f80:	1e c0       	rjmp	.+60     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f82:	61 e0       	ldi	r22, 0x01	; 1
   10f84:	70 e0       	ldi	r23, 0x00	; 0
   10f86:	80 e0       	ldi	r24, 0x00	; 0
   10f88:	90 e0       	ldi	r25, 0x00	; 0
   10f8a:	19 c0       	rjmp	.+50     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f8c:	ca 01       	movw	r24, r20
   10f8e:	b9 01       	movw	r22, r18
   10f90:	16 c0       	rjmp	.+44     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f92:	85 30       	cpi	r24, 0x05	; 5
   10f94:	28 f4       	brcc	.+10     	; 0x10fa0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   10f96:	63 81       	ldd	r22, Z+3	; 0x03
   10f98:	74 81       	ldd	r23, Z+4	; 0x04
   10f9a:	85 81       	ldd	r24, Z+5	; 0x05
   10f9c:	96 81       	ldd	r25, Z+6	; 0x06
   10f9e:	0f c0       	rjmp	.+30     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10fa0:	85 30       	cpi	r24, 0x05	; 5
   10fa2:	39 f4       	brne	.+14     	; 0x10fb2 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   10fa4:	83 81       	ldd	r24, Z+3	; 0x03
   10fa6:	94 81       	ldd	r25, Z+4	; 0x04
   10fa8:	a5 81       	ldd	r26, Z+5	; 0x05
   10faa:	b6 81       	ldd	r27, Z+6	; 0x06
   10fac:	9c 01       	movw	r18, r24
   10fae:	ad 01       	movw	r20, r26
   10fb0:	e0 cf       	rjmp	.-64     	; 0x10f72 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   10fb2:	63 81       	ldd	r22, Z+3	; 0x03
   10fb4:	74 81       	ldd	r23, Z+4	; 0x04
   10fb6:	85 81       	ldd	r24, Z+5	; 0x05
   10fb8:	96 81       	ldd	r25, Z+6	; 0x06
   10fba:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   10fbe:	df 91       	pop	r29
   10fc0:	cf 91       	pop	r28
   10fc2:	1f 91       	pop	r17
   10fc4:	0f 91       	pop	r16
   10fc6:	08 95       	ret

00010fc8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   10fc8:	fc 01       	movw	r30, r24
   10fca:	a0 81       	ld	r26, Z
   10fcc:	b1 81       	ldd	r27, Z+1	; 0x01
   10fce:	8c 91       	ld	r24, X
   10fd0:	8d 30       	cpi	r24, 0x0D	; 13
   10fd2:	51 f0       	breq	.+20     	; 0x10fe8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10fd4:	20 f4       	brcc	.+8      	; 0x10fde <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   10fd6:	89 50       	subi	r24, 0x09	; 9
   10fd8:	82 30       	cpi	r24, 0x02	; 2
   10fda:	b8 f5       	brcc	.+110    	; 0x1104a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   10fdc:	05 c0       	rjmp	.+10     	; 0x10fe8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10fde:	80 32       	cpi	r24, 0x20	; 32
   10fe0:	19 f0       	breq	.+6      	; 0x10fe8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10fe2:	8f 32       	cpi	r24, 0x2F	; 47
   10fe4:	19 f0       	breq	.+6      	; 0x10fec <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   10fe6:	08 95       	ret
   10fe8:	11 96       	adiw	r26, 0x01	; 1
   10fea:	2c c0       	rjmp	.+88     	; 0x11044 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   10fec:	11 96       	adiw	r26, 0x01	; 1
   10fee:	8c 91       	ld	r24, X
   10ff0:	11 97       	sbiw	r26, 0x01	; 1
   10ff2:	8a 32       	cpi	r24, 0x2A	; 42
   10ff4:	19 f0       	breq	.+6      	; 0x10ffc <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   10ff6:	8f 32       	cpi	r24, 0x2F	; 47
   10ff8:	d1 f0       	breq	.+52     	; 0x1102e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   10ffa:	08 95       	ret
   10ffc:	11 96       	adiw	r26, 0x01	; 1
   10ffe:	b1 83       	std	Z+1, r27	; 0x01
   11000:	a0 83       	st	Z, r26
   11002:	a0 81       	ld	r26, Z
   11004:	b1 81       	ldd	r27, Z+1	; 0x01
   11006:	cd 01       	movw	r24, r26
   11008:	01 96       	adiw	r24, 0x01	; 1
   1100a:	91 83       	std	Z+1, r25	; 0x01
   1100c:	80 83       	st	Z, r24
   1100e:	11 96       	adiw	r26, 0x01	; 1
   11010:	8c 91       	ld	r24, X
   11012:	11 97       	sbiw	r26, 0x01	; 1
   11014:	88 23       	and	r24, r24
   11016:	c9 f0       	breq	.+50     	; 0x1104a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11018:	8a 32       	cpi	r24, 0x2A	; 42
   1101a:	99 f7       	brne	.-26     	; 0x11002 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   1101c:	12 96       	adiw	r26, 0x02	; 2
   1101e:	8c 91       	ld	r24, X
   11020:	12 97       	sbiw	r26, 0x02	; 2
   11022:	8f 32       	cpi	r24, 0x2F	; 47
   11024:	71 f7       	brne	.-36     	; 0x11002 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   11026:	13 96       	adiw	r26, 0x03	; 3
   11028:	0d c0       	rjmp	.+26     	; 0x11044 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   1102a:	8a 30       	cpi	r24, 0x0A	; 10
   1102c:	71 f2       	breq	.-100    	; 0x10fca <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   1102e:	a0 81       	ld	r26, Z
   11030:	b1 81       	ldd	r27, Z+1	; 0x01
   11032:	cd 01       	movw	r24, r26
   11034:	01 96       	adiw	r24, 0x01	; 1
   11036:	91 83       	std	Z+1, r25	; 0x01
   11038:	80 83       	st	Z, r24
   1103a:	11 96       	adiw	r26, 0x01	; 1
   1103c:	8c 91       	ld	r24, X
   1103e:	81 11       	cpse	r24, r1
   11040:	f4 cf       	rjmp	.-24     	; 0x1102a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   11042:	03 c0       	rjmp	.+6      	; 0x1104a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11044:	b1 83       	std	Z+1, r27	; 0x01
   11046:	a0 83       	st	Z, r26
   11048:	c0 cf       	rjmp	.-128    	; 0x10fca <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   1104a:	08 95       	ret

0001104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   1104c:	1f 93       	push	r17
   1104e:	cf 93       	push	r28
   11050:	df 93       	push	r29
   11052:	ec 01       	movw	r28, r24
   11054:	16 2f       	mov	r17, r22
   11056:	b8 df       	rcall	.-144    	; 0x10fc8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11058:	e8 81       	ld	r30, Y
   1105a:	f9 81       	ldd	r31, Y+1	; 0x01
   1105c:	80 81       	ld	r24, Z
   1105e:	18 13       	cpse	r17, r24
   11060:	05 c0       	rjmp	.+10     	; 0x1106c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   11062:	31 96       	adiw	r30, 0x01	; 1
   11064:	f9 83       	std	Y+1, r31	; 0x01
   11066:	e8 83       	st	Y, r30
   11068:	81 e0       	ldi	r24, 0x01	; 1
   1106a:	01 c0       	rjmp	.+2      	; 0x1106e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   1106c:	80 e0       	ldi	r24, 0x00	; 0
   1106e:	df 91       	pop	r29
   11070:	cf 91       	pop	r28
   11072:	1f 91       	pop	r17
   11074:	08 95       	ret

00011076 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   11076:	0f 93       	push	r16
   11078:	1f 93       	push	r17
   1107a:	cf 93       	push	r28
   1107c:	df 93       	push	r29
   1107e:	ec 01       	movw	r28, r24
   11080:	0c 81       	ldd	r16, Y+4	; 0x04
   11082:	1d 81       	ldd	r17, Y+5	; 0x05
   11084:	02 96       	adiw	r24, 0x02	; 2
   11086:	a0 df       	rcall	.-192    	; 0x10fc8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11088:	ea 81       	ldd	r30, Y+2	; 0x02
   1108a:	fb 81       	ldd	r31, Y+3	; 0x03
   1108c:	80 81       	ld	r24, Z
   1108e:	87 32       	cpi	r24, 0x27	; 39
   11090:	31 f1       	breq	.+76     	; 0x110de <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11092:	82 32       	cpi	r24, 0x22	; 34
   11094:	21 f1       	breq	.+72     	; 0x110de <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11096:	90 ed       	ldi	r25, 0xD0	; 208
   11098:	98 0f       	add	r25, r24
   1109a:	9a 30       	cpi	r25, 0x0A	; 10
   1109c:	70 f0       	brcs	.+28     	; 0x110ba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1109e:	91 ea       	ldi	r25, 0xA1	; 161
   110a0:	98 0f       	add	r25, r24
   110a2:	9c 31       	cpi	r25, 0x1C	; 28
   110a4:	50 f0       	brcs	.+20     	; 0x110ba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   110a6:	9f eb       	ldi	r25, 0xBF	; 191
   110a8:	98 0f       	add	r25, r24
   110aa:	9a 31       	cpi	r25, 0x1A	; 26
   110ac:	30 f0       	brcs	.+12     	; 0x110ba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   110ae:	8b 32       	cpi	r24, 0x2B	; 43
   110b0:	21 f0       	breq	.+8      	; 0x110ba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   110b2:	93 ed       	ldi	r25, 0xD3	; 211
   110b4:	98 0f       	add	r25, r24
   110b6:	92 30       	cpi	r25, 0x02	; 2
   110b8:	f0 f5       	brcc	.+124    	; 0x11136 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   110ba:	2a 81       	ldd	r18, Y+2	; 0x02
   110bc:	3b 81       	ldd	r19, Y+3	; 0x03
   110be:	2f 5f       	subi	r18, 0xFF	; 255
   110c0:	3f 4f       	sbci	r19, 0xFF	; 255
   110c2:	3b 83       	std	Y+3, r19	; 0x03
   110c4:	2a 83       	std	Y+2, r18	; 0x02
   110c6:	ec 81       	ldd	r30, Y+4	; 0x04
   110c8:	fd 81       	ldd	r31, Y+5	; 0x05
   110ca:	9f 01       	movw	r18, r30
   110cc:	2f 5f       	subi	r18, 0xFF	; 255
   110ce:	3f 4f       	sbci	r19, 0xFF	; 255
   110d0:	3d 83       	std	Y+5, r19	; 0x05
   110d2:	2c 83       	std	Y+4, r18	; 0x04
   110d4:	80 83       	st	Z, r24
   110d6:	ea 81       	ldd	r30, Y+2	; 0x02
   110d8:	fb 81       	ldd	r31, Y+3	; 0x03
   110da:	80 81       	ld	r24, Z
   110dc:	dc cf       	rjmp	.-72     	; 0x11096 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   110de:	31 96       	adiw	r30, 0x01	; 1
   110e0:	fb 83       	std	Y+3, r31	; 0x03
   110e2:	ea 83       	std	Y+2, r30	; 0x02
   110e4:	ea 81       	ldd	r30, Y+2	; 0x02
   110e6:	fb 81       	ldd	r31, Y+3	; 0x03
   110e8:	90 81       	ld	r25, Z
   110ea:	99 23       	and	r25, r25
   110ec:	21 f1       	breq	.+72     	; 0x11136 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   110ee:	9f 01       	movw	r18, r30
   110f0:	2f 5f       	subi	r18, 0xFF	; 255
   110f2:	3f 4f       	sbci	r19, 0xFF	; 255
   110f4:	3b 83       	std	Y+3, r19	; 0x03
   110f6:	2a 83       	std	Y+2, r18	; 0x02
   110f8:	98 17       	cp	r25, r24
   110fa:	e9 f0       	breq	.+58     	; 0x11136 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   110fc:	9c 35       	cpi	r25, 0x5C	; 92
   110fe:	91 f4       	brne	.+36     	; 0x11124 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   11100:	91 81       	ldd	r25, Z+1	; 0x01
   11102:	a1 ee       	ldi	r26, 0xE1	; 225
   11104:	b6 e0       	ldi	r27, 0x06	; 6
   11106:	2c 91       	ld	r18, X
   11108:	22 23       	and	r18, r18
   1110a:	39 f0       	breq	.+14     	; 0x1111a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   1110c:	92 13       	cpse	r25, r18
   1110e:	03 c0       	rjmp	.+6      	; 0x11116 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   11110:	11 96       	adiw	r26, 0x01	; 1
   11112:	9c 91       	ld	r25, X
   11114:	02 c0       	rjmp	.+4      	; 0x1111a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   11116:	12 96       	adiw	r26, 0x02	; 2
   11118:	f6 cf       	rjmp	.-20     	; 0x11106 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   1111a:	99 23       	and	r25, r25
   1111c:	61 f0       	breq	.+24     	; 0x11136 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1111e:	32 96       	adiw	r30, 0x02	; 2
   11120:	fb 83       	std	Y+3, r31	; 0x03
   11122:	ea 83       	std	Y+2, r30	; 0x02
   11124:	ec 81       	ldd	r30, Y+4	; 0x04
   11126:	fd 81       	ldd	r31, Y+5	; 0x05
   11128:	9f 01       	movw	r18, r30
   1112a:	2f 5f       	subi	r18, 0xFF	; 255
   1112c:	3f 4f       	sbci	r19, 0xFF	; 255
   1112e:	3d 83       	std	Y+5, r19	; 0x05
   11130:	2c 83       	std	Y+4, r18	; 0x04
   11132:	90 83       	st	Z, r25
   11134:	d7 cf       	rjmp	.-82     	; 0x110e4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   11136:	ec 81       	ldd	r30, Y+4	; 0x04
   11138:	fd 81       	ldd	r31, Y+5	; 0x05
   1113a:	cf 01       	movw	r24, r30
   1113c:	01 96       	adiw	r24, 0x01	; 1
   1113e:	9d 83       	std	Y+5, r25	; 0x05
   11140:	8c 83       	std	Y+4, r24	; 0x04
   11142:	10 82       	st	Z, r1
   11144:	c8 01       	movw	r24, r16
   11146:	df 91       	pop	r29
   11148:	cf 91       	pop	r28
   1114a:	1f 91       	pop	r17
   1114c:	0f 91       	pop	r16
   1114e:	08 95       	ret

00011150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   11150:	0f 93       	push	r16
   11152:	1f 93       	push	r17
   11154:	cf 93       	push	r28
   11156:	df 93       	push	r29
   11158:	8b 01       	movw	r16, r22
   1115a:	fc 01       	movw	r30, r24
   1115c:	c2 81       	ldd	r28, Z+2	; 0x02
   1115e:	d3 81       	ldd	r29, Z+3	; 0x03
   11160:	20 97       	sbiw	r28, 0x00	; 0
   11162:	a1 f0       	breq	.+40     	; 0x1118c <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11164:	8a 81       	ldd	r24, Y+2	; 0x02
   11166:	9b 81       	ldd	r25, Y+3	; 0x03
   11168:	01 15       	cp	r16, r1
   1116a:	11 05       	cpc	r17, r1
   1116c:	11 f0       	breq	.+4      	; 0x11172 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   1116e:	00 97       	sbiw	r24, 0x00	; 0
   11170:	21 f4       	brne	.+8      	; 0x1117a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   11172:	80 17       	cp	r24, r16
   11174:	91 07       	cpc	r25, r17
   11176:	31 f4       	brne	.+12     	; 0x11184 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   11178:	09 c0       	rjmp	.+18     	; 0x1118c <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   1117a:	b8 01       	movw	r22, r16
   1117c:	0e 94 92 e9 	call	0x1d324	; 0x1d324 <strcmp_P>
   11180:	89 2b       	or	r24, r25
   11182:	21 f0       	breq	.+8      	; 0x1118c <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11184:	09 90       	ld	r0, Y+
   11186:	d8 81       	ld	r29, Y
   11188:	c0 2d       	mov	r28, r0
   1118a:	ea cf       	rjmp	.-44     	; 0x11160 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   1118c:	ce 01       	movw	r24, r28
   1118e:	df 91       	pop	r29
   11190:	cf 91       	pop	r28
   11192:	1f 91       	pop	r17
   11194:	0f 91       	pop	r16
   11196:	08 95       	ret

00011198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   11198:	cf 93       	push	r28
   1119a:	df 93       	push	r29
   1119c:	ec 01       	movw	r28, r24
   1119e:	68 81       	ld	r22, Y
   111a0:	79 81       	ldd	r23, Y+1	; 0x01
   111a2:	89 e0       	ldi	r24, 0x09	; 9
   111a4:	90 e0       	ldi	r25, 0x00	; 0
   111a6:	74 db       	rcall	.-2328   	; 0x10890 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   111a8:	00 97       	sbiw	r24, 0x00	; 0
   111aa:	21 f0       	breq	.+8      	; 0x111b4 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   111ac:	fc 01       	movw	r30, r24
   111ae:	11 82       	std	Z+1, r1	; 0x01
   111b0:	10 82       	st	Z, r1
   111b2:	14 82       	std	Z+4, r1	; 0x04
   111b4:	ea 81       	ldd	r30, Y+2	; 0x02
   111b6:	fb 81       	ldd	r31, Y+3	; 0x03
   111b8:	30 97       	sbiw	r30, 0x00	; 0
   111ba:	51 f0       	breq	.+20     	; 0x111d0 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   111bc:	20 81       	ld	r18, Z
   111be:	31 81       	ldd	r19, Z+1	; 0x01
   111c0:	21 15       	cp	r18, r1
   111c2:	31 05       	cpc	r19, r1
   111c4:	11 f0       	breq	.+4      	; 0x111ca <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   111c6:	f9 01       	movw	r30, r18
   111c8:	f9 cf       	rjmp	.-14     	; 0x111bc <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   111ca:	91 83       	std	Z+1, r25	; 0x01
   111cc:	80 83       	st	Z, r24
   111ce:	02 c0       	rjmp	.+4      	; 0x111d4 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   111d0:	9b 83       	std	Y+3, r25	; 0x03
   111d2:	8a 83       	std	Y+2, r24	; 0x02
   111d4:	df 91       	pop	r29
   111d6:	cf 91       	pop	r28
   111d8:	08 95       	ret

000111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   111da:	cf 92       	push	r12
   111dc:	df 92       	push	r13
   111de:	ef 92       	push	r14
   111e0:	ff 92       	push	r15
   111e2:	0f 93       	push	r16
   111e4:	1f 93       	push	r17
   111e6:	cf 93       	push	r28
   111e8:	df 93       	push	r29
   111ea:	41 15       	cp	r20, r1
   111ec:	51 05       	cpc	r21, r1
   111ee:	e1 f0       	breq	.+56     	; 0x11228 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   111f0:	ea 01       	movw	r28, r20
   111f2:	8b 01       	movw	r16, r22
   111f4:	7c 01       	movw	r14, r24
   111f6:	ca 01       	movw	r24, r20
   111f8:	0e 94 9b e9 	call	0x1d336	; 0x1d336 <__strlen_P>
   111fc:	01 96       	adiw	r24, 0x01	; 1
   111fe:	6c 01       	movw	r12, r24
   11200:	d7 01       	movw	r26, r14
   11202:	ed 91       	ld	r30, X+
   11204:	fc 91       	ld	r31, X
   11206:	01 90       	ld	r0, Z+
   11208:	f0 81       	ld	r31, Z
   1120a:	e0 2d       	mov	r30, r0
   1120c:	bc 01       	movw	r22, r24
   1120e:	c7 01       	movw	r24, r14
   11210:	19 95       	eicall
   11212:	7c 01       	movw	r14, r24
   11214:	00 97       	sbiw	r24, 0x00	; 0
   11216:	69 f0       	breq	.+26     	; 0x11232 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   11218:	a6 01       	movw	r20, r12
   1121a:	be 01       	movw	r22, r28
   1121c:	0e 94 89 e9 	call	0x1d312	; 0x1d312 <memcpy_P>
   11220:	f8 01       	movw	r30, r16
   11222:	f1 82       	std	Z+1, r15	; 0x01
   11224:	e0 82       	st	Z, r14
   11226:	03 c0       	rjmp	.+6      	; 0x1122e <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   11228:	db 01       	movw	r26, r22
   1122a:	1d 92       	st	X+, r1
   1122c:	1c 92       	st	X, r1
   1122e:	81 e0       	ldi	r24, 0x01	; 1
   11230:	01 c0       	rjmp	.+2      	; 0x11234 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   11232:	80 e0       	ldi	r24, 0x00	; 0
   11234:	df 91       	pop	r29
   11236:	cf 91       	pop	r28
   11238:	1f 91       	pop	r17
   1123a:	0f 91       	pop	r16
   1123c:	ff 90       	pop	r15
   1123e:	ef 90       	pop	r14
   11240:	df 90       	pop	r13
   11242:	cf 90       	pop	r12
   11244:	08 95       	ret

00011246 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   11246:	cf 92       	push	r12
   11248:	df 92       	push	r13
   1124a:	ef 92       	push	r14
   1124c:	ff 92       	push	r15
   1124e:	0f 93       	push	r16
   11250:	1f 93       	push	r17
   11252:	cf 93       	push	r28
   11254:	df 93       	push	r29
   11256:	61 15       	cp	r22, r1
   11258:	71 05       	cpc	r23, r1
   1125a:	11 f4       	brne	.+4      	; 0x11260 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1125c:	80 e0       	ldi	r24, 0x00	; 0
   1125e:	22 c0       	rjmp	.+68     	; 0x112a4 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11260:	6a 01       	movw	r12, r20
   11262:	7b 01       	movw	r14, r22
   11264:	8c 01       	movw	r16, r24
   11266:	74 df       	rcall	.-280    	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11268:	ec 01       	movw	r28, r24
   1126a:	89 2b       	or	r24, r25
   1126c:	79 f4       	brne	.+30     	; 0x1128c <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1126e:	c8 01       	movw	r24, r16
   11270:	93 df       	rcall	.-218    	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11272:	ec 01       	movw	r28, r24
   11274:	00 97       	sbiw	r24, 0x00	; 0
   11276:	91 f3       	breq	.-28     	; 0x1125c <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11278:	a7 01       	movw	r20, r14
   1127a:	bc 01       	movw	r22, r24
   1127c:	6e 5f       	subi	r22, 0xFE	; 254
   1127e:	7f 4f       	sbci	r23, 0xFF	; 255
   11280:	f8 01       	movw	r30, r16
   11282:	80 81       	ld	r24, Z
   11284:	91 81       	ldd	r25, Z+1	; 0x01
   11286:	a9 df       	rcall	.-174    	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11288:	88 23       	and	r24, r24
   1128a:	41 f3       	breq	.-48     	; 0x1125c <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1128c:	f6 01       	movw	r30, r12
   1128e:	80 81       	ld	r24, Z
   11290:	90 e0       	ldi	r25, 0x00	; 0
   11292:	a0 e0       	ldi	r26, 0x00	; 0
   11294:	b0 e0       	ldi	r27, 0x00	; 0
   11296:	23 e0       	ldi	r18, 0x03	; 3
   11298:	2c 83       	std	Y+4, r18	; 0x04
   1129a:	8d 83       	std	Y+5, r24	; 0x05
   1129c:	9e 83       	std	Y+6, r25	; 0x06
   1129e:	af 83       	std	Y+7, r26	; 0x07
   112a0:	b8 87       	std	Y+8, r27	; 0x08
   112a2:	81 e0       	ldi	r24, 0x01	; 1
   112a4:	df 91       	pop	r29
   112a6:	cf 91       	pop	r28
   112a8:	1f 91       	pop	r17
   112aa:	0f 91       	pop	r16
   112ac:	ff 90       	pop	r15
   112ae:	ef 90       	pop	r14
   112b0:	df 90       	pop	r13
   112b2:	cf 90       	pop	r12
   112b4:	08 95       	ret

000112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   112b6:	cf 92       	push	r12
   112b8:	df 92       	push	r13
   112ba:	ef 92       	push	r14
   112bc:	ff 92       	push	r15
   112be:	0f 93       	push	r16
   112c0:	1f 93       	push	r17
   112c2:	cf 93       	push	r28
   112c4:	df 93       	push	r29
   112c6:	61 15       	cp	r22, r1
   112c8:	71 05       	cpc	r23, r1
   112ca:	11 f4       	brne	.+4      	; 0x112d0 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   112cc:	80 e0       	ldi	r24, 0x00	; 0
   112ce:	22 c0       	rjmp	.+68     	; 0x11314 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   112d0:	6a 01       	movw	r12, r20
   112d2:	7b 01       	movw	r14, r22
   112d4:	8c 01       	movw	r16, r24
   112d6:	3c df       	rcall	.-392    	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   112d8:	ec 01       	movw	r28, r24
   112da:	89 2b       	or	r24, r25
   112dc:	79 f4       	brne	.+30     	; 0x112fc <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   112de:	c8 01       	movw	r24, r16
   112e0:	5b df       	rcall	.-330    	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   112e2:	ec 01       	movw	r28, r24
   112e4:	00 97       	sbiw	r24, 0x00	; 0
   112e6:	91 f3       	breq	.-28     	; 0x112cc <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   112e8:	a7 01       	movw	r20, r14
   112ea:	bc 01       	movw	r22, r24
   112ec:	6e 5f       	subi	r22, 0xFE	; 254
   112ee:	7f 4f       	sbci	r23, 0xFF	; 255
   112f0:	f8 01       	movw	r30, r16
   112f2:	80 81       	ld	r24, Z
   112f4:	91 81       	ldd	r25, Z+1	; 0x01
   112f6:	71 df       	rcall	.-286    	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   112f8:	88 23       	and	r24, r24
   112fa:	41 f3       	breq	.-48     	; 0x112cc <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   112fc:	f6 01       	movw	r30, r12
   112fe:	80 81       	ld	r24, Z
   11300:	91 81       	ldd	r25, Z+1	; 0x01
   11302:	a0 e0       	ldi	r26, 0x00	; 0
   11304:	b0 e0       	ldi	r27, 0x00	; 0
   11306:	24 e0       	ldi	r18, 0x04	; 4
   11308:	2c 83       	std	Y+4, r18	; 0x04
   1130a:	8d 83       	std	Y+5, r24	; 0x05
   1130c:	9e 83       	std	Y+6, r25	; 0x06
   1130e:	af 83       	std	Y+7, r26	; 0x07
   11310:	b8 87       	std	Y+8, r27	; 0x08
   11312:	81 e0       	ldi	r24, 0x01	; 1
   11314:	df 91       	pop	r29
   11316:	cf 91       	pop	r28
   11318:	1f 91       	pop	r17
   1131a:	0f 91       	pop	r16
   1131c:	ff 90       	pop	r15
   1131e:	ef 90       	pop	r14
   11320:	df 90       	pop	r13
   11322:	cf 90       	pop	r12
   11324:	08 95       	ret

00011326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   11326:	cf 92       	push	r12
   11328:	df 92       	push	r13
   1132a:	ef 92       	push	r14
   1132c:	ff 92       	push	r15
   1132e:	0f 93       	push	r16
   11330:	1f 93       	push	r17
   11332:	cf 93       	push	r28
   11334:	df 93       	push	r29
   11336:	61 15       	cp	r22, r1
   11338:	71 05       	cpc	r23, r1
   1133a:	21 f1       	breq	.+72     	; 0x11384 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1133c:	6a 01       	movw	r12, r20
   1133e:	7b 01       	movw	r14, r22
   11340:	8c 01       	movw	r16, r24
   11342:	06 df       	rcall	.-500    	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11344:	ec 01       	movw	r28, r24
   11346:	89 2b       	or	r24, r25
   11348:	79 f4       	brne	.+30     	; 0x11368 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   1134a:	c8 01       	movw	r24, r16
   1134c:	25 df       	rcall	.-438    	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1134e:	ec 01       	movw	r28, r24
   11350:	00 97       	sbiw	r24, 0x00	; 0
   11352:	c1 f0       	breq	.+48     	; 0x11384 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11354:	a7 01       	movw	r20, r14
   11356:	bc 01       	movw	r22, r24
   11358:	6e 5f       	subi	r22, 0xFE	; 254
   1135a:	7f 4f       	sbci	r23, 0xFF	; 255
   1135c:	f8 01       	movw	r30, r16
   1135e:	80 81       	ld	r24, Z
   11360:	91 81       	ldd	r25, Z+1	; 0x01
   11362:	3b df       	rcall	.-394    	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11364:	88 23       	and	r24, r24
   11366:	71 f0       	breq	.+28     	; 0x11384 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11368:	f6 01       	movw	r30, r12
   1136a:	60 81       	ld	r22, Z
   1136c:	71 81       	ldd	r23, Z+1	; 0x01
   1136e:	ce 01       	movw	r24, r28
   11370:	04 96       	adiw	r24, 0x04	; 4
   11372:	df 91       	pop	r29
   11374:	cf 91       	pop	r28
   11376:	1f 91       	pop	r17
   11378:	0f 91       	pop	r16
   1137a:	ff 90       	pop	r15
   1137c:	ef 90       	pop	r14
   1137e:	df 90       	pop	r13
   11380:	cf 90       	pop	r12
   11382:	58 ca       	rjmp	.-2896   	; 0x10834 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>
   11384:	80 e0       	ldi	r24, 0x00	; 0
   11386:	df 91       	pop	r29
   11388:	cf 91       	pop	r28
   1138a:	1f 91       	pop	r17
   1138c:	0f 91       	pop	r16
   1138e:	ff 90       	pop	r15
   11390:	ef 90       	pop	r14
   11392:	df 90       	pop	r13
   11394:	cf 90       	pop	r12
   11396:	08 95       	ret

00011398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   11398:	cf 92       	push	r12
   1139a:	df 92       	push	r13
   1139c:	ef 92       	push	r14
   1139e:	ff 92       	push	r15
   113a0:	0f 93       	push	r16
   113a2:	1f 93       	push	r17
   113a4:	cf 93       	push	r28
   113a6:	df 93       	push	r29
   113a8:	61 15       	cp	r22, r1
   113aa:	71 05       	cpc	r23, r1
   113ac:	11 f4       	brne	.+4      	; 0x113b2 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   113ae:	80 e0       	ldi	r24, 0x00	; 0
   113b0:	22 c0       	rjmp	.+68     	; 0x113f6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   113b2:	6a 01       	movw	r12, r20
   113b4:	7b 01       	movw	r14, r22
   113b6:	8c 01       	movw	r16, r24
   113b8:	cb de       	rcall	.-618    	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   113ba:	ec 01       	movw	r28, r24
   113bc:	89 2b       	or	r24, r25
   113be:	79 f4       	brne	.+30     	; 0x113de <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   113c0:	c8 01       	movw	r24, r16
   113c2:	ea de       	rcall	.-556    	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   113c4:	ec 01       	movw	r28, r24
   113c6:	00 97       	sbiw	r24, 0x00	; 0
   113c8:	91 f3       	breq	.-28     	; 0x113ae <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   113ca:	a7 01       	movw	r20, r14
   113cc:	bc 01       	movw	r22, r24
   113ce:	6e 5f       	subi	r22, 0xFE	; 254
   113d0:	7f 4f       	sbci	r23, 0xFF	; 255
   113d2:	f8 01       	movw	r30, r16
   113d4:	80 81       	ld	r24, Z
   113d6:	91 81       	ldd	r25, Z+1	; 0x01
   113d8:	00 df       	rcall	.-512    	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   113da:	88 23       	and	r24, r24
   113dc:	41 f3       	breq	.-48     	; 0x113ae <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   113de:	f6 01       	movw	r30, r12
   113e0:	80 81       	ld	r24, Z
   113e2:	90 e0       	ldi	r25, 0x00	; 0
   113e4:	a0 e0       	ldi	r26, 0x00	; 0
   113e6:	b0 e0       	ldi	r27, 0x00	; 0
   113e8:	24 e0       	ldi	r18, 0x04	; 4
   113ea:	2c 83       	std	Y+4, r18	; 0x04
   113ec:	8d 83       	std	Y+5, r24	; 0x05
   113ee:	9e 83       	std	Y+6, r25	; 0x06
   113f0:	af 83       	std	Y+7, r26	; 0x07
   113f2:	b8 87       	std	Y+8, r27	; 0x08
   113f4:	81 e0       	ldi	r24, 0x01	; 1
   113f6:	df 91       	pop	r29
   113f8:	cf 91       	pop	r28
   113fa:	1f 91       	pop	r17
   113fc:	0f 91       	pop	r16
   113fe:	ff 90       	pop	r15
   11400:	ef 90       	pop	r14
   11402:	df 90       	pop	r13
   11404:	cf 90       	pop	r12
   11406:	08 95       	ret

00011408 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   11408:	0f 93       	push	r16
   1140a:	1f 93       	push	r17
   1140c:	cf 93       	push	r28
   1140e:	df 93       	push	r29
   11410:	8b 01       	movw	r16, r22
   11412:	fc 01       	movw	r30, r24
   11414:	c2 81       	ldd	r28, Z+2	; 0x02
   11416:	d3 81       	ldd	r29, Z+3	; 0x03
   11418:	20 97       	sbiw	r28, 0x00	; 0
   1141a:	a9 f0       	breq	.+42     	; 0x11446 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   1141c:	6a 81       	ldd	r22, Y+2	; 0x02
   1141e:	7b 81       	ldd	r23, Y+3	; 0x03
   11420:	01 15       	cp	r16, r1
   11422:	11 05       	cpc	r17, r1
   11424:	19 f0       	breq	.+6      	; 0x1142c <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   11426:	61 15       	cp	r22, r1
   11428:	71 05       	cpc	r23, r1
   1142a:	21 f4       	brne	.+8      	; 0x11434 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   1142c:	60 17       	cp	r22, r16
   1142e:	71 07       	cpc	r23, r17
   11430:	31 f4       	brne	.+12     	; 0x1143e <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   11432:	09 c0       	rjmp	.+18     	; 0x11446 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   11434:	c8 01       	movw	r24, r16
   11436:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   1143a:	89 2b       	or	r24, r25
   1143c:	21 f0       	breq	.+8      	; 0x11446 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   1143e:	09 90       	ld	r0, Y+
   11440:	d8 81       	ld	r29, Y
   11442:	c0 2d       	mov	r28, r0
   11444:	e9 cf       	rjmp	.-46     	; 0x11418 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   11446:	ce 01       	movw	r24, r28
   11448:	df 91       	pop	r29
   1144a:	cf 91       	pop	r28
   1144c:	1f 91       	pop	r17
   1144e:	0f 91       	pop	r16
   11450:	08 95       	ret

00011452 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   11452:	ef 92       	push	r14
   11454:	ff 92       	push	r15
   11456:	0f 93       	push	r16
   11458:	1f 93       	push	r17
   1145a:	cf 93       	push	r28
   1145c:	df 93       	push	r29
   1145e:	61 15       	cp	r22, r1
   11460:	71 05       	cpc	r23, r1
   11462:	c1 f0       	breq	.+48     	; 0x11494 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   11464:	7a 01       	movw	r14, r20
   11466:	eb 01       	movw	r28, r22
   11468:	8c 01       	movw	r16, r24
   1146a:	ce df       	rcall	.-100    	; 0x11408 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1146c:	00 97       	sbiw	r24, 0x00	; 0
   1146e:	39 f4       	brne	.+14     	; 0x1147e <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   11470:	c8 01       	movw	r24, r16
   11472:	92 de       	rcall	.-732    	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11474:	00 97       	sbiw	r24, 0x00	; 0
   11476:	71 f0       	breq	.+28     	; 0x11494 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   11478:	fc 01       	movw	r30, r24
   1147a:	d3 83       	std	Z+3, r29	; 0x03
   1147c:	c2 83       	std	Z+2, r28	; 0x02
   1147e:	f7 01       	movw	r30, r14
   11480:	60 81       	ld	r22, Z
   11482:	71 81       	ldd	r23, Z+1	; 0x01
   11484:	04 96       	adiw	r24, 0x04	; 4
   11486:	df 91       	pop	r29
   11488:	cf 91       	pop	r28
   1148a:	1f 91       	pop	r17
   1148c:	0f 91       	pop	r16
   1148e:	ff 90       	pop	r15
   11490:	ef 90       	pop	r14
   11492:	d0 c9       	rjmp	.-3168   	; 0x10834 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>
   11494:	80 e0       	ldi	r24, 0x00	; 0
   11496:	df 91       	pop	r29
   11498:	cf 91       	pop	r28
   1149a:	1f 91       	pop	r17
   1149c:	0f 91       	pop	r16
   1149e:	ff 90       	pop	r15
   114a0:	ef 90       	pop	r14
   114a2:	08 95       	ret

000114a4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   114a4:	cf 92       	push	r12
   114a6:	df 92       	push	r13
   114a8:	ef 92       	push	r14
   114aa:	ff 92       	push	r15
   114ac:	0f 93       	push	r16
   114ae:	1f 93       	push	r17
   114b0:	cf 93       	push	r28
   114b2:	df 93       	push	r29
   114b4:	00 d0       	rcall	.+0      	; 0x114b6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   114b6:	1f 92       	push	r1
   114b8:	1f 92       	push	r1
   114ba:	cd b7       	in	r28, 0x3d	; 61
   114bc:	de b7       	in	r29, 0x3e	; 62
   114be:	7c 01       	movw	r14, r24
   114c0:	fc 01       	movw	r30, r24
   114c2:	86 81       	ldd	r24, Z+6	; 0x06
   114c4:	88 23       	and	r24, r24
   114c6:	09 f4       	brne	.+2      	; 0x114ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   114c8:	67 c0       	rjmp	.+206    	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   114ca:	81 50       	subi	r24, 0x01	; 1
   114cc:	f7 01       	movw	r30, r14
   114ce:	86 83       	std	Z+6, r24	; 0x06
   114d0:	00 81       	ld	r16, Z
   114d2:	11 81       	ldd	r17, Z+1	; 0x01
   114d4:	b8 01       	movw	r22, r16
   114d6:	84 e0       	ldi	r24, 0x04	; 4
   114d8:	90 e0       	ldi	r25, 0x00	; 0
   114da:	da d9       	rcall	.-3148   	; 0x10890 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   114dc:	00 97       	sbiw	r24, 0x00	; 0
   114de:	09 f4       	brne	.+2      	; 0x114e2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   114e0:	5d c0       	rjmp	.+186    	; 0x1159c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   114e2:	fc 01       	movw	r30, r24
   114e4:	11 83       	std	Z+1, r17	; 0x01
   114e6:	00 83       	st	Z, r16
   114e8:	13 82       	std	Z+3, r1	; 0x03
   114ea:	12 82       	std	Z+2, r1	; 0x02
   114ec:	8c 01       	movw	r16, r24
   114ee:	67 01       	movw	r12, r14
   114f0:	f2 e0       	ldi	r31, 0x02	; 2
   114f2:	cf 0e       	add	r12, r31
   114f4:	d1 1c       	adc	r13, r1
   114f6:	6b e5       	ldi	r22, 0x5B	; 91
   114f8:	c6 01       	movw	r24, r12
   114fa:	a8 dd       	rcall	.-1200   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   114fc:	88 23       	and	r24, r24
   114fe:	09 f4       	brne	.+2      	; 0x11502 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   11500:	4b c0       	rjmp	.+150    	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11502:	6d e5       	ldi	r22, 0x5D	; 93
   11504:	c6 01       	movw	r24, r12
   11506:	a2 dd       	rcall	.-1212   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11508:	81 11       	cpse	r24, r1
   1150a:	40 c0       	rjmp	.+128    	; 0x1158c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   1150c:	19 82       	std	Y+1, r1	; 0x01
   1150e:	be 01       	movw	r22, r28
   11510:	6f 5f       	subi	r22, 0xFF	; 255
   11512:	7f 4f       	sbci	r23, 0xFF	; 255
   11514:	c7 01       	movw	r24, r14
   11516:	52 d0       	rcall	.+164    	; 0x115bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11518:	88 23       	and	r24, r24
   1151a:	09 f4       	brne	.+2      	; 0x1151e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   1151c:	3d c0       	rjmp	.+122    	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1151e:	f8 01       	movw	r30, r16
   11520:	60 81       	ld	r22, Z
   11522:	71 81       	ldd	r23, Z+1	; 0x01
   11524:	87 e0       	ldi	r24, 0x07	; 7
   11526:	90 e0       	ldi	r25, 0x00	; 0
   11528:	b3 d9       	rcall	.-3226   	; 0x10890 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   1152a:	dc 01       	movw	r26, r24
   1152c:	89 2b       	or	r24, r25
   1152e:	31 f0       	breq	.+12     	; 0x1153c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   11530:	11 96       	adiw	r26, 0x01	; 1
   11532:	1c 92       	st	X, r1
   11534:	1e 92       	st	-X, r1
   11536:	12 96       	adiw	r26, 0x02	; 2
   11538:	1c 92       	st	X, r1
   1153a:	12 97       	sbiw	r26, 0x02	; 2
   1153c:	f8 01       	movw	r30, r16
   1153e:	22 81       	ldd	r18, Z+2	; 0x02
   11540:	33 81       	ldd	r19, Z+3	; 0x03
   11542:	21 15       	cp	r18, r1
   11544:	31 05       	cpc	r19, r1
   11546:	51 f0       	breq	.+20     	; 0x1155c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   11548:	f9 01       	movw	r30, r18
   1154a:	80 81       	ld	r24, Z
   1154c:	91 81       	ldd	r25, Z+1	; 0x01
   1154e:	00 97       	sbiw	r24, 0x00	; 0
   11550:	11 f0       	breq	.+4      	; 0x11556 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   11552:	9c 01       	movw	r18, r24
   11554:	f9 cf       	rjmp	.-14     	; 0x11548 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   11556:	b1 83       	std	Z+1, r27	; 0x01
   11558:	a0 83       	st	Z, r26
   1155a:	03 c0       	rjmp	.+6      	; 0x11562 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   1155c:	f8 01       	movw	r30, r16
   1155e:	b3 83       	std	Z+3, r27	; 0x03
   11560:	a2 83       	std	Z+2, r26	; 0x02
   11562:	10 97       	sbiw	r26, 0x00	; 0
   11564:	c9 f0       	breq	.+50     	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11566:	85 e0       	ldi	r24, 0x05	; 5
   11568:	fe 01       	movw	r30, r28
   1156a:	31 96       	adiw	r30, 0x01	; 1
   1156c:	12 96       	adiw	r26, 0x02	; 2
   1156e:	01 90       	ld	r0, Z+
   11570:	0d 92       	st	X+, r0
   11572:	8a 95       	dec	r24
   11574:	e1 f7       	brne	.-8      	; 0x1156e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   11576:	6d e5       	ldi	r22, 0x5D	; 93
   11578:	c6 01       	movw	r24, r12
   1157a:	68 dd       	rcall	.-1328   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1157c:	81 11       	cpse	r24, r1
   1157e:	06 c0       	rjmp	.+12     	; 0x1158c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   11580:	6c e2       	ldi	r22, 0x2C	; 44
   11582:	c6 01       	movw	r24, r12
   11584:	63 dd       	rcall	.-1338   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11586:	81 11       	cpse	r24, r1
   11588:	c1 cf       	rjmp	.-126    	; 0x1150c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   1158a:	06 c0       	rjmp	.+12     	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1158c:	f7 01       	movw	r30, r14
   1158e:	86 81       	ldd	r24, Z+6	; 0x06
   11590:	8f 5f       	subi	r24, 0xFF	; 255
   11592:	86 83       	std	Z+6, r24	; 0x06
   11594:	c8 01       	movw	r24, r16
   11596:	04 c0       	rjmp	.+8      	; 0x115a0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11598:	8a d9       	rcall	.-3308   	; 0x108ae <_ZN11ArduinoJson9JsonArray7invalidEv>
   1159a:	02 c0       	rjmp	.+4      	; 0x115a0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   1159c:	88 d9       	rcall	.-3312   	; 0x108ae <_ZN11ArduinoJson9JsonArray7invalidEv>
   1159e:	a6 cf       	rjmp	.-180    	; 0x114ec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   115a0:	0f 90       	pop	r0
   115a2:	0f 90       	pop	r0
   115a4:	0f 90       	pop	r0
   115a6:	0f 90       	pop	r0
   115a8:	0f 90       	pop	r0
   115aa:	df 91       	pop	r29
   115ac:	cf 91       	pop	r28
   115ae:	1f 91       	pop	r17
   115b0:	0f 91       	pop	r16
   115b2:	ff 90       	pop	r15
   115b4:	ef 90       	pop	r14
   115b6:	df 90       	pop	r13
   115b8:	cf 90       	pop	r12
   115ba:	08 95       	ret

000115bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   115bc:	ef 92       	push	r14
   115be:	ff 92       	push	r15
   115c0:	0f 93       	push	r16
   115c2:	1f 93       	push	r17
   115c4:	cf 93       	push	r28
   115c6:	7c 01       	movw	r14, r24
   115c8:	8b 01       	movw	r16, r22
   115ca:	02 96       	adiw	r24, 0x02	; 2
   115cc:	fd dc       	rcall	.-1542   	; 0x10fc8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   115ce:	d7 01       	movw	r26, r14
   115d0:	12 96       	adiw	r26, 0x02	; 2
   115d2:	ed 91       	ld	r30, X+
   115d4:	fc 91       	ld	r31, X
   115d6:	13 97       	sbiw	r26, 0x03	; 3
   115d8:	80 81       	ld	r24, Z
   115da:	8b 35       	cpi	r24, 0x5B	; 91
   115dc:	19 f0       	breq	.+6      	; 0x115e4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   115de:	8b 37       	cpi	r24, 0x7B	; 123
   115e0:	61 f0       	breq	.+24     	; 0x115fa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   115e2:	14 c0       	rjmp	.+40     	; 0x1160c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   115e4:	c7 01       	movw	r24, r14
   115e6:	5e df       	rcall	.-324    	; 0x114a4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   115e8:	fc 01       	movw	r30, r24
   115ea:	20 81       	ld	r18, Z
   115ec:	31 81       	ldd	r19, Z+1	; 0x01
   115ee:	23 2b       	or	r18, r19
   115f0:	11 f4       	brne	.+4      	; 0x115f6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   115f2:	c0 e0       	ldi	r28, 0x00	; 0
   115f4:	25 c0       	rjmp	.+74     	; 0x11640 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   115f6:	26 e0       	ldi	r18, 0x06	; 6
   115f8:	1c c0       	rjmp	.+56     	; 0x11632 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   115fa:	c7 01       	movw	r24, r14
   115fc:	28 d0       	rcall	.+80     	; 0x1164e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   115fe:	fc 01       	movw	r30, r24
   11600:	20 81       	ld	r18, Z
   11602:	31 81       	ldd	r19, Z+1	; 0x01
   11604:	23 2b       	or	r18, r19
   11606:	a9 f3       	breq	.-22     	; 0x115f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11608:	27 e0       	ldi	r18, 0x07	; 7
   1160a:	13 c0       	rjmp	.+38     	; 0x11632 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   1160c:	c1 e0       	ldi	r28, 0x01	; 1
   1160e:	87 32       	cpi	r24, 0x27	; 39
   11610:	19 f0       	breq	.+6      	; 0x11618 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11612:	82 32       	cpi	r24, 0x22	; 34
   11614:	09 f0       	breq	.+2      	; 0x11618 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11616:	c0 e0       	ldi	r28, 0x00	; 0
   11618:	c7 01       	movw	r24, r14
   1161a:	2d dd       	rcall	.-1446   	; 0x11076 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   1161c:	00 97       	sbiw	r24, 0x00	; 0
   1161e:	49 f3       	breq	.-46     	; 0x115f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11620:	cc 23       	and	r28, r28
   11622:	31 f0       	breq	.+12     	; 0x11630 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   11624:	22 e0       	ldi	r18, 0x02	; 2
   11626:	f8 01       	movw	r30, r16
   11628:	20 83       	st	Z, r18
   1162a:	92 83       	std	Z+2, r25	; 0x02
   1162c:	81 83       	std	Z+1, r24	; 0x01
   1162e:	08 c0       	rjmp	.+16     	; 0x11640 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11630:	21 e0       	ldi	r18, 0x01	; 1
   11632:	d8 01       	movw	r26, r16
   11634:	2c 93       	st	X, r18
   11636:	12 96       	adiw	r26, 0x02	; 2
   11638:	9c 93       	st	X, r25
   1163a:	8e 93       	st	-X, r24
   1163c:	11 97       	sbiw	r26, 0x01	; 1
   1163e:	c1 e0       	ldi	r28, 0x01	; 1
   11640:	8c 2f       	mov	r24, r28
   11642:	cf 91       	pop	r28
   11644:	1f 91       	pop	r17
   11646:	0f 91       	pop	r16
   11648:	ff 90       	pop	r15
   1164a:	ef 90       	pop	r14
   1164c:	08 95       	ret

0001164e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   1164e:	af 92       	push	r10
   11650:	bf 92       	push	r11
   11652:	cf 92       	push	r12
   11654:	df 92       	push	r13
   11656:	ef 92       	push	r14
   11658:	ff 92       	push	r15
   1165a:	0f 93       	push	r16
   1165c:	1f 93       	push	r17
   1165e:	cf 93       	push	r28
   11660:	df 93       	push	r29
   11662:	00 d0       	rcall	.+0      	; 0x11664 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   11664:	1f 92       	push	r1
   11666:	1f 92       	push	r1
   11668:	cd b7       	in	r28, 0x3d	; 61
   1166a:	de b7       	in	r29, 0x3e	; 62
   1166c:	7c 01       	movw	r14, r24
   1166e:	fc 01       	movw	r30, r24
   11670:	86 81       	ldd	r24, Z+6	; 0x06
   11672:	88 23       	and	r24, r24
   11674:	09 f4       	brne	.+2      	; 0x11678 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   11676:	4b c0       	rjmp	.+150    	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11678:	81 50       	subi	r24, 0x01	; 1
   1167a:	f7 01       	movw	r30, r14
   1167c:	86 83       	std	Z+6, r24	; 0x06
   1167e:	81 91       	ld	r24, Z+
   11680:	91 91       	ld	r25, Z+
   11682:	6f 01       	movw	r12, r30
   11684:	38 d9       	rcall	.-3472   	; 0x108f6 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   11686:	8c 01       	movw	r16, r24
   11688:	6b e7       	ldi	r22, 0x7B	; 123
   1168a:	c6 01       	movw	r24, r12
   1168c:	df dc       	rcall	.-1602   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1168e:	88 23       	and	r24, r24
   11690:	09 f4       	brne	.+2      	; 0x11694 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   11692:	3d c0       	rjmp	.+122    	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11694:	6d e7       	ldi	r22, 0x7D	; 125
   11696:	c6 01       	movw	r24, r12
   11698:	d9 dc       	rcall	.-1614   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1169a:	81 11       	cpse	r24, r1
   1169c:	32 c0       	rjmp	.+100    	; 0x11702 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   1169e:	c7 01       	movw	r24, r14
   116a0:	ea dc       	rcall	.-1580   	; 0x11076 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   116a2:	5c 01       	movw	r10, r24
   116a4:	89 2b       	or	r24, r25
   116a6:	99 f1       	breq	.+102    	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   116a8:	6a e3       	ldi	r22, 0x3A	; 58
   116aa:	c6 01       	movw	r24, r12
   116ac:	cf dc       	rcall	.-1634   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   116ae:	88 23       	and	r24, r24
   116b0:	71 f1       	breq	.+92     	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   116b2:	19 82       	std	Y+1, r1	; 0x01
   116b4:	be 01       	movw	r22, r28
   116b6:	6f 5f       	subi	r22, 0xFF	; 255
   116b8:	7f 4f       	sbci	r23, 0xFF	; 255
   116ba:	c7 01       	movw	r24, r14
   116bc:	7f df       	rcall	.-258    	; 0x115bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   116be:	88 23       	and	r24, r24
   116c0:	31 f1       	breq	.+76     	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   116c2:	b5 01       	movw	r22, r10
   116c4:	c8 01       	movw	r24, r16
   116c6:	a0 de       	rcall	.-704    	; 0x11408 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   116c8:	00 97       	sbiw	r24, 0x00	; 0
   116ca:	39 f4       	brne	.+14     	; 0x116da <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   116cc:	c8 01       	movw	r24, r16
   116ce:	64 dd       	rcall	.-1336   	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   116d0:	00 97       	sbiw	r24, 0x00	; 0
   116d2:	e9 f0       	breq	.+58     	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   116d4:	fc 01       	movw	r30, r24
   116d6:	b3 82       	std	Z+3, r11	; 0x03
   116d8:	a2 82       	std	Z+2, r10	; 0x02
   116da:	25 e0       	ldi	r18, 0x05	; 5
   116dc:	fe 01       	movw	r30, r28
   116de:	31 96       	adiw	r30, 0x01	; 1
   116e0:	dc 01       	movw	r26, r24
   116e2:	14 96       	adiw	r26, 0x04	; 4
   116e4:	01 90       	ld	r0, Z+
   116e6:	0d 92       	st	X+, r0
   116e8:	2a 95       	dec	r18
   116ea:	e1 f7       	brne	.-8      	; 0x116e4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   116ec:	6d e7       	ldi	r22, 0x7D	; 125
   116ee:	c6 01       	movw	r24, r12
   116f0:	ad dc       	rcall	.-1702   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   116f2:	81 11       	cpse	r24, r1
   116f4:	06 c0       	rjmp	.+12     	; 0x11702 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   116f6:	6c e2       	ldi	r22, 0x2C	; 44
   116f8:	c6 01       	movw	r24, r12
   116fa:	a8 dc       	rcall	.-1712   	; 0x1104c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   116fc:	81 11       	cpse	r24, r1
   116fe:	cf cf       	rjmp	.-98     	; 0x1169e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   11700:	06 c0       	rjmp	.+12     	; 0x1170e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11702:	f7 01       	movw	r30, r14
   11704:	86 81       	ldd	r24, Z+6	; 0x06
   11706:	8f 5f       	subi	r24, 0xFF	; 255
   11708:	86 83       	std	Z+6, r24	; 0x06
   1170a:	c8 01       	movw	r24, r16
   1170c:	01 c0       	rjmp	.+2      	; 0x11710 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   1170e:	e1 d8       	rcall	.-3646   	; 0x108d2 <_ZN11ArduinoJson10JsonObject7invalidEv>
   11710:	0f 90       	pop	r0
   11712:	0f 90       	pop	r0
   11714:	0f 90       	pop	r0
   11716:	0f 90       	pop	r0
   11718:	0f 90       	pop	r0
   1171a:	df 91       	pop	r29
   1171c:	cf 91       	pop	r28
   1171e:	1f 91       	pop	r17
   11720:	0f 91       	pop	r16
   11722:	ff 90       	pop	r15
   11724:	ef 90       	pop	r14
   11726:	df 90       	pop	r13
   11728:	cf 90       	pop	r12
   1172a:	bf 90       	pop	r11
   1172c:	af 90       	pop	r10
   1172e:	08 95       	ret

00011730 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   11730:	0f cd       	rjmp	.-1506   	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11732:	08 95       	ret

00011734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11734:	1f 93       	push	r17
   11736:	cf 93       	push	r28
   11738:	df 93       	push	r29
   1173a:	fa df       	rcall	.-12     	; 0x11730 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   1173c:	ec 01       	movw	r28, r24
   1173e:	89 2b       	or	r24, r25
   11740:	a1 f0       	breq	.+40     	; 0x1176a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11742:	1c 81       	ldd	r17, Y+4	; 0x04
   11744:	11 30       	cpi	r17, 0x01	; 1
   11746:	59 f4       	brne	.+22     	; 0x1175e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11748:	6d 81       	ldd	r22, Y+5	; 0x05
   1174a:	7e 81       	ldd	r23, Y+6	; 0x06
   1174c:	61 15       	cp	r22, r1
   1174e:	71 05       	cpc	r23, r1
   11750:	31 f0       	breq	.+12     	; 0x1175e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11752:	8c ee       	ldi	r24, 0xEC	; 236
   11754:	96 e0       	ldi	r25, 0x06	; 6
   11756:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   1175a:	89 2b       	or	r24, r25
   1175c:	31 f0       	breq	.+12     	; 0x1176a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   1175e:	11 50       	subi	r17, 0x01	; 1
   11760:	12 30       	cpi	r17, 0x02	; 2
   11762:	18 f4       	brcc	.+6      	; 0x1176a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11764:	8d 81       	ldd	r24, Y+5	; 0x05
   11766:	9e 81       	ldd	r25, Y+6	; 0x06
   11768:	02 c0       	rjmp	.+4      	; 0x1176e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   1176a:	80 e0       	ldi	r24, 0x00	; 0
   1176c:	90 e0       	ldi	r25, 0x00	; 0
   1176e:	df 91       	pop	r29
   11770:	cf 91       	pop	r28
   11772:	1f 91       	pop	r17
   11774:	08 95       	ret

00011776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11776:	dc df       	rcall	.-72     	; 0x11730 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11778:	00 97       	sbiw	r24, 0x00	; 0
   1177a:	39 f0       	breq	.+14     	; 0x1178a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   1177c:	fc 01       	movw	r30, r24
   1177e:	24 81       	ldd	r18, Z+4	; 0x04
   11780:	26 30       	cpi	r18, 0x06	; 6
   11782:	19 f4       	brne	.+6      	; 0x1178a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11784:	85 81       	ldd	r24, Z+5	; 0x05
   11786:	96 81       	ldd	r25, Z+6	; 0x06
   11788:	08 95       	ret
   1178a:	91 c8       	rjmp	.-3806   	; 0x108ae <_ZN11ArduinoJson9JsonArray7invalidEv>

0001178c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   1178c:	fc 01       	movw	r30, r24
   1178e:	80 81       	ld	r24, Z
   11790:	83 30       	cpi	r24, 0x03	; 3
   11792:	18 f4       	brcc	.+6      	; 0x1179a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   11794:	81 30       	cpi	r24, 0x01	; 1
   11796:	e8 f1       	brcs	.+122    	; 0x11812 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11798:	0a c0       	rjmp	.+20     	; 0x117ae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   1179a:	85 30       	cpi	r24, 0x05	; 5
   1179c:	28 f0       	brcs	.+10     	; 0x117a8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   1179e:	85 30       	cpi	r24, 0x05	; 5
   117a0:	89 f5       	brne	.+98     	; 0x11804 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   117a2:	61 81       	ldd	r22, Z+1	; 0x01
   117a4:	72 81       	ldd	r23, Z+2	; 0x02
   117a6:	29 c0       	rjmp	.+82     	; 0x117fa <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   117a8:	81 81       	ldd	r24, Z+1	; 0x01
   117aa:	92 81       	ldd	r25, Z+2	; 0x02
   117ac:	08 95       	ret
   117ae:	01 80       	ldd	r0, Z+1	; 0x01
   117b0:	f2 81       	ldd	r31, Z+2	; 0x02
   117b2:	e0 2d       	mov	r30, r0
   117b4:	30 97       	sbiw	r30, 0x00	; 0
   117b6:	69 f1       	breq	.+90     	; 0x11812 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   117b8:	80 81       	ld	r24, Z
   117ba:	84 37       	cpi	r24, 0x74	; 116
   117bc:	69 f1       	breq	.+90     	; 0x11818 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   117be:	8b 32       	cpi	r24, 0x2B	; 43
   117c0:	29 f0       	breq	.+10     	; 0x117cc <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   117c2:	8d 32       	cpi	r24, 0x2D	; 45
   117c4:	21 f4       	brne	.+8      	; 0x117ce <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   117c6:	31 96       	adiw	r30, 0x01	; 1
   117c8:	91 e0       	ldi	r25, 0x01	; 1
   117ca:	02 c0       	rjmp	.+4      	; 0x117d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   117cc:	31 96       	adiw	r30, 0x01	; 1
   117ce:	90 e0       	ldi	r25, 0x00	; 0
   117d0:	60 e0       	ldi	r22, 0x00	; 0
   117d2:	70 e0       	ldi	r23, 0x00	; 0
   117d4:	4a e0       	ldi	r20, 0x0A	; 10
   117d6:	81 91       	ld	r24, Z+
   117d8:	20 ed       	ldi	r18, 0xD0	; 208
   117da:	28 0f       	add	r18, r24
   117dc:	2a 30       	cpi	r18, 0x0A	; 10
   117de:	58 f4       	brcc	.+22     	; 0x117f6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   117e0:	46 9f       	mul	r20, r22
   117e2:	90 01       	movw	r18, r0
   117e4:	47 9f       	mul	r20, r23
   117e6:	30 0d       	add	r19, r0
   117e8:	11 24       	eor	r1, r1
   117ea:	b9 01       	movw	r22, r18
   117ec:	60 53       	subi	r22, 0x30	; 48
   117ee:	71 09       	sbc	r23, r1
   117f0:	68 0f       	add	r22, r24
   117f2:	71 1d       	adc	r23, r1
   117f4:	f0 cf       	rjmp	.-32     	; 0x117d6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   117f6:	99 23       	and	r25, r25
   117f8:	91 f0       	breq	.+36     	; 0x1181e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   117fa:	88 27       	eor	r24, r24
   117fc:	99 27       	eor	r25, r25
   117fe:	86 1b       	sub	r24, r22
   11800:	97 0b       	sbc	r25, r23
   11802:	08 95       	ret
   11804:	61 81       	ldd	r22, Z+1	; 0x01
   11806:	72 81       	ldd	r23, Z+2	; 0x02
   11808:	83 81       	ldd	r24, Z+3	; 0x03
   1180a:	94 81       	ldd	r25, Z+4	; 0x04
   1180c:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   11810:	06 c0       	rjmp	.+12     	; 0x1181e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11812:	80 e0       	ldi	r24, 0x00	; 0
   11814:	90 e0       	ldi	r25, 0x00	; 0
   11816:	08 95       	ret
   11818:	81 e0       	ldi	r24, 0x01	; 1
   1181a:	90 e0       	ldi	r25, 0x00	; 0
   1181c:	08 95       	ret
   1181e:	cb 01       	movw	r24, r22
   11820:	08 95       	ret

00011822 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11822:	86 df       	rcall	.-244    	; 0x11730 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11824:	00 97       	sbiw	r24, 0x00	; 0
   11826:	11 f0       	breq	.+4      	; 0x1182c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11828:	04 96       	adiw	r24, 0x04	; 4
   1182a:	b0 cf       	rjmp	.-160    	; 0x1178c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   1182c:	80 e0       	ldi	r24, 0x00	; 0
   1182e:	90 e0       	ldi	r25, 0x00	; 0
   11830:	08 95       	ret

00011832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11832:	fc 01       	movw	r30, r24
   11834:	82 81       	ldd	r24, Z+2	; 0x02
   11836:	93 81       	ldd	r25, Z+3	; 0x03
   11838:	00 97       	sbiw	r24, 0x00	; 0
   1183a:	59 f0       	breq	.+22     	; 0x11852 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   1183c:	61 15       	cp	r22, r1
   1183e:	71 05       	cpc	r23, r1
   11840:	31 f0       	breq	.+12     	; 0x1184e <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11842:	fc 01       	movw	r30, r24
   11844:	80 81       	ld	r24, Z
   11846:	91 81       	ldd	r25, Z+1	; 0x01
   11848:	61 50       	subi	r22, 0x01	; 1
   1184a:	71 09       	sbc	r23, r1
   1184c:	f5 cf       	rjmp	.-22     	; 0x11838 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   1184e:	02 96       	adiw	r24, 0x02	; 2
   11850:	9d cf       	rjmp	.-198    	; 0x1178c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11852:	80 e0       	ldi	r24, 0x00	; 0
   11854:	90 e0       	ldi	r25, 0x00	; 0
   11856:	08 95       	ret

00011858 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   11858:	fc 01       	movw	r30, r24
   1185a:	80 81       	ld	r24, Z
   1185c:	83 30       	cpi	r24, 0x03	; 3
   1185e:	18 f4       	brcc	.+6      	; 0x11866 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   11860:	81 30       	cpi	r24, 0x01	; 1
   11862:	98 f1       	brcs	.+102    	; 0x118ca <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11864:	08 c0       	rjmp	.+16     	; 0x11876 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   11866:	85 30       	cpi	r24, 0x05	; 5
   11868:	20 f0       	brcs	.+8      	; 0x11872 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   1186a:	85 30       	cpi	r24, 0x05	; 5
   1186c:	39 f5       	brne	.+78     	; 0x118bc <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   1186e:	61 81       	ldd	r22, Z+1	; 0x01
   11870:	23 c0       	rjmp	.+70     	; 0x118b8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11872:	61 81       	ldd	r22, Z+1	; 0x01
   11874:	2d c0       	rjmp	.+90     	; 0x118d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11876:	01 80       	ldd	r0, Z+1	; 0x01
   11878:	f2 81       	ldd	r31, Z+2	; 0x02
   1187a:	e0 2d       	mov	r30, r0
   1187c:	30 97       	sbiw	r30, 0x00	; 0
   1187e:	29 f1       	breq	.+74     	; 0x118ca <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11880:	80 81       	ld	r24, Z
   11882:	84 37       	cpi	r24, 0x74	; 116
   11884:	21 f1       	breq	.+72     	; 0x118ce <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   11886:	8b 32       	cpi	r24, 0x2B	; 43
   11888:	29 f0       	breq	.+10     	; 0x11894 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   1188a:	8d 32       	cpi	r24, 0x2D	; 45
   1188c:	21 f4       	brne	.+8      	; 0x11896 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   1188e:	31 96       	adiw	r30, 0x01	; 1
   11890:	91 e0       	ldi	r25, 0x01	; 1
   11892:	02 c0       	rjmp	.+4      	; 0x11898 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   11894:	31 96       	adiw	r30, 0x01	; 1
   11896:	90 e0       	ldi	r25, 0x00	; 0
   11898:	60 e0       	ldi	r22, 0x00	; 0
   1189a:	21 91       	ld	r18, Z+
   1189c:	80 ed       	ldi	r24, 0xD0	; 208
   1189e:	82 0f       	add	r24, r18
   118a0:	8a 30       	cpi	r24, 0x0A	; 10
   118a2:	40 f4       	brcc	.+16     	; 0x118b4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   118a4:	66 0f       	add	r22, r22
   118a6:	86 2f       	mov	r24, r22
   118a8:	88 0f       	add	r24, r24
   118aa:	88 0f       	add	r24, r24
   118ac:	68 0f       	add	r22, r24
   118ae:	60 53       	subi	r22, 0x30	; 48
   118b0:	62 0f       	add	r22, r18
   118b2:	f3 cf       	rjmp	.-26     	; 0x1189a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   118b4:	99 23       	and	r25, r25
   118b6:	61 f0       	breq	.+24     	; 0x118d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   118b8:	61 95       	neg	r22
   118ba:	0a c0       	rjmp	.+20     	; 0x118d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   118bc:	61 81       	ldd	r22, Z+1	; 0x01
   118be:	72 81       	ldd	r23, Z+2	; 0x02
   118c0:	83 81       	ldd	r24, Z+3	; 0x03
   118c2:	94 81       	ldd	r25, Z+4	; 0x04
   118c4:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   118c8:	03 c0       	rjmp	.+6      	; 0x118d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   118ca:	60 e0       	ldi	r22, 0x00	; 0
   118cc:	01 c0       	rjmp	.+2      	; 0x118d0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   118ce:	61 e0       	ldi	r22, 0x01	; 1
   118d0:	86 2f       	mov	r24, r22
   118d2:	08 95       	ret

000118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   118d4:	fc 01       	movw	r30, r24
   118d6:	82 81       	ldd	r24, Z+2	; 0x02
   118d8:	93 81       	ldd	r25, Z+3	; 0x03
   118da:	00 97       	sbiw	r24, 0x00	; 0
   118dc:	59 f0       	breq	.+22     	; 0x118f4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   118de:	61 15       	cp	r22, r1
   118e0:	71 05       	cpc	r23, r1
   118e2:	31 f0       	breq	.+12     	; 0x118f0 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   118e4:	fc 01       	movw	r30, r24
   118e6:	80 81       	ld	r24, Z
   118e8:	91 81       	ldd	r25, Z+1	; 0x01
   118ea:	61 50       	subi	r22, 0x01	; 1
   118ec:	71 09       	sbc	r23, r1
   118ee:	f5 cf       	rjmp	.-22     	; 0x118da <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   118f0:	02 96       	adiw	r24, 0x02	; 2
   118f2:	b2 cf       	rjmp	.-156    	; 0x11858 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   118f4:	80 e0       	ldi	r24, 0x00	; 0
   118f6:	08 95       	ret

000118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   118f8:	1b df       	rcall	.-458    	; 0x11730 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   118fa:	00 97       	sbiw	r24, 0x00	; 0
   118fc:	11 f0       	breq	.+4      	; 0x11902 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   118fe:	04 96       	adiw	r24, 0x04	; 4
   11900:	ab cf       	rjmp	.-170    	; 0x11858 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11902:	80 e0       	ldi	r24, 0x00	; 0
   11904:	08 95       	ret

00011906 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   11906:	2f 92       	push	r2
   11908:	3f 92       	push	r3
   1190a:	4f 92       	push	r4
   1190c:	5f 92       	push	r5
   1190e:	6f 92       	push	r6
   11910:	7f 92       	push	r7
   11912:	8f 92       	push	r8
   11914:	9f 92       	push	r9
   11916:	af 92       	push	r10
   11918:	bf 92       	push	r11
   1191a:	cf 92       	push	r12
   1191c:	df 92       	push	r13
   1191e:	ef 92       	push	r14
   11920:	ff 92       	push	r15
   11922:	0f 93       	push	r16
   11924:	1f 93       	push	r17
   11926:	cf 93       	push	r28
   11928:	df 93       	push	r29
   1192a:	00 d0       	rcall	.+0      	; 0x1192c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   1192c:	1f 92       	push	r1
   1192e:	cd b7       	in	r28, 0x3d	; 61
   11930:	de b7       	in	r29, 0x3e	; 62
   11932:	1c 01       	movw	r2, r24
   11934:	6a 01       	movw	r12, r20
   11936:	7b 01       	movw	r14, r22
   11938:	86 e0       	ldi	r24, 0x06	; 6
   1193a:	d1 01       	movw	r26, r2
   1193c:	1a 96       	adiw	r26, 0x0a	; 10
   1193e:	8c 93       	st	X, r24
   11940:	20 e8       	ldi	r18, 0x80	; 128
   11942:	36 e9       	ldi	r19, 0x96	; 150
   11944:	48 e1       	ldi	r20, 0x18	; 24
   11946:	5b e4       	ldi	r21, 0x4B	; 75
   11948:	c7 01       	movw	r24, r14
   1194a:	b6 01       	movw	r22, r12
   1194c:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
   11950:	87 fd       	sbrc	r24, 7
   11952:	3a c0       	rjmp	.+116    	; 0x119c8 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   11954:	52 e5       	ldi	r21, 0x52	; 82
   11956:	85 2e       	mov	r8, r21
   11958:	52 e0       	ldi	r21, 0x02	; 2
   1195a:	95 2e       	mov	r9, r21
   1195c:	62 e2       	ldi	r22, 0x22	; 34
   1195e:	a6 2e       	mov	r10, r22
   11960:	62 e0       	ldi	r22, 0x02	; 2
   11962:	b6 2e       	mov	r11, r22
   11964:	e0 e2       	ldi	r30, 0x20	; 32
   11966:	f0 e0       	ldi	r31, 0x00	; 0
   11968:	fa 83       	std	Y+2, r31	; 0x02
   1196a:	e9 83       	std	Y+1, r30	; 0x01
   1196c:	00 e0       	ldi	r16, 0x00	; 0
   1196e:	10 e0       	ldi	r17, 0x00	; 0
   11970:	a7 01       	movw	r20, r14
   11972:	96 01       	movw	r18, r12
   11974:	d4 01       	movw	r26, r8
   11976:	9e 91       	ld	r25, -X
   11978:	8e 91       	ld	r24, -X
   1197a:	7e 91       	ld	r23, -X
   1197c:	6e 91       	ld	r22, -X
   1197e:	4d 01       	movw	r8, r26
   11980:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   11984:	18 16       	cp	r1, r24
   11986:	7c f0       	brlt	.+30     	; 0x119a6 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11988:	f5 01       	movw	r30, r10
   1198a:	24 89       	ldd	r18, Z+20	; 0x14
   1198c:	35 89       	ldd	r19, Z+21	; 0x15
   1198e:	46 89       	ldd	r20, Z+22	; 0x16
   11990:	57 89       	ldd	r21, Z+23	; 0x17
   11992:	c7 01       	movw	r24, r14
   11994:	b6 01       	movw	r22, r12
   11996:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
   1199a:	6b 01       	movw	r12, r22
   1199c:	7c 01       	movw	r14, r24
   1199e:	89 81       	ldd	r24, Y+1	; 0x01
   119a0:	9a 81       	ldd	r25, Y+2	; 0x02
   119a2:	08 0f       	add	r16, r24
   119a4:	19 1f       	adc	r17, r25
   119a6:	a9 81       	ldd	r26, Y+1	; 0x01
   119a8:	ba 81       	ldd	r27, Y+2	; 0x02
   119aa:	b5 95       	asr	r27
   119ac:	a7 95       	ror	r26
   119ae:	ba 83       	std	Y+2, r27	; 0x02
   119b0:	a9 83       	std	Y+1, r26	; 0x01
   119b2:	b4 e0       	ldi	r27, 0x04	; 4
   119b4:	ab 1a       	sub	r10, r27
   119b6:	b1 08       	sbc	r11, r1
   119b8:	ea e3       	ldi	r30, 0x3A	; 58
   119ba:	8e 16       	cp	r8, r30
   119bc:	e2 e0       	ldi	r30, 0x02	; 2
   119be:	9e 06       	cpc	r9, r30
   119c0:	b9 f6       	brne	.-82     	; 0x11970 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   119c2:	bb 24       	eor	r11, r11
   119c4:	ba 94       	dec	r11
   119c6:	08 c0       	rjmp	.+16     	; 0x119d8 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   119c8:	80 e2       	ldi	r24, 0x20	; 32
   119ca:	90 e0       	ldi	r25, 0x00	; 0
   119cc:	9a 83       	std	Y+2, r25	; 0x02
   119ce:	89 83       	std	Y+1, r24	; 0x01
   119d0:	35 e0       	ldi	r19, 0x05	; 5
   119d2:	b3 2e       	mov	r11, r19
   119d4:	00 e0       	ldi	r16, 0x00	; 0
   119d6:	10 e0       	ldi	r17, 0x00	; 0
   119d8:	20 e0       	ldi	r18, 0x00	; 0
   119da:	30 e0       	ldi	r19, 0x00	; 0
   119dc:	a9 01       	movw	r20, r18
   119de:	c7 01       	movw	r24, r14
   119e0:	b6 01       	movw	r22, r12
   119e2:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
   119e6:	18 16       	cp	r1, r24
   119e8:	c4 f5       	brge	.+112    	; 0x11a5a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   119ea:	2c ea       	ldi	r18, 0xAC	; 172
   119ec:	35 ec       	ldi	r19, 0xC5	; 197
   119ee:	47 e2       	ldi	r20, 0x27	; 39
   119f0:	57 e3       	ldi	r21, 0x37	; 55
   119f2:	c7 01       	movw	r24, r14
   119f4:	b6 01       	movw	r22, r12
   119f6:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   119fa:	18 16       	cp	r1, r24
   119fc:	74 f1       	brlt	.+92     	; 0x11a5a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   119fe:	9f ef       	ldi	r25, 0xFF	; 255
   11a00:	b9 16       	cp	r11, r25
   11a02:	59 f1       	breq	.+86     	; 0x11a5a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11a04:	ab 2d       	mov	r26, r11
   11a06:	b4 e0       	ldi	r27, 0x04	; 4
   11a08:	ab 02       	muls	r26, r27
   11a0a:	40 01       	movw	r8, r0
   11a0c:	11 24       	eor	r1, r1
   11a0e:	f4 01       	movw	r30, r8
   11a10:	e6 5f       	subi	r30, 0xF6	; 246
   11a12:	fd 4f       	sbci	r31, 0xFD	; 253
   11a14:	a7 01       	movw	r20, r14
   11a16:	96 01       	movw	r18, r12
   11a18:	60 81       	ld	r22, Z
   11a1a:	71 81       	ldd	r23, Z+1	; 0x01
   11a1c:	82 81       	ldd	r24, Z+2	; 0x02
   11a1e:	93 81       	ldd	r25, Z+3	; 0x03
   11a20:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
   11a24:	18 16       	cp	r1, r24
   11a26:	8c f4       	brge	.+34     	; 0x11a4a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   11a28:	f4 01       	movw	r30, r8
   11a2a:	e6 5c       	subi	r30, 0xC6	; 198
   11a2c:	fd 4f       	sbci	r31, 0xFD	; 253
   11a2e:	20 81       	ld	r18, Z
   11a30:	31 81       	ldd	r19, Z+1	; 0x01
   11a32:	42 81       	ldd	r20, Z+2	; 0x02
   11a34:	53 81       	ldd	r21, Z+3	; 0x03
   11a36:	c7 01       	movw	r24, r14
   11a38:	b6 01       	movw	r22, r12
   11a3a:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
   11a3e:	6b 01       	movw	r12, r22
   11a40:	7c 01       	movw	r14, r24
   11a42:	e9 81       	ldd	r30, Y+1	; 0x01
   11a44:	fa 81       	ldd	r31, Y+2	; 0x02
   11a46:	0e 1b       	sub	r16, r30
   11a48:	1f 0b       	sbc	r17, r31
   11a4a:	89 81       	ldd	r24, Y+1	; 0x01
   11a4c:	9a 81       	ldd	r25, Y+2	; 0x02
   11a4e:	95 95       	asr	r25
   11a50:	87 95       	ror	r24
   11a52:	9a 83       	std	Y+2, r25	; 0x02
   11a54:	89 83       	std	Y+1, r24	; 0x01
   11a56:	ba 94       	dec	r11
   11a58:	d2 cf       	rjmp	.-92     	; 0x119fe <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   11a5a:	d1 01       	movw	r26, r2
   11a5c:	19 96       	adiw	r26, 0x09	; 9
   11a5e:	1c 93       	st	X, r17
   11a60:	0e 93       	st	-X, r16
   11a62:	18 97       	sbiw	r26, 0x08	; 8
   11a64:	c7 01       	movw	r24, r14
   11a66:	b6 01       	movw	r22, r12
   11a68:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   11a6c:	69 83       	std	Y+1, r22	; 0x01
   11a6e:	7a 83       	std	Y+2, r23	; 0x02
   11a70:	8b 83       	std	Y+3, r24	; 0x03
   11a72:	9c 83       	std	Y+4, r25	; 0x04
   11a74:	f1 01       	movw	r30, r2
   11a76:	60 83       	st	Z, r22
   11a78:	71 83       	std	Z+1, r23	; 0x01
   11a7a:	82 83       	std	Z+2, r24	; 0x02
   11a7c:	93 83       	std	Z+3, r25	; 0x03
   11a7e:	2b 01       	movw	r4, r22
   11a80:	3c 01       	movw	r6, r24
   11a82:	90 e4       	ldi	r25, 0x40	; 64
   11a84:	89 2e       	mov	r8, r25
   11a86:	92 e4       	ldi	r25, 0x42	; 66
   11a88:	99 2e       	mov	r9, r25
   11a8a:	9f e0       	ldi	r25, 0x0F	; 15
   11a8c:	a9 2e       	mov	r10, r25
   11a8e:	b1 2c       	mov	r11, r1
   11a90:	fa e0       	ldi	r31, 0x0A	; 10
   11a92:	4f 16       	cp	r4, r31
   11a94:	51 04       	cpc	r5, r1
   11a96:	61 04       	cpc	r6, r1
   11a98:	71 04       	cpc	r7, r1
   11a9a:	e0 f0       	brcs	.+56     	; 0x11ad4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11a9c:	c5 01       	movw	r24, r10
   11a9e:	b4 01       	movw	r22, r8
   11aa0:	2a e0       	ldi	r18, 0x0A	; 10
   11aa2:	30 e0       	ldi	r19, 0x00	; 0
   11aa4:	40 e0       	ldi	r20, 0x00	; 0
   11aa6:	50 e0       	ldi	r21, 0x00	; 0
   11aa8:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   11aac:	49 01       	movw	r8, r18
   11aae:	5a 01       	movw	r10, r20
   11ab0:	d1 01       	movw	r26, r2
   11ab2:	1a 96       	adiw	r26, 0x0a	; 10
   11ab4:	8c 91       	ld	r24, X
   11ab6:	1a 97       	sbiw	r26, 0x0a	; 10
   11ab8:	81 50       	subi	r24, 0x01	; 1
   11aba:	1a 96       	adiw	r26, 0x0a	; 10
   11abc:	8c 93       	st	X, r24
   11abe:	c3 01       	movw	r24, r6
   11ac0:	b2 01       	movw	r22, r4
   11ac2:	2a e0       	ldi	r18, 0x0A	; 10
   11ac4:	30 e0       	ldi	r19, 0x00	; 0
   11ac6:	40 e0       	ldi	r20, 0x00	; 0
   11ac8:	50 e0       	ldi	r21, 0x00	; 0
   11aca:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   11ace:	29 01       	movw	r4, r18
   11ad0:	3a 01       	movw	r6, r20
   11ad2:	de cf       	rjmp	.-68     	; 0x11a90 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11ad4:	69 81       	ldd	r22, Y+1	; 0x01
   11ad6:	7a 81       	ldd	r23, Y+2	; 0x02
   11ad8:	8b 81       	ldd	r24, Y+3	; 0x03
   11ada:	9c 81       	ldd	r25, Y+4	; 0x04
   11adc:	0e 94 c9 cd 	call	0x19b92	; 0x19b92 <__floatunsisf>
   11ae0:	9b 01       	movw	r18, r22
   11ae2:	ac 01       	movw	r20, r24
   11ae4:	c7 01       	movw	r24, r14
   11ae6:	b6 01       	movw	r22, r12
   11ae8:	0e 94 cc cc 	call	0x19998	; 0x19998 <__subsf3>
   11aec:	6b 01       	movw	r12, r22
   11aee:	7c 01       	movw	r14, r24
   11af0:	c5 01       	movw	r24, r10
   11af2:	b4 01       	movw	r22, r8
   11af4:	0e 94 c9 cd 	call	0x19b92	; 0x19b92 <__floatunsisf>
   11af8:	9b 01       	movw	r18, r22
   11afa:	ac 01       	movw	r20, r24
   11afc:	c7 01       	movw	r24, r14
   11afe:	b6 01       	movw	r22, r12
   11b00:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
   11b04:	2b 01       	movw	r4, r22
   11b06:	3c 01       	movw	r6, r24
   11b08:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   11b0c:	6b 01       	movw	r12, r22
   11b0e:	7c 01       	movw	r14, r24
   11b10:	0e 94 c9 cd 	call	0x19b92	; 0x19b92 <__floatunsisf>
   11b14:	9b 01       	movw	r18, r22
   11b16:	ac 01       	movw	r20, r24
   11b18:	c3 01       	movw	r24, r6
   11b1a:	b2 01       	movw	r22, r4
   11b1c:	0e 94 cc cc 	call	0x19998	; 0x19998 <__subsf3>
   11b20:	9b 01       	movw	r18, r22
   11b22:	ac 01       	movw	r20, r24
   11b24:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   11b28:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   11b2c:	c6 0e       	add	r12, r22
   11b2e:	d7 1e       	adc	r13, r23
   11b30:	e8 1e       	adc	r14, r24
   11b32:	f9 1e       	adc	r15, r25
   11b34:	c8 14       	cp	r12, r8
   11b36:	d9 04       	cpc	r13, r9
   11b38:	ea 04       	cpc	r14, r10
   11b3a:	fb 04       	cpc	r15, r11
   11b3c:	30 f4       	brcc	.+12     	; 0x11b4a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   11b3e:	f1 01       	movw	r30, r2
   11b40:	c4 82       	std	Z+4, r12	; 0x04
   11b42:	d5 82       	std	Z+5, r13	; 0x05
   11b44:	e6 82       	std	Z+6, r14	; 0x06
   11b46:	f7 82       	std	Z+7, r15	; 0x07
   11b48:	26 c0       	rjmp	.+76     	; 0x11b96 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11b4a:	d1 01       	movw	r26, r2
   11b4c:	14 96       	adiw	r26, 0x04	; 4
   11b4e:	1d 92       	st	X+, r1
   11b50:	1d 92       	st	X+, r1
   11b52:	1d 92       	st	X+, r1
   11b54:	1c 92       	st	X, r1
   11b56:	17 97       	sbiw	r26, 0x07	; 7
   11b58:	89 81       	ldd	r24, Y+1	; 0x01
   11b5a:	9a 81       	ldd	r25, Y+2	; 0x02
   11b5c:	ab 81       	ldd	r26, Y+3	; 0x03
   11b5e:	bc 81       	ldd	r27, Y+4	; 0x04
   11b60:	01 96       	adiw	r24, 0x01	; 1
   11b62:	a1 1d       	adc	r26, r1
   11b64:	b1 1d       	adc	r27, r1
   11b66:	f1 01       	movw	r30, r2
   11b68:	80 83       	st	Z, r24
   11b6a:	91 83       	std	Z+1, r25	; 0x01
   11b6c:	a2 83       	std	Z+2, r26	; 0x02
   11b6e:	b3 83       	std	Z+3, r27	; 0x03
   11b70:	01 15       	cp	r16, r1
   11b72:	11 05       	cpc	r17, r1
   11b74:	81 f0       	breq	.+32     	; 0x11b96 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11b76:	0a 97       	sbiw	r24, 0x0a	; 10
   11b78:	a1 05       	cpc	r26, r1
   11b7a:	b1 05       	cpc	r27, r1
   11b7c:	60 f0       	brcs	.+24     	; 0x11b96 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11b7e:	c8 01       	movw	r24, r16
   11b80:	01 96       	adiw	r24, 0x01	; 1
   11b82:	91 87       	std	Z+9, r25	; 0x09
   11b84:	80 87       	std	Z+8, r24	; 0x08
   11b86:	81 e0       	ldi	r24, 0x01	; 1
   11b88:	90 e0       	ldi	r25, 0x00	; 0
   11b8a:	a0 e0       	ldi	r26, 0x00	; 0
   11b8c:	b0 e0       	ldi	r27, 0x00	; 0
   11b8e:	80 83       	st	Z, r24
   11b90:	91 83       	std	Z+1, r25	; 0x01
   11b92:	a2 83       	std	Z+2, r26	; 0x02
   11b94:	b3 83       	std	Z+3, r27	; 0x03
   11b96:	8a e0       	ldi	r24, 0x0A	; 10
   11b98:	c8 2e       	mov	r12, r24
   11b9a:	d1 2c       	mov	r13, r1
   11b9c:	e1 2c       	mov	r14, r1
   11b9e:	f1 2c       	mov	r15, r1
   11ba0:	d1 01       	movw	r26, r2
   11ba2:	14 96       	adiw	r26, 0x04	; 4
   11ba4:	6d 91       	ld	r22, X+
   11ba6:	7d 91       	ld	r23, X+
   11ba8:	8d 91       	ld	r24, X+
   11baa:	9c 91       	ld	r25, X
   11bac:	17 97       	sbiw	r26, 0x07	; 7
   11bae:	a7 01       	movw	r20, r14
   11bb0:	96 01       	movw	r18, r12
   11bb2:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   11bb6:	67 2b       	or	r22, r23
   11bb8:	68 2b       	or	r22, r24
   11bba:	69 2b       	or	r22, r25
   11bbc:	59 f4       	brne	.+22     	; 0x11bd4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11bbe:	f1 01       	movw	r30, r2
   11bc0:	82 85       	ldd	r24, Z+10	; 0x0a
   11bc2:	18 16       	cp	r1, r24
   11bc4:	3c f4       	brge	.+14     	; 0x11bd4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11bc6:	24 83       	std	Z+4, r18	; 0x04
   11bc8:	35 83       	std	Z+5, r19	; 0x05
   11bca:	46 83       	std	Z+6, r20	; 0x06
   11bcc:	57 83       	std	Z+7, r21	; 0x07
   11bce:	81 50       	subi	r24, 0x01	; 1
   11bd0:	82 87       	std	Z+10, r24	; 0x0a
   11bd2:	e6 cf       	rjmp	.-52     	; 0x11ba0 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   11bd4:	0f 90       	pop	r0
   11bd6:	0f 90       	pop	r0
   11bd8:	0f 90       	pop	r0
   11bda:	0f 90       	pop	r0
   11bdc:	df 91       	pop	r29
   11bde:	cf 91       	pop	r28
   11be0:	1f 91       	pop	r17
   11be2:	0f 91       	pop	r16
   11be4:	ff 90       	pop	r15
   11be6:	ef 90       	pop	r14
   11be8:	df 90       	pop	r13
   11bea:	cf 90       	pop	r12
   11bec:	bf 90       	pop	r11
   11bee:	af 90       	pop	r10
   11bf0:	9f 90       	pop	r9
   11bf2:	8f 90       	pop	r8
   11bf4:	7f 90       	pop	r7
   11bf6:	6f 90       	pop	r6
   11bf8:	5f 90       	pop	r5
   11bfa:	4f 90       	pop	r4
   11bfc:	3f 90       	pop	r3
   11bfe:	2f 90       	pop	r2
   11c00:	08 95       	ret

00011c02 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   11c02:	cf 93       	push	r28
   11c04:	df 93       	push	r29
   11c06:	fc 01       	movw	r30, r24
   11c08:	82 81       	ldd	r24, Z+2	; 0x02
   11c0a:	87 ff       	sbrs	r24, 7
   11c0c:	32 c0       	rjmp	.+100    	; 0x11c72 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   11c0e:	40 e0       	ldi	r20, 0x00	; 0
   11c10:	50 e0       	ldi	r21, 0x00	; 0
   11c12:	20 e0       	ldi	r18, 0x00	; 0
   11c14:	30 e0       	ldi	r19, 0x00	; 0
   11c16:	70 e2       	ldi	r23, 0x20	; 32
   11c18:	92 81       	ldd	r25, Z+2	; 0x02
   11c1a:	89 2f       	mov	r24, r25
   11c1c:	8f 70       	andi	r24, 0x0F	; 15
   11c1e:	92 95       	swap	r25
   11c20:	97 70       	andi	r25, 0x07	; 7
   11c22:	89 9f       	mul	r24, r25
   11c24:	c0 01       	movw	r24, r0
   11c26:	11 24       	eor	r1, r1
   11c28:	48 17       	cp	r20, r24
   11c2a:	59 07       	cpc	r21, r25
   11c2c:	24 f5       	brge	.+72     	; 0x11c76 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   11c2e:	a0 81       	ld	r26, Z
   11c30:	b1 81       	ldd	r27, Z+1	; 0x01
   11c32:	12 96       	adiw	r26, 0x02	; 2
   11c34:	cd 91       	ld	r28, X+
   11c36:	dc 91       	ld	r29, X
   11c38:	13 97       	sbiw	r26, 0x03	; 3
   11c3a:	8d 91       	ld	r24, X+
   11c3c:	9c 91       	ld	r25, X
   11c3e:	11 97       	sbiw	r26, 0x01	; 1
   11c40:	c8 17       	cp	r28, r24
   11c42:	d9 07       	cpc	r29, r25
   11c44:	78 f4       	brcc	.+30     	; 0x11c64 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   11c46:	ce 01       	movw	r24, r28
   11c48:	01 96       	adiw	r24, 0x01	; 1
   11c4a:	13 96       	adiw	r26, 0x03	; 3
   11c4c:	9c 93       	st	X, r25
   11c4e:	8e 93       	st	-X, r24
   11c50:	12 97       	sbiw	r26, 0x02	; 2
   11c52:	78 83       	st	Y, r23
   11c54:	12 96       	adiw	r26, 0x02	; 2
   11c56:	0d 90       	ld	r0, X+
   11c58:	bc 91       	ld	r27, X
   11c5a:	a0 2d       	mov	r26, r0
   11c5c:	1c 92       	st	X, r1
   11c5e:	81 e0       	ldi	r24, 0x01	; 1
   11c60:	90 e0       	ldi	r25, 0x00	; 0
   11c62:	02 c0       	rjmp	.+4      	; 0x11c68 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   11c64:	80 e0       	ldi	r24, 0x00	; 0
   11c66:	90 e0       	ldi	r25, 0x00	; 0
   11c68:	28 0f       	add	r18, r24
   11c6a:	39 1f       	adc	r19, r25
   11c6c:	4f 5f       	subi	r20, 0xFF	; 255
   11c6e:	5f 4f       	sbci	r21, 0xFF	; 255
   11c70:	d3 cf       	rjmp	.-90     	; 0x11c18 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   11c72:	20 e0       	ldi	r18, 0x00	; 0
   11c74:	30 e0       	ldi	r19, 0x00	; 0
   11c76:	a0 81       	ld	r26, Z
   11c78:	b1 81       	ldd	r27, Z+1	; 0x01
   11c7a:	12 96       	adiw	r26, 0x02	; 2
   11c7c:	cd 91       	ld	r28, X+
   11c7e:	dc 91       	ld	r29, X
   11c80:	13 97       	sbiw	r26, 0x03	; 3
   11c82:	8d 91       	ld	r24, X+
   11c84:	9c 91       	ld	r25, X
   11c86:	11 97       	sbiw	r26, 0x01	; 1
   11c88:	c8 17       	cp	r28, r24
   11c8a:	d9 07       	cpc	r29, r25
   11c8c:	78 f4       	brcc	.+30     	; 0x11cac <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   11c8e:	ce 01       	movw	r24, r28
   11c90:	01 96       	adiw	r24, 0x01	; 1
   11c92:	13 96       	adiw	r26, 0x03	; 3
   11c94:	9c 93       	st	X, r25
   11c96:	8e 93       	st	-X, r24
   11c98:	12 97       	sbiw	r26, 0x02	; 2
   11c9a:	68 83       	st	Y, r22
   11c9c:	12 96       	adiw	r26, 0x02	; 2
   11c9e:	0d 90       	ld	r0, X+
   11ca0:	bc 91       	ld	r27, X
   11ca2:	a0 2d       	mov	r26, r0
   11ca4:	1c 92       	st	X, r1
   11ca6:	81 e0       	ldi	r24, 0x01	; 1
   11ca8:	90 e0       	ldi	r25, 0x00	; 0
   11caa:	02 c0       	rjmp	.+4      	; 0x11cb0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   11cac:	80 e0       	ldi	r24, 0x00	; 0
   11cae:	90 e0       	ldi	r25, 0x00	; 0
   11cb0:	51 e0       	ldi	r21, 0x01	; 1
   11cb2:	6a 30       	cpi	r22, 0x0A	; 10
   11cb4:	09 f0       	breq	.+2      	; 0x11cb8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   11cb6:	50 e0       	ldi	r21, 0x00	; 0
   11cb8:	42 81       	ldd	r20, Z+2	; 0x02
   11cba:	50 fb       	bst	r21, 0
   11cbc:	47 f9       	bld	r20, 7
   11cbe:	42 83       	std	Z+2, r20	; 0x02
   11cc0:	82 0f       	add	r24, r18
   11cc2:	93 1f       	adc	r25, r19
   11cc4:	df 91       	pop	r29
   11cc6:	cf 91       	pop	r28
   11cc8:	08 95       	ret

00011cca <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   11cca:	ef 92       	push	r14
   11ccc:	ff 92       	push	r15
   11cce:	0f 93       	push	r16
   11cd0:	1f 93       	push	r17
   11cd2:	cf 93       	push	r28
   11cd4:	df 93       	push	r29
   11cd6:	7c 01       	movw	r14, r24
   11cd8:	8b 01       	movw	r16, r22
   11cda:	c0 e0       	ldi	r28, 0x00	; 0
   11cdc:	d0 e0       	ldi	r29, 0x00	; 0
   11cde:	f8 01       	movw	r30, r16
   11ce0:	61 91       	ld	r22, Z+
   11ce2:	8f 01       	movw	r16, r30
   11ce4:	66 23       	and	r22, r22
   11ce6:	29 f0       	breq	.+10     	; 0x11cf2 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   11ce8:	c7 01       	movw	r24, r14
   11cea:	8b df       	rcall	.-234    	; 0x11c02 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11cec:	c8 0f       	add	r28, r24
   11cee:	d9 1f       	adc	r29, r25
   11cf0:	f6 cf       	rjmp	.-20     	; 0x11cde <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   11cf2:	ce 01       	movw	r24, r28
   11cf4:	df 91       	pop	r29
   11cf6:	cf 91       	pop	r28
   11cf8:	1f 91       	pop	r17
   11cfa:	0f 91       	pop	r16
   11cfc:	ff 90       	pop	r15
   11cfe:	ef 90       	pop	r14
   11d00:	08 95       	ret

00011d02 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   11d02:	fc 01       	movw	r30, r24
   11d04:	90 81       	ld	r25, Z
   11d06:	9f 7d       	andi	r25, 0xDF	; 223
   11d08:	9b 35       	cpi	r25, 0x5B	; 91
   11d0a:	99 f4       	brne	.+38     	; 0x11d32 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   11d0c:	01 80       	ldd	r0, Z+1	; 0x01
   11d0e:	f2 81       	ldd	r31, Z+2	; 0x02
   11d10:	e0 2d       	mov	r30, r0
   11d12:	32 81       	ldd	r19, Z+2	; 0x02
   11d14:	93 2f       	mov	r25, r19
   11d16:	9f 70       	andi	r25, 0x0F	; 15
   11d18:	9f 30       	cpi	r25, 0x0F	; 15
   11d1a:	39 f0       	breq	.+14     	; 0x11d2a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   11d1c:	9f 5f       	subi	r25, 0xFF	; 255
   11d1e:	29 2f       	mov	r18, r25
   11d20:	2f 70       	andi	r18, 0x0F	; 15
   11d22:	93 2f       	mov	r25, r19
   11d24:	90 7f       	andi	r25, 0xF0	; 240
   11d26:	92 2b       	or	r25, r18
   11d28:	92 83       	std	Z+2, r25	; 0x02
   11d2a:	65 ef       	ldi	r22, 0xF5	; 245
   11d2c:	76 e0       	ldi	r23, 0x06	; 6
   11d2e:	cf 01       	movw	r24, r30
   11d30:	cc cf       	rjmp	.-104    	; 0x11cca <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11d32:	80 e0       	ldi	r24, 0x00	; 0
   11d34:	90 e0       	ldi	r25, 0x00	; 0
   11d36:	08 95       	ret

00011d38 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   11d38:	ff 92       	push	r15
   11d3a:	0f 93       	push	r16
   11d3c:	1f 93       	push	r17
   11d3e:	cf 93       	push	r28
   11d40:	df 93       	push	r29
   11d42:	8c 01       	movw	r16, r24
   11d44:	f6 2e       	mov	r15, r22
   11d46:	8b e5       	ldi	r24, 0x5B	; 91
   11d48:	68 17       	cp	r22, r24
   11d4a:	f9 f0       	breq	.+62     	; 0x11d8a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11d4c:	86 17       	cp	r24, r22
   11d4e:	98 f0       	brcs	.+38     	; 0x11d76 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   11d50:	ac e2       	ldi	r26, 0x2C	; 44
   11d52:	6a 17       	cp	r22, r26
   11d54:	09 f4       	brne	.+2      	; 0x11d58 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   11d56:	43 c0       	rjmp	.+134    	; 0x11dde <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   11d58:	ba e3       	ldi	r27, 0x3A	; 58
   11d5a:	6b 17       	cp	r22, r27
   11d5c:	c1 f1       	breq	.+112    	; 0x11dce <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   11d5e:	e2 e2       	ldi	r30, 0x22	; 34
   11d60:	6e 13       	cpse	r22, r30
   11d62:	4c c0       	rjmp	.+152    	; 0x11dfc <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11d64:	81 e0       	ldi	r24, 0x01	; 1
   11d66:	d8 01       	movw	r26, r16
   11d68:	13 96       	adiw	r26, 0x03	; 3
   11d6a:	8c 93       	st	X, r24
   11d6c:	c8 01       	movw	r24, r16
   11d6e:	c9 df       	rcall	.-110    	; 0x11d02 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11d70:	ec 01       	movw	r28, r24
   11d72:	62 e2       	ldi	r22, 0x22	; 34
   11d74:	3f c0       	rjmp	.+126    	; 0x11df4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11d76:	fb e7       	ldi	r31, 0x7B	; 123
   11d78:	6f 17       	cp	r22, r31
   11d7a:	39 f0       	breq	.+14     	; 0x11d8a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11d7c:	8d e7       	ldi	r24, 0x7D	; 125
   11d7e:	68 17       	cp	r22, r24
   11d80:	39 f0       	breq	.+14     	; 0x11d90 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11d82:	ad e5       	ldi	r26, 0x5D	; 93
   11d84:	6a 13       	cpse	r22, r26
   11d86:	3a c0       	rjmp	.+116    	; 0x11dfc <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11d88:	03 c0       	rjmp	.+6      	; 0x11d90 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11d8a:	c8 01       	movw	r24, r16
   11d8c:	ba df       	rcall	.-140    	; 0x11d02 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11d8e:	1c c0       	rjmp	.+56     	; 0x11dc8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   11d90:	d8 01       	movw	r26, r16
   11d92:	8c 91       	ld	r24, X
   11d94:	8f 7d       	andi	r24, 0xDF	; 223
   11d96:	8b 35       	cpi	r24, 0x5B	; 91
   11d98:	19 f4       	brne	.+6      	; 0x11da0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   11d9a:	c0 e0       	ldi	r28, 0x00	; 0
   11d9c:	d0 e0       	ldi	r29, 0x00	; 0
   11d9e:	15 c0       	rjmp	.+42     	; 0x11dca <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   11da0:	d8 01       	movw	r26, r16
   11da2:	11 96       	adiw	r26, 0x01	; 1
   11da4:	ed 91       	ld	r30, X+
   11da6:	fc 91       	ld	r31, X
   11da8:	12 97       	sbiw	r26, 0x02	; 2
   11daa:	32 81       	ldd	r19, Z+2	; 0x02
   11dac:	93 2f       	mov	r25, r19
   11dae:	9f 70       	andi	r25, 0x0F	; 15
   11db0:	39 f0       	breq	.+14     	; 0x11dc0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   11db2:	91 5f       	subi	r25, 0xF1	; 241
   11db4:	29 2f       	mov	r18, r25
   11db6:	2f 70       	andi	r18, 0x0F	; 15
   11db8:	93 2f       	mov	r25, r19
   11dba:	90 7f       	andi	r25, 0xF0	; 240
   11dbc:	92 2b       	or	r25, r18
   11dbe:	92 83       	std	Z+2, r25	; 0x02
   11dc0:	65 ef       	ldi	r22, 0xF5	; 245
   11dc2:	76 e0       	ldi	r23, 0x06	; 6
   11dc4:	cf 01       	movw	r24, r30
   11dc6:	81 df       	rcall	.-254    	; 0x11cca <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11dc8:	ec 01       	movw	r28, r24
   11dca:	6f 2d       	mov	r22, r15
   11dcc:	13 c0       	rjmp	.+38     	; 0x11df4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11dce:	61 ef       	ldi	r22, 0xF1	; 241
   11dd0:	76 e0       	ldi	r23, 0x06	; 6
   11dd2:	d8 01       	movw	r26, r16
   11dd4:	11 96       	adiw	r26, 0x01	; 1
   11dd6:	8d 91       	ld	r24, X+
   11dd8:	9c 91       	ld	r25, X
   11dda:	12 97       	sbiw	r26, 0x02	; 2
   11ddc:	05 c0       	rjmp	.+10     	; 0x11de8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   11dde:	64 ef       	ldi	r22, 0xF4	; 244
   11de0:	76 e0       	ldi	r23, 0x06	; 6
   11de2:	f8 01       	movw	r30, r16
   11de4:	81 81       	ldd	r24, Z+1	; 0x01
   11de6:	92 81       	ldd	r25, Z+2	; 0x02
   11de8:	df 91       	pop	r29
   11dea:	cf 91       	pop	r28
   11dec:	1f 91       	pop	r17
   11dee:	0f 91       	pop	r16
   11df0:	ff 90       	pop	r15
   11df2:	6b cf       	rjmp	.-298    	; 0x11cca <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11df4:	f8 01       	movw	r30, r16
   11df6:	81 81       	ldd	r24, Z+1	; 0x01
   11df8:	92 81       	ldd	r25, Z+2	; 0x02
   11dfa:	09 c0       	rjmp	.+18     	; 0x11e0e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   11dfc:	c8 01       	movw	r24, r16
   11dfe:	81 df       	rcall	.-254    	; 0x11d02 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11e00:	ec 01       	movw	r28, r24
   11e02:	6f 2d       	mov	r22, r15
   11e04:	d8 01       	movw	r26, r16
   11e06:	11 96       	adiw	r26, 0x01	; 1
   11e08:	8d 91       	ld	r24, X+
   11e0a:	9c 91       	ld	r25, X
   11e0c:	12 97       	sbiw	r26, 0x02	; 2
   11e0e:	f9 de       	rcall	.-526    	; 0x11c02 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11e10:	8c 0f       	add	r24, r28
   11e12:	9d 1f       	adc	r25, r29
   11e14:	df 91       	pop	r29
   11e16:	cf 91       	pop	r28
   11e18:	1f 91       	pop	r17
   11e1a:	0f 91       	pop	r16
   11e1c:	ff 90       	pop	r15
   11e1e:	08 95       	ret

00011e20 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   11e20:	1f 93       	push	r17
   11e22:	cf 93       	push	r28
   11e24:	df 93       	push	r29
   11e26:	ec 01       	movw	r28, r24
   11e28:	16 2f       	mov	r17, r22
   11e2a:	8b 81       	ldd	r24, Y+3	; 0x03
   11e2c:	88 23       	and	r24, r24
   11e2e:	51 f0       	breq	.+20     	; 0x11e44 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   11e30:	62 32       	cpi	r22, 0x22	; 34
   11e32:	19 f4       	brne	.+6      	; 0x11e3a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   11e34:	88 81       	ld	r24, Y
   11e36:	8c 35       	cpi	r24, 0x5C	; 92
   11e38:	61 f4       	brne	.+24     	; 0x11e52 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   11e3a:	61 2f       	mov	r22, r17
   11e3c:	89 81       	ldd	r24, Y+1	; 0x01
   11e3e:	9a 81       	ldd	r25, Y+2	; 0x02
   11e40:	e0 de       	rcall	.-576    	; 0x11c02 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11e42:	02 c0       	rjmp	.+4      	; 0x11e48 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   11e44:	ce 01       	movw	r24, r28
   11e46:	78 df       	rcall	.-272    	; 0x11d38 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   11e48:	18 83       	st	Y, r17
   11e4a:	df 91       	pop	r29
   11e4c:	cf 91       	pop	r28
   11e4e:	1f 91       	pop	r17
   11e50:	08 95       	ret
   11e52:	1b 82       	std	Y+3, r1	; 0x03
   11e54:	f2 cf       	rjmp	.-28     	; 0x11e3a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

00011e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   11e56:	cf 93       	push	r28
   11e58:	df 93       	push	r29
   11e5a:	ec 01       	movw	r28, r24
   11e5c:	88 81       	ld	r24, Y
   11e5e:	99 81       	ldd	r25, Y+1	; 0x01
   11e60:	df df       	rcall	.-66     	; 0x11e20 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11e62:	2a 81       	ldd	r18, Y+2	; 0x02
   11e64:	3b 81       	ldd	r19, Y+3	; 0x03
   11e66:	82 0f       	add	r24, r18
   11e68:	93 1f       	adc	r25, r19
   11e6a:	9b 83       	std	Y+3, r25	; 0x03
   11e6c:	8a 83       	std	Y+2, r24	; 0x02
   11e6e:	df 91       	pop	r29
   11e70:	cf 91       	pop	r28
   11e72:	08 95       	ret

00011e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   11e74:	cf 92       	push	r12
   11e76:	df 92       	push	r13
   11e78:	ef 92       	push	r14
   11e7a:	ff 92       	push	r15
   11e7c:	0f 93       	push	r16
   11e7e:	1f 93       	push	r17
   11e80:	cf 93       	push	r28
   11e82:	df 93       	push	r29
   11e84:	7c 01       	movw	r14, r24
   11e86:	fc 01       	movw	r30, r24
   11e88:	c0 80       	ld	r12, Z
   11e8a:	d1 80       	ldd	r13, Z+1	; 0x01
   11e8c:	8b 01       	movw	r16, r22
   11e8e:	c0 e0       	ldi	r28, 0x00	; 0
   11e90:	d0 e0       	ldi	r29, 0x00	; 0
   11e92:	f8 01       	movw	r30, r16
   11e94:	61 91       	ld	r22, Z+
   11e96:	8f 01       	movw	r16, r30
   11e98:	66 23       	and	r22, r22
   11e9a:	29 f0       	breq	.+10     	; 0x11ea6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   11e9c:	c6 01       	movw	r24, r12
   11e9e:	c0 df       	rcall	.-128    	; 0x11e20 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11ea0:	c8 0f       	add	r28, r24
   11ea2:	d9 1f       	adc	r29, r25
   11ea4:	f6 cf       	rjmp	.-20     	; 0x11e92 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   11ea6:	f7 01       	movw	r30, r14
   11ea8:	82 81       	ldd	r24, Z+2	; 0x02
   11eaa:	93 81       	ldd	r25, Z+3	; 0x03
   11eac:	c8 0f       	add	r28, r24
   11eae:	d9 1f       	adc	r29, r25
   11eb0:	d3 83       	std	Z+3, r29	; 0x03
   11eb2:	c2 83       	std	Z+2, r28	; 0x02
   11eb4:	df 91       	pop	r29
   11eb6:	cf 91       	pop	r28
   11eb8:	1f 91       	pop	r17
   11eba:	0f 91       	pop	r16
   11ebc:	ff 90       	pop	r15
   11ebe:	ef 90       	pop	r14
   11ec0:	df 90       	pop	r13
   11ec2:	cf 90       	pop	r12
   11ec4:	08 95       	ret

00011ec6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   11ec6:	ff 92       	push	r15
   11ec8:	0f 93       	push	r16
   11eca:	1f 93       	push	r17
   11ecc:	cf 93       	push	r28
   11ece:	df 93       	push	r29
   11ed0:	61 15       	cp	r22, r1
   11ed2:	71 05       	cpc	r23, r1
   11ed4:	41 f4       	brne	.+16     	; 0x11ee6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   11ed6:	6c ee       	ldi	r22, 0xEC	; 236
   11ed8:	76 e0       	ldi	r23, 0x06	; 6
   11eda:	df 91       	pop	r29
   11edc:	cf 91       	pop	r28
   11ede:	1f 91       	pop	r17
   11ee0:	0f 91       	pop	r16
   11ee2:	ff 90       	pop	r15
   11ee4:	c7 cf       	rjmp	.-114    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11ee6:	8b 01       	movw	r16, r22
   11ee8:	ec 01       	movw	r28, r24
   11eea:	62 e2       	ldi	r22, 0x22	; 34
   11eec:	ce 01       	movw	r24, r28
   11eee:	b3 df       	rcall	.-154    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11ef0:	f8 01       	movw	r30, r16
   11ef2:	61 91       	ld	r22, Z+
   11ef4:	8f 01       	movw	r16, r30
   11ef6:	66 23       	and	r22, r22
   11ef8:	51 f0       	breq	.+20     	; 0x11f0e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   11efa:	ed ed       	ldi	r30, 0xDD	; 221
   11efc:	f6 e0       	ldi	r31, 0x06	; 6
   11efe:	f0 80       	ld	r15, Z
   11f00:	ff 20       	and	r15, r15
   11f02:	a1 f3       	breq	.-24     	; 0x11eec <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   11f04:	81 81       	ldd	r24, Z+1	; 0x01
   11f06:	68 17       	cp	r22, r24
   11f08:	51 f0       	breq	.+20     	; 0x11f1e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   11f0a:	32 96       	adiw	r30, 0x02	; 2
   11f0c:	f8 cf       	rjmp	.-16     	; 0x11efe <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   11f0e:	62 e2       	ldi	r22, 0x22	; 34
   11f10:	ce 01       	movw	r24, r28
   11f12:	df 91       	pop	r29
   11f14:	cf 91       	pop	r28
   11f16:	1f 91       	pop	r17
   11f18:	0f 91       	pop	r16
   11f1a:	ff 90       	pop	r15
   11f1c:	9c cf       	rjmp	.-200    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11f1e:	6c e5       	ldi	r22, 0x5C	; 92
   11f20:	ce 01       	movw	r24, r28
   11f22:	99 df       	rcall	.-206    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11f24:	6f 2d       	mov	r22, r15
   11f26:	e2 cf       	rjmp	.-60     	; 0x11eec <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

00011f28 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   11f28:	0f 93       	push	r16
   11f2a:	1f 93       	push	r17
   11f2c:	cf 93       	push	r28
   11f2e:	df 93       	push	r29
   11f30:	cd b7       	in	r28, 0x3d	; 61
   11f32:	de b7       	in	r29, 0x3e	; 62
   11f34:	66 97       	sbiw	r28, 0x16	; 22
   11f36:	0f b6       	in	r0, 0x3f	; 63
   11f38:	f8 94       	cli
   11f3a:	de bf       	out	0x3e, r29	; 62
   11f3c:	0f be       	out	0x3f, r0	; 63
   11f3e:	cd bf       	out	0x3d, r28	; 61
   11f40:	9c 01       	movw	r18, r24
   11f42:	cb 01       	movw	r24, r22
   11f44:	1e 8a       	std	Y+22, r1	; 0x16
   11f46:	fe 01       	movw	r30, r28
   11f48:	76 96       	adiw	r30, 0x16	; 22
   11f4a:	0a e0       	ldi	r16, 0x0A	; 10
   11f4c:	10 e0       	ldi	r17, 0x00	; 0
   11f4e:	b8 01       	movw	r22, r16
   11f50:	0e 94 4a e7 	call	0x1ce94	; 0x1ce94 <__divmodhi4>
   11f54:	80 5d       	subi	r24, 0xD0	; 208
   11f56:	82 93       	st	-Z, r24
   11f58:	cb 01       	movw	r24, r22
   11f5a:	00 97       	sbiw	r24, 0x00	; 0
   11f5c:	c1 f7       	brne	.-16     	; 0x11f4e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   11f5e:	bf 01       	movw	r22, r30
   11f60:	c9 01       	movw	r24, r18
   11f62:	88 df       	rcall	.-240    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11f64:	66 96       	adiw	r28, 0x16	; 22
   11f66:	0f b6       	in	r0, 0x3f	; 63
   11f68:	f8 94       	cli
   11f6a:	de bf       	out	0x3e, r29	; 62
   11f6c:	0f be       	out	0x3f, r0	; 63
   11f6e:	cd bf       	out	0x3d, r28	; 61
   11f70:	df 91       	pop	r29
   11f72:	cf 91       	pop	r28
   11f74:	1f 91       	pop	r17
   11f76:	0f 91       	pop	r16
   11f78:	08 95       	ret

00011f7a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   11f7a:	8f 92       	push	r8
   11f7c:	9f 92       	push	r9
   11f7e:	af 92       	push	r10
   11f80:	bf 92       	push	r11
   11f82:	ef 92       	push	r14
   11f84:	ff 92       	push	r15
   11f86:	0f 93       	push	r16
   11f88:	1f 93       	push	r17
   11f8a:	cf 93       	push	r28
   11f8c:	df 93       	push	r29
   11f8e:	cd b7       	in	r28, 0x3d	; 61
   11f90:	de b7       	in	r29, 0x3e	; 62
   11f92:	66 97       	sbiw	r28, 0x16	; 22
   11f94:	0f b6       	in	r0, 0x3f	; 63
   11f96:	f8 94       	cli
   11f98:	de bf       	out	0x3e, r29	; 62
   11f9a:	0f be       	out	0x3f, r0	; 63
   11f9c:	cd bf       	out	0x3d, r28	; 61
   11f9e:	7c 01       	movw	r14, r24
   11fa0:	1e 8a       	std	Y+22, r1	; 0x16
   11fa2:	8e 01       	movw	r16, r28
   11fa4:	0a 5e       	subi	r16, 0xEA	; 234
   11fa6:	1f 4f       	sbci	r17, 0xFF	; 255
   11fa8:	8a e0       	ldi	r24, 0x0A	; 10
   11faa:	88 2e       	mov	r8, r24
   11fac:	91 2c       	mov	r9, r1
   11fae:	a1 2c       	mov	r10, r1
   11fb0:	b1 2c       	mov	r11, r1
   11fb2:	cb 01       	movw	r24, r22
   11fb4:	ba 01       	movw	r22, r20
   11fb6:	a5 01       	movw	r20, r10
   11fb8:	94 01       	movw	r18, r8
   11fba:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   11fbe:	94 2f       	mov	r25, r20
   11fc0:	85 2f       	mov	r24, r21
   11fc2:	60 5d       	subi	r22, 0xD0	; 208
   11fc4:	f8 01       	movw	r30, r16
   11fc6:	62 93       	st	-Z, r22
   11fc8:	8f 01       	movw	r16, r30
   11fca:	a9 01       	movw	r20, r18
   11fcc:	69 2f       	mov	r22, r25
   11fce:	78 2f       	mov	r23, r24
   11fd0:	41 15       	cp	r20, r1
   11fd2:	51 05       	cpc	r21, r1
   11fd4:	61 05       	cpc	r22, r1
   11fd6:	71 05       	cpc	r23, r1
   11fd8:	61 f7       	brne	.-40     	; 0x11fb2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   11fda:	bf 01       	movw	r22, r30
   11fdc:	c7 01       	movw	r24, r14
   11fde:	4a df       	rcall	.-364    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11fe0:	66 96       	adiw	r28, 0x16	; 22
   11fe2:	0f b6       	in	r0, 0x3f	; 63
   11fe4:	f8 94       	cli
   11fe6:	de bf       	out	0x3e, r29	; 62
   11fe8:	0f be       	out	0x3f, r0	; 63
   11fea:	cd bf       	out	0x3d, r28	; 61
   11fec:	df 91       	pop	r29
   11fee:	cf 91       	pop	r28
   11ff0:	1f 91       	pop	r17
   11ff2:	0f 91       	pop	r16
   11ff4:	ff 90       	pop	r15
   11ff6:	ef 90       	pop	r14
   11ff8:	bf 90       	pop	r11
   11ffa:	af 90       	pop	r10
   11ffc:	9f 90       	pop	r9
   11ffe:	8f 90       	pop	r8
   12000:	08 95       	ret

00012002 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   12002:	4f 92       	push	r4
   12004:	5f 92       	push	r5
   12006:	6f 92       	push	r6
   12008:	7f 92       	push	r7
   1200a:	af 92       	push	r10
   1200c:	bf 92       	push	r11
   1200e:	cf 92       	push	r12
   12010:	df 92       	push	r13
   12012:	ef 92       	push	r14
   12014:	ff 92       	push	r15
   12016:	0f 93       	push	r16
   12018:	1f 93       	push	r17
   1201a:	cf 93       	push	r28
   1201c:	df 93       	push	r29
   1201e:	cd b7       	in	r28, 0x3d	; 61
   12020:	de b7       	in	r29, 0x3e	; 62
   12022:	6b 97       	sbiw	r28, 0x1b	; 27
   12024:	0f b6       	in	r0, 0x3f	; 63
   12026:	f8 94       	cli
   12028:	de bf       	out	0x3e, r29	; 62
   1202a:	0f be       	out	0x3f, r0	; 63
   1202c:	cd bf       	out	0x3d, r28	; 61
   1202e:	8c 01       	movw	r16, r24
   12030:	6a 01       	movw	r12, r20
   12032:	7b 01       	movw	r14, r22
   12034:	9a 01       	movw	r18, r20
   12036:	ab 01       	movw	r20, r22
   12038:	c7 01       	movw	r24, r14
   1203a:	b6 01       	movw	r22, r12
   1203c:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   12040:	88 23       	and	r24, r24
   12042:	19 f0       	breq	.+6      	; 0x1204a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   12044:	68 ef       	ldi	r22, 0xF8	; 248
   12046:	76 e0       	ldi	r23, 0x06	; 6
   12048:	29 c0       	rjmp	.+82     	; 0x1209c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   1204a:	20 e0       	ldi	r18, 0x00	; 0
   1204c:	30 e0       	ldi	r19, 0x00	; 0
   1204e:	a9 01       	movw	r20, r18
   12050:	c7 01       	movw	r24, r14
   12052:	b6 01       	movw	r22, r12
   12054:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   12058:	87 ff       	sbrs	r24, 7
   1205a:	07 c0       	rjmp	.+14     	; 0x1206a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   1205c:	6d e2       	ldi	r22, 0x2D	; 45
   1205e:	c8 01       	movw	r24, r16
   12060:	fa de       	rcall	.-524    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12062:	f7 fa       	bst	r15, 7
   12064:	f0 94       	com	r15
   12066:	f7 f8       	bld	r15, 7
   12068:	f0 94       	com	r15
   1206a:	20 e0       	ldi	r18, 0x00	; 0
   1206c:	30 e0       	ldi	r19, 0x00	; 0
   1206e:	a9 01       	movw	r20, r18
   12070:	c7 01       	movw	r24, r14
   12072:	b6 01       	movw	r22, r12
   12074:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   12078:	88 23       	and	r24, r24
   1207a:	99 f0       	breq	.+38     	; 0x120a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   1207c:	a7 01       	movw	r20, r14
   1207e:	96 01       	movw	r18, r12
   12080:	c7 01       	movw	r24, r14
   12082:	b6 01       	movw	r22, r12
   12084:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   12088:	9b 01       	movw	r18, r22
   1208a:	ac 01       	movw	r20, r24
   1208c:	c7 01       	movw	r24, r14
   1208e:	b6 01       	movw	r22, r12
   12090:	0e 94 31 cd 	call	0x19a62	; 0x19a62 <__cmpsf2>
   12094:	81 11       	cpse	r24, r1
   12096:	05 c0       	rjmp	.+10     	; 0x120a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   12098:	6f ef       	ldi	r22, 0xFF	; 255
   1209a:	76 e0       	ldi	r23, 0x06	; 6
   1209c:	c8 01       	movw	r24, r16
   1209e:	ea de       	rcall	.-556    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   120a0:	51 c0       	rjmp	.+162    	; 0x12144 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   120a2:	b7 01       	movw	r22, r14
   120a4:	a6 01       	movw	r20, r12
   120a6:	ce 01       	movw	r24, r28
   120a8:	41 96       	adiw	r24, 0x11	; 17
   120aa:	2d dc       	rcall	.-1958   	; 0x11906 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   120ac:	49 89       	ldd	r20, Y+17	; 0x11
   120ae:	5a 89       	ldd	r21, Y+18	; 0x12
   120b0:	6b 89       	ldd	r22, Y+19	; 0x13
   120b2:	7c 89       	ldd	r23, Y+20	; 0x14
   120b4:	c8 01       	movw	r24, r16
   120b6:	61 df       	rcall	.-318    	; 0x11f7a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   120b8:	bb 8c       	ldd	r11, Y+27	; 0x1b
   120ba:	bb 20       	and	r11, r11
   120bc:	41 f1       	breq	.+80     	; 0x1210e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   120be:	6d 89       	ldd	r22, Y+21	; 0x15
   120c0:	7e 89       	ldd	r23, Y+22	; 0x16
   120c2:	8f 89       	ldd	r24, Y+23	; 0x17
   120c4:	98 8d       	ldd	r25, Y+24	; 0x18
   120c6:	18 8a       	std	Y+16, r1	; 0x10
   120c8:	ab 2c       	mov	r10, r11
   120ca:	6e 01       	movw	r12, r28
   120cc:	20 e1       	ldi	r18, 0x10	; 16
   120ce:	c2 0e       	add	r12, r18
   120d0:	d1 1c       	adc	r13, r1
   120d2:	76 01       	movw	r14, r12
   120d4:	2a e0       	ldi	r18, 0x0A	; 10
   120d6:	42 2e       	mov	r4, r18
   120d8:	51 2c       	mov	r5, r1
   120da:	61 2c       	mov	r6, r1
   120dc:	71 2c       	mov	r7, r1
   120de:	aa 94       	dec	r10
   120e0:	ef ef       	ldi	r30, 0xFF	; 255
   120e2:	ae 16       	cp	r10, r30
   120e4:	59 f0       	breq	.+22     	; 0x120fc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   120e6:	a3 01       	movw	r20, r6
   120e8:	92 01       	movw	r18, r4
   120ea:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   120ee:	60 5d       	subi	r22, 0xD0	; 208
   120f0:	f6 01       	movw	r30, r12
   120f2:	62 93       	st	-Z, r22
   120f4:	6f 01       	movw	r12, r30
   120f6:	b9 01       	movw	r22, r18
   120f8:	ca 01       	movw	r24, r20
   120fa:	f1 cf       	rjmp	.-30     	; 0x120de <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   120fc:	b7 01       	movw	r22, r14
   120fe:	6b 19       	sub	r22, r11
   12100:	71 09       	sbc	r23, r1
   12102:	8e e2       	ldi	r24, 0x2E	; 46
   12104:	fb 01       	movw	r30, r22
   12106:	82 93       	st	-Z, r24
   12108:	bf 01       	movw	r22, r30
   1210a:	c8 01       	movw	r24, r16
   1210c:	b3 de       	rcall	.-666    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1210e:	89 8d       	ldd	r24, Y+25	; 0x19
   12110:	9a 8d       	ldd	r25, Y+26	; 0x1a
   12112:	97 ff       	sbrs	r25, 7
   12114:	0b c0       	rjmp	.+22     	; 0x1212c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   12116:	6c ef       	ldi	r22, 0xFC	; 252
   12118:	76 e0       	ldi	r23, 0x06	; 6
   1211a:	c8 01       	movw	r24, r16
   1211c:	ab de       	rcall	.-682    	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1211e:	69 8d       	ldd	r22, Y+25	; 0x19
   12120:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12122:	71 95       	neg	r23
   12124:	61 95       	neg	r22
   12126:	71 09       	sbc	r23, r1
   12128:	c8 01       	movw	r24, r16
   1212a:	fe de       	rcall	.-516    	; 0x11f28 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   1212c:	89 8d       	ldd	r24, Y+25	; 0x19
   1212e:	9a 8d       	ldd	r25, Y+26	; 0x1a
   12130:	18 16       	cp	r1, r24
   12132:	19 06       	cpc	r1, r25
   12134:	3c f4       	brge	.+14     	; 0x12144 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12136:	65 e6       	ldi	r22, 0x65	; 101
   12138:	c8 01       	movw	r24, r16
   1213a:	8d de       	rcall	.-742    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1213c:	69 8d       	ldd	r22, Y+25	; 0x19
   1213e:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12140:	c8 01       	movw	r24, r16
   12142:	f2 de       	rcall	.-540    	; 0x11f28 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   12144:	6b 96       	adiw	r28, 0x1b	; 27
   12146:	0f b6       	in	r0, 0x3f	; 63
   12148:	f8 94       	cli
   1214a:	de bf       	out	0x3e, r29	; 62
   1214c:	0f be       	out	0x3f, r0	; 63
   1214e:	cd bf       	out	0x3d, r28	; 61
   12150:	df 91       	pop	r29
   12152:	cf 91       	pop	r28
   12154:	1f 91       	pop	r17
   12156:	0f 91       	pop	r16
   12158:	ff 90       	pop	r15
   1215a:	ef 90       	pop	r14
   1215c:	df 90       	pop	r13
   1215e:	cf 90       	pop	r12
   12160:	bf 90       	pop	r11
   12162:	af 90       	pop	r10
   12164:	7f 90       	pop	r7
   12166:	6f 90       	pop	r6
   12168:	5f 90       	pop	r5
   1216a:	4f 90       	pop	r4
   1216c:	08 95       	ret

0001216e <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   1216e:	0f 93       	push	r16
   12170:	1f 93       	push	r17
   12172:	cf 93       	push	r28
   12174:	df 93       	push	r29
   12176:	eb 01       	movw	r28, r22
   12178:	dc 01       	movw	r26, r24
   1217a:	ec 91       	ld	r30, X
   1217c:	4e 2f       	mov	r20, r30
   1217e:	50 e0       	ldi	r21, 0x00	; 0
   12180:	fa 01       	movw	r30, r20
   12182:	31 97       	sbiw	r30, 0x01	; 1
   12184:	e8 30       	cpi	r30, 0x08	; 8
   12186:	f1 05       	cpc	r31, r1
   12188:	08 f0       	brcs	.+2      	; 0x1218c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   1218a:	6e c0       	rjmp	.+220    	; 0x12268 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   1218c:	8c 01       	movw	r16, r24
   1218e:	88 27       	eor	r24, r24
   12190:	e9 51       	subi	r30, 0x19	; 25
   12192:	ff 4f       	sbci	r31, 0xFF	; 255
   12194:	8f 4f       	sbci	r24, 0xFF	; 255
   12196:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
   1219a:	fd 01       	movw	r30, r26
   1219c:	41 81       	ldd	r20, Z+1	; 0x01
   1219e:	52 81       	ldd	r21, Z+2	; 0x02
   121a0:	63 81       	ldd	r22, Z+3	; 0x03
   121a2:	74 81       	ldd	r23, Z+4	; 0x04
   121a4:	ce 01       	movw	r24, r28
   121a6:	df 91       	pop	r29
   121a8:	cf 91       	pop	r28
   121aa:	1f 91       	pop	r17
   121ac:	0f 91       	pop	r16
   121ae:	29 cf       	rjmp	.-430    	; 0x12002 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   121b0:	11 96       	adiw	r26, 0x01	; 1
   121b2:	0d 91       	ld	r16, X+
   121b4:	1c 91       	ld	r17, X
   121b6:	12 97       	sbiw	r26, 0x02	; 2
   121b8:	6b e5       	ldi	r22, 0x5B	; 91
   121ba:	ce 01       	movw	r24, r28
   121bc:	4c de       	rcall	.-872    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   121be:	f8 01       	movw	r30, r16
   121c0:	02 81       	ldd	r16, Z+2	; 0x02
   121c2:	13 81       	ldd	r17, Z+3	; 0x03
   121c4:	01 15       	cp	r16, r1
   121c6:	11 05       	cpc	r17, r1
   121c8:	71 f0       	breq	.+28     	; 0x121e6 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   121ca:	be 01       	movw	r22, r28
   121cc:	c8 01       	movw	r24, r16
   121ce:	02 96       	adiw	r24, 0x02	; 2
   121d0:	ce df       	rcall	.-100    	; 0x1216e <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   121d2:	d8 01       	movw	r26, r16
   121d4:	0d 91       	ld	r16, X+
   121d6:	1c 91       	ld	r17, X
   121d8:	01 15       	cp	r16, r1
   121da:	11 05       	cpc	r17, r1
   121dc:	21 f0       	breq	.+8      	; 0x121e6 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   121de:	6c e2       	ldi	r22, 0x2C	; 44
   121e0:	ce 01       	movw	r24, r28
   121e2:	39 de       	rcall	.-910    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   121e4:	ef cf       	rjmp	.-34     	; 0x121c4 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   121e6:	6d e5       	ldi	r22, 0x5D	; 93
   121e8:	ce 01       	movw	r24, r28
   121ea:	df 91       	pop	r29
   121ec:	cf 91       	pop	r28
   121ee:	1f 91       	pop	r17
   121f0:	0f 91       	pop	r16
   121f2:	31 ce       	rjmp	.-926    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   121f4:	fd 01       	movw	r30, r26
   121f6:	81 81       	ldd	r24, Z+1	; 0x01
   121f8:	92 81       	ldd	r25, Z+2	; 0x02
   121fa:	df 91       	pop	r29
   121fc:	cf 91       	pop	r28
   121fe:	1f 91       	pop	r17
   12200:	0f 91       	pop	r16
   12202:	37 c0       	rjmp	.+110    	; 0x12272 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12204:	11 96       	adiw	r26, 0x01	; 1
   12206:	6d 91       	ld	r22, X+
   12208:	7c 91       	ld	r23, X
   1220a:	12 97       	sbiw	r26, 0x02	; 2
   1220c:	ce 01       	movw	r24, r28
   1220e:	df 91       	pop	r29
   12210:	cf 91       	pop	r28
   12212:	1f 91       	pop	r17
   12214:	0f 91       	pop	r16
   12216:	57 ce       	rjmp	.-850    	; 0x11ec6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12218:	fd 01       	movw	r30, r26
   1221a:	61 81       	ldd	r22, Z+1	; 0x01
   1221c:	72 81       	ldd	r23, Z+2	; 0x02
   1221e:	1e c0       	rjmp	.+60     	; 0x1225c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   12220:	6d e2       	ldi	r22, 0x2D	; 45
   12222:	ce 01       	movw	r24, r28
   12224:	18 de       	rcall	.-976    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12226:	d8 01       	movw	r26, r16
   12228:	11 96       	adiw	r26, 0x01	; 1
   1222a:	4d 91       	ld	r20, X+
   1222c:	5d 91       	ld	r21, X+
   1222e:	6d 91       	ld	r22, X+
   12230:	7c 91       	ld	r23, X
   12232:	14 97       	sbiw	r26, 0x04	; 4
   12234:	ce 01       	movw	r24, r28
   12236:	df 91       	pop	r29
   12238:	cf 91       	pop	r28
   1223a:	1f 91       	pop	r17
   1223c:	0f 91       	pop	r16
   1223e:	9d ce       	rjmp	.-710    	; 0x11f7a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   12240:	fd 01       	movw	r30, r26
   12242:	81 81       	ldd	r24, Z+1	; 0x01
   12244:	92 81       	ldd	r25, Z+2	; 0x02
   12246:	a3 81       	ldd	r26, Z+3	; 0x03
   12248:	b4 81       	ldd	r27, Z+4	; 0x04
   1224a:	89 2b       	or	r24, r25
   1224c:	8a 2b       	or	r24, r26
   1224e:	8b 2b       	or	r24, r27
   12250:	19 f4       	brne	.+6      	; 0x12258 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   12252:	6d e0       	ldi	r22, 0x0D	; 13
   12254:	77 e0       	ldi	r23, 0x07	; 7
   12256:	02 c0       	rjmp	.+4      	; 0x1225c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   12258:	68 e0       	ldi	r22, 0x08	; 8
   1225a:	77 e0       	ldi	r23, 0x07	; 7
   1225c:	ce 01       	movw	r24, r28
   1225e:	df 91       	pop	r29
   12260:	cf 91       	pop	r28
   12262:	1f 91       	pop	r17
   12264:	0f 91       	pop	r16
   12266:	06 ce       	rjmp	.-1012   	; 0x11e74 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12268:	df 91       	pop	r29
   1226a:	cf 91       	pop	r28
   1226c:	1f 91       	pop	r17
   1226e:	0f 91       	pop	r16
   12270:	08 95       	ret

00012272 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   12272:	0f 93       	push	r16
   12274:	1f 93       	push	r17
   12276:	cf 93       	push	r28
   12278:	df 93       	push	r29
   1227a:	8c 01       	movw	r16, r24
   1227c:	eb 01       	movw	r28, r22
   1227e:	6b e7       	ldi	r22, 0x7B	; 123
   12280:	ce 01       	movw	r24, r28
   12282:	e9 dd       	rcall	.-1070   	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12284:	f8 01       	movw	r30, r16
   12286:	02 81       	ldd	r16, Z+2	; 0x02
   12288:	13 81       	ldd	r17, Z+3	; 0x03
   1228a:	01 15       	cp	r16, r1
   1228c:	11 05       	cpc	r17, r1
   1228e:	b1 f0       	breq	.+44     	; 0x122bc <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   12290:	f8 01       	movw	r30, r16
   12292:	62 81       	ldd	r22, Z+2	; 0x02
   12294:	73 81       	ldd	r23, Z+3	; 0x03
   12296:	ce 01       	movw	r24, r28
   12298:	16 de       	rcall	.-980    	; 0x11ec6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   1229a:	6a e3       	ldi	r22, 0x3A	; 58
   1229c:	ce 01       	movw	r24, r28
   1229e:	db dd       	rcall	.-1098   	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   122a0:	be 01       	movw	r22, r28
   122a2:	c8 01       	movw	r24, r16
   122a4:	04 96       	adiw	r24, 0x04	; 4
   122a6:	63 df       	rcall	.-314    	; 0x1216e <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   122a8:	f8 01       	movw	r30, r16
   122aa:	00 81       	ld	r16, Z
   122ac:	11 81       	ldd	r17, Z+1	; 0x01
   122ae:	01 15       	cp	r16, r1
   122b0:	11 05       	cpc	r17, r1
   122b2:	21 f0       	breq	.+8      	; 0x122bc <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   122b4:	6c e2       	ldi	r22, 0x2C	; 44
   122b6:	ce 01       	movw	r24, r28
   122b8:	ce dd       	rcall	.-1124   	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   122ba:	e7 cf       	rjmp	.-50     	; 0x1228a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   122bc:	6d e7       	ldi	r22, 0x7D	; 125
   122be:	ce 01       	movw	r24, r28
   122c0:	df 91       	pop	r29
   122c2:	cf 91       	pop	r28
   122c4:	1f 91       	pop	r17
   122c6:	0f 91       	pop	r16
   122c8:	c6 cd       	rjmp	.-1140   	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

000122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   122ca:	cf 93       	push	r28
   122cc:	df 93       	push	r29
   122ce:	cd b7       	in	r28, 0x3d	; 61
   122d0:	de b7       	in	r29, 0x3e	; 62
   122d2:	2f 97       	sbiw	r28, 0x0f	; 15
   122d4:	0f b6       	in	r0, 0x3f	; 63
   122d6:	f8 94       	cli
   122d8:	de bf       	out	0x3e, r29	; 62
   122da:	0f be       	out	0x3f, r0	; 63
   122dc:	cd bf       	out	0x3d, r28	; 61
   122de:	41 50       	subi	r20, 0x01	; 1
   122e0:	51 09       	sbc	r21, r1
   122e2:	46 0f       	add	r20, r22
   122e4:	57 1f       	adc	r21, r23
   122e6:	5a 87       	std	Y+10, r21	; 0x0a
   122e8:	49 87       	std	Y+9, r20	; 0x09
   122ea:	7c 87       	std	Y+12, r23	; 0x0c
   122ec:	6b 87       	std	Y+11, r22	; 0x0b
   122ee:	fb 01       	movw	r30, r22
   122f0:	10 82       	st	Z, r1
   122f2:	9e 01       	movw	r18, r28
   122f4:	27 5f       	subi	r18, 0xF7	; 247
   122f6:	3f 4f       	sbci	r19, 0xFF	; 255
   122f8:	3e 87       	std	Y+14, r19	; 0x0e
   122fa:	2d 87       	std	Y+13, r18	; 0x0d
   122fc:	2f 85       	ldd	r18, Y+15	; 0x0f
   122fe:	20 78       	andi	r18, 0x80	; 128
   12300:	20 62       	ori	r18, 0x20	; 32
   12302:	20 68       	ori	r18, 0x80	; 128
   12304:	2f 87       	std	Y+15, r18	; 0x0f
   12306:	9e 01       	movw	r18, r28
   12308:	23 5f       	subi	r18, 0xF3	; 243
   1230a:	3f 4f       	sbci	r19, 0xFF	; 255
   1230c:	3f 83       	std	Y+7, r19	; 0x07
   1230e:	2e 83       	std	Y+6, r18	; 0x06
   12310:	1d 82       	std	Y+5, r1	; 0x05
   12312:	18 86       	std	Y+8, r1	; 0x08
   12314:	28 50       	subi	r18, 0x08	; 8
   12316:	31 09       	sbc	r19, r1
   12318:	3a 83       	std	Y+2, r19	; 0x02
   1231a:	29 83       	std	Y+1, r18	; 0x01
   1231c:	1c 82       	std	Y+4, r1	; 0x04
   1231e:	1b 82       	std	Y+3, r1	; 0x03
   12320:	be 01       	movw	r22, r28
   12322:	6f 5f       	subi	r22, 0xFF	; 255
   12324:	7f 4f       	sbci	r23, 0xFF	; 255
   12326:	a5 df       	rcall	.-182    	; 0x12272 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12328:	8b 81       	ldd	r24, Y+3	; 0x03
   1232a:	9c 81       	ldd	r25, Y+4	; 0x04
   1232c:	2f 96       	adiw	r28, 0x0f	; 15
   1232e:	0f b6       	in	r0, 0x3f	; 63
   12330:	f8 94       	cli
   12332:	de bf       	out	0x3e, r29	; 62
   12334:	0f be       	out	0x3f, r0	; 63
   12336:	cd bf       	out	0x3d, r28	; 61
   12338:	df 91       	pop	r29
   1233a:	cf 91       	pop	r28
   1233c:	08 95       	ret

0001233e <_Z12Pub_Sub_DataPcPhjh>:
   1233e:	2f 92       	push	r2
   12340:	3f 92       	push	r3
   12342:	4f 92       	push	r4
   12344:	5f 92       	push	r5
   12346:	6f 92       	push	r6
   12348:	7f 92       	push	r7
   1234a:	8f 92       	push	r8
   1234c:	9f 92       	push	r9
   1234e:	af 92       	push	r10
   12350:	bf 92       	push	r11
   12352:	cf 92       	push	r12
   12354:	df 92       	push	r13
   12356:	ef 92       	push	r14
   12358:	ff 92       	push	r15
   1235a:	0f 93       	push	r16
   1235c:	1f 93       	push	r17
   1235e:	cf 93       	push	r28
   12360:	df 93       	push	r29
   12362:	cd b7       	in	r28, 0x3d	; 61
   12364:	de b7       	in	r29, 0x3e	; 62
   12366:	cb 5b       	subi	r28, 0xBB	; 187
   12368:	d6 40       	sbci	r29, 0x06	; 6
   1236a:	0f b6       	in	r0, 0x3f	; 63
   1236c:	f8 94       	cli
   1236e:	de bf       	out	0x3e, r29	; 62
   12370:	0f be       	out	0x3f, r0	; 63
   12372:	cd bf       	out	0x3d, r28	; 61
   12374:	ae 01       	movw	r20, r28
   12376:	47 5f       	subi	r20, 0xF7	; 247
   12378:	5f 4f       	sbci	r21, 0xFF	; 255
   1237a:	5c 83       	std	Y+4, r21	; 0x04
   1237c:	4b 83       	std	Y+3, r20	; 0x03
   1237e:	4c e2       	ldi	r20, 0x2C	; 44
   12380:	56 e0       	ldi	r21, 0x06	; 6
   12382:	5e 83       	std	Y+6, r21	; 0x06
   12384:	4d 83       	std	Y+5, r20	; 0x05
   12386:	18 86       	std	Y+8, r1	; 0x08
   12388:	1f 82       	std	Y+7, r1	; 0x07
   1238a:	43 ed       	ldi	r20, 0xD3	; 211
   1238c:	57 e0       	ldi	r21, 0x07	; 7
   1238e:	5a 83       	std	Y+2, r21	; 0x02
   12390:	49 83       	std	Y+1, r20	; 0x01
   12392:	21 30       	cpi	r18, 0x01	; 1
   12394:	11 f0       	breq	.+4      	; 0x1239a <_Z12Pub_Sub_DataPcPhjh+0x5c>
   12396:	0c 94 c4 a2 	jmp	0x14588	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   1239a:	61 15       	cp	r22, r1
   1239c:	71 05       	cpc	r23, r1
   1239e:	19 f4       	brne	.+6      	; 0x123a6 <_Z12Pub_Sub_DataPcPhjh+0x68>
   123a0:	2b ee       	ldi	r18, 0xEB	; 235
   123a2:	36 e0       	ldi	r19, 0x06	; 6
   123a4:	01 c0       	rjmp	.+2      	; 0x123a8 <_Z12Pub_Sub_DataPcPhjh+0x6a>
   123a6:	9b 01       	movw	r18, r22
   123a8:	cd 54       	subi	r28, 0x4D	; 77
   123aa:	d9 4f       	sbci	r29, 0xF9	; 249
   123ac:	99 83       	std	Y+1, r25	; 0x01
   123ae:	88 83       	st	Y, r24
   123b0:	c3 5b       	subi	r28, 0xB3	; 179
   123b2:	d6 40       	sbci	r29, 0x06	; 6
   123b4:	ae 01       	movw	r20, r28
   123b6:	4b 5c       	subi	r20, 0xCB	; 203
   123b8:	59 4f       	sbci	r21, 0xF9	; 249
   123ba:	c2 55       	subi	r28, 0x52	; 82
   123bc:	d9 4f       	sbci	r29, 0xF9	; 249
   123be:	59 83       	std	Y+1, r21	; 0x01
   123c0:	48 83       	st	Y, r20
   123c2:	ce 5a       	subi	r28, 0xAE	; 174
   123c4:	d6 40       	sbci	r29, 0x06	; 6
   123c6:	ce 01       	movw	r24, r28
   123c8:	01 96       	adiw	r24, 0x01	; 1
   123ca:	cb 5c       	subi	r28, 0xCB	; 203
   123cc:	d9 4f       	sbci	r29, 0xF9	; 249
   123ce:	99 83       	std	Y+1, r25	; 0x01
   123d0:	88 83       	st	Y, r24
   123d2:	c5 53       	subi	r28, 0x35	; 53
   123d4:	d6 40       	sbci	r29, 0x06	; 6
   123d6:	c9 5c       	subi	r28, 0xC9	; 201
   123d8:	d9 4f       	sbci	r29, 0xF9	; 249
   123da:	39 83       	std	Y+1, r19	; 0x01
   123dc:	28 83       	st	Y, r18
   123de:	c7 53       	subi	r28, 0x37	; 55
   123e0:	d6 40       	sbci	r29, 0x06	; 6
   123e2:	c7 5c       	subi	r28, 0xC7	; 199
   123e4:	d9 4f       	sbci	r29, 0xF9	; 249
   123e6:	79 83       	std	Y+1, r23	; 0x01
   123e8:	68 83       	st	Y, r22
   123ea:	c9 53       	subi	r28, 0x39	; 57
   123ec:	d6 40       	sbci	r29, 0x06	; 6
   123ee:	8a e0       	ldi	r24, 0x0A	; 10
   123f0:	c5 5c       	subi	r28, 0xC5	; 197
   123f2:	d9 4f       	sbci	r29, 0xF9	; 249
   123f4:	88 83       	st	Y, r24
   123f6:	cb 53       	subi	r28, 0x3B	; 59
   123f8:	d6 40       	sbci	r29, 0x06	; 6
   123fa:	ca 01       	movw	r24, r20
   123fc:	28 d9       	rcall	.-3504   	; 0x1164e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   123fe:	1c 01       	movw	r2, r24
   12400:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12404:	81 30       	cpi	r24, 0x01	; 1
   12406:	31 f4       	brne	.+12     	; 0x12414 <_Z12Pub_Sub_DataPcPhjh+0xd6>
   12408:	66 ef       	ldi	r22, 0xF6	; 246
   1240a:	7a e3       	ldi	r23, 0x3A	; 58
   1240c:	85 e5       	ldi	r24, 0x55	; 85
   1240e:	94 e1       	ldi	r25, 0x14	; 20
   12410:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12414:	d1 01       	movw	r26, r2
   12416:	8d 91       	ld	r24, X+
   12418:	9c 91       	ld	r25, X
   1241a:	89 2b       	or	r24, r25
   1241c:	11 f4       	brne	.+4      	; 0x12422 <_Z12Pub_Sub_DataPcPhjh+0xe4>
   1241e:	0c 94 c4 a2 	jmp	0x14588	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   12422:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12426:	81 30       	cpi	r24, 0x01	; 1
   12428:	31 f4       	brne	.+12     	; 0x12436 <_Z12Pub_Sub_DataPcPhjh+0xf8>
   1242a:	6d ed       	ldi	r22, 0xDD	; 221
   1242c:	7a e3       	ldi	r23, 0x3A	; 58
   1242e:	85 e5       	ldi	r24, 0x55	; 85
   12430:	94 e1       	ldi	r25, 0x14	; 20
   12432:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12436:	8e 01       	movw	r16, r28
   12438:	0b 57       	subi	r16, 0x7B	; 123
   1243a:	19 4f       	sbci	r17, 0xF9	; 249
   1243c:	88 e2       	ldi	r24, 0x28	; 40
   1243e:	f8 01       	movw	r30, r16
   12440:	11 92       	st	Z+, r1
   12442:	8a 95       	dec	r24
   12444:	e9 f7       	brne	.-6      	; 0x12440 <_Z12Pub_Sub_DataPcPhjh+0x102>
   12446:	8a e6       	ldi	r24, 0x6A	; 106
   12448:	93 e1       	ldi	r25, 0x13	; 19
   1244a:	9f 93       	push	r25
   1244c:	8f 93       	push	r24
   1244e:	8e ec       	ldi	r24, 0xCE	; 206
   12450:	95 e0       	ldi	r25, 0x05	; 5
   12452:	9f 93       	push	r25
   12454:	8f 93       	push	r24
   12456:	1f 93       	push	r17
   12458:	0f 93       	push	r16
   1245a:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   1245e:	cd 54       	subi	r28, 0x4D	; 77
   12460:	d9 4f       	sbci	r29, 0xF9	; 249
   12462:	68 81       	ld	r22, Y
   12464:	79 81       	ldd	r23, Y+1	; 0x01
   12466:	c3 5b       	subi	r28, 0xB3	; 179
   12468:	d6 40       	sbci	r29, 0x06	; 6
   1246a:	c8 01       	movw	r24, r16
   1246c:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   12470:	0f 90       	pop	r0
   12472:	0f 90       	pop	r0
   12474:	0f 90       	pop	r0
   12476:	0f 90       	pop	r0
   12478:	0f 90       	pop	r0
   1247a:	0f 90       	pop	r0
   1247c:	89 2b       	or	r24, r25
   1247e:	39 f5       	brne	.+78     	; 0x124ce <_Z12Pub_Sub_DataPcPhjh+0x190>
   12480:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   12484:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12488:	81 30       	cpi	r24, 0x01	; 1
   1248a:	51 f4       	brne	.+20     	; 0x124a0 <_Z12Pub_Sub_DataPcPhjh+0x162>
   1248c:	61 eb       	ldi	r22, 0xB1	; 177
   1248e:	7a e3       	ldi	r23, 0x3A	; 58
   12490:	85 e5       	ldi	r24, 0x55	; 85
   12492:	94 e1       	ldi	r25, 0x14	; 20
   12494:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12498:	85 e5       	ldi	r24, 0x55	; 85
   1249a:	94 e1       	ldi	r25, 0x14	; 20
   1249c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   124a0:	81 e0       	ldi	r24, 0x01	; 1
   124a2:	80 93 a6 13 	sts	0x13A6, r24	; 0x8013a6 <_sRuble_Parameters+0x5c>
   124a6:	82 e0       	ldi	r24, 0x02	; 2
   124a8:	c3 55       	subi	r28, 0x53	; 83
   124aa:	d9 4f       	sbci	r29, 0xF9	; 249
   124ac:	88 83       	st	Y, r24
   124ae:	cd 5a       	subi	r28, 0xAD	; 173
   124b0:	d6 40       	sbci	r29, 0x06	; 6
   124b2:	be 01       	movw	r22, r28
   124b4:	63 55       	subi	r22, 0x53	; 83
   124b6:	79 4f       	sbci	r23, 0xF9	; 249
   124b8:	84 ef       	ldi	r24, 0xF4	; 244
   124ba:	94 e0       	ldi	r25, 0x04	; 4
   124bc:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   124c0:	f1 e0       	ldi	r31, 0x01	; 1
   124c2:	c0 55       	subi	r28, 0x50	; 80
   124c4:	d9 4f       	sbci	r29, 0xF9	; 249
   124c6:	f8 83       	st	Y, r31
   124c8:	c0 5b       	subi	r28, 0xB0	; 176
   124ca:	d6 40       	sbci	r29, 0x06	; 6
   124cc:	05 c0       	rjmp	.+10     	; 0x124d8 <_Z12Pub_Sub_DataPcPhjh+0x19a>
   124ce:	c0 55       	subi	r28, 0x50	; 80
   124d0:	d9 4f       	sbci	r29, 0xF9	; 249
   124d2:	18 82       	st	Y, r1
   124d4:	c0 5b       	subi	r28, 0xB0	; 176
   124d6:	d6 40       	sbci	r29, 0x06	; 6
   124d8:	88 e2       	ldi	r24, 0x28	; 40
   124da:	d8 01       	movw	r26, r16
   124dc:	1d 92       	st	X+, r1
   124de:	8a 95       	dec	r24
   124e0:	e9 f7       	brne	.-6      	; 0x124dc <_Z12Pub_Sub_DataPcPhjh+0x19e>
   124e2:	8a e6       	ldi	r24, 0x6A	; 106
   124e4:	93 e1       	ldi	r25, 0x13	; 19
   124e6:	9f 93       	push	r25
   124e8:	8f 93       	push	r24
   124ea:	86 ee       	ldi	r24, 0xE6	; 230
   124ec:	95 e0       	ldi	r25, 0x05	; 5
   124ee:	9f 93       	push	r25
   124f0:	8f 93       	push	r24
   124f2:	1f 93       	push	r17
   124f4:	0f 93       	push	r16
   124f6:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   124fa:	cd 54       	subi	r28, 0x4D	; 77
   124fc:	d9 4f       	sbci	r29, 0xF9	; 249
   124fe:	68 81       	ld	r22, Y
   12500:	79 81       	ldd	r23, Y+1	; 0x01
   12502:	c3 5b       	subi	r28, 0xB3	; 179
   12504:	d6 40       	sbci	r29, 0x06	; 6
   12506:	c8 01       	movw	r24, r16
   12508:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   1250c:	0f 90       	pop	r0
   1250e:	0f 90       	pop	r0
   12510:	0f 90       	pop	r0
   12512:	0f 90       	pop	r0
   12514:	0f 90       	pop	r0
   12516:	0f 90       	pop	r0
   12518:	89 2b       	or	r24, r25
   1251a:	09 f0       	breq	.+2      	; 0x1251e <_Z12Pub_Sub_DataPcPhjh+0x1e0>
   1251c:	bd c0       	rjmp	.+378    	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x35a>
   1251e:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
   12522:	86 34       	cpi	r24, 0x46	; 70
   12524:	10 f4       	brcc	.+4      	; 0x1252a <_Z12Pub_Sub_DataPcPhjh+0x1ec>
   12526:	0c 94 c4 a2 	jmp	0x14588	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   1252a:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   1252e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12532:	81 30       	cpi	r24, 0x01	; 1
   12534:	51 f4       	brne	.+20     	; 0x1254a <_Z12Pub_Sub_DataPcPhjh+0x20c>
   12536:	6b e9       	ldi	r22, 0x9B	; 155
   12538:	7a e3       	ldi	r23, 0x3A	; 58
   1253a:	85 e5       	ldi	r24, 0x55	; 85
   1253c:	94 e1       	ldi	r25, 0x14	; 20
   1253e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12542:	85 e5       	ldi	r24, 0x55	; 85
   12544:	94 e1       	ldi	r25, 0x14	; 20
   12546:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1254a:	80 91 ff 13 	lds	r24, 0x13FF	; 0x8013ff <_sRuble_Parameters+0xb5>
   1254e:	81 30       	cpi	r24, 0x01	; 1
   12550:	09 f4       	brne	.+2      	; 0x12554 <_Z12Pub_Sub_DataPcPhjh+0x216>
   12552:	8e c0       	rjmp	.+284    	; 0x12670 <_Z12Pub_Sub_DataPcPhjh+0x332>
   12554:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   12558:	82 30       	cpi	r24, 0x02	; 2
   1255a:	09 f4       	brne	.+2      	; 0x1255e <_Z12Pub_Sub_DataPcPhjh+0x220>
   1255c:	90 c0       	rjmp	.+288    	; 0x1267e <_Z12Pub_Sub_DataPcPhjh+0x340>
   1255e:	84 30       	cpi	r24, 0x04	; 4
   12560:	09 f4       	brne	.+2      	; 0x12564 <_Z12Pub_Sub_DataPcPhjh+0x226>
   12562:	94 c0       	rjmp	.+296    	; 0x1268c <_Z12Pub_Sub_DataPcPhjh+0x34e>
   12564:	67 e9       	ldi	r22, 0x97	; 151
   12566:	7a e3       	ldi	r23, 0x3A	; 58
   12568:	c1 01       	movw	r24, r2
   1256a:	c6 d9       	rcall	.-3188   	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1256c:	88 23       	and	r24, r24
   1256e:	09 f4       	brne	.+2      	; 0x12572 <_Z12Pub_Sub_DataPcPhjh+0x234>
   12570:	76 c0       	rjmp	.+236    	; 0x1265e <_Z12Pub_Sub_DataPcPhjh+0x320>
   12572:	8f 30       	cpi	r24, 0x0F	; 15
   12574:	98 f4       	brcc	.+38     	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   12576:	28 2f       	mov	r18, r24
   12578:	30 e0       	ldi	r19, 0x00	; 0
   1257a:	21 50       	subi	r18, 0x01	; 1
   1257c:	31 09       	sbc	r19, r1
   1257e:	96 e0       	ldi	r25, 0x06	; 6
   12580:	92 9f       	mul	r25, r18
   12582:	f0 01       	movw	r30, r0
   12584:	93 9f       	mul	r25, r19
   12586:	f0 0d       	add	r31, r0
   12588:	11 24       	eor	r1, r1
   1258a:	e0 50       	subi	r30, 0x00	; 0
   1258c:	f3 4f       	sbci	r31, 0xF3	; 243
   1258e:	90 81       	ld	r25, Z
   12590:	99 23       	and	r25, r25
   12592:	21 f0       	breq	.+8      	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   12594:	80 93 f3 13 	sts	0x13F3, r24	; 0x8013f3 <_sRuble_Parameters+0xa9>
   12598:	81 30       	cpi	r24, 0x01	; 1
   1259a:	61 f4       	brne	.+24     	; 0x125b4 <_Z12Pub_Sub_DataPcPhjh+0x276>
   1259c:	84 ed       	ldi	r24, 0xD4	; 212
   1259e:	93 e0       	ldi	r25, 0x03	; 3
   125a0:	ec e6       	ldi	r30, 0x6C	; 108
   125a2:	ff e0       	ldi	r31, 0x0F	; 15
   125a4:	df 01       	movw	r26, r30
   125a6:	9c 01       	movw	r18, r24
   125a8:	1d 92       	st	X+, r1
   125aa:	21 50       	subi	r18, 0x01	; 1
   125ac:	30 40       	sbci	r19, 0x00	; 0
   125ae:	e1 f7       	brne	.-8      	; 0x125a8 <_Z12Pub_Sub_DataPcPhjh+0x26a>
   125b0:	0c 94 c4 a2 	jmp	0x14588	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   125b4:	65 e9       	ldi	r22, 0x95	; 149
   125b6:	7a e3       	ldi	r23, 0x3A	; 58
   125b8:	c1 01       	movw	r24, r2
   125ba:	33 d9       	rcall	.-3482   	; 0x11822 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   125bc:	2c e3       	ldi	r18, 0x3C	; 60
   125be:	ac 01       	movw	r20, r24
   125c0:	24 9f       	mul	r18, r20
   125c2:	c0 01       	movw	r24, r0
   125c4:	25 9f       	mul	r18, r21
   125c6:	90 0d       	add	r25, r0
   125c8:	11 24       	eor	r1, r1
   125ca:	90 93 61 13 	sts	0x1361, r25	; 0x801361 <_sRuble_Parameters+0x17>
   125ce:	80 93 60 13 	sts	0x1360, r24	; 0x801360 <_sRuble_Parameters+0x16>
   125d2:	83 e0       	ldi	r24, 0x03	; 3
   125d4:	80 93 73 13 	sts	0x1373, r24	; 0x801373 <_sRuble_Parameters+0x29>
   125d8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   125dc:	81 30       	cpi	r24, 0x01	; 1
   125de:	31 f5       	brne	.+76     	; 0x1262c <_Z12Pub_Sub_DataPcPhjh+0x2ee>
   125e0:	66 e8       	ldi	r22, 0x86	; 134
   125e2:	7a e3       	ldi	r23, 0x3A	; 58
   125e4:	85 e5       	ldi	r24, 0x55	; 85
   125e6:	94 e1       	ldi	r25, 0x14	; 20
   125e8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   125ec:	85 e5       	ldi	r24, 0x55	; 85
   125ee:	94 e1       	ldi	r25, 0x14	; 20
   125f0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   125f4:	60 91 60 13 	lds	r22, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   125f8:	70 91 61 13 	lds	r23, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
   125fc:	4a e0       	ldi	r20, 0x0A	; 10
   125fe:	50 e0       	ldi	r21, 0x00	; 0
   12600:	85 e5       	ldi	r24, 0x55	; 85
   12602:	94 e1       	ldi	r25, 0x14	; 20
   12604:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   12608:	66 e7       	ldi	r22, 0x76	; 118
   1260a:	7a e3       	ldi	r23, 0x3A	; 58
   1260c:	85 e5       	ldi	r24, 0x55	; 85
   1260e:	94 e1       	ldi	r25, 0x14	; 20
   12610:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12614:	85 e5       	ldi	r24, 0x55	; 85
   12616:	94 e1       	ldi	r25, 0x14	; 20
   12618:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1261c:	4a e0       	ldi	r20, 0x0A	; 10
   1261e:	50 e0       	ldi	r21, 0x00	; 0
   12620:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0xa9>
   12624:	85 e5       	ldi	r24, 0x55	; 85
   12626:	94 e1       	ldi	r25, 0x14	; 20
   12628:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   1262c:	10 92 69 13 	sts	0x1369, r1	; 0x801369 <_sRuble_Parameters+0x1f>
   12630:	10 92 68 13 	sts	0x1368, r1	; 0x801368 <_sRuble_Parameters+0x1e>
   12634:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <_sRuble_Parameters+0xb6>
   12638:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xde>
   1263c:	88 e9       	ldi	r24, 0x98	; 152
   1263e:	9c e0       	ldi	r25, 0x0C	; 12
   12640:	0e 94 a8 84 	call	0x10950	; 0x10950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   12644:	66 e2       	ldi	r22, 0x26	; 38
   12646:	74 e1       	ldi	r23, 0x14	; 20
   12648:	8b ea       	ldi	r24, 0xAB	; 171
   1264a:	9e e0       	ldi	r25, 0x0E	; 14
   1264c:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12650:	51 e0       	ldi	r21, 0x01	; 1
   12652:	c0 55       	subi	r28, 0x50	; 80
   12654:	d9 4f       	sbci	r29, 0xF9	; 249
   12656:	58 83       	st	Y, r21
   12658:	c0 5b       	subi	r28, 0xB0	; 176
   1265a:	d6 40       	sbci	r29, 0x06	; 6
   1265c:	1d c0       	rjmp	.+58     	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x35a>
   1265e:	10 92 f3 13 	sts	0x13F3, r1	; 0x8013f3 <_sRuble_Parameters+0xa9>
   12662:	81 e0       	ldi	r24, 0x01	; 1
   12664:	c0 55       	subi	r28, 0x50	; 80
   12666:	d9 4f       	sbci	r29, 0xF9	; 249
   12668:	88 83       	st	Y, r24
   1266a:	c0 5b       	subi	r28, 0xB0	; 176
   1266c:	d6 40       	sbci	r29, 0x06	; 6
   1266e:	14 c0       	rjmp	.+40     	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x35a>
   12670:	91 e0       	ldi	r25, 0x01	; 1
   12672:	c0 55       	subi	r28, 0x50	; 80
   12674:	d9 4f       	sbci	r29, 0xF9	; 249
   12676:	98 83       	st	Y, r25
   12678:	c0 5b       	subi	r28, 0xB0	; 176
   1267a:	d6 40       	sbci	r29, 0x06	; 6
   1267c:	0d c0       	rjmp	.+26     	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x35a>
   1267e:	a1 e0       	ldi	r26, 0x01	; 1
   12680:	c0 55       	subi	r28, 0x50	; 80
   12682:	d9 4f       	sbci	r29, 0xF9	; 249
   12684:	a8 83       	st	Y, r26
   12686:	c0 5b       	subi	r28, 0xB0	; 176
   12688:	d6 40       	sbci	r29, 0x06	; 6
   1268a:	06 c0       	rjmp	.+12     	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x35a>
   1268c:	b1 e0       	ldi	r27, 0x01	; 1
   1268e:	c0 55       	subi	r28, 0x50	; 80
   12690:	d9 4f       	sbci	r29, 0xF9	; 249
   12692:	b8 83       	st	Y, r27
   12694:	c0 5b       	subi	r28, 0xB0	; 176
   12696:	d6 40       	sbci	r29, 0x06	; 6
   12698:	88 e2       	ldi	r24, 0x28	; 40
   1269a:	f8 01       	movw	r30, r16
   1269c:	11 92       	st	Z+, r1
   1269e:	8a 95       	dec	r24
   126a0:	e9 f7       	brne	.-6      	; 0x1269c <_Z12Pub_Sub_DataPcPhjh+0x35e>
   126a2:	8a e6       	ldi	r24, 0x6A	; 106
   126a4:	93 e1       	ldi	r25, 0x13	; 19
   126a6:	9f 93       	push	r25
   126a8:	8f 93       	push	r24
   126aa:	85 ef       	ldi	r24, 0xF5	; 245
   126ac:	95 e0       	ldi	r25, 0x05	; 5
   126ae:	9f 93       	push	r25
   126b0:	8f 93       	push	r24
   126b2:	1f 93       	push	r17
   126b4:	0f 93       	push	r16
   126b6:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   126ba:	cd 54       	subi	r28, 0x4D	; 77
   126bc:	d9 4f       	sbci	r29, 0xF9	; 249
   126be:	68 81       	ld	r22, Y
   126c0:	79 81       	ldd	r23, Y+1	; 0x01
   126c2:	c3 5b       	subi	r28, 0xB3	; 179
   126c4:	d6 40       	sbci	r29, 0x06	; 6
   126c6:	c8 01       	movw	r24, r16
   126c8:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   126cc:	0f 90       	pop	r0
   126ce:	0f 90       	pop	r0
   126d0:	0f 90       	pop	r0
   126d2:	0f 90       	pop	r0
   126d4:	0f 90       	pop	r0
   126d6:	0f 90       	pop	r0
   126d8:	89 2b       	or	r24, r25
   126da:	e9 f4       	brne	.+58     	; 0x12716 <_Z12Pub_Sub_DataPcPhjh+0x3d8>
   126dc:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   126e0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   126e4:	81 30       	cpi	r24, 0x01	; 1
   126e6:	89 f4       	brne	.+34     	; 0x1270a <_Z12Pub_Sub_DataPcPhjh+0x3cc>
   126e8:	64 e5       	ldi	r22, 0x54	; 84
   126ea:	7a e3       	ldi	r23, 0x3A	; 58
   126ec:	85 e5       	ldi	r24, 0x55	; 85
   126ee:	94 e1       	ldi	r25, 0x14	; 20
   126f0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   126f4:	85 e5       	ldi	r24, 0x55	; 85
   126f6:	94 e1       	ldi	r25, 0x14	; 20
   126f8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   126fc:	f1 e0       	ldi	r31, 0x01	; 1
   126fe:	c0 55       	subi	r28, 0x50	; 80
   12700:	d9 4f       	sbci	r29, 0xF9	; 249
   12702:	f8 83       	st	Y, r31
   12704:	c0 5b       	subi	r28, 0xB0	; 176
   12706:	d6 40       	sbci	r29, 0x06	; 6
   12708:	06 c0       	rjmp	.+12     	; 0x12716 <_Z12Pub_Sub_DataPcPhjh+0x3d8>
   1270a:	21 e0       	ldi	r18, 0x01	; 1
   1270c:	c0 55       	subi	r28, 0x50	; 80
   1270e:	d9 4f       	sbci	r29, 0xF9	; 249
   12710:	28 83       	st	Y, r18
   12712:	c0 5b       	subi	r28, 0xB0	; 176
   12714:	d6 40       	sbci	r29, 0x06	; 6
   12716:	88 e2       	ldi	r24, 0x28	; 40
   12718:	d8 01       	movw	r26, r16
   1271a:	1d 92       	st	X+, r1
   1271c:	8a 95       	dec	r24
   1271e:	e9 f7       	brne	.-6      	; 0x1271a <_Z12Pub_Sub_DataPcPhjh+0x3dc>
   12720:	8a e6       	ldi	r24, 0x6A	; 106
   12722:	93 e1       	ldi	r25, 0x13	; 19
   12724:	9f 93       	push	r25
   12726:	8f 93       	push	r24
   12728:	83 eb       	ldi	r24, 0xB3	; 179
   1272a:	95 e0       	ldi	r25, 0x05	; 5
   1272c:	9f 93       	push	r25
   1272e:	8f 93       	push	r24
   12730:	1f 93       	push	r17
   12732:	0f 93       	push	r16
   12734:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   12738:	cd 54       	subi	r28, 0x4D	; 77
   1273a:	d9 4f       	sbci	r29, 0xF9	; 249
   1273c:	68 81       	ld	r22, Y
   1273e:	79 81       	ldd	r23, Y+1	; 0x01
   12740:	c3 5b       	subi	r28, 0xB3	; 179
   12742:	d6 40       	sbci	r29, 0x06	; 6
   12744:	c8 01       	movw	r24, r16
   12746:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   1274a:	0f 90       	pop	r0
   1274c:	0f 90       	pop	r0
   1274e:	0f 90       	pop	r0
   12750:	0f 90       	pop	r0
   12752:	0f 90       	pop	r0
   12754:	0f 90       	pop	r0
   12756:	89 2b       	or	r24, r25
   12758:	09 f0       	breq	.+2      	; 0x1275c <_Z12Pub_Sub_DataPcPhjh+0x41e>
   1275a:	94 c6       	rjmp	.+3368   	; 0x13484 <_Z12Pub_Sub_DataPcPhjh+0x1146>
   1275c:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   12760:	60 e5       	ldi	r22, 0x50	; 80
   12762:	7a e3       	ldi	r23, 0x3A	; 58
   12764:	c1 01       	movw	r24, r2
   12766:	c8 d8       	rcall	.-3696   	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12768:	98 2e       	mov	r9, r24
   1276a:	b8 e6       	ldi	r27, 0x68	; 104
   1276c:	8b 17       	cp	r24, r27
   1276e:	11 f4       	brne	.+4      	; 0x12774 <_Z12Pub_Sub_DataPcPhjh+0x436>
   12770:	0c 94 c4 a2 	jmp	0x14588	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   12774:	ef ef       	ldi	r30, 0xFF	; 255
   12776:	e8 0f       	add	r30, r24
   12778:	cb 54       	subi	r28, 0x4B	; 75
   1277a:	d9 4f       	sbci	r29, 0xF9	; 249
   1277c:	e8 83       	st	Y, r30
   1277e:	c5 5b       	subi	r28, 0xB5	; 181
   12780:	d6 40       	sbci	r29, 0x06	; 6
   12782:	e2 37       	cpi	r30, 0x72	; 114
   12784:	08 f0       	brcs	.+2      	; 0x12788 <_Z12Pub_Sub_DataPcPhjh+0x44a>
   12786:	7e c6       	rjmp	.+3324   	; 0x13484 <_Z12Pub_Sub_DataPcPhjh+0x1146>
   12788:	fe e0       	ldi	r31, 0x0E	; 14
   1278a:	f8 17       	cp	r31, r24
   1278c:	60 f0       	brcs	.+24     	; 0x127a6 <_Z12Pub_Sub_DataPcPhjh+0x468>
   1278e:	90 e0       	ldi	r25, 0x00	; 0
   12790:	01 97       	sbiw	r24, 0x01	; 1
   12792:	26 e0       	ldi	r18, 0x06	; 6
   12794:	28 9f       	mul	r18, r24
   12796:	f0 01       	movw	r30, r0
   12798:	29 9f       	mul	r18, r25
   1279a:	f0 0d       	add	r31, r0
   1279c:	11 24       	eor	r1, r1
   1279e:	e0 50       	subi	r30, 0x00	; 0
   127a0:	f3 4f       	sbci	r31, 0xF3	; 243
   127a2:	90 82       	st	Z, r9
   127a4:	0f c0       	rjmp	.+30     	; 0x127c4 <_Z12Pub_Sub_DataPcPhjh+0x486>
   127a6:	24 e6       	ldi	r18, 0x64	; 100
   127a8:	28 17       	cp	r18, r24
   127aa:	60 f4       	brcc	.+24     	; 0x127c4 <_Z12Pub_Sub_DataPcPhjh+0x486>
   127ac:	90 e0       	ldi	r25, 0x00	; 0
   127ae:	85 56       	subi	r24, 0x65	; 101
   127b0:	91 09       	sbc	r25, r1
   127b2:	2b e1       	ldi	r18, 0x1B	; 27
   127b4:	28 9f       	mul	r18, r24
   127b6:	f0 01       	movw	r30, r0
   127b8:	29 9f       	mul	r18, r25
   127ba:	f0 0d       	add	r31, r0
   127bc:	11 24       	eor	r1, r1
   127be:	ec 57       	subi	r30, 0x7C	; 124
   127c0:	f2 4f       	sbci	r31, 0xF2	; 242
   127c2:	91 82       	std	Z+1, r9	; 0x01
   127c4:	3e 01       	movw	r6, r28
   127c6:	33 ea       	ldi	r19, 0xA3	; 163
   127c8:	63 1a       	sub	r6, r19
   127ca:	39 ef       	ldi	r19, 0xF9	; 249
   127cc:	73 0a       	sbc	r7, r19
   127ce:	88 e0       	ldi	r24, 0x08	; 8
   127d0:	d3 01       	movw	r26, r6
   127d2:	e8 2f       	mov	r30, r24
   127d4:	1d 92       	st	X+, r1
   127d6:	ea 95       	dec	r30
   127d8:	e9 f7       	brne	.-6      	; 0x127d4 <_Z12Pub_Sub_DataPcPhjh+0x496>
   127da:	53 01       	movw	r10, r6
   127dc:	f8 e0       	ldi	r31, 0x08	; 8
   127de:	af 0e       	add	r10, r31
   127e0:	b1 1c       	adc	r11, r1
   127e2:	d5 01       	movw	r26, r10
   127e4:	e8 2f       	mov	r30, r24
   127e6:	1d 92       	st	X+, r1
   127e8:	ea 95       	dec	r30
   127ea:	e9 f7       	brne	.-6      	; 0x127e6 <_Z12Pub_Sub_DataPcPhjh+0x4a8>
   127ec:	63 01       	movw	r12, r6
   127ee:	f0 e1       	ldi	r31, 0x10	; 16
   127f0:	cf 0e       	add	r12, r31
   127f2:	d1 1c       	adc	r13, r1
   127f4:	d6 01       	movw	r26, r12
   127f6:	e8 2f       	mov	r30, r24
   127f8:	1d 92       	st	X+, r1
   127fa:	ea 95       	dec	r30
   127fc:	e9 f7       	brne	.-6      	; 0x127f8 <_Z12Pub_Sub_DataPcPhjh+0x4ba>
   127fe:	73 01       	movw	r14, r6
   12800:	f8 e1       	ldi	r31, 0x18	; 24
   12802:	ef 0e       	add	r14, r31
   12804:	f1 1c       	adc	r15, r1
   12806:	d7 01       	movw	r26, r14
   12808:	e8 2f       	mov	r30, r24
   1280a:	1d 92       	st	X+, r1
   1280c:	ea 95       	dec	r30
   1280e:	e9 f7       	brne	.-6      	; 0x1280a <_Z12Pub_Sub_DataPcPhjh+0x4cc>
   12810:	83 01       	movw	r16, r6
   12812:	00 5e       	subi	r16, 0xE0	; 224
   12814:	1f 4f       	sbci	r17, 0xFF	; 255
   12816:	d8 01       	movw	r26, r16
   12818:	1d 92       	st	X+, r1
   1281a:	8a 95       	dec	r24
   1281c:	e9 f7       	brne	.-6      	; 0x12818 <_Z12Pub_Sub_DataPcPhjh+0x4da>
   1281e:	69 e4       	ldi	r22, 0x49	; 73
   12820:	7a e3       	ldi	r23, 0x3A	; 58
   12822:	c1 01       	movw	r24, r2
   12824:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12828:	bc 01       	movw	r22, r24
   1282a:	c3 01       	movw	r24, r6
   1282c:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12830:	62 e4       	ldi	r22, 0x42	; 66
   12832:	7a e3       	ldi	r23, 0x3A	; 58
   12834:	c1 01       	movw	r24, r2
   12836:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1283a:	bc 01       	movw	r22, r24
   1283c:	c5 01       	movw	r24, r10
   1283e:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12842:	6b e3       	ldi	r22, 0x3B	; 59
   12844:	7a e3       	ldi	r23, 0x3A	; 58
   12846:	c1 01       	movw	r24, r2
   12848:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1284c:	bc 01       	movw	r22, r24
   1284e:	c6 01       	movw	r24, r12
   12850:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12854:	64 e3       	ldi	r22, 0x34	; 52
   12856:	7a e3       	ldi	r23, 0x3A	; 58
   12858:	c1 01       	movw	r24, r2
   1285a:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1285e:	bc 01       	movw	r22, r24
   12860:	c7 01       	movw	r24, r14
   12862:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12866:	6d e2       	ldi	r22, 0x2D	; 45
   12868:	7a e3       	ldi	r23, 0x3A	; 58
   1286a:	c1 01       	movw	r24, r2
   1286c:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12870:	bc 01       	movw	r22, r24
   12872:	c8 01       	movw	r24, r16
   12874:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12878:	be e0       	ldi	r27, 0x0E	; 14
   1287a:	b9 15       	cp	r27, r9
   1287c:	98 f1       	brcs	.+102    	; 0x128e4 <_Z12Pub_Sub_DataPcPhjh+0x5a6>
   1287e:	89 2d       	mov	r24, r9
   12880:	90 e0       	ldi	r25, 0x00	; 0
   12882:	01 97       	sbiw	r24, 0x01	; 1
   12884:	26 e0       	ldi	r18, 0x06	; 6
   12886:	28 9f       	mul	r18, r24
   12888:	f0 01       	movw	r30, r0
   1288a:	29 9f       	mul	r18, r25
   1288c:	f0 0d       	add	r31, r0
   1288e:	11 24       	eor	r1, r1
   12890:	ef 5f       	subi	r30, 0xFF	; 255
   12892:	f2 4f       	sbci	r31, 0xF2	; 242
   12894:	85 e0       	ldi	r24, 0x05	; 5
   12896:	df 01       	movw	r26, r30
   12898:	1d 92       	st	X+, r1
   1289a:	8a 95       	dec	r24
   1289c:	e9 f7       	brne	.-6      	; 0x12898 <_Z12Pub_Sub_DataPcPhjh+0x55a>
   1289e:	23 01       	movw	r4, r6
   128a0:	26 e0       	ldi	r18, 0x06	; 6
   128a2:	92 9e       	mul	r9, r18
   128a4:	f0 01       	movw	r30, r0
   128a6:	11 24       	eor	r1, r1
   128a8:	c8 54       	subi	r28, 0x48	; 72
   128aa:	d9 4f       	sbci	r29, 0xF9	; 249
   128ac:	f9 83       	std	Y+1, r31	; 0x01
   128ae:	e8 83       	st	Y, r30
   128b0:	c8 5b       	subi	r28, 0xB8	; 184
   128b2:	d6 40       	sbci	r29, 0x06	; 6
   128b4:	e5 50       	subi	r30, 0x05	; 5
   128b6:	f3 4f       	sbci	r31, 0xF3	; 243
   128b8:	7f 01       	movw	r14, r30
   128ba:	3b e1       	ldi	r19, 0x1B	; 27
   128bc:	93 9e       	mul	r9, r19
   128be:	c0 01       	movw	r24, r0
   128c0:	11 24       	eor	r1, r1
   128c2:	ac 01       	movw	r20, r24
   128c4:	4e 51       	subi	r20, 0x1E	; 30
   128c6:	5d 4f       	sbci	r21, 0xFD	; 253
   128c8:	6a 01       	movw	r12, r20
   128ca:	c3 01       	movw	r24, r6
   128cc:	88 96       	adiw	r24, 0x28	; 40
   128ce:	c6 54       	subi	r28, 0x46	; 70
   128d0:	d9 4f       	sbci	r29, 0xF9	; 249
   128d2:	99 83       	std	Y+1, r25	; 0x01
   128d4:	88 83       	st	Y, r24
   128d6:	ca 5b       	subi	r28, 0xBA	; 186
   128d8:	d6 40       	sbci	r29, 0x06	; 6
   128da:	36 e6       	ldi	r19, 0x66	; 102
   128dc:	83 2e       	mov	r8, r19
   128de:	45 e6       	ldi	r20, 0x65	; 101
   128e0:	a4 2e       	mov	r10, r20
   128e2:	3a c0       	rjmp	.+116    	; 0x12958 <_Z12Pub_Sub_DataPcPhjh+0x61a>
   128e4:	94 e6       	ldi	r25, 0x64	; 100
   128e6:	99 15       	cp	r25, r9
   128e8:	d0 f6       	brcc	.-76     	; 0x1289e <_Z12Pub_Sub_DataPcPhjh+0x560>
   128ea:	89 2d       	mov	r24, r9
   128ec:	90 e0       	ldi	r25, 0x00	; 0
   128ee:	85 56       	subi	r24, 0x65	; 101
   128f0:	91 09       	sbc	r25, r1
   128f2:	2b e1       	ldi	r18, 0x1B	; 27
   128f4:	28 9f       	mul	r18, r24
   128f6:	f0 01       	movw	r30, r0
   128f8:	29 9f       	mul	r18, r25
   128fa:	f0 0d       	add	r31, r0
   128fc:	11 24       	eor	r1, r1
   128fe:	e7 57       	subi	r30, 0x77	; 119
   12900:	f2 4f       	sbci	r31, 0xF2	; 242
   12902:	c8 cf       	rjmp	.-112    	; 0x12894 <_Z12Pub_Sub_DataPcPhjh+0x556>
   12904:	90 35       	cpi	r25, 0x50	; 80
   12906:	09 f4       	brne	.+2      	; 0x1290a <_Z12Pub_Sub_DataPcPhjh+0x5cc>
   12908:	44 c2       	rjmp	.+1160   	; 0x12d92 <_Z12Pub_Sub_DataPcPhjh+0xa54>
   1290a:	80 33       	cpi	r24, 0x30	; 48
   1290c:	c9 f1       	breq	.+114    	; 0x12980 <_Z12Pub_Sub_DataPcPhjh+0x642>
   1290e:	88 23       	and	r24, r24
   12910:	b9 f1       	breq	.+110    	; 0x12980 <_Z12Pub_Sub_DataPcPhjh+0x642>
   12912:	80 53       	subi	r24, 0x30	; 48
   12914:	91 81       	ldd	r25, Z+1	; 0x01
   12916:	99 23       	and	r25, r25
   12918:	31 f0       	breq	.+12     	; 0x12926 <_Z12Pub_Sub_DataPcPhjh+0x5e8>
   1291a:	90 53       	subi	r25, 0x30	; 48
   1291c:	fa e0       	ldi	r31, 0x0A	; 10
   1291e:	8f 9f       	mul	r24, r31
   12920:	90 0d       	add	r25, r0
   12922:	11 24       	eor	r1, r1
   12924:	89 2f       	mov	r24, r25
   12926:	2e e0       	ldi	r18, 0x0E	; 14
   12928:	29 15       	cp	r18, r9
   1292a:	e8 f4       	brcc	.+58     	; 0x12966 <_Z12Pub_Sub_DataPcPhjh+0x628>
   1292c:	f4 e6       	ldi	r31, 0x64	; 100
   1292e:	f9 15       	cp	r31, r9
   12930:	08 f1       	brcs	.+66     	; 0x12974 <_Z12Pub_Sub_DataPcPhjh+0x636>
   12932:	38 e0       	ldi	r19, 0x08	; 8
   12934:	43 0e       	add	r4, r19
   12936:	51 1c       	adc	r5, r1
   12938:	4f ef       	ldi	r20, 0xFF	; 255
   1293a:	e4 1a       	sub	r14, r20
   1293c:	f4 0a       	sbc	r15, r20
   1293e:	5f ef       	ldi	r21, 0xFF	; 255
   12940:	c5 1a       	sub	r12, r21
   12942:	d5 0a       	sbc	r13, r21
   12944:	c6 54       	subi	r28, 0x46	; 70
   12946:	d9 4f       	sbci	r29, 0xF9	; 249
   12948:	88 81       	ld	r24, Y
   1294a:	99 81       	ldd	r25, Y+1	; 0x01
   1294c:	ca 5b       	subi	r28, 0xBA	; 186
   1294e:	d6 40       	sbci	r29, 0x06	; 6
   12950:	84 15       	cp	r24, r4
   12952:	95 05       	cpc	r25, r5
   12954:	09 f4       	brne	.+2      	; 0x12958 <_Z12Pub_Sub_DataPcPhjh+0x61a>
   12956:	5b c3       	rjmp	.+1718   	; 0x1300e <_Z12Pub_Sub_DataPcPhjh+0xcd0>
   12958:	f2 01       	movw	r30, r4
   1295a:	80 81       	ld	r24, Z
   1295c:	98 2f       	mov	r25, r24
   1295e:	9f 7d       	andi	r25, 0xDF	; 223
   12960:	96 35       	cpi	r25, 0x56	; 86
   12962:	81 f6       	brne	.-96     	; 0x12904 <_Z12Pub_Sub_DataPcPhjh+0x5c6>
   12964:	19 c0       	rjmp	.+50     	; 0x12998 <_Z12Pub_Sub_DataPcPhjh+0x65a>
   12966:	8b 5e       	subi	r24, 0xEB	; 235
   12968:	8e 32       	cpi	r24, 0x2E	; 46
   1296a:	10 f4       	brcc	.+4      	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x632>
   1296c:	d7 01       	movw	r26, r14
   1296e:	06 c0       	rjmp	.+12     	; 0x1297c <_Z12Pub_Sub_DataPcPhjh+0x63e>
   12970:	f7 01       	movw	r30, r14
   12972:	10 c0       	rjmp	.+32     	; 0x12994 <_Z12Pub_Sub_DataPcPhjh+0x656>
   12974:	8b 5e       	subi	r24, 0xEB	; 235
   12976:	8e 32       	cpi	r24, 0x2E	; 46
   12978:	60 f4       	brcc	.+24     	; 0x12992 <_Z12Pub_Sub_DataPcPhjh+0x654>
   1297a:	d6 01       	movw	r26, r12
   1297c:	8c 93       	st	X, r24
   1297e:	d9 cf       	rjmp	.-78     	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12980:	fe e0       	ldi	r31, 0x0E	; 14
   12982:	f9 15       	cp	r31, r9
   12984:	18 f0       	brcs	.+6      	; 0x1298c <_Z12Pub_Sub_DataPcPhjh+0x64e>
   12986:	d7 01       	movw	r26, r14
   12988:	1c 92       	st	X, r1
   1298a:	d3 cf       	rjmp	.-90     	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   1298c:	b4 e6       	ldi	r27, 0x64	; 100
   1298e:	b9 15       	cp	r27, r9
   12990:	80 f6       	brcc	.-96     	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12992:	f6 01       	movw	r30, r12
   12994:	10 82       	st	Z, r1
   12996:	cd cf       	rjmp	.-102    	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12998:	4a e4       	ldi	r20, 0x4A	; 74
   1299a:	53 e1       	ldi	r21, 0x13	; 19
   1299c:	80 e0       	ldi	r24, 0x00	; 0
   1299e:	90 e0       	ldi	r25, 0x00	; 0
   129a0:	68 2f       	mov	r22, r24
   129a2:	20 e0       	ldi	r18, 0x00	; 0
   129a4:	30 e0       	ldi	r19, 0x00	; 0
   129a6:	70 e0       	ldi	r23, 0x00	; 0
   129a8:	f9 01       	movw	r30, r18
   129aa:	e1 5a       	subi	r30, 0xA1	; 161
   129ac:	ff 4f       	sbci	r31, 0xFF	; 255
   129ae:	e4 0f       	add	r30, r20
   129b0:	f5 1f       	adc	r31, r21
   129b2:	a0 81       	ld	r26, Z
   129b4:	f2 01       	movw	r30, r4
   129b6:	e2 0f       	add	r30, r18
   129b8:	f3 1f       	adc	r31, r19
   129ba:	e0 81       	ld	r30, Z
   129bc:	ae 13       	cpse	r26, r30
   129be:	01 c0       	rjmp	.+2      	; 0x129c2 <_Z12Pub_Sub_DataPcPhjh+0x684>
   129c0:	7f 5f       	subi	r23, 0xFF	; 255
   129c2:	2f 5f       	subi	r18, 0xFF	; 255
   129c4:	3f 4f       	sbci	r19, 0xFF	; 255
   129c6:	26 30       	cpi	r18, 0x06	; 6
   129c8:	31 05       	cpc	r19, r1
   129ca:	71 f7       	brne	.-36     	; 0x129a8 <_Z12Pub_Sub_DataPcPhjh+0x66a>
   129cc:	76 30       	cpi	r23, 0x06	; 6
   129ce:	09 f0       	breq	.+2      	; 0x129d2 <_Z12Pub_Sub_DataPcPhjh+0x694>
   129d0:	7a c0       	rjmp	.+244    	; 0x12ac6 <_Z12Pub_Sub_DataPcPhjh+0x788>
   129d2:	20 91 3a 14 	lds	r18, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   129d6:	fe e0       	ldi	r31, 0x0E	; 14
   129d8:	f9 15       	cp	r31, r9
   129da:	70 f1       	brcs	.+92     	; 0x12a38 <_Z12Pub_Sub_DataPcPhjh+0x6fa>
   129dc:	d2 01       	movw	r26, r4
   129de:	17 96       	adiw	r26, 0x07	; 7
   129e0:	3c 91       	ld	r19, X
   129e2:	32 33       	cpi	r19, 0x32	; 50
   129e4:	89 f0       	breq	.+34     	; 0x12a08 <_Z12Pub_Sub_DataPcPhjh+0x6ca>
   129e6:	33 33       	cpi	r19, 0x33	; 51
   129e8:	d9 f0       	breq	.+54     	; 0x12a20 <_Z12Pub_Sub_DataPcPhjh+0x6e2>
   129ea:	31 33       	cpi	r19, 0x31	; 49
   129ec:	09 f0       	breq	.+2      	; 0x129f0 <_Z12Pub_Sub_DataPcPhjh+0x6b2>
   129ee:	5c c0       	rjmp	.+184    	; 0x12aa8 <_Z12Pub_Sub_DataPcPhjh+0x76a>
   129f0:	86 2f       	mov	r24, r22
   129f2:	88 0f       	add	r24, r24
   129f4:	68 0f       	add	r22, r24
   129f6:	6f 5f       	subi	r22, 0xFF	; 255
   129f8:	f7 01       	movw	r30, r14
   129fa:	60 83       	st	Z, r22
   129fc:	21 30       	cpi	r18, 0x01	; 1
   129fe:	09 f0       	breq	.+2      	; 0x12a02 <_Z12Pub_Sub_DataPcPhjh+0x6c4>
   12a00:	69 c0       	rjmp	.+210    	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a02:	62 e1       	ldi	r22, 0x12	; 18
   12a04:	7a e3       	ldi	r23, 0x3A	; 58
   12a06:	44 c0       	rjmp	.+136    	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a08:	86 2f       	mov	r24, r22
   12a0a:	88 0f       	add	r24, r24
   12a0c:	68 0f       	add	r22, r24
   12a0e:	6e 5f       	subi	r22, 0xFE	; 254
   12a10:	d7 01       	movw	r26, r14
   12a12:	6c 93       	st	X, r22
   12a14:	21 30       	cpi	r18, 0x01	; 1
   12a16:	09 f0       	breq	.+2      	; 0x12a1a <_Z12Pub_Sub_DataPcPhjh+0x6dc>
   12a18:	5d c0       	rjmp	.+186    	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a1a:	67 ef       	ldi	r22, 0xF7	; 247
   12a1c:	79 e3       	ldi	r23, 0x39	; 57
   12a1e:	38 c0       	rjmp	.+112    	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a20:	01 96       	adiw	r24, 0x01	; 1
   12a22:	98 2f       	mov	r25, r24
   12a24:	99 0f       	add	r25, r25
   12a26:	89 0f       	add	r24, r25
   12a28:	f7 01       	movw	r30, r14
   12a2a:	80 83       	st	Z, r24
   12a2c:	21 30       	cpi	r18, 0x01	; 1
   12a2e:	09 f0       	breq	.+2      	; 0x12a32 <_Z12Pub_Sub_DataPcPhjh+0x6f4>
   12a30:	51 c0       	rjmp	.+162    	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a32:	6c ed       	ldi	r22, 0xDC	; 220
   12a34:	79 e3       	ldi	r23, 0x39	; 57
   12a36:	2c c0       	rjmp	.+88     	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a38:	f4 e6       	ldi	r31, 0x64	; 100
   12a3a:	f9 15       	cp	r31, r9
   12a3c:	a8 f5       	brcc	.+106    	; 0x12aa8 <_Z12Pub_Sub_DataPcPhjh+0x76a>
   12a3e:	d2 01       	movw	r26, r4
   12a40:	17 96       	adiw	r26, 0x07	; 7
   12a42:	3c 91       	ld	r19, X
   12a44:	32 33       	cpi	r19, 0x32	; 50
   12a46:	79 f0       	breq	.+30     	; 0x12a66 <_Z12Pub_Sub_DataPcPhjh+0x728>
   12a48:	33 33       	cpi	r19, 0x33	; 51
   12a4a:	c1 f0       	breq	.+48     	; 0x12a7c <_Z12Pub_Sub_DataPcPhjh+0x73e>
   12a4c:	31 33       	cpi	r19, 0x31	; 49
   12a4e:	61 f5       	brne	.+88     	; 0x12aa8 <_Z12Pub_Sub_DataPcPhjh+0x76a>
   12a50:	86 2f       	mov	r24, r22
   12a52:	88 0f       	add	r24, r24
   12a54:	68 0f       	add	r22, r24
   12a56:	6f 5f       	subi	r22, 0xFF	; 255
   12a58:	f6 01       	movw	r30, r12
   12a5a:	60 83       	st	Z, r22
   12a5c:	21 30       	cpi	r18, 0x01	; 1
   12a5e:	d1 f5       	brne	.+116    	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a60:	61 ec       	ldi	r22, 0xC1	; 193
   12a62:	79 e3       	ldi	r23, 0x39	; 57
   12a64:	15 c0       	rjmp	.+42     	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a66:	86 2f       	mov	r24, r22
   12a68:	88 0f       	add	r24, r24
   12a6a:	68 0f       	add	r22, r24
   12a6c:	6e 5f       	subi	r22, 0xFE	; 254
   12a6e:	d6 01       	movw	r26, r12
   12a70:	6c 93       	st	X, r22
   12a72:	21 30       	cpi	r18, 0x01	; 1
   12a74:	79 f5       	brne	.+94     	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a76:	66 ea       	ldi	r22, 0xA6	; 166
   12a78:	79 e3       	ldi	r23, 0x39	; 57
   12a7a:	0a c0       	rjmp	.+20     	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a7c:	01 96       	adiw	r24, 0x01	; 1
   12a7e:	98 2f       	mov	r25, r24
   12a80:	99 0f       	add	r25, r25
   12a82:	89 0f       	add	r24, r25
   12a84:	f6 01       	movw	r30, r12
   12a86:	80 83       	st	Z, r24
   12a88:	21 30       	cpi	r18, 0x01	; 1
   12a8a:	21 f5       	brne	.+72     	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a8c:	6b e8       	ldi	r22, 0x8B	; 139
   12a8e:	79 e3       	ldi	r23, 0x39	; 57
   12a90:	85 e5       	ldi	r24, 0x55	; 85
   12a92:	94 e1       	ldi	r25, 0x14	; 20
   12a94:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12a98:	85 e5       	ldi	r24, 0x55	; 85
   12a9a:	94 e1       	ldi	r25, 0x14	; 20
   12a9c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12aa0:	85 e5       	ldi	r24, 0x55	; 85
   12aa2:	94 e1       	ldi	r25, 0x14	; 20
   12aa4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12aa8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12aac:	81 30       	cpi	r24, 0x01	; 1
   12aae:	91 f4       	brne	.+36     	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12ab0:	6a e7       	ldi	r22, 0x7A	; 122
   12ab2:	79 e3       	ldi	r23, 0x39	; 57
   12ab4:	85 e5       	ldi	r24, 0x55	; 85
   12ab6:	94 e1       	ldi	r25, 0x14	; 20
   12ab8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12abc:	85 e5       	ldi	r24, 0x55	; 85
   12abe:	94 e1       	ldi	r25, 0x14	; 20
   12ac0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12ac4:	07 c0       	rjmp	.+14     	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12ac6:	01 96       	adiw	r24, 0x01	; 1
   12ac8:	49 5f       	subi	r20, 0xF9	; 249
   12aca:	5f 4f       	sbci	r21, 0xFF	; 255
   12acc:	86 30       	cpi	r24, 0x06	; 6
   12ace:	91 05       	cpc	r25, r1
   12ad0:	09 f0       	breq	.+2      	; 0x12ad4 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12ad2:	66 cf       	rjmp	.-308    	; 0x129a0 <_Z12Pub_Sub_DataPcPhjh+0x662>
   12ad4:	d7 01       	movw	r26, r14
   12ad6:	8c 91       	ld	r24, X
   12ad8:	81 11       	cpse	r24, r1
   12ada:	03 c0       	rjmp	.+6      	; 0x12ae2 <_Z12Pub_Sub_DataPcPhjh+0x7a4>
   12adc:	be e0       	ldi	r27, 0x0E	; 14
   12ade:	b9 15       	cp	r27, r9
   12ae0:	40 f4       	brcc	.+16     	; 0x12af2 <_Z12Pub_Sub_DataPcPhjh+0x7b4>
   12ae2:	f6 01       	movw	r30, r12
   12ae4:	80 81       	ld	r24, Z
   12ae6:	81 11       	cpse	r24, r1
   12ae8:	24 cf       	rjmp	.-440    	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12aea:	fe e0       	ldi	r31, 0x0E	; 14
   12aec:	f9 15       	cp	r31, r9
   12aee:	08 f0       	brcs	.+2      	; 0x12af2 <_Z12Pub_Sub_DataPcPhjh+0x7b4>
   12af0:	20 cf       	rjmp	.-448    	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12af2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12af6:	81 30       	cpi	r24, 0x01	; 1
   12af8:	51 f4       	brne	.+20     	; 0x12b0e <_Z12Pub_Sub_DataPcPhjh+0x7d0>
   12afa:	61 e6       	ldi	r22, 0x61	; 97
   12afc:	79 e3       	ldi	r23, 0x39	; 57
   12afe:	85 e5       	ldi	r24, 0x55	; 85
   12b00:	94 e1       	ldi	r25, 0x14	; 20
   12b02:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12b06:	85 e5       	ldi	r24, 0x55	; 85
   12b08:	94 e1       	ldi	r25, 0x14	; 20
   12b0a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12b0e:	e7 eb       	ldi	r30, 0xB7	; 183
   12b10:	fb e0       	ldi	r31, 0x0B	; 11
   12b12:	b1 2c       	mov	r11, r1
   12b14:	80 81       	ld	r24, Z
   12b16:	88 23       	and	r24, r24
   12b18:	29 f0       	breq	.+10     	; 0x12b24 <_Z12Pub_Sub_DataPcPhjh+0x7e6>
   12b1a:	b3 94       	inc	r11
   12b1c:	3d 96       	adiw	r30, 0x0d	; 13
   12b1e:	26 e0       	ldi	r18, 0x06	; 6
   12b20:	b2 12       	cpse	r11, r18
   12b22:	f8 cf       	rjmp	.-16     	; 0x12b14 <_Z12Pub_Sub_DataPcPhjh+0x7d6>
   12b24:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12b28:	81 30       	cpi	r24, 0x01	; 1
   12b2a:	c9 f4       	brne	.+50     	; 0x12b5e <_Z12Pub_Sub_DataPcPhjh+0x820>
   12b2c:	85 e5       	ldi	r24, 0x55	; 85
   12b2e:	94 e1       	ldi	r25, 0x14	; 20
   12b30:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12b34:	6d e4       	ldi	r22, 0x4D	; 77
   12b36:	79 e3       	ldi	r23, 0x39	; 57
   12b38:	85 e5       	ldi	r24, 0x55	; 85
   12b3a:	94 e1       	ldi	r25, 0x14	; 20
   12b3c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12b40:	85 e5       	ldi	r24, 0x55	; 85
   12b42:	94 e1       	ldi	r25, 0x14	; 20
   12b44:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12b48:	4a e0       	ldi	r20, 0x0A	; 10
   12b4a:	50 e0       	ldi	r21, 0x00	; 0
   12b4c:	6b 2d       	mov	r22, r11
   12b4e:	85 e5       	ldi	r24, 0x55	; 85
   12b50:	94 e1       	ldi	r25, 0x14	; 20
   12b52:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   12b56:	85 e5       	ldi	r24, 0x55	; 85
   12b58:	94 e1       	ldi	r25, 0x14	; 20
   12b5a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12b5e:	3d e0       	ldi	r19, 0x0D	; 13
   12b60:	b3 9e       	mul	r11, r19
   12b62:	a0 01       	movw	r20, r0
   12b64:	11 24       	eor	r1, r1
   12b66:	80 e0       	ldi	r24, 0x00	; 0
   12b68:	90 e0       	ldi	r25, 0x00	; 0
   12b6a:	0b 2d       	mov	r16, r11
   12b6c:	10 e0       	ldi	r17, 0x00	; 0
   12b6e:	fa 01       	movw	r30, r20
   12b70:	e8 0f       	add	r30, r24
   12b72:	f9 1f       	adc	r31, r25
   12b74:	e9 54       	subi	r30, 0x49	; 73
   12b76:	f4 4f       	sbci	r31, 0xF4	; 244
   12b78:	d2 01       	movw	r26, r4
   12b7a:	a8 0f       	add	r26, r24
   12b7c:	b9 1f       	adc	r27, r25
   12b7e:	2c 91       	ld	r18, X
   12b80:	21 83       	std	Z+1, r18	; 0x01
   12b82:	01 96       	adiw	r24, 0x01	; 1
   12b84:	86 30       	cpi	r24, 0x06	; 6
   12b86:	91 05       	cpc	r25, r1
   12b88:	91 f7       	brne	.-28     	; 0x12b6e <_Z12Pub_Sub_DataPcPhjh+0x830>
   12b8a:	8d e0       	ldi	r24, 0x0D	; 13
   12b8c:	80 9f       	mul	r24, r16
   12b8e:	a0 01       	movw	r20, r0
   12b90:	81 9f       	mul	r24, r17
   12b92:	50 0d       	add	r21, r0
   12b94:	11 24       	eor	r1, r1
   12b96:	cf 54       	subi	r28, 0x4F	; 79
   12b98:	d9 4f       	sbci	r29, 0xF9	; 249
   12b9a:	59 83       	std	Y+1, r21	; 0x01
   12b9c:	48 83       	st	Y, r20
   12b9e:	c1 5b       	subi	r28, 0xB1	; 177
   12ba0:	d6 40       	sbci	r29, 0x06	; 6
   12ba2:	48 54       	subi	r20, 0x48	; 72
   12ba4:	54 4f       	sbci	r21, 0xF4	; 244
   12ba6:	ca 54       	subi	r28, 0x4A	; 74
   12ba8:	d9 4f       	sbci	r29, 0xF9	; 249
   12baa:	59 83       	std	Y+1, r21	; 0x01
   12bac:	48 83       	st	Y, r20
   12bae:	c6 5b       	subi	r28, 0xB6	; 182
   12bb0:	d6 40       	sbci	r29, 0x06	; 6
   12bb2:	a7 e0       	ldi	r26, 0x07	; 7
   12bb4:	a0 9f       	mul	r26, r16
   12bb6:	c0 01       	movw	r24, r0
   12bb8:	a1 9f       	mul	r26, r17
   12bba:	90 0d       	add	r25, r0
   12bbc:	11 24       	eor	r1, r1
   12bbe:	ba 01       	movw	r22, r20
   12bc0:	87 55       	subi	r24, 0x57	; 87
   12bc2:	9c 4e       	sbci	r25, 0xEC	; 236
   12bc4:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   12bc8:	cf 54       	subi	r28, 0x4F	; 79
   12bca:	d9 4f       	sbci	r29, 0xF9	; 249
   12bcc:	e8 81       	ld	r30, Y
   12bce:	f9 81       	ldd	r31, Y+1	; 0x01
   12bd0:	c1 5b       	subi	r28, 0xB1	; 177
   12bd2:	d6 40       	sbci	r29, 0x06	; 6
   12bd4:	e9 54       	subi	r30, 0x49	; 73
   12bd6:	f4 4f       	sbci	r31, 0xF4	; 244
   12bd8:	cf 54       	subi	r28, 0x4F	; 79
   12bda:	d9 4f       	sbci	r29, 0xF9	; 249
   12bdc:	f9 83       	std	Y+1, r31	; 0x01
   12bde:	e8 83       	st	Y, r30
   12be0:	c1 5b       	subi	r28, 0xB1	; 177
   12be2:	d6 40       	sbci	r29, 0x06	; 6
   12be4:	81 e0       	ldi	r24, 0x01	; 1
   12be6:	8b 0d       	add	r24, r11
   12be8:	80 83       	st	Z, r24
   12bea:	2f ef       	ldi	r18, 0xFF	; 255
   12bec:	30 e0       	ldi	r19, 0x00	; 0
   12bee:	31 87       	std	Z+9, r19	; 0x09
   12bf0:	20 87       	std	Z+8, r18	; 0x08
   12bf2:	31 e0       	ldi	r19, 0x01	; 1
   12bf4:	33 87       	std	Z+11, r19	; 0x0b
   12bf6:	12 86       	std	Z+10, r1	; 0x0a
   12bf8:	14 86       	std	Z+12, r1	; 0x0c
   12bfa:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12bfe:	81 30       	cpi	r24, 0x01	; 1
   12c00:	09 f0       	breq	.+2      	; 0x12c04 <_Z12Pub_Sub_DataPcPhjh+0x8c6>
   12c02:	45 c0       	rjmp	.+138    	; 0x12c8e <_Z12Pub_Sub_DataPcPhjh+0x950>
   12c04:	85 e5       	ldi	r24, 0x55	; 85
   12c06:	94 e1       	ldi	r25, 0x14	; 20
   12c08:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12c0c:	62 e3       	ldi	r22, 0x32	; 50
   12c0e:	79 e3       	ldi	r23, 0x39	; 57
   12c10:	85 e5       	ldi	r24, 0x55	; 85
   12c12:	94 e1       	ldi	r25, 0x14	; 20
   12c14:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12c18:	85 e5       	ldi	r24, 0x55	; 85
   12c1a:	94 e1       	ldi	r25, 0x14	; 20
   12c1c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12c20:	85 e5       	ldi	r24, 0x55	; 85
   12c22:	94 e1       	ldi	r25, 0x14	; 20
   12c24:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12c28:	67 e2       	ldi	r22, 0x27	; 39
   12c2a:	79 e3       	ldi	r23, 0x39	; 57
   12c2c:	85 e5       	ldi	r24, 0x55	; 85
   12c2e:	94 e1       	ldi	r25, 0x14	; 20
   12c30:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12c34:	4a e0       	ldi	r20, 0x0A	; 10
   12c36:	50 e0       	ldi	r21, 0x00	; 0
   12c38:	cf 54       	subi	r28, 0x4F	; 79
   12c3a:	d9 4f       	sbci	r29, 0xF9	; 249
   12c3c:	a8 81       	ld	r26, Y
   12c3e:	b9 81       	ldd	r27, Y+1	; 0x01
   12c40:	c1 5b       	subi	r28, 0xB1	; 177
   12c42:	d6 40       	sbci	r29, 0x06	; 6
   12c44:	6c 91       	ld	r22, X
   12c46:	85 e5       	ldi	r24, 0x55	; 85
   12c48:	94 e1       	ldi	r25, 0x14	; 20
   12c4a:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   12c4e:	85 e5       	ldi	r24, 0x55	; 85
   12c50:	94 e1       	ldi	r25, 0x14	; 20
   12c52:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12c56:	85 e5       	ldi	r24, 0x55	; 85
   12c58:	94 e1       	ldi	r25, 0x14	; 20
   12c5a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12c5e:	6c e1       	ldi	r22, 0x1C	; 28
   12c60:	79 e3       	ldi	r23, 0x39	; 57
   12c62:	85 e5       	ldi	r24, 0x55	; 85
   12c64:	94 e1       	ldi	r25, 0x14	; 20
   12c66:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12c6a:	ca 54       	subi	r28, 0x4A	; 74
   12c6c:	d9 4f       	sbci	r29, 0xF9	; 249
   12c6e:	68 81       	ld	r22, Y
   12c70:	79 81       	ldd	r23, Y+1	; 0x01
   12c72:	c6 5b       	subi	r28, 0xB6	; 182
   12c74:	d6 40       	sbci	r29, 0x06	; 6
   12c76:	85 e5       	ldi	r24, 0x55	; 85
   12c78:	94 e1       	ldi	r25, 0x14	; 20
   12c7a:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   12c7e:	85 e5       	ldi	r24, 0x55	; 85
   12c80:	94 e1       	ldi	r25, 0x14	; 20
   12c82:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12c86:	85 e5       	ldi	r24, 0x55	; 85
   12c88:	94 e1       	ldi	r25, 0x14	; 20
   12c8a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12c8e:	be e0       	ldi	r27, 0x0E	; 14
   12c90:	b9 15       	cp	r27, r9
   12c92:	a0 f1       	brcs	.+104    	; 0x12cfc <_Z12Pub_Sub_DataPcPhjh+0x9be>
   12c94:	f2 01       	movw	r30, r4
   12c96:	87 81       	ldd	r24, Z+7	; 0x07
   12c98:	82 33       	cpi	r24, 0x32	; 50
   12c9a:	99 f0       	breq	.+38     	; 0x12cc2 <_Z12Pub_Sub_DataPcPhjh+0x984>
   12c9c:	83 33       	cpi	r24, 0x33	; 51
   12c9e:	f9 f0       	breq	.+62     	; 0x12cde <_Z12Pub_Sub_DataPcPhjh+0x9a0>
   12ca0:	81 33       	cpi	r24, 0x31	; 49
   12ca2:	09 f0       	breq	.+2      	; 0x12ca6 <_Z12Pub_Sub_DataPcPhjh+0x968>
   12ca4:	72 c0       	rjmp	.+228    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12ca6:	8b 2d       	mov	r24, r11
   12ca8:	88 0f       	add	r24, r24
   12caa:	8b 0d       	add	r24, r11
   12cac:	8f 5f       	subi	r24, 0xFF	; 255
   12cae:	d7 01       	movw	r26, r14
   12cb0:	8c 93       	st	X, r24
   12cb2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12cb6:	81 30       	cpi	r24, 0x01	; 1
   12cb8:	09 f0       	breq	.+2      	; 0x12cbc <_Z12Pub_Sub_DataPcPhjh+0x97e>
   12cba:	67 c0       	rjmp	.+206    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12cbc:	6d ef       	ldi	r22, 0xFD	; 253
   12cbe:	78 e3       	ldi	r23, 0x38	; 56
   12cc0:	58 c0       	rjmp	.+176    	; 0x12d72 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12cc2:	8b 2d       	mov	r24, r11
   12cc4:	88 0f       	add	r24, r24
   12cc6:	8b 0d       	add	r24, r11
   12cc8:	8e 5f       	subi	r24, 0xFE	; 254
   12cca:	f7 01       	movw	r30, r14
   12ccc:	80 83       	st	Z, r24
   12cce:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12cd2:	81 30       	cpi	r24, 0x01	; 1
   12cd4:	09 f0       	breq	.+2      	; 0x12cd8 <_Z12Pub_Sub_DataPcPhjh+0x99a>
   12cd6:	59 c0       	rjmp	.+178    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12cd8:	6e ed       	ldi	r22, 0xDE	; 222
   12cda:	78 e3       	ldi	r23, 0x38	; 56
   12cdc:	4a c0       	rjmp	.+148    	; 0x12d72 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12cde:	0f 5f       	subi	r16, 0xFF	; 255
   12ce0:	1f 4f       	sbci	r17, 0xFF	; 255
   12ce2:	80 2f       	mov	r24, r16
   12ce4:	88 0f       	add	r24, r24
   12ce6:	08 0f       	add	r16, r24
   12ce8:	d7 01       	movw	r26, r14
   12cea:	0c 93       	st	X, r16
   12cec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12cf0:	81 30       	cpi	r24, 0x01	; 1
   12cf2:	09 f0       	breq	.+2      	; 0x12cf6 <_Z12Pub_Sub_DataPcPhjh+0x9b8>
   12cf4:	4a c0       	rjmp	.+148    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12cf6:	6f eb       	ldi	r22, 0xBF	; 191
   12cf8:	78 e3       	ldi	r23, 0x38	; 56
   12cfa:	3b c0       	rjmp	.+118    	; 0x12d72 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12cfc:	b4 e6       	ldi	r27, 0x64	; 100
   12cfe:	b9 15       	cp	r27, r9
   12d00:	08 f0       	brcs	.+2      	; 0x12d04 <_Z12Pub_Sub_DataPcPhjh+0x9c6>
   12d02:	43 c0       	rjmp	.+134    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d04:	f2 01       	movw	r30, r4
   12d06:	87 81       	ldd	r24, Z+7	; 0x07
   12d08:	82 33       	cpi	r24, 0x32	; 50
   12d0a:	c9 f0       	breq	.+50     	; 0x12d3e <_Z12Pub_Sub_DataPcPhjh+0xa00>
   12d0c:	83 33       	cpi	r24, 0x33	; 51
   12d0e:	21 f1       	breq	.+72     	; 0x12d58 <_Z12Pub_Sub_DataPcPhjh+0xa1a>
   12d10:	81 33       	cpi	r24, 0x31	; 49
   12d12:	d9 f5       	brne	.+118    	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d14:	8b 2d       	mov	r24, r11
   12d16:	88 0f       	add	r24, r24
   12d18:	8b 0d       	add	r24, r11
   12d1a:	8f 5f       	subi	r24, 0xFF	; 255
   12d1c:	d6 01       	movw	r26, r12
   12d1e:	8c 93       	st	X, r24
   12d20:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12d24:	81 30       	cpi	r24, 0x01	; 1
   12d26:	89 f5       	brne	.+98     	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d28:	64 ea       	ldi	r22, 0xA4	; 164
   12d2a:	78 e3       	ldi	r23, 0x38	; 56
   12d2c:	85 e5       	ldi	r24, 0x55	; 85
   12d2e:	94 e1       	ldi	r25, 0x14	; 20
   12d30:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12d34:	85 e5       	ldi	r24, 0x55	; 85
   12d36:	94 e1       	ldi	r25, 0x14	; 20
   12d38:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12d3c:	26 c0       	rjmp	.+76     	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d3e:	8b 2d       	mov	r24, r11
   12d40:	88 0f       	add	r24, r24
   12d42:	8b 0d       	add	r24, r11
   12d44:	8e 5f       	subi	r24, 0xFE	; 254
   12d46:	f6 01       	movw	r30, r12
   12d48:	80 83       	st	Z, r24
   12d4a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12d4e:	81 30       	cpi	r24, 0x01	; 1
   12d50:	e1 f4       	brne	.+56     	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d52:	69 e8       	ldi	r22, 0x89	; 137
   12d54:	78 e3       	ldi	r23, 0x38	; 56
   12d56:	0d c0       	rjmp	.+26     	; 0x12d72 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12d58:	0f 5f       	subi	r16, 0xFF	; 255
   12d5a:	1f 4f       	sbci	r17, 0xFF	; 255
   12d5c:	80 2f       	mov	r24, r16
   12d5e:	88 0f       	add	r24, r24
   12d60:	08 0f       	add	r16, r24
   12d62:	d6 01       	movw	r26, r12
   12d64:	0c 93       	st	X, r16
   12d66:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12d6a:	81 30       	cpi	r24, 0x01	; 1
   12d6c:	71 f4       	brne	.+28     	; 0x12d8a <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d6e:	6e e6       	ldi	r22, 0x6E	; 110
   12d70:	78 e3       	ldi	r23, 0x38	; 56
   12d72:	85 e5       	ldi	r24, 0x55	; 85
   12d74:	94 e1       	ldi	r25, 0x14	; 20
   12d76:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12d7a:	85 e5       	ldi	r24, 0x55	; 85
   12d7c:	94 e1       	ldi	r25, 0x14	; 20
   12d7e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12d82:	85 e5       	ldi	r24, 0x55	; 85
   12d84:	94 e1       	ldi	r25, 0x14	; 20
   12d86:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12d8a:	8b 2d       	mov	r24, r11
   12d8c:	0e 94 24 5a 	call	0xb448	; 0xb448 <_Z16Euro_Data_EEPROMh>
   12d90:	d0 cd       	rjmp	.-1120   	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12d92:	4a e4       	ldi	r20, 0x4A	; 74
   12d94:	53 e1       	ldi	r21, 0x13	; 19
   12d96:	27 e0       	ldi	r18, 0x07	; 7
   12d98:	80 e0       	ldi	r24, 0x00	; 0
   12d9a:	90 e0       	ldi	r25, 0x00	; 0
   12d9c:	30 e0       	ldi	r19, 0x00	; 0
   12d9e:	fc 01       	movw	r30, r24
   12da0:	e1 5a       	subi	r30, 0xA1	; 161
   12da2:	ff 4f       	sbci	r31, 0xFF	; 255
   12da4:	e4 0f       	add	r30, r20
   12da6:	f5 1f       	adc	r31, r21
   12da8:	70 81       	ld	r23, Z
   12daa:	f2 01       	movw	r30, r4
   12dac:	e8 0f       	add	r30, r24
   12dae:	f9 1f       	adc	r31, r25
   12db0:	60 81       	ld	r22, Z
   12db2:	76 13       	cpse	r23, r22
   12db4:	01 c0       	rjmp	.+2      	; 0x12db8 <_Z12Pub_Sub_DataPcPhjh+0xa7a>
   12db6:	3f 5f       	subi	r19, 0xFF	; 255
   12db8:	01 96       	adiw	r24, 0x01	; 1
   12dba:	86 30       	cpi	r24, 0x06	; 6
   12dbc:	91 05       	cpc	r25, r1
   12dbe:	79 f7       	brne	.-34     	; 0x12d9e <_Z12Pub_Sub_DataPcPhjh+0xa60>
   12dc0:	36 30       	cpi	r19, 0x06	; 6
   12dc2:	09 f0       	breq	.+2      	; 0x12dc6 <_Z12Pub_Sub_DataPcPhjh+0xa88>
   12dc4:	63 c0       	rjmp	.+198    	; 0x12e8c <_Z12Pub_Sub_DataPcPhjh+0xb4e>
   12dc6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12dca:	be e0       	ldi	r27, 0x0E	; 14
   12dcc:	b9 15       	cp	r27, r9
   12dce:	10 f1       	brcs	.+68     	; 0x12e14 <_Z12Pub_Sub_DataPcPhjh+0xad6>
   12dd0:	f2 01       	movw	r30, r4
   12dd2:	97 81       	ldd	r25, Z+7	; 0x07
   12dd4:	92 33       	cpi	r25, 0x32	; 50
   12dd6:	69 f0       	breq	.+26     	; 0x12df2 <_Z12Pub_Sub_DataPcPhjh+0xab4>
   12dd8:	93 33       	cpi	r25, 0x33	; 51
   12dda:	99 f0       	breq	.+38     	; 0x12e02 <_Z12Pub_Sub_DataPcPhjh+0xac4>
   12ddc:	91 33       	cpi	r25, 0x31	; 49
   12dde:	09 f0       	breq	.+2      	; 0x12de2 <_Z12Pub_Sub_DataPcPhjh+0xaa4>
   12de0:	46 c0       	rjmp	.+140    	; 0x12e6e <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12de2:	d7 01       	movw	r26, r14
   12de4:	ac 92       	st	X, r10
   12de6:	81 30       	cpi	r24, 0x01	; 1
   12de8:	09 f0       	breq	.+2      	; 0x12dec <_Z12Pub_Sub_DataPcPhjh+0xaae>
   12dea:	55 c0       	rjmp	.+170    	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12dec:	63 e5       	ldi	r22, 0x53	; 83
   12dee:	78 e3       	ldi	r23, 0x38	; 56
   12df0:	32 c0       	rjmp	.+100    	; 0x12e56 <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12df2:	f7 01       	movw	r30, r14
   12df4:	80 82       	st	Z, r8
   12df6:	81 30       	cpi	r24, 0x01	; 1
   12df8:	09 f0       	breq	.+2      	; 0x12dfc <_Z12Pub_Sub_DataPcPhjh+0xabe>
   12dfa:	4d c0       	rjmp	.+154    	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12dfc:	68 e3       	ldi	r22, 0x38	; 56
   12dfe:	78 e3       	ldi	r23, 0x38	; 56
   12e00:	2a c0       	rjmp	.+84     	; 0x12e56 <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12e02:	e7 e6       	ldi	r30, 0x67	; 103
   12e04:	d7 01       	movw	r26, r14
   12e06:	ec 93       	st	X, r30
   12e08:	81 30       	cpi	r24, 0x01	; 1
   12e0a:	09 f0       	breq	.+2      	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0xad0>
   12e0c:	44 c0       	rjmp	.+136    	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e0e:	6d e1       	ldi	r22, 0x1D	; 29
   12e10:	78 e3       	ldi	r23, 0x38	; 56
   12e12:	21 c0       	rjmp	.+66     	; 0x12e56 <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12e14:	f4 e6       	ldi	r31, 0x64	; 100
   12e16:	f9 15       	cp	r31, r9
   12e18:	50 f5       	brcc	.+84     	; 0x12e6e <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12e1a:	d2 01       	movw	r26, r4
   12e1c:	17 96       	adiw	r26, 0x07	; 7
   12e1e:	9c 91       	ld	r25, X
   12e20:	92 33       	cpi	r25, 0x32	; 50
   12e22:	59 f0       	breq	.+22     	; 0x12e3a <_Z12Pub_Sub_DataPcPhjh+0xafc>
   12e24:	93 33       	cpi	r25, 0x33	; 51
   12e26:	81 f0       	breq	.+32     	; 0x12e48 <_Z12Pub_Sub_DataPcPhjh+0xb0a>
   12e28:	91 33       	cpi	r25, 0x31	; 49
   12e2a:	09 f5       	brne	.+66     	; 0x12e6e <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12e2c:	f6 01       	movw	r30, r12
   12e2e:	a0 82       	st	Z, r10
   12e30:	81 30       	cpi	r24, 0x01	; 1
   12e32:	89 f5       	brne	.+98     	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e34:	62 e0       	ldi	r22, 0x02	; 2
   12e36:	78 e3       	ldi	r23, 0x38	; 56
   12e38:	0e c0       	rjmp	.+28     	; 0x12e56 <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12e3a:	d6 01       	movw	r26, r12
   12e3c:	8c 92       	st	X, r8
   12e3e:	81 30       	cpi	r24, 0x01	; 1
   12e40:	51 f5       	brne	.+84     	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e42:	67 ee       	ldi	r22, 0xE7	; 231
   12e44:	77 e3       	ldi	r23, 0x37	; 55
   12e46:	07 c0       	rjmp	.+14     	; 0x12e56 <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12e48:	27 e6       	ldi	r18, 0x67	; 103
   12e4a:	f6 01       	movw	r30, r12
   12e4c:	20 83       	st	Z, r18
   12e4e:	81 30       	cpi	r24, 0x01	; 1
   12e50:	11 f5       	brne	.+68     	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e52:	6c ec       	ldi	r22, 0xCC	; 204
   12e54:	77 e3       	ldi	r23, 0x37	; 55
   12e56:	85 e5       	ldi	r24, 0x55	; 85
   12e58:	94 e1       	ldi	r25, 0x14	; 20
   12e5a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12e5e:	85 e5       	ldi	r24, 0x55	; 85
   12e60:	94 e1       	ldi	r25, 0x14	; 20
   12e62:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12e66:	85 e5       	ldi	r24, 0x55	; 85
   12e68:	94 e1       	ldi	r25, 0x14	; 20
   12e6a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12e6e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12e72:	81 30       	cpi	r24, 0x01	; 1
   12e74:	81 f4       	brne	.+32     	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e76:	6b eb       	ldi	r22, 0xBB	; 187
   12e78:	77 e3       	ldi	r23, 0x37	; 55
   12e7a:	85 e5       	ldi	r24, 0x55	; 85
   12e7c:	94 e1       	ldi	r25, 0x14	; 20
   12e7e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12e82:	85 e5       	ldi	r24, 0x55	; 85
   12e84:	94 e1       	ldi	r25, 0x14	; 20
   12e86:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12e8a:	05 c0       	rjmp	.+10     	; 0x12e96 <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e8c:	21 50       	subi	r18, 0x01	; 1
   12e8e:	49 5f       	subi	r20, 0xF9	; 249
   12e90:	5f 4f       	sbci	r21, 0xFF	; 255
   12e92:	21 11       	cpse	r18, r1
   12e94:	81 cf       	rjmp	.-254    	; 0x12d98 <_Z12Pub_Sub_DataPcPhjh+0xa5a>
   12e96:	d7 01       	movw	r26, r14
   12e98:	8c 91       	ld	r24, X
   12e9a:	81 11       	cpse	r24, r1
   12e9c:	03 c0       	rjmp	.+6      	; 0x12ea4 <_Z12Pub_Sub_DataPcPhjh+0xb66>
   12e9e:	be e0       	ldi	r27, 0x0E	; 14
   12ea0:	b9 15       	cp	r27, r9
   12ea2:	40 f4       	brcc	.+16     	; 0x12eb4 <_Z12Pub_Sub_DataPcPhjh+0xb76>
   12ea4:	f6 01       	movw	r30, r12
   12ea6:	80 81       	ld	r24, Z
   12ea8:	81 11       	cpse	r24, r1
   12eaa:	43 cd       	rjmp	.-1402   	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12eac:	fe e0       	ldi	r31, 0x0E	; 14
   12eae:	f9 15       	cp	r31, r9
   12eb0:	08 f0       	brcs	.+2      	; 0x12eb4 <_Z12Pub_Sub_DataPcPhjh+0xb76>
   12eb2:	3f cd       	rjmp	.-1410   	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12eb4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12eb8:	81 30       	cpi	r24, 0x01	; 1
   12eba:	51 f4       	brne	.+20     	; 0x12ed0 <_Z12Pub_Sub_DataPcPhjh+0xb92>
   12ebc:	62 ea       	ldi	r22, 0xA2	; 162
   12ebe:	77 e3       	ldi	r23, 0x37	; 55
   12ec0:	85 e5       	ldi	r24, 0x55	; 85
   12ec2:	94 e1       	ldi	r25, 0x14	; 20
   12ec4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12ec8:	85 e5       	ldi	r24, 0x55	; 85
   12eca:	94 e1       	ldi	r25, 0x14	; 20
   12ecc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12ed0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12ed4:	81 30       	cpi	r24, 0x01	; 1
   12ed6:	c9 f4       	brne	.+50     	; 0x12f0a <_Z12Pub_Sub_DataPcPhjh+0xbcc>
   12ed8:	85 e5       	ldi	r24, 0x55	; 85
   12eda:	94 e1       	ldi	r25, 0x14	; 20
   12edc:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12ee0:	6e e8       	ldi	r22, 0x8E	; 142
   12ee2:	77 e3       	ldi	r23, 0x37	; 55
   12ee4:	85 e5       	ldi	r24, 0x55	; 85
   12ee6:	94 e1       	ldi	r25, 0x14	; 20
   12ee8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12eec:	85 e5       	ldi	r24, 0x55	; 85
   12eee:	94 e1       	ldi	r25, 0x14	; 20
   12ef0:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12ef4:	4a e0       	ldi	r20, 0x0A	; 10
   12ef6:	50 e0       	ldi	r21, 0x00	; 0
   12ef8:	66 e0       	ldi	r22, 0x06	; 6
   12efa:	85 e5       	ldi	r24, 0x55	; 85
   12efc:	94 e1       	ldi	r25, 0x14	; 20
   12efe:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   12f02:	85 e5       	ldi	r24, 0x55	; 85
   12f04:	94 e1       	ldi	r25, 0x14	; 20
   12f06:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12f0a:	e7 e9       	ldi	r30, 0x97	; 151
   12f0c:	fb e0       	ldi	r31, 0x0B	; 11
   12f0e:	80 e0       	ldi	r24, 0x00	; 0
   12f10:	90 e0       	ldi	r25, 0x00	; 0
   12f12:	d2 01       	movw	r26, r4
   12f14:	a8 0f       	add	r26, r24
   12f16:	b9 1f       	adc	r27, r25
   12f18:	2c 91       	ld	r18, X
   12f1a:	21 93       	st	Z+, r18
   12f1c:	22 87       	std	Z+10, r18	; 0x0a
   12f1e:	25 8b       	std	Z+21, r18	; 0x15
   12f20:	01 96       	adiw	r24, 0x01	; 1
   12f22:	86 30       	cpi	r24, 0x06	; 6
   12f24:	91 05       	cpc	r25, r1
   12f26:	a9 f7       	brne	.-22     	; 0x12f12 <_Z12Pub_Sub_DataPcPhjh+0xbd4>
   12f28:	21 e0       	ldi	r18, 0x01	; 1
   12f2a:	20 93 96 0b 	sts	0x0B96, r18	; 0x800b96 <_sWireless_Pump_Param>
   12f2e:	32 e0       	ldi	r19, 0x02	; 2
   12f30:	30 93 a1 0b 	sts	0x0BA1, r19	; 0x800ba1 <_sWireless_Pump_Param+0xb>
   12f34:	43 e0       	ldi	r20, 0x03	; 3
   12f36:	40 93 ac 0b 	sts	0x0BAC, r20	; 0x800bac <_sWireless_Pump_Param+0x16>
   12f3a:	10 92 a0 0b 	sts	0x0BA0, r1	; 0x800ba0 <_sWireless_Pump_Param+0xa>
   12f3e:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sWireless_Pump_Param+0x15>
   12f42:	10 92 b6 0b 	sts	0x0BB6, r1	; 0x800bb6 <_sWireless_Pump_Param+0x20>
   12f46:	10 92 9f 0b 	sts	0x0B9F, r1	; 0x800b9f <_sWireless_Pump_Param+0x9>
   12f4a:	10 92 9e 0b 	sts	0x0B9E, r1	; 0x800b9e <_sWireless_Pump_Param+0x8>
   12f4e:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sWireless_Pump_Param+0x14>
   12f52:	10 92 a9 0b 	sts	0x0BA9, r1	; 0x800ba9 <_sWireless_Pump_Param+0x13>
   12f56:	10 92 b5 0b 	sts	0x0BB5, r1	; 0x800bb5 <_sWireless_Pump_Param+0x1f>
   12f5a:	10 92 b4 0b 	sts	0x0BB4, r1	; 0x800bb4 <_sWireless_Pump_Param+0x1e>
   12f5e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12f62:	81 30       	cpi	r24, 0x01	; 1
   12f64:	91 f4       	brne	.+36     	; 0x12f8a <_Z12Pub_Sub_DataPcPhjh+0xc4c>
   12f66:	85 e5       	ldi	r24, 0x55	; 85
   12f68:	94 e1       	ldi	r25, 0x14	; 20
   12f6a:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12f6e:	6b e6       	ldi	r22, 0x6B	; 107
   12f70:	77 e3       	ldi	r23, 0x37	; 55
   12f72:	85 e5       	ldi	r24, 0x55	; 85
   12f74:	94 e1       	ldi	r25, 0x14	; 20
   12f76:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12f7a:	85 e5       	ldi	r24, 0x55	; 85
   12f7c:	94 e1       	ldi	r25, 0x14	; 20
   12f7e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12f82:	85 e5       	ldi	r24, 0x55	; 85
   12f84:	94 e1       	ldi	r25, 0x14	; 20
   12f86:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12f8a:	54 e6       	ldi	r21, 0x64	; 100
   12f8c:	59 15       	cp	r21, r9
   12f8e:	30 f5       	brcc	.+76     	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   12f90:	d2 01       	movw	r26, r4
   12f92:	17 96       	adiw	r26, 0x07	; 7
   12f94:	8c 91       	ld	r24, X
   12f96:	82 33       	cpi	r24, 0x32	; 50
   12f98:	69 f0       	breq	.+26     	; 0x12fb4 <_Z12Pub_Sub_DataPcPhjh+0xc76>
   12f9a:	83 33       	cpi	r24, 0x33	; 51
   12f9c:	09 f1       	breq	.+66     	; 0x12fe0 <_Z12Pub_Sub_DataPcPhjh+0xca2>
   12f9e:	81 33       	cpi	r24, 0x31	; 49
   12fa0:	e9 f4       	brne	.+58     	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   12fa2:	f6 01       	movw	r30, r12
   12fa4:	a0 82       	st	Z, r10
   12fa6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12faa:	81 30       	cpi	r24, 0x01	; 1
   12fac:	b9 f4       	brne	.+46     	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   12fae:	60 e5       	ldi	r22, 0x50	; 80
   12fb0:	77 e3       	ldi	r23, 0x37	; 55
   12fb2:	08 c0       	rjmp	.+16     	; 0x12fc4 <_Z12Pub_Sub_DataPcPhjh+0xc86>
   12fb4:	d6 01       	movw	r26, r12
   12fb6:	8c 92       	st	X, r8
   12fb8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12fbc:	81 30       	cpi	r24, 0x01	; 1
   12fbe:	71 f4       	brne	.+28     	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   12fc0:	65 e3       	ldi	r22, 0x35	; 53
   12fc2:	77 e3       	ldi	r23, 0x37	; 55
   12fc4:	85 e5       	ldi	r24, 0x55	; 85
   12fc6:	94 e1       	ldi	r25, 0x14	; 20
   12fc8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   12fcc:	85 e5       	ldi	r24, 0x55	; 85
   12fce:	94 e1       	ldi	r25, 0x14	; 20
   12fd0:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   12fd4:	85 e5       	ldi	r24, 0x55	; 85
   12fd6:	94 e1       	ldi	r25, 0x14	; 20
   12fd8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   12fdc:	10 e0       	ldi	r17, 0x00	; 0
   12fde:	0a c0       	rjmp	.+20     	; 0x12ff4 <_Z12Pub_Sub_DataPcPhjh+0xcb6>
   12fe0:	27 e6       	ldi	r18, 0x67	; 103
   12fe2:	f6 01       	movw	r30, r12
   12fe4:	20 83       	st	Z, r18
   12fe6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   12fea:	81 30       	cpi	r24, 0x01	; 1
   12fec:	b9 f7       	brne	.-18     	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   12fee:	6a e1       	ldi	r22, 0x1A	; 26
   12ff0:	77 e3       	ldi	r23, 0x37	; 55
   12ff2:	e8 cf       	rjmp	.-48     	; 0x12fc4 <_Z12Pub_Sub_DataPcPhjh+0xc86>
   12ff4:	81 2f       	mov	r24, r17
   12ff6:	0e 94 5e 5a 	call	0xb4bc	; 0xb4bc <_Z20Wireless_Pump_EEPROMh>
   12ffa:	64 e6       	ldi	r22, 0x64	; 100
   12ffc:	70 e0       	ldi	r23, 0x00	; 0
   12ffe:	80 e0       	ldi	r24, 0x00	; 0
   13000:	90 e0       	ldi	r25, 0x00	; 0
   13002:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   13006:	1f 5f       	subi	r17, 0xFF	; 255
   13008:	13 30       	cpi	r17, 0x03	; 3
   1300a:	a1 f7       	brne	.-24     	; 0x12ff4 <_Z12Pub_Sub_DataPcPhjh+0xcb6>
   1300c:	92 cc       	rjmp	.-1756   	; 0x12932 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   1300e:	9e e0       	ldi	r25, 0x0E	; 14
   13010:	99 15       	cp	r25, r9
   13012:	08 f4       	brcc	.+2      	; 0x13016 <_Z12Pub_Sub_DataPcPhjh+0xcd8>
   13014:	f5 c0       	rjmp	.+490    	; 0x13200 <_Z12Pub_Sub_DataPcPhjh+0xec2>
   13016:	63 e1       	ldi	r22, 0x13	; 19
   13018:	77 e3       	ldi	r23, 0x37	; 55
   1301a:	c1 01       	movw	r24, r2
   1301c:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13020:	c3 55       	subi	r28, 0x53	; 83
   13022:	d9 4f       	sbci	r29, 0xF9	; 249
   13024:	88 83       	st	Y, r24
   13026:	cd 5a       	subi	r28, 0xAD	; 173
   13028:	d6 40       	sbci	r29, 0x06	; 6
   1302a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1302e:	81 30       	cpi	r24, 0x01	; 1
   13030:	09 f0       	breq	.+2      	; 0x13034 <_Z12Pub_Sub_DataPcPhjh+0xcf6>
   13032:	91 c0       	rjmp	.+290    	; 0x13156 <_Z12Pub_Sub_DataPcPhjh+0xe18>
   13034:	67 ef       	ldi	r22, 0xF7	; 247
   13036:	76 e3       	ldi	r23, 0x36	; 54
   13038:	85 e5       	ldi	r24, 0x55	; 85
   1303a:	94 e1       	ldi	r25, 0x14	; 20
   1303c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13040:	6a ee       	ldi	r22, 0xEA	; 234
   13042:	76 e3       	ldi	r23, 0x36	; 54
   13044:	85 e5       	ldi	r24, 0x55	; 85
   13046:	94 e1       	ldi	r25, 0x14	; 20
   13048:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1304c:	85 e5       	ldi	r24, 0x55	; 85
   1304e:	94 e1       	ldi	r25, 0x14	; 20
   13050:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13054:	89 2d       	mov	r24, r9
   13056:	90 e0       	ldi	r25, 0x00	; 0
   13058:	01 97       	sbiw	r24, 0x01	; 1
   1305a:	26 e0       	ldi	r18, 0x06	; 6
   1305c:	28 9f       	mul	r18, r24
   1305e:	f0 01       	movw	r30, r0
   13060:	29 9f       	mul	r18, r25
   13062:	f0 0d       	add	r31, r0
   13064:	11 24       	eor	r1, r1
   13066:	e0 50       	subi	r30, 0x00	; 0
   13068:	f3 4f       	sbci	r31, 0xF3	; 243
   1306a:	4a e0       	ldi	r20, 0x0A	; 10
   1306c:	50 e0       	ldi	r21, 0x00	; 0
   1306e:	60 81       	ld	r22, Z
   13070:	85 e5       	ldi	r24, 0x55	; 85
   13072:	94 e1       	ldi	r25, 0x14	; 20
   13074:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   13078:	85 e5       	ldi	r24, 0x55	; 85
   1307a:	94 e1       	ldi	r25, 0x14	; 20
   1307c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   13080:	85 e5       	ldi	r24, 0x55	; 85
   13082:	94 e1       	ldi	r25, 0x14	; 20
   13084:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13088:	60 ee       	ldi	r22, 0xE0	; 224
   1308a:	76 e3       	ldi	r23, 0x36	; 54
   1308c:	85 e5       	ldi	r24, 0x55	; 85
   1308e:	94 e1       	ldi	r25, 0x14	; 20
   13090:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13094:	b3 01       	movw	r22, r6
   13096:	85 e5       	ldi	r24, 0x55	; 85
   13098:	94 e1       	ldi	r25, 0x14	; 20
   1309a:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   1309e:	85 e5       	ldi	r24, 0x55	; 85
   130a0:	94 e1       	ldi	r25, 0x14	; 20
   130a2:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   130a6:	85 e5       	ldi	r24, 0x55	; 85
   130a8:	94 e1       	ldi	r25, 0x14	; 20
   130aa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   130ae:	66 ed       	ldi	r22, 0xD6	; 214
   130b0:	76 e3       	ldi	r23, 0x36	; 54
   130b2:	85 e5       	ldi	r24, 0x55	; 85
   130b4:	94 e1       	ldi	r25, 0x14	; 20
   130b6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   130ba:	b3 01       	movw	r22, r6
   130bc:	68 5f       	subi	r22, 0xF8	; 248
   130be:	7f 4f       	sbci	r23, 0xFF	; 255
   130c0:	85 e5       	ldi	r24, 0x55	; 85
   130c2:	94 e1       	ldi	r25, 0x14	; 20
   130c4:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   130c8:	85 e5       	ldi	r24, 0x55	; 85
   130ca:	94 e1       	ldi	r25, 0x14	; 20
   130cc:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   130d0:	85 e5       	ldi	r24, 0x55	; 85
   130d2:	94 e1       	ldi	r25, 0x14	; 20
   130d4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   130d8:	6c ec       	ldi	r22, 0xCC	; 204
   130da:	76 e3       	ldi	r23, 0x36	; 54
   130dc:	85 e5       	ldi	r24, 0x55	; 85
   130de:	94 e1       	ldi	r25, 0x14	; 20
   130e0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   130e4:	b3 01       	movw	r22, r6
   130e6:	60 5f       	subi	r22, 0xF0	; 240
   130e8:	7f 4f       	sbci	r23, 0xFF	; 255
   130ea:	85 e5       	ldi	r24, 0x55	; 85
   130ec:	94 e1       	ldi	r25, 0x14	; 20
   130ee:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   130f2:	85 e5       	ldi	r24, 0x55	; 85
   130f4:	94 e1       	ldi	r25, 0x14	; 20
   130f6:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   130fa:	85 e5       	ldi	r24, 0x55	; 85
   130fc:	94 e1       	ldi	r25, 0x14	; 20
   130fe:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13102:	62 ec       	ldi	r22, 0xC2	; 194
   13104:	76 e3       	ldi	r23, 0x36	; 54
   13106:	85 e5       	ldi	r24, 0x55	; 85
   13108:	94 e1       	ldi	r25, 0x14	; 20
   1310a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1310e:	b3 01       	movw	r22, r6
   13110:	68 5e       	subi	r22, 0xE8	; 232
   13112:	7f 4f       	sbci	r23, 0xFF	; 255
   13114:	85 e5       	ldi	r24, 0x55	; 85
   13116:	94 e1       	ldi	r25, 0x14	; 20
   13118:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   1311c:	85 e5       	ldi	r24, 0x55	; 85
   1311e:	94 e1       	ldi	r25, 0x14	; 20
   13120:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   13124:	85 e5       	ldi	r24, 0x55	; 85
   13126:	94 e1       	ldi	r25, 0x14	; 20
   13128:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1312c:	68 eb       	ldi	r22, 0xB8	; 184
   1312e:	76 e3       	ldi	r23, 0x36	; 54
   13130:	85 e5       	ldi	r24, 0x55	; 85
   13132:	94 e1       	ldi	r25, 0x14	; 20
   13134:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13138:	b3 01       	movw	r22, r6
   1313a:	60 5e       	subi	r22, 0xE0	; 224
   1313c:	7f 4f       	sbci	r23, 0xFF	; 255
   1313e:	85 e5       	ldi	r24, 0x55	; 85
   13140:	94 e1       	ldi	r25, 0x14	; 20
   13142:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   13146:	85 e5       	ldi	r24, 0x55	; 85
   13148:	94 e1       	ldi	r25, 0x14	; 20
   1314a:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   1314e:	85 e5       	ldi	r24, 0x55	; 85
   13150:	94 e1       	ldi	r25, 0x14	; 20
   13152:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13156:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1315a:	81 30       	cpi	r24, 0x01	; 1
   1315c:	71 f0       	breq	.+28     	; 0x1317a <_Z12Pub_Sub_DataPcPhjh+0xe3c>
   1315e:	cb 54       	subi	r28, 0x4B	; 75
   13160:	d9 4f       	sbci	r29, 0xF9	; 249
   13162:	88 81       	ld	r24, Y
   13164:	c5 5b       	subi	r28, 0xB5	; 181
   13166:	d6 40       	sbci	r29, 0x06	; 6
   13168:	0e 94 86 7d 	call	0xfb0c	; 0xfb0c <_Z16Lira_Data_EEPROMh>
   1316c:	a1 e0       	ldi	r26, 0x01	; 1
   1316e:	c0 55       	subi	r28, 0x50	; 80
   13170:	d9 4f       	sbci	r29, 0xF9	; 249
   13172:	a8 83       	st	Y, r26
   13174:	c0 5b       	subi	r28, 0xB0	; 176
   13176:	d6 40       	sbci	r29, 0x06	; 6
   13178:	85 c1       	rjmp	.+778    	; 0x13484 <_Z12Pub_Sub_DataPcPhjh+0x1146>
   1317a:	00 e0       	ldi	r16, 0x00	; 0
   1317c:	10 e0       	ldi	r17, 0x00	; 0
   1317e:	85 e5       	ldi	r24, 0x55	; 85
   13180:	94 e1       	ldi	r25, 0x14	; 20
   13182:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   13186:	6c ea       	ldi	r22, 0xAC	; 172
   13188:	76 e3       	ldi	r23, 0x36	; 54
   1318a:	85 e5       	ldi	r24, 0x55	; 85
   1318c:	94 e1       	ldi	r25, 0x14	; 20
   1318e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13192:	c8 54       	subi	r28, 0x48	; 72
   13194:	d9 4f       	sbci	r29, 0xF9	; 249
   13196:	e8 81       	ld	r30, Y
   13198:	f9 81       	ldd	r31, Y+1	; 0x01
   1319a:	c8 5b       	subi	r28, 0xB8	; 184
   1319c:	d6 40       	sbci	r29, 0x06	; 6
   1319e:	e0 0f       	add	r30, r16
   131a0:	f1 1f       	adc	r31, r17
   131a2:	e5 50       	subi	r30, 0x05	; 5
   131a4:	f3 4f       	sbci	r31, 0xF3	; 243
   131a6:	4a e0       	ldi	r20, 0x0A	; 10
   131a8:	50 e0       	ldi	r21, 0x00	; 0
   131aa:	60 81       	ld	r22, Z
   131ac:	85 e5       	ldi	r24, 0x55	; 85
   131ae:	94 e1       	ldi	r25, 0x14	; 20
   131b0:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   131b4:	85 e5       	ldi	r24, 0x55	; 85
   131b6:	94 e1       	ldi	r25, 0x14	; 20
   131b8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   131bc:	0f 5f       	subi	r16, 0xFF	; 255
   131be:	1f 4f       	sbci	r17, 0xFF	; 255
   131c0:	05 30       	cpi	r16, 0x05	; 5
   131c2:	11 05       	cpc	r17, r1
   131c4:	e1 f6       	brne	.-72     	; 0x1317e <_Z12Pub_Sub_DataPcPhjh+0xe40>
   131c6:	00 e0       	ldi	r16, 0x00	; 0
   131c8:	10 e0       	ldi	r17, 0x00	; 0
   131ca:	85 e5       	ldi	r24, 0x55	; 85
   131cc:	94 e1       	ldi	r25, 0x14	; 20
   131ce:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   131d2:	61 ea       	ldi	r22, 0xA1	; 161
   131d4:	76 e3       	ldi	r23, 0x36	; 54
   131d6:	85 e5       	ldi	r24, 0x55	; 85
   131d8:	94 e1       	ldi	r25, 0x14	; 20
   131da:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   131de:	b8 01       	movw	r22, r16
   131e0:	68 54       	subi	r22, 0x48	; 72
   131e2:	74 4f       	sbci	r23, 0xF4	; 244
   131e4:	85 e5       	ldi	r24, 0x55	; 85
   131e6:	94 e1       	ldi	r25, 0x14	; 20
   131e8:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   131ec:	85 e5       	ldi	r24, 0x55	; 85
   131ee:	94 e1       	ldi	r25, 0x14	; 20
   131f0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   131f4:	03 5f       	subi	r16, 0xF3	; 243
   131f6:	1f 4f       	sbci	r17, 0xFF	; 255
   131f8:	0b 35       	cpi	r16, 0x5B	; 91
   131fa:	11 05       	cpc	r17, r1
   131fc:	31 f7       	brne	.-52     	; 0x131ca <_Z12Pub_Sub_DataPcPhjh+0xe8c>
   131fe:	af cf       	rjmp	.-162    	; 0x1315e <_Z12Pub_Sub_DataPcPhjh+0xe20>
   13200:	b4 e6       	ldi	r27, 0x64	; 100
   13202:	b9 15       	cp	r27, r9
   13204:	08 f0       	brcs	.+2      	; 0x13208 <_Z12Pub_Sub_DataPcPhjh+0xeca>
   13206:	3e c1       	rjmp	.+636    	; 0x13484 <_Z12Pub_Sub_DataPcPhjh+0x1146>
   13208:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1320c:	09 2d       	mov	r16, r9
   1320e:	10 e0       	ldi	r17, 0x00	; 0
   13210:	81 30       	cpi	r24, 0x01	; 1
   13212:	09 f4       	brne	.+2      	; 0x13216 <_Z12Pub_Sub_DataPcPhjh+0xed8>
   13214:	57 c0       	rjmp	.+174    	; 0x132c4 <_Z12Pub_Sub_DataPcPhjh+0xf86>
   13216:	78 01       	movw	r14, r16
   13218:	e5 e6       	ldi	r30, 0x65	; 101
   1321a:	ee 1a       	sub	r14, r30
   1321c:	f1 08       	sbc	r15, r1
   1321e:	60 e6       	ldi	r22, 0x60	; 96
   13220:	76 e3       	ldi	r23, 0x36	; 54
   13222:	c1 01       	movw	r24, r2
   13224:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13228:	60 e0       	ldi	r22, 0x00	; 0
   1322a:	70 e0       	ldi	r23, 0x00	; 0
   1322c:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13230:	2b e1       	ldi	r18, 0x1B	; 27
   13232:	2e 9d       	mul	r18, r14
   13234:	80 01       	movw	r16, r0
   13236:	2f 9d       	mul	r18, r15
   13238:	10 0d       	add	r17, r0
   1323a:	11 24       	eor	r1, r1
   1323c:	0c 57       	subi	r16, 0x7C	; 124
   1323e:	12 4f       	sbci	r17, 0xF2	; 242
   13240:	d8 01       	movw	r26, r16
   13242:	1d 96       	adiw	r26, 0x0d	; 13
   13244:	9c 93       	st	X, r25
   13246:	8e 93       	st	-X, r24
   13248:	1c 97       	sbiw	r26, 0x0c	; 12
   1324a:	6c e5       	ldi	r22, 0x5C	; 92
   1324c:	76 e3       	ldi	r23, 0x36	; 54
   1324e:	c1 01       	movw	r24, r2
   13250:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13254:	61 e0       	ldi	r22, 0x01	; 1
   13256:	70 e0       	ldi	r23, 0x00	; 0
   13258:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1325c:	f8 01       	movw	r30, r16
   1325e:	97 87       	std	Z+15, r25	; 0x0f
   13260:	86 87       	std	Z+14, r24	; 0x0e
   13262:	68 e5       	ldi	r22, 0x58	; 88
   13264:	76 e3       	ldi	r23, 0x36	; 54
   13266:	c1 01       	movw	r24, r2
   13268:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1326c:	60 e0       	ldi	r22, 0x00	; 0
   1326e:	70 e0       	ldi	r23, 0x00	; 0
   13270:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13274:	d8 01       	movw	r26, r16
   13276:	53 96       	adiw	r26, 0x13	; 19
   13278:	9c 93       	st	X, r25
   1327a:	8e 93       	st	-X, r24
   1327c:	52 97       	sbiw	r26, 0x12	; 18
   1327e:	64 e5       	ldi	r22, 0x54	; 84
   13280:	76 e3       	ldi	r23, 0x36	; 54
   13282:	c1 01       	movw	r24, r2
   13284:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13288:	61 e0       	ldi	r22, 0x01	; 1
   1328a:	70 e0       	ldi	r23, 0x00	; 0
   1328c:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13290:	f8 01       	movw	r30, r16
   13292:	95 8b       	std	Z+21, r25	; 0x15
   13294:	84 8b       	std	Z+20, r24	; 0x14
   13296:	6b e4       	ldi	r22, 0x4B	; 75
   13298:	76 e3       	ldi	r23, 0x36	; 54
   1329a:	c1 01       	movw	r24, r2
   1329c:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   132a0:	d8 01       	movw	r26, r16
   132a2:	58 96       	adiw	r26, 0x18	; 24
   132a4:	8c 93       	st	X, r24
   132a6:	58 97       	sbiw	r26, 0x18	; 24
   132a8:	1a 96       	adiw	r26, 0x0a	; 10
   132aa:	1c 92       	st	X, r1
   132ac:	1a 97       	sbiw	r26, 0x0a	; 10
   132ae:	1b 96       	adiw	r26, 0x0b	; 11
   132b0:	1c 92       	st	X, r1
   132b2:	1b 97       	sbiw	r26, 0x0b	; 11
   132b4:	14 96       	adiw	r26, 0x04	; 4
   132b6:	1c 92       	st	X, r1
   132b8:	1e 92       	st	-X, r1
   132ba:	13 97       	sbiw	r26, 0x03	; 3
   132bc:	b9 e6       	ldi	r27, 0x69	; 105
   132be:	9b 12       	cpse	r9, r27
   132c0:	7b c0       	rjmp	.+246    	; 0x133b8 <_Z12Pub_Sub_DataPcPhjh+0x107a>
   132c2:	47 c0       	rjmp	.+142    	; 0x13352 <_Z12Pub_Sub_DataPcPhjh+0x1014>
   132c4:	65 e8       	ldi	r22, 0x85	; 133
   132c6:	76 e3       	ldi	r23, 0x36	; 54
   132c8:	85 e5       	ldi	r24, 0x55	; 85
   132ca:	94 e1       	ldi	r25, 0x14	; 20
   132cc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   132d0:	60 e7       	ldi	r22, 0x70	; 112
   132d2:	76 e3       	ldi	r23, 0x36	; 54
   132d4:	85 e5       	ldi	r24, 0x55	; 85
   132d6:	94 e1       	ldi	r25, 0x14	; 20
   132d8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   132dc:	c8 01       	movw	r24, r16
   132de:	85 56       	subi	r24, 0x65	; 101
   132e0:	91 09       	sbc	r25, r1
   132e2:	2b e1       	ldi	r18, 0x1B	; 27
   132e4:	28 9f       	mul	r18, r24
   132e6:	60 01       	movw	r12, r0
   132e8:	29 9f       	mul	r18, r25
   132ea:	d0 0c       	add	r13, r0
   132ec:	11 24       	eor	r1, r1
   132ee:	f6 01       	movw	r30, r12
   132f0:	ec 57       	subi	r30, 0x7C	; 124
   132f2:	f2 4f       	sbci	r31, 0xF2	; 242
   132f4:	4a e0       	ldi	r20, 0x0A	; 10
   132f6:	50 e0       	ldi	r21, 0x00	; 0
   132f8:	61 81       	ldd	r22, Z+1	; 0x01
   132fa:	85 e5       	ldi	r24, 0x55	; 85
   132fc:	94 e1       	ldi	r25, 0x14	; 20
   132fe:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   13302:	85 e5       	ldi	r24, 0x55	; 85
   13304:	94 e1       	ldi	r25, 0x14	; 20
   13306:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1330a:	e1 2c       	mov	r14, r1
   1330c:	f1 2c       	mov	r15, r1
   1330e:	85 e5       	ldi	r24, 0x55	; 85
   13310:	94 e1       	ldi	r25, 0x14	; 20
   13312:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   13316:	64 e6       	ldi	r22, 0x64	; 100
   13318:	76 e3       	ldi	r23, 0x36	; 54
   1331a:	85 e5       	ldi	r24, 0x55	; 85
   1331c:	94 e1       	ldi	r25, 0x14	; 20
   1331e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13322:	f7 01       	movw	r30, r14
   13324:	ec 0d       	add	r30, r12
   13326:	fd 1d       	adc	r31, r13
   13328:	ec 57       	subi	r30, 0x7C	; 124
   1332a:	f2 4f       	sbci	r31, 0xF2	; 242
   1332c:	4a e0       	ldi	r20, 0x0A	; 10
   1332e:	50 e0       	ldi	r21, 0x00	; 0
   13330:	65 81       	ldd	r22, Z+5	; 0x05
   13332:	85 e5       	ldi	r24, 0x55	; 85
   13334:	94 e1       	ldi	r25, 0x14	; 20
   13336:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   1333a:	85 e5       	ldi	r24, 0x55	; 85
   1333c:	94 e1       	ldi	r25, 0x14	; 20
   1333e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13342:	ef ef       	ldi	r30, 0xFF	; 255
   13344:	ee 1a       	sub	r14, r30
   13346:	fe 0a       	sbc	r15, r30
   13348:	f5 e0       	ldi	r31, 0x05	; 5
   1334a:	ef 16       	cp	r14, r31
   1334c:	f1 04       	cpc	r15, r1
   1334e:	f9 f6       	brne	.-66     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xfd0>
   13350:	62 cf       	rjmp	.-316    	; 0x13216 <_Z12Pub_Sub_DataPcPhjh+0xed8>
   13352:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xdf>
   13356:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe0>
   1335a:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe1>
   1335e:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe2>
   13362:	d8 01       	movw	r26, r16
   13364:	1c 96       	adiw	r26, 0x0c	; 12
   13366:	8d 91       	ld	r24, X+
   13368:	9c 91       	ld	r25, X
   1336a:	1d 97       	sbiw	r26, 0x0d	; 13
   1336c:	00 97       	sbiw	r24, 0x00	; 0
   1336e:	e1 f0       	breq	.+56     	; 0x133a8 <_Z12Pub_Sub_DataPcPhjh+0x106a>
   13370:	52 96       	adiw	r26, 0x12	; 18
   13372:	6d 91       	ld	r22, X+
   13374:	7c 91       	ld	r23, X
   13376:	53 97       	sbiw	r26, 0x13	; 19
   13378:	40 e1       	ldi	r20, 0x10	; 16
   1337a:	5e e0       	ldi	r21, 0x0E	; 14
   1337c:	64 9f       	mul	r22, r20
   1337e:	90 01       	movw	r18, r0
   13380:	65 9f       	mul	r22, r21
   13382:	30 0d       	add	r19, r0
   13384:	74 9f       	mul	r23, r20
   13386:	30 0d       	add	r19, r0
   13388:	11 24       	eor	r1, r1
   1338a:	30 93 8b 0b 	sts	0x0B8B, r19	; 0x800b8b <_sSchedules+0x26d>
   1338e:	20 93 8a 0b 	sts	0x0B8A, r18	; 0x800b8a <_sSchedules+0x26c>
   13392:	4c e3       	ldi	r20, 0x3C	; 60
   13394:	48 9f       	mul	r20, r24
   13396:	90 01       	movw	r18, r0
   13398:	49 9f       	mul	r20, r25
   1339a:	30 0d       	add	r19, r0
   1339c:	11 24       	eor	r1, r1
   1339e:	30 93 8d 0b 	sts	0x0B8D, r19	; 0x800b8d <_sSchedules+0x26f>
   133a2:	20 93 8c 0b 	sts	0x0B8C, r18	; 0x800b8c <_sSchedules+0x26e>
   133a6:	08 c0       	rjmp	.+16     	; 0x133b8 <_Z12Pub_Sub_DataPcPhjh+0x107a>
   133a8:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   133ac:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
   133b0:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   133b4:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
   133b8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   133bc:	81 30       	cpi	r24, 0x01	; 1
   133be:	09 f0       	breq	.+2      	; 0x133c2 <_Z12Pub_Sub_DataPcPhjh+0x1084>
   133c0:	57 c0       	rjmp	.+174    	; 0x13470 <_Z12Pub_Sub_DataPcPhjh+0x1132>
   133c2:	8b e1       	ldi	r24, 0x1B	; 27
   133c4:	8e 9d       	mul	r24, r14
   133c6:	80 01       	movw	r16, r0
   133c8:	8f 9d       	mul	r24, r15
   133ca:	10 0d       	add	r17, r0
   133cc:	11 24       	eor	r1, r1
   133ce:	00 57       	subi	r16, 0x70	; 112
   133d0:	12 4f       	sbci	r17, 0xF2	; 242
   133d2:	22 e0       	ldi	r18, 0x02	; 2
   133d4:	d2 2e       	mov	r13, r18
   133d6:	85 e5       	ldi	r24, 0x55	; 85
   133d8:	94 e1       	ldi	r25, 0x14	; 20
   133da:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   133de:	64 e4       	ldi	r22, 0x44	; 68
   133e0:	76 e3       	ldi	r23, 0x36	; 54
   133e2:	85 e5       	ldi	r24, 0x55	; 85
   133e4:	94 e1       	ldi	r25, 0x14	; 20
   133e6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   133ea:	f8 01       	movw	r30, r16
   133ec:	61 91       	ld	r22, Z+
   133ee:	71 91       	ld	r23, Z+
   133f0:	8f 01       	movw	r16, r30
   133f2:	4a e0       	ldi	r20, 0x0A	; 10
   133f4:	50 e0       	ldi	r21, 0x00	; 0
   133f6:	85 e5       	ldi	r24, 0x55	; 85
   133f8:	94 e1       	ldi	r25, 0x14	; 20
   133fa:	0e 94 b8 d1 	call	0x1a370	; 0x1a370 <_ZN5Print5printEji>
   133fe:	85 e5       	ldi	r24, 0x55	; 85
   13400:	94 e1       	ldi	r25, 0x14	; 20
   13402:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   13406:	6d e3       	ldi	r22, 0x3D	; 61
   13408:	76 e3       	ldi	r23, 0x36	; 54
   1340a:	85 e5       	ldi	r24, 0x55	; 85
   1340c:	94 e1       	ldi	r25, 0x14	; 20
   1340e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13412:	d8 01       	movw	r26, r16
   13414:	14 96       	adiw	r26, 0x04	; 4
   13416:	6d 91       	ld	r22, X+
   13418:	7c 91       	ld	r23, X
   1341a:	15 97       	sbiw	r26, 0x05	; 5
   1341c:	4a e0       	ldi	r20, 0x0A	; 10
   1341e:	50 e0       	ldi	r21, 0x00	; 0
   13420:	85 e5       	ldi	r24, 0x55	; 85
   13422:	94 e1       	ldi	r25, 0x14	; 20
   13424:	0e 94 b8 d1 	call	0x1a370	; 0x1a370 <_ZN5Print5printEji>
   13428:	85 e5       	ldi	r24, 0x55	; 85
   1342a:	94 e1       	ldi	r25, 0x14	; 20
   1342c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13430:	da 94       	dec	r13
   13432:	d1 10       	cpse	r13, r1
   13434:	d0 cf       	rjmp	.-96     	; 0x133d6 <_Z12Pub_Sub_DataPcPhjh+0x1098>
   13436:	85 e5       	ldi	r24, 0x55	; 85
   13438:	94 e1       	ldi	r25, 0x14	; 20
   1343a:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   1343e:	61 e3       	ldi	r22, 0x31	; 49
   13440:	76 e3       	ldi	r23, 0x36	; 54
   13442:	85 e5       	ldi	r24, 0x55	; 85
   13444:	94 e1       	ldi	r25, 0x14	; 20
   13446:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1344a:	8b e1       	ldi	r24, 0x1B	; 27
   1344c:	8e 9d       	mul	r24, r14
   1344e:	f0 01       	movw	r30, r0
   13450:	8f 9d       	mul	r24, r15
   13452:	f0 0d       	add	r31, r0
   13454:	11 24       	eor	r1, r1
   13456:	ec 57       	subi	r30, 0x7C	; 124
   13458:	f2 4f       	sbci	r31, 0xF2	; 242
   1345a:	4a e0       	ldi	r20, 0x0A	; 10
   1345c:	50 e0       	ldi	r21, 0x00	; 0
   1345e:	60 8d       	ldd	r22, Z+24	; 0x18
   13460:	85 e5       	ldi	r24, 0x55	; 85
   13462:	94 e1       	ldi	r25, 0x14	; 20
   13464:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   13468:	85 e5       	ldi	r24, 0x55	; 85
   1346a:	94 e1       	ldi	r25, 0x14	; 20
   1346c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13470:	8c e9       	ldi	r24, 0x9C	; 156
   13472:	89 0d       	add	r24, r9
   13474:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   13478:	b1 e0       	ldi	r27, 0x01	; 1
   1347a:	c0 55       	subi	r28, 0x50	; 80
   1347c:	d9 4f       	sbci	r29, 0xF9	; 249
   1347e:	b8 83       	st	Y, r27
   13480:	c0 5b       	subi	r28, 0xB0	; 176
   13482:	d6 40       	sbci	r29, 0x06	; 6
   13484:	8e 01       	movw	r16, r28
   13486:	0b 57       	subi	r16, 0x7B	; 123
   13488:	19 4f       	sbci	r17, 0xF9	; 249
   1348a:	88 e2       	ldi	r24, 0x28	; 40
   1348c:	f8 01       	movw	r30, r16
   1348e:	11 92       	st	Z+, r1
   13490:	8a 95       	dec	r24
   13492:	e9 f7       	brne	.-6      	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0x1150>
   13494:	8a e6       	ldi	r24, 0x6A	; 106
   13496:	93 e1       	ldi	r25, 0x13	; 19
   13498:	9f 93       	push	r25
   1349a:	8f 93       	push	r24
   1349c:	8d e9       	ldi	r24, 0x9D	; 157
   1349e:	95 e0       	ldi	r25, 0x05	; 5
   134a0:	9f 93       	push	r25
   134a2:	8f 93       	push	r24
   134a4:	1f 93       	push	r17
   134a6:	0f 93       	push	r16
   134a8:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   134ac:	cd 54       	subi	r28, 0x4D	; 77
   134ae:	d9 4f       	sbci	r29, 0xF9	; 249
   134b0:	68 81       	ld	r22, Y
   134b2:	79 81       	ldd	r23, Y+1	; 0x01
   134b4:	c3 5b       	subi	r28, 0xB3	; 179
   134b6:	d6 40       	sbci	r29, 0x06	; 6
   134b8:	c8 01       	movw	r24, r16
   134ba:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   134be:	0f 90       	pop	r0
   134c0:	0f 90       	pop	r0
   134c2:	0f 90       	pop	r0
   134c4:	0f 90       	pop	r0
   134c6:	0f 90       	pop	r0
   134c8:	0f 90       	pop	r0
   134ca:	89 2b       	or	r24, r25
   134cc:	09 f0       	breq	.+2      	; 0x134d0 <_Z12Pub_Sub_DataPcPhjh+0x1192>
   134ce:	29 c2       	rjmp	.+1106   	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   134d0:	6c e2       	ldi	r22, 0x2C	; 44
   134d2:	76 e3       	ldi	r23, 0x36	; 54
   134d4:	c1 01       	movw	r24, r2
   134d6:	0e 94 11 8c 	call	0x11822	; 0x11822 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   134da:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   134de:	fc 01       	movw	r30, r24
   134e0:	31 97       	sbiw	r30, 0x01	; 1
   134e2:	e8 30       	cpi	r30, 0x08	; 8
   134e4:	f1 05       	cpc	r31, r1
   134e6:	08 f0       	brcs	.+2      	; 0x134ea <_Z12Pub_Sub_DataPcPhjh+0x11ac>
   134e8:	1c c2       	rjmp	.+1080   	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   134ea:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   134ee:	88 27       	eor	r24, r24
   134f0:	e1 51       	subi	r30, 0x11	; 17
   134f2:	ff 4f       	sbci	r31, 0xFF	; 255
   134f4:	8f 4f       	sbci	r24, 0xFF	; 255
   134f6:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
   134fa:	91 30       	cpi	r25, 0x01	; 1
   134fc:	51 f4       	brne	.+20     	; 0x13512 <_Z12Pub_Sub_DataPcPhjh+0x11d4>
   134fe:	66 e1       	ldi	r22, 0x16	; 22
   13500:	76 e3       	ldi	r23, 0x36	; 54
   13502:	85 e5       	ldi	r24, 0x55	; 85
   13504:	94 e1       	ldi	r25, 0x14	; 20
   13506:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1350a:	85 e5       	ldi	r24, 0x55	; 85
   1350c:	94 e1       	ldi	r25, 0x14	; 20
   1350e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13512:	62 e1       	ldi	r22, 0x12	; 18
   13514:	76 e3       	ldi	r23, 0x36	; 54
   13516:	c1 01       	movw	r24, r2
   13518:	0e 94 9a 8b 	call	0x11734	; 0x11734 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1351c:	bc 01       	movw	r22, r24
   1351e:	ce 01       	movw	r24, r28
   13520:	83 5a       	subi	r24, 0xA3	; 163
   13522:	99 4f       	sbci	r25, 0xF9	; 249
   13524:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   13528:	27 eb       	ldi	r18, 0xB7	; 183
   1352a:	3b e0       	ldi	r19, 0x0B	; 11
   1352c:	41 2c       	mov	r4, r1
   1352e:	51 2c       	mov	r5, r1
   13530:	94 2c       	mov	r9, r4
   13532:	fe 01       	movw	r30, r28
   13534:	e3 5a       	subi	r30, 0xA3	; 163
   13536:	f9 4f       	sbci	r31, 0xF9	; 249
   13538:	80 e0       	ldi	r24, 0x00	; 0
   1353a:	90 e0       	ldi	r25, 0x00	; 0
   1353c:	40 e0       	ldi	r20, 0x00	; 0
   1353e:	51 91       	ld	r21, Z+
   13540:	d9 01       	movw	r26, r18
   13542:	a8 0f       	add	r26, r24
   13544:	b9 1f       	adc	r27, r25
   13546:	11 96       	adiw	r26, 0x01	; 1
   13548:	6c 91       	ld	r22, X
   1354a:	65 13       	cpse	r22, r21
   1354c:	01 c0       	rjmp	.+2      	; 0x13550 <_Z12Pub_Sub_DataPcPhjh+0x1212>
   1354e:	4f 5f       	subi	r20, 0xFF	; 255
   13550:	01 96       	adiw	r24, 0x01	; 1
   13552:	86 30       	cpi	r24, 0x06	; 6
   13554:	91 05       	cpc	r25, r1
   13556:	99 f7       	brne	.-26     	; 0x1353e <_Z12Pub_Sub_DataPcPhjh+0x1200>
   13558:	c2 01       	movw	r24, r4
   1355a:	01 96       	adiw	r24, 0x01	; 1
   1355c:	7c 01       	movw	r14, r24
   1355e:	46 30       	cpi	r20, 0x06	; 6
   13560:	09 f0       	breq	.+2      	; 0x13564 <_Z12Pub_Sub_DataPcPhjh+0x1226>
   13562:	12 c1       	rjmp	.+548    	; 0x13788 <_Z12Pub_Sub_DataPcPhjh+0x144a>
   13564:	8d e0       	ldi	r24, 0x0D	; 13
   13566:	84 9d       	mul	r24, r4
   13568:	60 01       	movw	r12, r0
   1356a:	85 9d       	mul	r24, r5
   1356c:	d0 0c       	add	r13, r0
   1356e:	11 24       	eor	r1, r1
   13570:	d6 01       	movw	r26, r12
   13572:	a8 54       	subi	r26, 0x48	; 72
   13574:	b4 4f       	sbci	r27, 0xF4	; 244
   13576:	5d 01       	movw	r10, r26
   13578:	63 e1       	ldi	r22, 0x13	; 19
   1357a:	77 e0       	ldi	r23, 0x07	; 7
   1357c:	cd 01       	movw	r24, r26
   1357e:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   13582:	27 e0       	ldi	r18, 0x07	; 7
   13584:	24 9d       	mul	r18, r4
   13586:	c0 01       	movw	r24, r0
   13588:	25 9d       	mul	r18, r5
   1358a:	90 0d       	add	r25, r0
   1358c:	11 24       	eor	r1, r1
   1358e:	b5 01       	movw	r22, r10
   13590:	87 55       	subi	r24, 0x57	; 87
   13592:	9c 4e       	sbci	r25, 0xEC	; 236
   13594:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   13598:	f6 01       	movw	r30, r12
   1359a:	e9 54       	subi	r30, 0x49	; 73
   1359c:	f4 4f       	sbci	r31, 0xF4	; 244
   1359e:	6f 01       	movw	r12, r30
   135a0:	10 82       	st	Z, r1
   135a2:	8f ef       	ldi	r24, 0xFF	; 255
   135a4:	90 e0       	ldi	r25, 0x00	; 0
   135a6:	91 87       	std	Z+9, r25	; 0x09
   135a8:	80 87       	std	Z+8, r24	; 0x08
   135aa:	81 e0       	ldi	r24, 0x01	; 1
   135ac:	83 87       	std	Z+11, r24	; 0x0b
   135ae:	12 86       	std	Z+10, r1	; 0x0a
   135b0:	14 86       	std	Z+12, r1	; 0x0c
   135b2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   135b6:	81 30       	cpi	r24, 0x01	; 1
   135b8:	79 f5       	brne	.+94     	; 0x13618 <_Z12Pub_Sub_DataPcPhjh+0x12da>
   135ba:	67 ef       	ldi	r22, 0xF7	; 247
   135bc:	75 e3       	ldi	r23, 0x35	; 53
   135be:	85 e5       	ldi	r24, 0x55	; 85
   135c0:	94 e1       	ldi	r25, 0x14	; 20
   135c2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   135c6:	85 e5       	ldi	r24, 0x55	; 85
   135c8:	94 e1       	ldi	r25, 0x14	; 20
   135ca:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   135ce:	6c ee       	ldi	r22, 0xEC	; 236
   135d0:	75 e3       	ldi	r23, 0x35	; 53
   135d2:	85 e5       	ldi	r24, 0x55	; 85
   135d4:	94 e1       	ldi	r25, 0x14	; 20
   135d6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   135da:	85 e5       	ldi	r24, 0x55	; 85
   135dc:	94 e1       	ldi	r25, 0x14	; 20
   135de:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   135e2:	4a e0       	ldi	r20, 0x0A	; 10
   135e4:	50 e0       	ldi	r21, 0x00	; 0
   135e6:	d6 01       	movw	r26, r12
   135e8:	6c 91       	ld	r22, X
   135ea:	85 e5       	ldi	r24, 0x55	; 85
   135ec:	94 e1       	ldi	r25, 0x14	; 20
   135ee:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   135f2:	61 ee       	ldi	r22, 0xE1	; 225
   135f4:	75 e3       	ldi	r23, 0x35	; 53
   135f6:	85 e5       	ldi	r24, 0x55	; 85
   135f8:	94 e1       	ldi	r25, 0x14	; 20
   135fa:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   135fe:	85 e5       	ldi	r24, 0x55	; 85
   13600:	94 e1       	ldi	r25, 0x14	; 20
   13602:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13606:	b5 01       	movw	r22, r10
   13608:	85 e5       	ldi	r24, 0x55	; 85
   1360a:	94 e1       	ldi	r25, 0x14	; 20
   1360c:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   13610:	85 e5       	ldi	r24, 0x55	; 85
   13612:	94 e1       	ldi	r25, 0x14	; 20
   13614:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13618:	89 2d       	mov	r24, r9
   1361a:	0e 94 24 5a 	call	0xb448	; 0xb448 <_Z16Euro_Data_EEPROMh>
   1361e:	b5 e0       	ldi	r27, 0x05	; 5
   13620:	4b 0e       	add	r4, r27
   13622:	51 1c       	adc	r5, r1
   13624:	57 01       	movw	r10, r14
   13626:	80 e0       	ldi	r24, 0x00	; 0
   13628:	68 2e       	mov	r6, r24
   1362a:	8d e0       	ldi	r24, 0x0D	; 13
   1362c:	78 2e       	mov	r7, r24
   1362e:	cc 24       	eor	r12, r12
   13630:	c3 94       	inc	r12
   13632:	d1 2c       	mov	r13, r1
   13634:	ef ef       	ldi	r30, 0xFF	; 255
   13636:	ec 0d       	add	r30, r12
   13638:	cf 54       	subi	r28, 0x4F	; 79
   1363a:	d9 4f       	sbci	r29, 0xF9	; 249
   1363c:	e8 83       	st	Y, r30
   1363e:	c1 5b       	subi	r28, 0xB1	; 177
   13640:	d6 40       	sbci	r29, 0x06	; 6
   13642:	43 01       	movw	r8, r6
   13644:	f5 e0       	ldi	r31, 0x05	; 5
   13646:	c0 55       	subi	r28, 0x50	; 80
   13648:	d9 4f       	sbci	r29, 0xF9	; 249
   1364a:	f8 83       	st	Y, r31
   1364c:	c0 5b       	subi	r28, 0xB0	; 176
   1364e:	d6 40       	sbci	r29, 0x06	; 6
   13650:	d4 01       	movw	r26, r8
   13652:	11 96       	adiw	r26, 0x01	; 1
   13654:	8c 91       	ld	r24, X
   13656:	11 97       	sbiw	r26, 0x01	; 1
   13658:	88 23       	and	r24, r24
   1365a:	31 f1       	breq	.+76     	; 0x136a8 <_Z12Pub_Sub_DataPcPhjh+0x136a>
   1365c:	90 e0       	ldi	r25, 0x00	; 0
   1365e:	8a 15       	cp	r24, r10
   13660:	9b 05       	cpc	r25, r11
   13662:	11 f5       	brne	.+68     	; 0x136a8 <_Z12Pub_Sub_DataPcPhjh+0x136a>
   13664:	11 96       	adiw	r26, 0x01	; 1
   13666:	1c 92       	st	X, r1
   13668:	cf 54       	subi	r28, 0x4F	; 79
   1366a:	d9 4f       	sbci	r29, 0xF9	; 249
   1366c:	88 81       	ld	r24, Y
   1366e:	c1 5b       	subi	r28, 0xB1	; 177
   13670:	d6 40       	sbci	r29, 0x06	; 6
   13672:	0e 94 86 7d 	call	0xfb0c	; 0xfb0c <_Z16Lira_Data_EEPROMh>
   13676:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1367a:	81 30       	cpi	r24, 0x01	; 1
   1367c:	a9 f4       	brne	.+42     	; 0x136a8 <_Z12Pub_Sub_DataPcPhjh+0x136a>
   1367e:	64 ec       	ldi	r22, 0xC4	; 196
   13680:	75 e3       	ldi	r23, 0x35	; 53
   13682:	85 e5       	ldi	r24, 0x55	; 85
   13684:	94 e1       	ldi	r25, 0x14	; 20
   13686:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1368a:	85 e5       	ldi	r24, 0x55	; 85
   1368c:	94 e1       	ldi	r25, 0x14	; 20
   1368e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13692:	4a e0       	ldi	r20, 0x0A	; 10
   13694:	50 e0       	ldi	r21, 0x00	; 0
   13696:	b6 01       	movw	r22, r12
   13698:	85 e5       	ldi	r24, 0x55	; 85
   1369a:	94 e1       	ldi	r25, 0x14	; 20
   1369c:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   136a0:	85 e5       	ldi	r24, 0x55	; 85
   136a2:	94 e1       	ldi	r25, 0x14	; 20
   136a4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   136a8:	c0 55       	subi	r28, 0x50	; 80
   136aa:	d9 4f       	sbci	r29, 0xF9	; 249
   136ac:	b8 81       	ld	r27, Y
   136ae:	c0 5b       	subi	r28, 0xB0	; 176
   136b0:	d6 40       	sbci	r29, 0x06	; 6
   136b2:	b1 50       	subi	r27, 0x01	; 1
   136b4:	c0 55       	subi	r28, 0x50	; 80
   136b6:	d9 4f       	sbci	r29, 0xF9	; 249
   136b8:	b8 83       	st	Y, r27
   136ba:	c0 5b       	subi	r28, 0xB0	; 176
   136bc:	d6 40       	sbci	r29, 0x06	; 6
   136be:	ef ef       	ldi	r30, 0xFF	; 255
   136c0:	8e 1a       	sub	r8, r30
   136c2:	9e 0a       	sbc	r9, r30
   136c4:	b1 11       	cpse	r27, r1
   136c6:	c4 cf       	rjmp	.-120    	; 0x13650 <_Z12Pub_Sub_DataPcPhjh+0x1312>
   136c8:	ff ef       	ldi	r31, 0xFF	; 255
   136ca:	cf 1a       	sub	r12, r31
   136cc:	df 0a       	sbc	r13, r31
   136ce:	26 e0       	ldi	r18, 0x06	; 6
   136d0:	62 0e       	add	r6, r18
   136d2:	71 1c       	adc	r7, r1
   136d4:	3f e0       	ldi	r19, 0x0F	; 15
   136d6:	c3 16       	cp	r12, r19
   136d8:	d1 04       	cpc	r13, r1
   136da:	09 f0       	breq	.+2      	; 0x136de <_Z12Pub_Sub_DataPcPhjh+0x13a0>
   136dc:	ab cf       	rjmp	.-170    	; 0x13634 <_Z12Pub_Sub_DataPcPhjh+0x12f6>
   136de:	4f ef       	ldi	r20, 0xFF	; 255
   136e0:	a4 1a       	sub	r10, r20
   136e2:	b4 0a       	sbc	r11, r20
   136e4:	4a 14       	cp	r4, r10
   136e6:	5b 04       	cpc	r5, r11
   136e8:	09 f0       	breq	.+2      	; 0x136ec <_Z12Pub_Sub_DataPcPhjh+0x13ae>
   136ea:	9d cf       	rjmp	.-198    	; 0x13626 <_Z12Pub_Sub_DataPcPhjh+0x12e8>
   136ec:	a4 e8       	ldi	r26, 0x84	; 132
   136ee:	8a 2e       	mov	r8, r26
   136f0:	ad e0       	ldi	r26, 0x0D	; 13
   136f2:	9a 2e       	mov	r9, r26
   136f4:	cc 24       	eor	r12, r12
   136f6:	c3 94       	inc	r12
   136f8:	d1 2c       	mov	r13, r1
   136fa:	54 01       	movw	r10, r8
   136fc:	f5 e0       	ldi	r31, 0x05	; 5
   136fe:	7f 2e       	mov	r7, r31
   13700:	d5 01       	movw	r26, r10
   13702:	15 96       	adiw	r26, 0x05	; 5
   13704:	8c 91       	ld	r24, X
   13706:	15 97       	sbiw	r26, 0x05	; 5
   13708:	88 23       	and	r24, r24
   1370a:	11 f1       	breq	.+68     	; 0x13750 <_Z12Pub_Sub_DataPcPhjh+0x1412>
   1370c:	90 e0       	ldi	r25, 0x00	; 0
   1370e:	8e 15       	cp	r24, r14
   13710:	9f 05       	cpc	r25, r15
   13712:	f1 f4       	brne	.+60     	; 0x13750 <_Z12Pub_Sub_DataPcPhjh+0x1412>
   13714:	15 96       	adiw	r26, 0x05	; 5
   13716:	1c 92       	st	X, r1
   13718:	8c 2d       	mov	r24, r12
   1371a:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   1371e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13722:	81 30       	cpi	r24, 0x01	; 1
   13724:	a9 f4       	brne	.+42     	; 0x13750 <_Z12Pub_Sub_DataPcPhjh+0x1412>
   13726:	67 ea       	ldi	r22, 0xA7	; 167
   13728:	75 e3       	ldi	r23, 0x35	; 53
   1372a:	85 e5       	ldi	r24, 0x55	; 85
   1372c:	94 e1       	ldi	r25, 0x14	; 20
   1372e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13732:	85 e5       	ldi	r24, 0x55	; 85
   13734:	94 e1       	ldi	r25, 0x14	; 20
   13736:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1373a:	4a e0       	ldi	r20, 0x0A	; 10
   1373c:	50 e0       	ldi	r21, 0x00	; 0
   1373e:	b6 01       	movw	r22, r12
   13740:	85 e5       	ldi	r24, 0x55	; 85
   13742:	94 e1       	ldi	r25, 0x14	; 20
   13744:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   13748:	85 e5       	ldi	r24, 0x55	; 85
   1374a:	94 e1       	ldi	r25, 0x14	; 20
   1374c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13750:	7a 94       	dec	r7
   13752:	bf ef       	ldi	r27, 0xFF	; 255
   13754:	ab 1a       	sub	r10, r27
   13756:	bb 0a       	sbc	r11, r27
   13758:	71 10       	cpse	r7, r1
   1375a:	d2 cf       	rjmp	.-92     	; 0x13700 <_Z12Pub_Sub_DataPcPhjh+0x13c2>
   1375c:	ef ef       	ldi	r30, 0xFF	; 255
   1375e:	ce 1a       	sub	r12, r30
   13760:	de 0a       	sbc	r13, r30
   13762:	fb e1       	ldi	r31, 0x1B	; 27
   13764:	8f 0e       	add	r8, r31
   13766:	91 1c       	adc	r9, r1
   13768:	2f e0       	ldi	r18, 0x0F	; 15
   1376a:	c2 16       	cp	r12, r18
   1376c:	d1 04       	cpc	r13, r1
   1376e:	29 f6       	brne	.-118    	; 0x136fa <_Z12Pub_Sub_DataPcPhjh+0x13bc>
   13770:	3f ef       	ldi	r19, 0xFF	; 255
   13772:	e3 1a       	sub	r14, r19
   13774:	f3 0a       	sbc	r15, r19
   13776:	4e 14       	cp	r4, r14
   13778:	5f 04       	cpc	r5, r15
   1377a:	09 f0       	breq	.+2      	; 0x1377e <_Z12Pub_Sub_DataPcPhjh+0x1440>
   1377c:	b7 cf       	rjmp	.-146    	; 0x136ec <_Z12Pub_Sub_DataPcPhjh+0x13ae>
   1377e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13782:	81 30       	cpi	r24, 0x01	; 1
   13784:	51 f5       	brne	.+84     	; 0x137da <_Z12Pub_Sub_DataPcPhjh+0x149c>
   13786:	07 c0       	rjmp	.+14     	; 0x13796 <_Z12Pub_Sub_DataPcPhjh+0x1458>
   13788:	2c 01       	movw	r4, r24
   1378a:	23 5f       	subi	r18, 0xF3	; 243
   1378c:	3f 4f       	sbci	r19, 0xFF	; 255
   1378e:	07 97       	sbiw	r24, 0x07	; 7
   13790:	09 f0       	breq	.+2      	; 0x13794 <_Z12Pub_Sub_DataPcPhjh+0x1456>
   13792:	ce ce       	rjmp	.-612    	; 0x13530 <_Z12Pub_Sub_DataPcPhjh+0x11f2>
   13794:	f4 cf       	rjmp	.-24     	; 0x1377e <_Z12Pub_Sub_DataPcPhjh+0x1440>
   13796:	e1 2c       	mov	r14, r1
   13798:	f1 2c       	mov	r15, r1
   1379a:	85 e5       	ldi	r24, 0x55	; 85
   1379c:	94 e1       	ldi	r25, 0x14	; 20
   1379e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   137a2:	6c e9       	ldi	r22, 0x9C	; 156
   137a4:	75 e3       	ldi	r23, 0x35	; 53
   137a6:	85 e5       	ldi	r24, 0x55	; 85
   137a8:	94 e1       	ldi	r25, 0x14	; 20
   137aa:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   137ae:	85 e5       	ldi	r24, 0x55	; 85
   137b0:	94 e1       	ldi	r25, 0x14	; 20
   137b2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   137b6:	b7 01       	movw	r22, r14
   137b8:	68 54       	subi	r22, 0x48	; 72
   137ba:	74 4f       	sbci	r23, 0xF4	; 244
   137bc:	85 e5       	ldi	r24, 0x55	; 85
   137be:	94 e1       	ldi	r25, 0x14	; 20
   137c0:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   137c4:	85 e5       	ldi	r24, 0x55	; 85
   137c6:	94 e1       	ldi	r25, 0x14	; 20
   137c8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   137cc:	8d e0       	ldi	r24, 0x0D	; 13
   137ce:	e8 0e       	add	r14, r24
   137d0:	f1 1c       	adc	r15, r1
   137d2:	9b e5       	ldi	r25, 0x5B	; 91
   137d4:	e9 16       	cp	r14, r25
   137d6:	f1 04       	cpc	r15, r1
   137d8:	01 f7       	brne	.-64     	; 0x1379a <_Z12Pub_Sub_DataPcPhjh+0x145c>
   137da:	51 e0       	ldi	r21, 0x01	; 1
   137dc:	c0 55       	subi	r28, 0x50	; 80
   137de:	d9 4f       	sbci	r29, 0xF9	; 249
   137e0:	58 83       	st	Y, r21
   137e2:	c0 5b       	subi	r28, 0xB0	; 176
   137e4:	d6 40       	sbci	r29, 0x06	; 6
   137e6:	9d c0       	rjmp	.+314    	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   137e8:	91 30       	cpi	r25, 0x01	; 1
   137ea:	51 f4       	brne	.+20     	; 0x13800 <_Z12Pub_Sub_DataPcPhjh+0x14c2>
   137ec:	67 e8       	ldi	r22, 0x87	; 135
   137ee:	75 e3       	ldi	r23, 0x35	; 53
   137f0:	85 e5       	ldi	r24, 0x55	; 85
   137f2:	94 e1       	ldi	r25, 0x14	; 20
   137f4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   137f8:	85 e5       	ldi	r24, 0x55	; 85
   137fa:	94 e1       	ldi	r25, 0x14	; 20
   137fc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13800:	6e e7       	ldi	r22, 0x7E	; 126
   13802:	75 e3       	ldi	r23, 0x35	; 53
   13804:	c1 01       	movw	r24, r2
   13806:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1380a:	90 e0       	ldi	r25, 0x00	; 0
   1380c:	01 97       	sbiw	r24, 0x01	; 1
   1380e:	26 e0       	ldi	r18, 0x06	; 6
   13810:	28 9f       	mul	r18, r24
   13812:	f0 01       	movw	r30, r0
   13814:	29 9f       	mul	r18, r25
   13816:	f0 0d       	add	r31, r0
   13818:	11 24       	eor	r1, r1
   1381a:	e0 50       	subi	r30, 0x00	; 0
   1381c:	f3 4f       	sbci	r31, 0xF3	; 243
   1381e:	10 82       	st	Z, r1
   13820:	80 c0       	rjmp	.+256    	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   13822:	91 30       	cpi	r25, 0x01	; 1
   13824:	51 f4       	brne	.+20     	; 0x1383a <_Z12Pub_Sub_DataPcPhjh+0x14fc>
   13826:	60 e6       	ldi	r22, 0x60	; 96
   13828:	75 e3       	ldi	r23, 0x35	; 53
   1382a:	85 e5       	ldi	r24, 0x55	; 85
   1382c:	94 e1       	ldi	r25, 0x14	; 20
   1382e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13832:	85 e5       	ldi	r24, 0x55	; 85
   13834:	94 e1       	ldi	r25, 0x14	; 20
   13836:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1383a:	66 e5       	ldi	r22, 0x56	; 86
   1383c:	75 e3       	ldi	r23, 0x35	; 53
   1383e:	c1 01       	movw	r24, r2
   13840:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13844:	0e 94 ed 31 	call	0x63da	; 0x63da <_Z15Delete_Scheduleh>
   13848:	6c c0       	rjmp	.+216    	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   1384a:	91 30       	cpi	r25, 0x01	; 1
   1384c:	51 f4       	brne	.+20     	; 0x13862 <_Z12Pub_Sub_DataPcPhjh+0x1524>
   1384e:	6b e3       	ldi	r22, 0x3B	; 59
   13850:	75 e3       	ldi	r23, 0x35	; 53
   13852:	85 e5       	ldi	r24, 0x55	; 85
   13854:	94 e1       	ldi	r25, 0x14	; 20
   13856:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1385a:	85 e5       	ldi	r24, 0x55	; 85
   1385c:	94 e1       	ldi	r25, 0x14	; 20
   1385e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13862:	62 e3       	ldi	r22, 0x32	; 50
   13864:	75 e3       	ldi	r23, 0x35	; 53
   13866:	c1 01       	movw	r24, r2
   13868:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1386c:	85 56       	subi	r24, 0x65	; 101
   1386e:	ab e1       	ldi	r26, 0x1B	; 27
   13870:	8a 9f       	mul	r24, r26
   13872:	f0 01       	movw	r30, r0
   13874:	11 24       	eor	r1, r1
   13876:	ec 57       	subi	r30, 0x7C	; 124
   13878:	f2 4f       	sbci	r31, 0xF2	; 242
   1387a:	11 8e       	std	Z+25, r1	; 0x19
   1387c:	11 82       	std	Z+1, r1	; 0x01
   1387e:	13 8a       	std	Z+19, r1	; 0x13
   13880:	12 8a       	std	Z+18, r1	; 0x12
   13882:	15 8a       	std	Z+21, r1	; 0x15
   13884:	14 8a       	std	Z+20, r1	; 0x14
   13886:	17 8a       	std	Z+23, r1	; 0x17
   13888:	16 8a       	std	Z+22, r1	; 0x16
   1388a:	15 86       	std	Z+13, r1	; 0x0d
   1388c:	14 86       	std	Z+12, r1	; 0x0c
   1388e:	17 86       	std	Z+15, r1	; 0x0f
   13890:	16 86       	std	Z+14, r1	; 0x0e
   13892:	10 82       	st	Z, r1
   13894:	12 86       	std	Z+10, r1	; 0x0a
   13896:	12 8e       	std	Z+26, r1	; 0x1a
   13898:	14 82       	std	Z+4, r1	; 0x04
   1389a:	13 82       	std	Z+3, r1	; 0x03
   1389c:	10 8e       	std	Z+24, r1	; 0x18
   1389e:	13 86       	std	Z+11, r1	; 0x0b
   138a0:	12 82       	std	Z+2, r1	; 0x02
   138a2:	3f c0       	rjmp	.+126    	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   138a4:	91 30       	cpi	r25, 0x01	; 1
   138a6:	51 f4       	brne	.+20     	; 0x138bc <_Z12Pub_Sub_DataPcPhjh+0x157e>
   138a8:	6a e1       	ldi	r22, 0x1A	; 26
   138aa:	75 e3       	ldi	r23, 0x35	; 53
   138ac:	85 e5       	ldi	r24, 0x55	; 85
   138ae:	94 e1       	ldi	r25, 0x14	; 20
   138b0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   138b4:	85 e5       	ldi	r24, 0x55	; 85
   138b6:	94 e1       	ldi	r25, 0x14	; 20
   138b8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   138bc:	81 e0       	ldi	r24, 0x01	; 1
   138be:	80 93 87 0b 	sts	0x0B87, r24	; 0x800b87 <_sSchedules+0x269>
   138c2:	0e c0       	rjmp	.+28     	; 0x138e0 <_Z12Pub_Sub_DataPcPhjh+0x15a2>
   138c4:	91 30       	cpi	r25, 0x01	; 1
   138c6:	51 f4       	brne	.+20     	; 0x138dc <_Z12Pub_Sub_DataPcPhjh+0x159e>
   138c8:	61 e0       	ldi	r22, 0x01	; 1
   138ca:	75 e3       	ldi	r23, 0x35	; 53
   138cc:	85 e5       	ldi	r24, 0x55	; 85
   138ce:	94 e1       	ldi	r25, 0x14	; 20
   138d0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   138d4:	85 e5       	ldi	r24, 0x55	; 85
   138d6:	94 e1       	ldi	r25, 0x14	; 20
   138d8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   138dc:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
   138e0:	0e 94 fe 84 	call	0x109fc	; 0x109fc <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   138e4:	1e c0       	rjmp	.+60     	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   138e6:	91 30       	cpi	r25, 0x01	; 1
   138e8:	51 f4       	brne	.+20     	; 0x138fe <_Z12Pub_Sub_DataPcPhjh+0x15c0>
   138ea:	6d ee       	ldi	r22, 0xED	; 237
   138ec:	74 e3       	ldi	r23, 0x34	; 52
   138ee:	85 e5       	ldi	r24, 0x55	; 85
   138f0:	94 e1       	ldi	r25, 0x14	; 20
   138f2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   138f6:	85 e5       	ldi	r24, 0x55	; 85
   138f8:	94 e1       	ldi	r25, 0x14	; 20
   138fa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   138fe:	81 e0       	ldi	r24, 0x01	; 1
   13900:	80 93 30 14 	sts	0x1430, r24	; 0x801430 <_sRuble_Parameters+0xe6>
   13904:	0e c0       	rjmp	.+28     	; 0x13922 <_Z12Pub_Sub_DataPcPhjh+0x15e4>
   13906:	91 30       	cpi	r25, 0x01	; 1
   13908:	51 f4       	brne	.+20     	; 0x1391e <_Z12Pub_Sub_DataPcPhjh+0x15e0>
   1390a:	62 ed       	ldi	r22, 0xD2	; 210
   1390c:	74 e3       	ldi	r23, 0x34	; 52
   1390e:	85 e5       	ldi	r24, 0x55	; 85
   13910:	94 e1       	ldi	r25, 0x14	; 20
   13912:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13916:	85 e5       	ldi	r24, 0x55	; 85
   13918:	94 e1       	ldi	r25, 0x14	; 20
   1391a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1391e:	10 92 30 14 	sts	0x1430, r1	; 0x801430 <_sRuble_Parameters+0xe6>
   13922:	88 e2       	ldi	r24, 0x28	; 40
   13924:	f8 01       	movw	r30, r16
   13926:	11 92       	st	Z+, r1
   13928:	8a 95       	dec	r24
   1392a:	e9 f7       	brne	.-6      	; 0x13926 <_Z12Pub_Sub_DataPcPhjh+0x15e8>
   1392c:	8a e6       	ldi	r24, 0x6A	; 106
   1392e:	93 e1       	ldi	r25, 0x13	; 19
   13930:	9f 93       	push	r25
   13932:	8f 93       	push	r24
   13934:	89 e0       	ldi	r24, 0x09	; 9
   13936:	96 e0       	ldi	r25, 0x06	; 6
   13938:	9f 93       	push	r25
   1393a:	8f 93       	push	r24
   1393c:	1f 93       	push	r17
   1393e:	0f 93       	push	r16
   13940:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   13944:	cd 54       	subi	r28, 0x4D	; 77
   13946:	d9 4f       	sbci	r29, 0xF9	; 249
   13948:	68 81       	ld	r22, Y
   1394a:	79 81       	ldd	r23, Y+1	; 0x01
   1394c:	c3 5b       	subi	r28, 0xB3	; 179
   1394e:	d6 40       	sbci	r29, 0x06	; 6
   13950:	c8 01       	movw	r24, r16
   13952:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   13956:	0f 90       	pop	r0
   13958:	0f 90       	pop	r0
   1395a:	0f 90       	pop	r0
   1395c:	0f 90       	pop	r0
   1395e:	0f 90       	pop	r0
   13960:	0f 90       	pop	r0
   13962:	89 2b       	or	r24, r25
   13964:	09 f0       	breq	.+2      	; 0x13968 <_Z12Pub_Sub_DataPcPhjh+0x162a>
   13966:	53 c0       	rjmp	.+166    	; 0x13a0e <_Z12Pub_Sub_DataPcPhjh+0x16d0>
   13968:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   1396c:	6e ec       	ldi	r22, 0xCE	; 206
   1396e:	74 e3       	ldi	r23, 0x34	; 52
   13970:	c1 01       	movw	r24, r2
   13972:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13976:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1397a:	81 30       	cpi	r24, 0x01	; 1
   1397c:	69 f5       	brne	.+90     	; 0x139d8 <_Z12Pub_Sub_DataPcPhjh+0x169a>
   1397e:	91 30       	cpi	r25, 0x01	; 1
   13980:	51 f4       	brne	.+20     	; 0x13996 <_Z12Pub_Sub_DataPcPhjh+0x1658>
   13982:	61 ec       	ldi	r22, 0xC1	; 193
   13984:	74 e3       	ldi	r23, 0x34	; 52
   13986:	85 e5       	ldi	r24, 0x55	; 85
   13988:	94 e1       	ldi	r25, 0x14	; 20
   1398a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1398e:	85 e5       	ldi	r24, 0x55	; 85
   13990:	94 e1       	ldi	r25, 0x14	; 20
   13992:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13996:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1399a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1399e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   139a2:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   139a6:	a0 68       	ori	r26, 0x80	; 128
   139a8:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   139ac:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   139b0:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   139b4:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   139b8:	88 e0       	ldi	r24, 0x08	; 8
   139ba:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0xad>
   139be:	67 ef       	ldi	r22, 0xF7	; 247
   139c0:	73 e1       	ldi	r23, 0x13	; 19
   139c2:	88 e1       	ldi	r24, 0x18	; 24
   139c4:	95 e0       	ldi	r25, 0x05	; 5
   139c6:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   139ca:	f1 e0       	ldi	r31, 0x01	; 1
   139cc:	c0 55       	subi	r28, 0x50	; 80
   139ce:	d9 4f       	sbci	r29, 0xF9	; 249
   139d0:	f8 83       	st	Y, r31
   139d2:	c0 5b       	subi	r28, 0xB0	; 176
   139d4:	d6 40       	sbci	r29, 0x06	; 6
   139d6:	1b c0       	rjmp	.+54     	; 0x13a0e <_Z12Pub_Sub_DataPcPhjh+0x16d0>
   139d8:	91 30       	cpi	r25, 0x01	; 1
   139da:	51 f4       	brne	.+20     	; 0x139f0 <_Z12Pub_Sub_DataPcPhjh+0x16b2>
   139dc:	63 eb       	ldi	r22, 0xB3	; 179
   139de:	74 e3       	ldi	r23, 0x34	; 52
   139e0:	85 e5       	ldi	r24, 0x55	; 85
   139e2:	94 e1       	ldi	r25, 0x14	; 20
   139e4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   139e8:	85 e5       	ldi	r24, 0x55	; 85
   139ea:	94 e1       	ldi	r25, 0x14	; 20
   139ec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   139f0:	89 e0       	ldi	r24, 0x09	; 9
   139f2:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0xad>
   139f6:	67 ef       	ldi	r22, 0xF7	; 247
   139f8:	73 e1       	ldi	r23, 0x13	; 19
   139fa:	88 e1       	ldi	r24, 0x18	; 24
   139fc:	95 e0       	ldi	r25, 0x05	; 5
   139fe:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13a02:	21 e0       	ldi	r18, 0x01	; 1
   13a04:	c0 55       	subi	r28, 0x50	; 80
   13a06:	d9 4f       	sbci	r29, 0xF9	; 249
   13a08:	28 83       	st	Y, r18
   13a0a:	c0 5b       	subi	r28, 0xB0	; 176
   13a0c:	d6 40       	sbci	r29, 0x06	; 6
   13a0e:	88 e2       	ldi	r24, 0x28	; 40
   13a10:	d8 01       	movw	r26, r16
   13a12:	1d 92       	st	X+, r1
   13a14:	8a 95       	dec	r24
   13a16:	e9 f7       	brne	.-6      	; 0x13a12 <_Z12Pub_Sub_DataPcPhjh+0x16d4>
   13a18:	8a e6       	ldi	r24, 0x6A	; 106
   13a1a:	93 e1       	ldi	r25, 0x13	; 19
   13a1c:	9f 93       	push	r25
   13a1e:	8f 93       	push	r24
   13a20:	82 e3       	ldi	r24, 0x32	; 50
   13a22:	96 e0       	ldi	r25, 0x06	; 6
   13a24:	9f 93       	push	r25
   13a26:	8f 93       	push	r24
   13a28:	1f 93       	push	r17
   13a2a:	0f 93       	push	r16
   13a2c:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   13a30:	cd 54       	subi	r28, 0x4D	; 77
   13a32:	d9 4f       	sbci	r29, 0xF9	; 249
   13a34:	68 81       	ld	r22, Y
   13a36:	79 81       	ldd	r23, Y+1	; 0x01
   13a38:	c3 5b       	subi	r28, 0xB3	; 179
   13a3a:	d6 40       	sbci	r29, 0x06	; 6
   13a3c:	c8 01       	movw	r24, r16
   13a3e:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   13a42:	0f 90       	pop	r0
   13a44:	0f 90       	pop	r0
   13a46:	0f 90       	pop	r0
   13a48:	0f 90       	pop	r0
   13a4a:	0f 90       	pop	r0
   13a4c:	0f 90       	pop	r0
   13a4e:	89 2b       	or	r24, r25
   13a50:	09 f0       	breq	.+2      	; 0x13a54 <_Z12Pub_Sub_DataPcPhjh+0x1716>
   13a52:	46 c1       	rjmp	.+652    	; 0x13ce0 <_Z12Pub_Sub_DataPcPhjh+0x19a2>
   13a54:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
   13a58:	86 34       	cpi	r24, 0x46	; 70
   13a5a:	10 f4       	brcc	.+4      	; 0x13a60 <_Z12Pub_Sub_DataPcPhjh+0x1722>
   13a5c:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13a60:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13a64:	81 30       	cpi	r24, 0x01	; 1
   13a66:	51 f4       	brne	.+20     	; 0x13a7c <_Z12Pub_Sub_DataPcPhjh+0x173e>
   13a68:	61 e9       	ldi	r22, 0x91	; 145
   13a6a:	74 e3       	ldi	r23, 0x34	; 52
   13a6c:	85 e5       	ldi	r24, 0x55	; 85
   13a6e:	94 e1       	ldi	r25, 0x14	; 20
   13a70:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13a74:	85 e5       	ldi	r24, 0x55	; 85
   13a76:	94 e1       	ldi	r25, 0x14	; 20
   13a78:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13a7c:	6d e8       	ldi	r22, 0x8D	; 141
   13a7e:	74 e3       	ldi	r23, 0x34	; 52
   13a80:	c1 01       	movw	r24, r2
   13a82:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13a86:	80 93 33 0b 	sts	0x0B33, r24	; 0x800b33 <_sSchedules+0x215>
   13a8a:	81 e0       	ldi	r24, 0x01	; 1
   13a8c:	80 93 3b 0b 	sts	0x0B3B, r24	; 0x800b3b <_sSchedules+0x21d>
   13a90:	10 92 34 0b 	sts	0x0B34, r1	; 0x800b34 <_sSchedules+0x216>
   13a94:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <_sSchedules+0x218>
   13a98:	10 92 89 0b 	sts	0x0B89, r1	; 0x800b89 <_sSchedules+0x26b>
   13a9c:	68 e8       	ldi	r22, 0x88	; 136
   13a9e:	74 e3       	ldi	r23, 0x34	; 52
   13aa0:	c1 01       	movw	r24, r2
   13aa2:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13aa6:	60 e0       	ldi	r22, 0x00	; 0
   13aa8:	70 e0       	ldi	r23, 0x00	; 0
   13aaa:	0e 94 6d 87 	call	0x10eda	; 0x10eda <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13aae:	60 93 37 0b 	sts	0x0B37, r22	; 0x800b37 <_sSchedules+0x219>
   13ab2:	70 93 38 0b 	sts	0x0B38, r23	; 0x800b38 <_sSchedules+0x21a>
   13ab6:	80 93 39 0b 	sts	0x0B39, r24	; 0x800b39 <_sSchedules+0x21b>
   13aba:	90 93 3a 0b 	sts	0x0B3A, r25	; 0x800b3a <_sSchedules+0x21c>
   13abe:	60 91 37 0b 	lds	r22, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   13ac2:	70 91 38 0b 	lds	r23, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   13ac6:	80 91 39 0b 	lds	r24, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   13aca:	90 91 3a 0b 	lds	r25, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   13ace:	40 90 37 0b 	lds	r4, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   13ad2:	50 90 38 0b 	lds	r5, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   13ad6:	60 90 39 0b 	lds	r6, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   13ada:	70 90 3a 0b 	lds	r7, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   13ade:	e4 e6       	ldi	r30, 0x64	; 100
   13ae0:	ce 2e       	mov	r12, r30
   13ae2:	d1 2c       	mov	r13, r1
   13ae4:	e1 2c       	mov	r14, r1
   13ae6:	f1 2c       	mov	r15, r1
   13ae8:	a7 01       	movw	r20, r14
   13aea:	96 01       	movw	r18, r12
   13aec:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   13af0:	a0 e1       	ldi	r26, 0x10	; 16
   13af2:	be e0       	ldi	r27, 0x0E	; 14
   13af4:	0e 94 b2 e7 	call	0x1cf64	; 0x1cf64 <__muluhisi3>
   13af8:	4b 01       	movw	r8, r22
   13afa:	5c 01       	movw	r10, r24
   13afc:	c3 01       	movw	r24, r6
   13afe:	b2 01       	movw	r22, r4
   13b00:	a7 01       	movw	r20, r14
   13b02:	96 01       	movw	r18, r12
   13b04:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   13b08:	9b 01       	movw	r18, r22
   13b0a:	ac 01       	movw	r20, r24
   13b0c:	ac e3       	ldi	r26, 0x3C	; 60
   13b0e:	b0 e0       	ldi	r27, 0x00	; 0
   13b10:	0e 94 b2 e7 	call	0x1cf64	; 0x1cf64 <__muluhisi3>
   13b14:	86 0e       	add	r8, r22
   13b16:	97 1e       	adc	r9, r23
   13b18:	a8 1e       	adc	r10, r24
   13b1a:	b9 1e       	adc	r11, r25
   13b1c:	80 92 37 0b 	sts	0x0B37, r8	; 0x800b37 <_sSchedules+0x219>
   13b20:	90 92 38 0b 	sts	0x0B38, r9	; 0x800b38 <_sSchedules+0x21a>
   13b24:	a0 92 39 0b 	sts	0x0B39, r10	; 0x800b39 <_sSchedules+0x21b>
   13b28:	b0 92 3a 0b 	sts	0x0B3A, r11	; 0x800b3a <_sSchedules+0x21c>
   13b2c:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   13b30:	80 93 93 0b 	sts	0x0B93, r24	; 0x800b93 <_sSchedules+0x275>
   13b34:	62 e8       	ldi	r22, 0x82	; 130
   13b36:	74 e3       	ldi	r23, 0x34	; 52
   13b38:	c1 01       	movw	r24, r2
   13b3a:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b3e:	60 e0       	ldi	r22, 0x00	; 0
   13b40:	70 e0       	ldi	r23, 0x00	; 0
   13b42:	0e 94 6a 8c 	call	0x118d4	; 0x118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13b46:	80 93 95 0b 	sts	0x0B95, r24	; 0x800b95 <_sSchedules+0x277>
   13b4a:	e1 2c       	mov	r14, r1
   13b4c:	f1 2c       	mov	r15, r1
   13b4e:	67 01       	movw	r12, r14
   13b50:	ef ef       	ldi	r30, 0xFF	; 255
   13b52:	ce 1a       	sub	r12, r30
   13b54:	de 0a       	sbc	r13, r30
   13b56:	6c e7       	ldi	r22, 0x7C	; 124
   13b58:	74 e3       	ldi	r23, 0x34	; 52
   13b5a:	c1 01       	movw	r24, r2
   13b5c:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b60:	b6 01       	movw	r22, r12
   13b62:	0e 94 6a 8c 	call	0x118d4	; 0x118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13b66:	97 01       	movw	r18, r14
   13b68:	27 59       	subi	r18, 0x97	; 151
   13b6a:	34 4f       	sbci	r19, 0xF4	; 244
   13b6c:	79 01       	movw	r14, r18
   13b6e:	d9 01       	movw	r26, r18
   13b70:	8c 93       	st	X, r24
   13b72:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13b76:	81 30       	cpi	r24, 0x01	; 1
   13b78:	89 f0       	breq	.+34     	; 0x13b9c <_Z12Pub_Sub_DataPcPhjh+0x185e>
   13b7a:	76 01       	movw	r14, r12
   13b7c:	bd e0       	ldi	r27, 0x0D	; 13
   13b7e:	cb 16       	cp	r12, r27
   13b80:	d1 04       	cpc	r13, r1
   13b82:	29 f7       	brne	.-54     	; 0x13b4e <_Z12Pub_Sub_DataPcPhjh+0x1810>
   13b84:	e1 2c       	mov	r14, r1
   13b86:	f1 2c       	mov	r15, r1
   13b88:	54 e6       	ldi	r21, 0x64	; 100
   13b8a:	a5 2e       	mov	r10, r21
   13b8c:	b1 2c       	mov	r11, r1
   13b8e:	60 e1       	ldi	r22, 0x10	; 16
   13b90:	86 2e       	mov	r8, r22
   13b92:	6e e0       	ldi	r22, 0x0E	; 14
   13b94:	96 2e       	mov	r9, r22
   13b96:	7c e3       	ldi	r23, 0x3C	; 60
   13b98:	77 2e       	mov	r7, r23
   13b9a:	13 c0       	rjmp	.+38     	; 0x13bc2 <_Z12Pub_Sub_DataPcPhjh+0x1884>
   13b9c:	62 e7       	ldi	r22, 0x72	; 114
   13b9e:	74 e3       	ldi	r23, 0x34	; 52
   13ba0:	85 e5       	ldi	r24, 0x55	; 85
   13ba2:	94 e1       	ldi	r25, 0x14	; 20
   13ba4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13ba8:	f7 01       	movw	r30, r14
   13baa:	60 81       	ld	r22, Z
   13bac:	4a e0       	ldi	r20, 0x0A	; 10
   13bae:	50 e0       	ldi	r21, 0x00	; 0
   13bb0:	85 e5       	ldi	r24, 0x55	; 85
   13bb2:	94 e1       	ldi	r25, 0x14	; 20
   13bb4:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   13bb8:	85 e5       	ldi	r24, 0x55	; 85
   13bba:	94 e1       	ldi	r25, 0x14	; 20
   13bbc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13bc0:	dc cf       	rjmp	.-72     	; 0x13b7a <_Z12Pub_Sub_DataPcPhjh+0x183c>
   13bc2:	67 01       	movw	r12, r14
   13bc4:	2f ef       	ldi	r18, 0xFF	; 255
   13bc6:	c2 1a       	sub	r12, r18
   13bc8:	d2 0a       	sbc	r13, r18
   13bca:	6d e6       	ldi	r22, 0x6D	; 109
   13bcc:	74 e3       	ldi	r23, 0x34	; 52
   13bce:	c1 01       	movw	r24, r2
   13bd0:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13bd4:	b6 01       	movw	r22, r12
   13bd6:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13bda:	97 01       	movw	r18, r14
   13bdc:	22 0f       	add	r18, r18
   13bde:	33 1f       	adc	r19, r19
   13be0:	a9 01       	movw	r20, r18
   13be2:	44 5c       	subi	r20, 0xC4	; 196
   13be4:	54 4f       	sbci	r21, 0xF4	; 244
   13be6:	7a 01       	movw	r14, r20
   13be8:	da 01       	movw	r26, r20
   13bea:	11 96       	adiw	r26, 0x01	; 1
   13bec:	9c 93       	st	X, r25
   13bee:	8e 93       	st	-X, r24
   13bf0:	8d 91       	ld	r24, X+
   13bf2:	9c 91       	ld	r25, X
   13bf4:	11 97       	sbiw	r26, 0x01	; 1
   13bf6:	2d 91       	ld	r18, X+
   13bf8:	3c 91       	ld	r19, X
   13bfa:	b5 01       	movw	r22, r10
   13bfc:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13c00:	68 9d       	mul	r22, r8
   13c02:	f0 01       	movw	r30, r0
   13c04:	69 9d       	mul	r22, r9
   13c06:	f0 0d       	add	r31, r0
   13c08:	78 9d       	mul	r23, r8
   13c0a:	f0 0d       	add	r31, r0
   13c0c:	11 24       	eor	r1, r1
   13c0e:	c9 01       	movw	r24, r18
   13c10:	b5 01       	movw	r22, r10
   13c12:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13c16:	78 9e       	mul	r7, r24
   13c18:	90 01       	movw	r18, r0
   13c1a:	79 9e       	mul	r7, r25
   13c1c:	30 0d       	add	r19, r0
   13c1e:	11 24       	eor	r1, r1
   13c20:	cf 01       	movw	r24, r30
   13c22:	82 0f       	add	r24, r18
   13c24:	93 1f       	adc	r25, r19
   13c26:	f7 01       	movw	r30, r14
   13c28:	91 83       	std	Z+1, r25	; 0x01
   13c2a:	80 83       	st	Z, r24
   13c2c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13c30:	81 30       	cpi	r24, 0x01	; 1
   13c32:	41 f0       	breq	.+16     	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x1906>
   13c34:	76 01       	movw	r14, r12
   13c36:	fd e0       	ldi	r31, 0x0D	; 13
   13c38:	cf 16       	cp	r12, r31
   13c3a:	d1 04       	cpc	r13, r1
   13c3c:	11 f6       	brne	.-124    	; 0x13bc2 <_Z12Pub_Sub_DataPcPhjh+0x1884>
   13c3e:	e1 2c       	mov	r14, r1
   13c40:	f1 2c       	mov	r15, r1
   13c42:	14 c0       	rjmp	.+40     	; 0x13c6c <_Z12Pub_Sub_DataPcPhjh+0x192e>
   13c44:	6b e5       	ldi	r22, 0x5B	; 91
   13c46:	74 e3       	ldi	r23, 0x34	; 52
   13c48:	85 e5       	ldi	r24, 0x55	; 85
   13c4a:	94 e1       	ldi	r25, 0x14	; 20
   13c4c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13c50:	d7 01       	movw	r26, r14
   13c52:	6d 91       	ld	r22, X+
   13c54:	7c 91       	ld	r23, X
   13c56:	4a e0       	ldi	r20, 0x0A	; 10
   13c58:	50 e0       	ldi	r21, 0x00	; 0
   13c5a:	85 e5       	ldi	r24, 0x55	; 85
   13c5c:	94 e1       	ldi	r25, 0x14	; 20
   13c5e:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   13c62:	85 e5       	ldi	r24, 0x55	; 85
   13c64:	94 e1       	ldi	r25, 0x14	; 20
   13c66:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13c6a:	e4 cf       	rjmp	.-56     	; 0x13c34 <_Z12Pub_Sub_DataPcPhjh+0x18f6>
   13c6c:	67 01       	movw	r12, r14
   13c6e:	ef ef       	ldi	r30, 0xFF	; 255
   13c70:	ce 1a       	sub	r12, r30
   13c72:	de 0a       	sbc	r13, r30
   13c74:	64 e5       	ldi	r22, 0x54	; 84
   13c76:	74 e3       	ldi	r23, 0x34	; 52
   13c78:	c1 01       	movw	r24, r2
   13c7a:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c7e:	b6 01       	movw	r22, r12
   13c80:	0e 94 6a 8c 	call	0x118d4	; 0x118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13c84:	97 01       	movw	r18, r14
   13c86:	26 5a       	subi	r18, 0xA6	; 166
   13c88:	34 4f       	sbci	r19, 0xF4	; 244
   13c8a:	79 01       	movw	r14, r18
   13c8c:	d9 01       	movw	r26, r18
   13c8e:	8c 93       	st	X, r24
   13c90:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13c94:	81 30       	cpi	r24, 0x01	; 1
   13c96:	89 f0       	breq	.+34     	; 0x13cba <_Z12Pub_Sub_DataPcPhjh+0x197c>
   13c98:	76 01       	movw	r14, r12
   13c9a:	bd e0       	ldi	r27, 0x0D	; 13
   13c9c:	cb 16       	cp	r12, r27
   13c9e:	d1 04       	cpc	r13, r1
   13ca0:	29 f7       	brne	.-54     	; 0x13c6c <_Z12Pub_Sub_DataPcPhjh+0x192e>
   13ca2:	81 e0       	ldi	r24, 0x01	; 1
   13ca4:	80 93 98 0c 	sts	0x0C98, r24	; 0x800c98 <plot_schedule_topic>
   13ca8:	10 92 99 0c 	sts	0x0C99, r1	; 0x800c99 <_gTank_Topic_check>
   13cac:	f1 e0       	ldi	r31, 0x01	; 1
   13cae:	c0 55       	subi	r28, 0x50	; 80
   13cb0:	d9 4f       	sbci	r29, 0xF9	; 249
   13cb2:	f8 83       	st	Y, r31
   13cb4:	c0 5b       	subi	r28, 0xB0	; 176
   13cb6:	d6 40       	sbci	r29, 0x06	; 6
   13cb8:	13 c0       	rjmp	.+38     	; 0x13ce0 <_Z12Pub_Sub_DataPcPhjh+0x19a2>
   13cba:	69 e4       	ldi	r22, 0x49	; 73
   13cbc:	74 e3       	ldi	r23, 0x34	; 52
   13cbe:	85 e5       	ldi	r24, 0x55	; 85
   13cc0:	94 e1       	ldi	r25, 0x14	; 20
   13cc2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   13cc6:	f7 01       	movw	r30, r14
   13cc8:	60 81       	ld	r22, Z
   13cca:	4a e0       	ldi	r20, 0x0A	; 10
   13ccc:	50 e0       	ldi	r21, 0x00	; 0
   13cce:	85 e5       	ldi	r24, 0x55	; 85
   13cd0:	94 e1       	ldi	r25, 0x14	; 20
   13cd2:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   13cd6:	85 e5       	ldi	r24, 0x55	; 85
   13cd8:	94 e1       	ldi	r25, 0x14	; 20
   13cda:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13cde:	dc cf       	rjmp	.-72     	; 0x13c98 <_Z12Pub_Sub_DataPcPhjh+0x195a>
   13ce0:	88 e2       	ldi	r24, 0x28	; 40
   13ce2:	d8 01       	movw	r26, r16
   13ce4:	1d 92       	st	X+, r1
   13ce6:	8a 95       	dec	r24
   13ce8:	e9 f7       	brne	.-6      	; 0x13ce4 <_Z12Pub_Sub_DataPcPhjh+0x19a6>
   13cea:	8a e6       	ldi	r24, 0x6A	; 106
   13cec:	93 e1       	ldi	r25, 0x13	; 19
   13cee:	9f 93       	push	r25
   13cf0:	8f 93       	push	r24
   13cf2:	84 e5       	ldi	r24, 0x54	; 84
   13cf4:	96 e0       	ldi	r25, 0x06	; 6
   13cf6:	9f 93       	push	r25
   13cf8:	8f 93       	push	r24
   13cfa:	1f 93       	push	r17
   13cfc:	0f 93       	push	r16
   13cfe:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   13d02:	cd 54       	subi	r28, 0x4D	; 77
   13d04:	d9 4f       	sbci	r29, 0xF9	; 249
   13d06:	68 81       	ld	r22, Y
   13d08:	79 81       	ldd	r23, Y+1	; 0x01
   13d0a:	c3 5b       	subi	r28, 0xB3	; 179
   13d0c:	d6 40       	sbci	r29, 0x06	; 6
   13d0e:	c8 01       	movw	r24, r16
   13d10:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   13d14:	0f 90       	pop	r0
   13d16:	0f 90       	pop	r0
   13d18:	0f 90       	pop	r0
   13d1a:	0f 90       	pop	r0
   13d1c:	0f 90       	pop	r0
   13d1e:	0f 90       	pop	r0
   13d20:	89 2b       	or	r24, r25
   13d22:	09 f0       	breq	.+2      	; 0x13d26 <_Z12Pub_Sub_DataPcPhjh+0x19e8>
   13d24:	cc c2       	rjmp	.+1432   	; 0x142be <_Z12Pub_Sub_DataPcPhjh+0x1f80>
   13d26:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
   13d2a:	86 34       	cpi	r24, 0x46	; 70
   13d2c:	10 f4       	brcc	.+4      	; 0x13d32 <_Z12Pub_Sub_DataPcPhjh+0x19f4>
   13d2e:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13d32:	80 91 98 0c 	lds	r24, 0x0C98	; 0x800c98 <plot_schedule_topic>
   13d36:	88 23       	and	r24, r24
   13d38:	11 f4       	brne	.+4      	; 0x13d3e <_Z12Pub_Sub_DataPcPhjh+0x1a00>
   13d3a:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13d3e:	80 91 99 0c 	lds	r24, 0x0C99	; 0x800c99 <_gTank_Topic_check>
   13d42:	83 33       	cpi	r24, 0x33	; 51
   13d44:	10 f0       	brcs	.+4      	; 0x13d4a <_Z12Pub_Sub_DataPcPhjh+0x1a0c>
   13d46:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13d4a:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   13d4e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   13d52:	81 30       	cpi	r24, 0x01	; 1
   13d54:	51 f4       	brne	.+20     	; 0x13d6a <_Z12Pub_Sub_DataPcPhjh+0x1a2c>
   13d56:	6b e2       	ldi	r22, 0x2B	; 43
   13d58:	74 e3       	ldi	r23, 0x34	; 52
   13d5a:	85 e5       	ldi	r24, 0x55	; 85
   13d5c:	94 e1       	ldi	r25, 0x14	; 20
   13d5e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13d62:	85 e5       	ldi	r24, 0x55	; 85
   13d64:	94 e1       	ldi	r25, 0x14	; 20
   13d66:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   13d6a:	81 e0       	ldi	r24, 0x01	; 1
   13d6c:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_sSchedules+0x1>
   13d70:	80 91 33 0b 	lds	r24, 0x0B33	; 0x800b33 <_sSchedules+0x215>
   13d74:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_sSchedules>
   13d78:	e1 2c       	mov	r14, r1
   13d7a:	f1 2c       	mov	r15, r1
   13d7c:	66 e2       	ldi	r22, 0x26	; 38
   13d7e:	74 e3       	ldi	r23, 0x34	; 52
   13d80:	c1 01       	movw	r24, r2
   13d82:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13d86:	b7 01       	movw	r22, r14
   13d88:	6d 5f       	subi	r22, 0xFD	; 253
   13d8a:	7f 4f       	sbci	r23, 0xFF	; 255
   13d8c:	0e 94 6a 8c 	call	0x118d4	; 0x118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13d90:	f7 01       	movw	r30, r14
   13d92:	e1 59       	subi	r30, 0x91	; 145
   13d94:	f5 4f       	sbci	r31, 0xF5	; 245
   13d96:	80 83       	st	Z, r24
   13d98:	bf ef       	ldi	r27, 0xFF	; 255
   13d9a:	eb 1a       	sub	r14, r27
   13d9c:	fb 0a       	sbc	r15, r27
   13d9e:	e7 e2       	ldi	r30, 0x27	; 39
   13da0:	ee 16       	cp	r14, r30
   13da2:	f1 04       	cpc	r15, r1
   13da4:	59 f7       	brne	.-42     	; 0x13d7c <_Z12Pub_Sub_DataPcPhjh+0x1a3e>
   13da6:	e1 2c       	mov	r14, r1
   13da8:	f1 2c       	mov	r15, r1
   13daa:	61 e2       	ldi	r22, 0x21	; 33
   13dac:	74 e3       	ldi	r23, 0x34	; 52
   13dae:	c1 01       	movw	r24, r2
   13db0:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13db4:	b7 01       	movw	r22, r14
   13db6:	6d 5f       	subi	r22, 0xFD	; 253
   13db8:	7f 4f       	sbci	r23, 0xFF	; 255
   13dba:	0e 94 6a 8c 	call	0x118d4	; 0x118d4 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13dbe:	f7 01       	movw	r30, r14
   13dc0:	e8 56       	subi	r30, 0x68	; 104
   13dc2:	f6 4f       	sbci	r31, 0xF6	; 246
   13dc4:	80 83       	st	Z, r24
   13dc6:	ff ef       	ldi	r31, 0xFF	; 255
   13dc8:	ef 1a       	sub	r14, r31
   13dca:	ff 0a       	sbc	r15, r31
   13dcc:	27 e2       	ldi	r18, 0x27	; 39
   13dce:	e2 16       	cp	r14, r18
   13dd0:	f1 04       	cpc	r15, r1
   13dd2:	59 f7       	brne	.-42     	; 0x13daa <_Z12Pub_Sub_DataPcPhjh+0x1a6c>
   13dd4:	e1 2c       	mov	r14, r1
   13dd6:	f1 2c       	mov	r15, r1
   13dd8:	b4 e6       	ldi	r27, 0x64	; 100
   13dda:	cb 2e       	mov	r12, r27
   13ddc:	d1 2c       	mov	r13, r1
   13dde:	80 e1       	ldi	r24, 0x10	; 16
   13de0:	a8 2e       	mov	r10, r24
   13de2:	8e e0       	ldi	r24, 0x0E	; 14
   13de4:	b8 2e       	mov	r11, r24
   13de6:	9c e3       	ldi	r25, 0x3C	; 60
   13de8:	79 2e       	mov	r7, r25
   13dea:	6c e1       	ldi	r22, 0x1C	; 28
   13dec:	74 e3       	ldi	r23, 0x34	; 52
   13dee:	c1 01       	movw	r24, r2
   13df0:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13df4:	b7 01       	movw	r22, r14
   13df6:	6d 5f       	subi	r22, 0xFD	; 253
   13df8:	7f 4f       	sbci	r23, 0xFF	; 255
   13dfa:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13dfe:	f7 01       	movw	r30, r14
   13e00:	ee 0f       	add	r30, r30
   13e02:	ff 1f       	adc	r31, r31
   13e04:	ed 53       	subi	r30, 0x3D	; 61
   13e06:	f6 4f       	sbci	r31, 0xF6	; 246
   13e08:	91 83       	std	Z+1, r25	; 0x01
   13e0a:	80 83       	st	Z, r24
   13e0c:	80 81       	ld	r24, Z
   13e0e:	91 81       	ldd	r25, Z+1	; 0x01
   13e10:	80 80       	ld	r8, Z
   13e12:	91 80       	ldd	r9, Z+1	; 0x01
   13e14:	b6 01       	movw	r22, r12
   13e16:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13e1a:	6a 9d       	mul	r22, r10
   13e1c:	90 01       	movw	r18, r0
   13e1e:	6b 9d       	mul	r22, r11
   13e20:	30 0d       	add	r19, r0
   13e22:	7a 9d       	mul	r23, r10
   13e24:	30 0d       	add	r19, r0
   13e26:	11 24       	eor	r1, r1
   13e28:	c4 01       	movw	r24, r8
   13e2a:	b6 01       	movw	r22, r12
   13e2c:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13e30:	78 9e       	mul	r7, r24
   13e32:	a0 01       	movw	r20, r0
   13e34:	79 9e       	mul	r7, r25
   13e36:	50 0d       	add	r21, r0
   13e38:	11 24       	eor	r1, r1
   13e3a:	24 0f       	add	r18, r20
   13e3c:	35 1f       	adc	r19, r21
   13e3e:	31 83       	std	Z+1, r19	; 0x01
   13e40:	20 83       	st	Z, r18
   13e42:	3f ef       	ldi	r19, 0xFF	; 255
   13e44:	e3 1a       	sub	r14, r19
   13e46:	f3 0a       	sbc	r15, r19
   13e48:	47 e2       	ldi	r20, 0x27	; 39
   13e4a:	e4 16       	cp	r14, r20
   13e4c:	f1 04       	cpc	r15, r1
   13e4e:	69 f6       	brne	.-102    	; 0x13dea <_Z12Pub_Sub_DataPcPhjh+0x1aac>
   13e50:	e1 2c       	mov	r14, r1
   13e52:	f1 2c       	mov	r15, r1
   13e54:	64 e6       	ldi	r22, 0x64	; 100
   13e56:	c6 2e       	mov	r12, r22
   13e58:	d1 2c       	mov	r13, r1
   13e5a:	70 e1       	ldi	r23, 0x10	; 16
   13e5c:	a7 2e       	mov	r10, r23
   13e5e:	7e e0       	ldi	r23, 0x0E	; 14
   13e60:	b7 2e       	mov	r11, r23
   13e62:	ec e3       	ldi	r30, 0x3C	; 60
   13e64:	7e 2e       	mov	r7, r30
   13e66:	67 e1       	ldi	r22, 0x17	; 23
   13e68:	74 e3       	ldi	r23, 0x34	; 52
   13e6a:	c1 01       	movw	r24, r2
   13e6c:	0e 94 bb 8b 	call	0x11776	; 0x11776 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e70:	b7 01       	movw	r22, r14
   13e72:	6d 5f       	subi	r22, 0xFD	; 253
   13e74:	7f 4f       	sbci	r23, 0xFF	; 255
   13e76:	0e 94 19 8c 	call	0x11832	; 0x11832 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13e7a:	f7 01       	movw	r30, r14
   13e7c:	ee 0f       	add	r30, r30
   13e7e:	ff 1f       	adc	r31, r31
   13e80:	e7 5e       	subi	r30, 0xE7	; 231
   13e82:	f5 4f       	sbci	r31, 0xF5	; 245
   13e84:	91 83       	std	Z+1, r25	; 0x01
   13e86:	80 83       	st	Z, r24
   13e88:	80 81       	ld	r24, Z
   13e8a:	91 81       	ldd	r25, Z+1	; 0x01
   13e8c:	80 80       	ld	r8, Z
   13e8e:	91 80       	ldd	r9, Z+1	; 0x01
   13e90:	b6 01       	movw	r22, r12
   13e92:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13e96:	6a 9d       	mul	r22, r10
   13e98:	90 01       	movw	r18, r0
   13e9a:	6b 9d       	mul	r22, r11
   13e9c:	30 0d       	add	r19, r0
   13e9e:	7a 9d       	mul	r23, r10
   13ea0:	30 0d       	add	r19, r0
   13ea2:	11 24       	eor	r1, r1
   13ea4:	c4 01       	movw	r24, r8
   13ea6:	b6 01       	movw	r22, r12
   13ea8:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   13eac:	78 9e       	mul	r7, r24
   13eae:	a0 01       	movw	r20, r0
   13eb0:	79 9e       	mul	r7, r25
   13eb2:	50 0d       	add	r21, r0
   13eb4:	11 24       	eor	r1, r1
   13eb6:	24 0f       	add	r18, r20
   13eb8:	35 1f       	adc	r19, r21
   13eba:	31 83       	std	Z+1, r19	; 0x01
   13ebc:	20 83       	st	Z, r18
   13ebe:	5f ef       	ldi	r21, 0xFF	; 255
   13ec0:	e5 1a       	sub	r14, r21
   13ec2:	f5 0a       	sbc	r15, r21
   13ec4:	87 e2       	ldi	r24, 0x27	; 39
   13ec6:	e8 16       	cp	r14, r24
   13ec8:	f1 04       	cpc	r15, r1
   13eca:	69 f6       	brne	.-102    	; 0x13e66 <_Z12Pub_Sub_DataPcPhjh+0x1b28>
   13ecc:	80 e0       	ldi	r24, 0x00	; 0
   13ece:	90 e0       	ldi	r25, 0x00	; 0
   13ed0:	fc 01       	movw	r30, r24
   13ed2:	e2 5e       	subi	r30, 0xE2	; 226
   13ed4:	f6 4f       	sbci	r31, 0xF6	; 246
   13ed6:	df 01       	movw	r26, r30
   13ed8:	a4 5c       	subi	r26, 0xC4	; 196
   13eda:	bd 4f       	sbci	r27, 0xFD	; 253
   13edc:	2c 91       	ld	r18, X
   13ede:	25 af       	std	Z+61, r18	; 0x3d
   13ee0:	01 96       	adiw	r24, 0x01	; 1
   13ee2:	8e 30       	cpi	r24, 0x0E	; 14
   13ee4:	91 05       	cpc	r25, r1
   13ee6:	a1 f7       	brne	.-24     	; 0x13ed0 <_Z12Pub_Sub_DataPcPhjh+0x1b92>
   13ee8:	80 e0       	ldi	r24, 0x00	; 0
   13eea:	90 e0       	ldi	r25, 0x00	; 0
   13eec:	fc 01       	movw	r30, r24
   13eee:	ee 0f       	add	r30, r30
   13ef0:	ff 1f       	adc	r31, r31
   13ef2:	e4 5c       	subi	r30, 0xC4	; 196
   13ef4:	f4 4f       	sbci	r31, 0xF4	; 244
   13ef6:	20 81       	ld	r18, Z
   13ef8:	31 81       	ldd	r19, Z+1	; 0x01
   13efa:	fc 01       	movw	r30, r24
   13efc:	ee 0f       	add	r30, r30
   13efe:	ff 1f       	adc	r31, r31
   13f00:	e2 5e       	subi	r30, 0xE2	; 226
   13f02:	f6 4f       	sbci	r31, 0xF6	; 246
   13f04:	30 a3       	std	Z+32, r19	; 0x20
   13f06:	27 8f       	std	Z+31, r18	; 0x1f
   13f08:	01 96       	adiw	r24, 0x01	; 1
   13f0a:	8e 30       	cpi	r24, 0x0E	; 14
   13f0c:	91 05       	cpc	r25, r1
   13f0e:	71 f7       	brne	.-36     	; 0x13eec <_Z12Pub_Sub_DataPcPhjh+0x1bae>
   13f10:	80 e0       	ldi	r24, 0x00	; 0
   13f12:	90 e0       	ldi	r25, 0x00	; 0
   13f14:	9c 01       	movw	r18, r24
   13f16:	22 5e       	subi	r18, 0xE2	; 226
   13f18:	36 4f       	sbci	r19, 0xF6	; 246
   13f1a:	f9 01       	movw	r30, r18
   13f1c:	e5 5b       	subi	r30, 0xB5	; 181
   13f1e:	fd 4f       	sbci	r31, 0xFD	; 253
   13f20:	40 81       	ld	r20, Z
   13f22:	ef 5f       	subi	r30, 0xFF	; 255
   13f24:	f1 40       	sbci	r31, 0x01	; 1
   13f26:	40 83       	st	Z, r20
   13f28:	01 96       	adiw	r24, 0x01	; 1
   13f2a:	8e 30       	cpi	r24, 0x0E	; 14
   13f2c:	91 05       	cpc	r25, r1
   13f2e:	91 f7       	brne	.-28     	; 0x13f14 <_Z12Pub_Sub_DataPcPhjh+0x1bd6>
   13f30:	e1 2c       	mov	r14, r1
   13f32:	f1 2c       	mov	r15, r1
   13f34:	40 e0       	ldi	r20, 0x00	; 0
   13f36:	50 e0       	ldi	r21, 0x00	; 0
   13f38:	91 2c       	mov	r9, r1
   13f3a:	fa 01       	movw	r30, r20
   13f3c:	e2 5e       	subi	r30, 0xE2	; 226
   13f3e:	f6 4f       	sbci	r31, 0xF6	; 246
   13f40:	85 ad       	ldd	r24, Z+61	; 0x3d
   13f42:	81 30       	cpi	r24, 0x01	; 1
   13f44:	09 f0       	breq	.+2      	; 0x13f48 <_Z12Pub_Sub_DataPcPhjh+0x1c0a>
   13f46:	6c c0       	rjmp	.+216    	; 0x14020 <_Z12Pub_Sub_DataPcPhjh+0x1ce2>
   13f48:	89 2d       	mov	r24, r9
   13f4a:	90 e0       	ldi	r25, 0x00	; 0
   13f4c:	25 ad       	ldd	r18, Z+61	; 0x3d
   13f4e:	bc 01       	movw	r22, r24
   13f50:	62 5e       	subi	r22, 0xE2	; 226
   13f52:	76 4f       	sbci	r23, 0xF6	; 246
   13f54:	db 01       	movw	r26, r22
   13f56:	dd 96       	adiw	r26, 0x3d	; 61
   13f58:	2c 93       	st	X, r18
   13f5a:	9a 01       	movw	r18, r20
   13f5c:	22 0f       	add	r18, r18
   13f5e:	33 1f       	adc	r19, r19
   13f60:	22 5e       	subi	r18, 0xE2	; 226
   13f62:	36 4f       	sbci	r19, 0xF6	; 246
   13f64:	d9 01       	movw	r26, r18
   13f66:	5f 96       	adiw	r26, 0x1f	; 31
   13f68:	2d 91       	ld	r18, X+
   13f6a:	3c 91       	ld	r19, X
   13f6c:	90 97       	sbiw	r26, 0x20	; 32
   13f6e:	88 0f       	add	r24, r24
   13f70:	99 1f       	adc	r25, r25
   13f72:	82 5e       	subi	r24, 0xE2	; 226
   13f74:	96 4f       	sbci	r25, 0xF6	; 246
   13f76:	dc 01       	movw	r26, r24
   13f78:	90 96       	adiw	r26, 0x20	; 32
   13f7a:	3c 93       	st	X, r19
   13f7c:	2e 93       	st	-X, r18
   13f7e:	5f 97       	sbiw	r26, 0x1f	; 31
   13f80:	e4 5b       	subi	r30, 0xB4	; 180
   13f82:	ff 4f       	sbci	r31, 0xFF	; 255
   13f84:	80 81       	ld	r24, Z
   13f86:	db 01       	movw	r26, r22
   13f88:	a4 5b       	subi	r26, 0xB4	; 180
   13f8a:	bf 4f       	sbci	r27, 0xFF	; 255
   13f8c:	8c 93       	st	X, r24
   13f8e:	b3 e0       	ldi	r27, 0x03	; 3
   13f90:	9b 9e       	mul	r9, r27
   13f92:	50 01       	movw	r10, r0
   13f94:	11 24       	eor	r1, r1
   13f96:	60 e0       	ldi	r22, 0x00	; 0
   13f98:	70 e0       	ldi	r23, 0x00	; 0
   13f9a:	35 01       	movw	r6, r10
   13f9c:	66 0e       	add	r6, r22
   13f9e:	77 1e       	adc	r7, r23
   13fa0:	9b 01       	movw	r18, r22
   13fa2:	2e 0d       	add	r18, r14
   13fa4:	3f 1d       	adc	r19, r15
   13fa6:	d9 01       	movw	r26, r18
   13fa8:	a2 5e       	subi	r26, 0xE2	; 226
   13faa:	b6 4f       	sbci	r27, 0xF6	; 246
   13fac:	fd 01       	movw	r30, r26
   13fae:	ef 5a       	subi	r30, 0xAF	; 175
   13fb0:	fe 4f       	sbci	r31, 0xFE	; 254
   13fb2:	80 80       	ld	r8, Z
   13fb4:	f3 01       	movw	r30, r6
   13fb6:	e2 5e       	subi	r30, 0xE2	; 226
   13fb8:	f6 4f       	sbci	r31, 0xF6	; 246
   13fba:	6f 01       	movw	r12, r30
   13fbc:	ff ea       	ldi	r31, 0xAF	; 175
   13fbe:	cf 1a       	sub	r12, r31
   13fc0:	fe ef       	ldi	r31, 0xFE	; 254
   13fc2:	df 0a       	sbc	r13, r31
   13fc4:	f6 01       	movw	r30, r12
   13fc6:	80 82       	st	Z, r8
   13fc8:	a6 58       	subi	r26, 0x86	; 134
   13fca:	bf 4f       	sbci	r27, 0xFF	; 255
   13fcc:	ac 91       	ld	r26, X
   13fce:	e7 5d       	subi	r30, 0xD7	; 215
   13fd0:	f1 09       	sbc	r31, r1
   13fd2:	a0 83       	st	Z, r26
   13fd4:	22 0f       	add	r18, r18
   13fd6:	33 1f       	adc	r19, r19
   13fd8:	22 5e       	subi	r18, 0xE2	; 226
   13fda:	36 4f       	sbci	r19, 0xF6	; 246
   13fdc:	f9 01       	movw	r30, r18
   13fde:	eb 55       	subi	r30, 0x5B	; 91
   13fe0:	ff 4f       	sbci	r31, 0xFF	; 255
   13fe2:	01 90       	ld	r0, Z+
   13fe4:	f0 81       	ld	r31, Z
   13fe6:	e0 2d       	mov	r30, r0
   13fe8:	c3 01       	movw	r24, r6
   13fea:	88 0f       	add	r24, r24
   13fec:	99 1f       	adc	r25, r25
   13fee:	82 5e       	subi	r24, 0xE2	; 226
   13ff0:	96 4f       	sbci	r25, 0xF6	; 246
   13ff2:	dc 01       	movw	r26, r24
   13ff4:	ab 55       	subi	r26, 0x5B	; 91
   13ff6:	bf 4f       	sbci	r27, 0xFF	; 255
   13ff8:	11 96       	adiw	r26, 0x01	; 1
   13ffa:	fc 93       	st	X, r31
   13ffc:	ee 93       	st	-X, r30
   13ffe:	f9 01       	movw	r30, r18
   14000:	e5 50       	subi	r30, 0x05	; 5
   14002:	ff 4f       	sbci	r31, 0xFF	; 255
   14004:	20 81       	ld	r18, Z
   14006:	31 81       	ldd	r19, Z+1	; 0x01
   14008:	fc 01       	movw	r30, r24
   1400a:	e5 50       	subi	r30, 0x05	; 5
   1400c:	ff 4f       	sbci	r31, 0xFF	; 255
   1400e:	31 83       	std	Z+1, r19	; 0x01
   14010:	20 83       	st	Z, r18
   14012:	6f 5f       	subi	r22, 0xFF	; 255
   14014:	7f 4f       	sbci	r23, 0xFF	; 255
   14016:	63 30       	cpi	r22, 0x03	; 3
   14018:	71 05       	cpc	r23, r1
   1401a:	09 f0       	breq	.+2      	; 0x1401e <_Z12Pub_Sub_DataPcPhjh+0x1ce0>
   1401c:	be cf       	rjmp	.-132    	; 0x13f9a <_Z12Pub_Sub_DataPcPhjh+0x1c5c>
   1401e:	93 94       	inc	r9
   14020:	4f 5f       	subi	r20, 0xFF	; 255
   14022:	5f 4f       	sbci	r21, 0xFF	; 255
   14024:	f3 e0       	ldi	r31, 0x03	; 3
   14026:	ef 0e       	add	r14, r31
   14028:	f1 1c       	adc	r15, r1
   1402a:	4e 30       	cpi	r20, 0x0E	; 14
   1402c:	51 05       	cpc	r21, r1
   1402e:	09 f0       	breq	.+2      	; 0x14032 <_Z12Pub_Sub_DataPcPhjh+0x1cf4>
   14030:	84 cf       	rjmp	.-248    	; 0x13f3a <_Z12Pub_Sub_DataPcPhjh+0x1bfc>
   14032:	2d e0       	ldi	r18, 0x0D	; 13
   14034:	29 15       	cp	r18, r9
   14036:	08 f0       	brcs	.+2      	; 0x1403a <_Z12Pub_Sub_DataPcPhjh+0x1cfc>
   14038:	96 c2       	rjmp	.+1324   	; 0x14566 <_Z12Pub_Sub_DataPcPhjh+0x2228>
   1403a:	e1 2c       	mov	r14, r1
   1403c:	f1 2c       	mov	r15, r1
   1403e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14042:	81 30       	cpi	r24, 0x01	; 1
   14044:	a1 f4       	brne	.+40     	; 0x1406e <_Z12Pub_Sub_DataPcPhjh+0x1d30>
   14046:	6c e0       	ldi	r22, 0x0C	; 12
   14048:	74 e3       	ldi	r23, 0x34	; 52
   1404a:	85 e5       	ldi	r24, 0x55	; 85
   1404c:	94 e1       	ldi	r25, 0x14	; 20
   1404e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   14052:	f7 01       	movw	r30, r14
   14054:	e2 5e       	subi	r30, 0xE2	; 226
   14056:	f6 4f       	sbci	r31, 0xF6	; 246
   14058:	65 ad       	ldd	r22, Z+61	; 0x3d
   1405a:	4a e0       	ldi	r20, 0x0A	; 10
   1405c:	50 e0       	ldi	r21, 0x00	; 0
   1405e:	85 e5       	ldi	r24, 0x55	; 85
   14060:	94 e1       	ldi	r25, 0x14	; 20
   14062:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   14066:	85 e5       	ldi	r24, 0x55	; 85
   14068:	94 e1       	ldi	r25, 0x14	; 20
   1406a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1406e:	4f ef       	ldi	r20, 0xFF	; 255
   14070:	e4 1a       	sub	r14, r20
   14072:	f4 0a       	sbc	r15, r20
   14074:	5e e0       	ldi	r21, 0x0E	; 14
   14076:	e5 16       	cp	r14, r21
   14078:	f1 04       	cpc	r15, r1
   1407a:	09 f7       	brne	.-62     	; 0x1403e <_Z12Pub_Sub_DataPcPhjh+0x1d00>
   1407c:	e1 2c       	mov	r14, r1
   1407e:	f1 2c       	mov	r15, r1
   14080:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14084:	81 30       	cpi	r24, 0x01	; 1
   14086:	b9 f4       	brne	.+46     	; 0x140b6 <_Z12Pub_Sub_DataPcPhjh+0x1d78>
   14088:	6a ef       	ldi	r22, 0xFA	; 250
   1408a:	73 e3       	ldi	r23, 0x33	; 51
   1408c:	85 e5       	ldi	r24, 0x55	; 85
   1408e:	94 e1       	ldi	r25, 0x14	; 20
   14090:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   14094:	f7 01       	movw	r30, r14
   14096:	ee 0f       	add	r30, r30
   14098:	ff 1f       	adc	r31, r31
   1409a:	e2 5e       	subi	r30, 0xE2	; 226
   1409c:	f6 4f       	sbci	r31, 0xF6	; 246
   1409e:	67 8d       	ldd	r22, Z+31	; 0x1f
   140a0:	70 a1       	ldd	r23, Z+32	; 0x20
   140a2:	4a e0       	ldi	r20, 0x0A	; 10
   140a4:	50 e0       	ldi	r21, 0x00	; 0
   140a6:	85 e5       	ldi	r24, 0x55	; 85
   140a8:	94 e1       	ldi	r25, 0x14	; 20
   140aa:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   140ae:	85 e5       	ldi	r24, 0x55	; 85
   140b0:	94 e1       	ldi	r25, 0x14	; 20
   140b2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   140b6:	8f ef       	ldi	r24, 0xFF	; 255
   140b8:	e8 1a       	sub	r14, r24
   140ba:	f8 0a       	sbc	r15, r24
   140bc:	9e e0       	ldi	r25, 0x0E	; 14
   140be:	e9 16       	cp	r14, r25
   140c0:	f1 04       	cpc	r15, r1
   140c2:	f1 f6       	brne	.-68     	; 0x14080 <_Z12Pub_Sub_DataPcPhjh+0x1d42>
   140c4:	e1 2c       	mov	r14, r1
   140c6:	f1 2c       	mov	r15, r1
   140c8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   140cc:	81 30       	cpi	r24, 0x01	; 1
   140ce:	a1 f4       	brne	.+40     	; 0x140f8 <_Z12Pub_Sub_DataPcPhjh+0x1dba>
   140d0:	60 ef       	ldi	r22, 0xF0	; 240
   140d2:	73 e3       	ldi	r23, 0x33	; 51
   140d4:	85 e5       	ldi	r24, 0x55	; 85
   140d6:	94 e1       	ldi	r25, 0x14	; 20
   140d8:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   140dc:	f7 01       	movw	r30, r14
   140de:	e6 59       	subi	r30, 0x96	; 150
   140e0:	f6 4f       	sbci	r31, 0xF6	; 246
   140e2:	60 81       	ld	r22, Z
   140e4:	4a e0       	ldi	r20, 0x0A	; 10
   140e6:	50 e0       	ldi	r21, 0x00	; 0
   140e8:	85 e5       	ldi	r24, 0x55	; 85
   140ea:	94 e1       	ldi	r25, 0x14	; 20
   140ec:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   140f0:	85 e5       	ldi	r24, 0x55	; 85
   140f2:	94 e1       	ldi	r25, 0x14	; 20
   140f4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   140f8:	af ef       	ldi	r26, 0xFF	; 255
   140fa:	ea 1a       	sub	r14, r26
   140fc:	fa 0a       	sbc	r15, r26
   140fe:	be e0       	ldi	r27, 0x0E	; 14
   14100:	eb 16       	cp	r14, r27
   14102:	f1 04       	cpc	r15, r1
   14104:	09 f7       	brne	.-62     	; 0x140c8 <_Z12Pub_Sub_DataPcPhjh+0x1d8a>
   14106:	e1 2c       	mov	r14, r1
   14108:	f1 2c       	mov	r15, r1
   1410a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1410e:	81 30       	cpi	r24, 0x01	; 1
   14110:	a1 f4       	brne	.+40     	; 0x1413a <_Z12Pub_Sub_DataPcPhjh+0x1dfc>
   14112:	64 ee       	ldi	r22, 0xE4	; 228
   14114:	73 e3       	ldi	r23, 0x33	; 51
   14116:	85 e5       	ldi	r24, 0x55	; 85
   14118:	94 e1       	ldi	r25, 0x14	; 20
   1411a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1411e:	f7 01       	movw	r30, r14
   14120:	e1 59       	subi	r30, 0x91	; 145
   14122:	f5 4f       	sbci	r31, 0xF5	; 245
   14124:	60 81       	ld	r22, Z
   14126:	4a e0       	ldi	r20, 0x0A	; 10
   14128:	50 e0       	ldi	r21, 0x00	; 0
   1412a:	85 e5       	ldi	r24, 0x55	; 85
   1412c:	94 e1       	ldi	r25, 0x14	; 20
   1412e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   14132:	85 e5       	ldi	r24, 0x55	; 85
   14134:	94 e1       	ldi	r25, 0x14	; 20
   14136:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1413a:	ef ef       	ldi	r30, 0xFF	; 255
   1413c:	ee 1a       	sub	r14, r30
   1413e:	fe 0a       	sbc	r15, r30
   14140:	f7 e2       	ldi	r31, 0x27	; 39
   14142:	ef 16       	cp	r14, r31
   14144:	f1 04       	cpc	r15, r1
   14146:	09 f7       	brne	.-62     	; 0x1410a <_Z12Pub_Sub_DataPcPhjh+0x1dcc>
   14148:	e1 2c       	mov	r14, r1
   1414a:	f1 2c       	mov	r15, r1
   1414c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14150:	81 30       	cpi	r24, 0x01	; 1
   14152:	a1 f4       	brne	.+40     	; 0x1417c <_Z12Pub_Sub_DataPcPhjh+0x1e3e>
   14154:	6a ed       	ldi	r22, 0xDA	; 218
   14156:	73 e3       	ldi	r23, 0x33	; 51
   14158:	85 e5       	ldi	r24, 0x55	; 85
   1415a:	94 e1       	ldi	r25, 0x14	; 20
   1415c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   14160:	f7 01       	movw	r30, r14
   14162:	e8 56       	subi	r30, 0x68	; 104
   14164:	f6 4f       	sbci	r31, 0xF6	; 246
   14166:	60 81       	ld	r22, Z
   14168:	4a e0       	ldi	r20, 0x0A	; 10
   1416a:	50 e0       	ldi	r21, 0x00	; 0
   1416c:	85 e5       	ldi	r24, 0x55	; 85
   1416e:	94 e1       	ldi	r25, 0x14	; 20
   14170:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   14174:	85 e5       	ldi	r24, 0x55	; 85
   14176:	94 e1       	ldi	r25, 0x14	; 20
   14178:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1417c:	2f ef       	ldi	r18, 0xFF	; 255
   1417e:	e2 1a       	sub	r14, r18
   14180:	f2 0a       	sbc	r15, r18
   14182:	37 e2       	ldi	r19, 0x27	; 39
   14184:	e3 16       	cp	r14, r19
   14186:	f1 04       	cpc	r15, r1
   14188:	09 f7       	brne	.-62     	; 0x1414c <_Z12Pub_Sub_DataPcPhjh+0x1e0e>
   1418a:	e1 2c       	mov	r14, r1
   1418c:	f1 2c       	mov	r15, r1
   1418e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14192:	81 30       	cpi	r24, 0x01	; 1
   14194:	b9 f4       	brne	.+46     	; 0x141c4 <_Z12Pub_Sub_DataPcPhjh+0x1e86>
   14196:	6a ec       	ldi	r22, 0xCA	; 202
   14198:	73 e3       	ldi	r23, 0x33	; 51
   1419a:	85 e5       	ldi	r24, 0x55	; 85
   1419c:	94 e1       	ldi	r25, 0x14	; 20
   1419e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   141a2:	f7 01       	movw	r30, r14
   141a4:	ee 0f       	add	r30, r30
   141a6:	ff 1f       	adc	r31, r31
   141a8:	ed 53       	subi	r30, 0x3D	; 61
   141aa:	f6 4f       	sbci	r31, 0xF6	; 246
   141ac:	60 81       	ld	r22, Z
   141ae:	71 81       	ldd	r23, Z+1	; 0x01
   141b0:	4a e0       	ldi	r20, 0x0A	; 10
   141b2:	50 e0       	ldi	r21, 0x00	; 0
   141b4:	85 e5       	ldi	r24, 0x55	; 85
   141b6:	94 e1       	ldi	r25, 0x14	; 20
   141b8:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   141bc:	85 e5       	ldi	r24, 0x55	; 85
   141be:	94 e1       	ldi	r25, 0x14	; 20
   141c0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   141c4:	4f ef       	ldi	r20, 0xFF	; 255
   141c6:	e4 1a       	sub	r14, r20
   141c8:	f4 0a       	sbc	r15, r20
   141ca:	57 e2       	ldi	r21, 0x27	; 39
   141cc:	e5 16       	cp	r14, r21
   141ce:	f1 04       	cpc	r15, r1
   141d0:	f1 f6       	brne	.-68     	; 0x1418e <_Z12Pub_Sub_DataPcPhjh+0x1e50>
   141d2:	e1 2c       	mov	r14, r1
   141d4:	f1 2c       	mov	r15, r1
   141d6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   141da:	81 30       	cpi	r24, 0x01	; 1
   141dc:	b9 f4       	brne	.+46     	; 0x1420c <_Z12Pub_Sub_DataPcPhjh+0x1ece>
   141de:	6a eb       	ldi	r22, 0xBA	; 186
   141e0:	73 e3       	ldi	r23, 0x33	; 51
   141e2:	85 e5       	ldi	r24, 0x55	; 85
   141e4:	94 e1       	ldi	r25, 0x14	; 20
   141e6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   141ea:	f7 01       	movw	r30, r14
   141ec:	ee 0f       	add	r30, r30
   141ee:	ff 1f       	adc	r31, r31
   141f0:	e7 5e       	subi	r30, 0xE7	; 231
   141f2:	f5 4f       	sbci	r31, 0xF5	; 245
   141f4:	60 81       	ld	r22, Z
   141f6:	71 81       	ldd	r23, Z+1	; 0x01
   141f8:	4a e0       	ldi	r20, 0x0A	; 10
   141fa:	50 e0       	ldi	r21, 0x00	; 0
   141fc:	85 e5       	ldi	r24, 0x55	; 85
   141fe:	94 e1       	ldi	r25, 0x14	; 20
   14200:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   14204:	85 e5       	ldi	r24, 0x55	; 85
   14206:	94 e1       	ldi	r25, 0x14	; 20
   14208:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1420c:	8f ef       	ldi	r24, 0xFF	; 255
   1420e:	e8 1a       	sub	r14, r24
   14210:	f8 0a       	sbc	r15, r24
   14212:	97 e2       	ldi	r25, 0x27	; 39
   14214:	e9 16       	cp	r14, r25
   14216:	f1 04       	cpc	r15, r1
   14218:	f1 f6       	brne	.-68     	; 0x141d6 <_Z12Pub_Sub_DataPcPhjh+0x1e98>
   1421a:	80 91 3b 0b 	lds	r24, 0x0B3B	; 0x800b3b <_sSchedules+0x21d>
   1421e:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   14222:	80 91 34 0b 	lds	r24, 0x0B34	; 0x800b34 <_sSchedules+0x216>
   14226:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <_sSchedules+0x1d>
   1422a:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <_sSchedules+0x218>
   1422e:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <_sSchedules+0x1c>
   14232:	80 91 37 0b 	lds	r24, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   14236:	90 91 38 0b 	lds	r25, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   1423a:	a0 91 39 0b 	lds	r26, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   1423e:	b0 91 3a 0b 	lds	r27, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   14242:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
   14246:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
   1424a:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
   1424e:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
   14252:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
   14256:	88 e6       	ldi	r24, 0x68	; 104
   14258:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   1425c:	80 91 79 13 	lds	r24, 0x1379	; 0x801379 <_sRuble_Parameters+0x2f>
   14260:	80 93 79 0b 	sts	0x0B79, r24	; 0x800b79 <_sSchedules+0x25b>
   14264:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   14268:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   1426c:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   14270:	80 91 89 0b 	lds	r24, 0x0B89	; 0x800b89 <_sSchedules+0x26b>
   14274:	80 93 88 0b 	sts	0x0B88, r24	; 0x800b88 <_sSchedules+0x26a>
   14278:	80 91 93 0b 	lds	r24, 0x0B93	; 0x800b93 <_sSchedules+0x275>
   1427c:	80 93 92 0b 	sts	0x0B92, r24	; 0x800b92 <_sSchedules+0x274>
   14280:	80 91 95 0b 	lds	r24, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   14284:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <_sSchedules+0x276>
   14288:	0e 94 fe 84 	call	0x109fc	; 0x109fc <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   1428c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14290:	81 30       	cpi	r24, 0x01	; 1
   14292:	09 f0       	breq	.+2      	; 0x14296 <_Z12Pub_Sub_DataPcPhjh+0x1f58>
   14294:	72 c1       	rjmp	.+740    	; 0x1457a <_Z12Pub_Sub_DataPcPhjh+0x223c>
   14296:	69 ea       	ldi	r22, 0xA9	; 169
   14298:	73 e3       	ldi	r23, 0x33	; 51
   1429a:	85 e5       	ldi	r24, 0x55	; 85
   1429c:	94 e1       	ldi	r25, 0x14	; 20
   1429e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   142a2:	60 91 94 0b 	lds	r22, 0x0B94	; 0x800b94 <_sSchedules+0x276>
   142a6:	4a e0       	ldi	r20, 0x0A	; 10
   142a8:	50 e0       	ldi	r21, 0x00	; 0
   142aa:	85 e5       	ldi	r24, 0x55	; 85
   142ac:	94 e1       	ldi	r25, 0x14	; 20
   142ae:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   142b2:	a1 e0       	ldi	r26, 0x01	; 1
   142b4:	c0 55       	subi	r28, 0x50	; 80
   142b6:	d9 4f       	sbci	r29, 0xF9	; 249
   142b8:	a8 83       	st	Y, r26
   142ba:	c0 5b       	subi	r28, 0xB0	; 176
   142bc:	d6 40       	sbci	r29, 0x06	; 6
   142be:	88 e2       	ldi	r24, 0x28	; 40
   142c0:	f8 01       	movw	r30, r16
   142c2:	11 92       	st	Z+, r1
   142c4:	8a 95       	dec	r24
   142c6:	e9 f7       	brne	.-6      	; 0x142c2 <_Z12Pub_Sub_DataPcPhjh+0x1f84>
   142c8:	8a e6       	ldi	r24, 0x6A	; 106
   142ca:	93 e1       	ldi	r25, 0x13	; 19
   142cc:	9f 93       	push	r25
   142ce:	8f 93       	push	r24
   142d0:	8f e1       	ldi	r24, 0x1F	; 31
   142d2:	96 e0       	ldi	r25, 0x06	; 6
   142d4:	9f 93       	push	r25
   142d6:	8f 93       	push	r24
   142d8:	1f 93       	push	r17
   142da:	0f 93       	push	r16
   142dc:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   142e0:	cd 54       	subi	r28, 0x4D	; 77
   142e2:	d9 4f       	sbci	r29, 0xF9	; 249
   142e4:	68 81       	ld	r22, Y
   142e6:	79 81       	ldd	r23, Y+1	; 0x01
   142e8:	c3 5b       	subi	r28, 0xB3	; 179
   142ea:	d6 40       	sbci	r29, 0x06	; 6
   142ec:	c8 01       	movw	r24, r16
   142ee:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   142f2:	0f 90       	pop	r0
   142f4:	0f 90       	pop	r0
   142f6:	0f 90       	pop	r0
   142f8:	0f 90       	pop	r0
   142fa:	0f 90       	pop	r0
   142fc:	0f 90       	pop	r0
   142fe:	89 2b       	or	r24, r25
   14300:	09 f0       	breq	.+2      	; 0x14304 <_Z12Pub_Sub_DataPcPhjh+0x1fc6>
   14302:	4f c0       	rjmp	.+158    	; 0x143a2 <_Z12Pub_Sub_DataPcPhjh+0x2064>
   14304:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   14308:	10 92 3b 14 	sts	0x143B, r1	; 0x80143b <_sRuble_Parameters+0xf1>
   1430c:	6d e9       	ldi	r22, 0x9D	; 157
   1430e:	73 e3       	ldi	r23, 0x33	; 51
   14310:	c1 01       	movw	r24, r2
   14312:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14316:	88 23       	and	r24, r24
   14318:	e9 f0       	breq	.+58     	; 0x14354 <_Z12Pub_Sub_DataPcPhjh+0x2016>
   1431a:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   1431e:	82 30       	cpi	r24, 0x02	; 2
   14320:	09 f0       	breq	.+2      	; 0x14324 <_Z12Pub_Sub_DataPcPhjh+0x1fe6>
   14322:	3f c0       	rjmp	.+126    	; 0x143a2 <_Z12Pub_Sub_DataPcPhjh+0x2064>
   14324:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14328:	81 30       	cpi	r24, 0x01	; 1
   1432a:	51 f4       	brne	.+20     	; 0x14340 <_Z12Pub_Sub_DataPcPhjh+0x2002>
   1432c:	6b e7       	ldi	r22, 0x7B	; 123
   1432e:	73 e3       	ldi	r23, 0x33	; 51
   14330:	85 e5       	ldi	r24, 0x55	; 85
   14332:	94 e1       	ldi	r25, 0x14	; 20
   14334:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14338:	85 e5       	ldi	r24, 0x55	; 85
   1433a:	94 e1       	ldi	r25, 0x14	; 20
   1433c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14340:	81 e0       	ldi	r24, 0x01	; 1
   14342:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0xab>
   14346:	f1 e0       	ldi	r31, 0x01	; 1
   14348:	c0 55       	subi	r28, 0x50	; 80
   1434a:	d9 4f       	sbci	r29, 0xF9	; 249
   1434c:	f8 83       	st	Y, r31
   1434e:	c0 5b       	subi	r28, 0xB0	; 176
   14350:	d6 40       	sbci	r29, 0x06	; 6
   14352:	27 c0       	rjmp	.+78     	; 0x143a2 <_Z12Pub_Sub_DataPcPhjh+0x2064>
   14354:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   14358:	82 30       	cpi	r24, 0x02	; 2
   1435a:	90 f0       	brcs	.+36     	; 0x14380 <_Z12Pub_Sub_DataPcPhjh+0x2042>
   1435c:	64 e6       	ldi	r22, 0x64	; 100
   1435e:	73 e3       	ldi	r23, 0x33	; 51
   14360:	85 e5       	ldi	r24, 0x55	; 85
   14362:	94 e1       	ldi	r25, 0x14	; 20
   14364:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14368:	81 e0       	ldi	r24, 0x01	; 1
   1436a:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0xab>
   1436e:	80 93 3b 14 	sts	0x143B, r24	; 0x80143b <_sRuble_Parameters+0xf1>
   14372:	21 e0       	ldi	r18, 0x01	; 1
   14374:	c0 55       	subi	r28, 0x50	; 80
   14376:	d9 4f       	sbci	r29, 0xF9	; 249
   14378:	28 83       	st	Y, r18
   1437a:	c0 5b       	subi	r28, 0xB0	; 176
   1437c:	d6 40       	sbci	r29, 0x06	; 6
   1437e:	11 c0       	rjmp	.+34     	; 0x143a2 <_Z12Pub_Sub_DataPcPhjh+0x2064>
   14380:	82 e0       	ldi	r24, 0x02	; 2
   14382:	80 93 3b 14 	sts	0x143B, r24	; 0x80143b <_sRuble_Parameters+0xf1>
   14386:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xbd>
   1438a:	67 e0       	ldi	r22, 0x07	; 7
   1438c:	74 e1       	ldi	r23, 0x14	; 20
   1438e:	81 ea       	ldi	r24, 0xA1	; 161
   14390:	9c e0       	ldi	r25, 0x0C	; 12
   14392:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   14396:	31 e0       	ldi	r19, 0x01	; 1
   14398:	c0 55       	subi	r28, 0x50	; 80
   1439a:	d9 4f       	sbci	r29, 0xF9	; 249
   1439c:	38 83       	st	Y, r19
   1439e:	c0 5b       	subi	r28, 0xB0	; 176
   143a0:	d6 40       	sbci	r29, 0x06	; 6
   143a2:	88 e2       	ldi	r24, 0x28	; 40
   143a4:	d8 01       	movw	r26, r16
   143a6:	1d 92       	st	X+, r1
   143a8:	8a 95       	dec	r24
   143aa:	e9 f7       	brne	.-6      	; 0x143a6 <_Z12Pub_Sub_DataPcPhjh+0x2068>
   143ac:	8a e6       	ldi	r24, 0x6A	; 106
   143ae:	93 e1       	ldi	r25, 0x13	; 19
   143b0:	9f 93       	push	r25
   143b2:	8f 93       	push	r24
   143b4:	84 e4       	ldi	r24, 0x44	; 68
   143b6:	96 e0       	ldi	r25, 0x06	; 6
   143b8:	9f 93       	push	r25
   143ba:	8f 93       	push	r24
   143bc:	1f 93       	push	r17
   143be:	0f 93       	push	r16
   143c0:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   143c4:	cd 54       	subi	r28, 0x4D	; 77
   143c6:	d9 4f       	sbci	r29, 0xF9	; 249
   143c8:	68 81       	ld	r22, Y
   143ca:	79 81       	ldd	r23, Y+1	; 0x01
   143cc:	c3 5b       	subi	r28, 0xB3	; 179
   143ce:	d6 40       	sbci	r29, 0x06	; 6
   143d0:	c8 01       	movw	r24, r16
   143d2:	0e 94 b4 e9 	call	0x1d368	; 0x1d368 <strcmp>
   143d6:	0f 90       	pop	r0
   143d8:	0f 90       	pop	r0
   143da:	0f 90       	pop	r0
   143dc:	0f 90       	pop	r0
   143de:	0f 90       	pop	r0
   143e0:	0f 90       	pop	r0
   143e2:	89 2b       	or	r24, r25
   143e4:	09 f0       	breq	.+2      	; 0x143e8 <_Z12Pub_Sub_DataPcPhjh+0x20aa>
   143e6:	73 c0       	rjmp	.+230    	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   143e8:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <plot_schedule_topic>
   143ec:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   143f0:	82 30       	cpi	r24, 0x02	; 2
   143f2:	09 f4       	brne	.+2      	; 0x143f6 <_Z12Pub_Sub_DataPcPhjh+0x20b8>
   143f4:	6c c0       	rjmp	.+216    	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   143f6:	60 e6       	ldi	r22, 0x60	; 96
   143f8:	73 e3       	ldi	r23, 0x33	; 51
   143fa:	c1 01       	movw	r24, r2
   143fc:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14400:	18 2f       	mov	r17, r24
   14402:	69 e5       	ldi	r22, 0x59	; 89
   14404:	73 e3       	ldi	r23, 0x33	; 51
   14406:	c1 01       	movw	r24, r2
   14408:	0e 94 7c 8c 	call	0x118f8	; 0x118f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1440c:	08 2f       	mov	r16, r24
   1440e:	17 36       	cpi	r17, 0x67	; 103
   14410:	21 f0       	breq	.+8      	; 0x1441a <_Z12Pub_Sub_DataPcPhjh+0x20dc>
   14412:	1d 36       	cpi	r17, 0x6D	; 109
   14414:	11 f0       	breq	.+4      	; 0x1441a <_Z12Pub_Sub_DataPcPhjh+0x20dc>
   14416:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   1441a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1441e:	81 30       	cpi	r24, 0x01	; 1
   14420:	51 f4       	brne	.+20     	; 0x14436 <_Z12Pub_Sub_DataPcPhjh+0x20f8>
   14422:	68 e1       	ldi	r22, 0x18	; 24
   14424:	73 e3       	ldi	r23, 0x33	; 51
   14426:	85 e5       	ldi	r24, 0x55	; 85
   14428:	94 e1       	ldi	r25, 0x14	; 20
   1442a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1442e:	85 e5       	ldi	r24, 0x55	; 85
   14430:	94 e1       	ldi	r25, 0x14	; 20
   14432:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14436:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1443a:	88 23       	and	r24, r24
   1443c:	21 f0       	breq	.+8      	; 0x14446 <_Z12Pub_Sub_DataPcPhjh+0x2108>
   1443e:	1d 36       	cpi	r17, 0x6D	; 109
   14440:	11 f4       	brne	.+4      	; 0x14446 <_Z12Pub_Sub_DataPcPhjh+0x2108>
   14442:	0c 94 ce 92 	jmp	0x1259c	; 0x1259c <_Z12Pub_Sub_DataPcPhjh+0x25e>
   14446:	15 36       	cpi	r17, 0x65	; 101
   14448:	08 f4       	brcc	.+2      	; 0x1444c <_Z12Pub_Sub_DataPcPhjh+0x210e>
   1444a:	41 c0       	rjmp	.+130    	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   1444c:	81 2f       	mov	r24, r17
   1444e:	90 e0       	ldi	r25, 0x00	; 0
   14450:	85 56       	subi	r24, 0x65	; 101
   14452:	91 09       	sbc	r25, r1
   14454:	4b e1       	ldi	r20, 0x1B	; 27
   14456:	48 9f       	mul	r20, r24
   14458:	f0 01       	movw	r30, r0
   1445a:	49 9f       	mul	r20, r25
   1445c:	f0 0d       	add	r31, r0
   1445e:	11 24       	eor	r1, r1
   14460:	ec 57       	subi	r30, 0x7C	; 124
   14462:	f2 4f       	sbci	r31, 0xF2	; 242
   14464:	81 81       	ldd	r24, Z+1	; 0x01
   14466:	88 23       	and	r24, r24
   14468:	91 f1       	breq	.+100    	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   1446a:	9b e9       	ldi	r25, 0x9B	; 155
   1446c:	91 0f       	add	r25, r17
   1446e:	29 2f       	mov	r18, r25
   14470:	30 e0       	ldi	r19, 0x00	; 0
   14472:	42 9f       	mul	r20, r18
   14474:	f0 01       	movw	r30, r0
   14476:	43 9f       	mul	r20, r19
   14478:	f0 0d       	add	r31, r0
   1447a:	11 24       	eor	r1, r1
   1447c:	ec 57       	subi	r30, 0x7C	; 124
   1447e:	f2 4f       	sbci	r31, 0xF2	; 242
   14480:	82 81       	ldd	r24, Z+2	; 0x02
   14482:	84 30       	cpi	r24, 0x04	; 4
   14484:	21 f1       	breq	.+72     	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   14486:	94 30       	cpi	r25, 0x04	; 4
   14488:	11 f1       	breq	.+68     	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   1448a:	43 81       	ldd	r20, Z+3	; 0x03
   1448c:	54 81       	ldd	r21, Z+4	; 0x04
   1448e:	45 2b       	or	r20, r21
   14490:	f1 f4       	brne	.+60     	; 0x144ce <_Z12Pub_Sub_DataPcPhjh+0x2190>
   14492:	00 23       	and	r16, r16
   14494:	31 f0       	breq	.+12     	; 0x144a2 <_Z12Pub_Sub_DataPcPhjh+0x2164>
   14496:	81 e0       	ldi	r24, 0x01	; 1
   14498:	82 87       	std	Z+10, r24	; 0x0a
   1449a:	82 e0       	ldi	r24, 0x02	; 2
   1449c:	82 83       	std	Z+2, r24	; 0x02
   1449e:	83 87       	std	Z+11, r24	; 0x0b
   144a0:	11 c0       	rjmp	.+34     	; 0x144c4 <_Z12Pub_Sub_DataPcPhjh+0x2186>
   144a2:	82 30       	cpi	r24, 0x02	; 2
   144a4:	19 f4       	brne	.+6      	; 0x144ac <_Z12Pub_Sub_DataPcPhjh+0x216e>
   144a6:	93 e0       	ldi	r25, 0x03	; 3
   144a8:	92 83       	std	Z+2, r25	; 0x02
   144aa:	02 c0       	rjmp	.+4      	; 0x144b0 <_Z12Pub_Sub_DataPcPhjh+0x2172>
   144ac:	82 e0       	ldi	r24, 0x02	; 2
   144ae:	82 83       	std	Z+2, r24	; 0x02
   144b0:	83 87       	std	Z+11, r24	; 0x0b
   144b2:	8b e1       	ldi	r24, 0x1B	; 27
   144b4:	82 9f       	mul	r24, r18
   144b6:	f0 01       	movw	r30, r0
   144b8:	83 9f       	mul	r24, r19
   144ba:	f0 0d       	add	r31, r0
   144bc:	11 24       	eor	r1, r1
   144be:	ec 57       	subi	r30, 0x7C	; 124
   144c0:	f2 4f       	sbci	r31, 0xF2	; 242
   144c2:	12 86       	std	Z+10, r1	; 0x0a
   144c4:	8c e9       	ldi	r24, 0x9C	; 156
   144c6:	81 0f       	add	r24, r17
   144c8:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   144cc:	08 c0       	rjmp	.+16     	; 0x144de <_Z12Pub_Sub_DataPcPhjh+0x21a0>
   144ce:	c0 55       	subi	r28, 0x50	; 80
   144d0:	d9 4f       	sbci	r29, 0xF9	; 249
   144d2:	b8 81       	ld	r27, Y
   144d4:	c0 5b       	subi	r28, 0xB0	; 176
   144d6:	d6 40       	sbci	r29, 0x06	; 6
   144d8:	b1 30       	cpi	r27, 0x01	; 1
   144da:	09 f0       	breq	.+2      	; 0x144de <_Z12Pub_Sub_DataPcPhjh+0x21a0>
   144dc:	55 c0       	rjmp	.+170    	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   144de:	8e e6       	ldi	r24, 0x6E	; 110
   144e0:	ee ef       	ldi	r30, 0xFE	; 254
   144e2:	fe e0       	ldi	r31, 0x0E	; 14
   144e4:	df 01       	movw	r26, r30
   144e6:	1d 92       	st	X+, r1
   144e8:	8a 95       	dec	r24
   144ea:	e9 f7       	brne	.-6      	; 0x144e6 <_Z12Pub_Sub_DataPcPhjh+0x21a8>
   144ec:	62 e4       	ldi	r22, 0x42	; 66
   144ee:	75 e0       	ldi	r23, 0x05	; 5
   144f0:	cf 01       	movw	r24, r30
   144f2:	0e 94 bd e9 	call	0x1d37a	; 0x1d37a <strcpy>
   144f6:	88 e2       	ldi	r24, 0x28	; 40
   144f8:	c2 55       	subi	r28, 0x52	; 82
   144fa:	d9 4f       	sbci	r29, 0xF9	; 249
   144fc:	e8 81       	ld	r30, Y
   144fe:	f9 81       	ldd	r31, Y+1	; 0x01
   14500:	ce 5a       	subi	r28, 0xAE	; 174
   14502:	d6 40       	sbci	r29, 0x06	; 6
   14504:	11 92       	st	Z+, r1
   14506:	8a 95       	dec	r24
   14508:	e9 f7       	brne	.-6      	; 0x14504 <_Z12Pub_Sub_DataPcPhjh+0x21c6>
   1450a:	8a e6       	ldi	r24, 0x6A	; 106
   1450c:	93 e1       	ldi	r25, 0x13	; 19
   1450e:	9f 93       	push	r25
   14510:	8f 93       	push	r24
   14512:	8a e1       	ldi	r24, 0x1A	; 26
   14514:	97 e0       	ldi	r25, 0x07	; 7
   14516:	9f 93       	push	r25
   14518:	8f 93       	push	r24
   1451a:	c1 55       	subi	r28, 0x51	; 81
   1451c:	d9 4f       	sbci	r29, 0xF9	; 249
   1451e:	f8 81       	ld	r31, Y
   14520:	cf 5a       	subi	r28, 0xAF	; 175
   14522:	d6 40       	sbci	r29, 0x06	; 6
   14524:	ff 93       	push	r31
   14526:	c2 55       	subi	r28, 0x52	; 82
   14528:	d9 4f       	sbci	r29, 0xF9	; 249
   1452a:	28 81       	ld	r18, Y
   1452c:	ce 5a       	subi	r28, 0xAE	; 174
   1452e:	d6 40       	sbci	r29, 0x06	; 6
   14530:	2f 93       	push	r18
   14532:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14536:	6e ef       	ldi	r22, 0xFE	; 254
   14538:	7e e0       	ldi	r23, 0x0E	; 14
   1453a:	ce 01       	movw	r24, r28
   1453c:	8b 5c       	subi	r24, 0xCB	; 203
   1453e:	99 4f       	sbci	r25, 0xF9	; 249
   14540:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14544:	84 ed       	ldi	r24, 0xD4	; 212
   14546:	93 e0       	ldi	r25, 0x03	; 3
   14548:	ec e6       	ldi	r30, 0x6C	; 108
   1454a:	ff e0       	ldi	r31, 0x0F	; 15
   1454c:	df 01       	movw	r26, r30
   1454e:	9c 01       	movw	r18, r24
   14550:	1d 92       	st	X+, r1
   14552:	21 50       	subi	r18, 0x01	; 1
   14554:	30 40       	sbci	r19, 0x00	; 0
   14556:	e1 f7       	brne	.-8      	; 0x14550 <_Z12Pub_Sub_DataPcPhjh+0x2212>
   14558:	0f 90       	pop	r0
   1455a:	0f 90       	pop	r0
   1455c:	0f 90       	pop	r0
   1455e:	0f 90       	pop	r0
   14560:	0f 90       	pop	r0
   14562:	0f 90       	pop	r0
   14564:	11 c0       	rjmp	.+34     	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x224a>
   14566:	e9 2d       	mov	r30, r9
   14568:	f0 e0       	ldi	r31, 0x00	; 0
   1456a:	e2 5e       	subi	r30, 0xE2	; 226
   1456c:	f6 4f       	sbci	r31, 0xF6	; 246
   1456e:	15 ae       	std	Z+61, r1	; 0x3d
   14570:	93 94       	inc	r9
   14572:	3e e0       	ldi	r19, 0x0E	; 14
   14574:	93 12       	cpse	r9, r19
   14576:	f7 cf       	rjmp	.-18     	; 0x14566 <_Z12Pub_Sub_DataPcPhjh+0x2228>
   14578:	60 cd       	rjmp	.-1344   	; 0x1403a <_Z12Pub_Sub_DataPcPhjh+0x1cfc>
   1457a:	b1 e0       	ldi	r27, 0x01	; 1
   1457c:	c0 55       	subi	r28, 0x50	; 80
   1457e:	d9 4f       	sbci	r29, 0xF9	; 249
   14580:	b8 83       	st	Y, r27
   14582:	c0 5b       	subi	r28, 0xB0	; 176
   14584:	d6 40       	sbci	r29, 0x06	; 6
   14586:	9b ce       	rjmp	.-714    	; 0x142be <_Z12Pub_Sub_DataPcPhjh+0x1f80>
   14588:	c5 54       	subi	r28, 0x45	; 69
   1458a:	d9 4f       	sbci	r29, 0xF9	; 249
   1458c:	0f b6       	in	r0, 0x3f	; 63
   1458e:	f8 94       	cli
   14590:	de bf       	out	0x3e, r29	; 62
   14592:	0f be       	out	0x3f, r0	; 63
   14594:	cd bf       	out	0x3d, r28	; 61
   14596:	df 91       	pop	r29
   14598:	cf 91       	pop	r28
   1459a:	1f 91       	pop	r17
   1459c:	0f 91       	pop	r16
   1459e:	ff 90       	pop	r15
   145a0:	ef 90       	pop	r14
   145a2:	df 90       	pop	r13
   145a4:	cf 90       	pop	r12
   145a6:	bf 90       	pop	r11
   145a8:	af 90       	pop	r10
   145aa:	9f 90       	pop	r9
   145ac:	8f 90       	pop	r8
   145ae:	7f 90       	pop	r7
   145b0:	6f 90       	pop	r6
   145b2:	5f 90       	pop	r5
   145b4:	4f 90       	pop	r4
   145b6:	3f 90       	pop	r3
   145b8:	2f 90       	pop	r2
   145ba:	08 95       	ret

000145bc <_Z12Publish_Datav>:
   145bc:	6f 92       	push	r6
   145be:	7f 92       	push	r7
   145c0:	8f 92       	push	r8
   145c2:	9f 92       	push	r9
   145c4:	af 92       	push	r10
   145c6:	bf 92       	push	r11
   145c8:	cf 92       	push	r12
   145ca:	df 92       	push	r13
   145cc:	ef 92       	push	r14
   145ce:	ff 92       	push	r15
   145d0:	0f 93       	push	r16
   145d2:	1f 93       	push	r17
   145d4:	cf 93       	push	r28
   145d6:	df 93       	push	r29
   145d8:	cd b7       	in	r28, 0x3d	; 61
   145da:	de b7       	in	r29, 0x3e	; 62
   145dc:	c4 5f       	subi	r28, 0xF4	; 244
   145de:	d1 40       	sbci	r29, 0x01	; 1
   145e0:	0f b6       	in	r0, 0x3f	; 63
   145e2:	f8 94       	cli
   145e4:	de bf       	out	0x3e, r29	; 62
   145e6:	0f be       	out	0x3f, r0	; 63
   145e8:	cd bf       	out	0x3d, r28	; 61
   145ea:	80 91 91 0c 	lds	r24, 0x0C91	; 0x800c91 <_gdo_not_perform_4g_oper>
   145ee:	90 91 92 0c 	lds	r25, 0x0C92	; 0x800c92 <_gdo_not_perform_4g_oper+0x1>
   145f2:	89 2b       	or	r24, r25
   145f4:	11 f0       	breq	.+4      	; 0x145fa <_Z12Publish_Datav+0x3e>
   145f6:	0c 94 ca ac 	jmp	0x15994	; 0x15994 <_Z12Publish_Datav+0x13d8>
   145fa:	82 e0       	ldi	r24, 0x02	; 2
   145fc:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14600:	ce 01       	movw	r24, r28
   14602:	09 96       	adiw	r24, 0x09	; 9
   14604:	9c 83       	std	Y+4, r25	; 0x04
   14606:	8b 83       	std	Y+3, r24	; 0x03
   14608:	8e e0       	ldi	r24, 0x0E	; 14
   1460a:	91 e0       	ldi	r25, 0x01	; 1
   1460c:	9e 83       	std	Y+6, r25	; 0x06
   1460e:	8d 83       	std	Y+5, r24	; 0x05
   14610:	18 86       	std	Y+8, r1	; 0x08
   14612:	1f 82       	std	Y+7, r1	; 0x07
   14614:	89 ed       	ldi	r24, 0xD9	; 217
   14616:	97 e0       	ldi	r25, 0x07	; 7
   14618:	9a 83       	std	Y+2, r25	; 0x02
   1461a:	89 83       	std	Y+1, r24	; 0x01
   1461c:	ce 01       	movw	r24, r28
   1461e:	01 96       	adiw	r24, 0x01	; 1
   14620:	0e 94 7b 84 	call	0x108f6	; 0x108f6 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   14624:	8c 01       	movw	r16, r24
   14626:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1462a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1462e:	81 ff       	sbrs	r24, 1
   14630:	69 c0       	rjmp	.+210    	; 0x14704 <_Z12Publish_Datav+0x148>
   14632:	7e 01       	movw	r14, r28
   14634:	29 ee       	ldi	r18, 0xE9	; 233
   14636:	e2 1a       	sub	r14, r18
   14638:	2e ef       	ldi	r18, 0xFE	; 254
   1463a:	f2 0a       	sbc	r15, r18
   1463c:	8c ed       	ldi	r24, 0xDC	; 220
   1463e:	d7 01       	movw	r26, r14
   14640:	1d 92       	st	X+, r1
   14642:	8a 95       	dec	r24
   14644:	e9 f7       	brne	.-6      	; 0x14640 <_Z12Publish_Datav+0x84>
   14646:	48 e4       	ldi	r20, 0x48	; 72
   14648:	53 e1       	ldi	r21, 0x13	; 19
   1464a:	62 e1       	ldi	r22, 0x12	; 18
   1464c:	73 e3       	ldi	r23, 0x33	; 51
   1464e:	c8 01       	movw	r24, r16
   14650:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14654:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   14658:	82 30       	cpi	r24, 0x02	; 2
   1465a:	80 f0       	brcs	.+32     	; 0x1467c <_Z12Publish_Datav+0xc0>
   1465c:	90 e0       	ldi	r25, 0x00	; 0
   1465e:	02 97       	sbiw	r24, 0x02	; 2
   14660:	2b e0       	ldi	r18, 0x0B	; 11
   14662:	28 9f       	mul	r18, r24
   14664:	a0 01       	movw	r20, r0
   14666:	29 9f       	mul	r18, r25
   14668:	50 0d       	add	r21, r0
   1466a:	11 24       	eor	r1, r1
   1466c:	42 56       	subi	r20, 0x62	; 98
   1466e:	54 4f       	sbci	r21, 0xF4	; 244
   14670:	6d e0       	ldi	r22, 0x0D	; 13
   14672:	73 e3       	ldi	r23, 0x33	; 51
   14674:	c8 01       	movw	r24, r16
   14676:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1467a:	0e c0       	rjmp	.+28     	; 0x14698 <_Z12Publish_Datav+0xdc>
   1467c:	cd 50       	subi	r28, 0x0D	; 13
   1467e:	de 4f       	sbci	r29, 0xFE	; 254
   14680:	19 82       	std	Y+1, r1	; 0x01
   14682:	18 82       	st	Y, r1
   14684:	c3 5f       	subi	r28, 0xF3	; 243
   14686:	d1 40       	sbci	r29, 0x01	; 1
   14688:	ae 01       	movw	r20, r28
   1468a:	4d 50       	subi	r20, 0x0D	; 13
   1468c:	5e 4f       	sbci	r21, 0xFE	; 254
   1468e:	68 e0       	ldi	r22, 0x08	; 8
   14690:	73 e3       	ldi	r23, 0x33	; 51
   14692:	c8 01       	movw	r24, r16
   14694:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14698:	4c ed       	ldi	r20, 0xDC	; 220
   1469a:	50 e0       	ldi	r21, 0x00	; 0
   1469c:	b7 01       	movw	r22, r14
   1469e:	c8 01       	movw	r24, r16
   146a0:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   146a4:	ee ef       	ldi	r30, 0xFE	; 254
   146a6:	fe e0       	ldi	r31, 0x0E	; 14
   146a8:	8e e6       	ldi	r24, 0x6E	; 110
   146aa:	df 01       	movw	r26, r30
   146ac:	1d 92       	st	X+, r1
   146ae:	8a 95       	dec	r24
   146b0:	e9 f7       	brne	.-6      	; 0x146ac <_Z12Publish_Datav+0xf0>
   146b2:	8a e6       	ldi	r24, 0x6A	; 106
   146b4:	93 e1       	ldi	r25, 0x13	; 19
   146b6:	9f 93       	push	r25
   146b8:	8f 93       	push	r24
   146ba:	8c e2       	ldi	r24, 0x2C	; 44
   146bc:	97 e0       	ldi	r25, 0x07	; 7
   146be:	9f 93       	push	r25
   146c0:	8f 93       	push	r24
   146c2:	ff 93       	push	r31
   146c4:	ef 93       	push	r30
   146c6:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   146ca:	0f 90       	pop	r0
   146cc:	0f 90       	pop	r0
   146ce:	0f 90       	pop	r0
   146d0:	0f 90       	pop	r0
   146d2:	0f 90       	pop	r0
   146d4:	0f 90       	pop	r0
   146d6:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   146da:	88 23       	and	r24, r24
   146dc:	69 f0       	breq	.+26     	; 0x146f8 <_Z12Publish_Datav+0x13c>
   146de:	b7 01       	movw	r22, r14
   146e0:	8e ef       	ldi	r24, 0xFE	; 254
   146e2:	9e e0       	ldi	r25, 0x0E	; 14
   146e4:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   146e8:	81 11       	cpse	r24, r1
   146ea:	06 c0       	rjmp	.+12     	; 0x146f8 <_Z12Publish_Datav+0x13c>
   146ec:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   146f0:	81 50       	subi	r24, 0x01	; 1
   146f2:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   146f6:	ef cf       	rjmp	.-34     	; 0x146d6 <_Z12Publish_Datav+0x11a>
   146f8:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   146fc:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   14700:	8d 7f       	andi	r24, 0xFD	; 253
   14702:	a5 c0       	rjmp	.+330    	; 0x1484e <_Z12Publish_Datav+0x292>
   14704:	83 ff       	sbrs	r24, 3
   14706:	a9 c0       	rjmp	.+338    	; 0x1485a <_Z12Publish_Datav+0x29e>
   14708:	7e 01       	movw	r14, r28
   1470a:	b9 ee       	ldi	r27, 0xE9	; 233
   1470c:	eb 1a       	sub	r14, r27
   1470e:	be ef       	ldi	r27, 0xFE	; 254
   14710:	fb 0a       	sbc	r15, r27
   14712:	8c ed       	ldi	r24, 0xDC	; 220
   14714:	f7 01       	movw	r30, r14
   14716:	11 92       	st	Z+, r1
   14718:	8a 95       	dec	r24
   1471a:	e9 f7       	brne	.-6      	; 0x14716 <_Z12Publish_Datav+0x15a>
   1471c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14720:	81 30       	cpi	r24, 0x01	; 1
   14722:	51 f4       	brne	.+20     	; 0x14738 <_Z12Publish_Datav+0x17c>
   14724:	63 ef       	ldi	r22, 0xF3	; 243
   14726:	72 e3       	ldi	r23, 0x32	; 50
   14728:	85 e5       	ldi	r24, 0x55	; 85
   1472a:	94 e1       	ldi	r25, 0x14	; 20
   1472c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14730:	85 e5       	ldi	r24, 0x55	; 85
   14732:	94 e1       	ldi	r25, 0x14	; 20
   14734:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14738:	8a e0       	ldi	r24, 0x0A	; 10
   1473a:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   1473e:	21 e0       	ldi	r18, 0x01	; 1
   14740:	89 2b       	or	r24, r25
   14742:	09 f0       	breq	.+2      	; 0x14746 <_Z12Publish_Datav+0x18a>
   14744:	20 e0       	ldi	r18, 0x00	; 0
   14746:	cd 50       	subi	r28, 0x0D	; 13
   14748:	de 4f       	sbci	r29, 0xFE	; 254
   1474a:	28 83       	st	Y, r18
   1474c:	c3 5f       	subi	r28, 0xF3	; 243
   1474e:	d1 40       	sbci	r29, 0x01	; 1
   14750:	ae 01       	movw	r20, r28
   14752:	4d 50       	subi	r20, 0x0D	; 13
   14754:	5e 4f       	sbci	r21, 0xFE	; 254
   14756:	6b ee       	ldi	r22, 0xEB	; 235
   14758:	72 e3       	ldi	r23, 0x32	; 50
   1475a:	c8 01       	movw	r24, r16
   1475c:	0e 94 23 89 	call	0x11246	; 0x11246 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14760:	cd 50       	subi	r28, 0x0D	; 13
   14762:	de 4f       	sbci	r29, 0xFE	; 254
   14764:	19 82       	std	Y+1, r1	; 0x01
   14766:	18 82       	st	Y, r1
   14768:	c3 5f       	subi	r28, 0xF3	; 243
   1476a:	d1 40       	sbci	r29, 0x01	; 1
   1476c:	ae 01       	movw	r20, r28
   1476e:	4d 50       	subi	r20, 0x0D	; 13
   14770:	5e 4f       	sbci	r21, 0xFE	; 254
   14772:	64 ee       	ldi	r22, 0xE4	; 228
   14774:	72 e3       	ldi	r23, 0x32	; 50
   14776:	c8 01       	movw	r24, r16
   14778:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1477c:	80 91 60 13 	lds	r24, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   14780:	90 91 61 13 	lds	r25, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
   14784:	00 97       	sbiw	r24, 0x00	; 0
   14786:	91 f0       	breq	.+36     	; 0x147ac <_Z12Publish_Datav+0x1f0>
   14788:	6c e3       	ldi	r22, 0x3C	; 60
   1478a:	70 e0       	ldi	r23, 0x00	; 0
   1478c:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   14790:	6f 5f       	subi	r22, 0xFF	; 255
   14792:	7f 4f       	sbci	r23, 0xFF	; 255
   14794:	cd 50       	subi	r28, 0x0D	; 13
   14796:	de 4f       	sbci	r29, 0xFE	; 254
   14798:	79 83       	std	Y+1, r23	; 0x01
   1479a:	68 83       	st	Y, r22
   1479c:	c3 5f       	subi	r28, 0xF3	; 243
   1479e:	d1 40       	sbci	r29, 0x01	; 1
   147a0:	ae 01       	movw	r20, r28
   147a2:	4d 50       	subi	r20, 0x0D	; 13
   147a4:	5e 4f       	sbci	r21, 0xFE	; 254
   147a6:	6f ed       	ldi	r22, 0xDF	; 223
   147a8:	72 e3       	ldi	r23, 0x32	; 50
   147aa:	04 c0       	rjmp	.+8      	; 0x147b4 <_Z12Publish_Datav+0x1f8>
   147ac:	40 e6       	ldi	r20, 0x60	; 96
   147ae:	53 e1       	ldi	r21, 0x13	; 19
   147b0:	6a ed       	ldi	r22, 0xDA	; 218
   147b2:	72 e3       	ldi	r23, 0x32	; 50
   147b4:	c8 01       	movw	r24, r16
   147b6:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   147ba:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   147be:	83 30       	cpi	r24, 0x03	; 3
   147c0:	41 f4       	brne	.+16     	; 0x147d2 <_Z12Publish_Datav+0x216>
   147c2:	43 ef       	ldi	r20, 0xF3	; 243
   147c4:	53 e1       	ldi	r21, 0x13	; 19
   147c6:	65 ed       	ldi	r22, 0xD5	; 213
   147c8:	72 e3       	ldi	r23, 0x32	; 50
   147ca:	c8 01       	movw	r24, r16
   147cc:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   147d0:	09 c0       	rjmp	.+18     	; 0x147e4 <_Z12Publish_Datav+0x228>
   147d2:	45 e0       	ldi	r20, 0x05	; 5
   147d4:	54 e1       	ldi	r21, 0x14	; 20
   147d6:	60 ed       	ldi	r22, 0xD0	; 208
   147d8:	72 e3       	ldi	r23, 0x32	; 50
   147da:	c8 01       	movw	r24, r16
   147dc:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   147e0:	10 92 05 14 	sts	0x1405, r1	; 0x801405 <_sRuble_Parameters+0xbb>
   147e4:	4c ed       	ldi	r20, 0xDC	; 220
   147e6:	50 e0       	ldi	r21, 0x00	; 0
   147e8:	b7 01       	movw	r22, r14
   147ea:	c8 01       	movw	r24, r16
   147ec:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   147f0:	ee ef       	ldi	r30, 0xFE	; 254
   147f2:	fe e0       	ldi	r31, 0x0E	; 14
   147f4:	8e e6       	ldi	r24, 0x6E	; 110
   147f6:	df 01       	movw	r26, r30
   147f8:	1d 92       	st	X+, r1
   147fa:	8a 95       	dec	r24
   147fc:	e9 f7       	brne	.-6      	; 0x147f8 <_Z12Publish_Datav+0x23c>
   147fe:	8a e6       	ldi	r24, 0x6A	; 106
   14800:	93 e1       	ldi	r25, 0x13	; 19
   14802:	9f 93       	push	r25
   14804:	8f 93       	push	r24
   14806:	8b e3       	ldi	r24, 0x3B	; 59
   14808:	97 e0       	ldi	r25, 0x07	; 7
   1480a:	9f 93       	push	r25
   1480c:	8f 93       	push	r24
   1480e:	ff 93       	push	r31
   14810:	ef 93       	push	r30
   14812:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14816:	0f 90       	pop	r0
   14818:	0f 90       	pop	r0
   1481a:	0f 90       	pop	r0
   1481c:	0f 90       	pop	r0
   1481e:	0f 90       	pop	r0
   14820:	0f 90       	pop	r0
   14822:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14826:	88 23       	and	r24, r24
   14828:	69 f0       	breq	.+26     	; 0x14844 <_Z12Publish_Datav+0x288>
   1482a:	b7 01       	movw	r22, r14
   1482c:	8e ef       	ldi	r24, 0xFE	; 254
   1482e:	9e e0       	ldi	r25, 0x0E	; 14
   14830:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14834:	81 11       	cpse	r24, r1
   14836:	06 c0       	rjmp	.+12     	; 0x14844 <_Z12Publish_Datav+0x288>
   14838:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   1483c:	81 50       	subi	r24, 0x01	; 1
   1483e:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14842:	ef cf       	rjmp	.-34     	; 0x14822 <_Z12Publish_Datav+0x266>
   14844:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   14848:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1484c:	87 7f       	andi	r24, 0xF7	; 247
   1484e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   14852:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   14856:	0c 94 ca ac 	jmp	0x15994	; 0x15994 <_Z12Publish_Datav+0x13d8>
   1485a:	97 ff       	sbrs	r25, 7
   1485c:	50 c0       	rjmp	.+160    	; 0x148fe <_Z12Publish_Datav+0x342>
   1485e:	7e 01       	movw	r14, r28
   14860:	b9 ee       	ldi	r27, 0xE9	; 233
   14862:	eb 1a       	sub	r14, r27
   14864:	be ef       	ldi	r27, 0xFE	; 254
   14866:	fb 0a       	sbc	r15, r27
   14868:	8c ed       	ldi	r24, 0xDC	; 220
   1486a:	f7 01       	movw	r30, r14
   1486c:	11 92       	st	Z+, r1
   1486e:	8a 95       	dec	r24
   14870:	e9 f7       	brne	.-6      	; 0x1486c <_Z12Publish_Datav+0x2b0>
   14872:	86 e0       	ldi	r24, 0x06	; 6
   14874:	90 e0       	ldi	r25, 0x00	; 0
   14876:	cd 50       	subi	r28, 0x0D	; 13
   14878:	de 4f       	sbci	r29, 0xFE	; 254
   1487a:	99 83       	std	Y+1, r25	; 0x01
   1487c:	88 83       	st	Y, r24
   1487e:	c3 5f       	subi	r28, 0xF3	; 243
   14880:	d1 40       	sbci	r29, 0x01	; 1
   14882:	ae 01       	movw	r20, r28
   14884:	4d 50       	subi	r20, 0x0D	; 13
   14886:	5e 4f       	sbci	r21, 0xFE	; 254
   14888:	6a ec       	ldi	r22, 0xCA	; 202
   1488a:	72 e3       	ldi	r23, 0x32	; 50
   1488c:	c8 01       	movw	r24, r16
   1488e:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14892:	4c ed       	ldi	r20, 0xDC	; 220
   14894:	50 e0       	ldi	r21, 0x00	; 0
   14896:	b7 01       	movw	r22, r14
   14898:	c8 01       	movw	r24, r16
   1489a:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1489e:	ee ef       	ldi	r30, 0xFE	; 254
   148a0:	fe e0       	ldi	r31, 0x0E	; 14
   148a2:	8e e6       	ldi	r24, 0x6E	; 110
   148a4:	df 01       	movw	r26, r30
   148a6:	1d 92       	st	X+, r1
   148a8:	8a 95       	dec	r24
   148aa:	e9 f7       	brne	.-6      	; 0x148a6 <_Z12Publish_Datav+0x2ea>
   148ac:	8a e6       	ldi	r24, 0x6A	; 106
   148ae:	93 e1       	ldi	r25, 0x13	; 19
   148b0:	9f 93       	push	r25
   148b2:	8f 93       	push	r24
   148b4:	8c e2       	ldi	r24, 0x2C	; 44
   148b6:	97 e0       	ldi	r25, 0x07	; 7
   148b8:	9f 93       	push	r25
   148ba:	8f 93       	push	r24
   148bc:	ff 93       	push	r31
   148be:	ef 93       	push	r30
   148c0:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   148c4:	0f 90       	pop	r0
   148c6:	0f 90       	pop	r0
   148c8:	0f 90       	pop	r0
   148ca:	0f 90       	pop	r0
   148cc:	0f 90       	pop	r0
   148ce:	0f 90       	pop	r0
   148d0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   148d4:	88 23       	and	r24, r24
   148d6:	69 f0       	breq	.+26     	; 0x148f2 <_Z12Publish_Datav+0x336>
   148d8:	b7 01       	movw	r22, r14
   148da:	8e ef       	ldi	r24, 0xFE	; 254
   148dc:	9e e0       	ldi	r25, 0x0E	; 14
   148de:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   148e2:	81 11       	cpse	r24, r1
   148e4:	06 c0       	rjmp	.+12     	; 0x148f2 <_Z12Publish_Datav+0x336>
   148e6:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   148ea:	81 50       	subi	r24, 0x01	; 1
   148ec:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   148f0:	ef cf       	rjmp	.-34     	; 0x148d0 <_Z12Publish_Datav+0x314>
   148f2:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   148f6:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   148fa:	9f 77       	andi	r25, 0x7F	; 127
   148fc:	a8 cf       	rjmp	.-176    	; 0x1484e <_Z12Publish_Datav+0x292>
   148fe:	86 ff       	sbrs	r24, 6
   14900:	e3 c0       	rjmp	.+454    	; 0x14ac8 <_Z12Publish_Datav+0x50c>
   14902:	7e 01       	movw	r14, r28
   14904:	b9 ee       	ldi	r27, 0xE9	; 233
   14906:	eb 1a       	sub	r14, r27
   14908:	be ef       	ldi	r27, 0xFE	; 254
   1490a:	fb 0a       	sbc	r15, r27
   1490c:	8c ed       	ldi	r24, 0xDC	; 220
   1490e:	f7 01       	movw	r30, r14
   14910:	11 92       	st	Z+, r1
   14912:	8a 95       	dec	r24
   14914:	e9 f7       	brne	.-6      	; 0x14910 <_Z12Publish_Datav+0x354>
   14916:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1491a:	81 30       	cpi	r24, 0x01	; 1
   1491c:	51 f4       	brne	.+20     	; 0x14932 <_Z12Publish_Datav+0x376>
   1491e:	65 eb       	ldi	r22, 0xB5	; 181
   14920:	72 e3       	ldi	r23, 0x32	; 50
   14922:	85 e5       	ldi	r24, 0x55	; 85
   14924:	94 e1       	ldi	r25, 0x14	; 20
   14926:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1492a:	85 e5       	ldi	r24, 0x55	; 85
   1492c:	94 e1       	ldi	r25, 0x14	; 20
   1492e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14932:	cd 50       	subi	r28, 0x0D	; 13
   14934:	de 4f       	sbci	r29, 0xFE	; 254
   14936:	19 82       	std	Y+1, r1	; 0x01
   14938:	18 82       	st	Y, r1
   1493a:	c3 5f       	subi	r28, 0xF3	; 243
   1493c:	d1 40       	sbci	r29, 0x01	; 1
   1493e:	ae 01       	movw	r20, r28
   14940:	4d 50       	subi	r20, 0x0D	; 13
   14942:	5e 4f       	sbci	r21, 0xFE	; 254
   14944:	6b ea       	ldi	r22, 0xAB	; 171
   14946:	72 e3       	ldi	r23, 0x32	; 50
   14948:	c8 01       	movw	r24, r16
   1494a:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1494e:	cd 50       	subi	r28, 0x0D	; 13
   14950:	de 4f       	sbci	r29, 0xFE	; 254
   14952:	19 82       	std	Y+1, r1	; 0x01
   14954:	18 82       	st	Y, r1
   14956:	c3 5f       	subi	r28, 0xF3	; 243
   14958:	d1 40       	sbci	r29, 0x01	; 1
   1495a:	ae 01       	movw	r20, r28
   1495c:	4d 50       	subi	r20, 0x0D	; 13
   1495e:	5e 4f       	sbci	r21, 0xFE	; 254
   14960:	67 ea       	ldi	r22, 0xA7	; 167
   14962:	72 e3       	ldi	r23, 0x32	; 50
   14964:	c8 01       	movw	r24, r16
   14966:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1496a:	cd 50       	subi	r28, 0x0D	; 13
   1496c:	de 4f       	sbci	r29, 0xFE	; 254
   1496e:	19 82       	std	Y+1, r1	; 0x01
   14970:	18 82       	st	Y, r1
   14972:	c3 5f       	subi	r28, 0xF3	; 243
   14974:	d1 40       	sbci	r29, 0x01	; 1
   14976:	ae 01       	movw	r20, r28
   14978:	4d 50       	subi	r20, 0x0D	; 13
   1497a:	5e 4f       	sbci	r21, 0xFE	; 254
   1497c:	63 ea       	ldi	r22, 0xA3	; 163
   1497e:	72 e3       	ldi	r23, 0x32	; 50
   14980:	c8 01       	movw	r24, r16
   14982:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14986:	cd 50       	subi	r28, 0x0D	; 13
   14988:	de 4f       	sbci	r29, 0xFE	; 254
   1498a:	19 82       	std	Y+1, r1	; 0x01
   1498c:	18 82       	st	Y, r1
   1498e:	c3 5f       	subi	r28, 0xF3	; 243
   14990:	d1 40       	sbci	r29, 0x01	; 1
   14992:	ae 01       	movw	r20, r28
   14994:	4d 50       	subi	r20, 0x0D	; 13
   14996:	5e 4f       	sbci	r21, 0xFE	; 254
   14998:	6f e9       	ldi	r22, 0x9F	; 159
   1499a:	72 e3       	ldi	r23, 0x32	; 50
   1499c:	c8 01       	movw	r24, r16
   1499e:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149a2:	cd 50       	subi	r28, 0x0D	; 13
   149a4:	de 4f       	sbci	r29, 0xFE	; 254
   149a6:	19 82       	std	Y+1, r1	; 0x01
   149a8:	18 82       	st	Y, r1
   149aa:	c3 5f       	subi	r28, 0xF3	; 243
   149ac:	d1 40       	sbci	r29, 0x01	; 1
   149ae:	ae 01       	movw	r20, r28
   149b0:	4d 50       	subi	r20, 0x0D	; 13
   149b2:	5e 4f       	sbci	r21, 0xFE	; 254
   149b4:	6b e9       	ldi	r22, 0x9B	; 155
   149b6:	72 e3       	ldi	r23, 0x32	; 50
   149b8:	c8 01       	movw	r24, r16
   149ba:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149be:	cd 50       	subi	r28, 0x0D	; 13
   149c0:	de 4f       	sbci	r29, 0xFE	; 254
   149c2:	19 82       	std	Y+1, r1	; 0x01
   149c4:	18 82       	st	Y, r1
   149c6:	c3 5f       	subi	r28, 0xF3	; 243
   149c8:	d1 40       	sbci	r29, 0x01	; 1
   149ca:	ae 01       	movw	r20, r28
   149cc:	4d 50       	subi	r20, 0x0D	; 13
   149ce:	5e 4f       	sbci	r21, 0xFE	; 254
   149d0:	61 e9       	ldi	r22, 0x91	; 145
   149d2:	72 e3       	ldi	r23, 0x32	; 50
   149d4:	c8 01       	movw	r24, r16
   149d6:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149da:	cd 50       	subi	r28, 0x0D	; 13
   149dc:	de 4f       	sbci	r29, 0xFE	; 254
   149de:	19 82       	std	Y+1, r1	; 0x01
   149e0:	18 82       	st	Y, r1
   149e2:	c3 5f       	subi	r28, 0xF3	; 243
   149e4:	d1 40       	sbci	r29, 0x01	; 1
   149e6:	ae 01       	movw	r20, r28
   149e8:	4d 50       	subi	r20, 0x0D	; 13
   149ea:	5e 4f       	sbci	r21, 0xFE	; 254
   149ec:	65 e8       	ldi	r22, 0x85	; 133
   149ee:	72 e3       	ldi	r23, 0x32	; 50
   149f0:	c8 01       	movw	r24, r16
   149f2:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149f6:	cd 50       	subi	r28, 0x0D	; 13
   149f8:	de 4f       	sbci	r29, 0xFE	; 254
   149fa:	19 82       	std	Y+1, r1	; 0x01
   149fc:	18 82       	st	Y, r1
   149fe:	c3 5f       	subi	r28, 0xF3	; 243
   14a00:	d1 40       	sbci	r29, 0x01	; 1
   14a02:	ae 01       	movw	r20, r28
   14a04:	4d 50       	subi	r20, 0x0D	; 13
   14a06:	5e 4f       	sbci	r21, 0xFE	; 254
   14a08:	6c e7       	ldi	r22, 0x7C	; 124
   14a0a:	72 e3       	ldi	r23, 0x32	; 50
   14a0c:	c8 01       	movw	r24, r16
   14a0e:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a12:	cd 50       	subi	r28, 0x0D	; 13
   14a14:	de 4f       	sbci	r29, 0xFE	; 254
   14a16:	19 82       	std	Y+1, r1	; 0x01
   14a18:	18 82       	st	Y, r1
   14a1a:	c3 5f       	subi	r28, 0xF3	; 243
   14a1c:	d1 40       	sbci	r29, 0x01	; 1
   14a1e:	ae 01       	movw	r20, r28
   14a20:	4d 50       	subi	r20, 0x0D	; 13
   14a22:	5e 4f       	sbci	r21, 0xFE	; 254
   14a24:	66 e7       	ldi	r22, 0x76	; 118
   14a26:	72 e3       	ldi	r23, 0x32	; 50
   14a28:	c8 01       	movw	r24, r16
   14a2a:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a2e:	cd 50       	subi	r28, 0x0D	; 13
   14a30:	de 4f       	sbci	r29, 0xFE	; 254
   14a32:	19 82       	std	Y+1, r1	; 0x01
   14a34:	18 82       	st	Y, r1
   14a36:	c3 5f       	subi	r28, 0xF3	; 243
   14a38:	d1 40       	sbci	r29, 0x01	; 1
   14a3a:	ae 01       	movw	r20, r28
   14a3c:	4d 50       	subi	r20, 0x0D	; 13
   14a3e:	5e 4f       	sbci	r21, 0xFE	; 254
   14a40:	61 e7       	ldi	r22, 0x71	; 113
   14a42:	72 e3       	ldi	r23, 0x32	; 50
   14a44:	c8 01       	movw	r24, r16
   14a46:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a4a:	4c ed       	ldi	r20, 0xDC	; 220
   14a4c:	50 e0       	ldi	r21, 0x00	; 0
   14a4e:	b7 01       	movw	r22, r14
   14a50:	c8 01       	movw	r24, r16
   14a52:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14a56:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14a5a:	81 30       	cpi	r24, 0x01	; 1
   14a5c:	29 f4       	brne	.+10     	; 0x14a68 <_Z12Publish_Datav+0x4ac>
   14a5e:	b7 01       	movw	r22, r14
   14a60:	85 e5       	ldi	r24, 0x55	; 85
   14a62:	94 e1       	ldi	r25, 0x14	; 20
   14a64:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   14a68:	ee ef       	ldi	r30, 0xFE	; 254
   14a6a:	fe e0       	ldi	r31, 0x0E	; 14
   14a6c:	8e e6       	ldi	r24, 0x6E	; 110
   14a6e:	df 01       	movw	r26, r30
   14a70:	1d 92       	st	X+, r1
   14a72:	8a 95       	dec	r24
   14a74:	e9 f7       	brne	.-6      	; 0x14a70 <_Z12Publish_Datav+0x4b4>
   14a76:	83 e1       	ldi	r24, 0x13	; 19
   14a78:	97 e0       	ldi	r25, 0x07	; 7
   14a7a:	9f 93       	push	r25
   14a7c:	8f 93       	push	r24
   14a7e:	83 e5       	ldi	r24, 0x53	; 83
   14a80:	97 e0       	ldi	r25, 0x07	; 7
   14a82:	9f 93       	push	r25
   14a84:	8f 93       	push	r24
   14a86:	ff 93       	push	r31
   14a88:	ef 93       	push	r30
   14a8a:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14a8e:	0f 90       	pop	r0
   14a90:	0f 90       	pop	r0
   14a92:	0f 90       	pop	r0
   14a94:	0f 90       	pop	r0
   14a96:	0f 90       	pop	r0
   14a98:	0f 90       	pop	r0
   14a9a:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14a9e:	88 23       	and	r24, r24
   14aa0:	69 f0       	breq	.+26     	; 0x14abc <_Z12Publish_Datav+0x500>
   14aa2:	b7 01       	movw	r22, r14
   14aa4:	8e ef       	ldi	r24, 0xFE	; 254
   14aa6:	9e e0       	ldi	r25, 0x0E	; 14
   14aa8:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14aac:	81 11       	cpse	r24, r1
   14aae:	06 c0       	rjmp	.+12     	; 0x14abc <_Z12Publish_Datav+0x500>
   14ab0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14ab4:	81 50       	subi	r24, 0x01	; 1
   14ab6:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14aba:	ef cf       	rjmp	.-34     	; 0x14a9a <_Z12Publish_Datav+0x4de>
   14abc:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   14ac0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   14ac4:	8f 7b       	andi	r24, 0xBF	; 191
   14ac6:	c3 ce       	rjmp	.-634    	; 0x1484e <_Z12Publish_Datav+0x292>
   14ac8:	87 ff       	sbrs	r24, 7
   14aca:	7e c0       	rjmp	.+252    	; 0x14bc8 <_Z12Publish_Datav+0x60c>
   14acc:	6e 01       	movw	r12, r28
   14ace:	b9 ee       	ldi	r27, 0xE9	; 233
   14ad0:	cb 1a       	sub	r12, r27
   14ad2:	be ef       	ldi	r27, 0xFE	; 254
   14ad4:	db 0a       	sbc	r13, r27
   14ad6:	8c ed       	ldi	r24, 0xDC	; 220
   14ad8:	f6 01       	movw	r30, r12
   14ada:	11 92       	st	Z+, r1
   14adc:	8a 95       	dec	r24
   14ade:	e9 f7       	brne	.-6      	; 0x14ada <_Z12Publish_Datav+0x51e>
   14ae0:	80 91 fc 13 	lds	r24, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb2>
   14ae4:	87 30       	cpi	r24, 0x07	; 7
   14ae6:	08 f0       	brcs	.+2      	; 0x14aea <_Z12Publish_Datav+0x52e>
   14ae8:	69 c0       	rjmp	.+210    	; 0x14bbc <_Z12Publish_Datav+0x600>
   14aea:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14aee:	81 30       	cpi	r24, 0x01	; 1
   14af0:	51 f4       	brne	.+20     	; 0x14b06 <_Z12Publish_Datav+0x54a>
   14af2:	6b e5       	ldi	r22, 0x5B	; 91
   14af4:	72 e3       	ldi	r23, 0x32	; 50
   14af6:	85 e5       	ldi	r24, 0x55	; 85
   14af8:	94 e1       	ldi	r25, 0x14	; 20
   14afa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14afe:	85 e5       	ldi	r24, 0x55	; 85
   14b00:	94 e1       	ldi	r25, 0x14	; 20
   14b02:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14b06:	40 91 fc 13 	lds	r20, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb2>
   14b0a:	7d e0       	ldi	r23, 0x0D	; 13
   14b0c:	f7 2e       	mov	r15, r23
   14b0e:	f4 9e       	mul	r15, r20
   14b10:	a0 01       	movw	r20, r0
   14b12:	11 24       	eor	r1, r1
   14b14:	4e 53       	subi	r20, 0x3E	; 62
   14b16:	54 4f       	sbci	r21, 0xF4	; 244
   14b18:	6f e4       	ldi	r22, 0x4F	; 79
   14b1a:	72 e3       	ldi	r23, 0x32	; 50
   14b1c:	c8 01       	movw	r24, r16
   14b1e:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b22:	40 91 fc 13 	lds	r20, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb2>
   14b26:	f4 9e       	mul	r15, r20
   14b28:	a0 01       	movw	r20, r0
   14b2a:	11 24       	eor	r1, r1
   14b2c:	41 54       	subi	r20, 0x41	; 65
   14b2e:	54 4f       	sbci	r21, 0xF4	; 244
   14b30:	6a e4       	ldi	r22, 0x4A	; 74
   14b32:	72 e3       	ldi	r23, 0x32	; 50
   14b34:	c8 01       	movw	r24, r16
   14b36:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14b3a:	40 91 fc 13 	lds	r20, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb2>
   14b3e:	f4 9e       	mul	r15, r20
   14b40:	a0 01       	movw	r20, r0
   14b42:	11 24       	eor	r1, r1
   14b44:	4f 53       	subi	r20, 0x3F	; 63
   14b46:	54 4f       	sbci	r21, 0xF4	; 244
   14b48:	60 e4       	ldi	r22, 0x40	; 64
   14b4a:	72 e3       	ldi	r23, 0x32	; 50
   14b4c:	c8 01       	movw	r24, r16
   14b4e:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b52:	4c ed       	ldi	r20, 0xDC	; 220
   14b54:	50 e0       	ldi	r21, 0x00	; 0
   14b56:	b6 01       	movw	r22, r12
   14b58:	c8 01       	movw	r24, r16
   14b5a:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14b5e:	ee ef       	ldi	r30, 0xFE	; 254
   14b60:	fe e0       	ldi	r31, 0x0E	; 14
   14b62:	8e e6       	ldi	r24, 0x6E	; 110
   14b64:	df 01       	movw	r26, r30
   14b66:	1d 92       	st	X+, r1
   14b68:	8a 95       	dec	r24
   14b6a:	e9 f7       	brne	.-6      	; 0x14b66 <_Z12Publish_Datav+0x5aa>
   14b6c:	80 91 fc 13 	lds	r24, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb2>
   14b70:	f8 9e       	mul	r15, r24
   14b72:	c0 01       	movw	r24, r0
   14b74:	11 24       	eor	r1, r1
   14b76:	88 54       	subi	r24, 0x48	; 72
   14b78:	94 4f       	sbci	r25, 0xF4	; 244
   14b7a:	9f 93       	push	r25
   14b7c:	8f 93       	push	r24
   14b7e:	88 e6       	ldi	r24, 0x68	; 104
   14b80:	97 e0       	ldi	r25, 0x07	; 7
   14b82:	9f 93       	push	r25
   14b84:	8f 93       	push	r24
   14b86:	ff 93       	push	r31
   14b88:	ef 93       	push	r30
   14b8a:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14b8e:	0f 90       	pop	r0
   14b90:	0f 90       	pop	r0
   14b92:	0f 90       	pop	r0
   14b94:	0f 90       	pop	r0
   14b96:	0f 90       	pop	r0
   14b98:	0f 90       	pop	r0
   14b9a:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14b9e:	88 23       	and	r24, r24
   14ba0:	69 f0       	breq	.+26     	; 0x14bbc <_Z12Publish_Datav+0x600>
   14ba2:	b6 01       	movw	r22, r12
   14ba4:	8e ef       	ldi	r24, 0xFE	; 254
   14ba6:	9e e0       	ldi	r25, 0x0E	; 14
   14ba8:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14bac:	81 11       	cpse	r24, r1
   14bae:	06 c0       	rjmp	.+12     	; 0x14bbc <_Z12Publish_Datav+0x600>
   14bb0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14bb4:	81 50       	subi	r24, 0x01	; 1
   14bb6:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14bba:	ef cf       	rjmp	.-34     	; 0x14b9a <_Z12Publish_Datav+0x5de>
   14bbc:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   14bc0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   14bc4:	8f 77       	andi	r24, 0x7F	; 127
   14bc6:	43 ce       	rjmp	.-890    	; 0x1484e <_Z12Publish_Datav+0x292>
   14bc8:	90 ff       	sbrs	r25, 0
   14bca:	55 c0       	rjmp	.+170    	; 0x14c76 <_Z12Publish_Datav+0x6ba>
   14bcc:	7e 01       	movw	r14, r28
   14bce:	b9 ee       	ldi	r27, 0xE9	; 233
   14bd0:	eb 1a       	sub	r14, r27
   14bd2:	be ef       	ldi	r27, 0xFE	; 254
   14bd4:	fb 0a       	sbc	r15, r27
   14bd6:	8c ed       	ldi	r24, 0xDC	; 220
   14bd8:	f7 01       	movw	r30, r14
   14bda:	11 92       	st	Z+, r1
   14bdc:	8a 95       	dec	r24
   14bde:	e9 f7       	brne	.-6      	; 0x14bda <_Z12Publish_Datav+0x61e>
   14be0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14be4:	81 30       	cpi	r24, 0x01	; 1
   14be6:	51 f4       	brne	.+20     	; 0x14bfc <_Z12Publish_Datav+0x640>
   14be8:	6a e2       	ldi	r22, 0x2A	; 42
   14bea:	72 e3       	ldi	r23, 0x32	; 50
   14bec:	85 e5       	ldi	r24, 0x55	; 85
   14bee:	94 e1       	ldi	r25, 0x14	; 20
   14bf0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14bf4:	85 e5       	ldi	r24, 0x55	; 85
   14bf6:	94 e1       	ldi	r25, 0x14	; 20
   14bf8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14bfc:	44 ea       	ldi	r20, 0xA4	; 164
   14bfe:	53 e1       	ldi	r21, 0x13	; 19
   14c00:	64 e2       	ldi	r22, 0x24	; 36
   14c02:	72 e3       	ldi	r23, 0x32	; 50
   14c04:	c8 01       	movw	r24, r16
   14c06:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14c0a:	4c ed       	ldi	r20, 0xDC	; 220
   14c0c:	50 e0       	ldi	r21, 0x00	; 0
   14c0e:	b7 01       	movw	r22, r14
   14c10:	c8 01       	movw	r24, r16
   14c12:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14c16:	ee ef       	ldi	r30, 0xFE	; 254
   14c18:	fe e0       	ldi	r31, 0x0E	; 14
   14c1a:	8e e6       	ldi	r24, 0x6E	; 110
   14c1c:	df 01       	movw	r26, r30
   14c1e:	1d 92       	st	X+, r1
   14c20:	8a 95       	dec	r24
   14c22:	e9 f7       	brne	.-6      	; 0x14c1e <_Z12Publish_Datav+0x662>
   14c24:	8a e6       	ldi	r24, 0x6A	; 106
   14c26:	93 e1       	ldi	r25, 0x13	; 19
   14c28:	9f 93       	push	r25
   14c2a:	8f 93       	push	r24
   14c2c:	8c e7       	ldi	r24, 0x7C	; 124
   14c2e:	97 e0       	ldi	r25, 0x07	; 7
   14c30:	9f 93       	push	r25
   14c32:	8f 93       	push	r24
   14c34:	ff 93       	push	r31
   14c36:	ef 93       	push	r30
   14c38:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14c3c:	0f 90       	pop	r0
   14c3e:	0f 90       	pop	r0
   14c40:	0f 90       	pop	r0
   14c42:	0f 90       	pop	r0
   14c44:	0f 90       	pop	r0
   14c46:	0f 90       	pop	r0
   14c48:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14c4c:	88 23       	and	r24, r24
   14c4e:	69 f0       	breq	.+26     	; 0x14c6a <_Z12Publish_Datav+0x6ae>
   14c50:	b7 01       	movw	r22, r14
   14c52:	8e ef       	ldi	r24, 0xFE	; 254
   14c54:	9e e0       	ldi	r25, 0x0E	; 14
   14c56:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14c5a:	81 11       	cpse	r24, r1
   14c5c:	06 c0       	rjmp	.+12     	; 0x14c6a <_Z12Publish_Datav+0x6ae>
   14c5e:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14c62:	81 50       	subi	r24, 0x01	; 1
   14c64:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14c68:	ef cf       	rjmp	.-34     	; 0x14c48 <_Z12Publish_Datav+0x68c>
   14c6a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   14c6e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   14c72:	9e 7f       	andi	r25, 0xFE	; 254
   14c74:	ec cd       	rjmp	.-1064   	; 0x1484e <_Z12Publish_Datav+0x292>
   14c76:	94 ff       	sbrs	r25, 4
   14c78:	3f c1       	rjmp	.+638    	; 0x14ef8 <_Z12Publish_Datav+0x93c>
   14c7a:	7e 01       	movw	r14, r28
   14c7c:	b9 ee       	ldi	r27, 0xE9	; 233
   14c7e:	eb 1a       	sub	r14, r27
   14c80:	be ef       	ldi	r27, 0xFE	; 254
   14c82:	fb 0a       	sbc	r15, r27
   14c84:	8c ed       	ldi	r24, 0xDC	; 220
   14c86:	f7 01       	movw	r30, r14
   14c88:	11 92       	st	Z+, r1
   14c8a:	8a 95       	dec	r24
   14c8c:	e9 f7       	brne	.-6      	; 0x14c88 <_Z12Publish_Datav+0x6cc>
   14c8e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14c92:	81 30       	cpi	r24, 0x01	; 1
   14c94:	51 f4       	brne	.+20     	; 0x14caa <_Z12Publish_Datav+0x6ee>
   14c96:	60 e1       	ldi	r22, 0x10	; 16
   14c98:	72 e3       	ldi	r23, 0x32	; 50
   14c9a:	85 e5       	ldi	r24, 0x55	; 85
   14c9c:	94 e1       	ldi	r25, 0x14	; 20
   14c9e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14ca2:	85 e5       	ldi	r24, 0x55	; 85
   14ca4:	94 e1       	ldi	r25, 0x14	; 20
   14ca6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14caa:	8a e0       	ldi	r24, 0x0A	; 10
   14cac:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   14cb0:	21 e0       	ldi	r18, 0x01	; 1
   14cb2:	89 2b       	or	r24, r25
   14cb4:	09 f0       	breq	.+2      	; 0x14cb8 <_Z12Publish_Datav+0x6fc>
   14cb6:	20 e0       	ldi	r18, 0x00	; 0
   14cb8:	cd 50       	subi	r28, 0x0D	; 13
   14cba:	de 4f       	sbci	r29, 0xFE	; 254
   14cbc:	28 83       	st	Y, r18
   14cbe:	c3 5f       	subi	r28, 0xF3	; 243
   14cc0:	d1 40       	sbci	r29, 0x01	; 1
   14cc2:	ae 01       	movw	r20, r28
   14cc4:	4d 50       	subi	r20, 0x0D	; 13
   14cc6:	5e 4f       	sbci	r21, 0xFE	; 254
   14cc8:	68 e0       	ldi	r22, 0x08	; 8
   14cca:	72 e3       	ldi	r23, 0x32	; 50
   14ccc:	c8 01       	movw	r24, r16
   14cce:	0e 94 23 89 	call	0x11246	; 0x11246 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14cd2:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   14cd6:	81 11       	cpse	r24, r1
   14cd8:	4e c0       	rjmp	.+156    	; 0x14d76 <_Z12Publish_Datav+0x7ba>
   14cda:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xbd>
   14cde:	88 23       	and	r24, r24
   14ce0:	09 f4       	brne	.+2      	; 0x14ce4 <_Z12Publish_Datav+0x728>
   14ce2:	43 c0       	rjmp	.+134    	; 0x14d6a <_Z12Publish_Datav+0x7ae>
   14ce4:	90 90 52 13 	lds	r9, 0x1352	; 0x801352 <_sRuble_Parameters+0x8>
   14ce8:	a0 90 53 13 	lds	r10, 0x1353	; 0x801353 <_sRuble_Parameters+0x9>
   14cec:	b0 90 54 13 	lds	r11, 0x1354	; 0x801354 <_sRuble_Parameters+0xa>
   14cf0:	c0 90 55 13 	lds	r12, 0x1355	; 0x801355 <_sRuble_Parameters+0xb>
   14cf4:	d0 90 56 13 	lds	r13, 0x1356	; 0x801356 <_sRuble_Parameters+0xc>
   14cf8:	b0 91 57 13 	lds	r27, 0x1357	; 0x801357 <_sRuble_Parameters+0xd>
   14cfc:	f0 91 58 13 	lds	r31, 0x1358	; 0x801358 <_sRuble_Parameters+0xe>
   14d00:	e0 91 59 13 	lds	r30, 0x1359	; 0x801359 <_sRuble_Parameters+0xf>
   14d04:	29 2d       	mov	r18, r9
   14d06:	3a 2d       	mov	r19, r10
   14d08:	4b 2d       	mov	r20, r11
   14d0a:	5c 2d       	mov	r21, r12
   14d0c:	6d 2d       	mov	r22, r13
   14d0e:	7b 2f       	mov	r23, r27
   14d10:	8f 2f       	mov	r24, r31
   14d12:	9e 2f       	mov	r25, r30
   14d14:	a2 e0       	ldi	r26, 0x02	; 2
   14d16:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   14d1a:	81 f0       	breq	.+32     	; 0x14d3c <_Z12Publish_Datav+0x780>
   14d1c:	a4 e0       	ldi	r26, 0x04	; 4
   14d1e:	cd 50       	subi	r28, 0x0D	; 13
   14d20:	de 4f       	sbci	r29, 0xFE	; 254
   14d22:	19 82       	std	Y+1, r1	; 0x01
   14d24:	18 82       	st	Y, r1
   14d26:	c3 5f       	subi	r28, 0xF3	; 243
   14d28:	d1 40       	sbci	r29, 0x01	; 1
   14d2a:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   14d2e:	a1 f4       	brne	.+40     	; 0x14d58 <_Z12Publish_Datav+0x79c>
   14d30:	ae 01       	movw	r20, r28
   14d32:	4d 50       	subi	r20, 0x0D	; 13
   14d34:	5e 4f       	sbci	r21, 0xFE	; 254
   14d36:	60 e0       	ldi	r22, 0x00	; 0
   14d38:	72 e3       	ldi	r23, 0x32	; 50
   14d3a:	13 c0       	rjmp	.+38     	; 0x14d62 <_Z12Publish_Datav+0x7a6>
   14d3c:	81 e0       	ldi	r24, 0x01	; 1
   14d3e:	90 e0       	ldi	r25, 0x00	; 0
   14d40:	cd 50       	subi	r28, 0x0D	; 13
   14d42:	de 4f       	sbci	r29, 0xFE	; 254
   14d44:	99 83       	std	Y+1, r25	; 0x01
   14d46:	88 83       	st	Y, r24
   14d48:	c3 5f       	subi	r28, 0xF3	; 243
   14d4a:	d1 40       	sbci	r29, 0x01	; 1
   14d4c:	ae 01       	movw	r20, r28
   14d4e:	4d 50       	subi	r20, 0x0D	; 13
   14d50:	5e 4f       	sbci	r21, 0xFE	; 254
   14d52:	68 ef       	ldi	r22, 0xF8	; 248
   14d54:	71 e3       	ldi	r23, 0x31	; 49
   14d56:	05 c0       	rjmp	.+10     	; 0x14d62 <_Z12Publish_Datav+0x7a6>
   14d58:	ae 01       	movw	r20, r28
   14d5a:	4d 50       	subi	r20, 0x0D	; 13
   14d5c:	5e 4f       	sbci	r21, 0xFE	; 254
   14d5e:	60 ef       	ldi	r22, 0xF0	; 240
   14d60:	71 e3       	ldi	r23, 0x31	; 49
   14d62:	c8 01       	movw	r24, r16
   14d64:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d68:	21 c0       	rjmp	.+66     	; 0x14dac <_Z12Publish_Datav+0x7f0>
   14d6a:	8a e0       	ldi	r24, 0x0A	; 10
   14d6c:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   14d70:	89 2b       	or	r24, r25
   14d72:	71 f4       	brne	.+28     	; 0x14d90 <_Z12Publish_Datav+0x7d4>
   14d74:	04 c0       	rjmp	.+8      	; 0x14d7e <_Z12Publish_Datav+0x7c2>
   14d76:	80 91 0a 14 	lds	r24, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
   14d7a:	81 30       	cpi	r24, 0x01	; 1
   14d7c:	49 f4       	brne	.+18     	; 0x14d90 <_Z12Publish_Datav+0x7d4>
   14d7e:	81 e0       	ldi	r24, 0x01	; 1
   14d80:	90 e0       	ldi	r25, 0x00	; 0
   14d82:	cd 50       	subi	r28, 0x0D	; 13
   14d84:	de 4f       	sbci	r29, 0xFE	; 254
   14d86:	99 83       	std	Y+1, r25	; 0x01
   14d88:	88 83       	st	Y, r24
   14d8a:	c3 5f       	subi	r28, 0xF3	; 243
   14d8c:	d1 40       	sbci	r29, 0x01	; 1
   14d8e:	06 c0       	rjmp	.+12     	; 0x14d9c <_Z12Publish_Datav+0x7e0>
   14d90:	cd 50       	subi	r28, 0x0D	; 13
   14d92:	de 4f       	sbci	r29, 0xFE	; 254
   14d94:	19 82       	std	Y+1, r1	; 0x01
   14d96:	18 82       	st	Y, r1
   14d98:	c3 5f       	subi	r28, 0xF3	; 243
   14d9a:	d1 40       	sbci	r29, 0x01	; 1
   14d9c:	ae 01       	movw	r20, r28
   14d9e:	4d 50       	subi	r20, 0x0D	; 13
   14da0:	5e 4f       	sbci	r21, 0xFE	; 254
   14da2:	65 e9       	ldi	r22, 0x95	; 149
   14da4:	77 e0       	ldi	r23, 0x07	; 7
   14da6:	c8 01       	movw	r24, r16
   14da8:	0e 94 29 8a 	call	0x11452	; 0x11452 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   14dac:	cd 50       	subi	r28, 0x0D	; 13
   14dae:	de 4f       	sbci	r29, 0xFE	; 254
   14db0:	19 82       	std	Y+1, r1	; 0x01
   14db2:	18 82       	st	Y, r1
   14db4:	c3 5f       	subi	r28, 0xF3	; 243
   14db6:	d1 40       	sbci	r29, 0x01	; 1
   14db8:	ae 01       	movw	r20, r28
   14dba:	4d 50       	subi	r20, 0x0D	; 13
   14dbc:	5e 4f       	sbci	r21, 0xFE	; 254
   14dbe:	69 ee       	ldi	r22, 0xE9	; 233
   14dc0:	71 e3       	ldi	r23, 0x31	; 49
   14dc2:	c8 01       	movw	r24, r16
   14dc4:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14dc8:	40 91 01 14 	lds	r20, 0x1401	; 0x801401 <_sRuble_Parameters+0xb7>
   14dcc:	fb e1       	ldi	r31, 0x1B	; 27
   14dce:	4f 9f       	mul	r20, r31
   14dd0:	a0 01       	movw	r20, r0
   14dd2:	11 24       	eor	r1, r1
   14dd4:	fa 01       	movw	r30, r20
   14dd6:	ec 57       	subi	r30, 0x7C	; 124
   14dd8:	f2 4f       	sbci	r31, 0xF2	; 242
   14dda:	83 81       	ldd	r24, Z+3	; 0x03
   14ddc:	94 81       	ldd	r25, Z+4	; 0x04
   14dde:	00 97       	sbiw	r24, 0x00	; 0
   14de0:	29 f1       	breq	.+74     	; 0x14e2c <_Z12Publish_Datav+0x870>
   14de2:	6c e3       	ldi	r22, 0x3C	; 60
   14de4:	70 e0       	ldi	r23, 0x00	; 0
   14de6:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   14dea:	6f 5f       	subi	r22, 0xFF	; 255
   14dec:	7f 4f       	sbci	r23, 0xFF	; 255
   14dee:	cd 50       	subi	r28, 0x0D	; 13
   14df0:	de 4f       	sbci	r29, 0xFE	; 254
   14df2:	79 83       	std	Y+1, r23	; 0x01
   14df4:	68 83       	st	Y, r22
   14df6:	c3 5f       	subi	r28, 0xF3	; 243
   14df8:	d1 40       	sbci	r29, 0x01	; 1
   14dfa:	ae 01       	movw	r20, r28
   14dfc:	4d 50       	subi	r20, 0x0D	; 13
   14dfe:	5e 4f       	sbci	r21, 0xFE	; 254
   14e00:	64 ee       	ldi	r22, 0xE4	; 228
   14e02:	71 e3       	ldi	r23, 0x31	; 49
   14e04:	c8 01       	movw	r24, r16
   14e06:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14e0a:	80 91 01 14 	lds	r24, 0x1401	; 0x801401 <_sRuble_Parameters+0xb7>
   14e0e:	90 e0       	ldi	r25, 0x00	; 0
   14e10:	8b 59       	subi	r24, 0x9B	; 155
   14e12:	9f 4f       	sbci	r25, 0xFF	; 255
   14e14:	cd 50       	subi	r28, 0x0D	; 13
   14e16:	de 4f       	sbci	r29, 0xFE	; 254
   14e18:	99 83       	std	Y+1, r25	; 0x01
   14e1a:	88 83       	st	Y, r24
   14e1c:	c3 5f       	subi	r28, 0xF3	; 243
   14e1e:	d1 40       	sbci	r29, 0x01	; 1
   14e20:	ae 01       	movw	r20, r28
   14e22:	4d 50       	subi	r20, 0x0D	; 13
   14e24:	5e 4f       	sbci	r21, 0xFE	; 254
   14e26:	6f ed       	ldi	r22, 0xDF	; 223
   14e28:	71 e3       	ldi	r23, 0x31	; 49
   14e2a:	17 c0       	rjmp	.+46     	; 0x14e5a <_Z12Publish_Datav+0x89e>
   14e2c:	49 57       	subi	r20, 0x79	; 121
   14e2e:	52 4f       	sbci	r21, 0xF2	; 242
   14e30:	6a ed       	ldi	r22, 0xDA	; 218
   14e32:	71 e3       	ldi	r23, 0x31	; 49
   14e34:	c8 01       	movw	r24, r16
   14e36:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14e3a:	80 91 01 14 	lds	r24, 0x1401	; 0x801401 <_sRuble_Parameters+0xb7>
   14e3e:	90 e0       	ldi	r25, 0x00	; 0
   14e40:	8b 59       	subi	r24, 0x9B	; 155
   14e42:	9f 4f       	sbci	r25, 0xFF	; 255
   14e44:	cd 50       	subi	r28, 0x0D	; 13
   14e46:	de 4f       	sbci	r29, 0xFE	; 254
   14e48:	99 83       	std	Y+1, r25	; 0x01
   14e4a:	88 83       	st	Y, r24
   14e4c:	c3 5f       	subi	r28, 0xF3	; 243
   14e4e:	d1 40       	sbci	r29, 0x01	; 1
   14e50:	ae 01       	movw	r20, r28
   14e52:	4d 50       	subi	r20, 0x0D	; 13
   14e54:	5e 4f       	sbci	r21, 0xFE	; 254
   14e56:	65 ed       	ldi	r22, 0xD5	; 213
   14e58:	71 e3       	ldi	r23, 0x31	; 49
   14e5a:	c8 01       	movw	r24, r16
   14e5c:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e60:	4c ed       	ldi	r20, 0xDC	; 220
   14e62:	50 e0       	ldi	r21, 0x00	; 0
   14e64:	b7 01       	movw	r22, r14
   14e66:	c8 01       	movw	r24, r16
   14e68:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14e6c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14e70:	81 30       	cpi	r24, 0x01	; 1
   14e72:	29 f4       	brne	.+10     	; 0x14e7e <_Z12Publish_Datav+0x8c2>
   14e74:	b7 01       	movw	r22, r14
   14e76:	85 e5       	ldi	r24, 0x55	; 85
   14e78:	94 e1       	ldi	r25, 0x14	; 20
   14e7a:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   14e7e:	ee ef       	ldi	r30, 0xFE	; 254
   14e80:	fe e0       	ldi	r31, 0x0E	; 14
   14e82:	8e e6       	ldi	r24, 0x6E	; 110
   14e84:	df 01       	movw	r26, r30
   14e86:	1d 92       	st	X+, r1
   14e88:	8a 95       	dec	r24
   14e8a:	e9 f7       	brne	.-6      	; 0x14e86 <_Z12Publish_Datav+0x8ca>
   14e8c:	8a e6       	ldi	r24, 0x6A	; 106
   14e8e:	93 e1       	ldi	r25, 0x13	; 19
   14e90:	9f 93       	push	r25
   14e92:	8f 93       	push	r24
   14e94:	8b e3       	ldi	r24, 0x3B	; 59
   14e96:	97 e0       	ldi	r25, 0x07	; 7
   14e98:	9f 93       	push	r25
   14e9a:	8f 93       	push	r24
   14e9c:	ff 93       	push	r31
   14e9e:	ef 93       	push	r30
   14ea0:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   14ea4:	0f 90       	pop	r0
   14ea6:	0f 90       	pop	r0
   14ea8:	0f 90       	pop	r0
   14eaa:	0f 90       	pop	r0
   14eac:	0f 90       	pop	r0
   14eae:	0f 90       	pop	r0
   14eb0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14eb4:	88 23       	and	r24, r24
   14eb6:	d1 f0       	breq	.+52     	; 0x14eec <_Z12Publish_Datav+0x930>
   14eb8:	b7 01       	movw	r22, r14
   14eba:	8e ef       	ldi	r24, 0xFE	; 254
   14ebc:	9e e0       	ldi	r25, 0x0E	; 14
   14ebe:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   14ec2:	88 23       	and	r24, r24
   14ec4:	69 f0       	breq	.+26     	; 0x14ee0 <_Z12Publish_Datav+0x924>
   14ec6:	80 91 01 14 	lds	r24, 0x1401	; 0x801401 <_sRuble_Parameters+0xb7>
   14eca:	bb e1       	ldi	r27, 0x1B	; 27
   14ecc:	8b 9f       	mul	r24, r27
   14ece:	f0 01       	movw	r30, r0
   14ed0:	11 24       	eor	r1, r1
   14ed2:	ec 57       	subi	r30, 0x7C	; 124
   14ed4:	f2 4f       	sbci	r31, 0xF2	; 242
   14ed6:	12 8e       	std	Z+26, r1	; 0x1a
   14ed8:	8f 5f       	subi	r24, 0xFF	; 255
   14eda:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   14ede:	06 c0       	rjmp	.+12     	; 0x14eec <_Z12Publish_Datav+0x930>
   14ee0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14ee4:	81 50       	subi	r24, 0x01	; 1
   14ee6:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   14eea:	e2 cf       	rjmp	.-60     	; 0x14eb0 <_Z12Publish_Datav+0x8f4>
   14eec:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   14ef0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   14ef4:	9f 7e       	andi	r25, 0xEF	; 239
   14ef6:	ab cc       	rjmp	.-1706   	; 0x1484e <_Z12Publish_Datav+0x292>
   14ef8:	95 ff       	sbrs	r25, 5
   14efa:	4c c1       	rjmp	.+664    	; 0x15194 <_Z12Publish_Datav+0xbd8>
   14efc:	6e 01       	movw	r12, r28
   14efe:	e9 ee       	ldi	r30, 0xE9	; 233
   14f00:	ce 1a       	sub	r12, r30
   14f02:	ee ef       	ldi	r30, 0xFE	; 254
   14f04:	de 0a       	sbc	r13, r30
   14f06:	8c ed       	ldi	r24, 0xDC	; 220
   14f08:	d6 01       	movw	r26, r12
   14f0a:	1d 92       	st	X+, r1
   14f0c:	8a 95       	dec	r24
   14f0e:	e9 f7       	brne	.-6      	; 0x14f0a <_Z12Publish_Datav+0x94e>
   14f10:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14f14:	81 30       	cpi	r24, 0x01	; 1
   14f16:	31 f4       	brne	.+12     	; 0x14f24 <_Z12Publish_Datav+0x968>
   14f18:	62 ec       	ldi	r22, 0xC2	; 194
   14f1a:	71 e3       	ldi	r23, 0x31	; 49
   14f1c:	85 e5       	ldi	r24, 0x55	; 85
   14f1e:	94 e1       	ldi	r25, 0x14	; 20
   14f20:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14f24:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   14f28:	90 e0       	ldi	r25, 0x00	; 0
   14f2a:	8b 59       	subi	r24, 0x9B	; 155
   14f2c:	9f 4f       	sbci	r25, 0xFF	; 255
   14f2e:	cd 50       	subi	r28, 0x0D	; 13
   14f30:	de 4f       	sbci	r29, 0xFE	; 254
   14f32:	99 83       	std	Y+1, r25	; 0x01
   14f34:	88 83       	st	Y, r24
   14f36:	c3 5f       	subi	r28, 0xF3	; 243
   14f38:	d1 40       	sbci	r29, 0x01	; 1
   14f3a:	ae 01       	movw	r20, r28
   14f3c:	4d 50       	subi	r20, 0x0D	; 13
   14f3e:	5e 4f       	sbci	r21, 0xFE	; 254
   14f40:	6e eb       	ldi	r22, 0xBE	; 190
   14f42:	71 e3       	ldi	r23, 0x31	; 49
   14f44:	c8 01       	movw	r24, r16
   14f46:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f4a:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   14f4e:	6b e1       	ldi	r22, 0x1B	; 27
   14f50:	f6 2e       	mov	r15, r22
   14f52:	fe 9e       	mul	r15, r30
   14f54:	f0 01       	movw	r30, r0
   14f56:	11 24       	eor	r1, r1
   14f58:	ec 57       	subi	r30, 0x7C	; 124
   14f5a:	f2 4f       	sbci	r31, 0xF2	; 242
   14f5c:	92 81       	ldd	r25, Z+2	; 0x02
   14f5e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   14f62:	91 30       	cpi	r25, 0x01	; 1
   14f64:	b9 f5       	brne	.+110    	; 0x14fd4 <_Z12Publish_Datav+0xa18>
   14f66:	91 8d       	ldd	r25, Z+25	; 0x19
   14f68:	91 11       	cpse	r25, r1
   14f6a:	34 c0       	rjmp	.+104    	; 0x14fd4 <_Z12Publish_Datav+0xa18>
   14f6c:	81 30       	cpi	r24, 0x01	; 1
   14f6e:	31 f5       	brne	.+76     	; 0x14fbc <_Z12Publish_Datav+0xa00>
   14f70:	6d e9       	ldi	r22, 0x9D	; 157
   14f72:	71 e3       	ldi	r23, 0x31	; 49
   14f74:	85 e5       	ldi	r24, 0x55	; 85
   14f76:	94 e1       	ldi	r25, 0x14	; 20
   14f78:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14f7c:	85 e5       	ldi	r24, 0x55	; 85
   14f7e:	94 e1       	ldi	r25, 0x14	; 20
   14f80:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14f84:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   14f88:	fe 9e       	mul	r15, r30
   14f8a:	f0 01       	movw	r30, r0
   14f8c:	11 24       	eor	r1, r1
   14f8e:	ec 57       	subi	r30, 0x7C	; 124
   14f90:	f2 4f       	sbci	r31, 0xF2	; 242
   14f92:	4a e0       	ldi	r20, 0x0A	; 10
   14f94:	50 e0       	ldi	r21, 0x00	; 0
   14f96:	62 81       	ldd	r22, Z+2	; 0x02
   14f98:	85 e5       	ldi	r24, 0x55	; 85
   14f9a:	94 e1       	ldi	r25, 0x14	; 20
   14f9c:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   14fa0:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   14fa4:	fe 9e       	mul	r15, r30
   14fa6:	f0 01       	movw	r30, r0
   14fa8:	11 24       	eor	r1, r1
   14faa:	ec 57       	subi	r30, 0x7C	; 124
   14fac:	f2 4f       	sbci	r31, 0xF2	; 242
   14fae:	4a e0       	ldi	r20, 0x0A	; 10
   14fb0:	50 e0       	ldi	r21, 0x00	; 0
   14fb2:	61 8d       	ldd	r22, Z+25	; 0x19
   14fb4:	85 e5       	ldi	r24, 0x55	; 85
   14fb6:	94 e1       	ldi	r25, 0x14	; 20
   14fb8:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   14fbc:	cd 50       	subi	r28, 0x0D	; 13
   14fbe:	de 4f       	sbci	r29, 0xFE	; 254
   14fc0:	19 82       	std	Y+1, r1	; 0x01
   14fc2:	18 82       	st	Y, r1
   14fc4:	c3 5f       	subi	r28, 0xF3	; 243
   14fc6:	d1 40       	sbci	r29, 0x01	; 1
   14fc8:	ae 01       	movw	r20, r28
   14fca:	4d 50       	subi	r20, 0x0D	; 13
   14fcc:	5e 4f       	sbci	r21, 0xFE	; 254
   14fce:	66 e9       	ldi	r22, 0x96	; 150
   14fd0:	71 e3       	ldi	r23, 0x31	; 49
   14fd2:	37 c0       	rjmp	.+110    	; 0x15042 <_Z12Publish_Datav+0xa86>
   14fd4:	81 30       	cpi	r24, 0x01	; 1
   14fd6:	41 f5       	brne	.+80     	; 0x15028 <_Z12Publish_Datav+0xa6c>
   14fd8:	64 e7       	ldi	r22, 0x74	; 116
   14fda:	71 e3       	ldi	r23, 0x31	; 49
   14fdc:	85 e5       	ldi	r24, 0x55	; 85
   14fde:	94 e1       	ldi	r25, 0x14	; 20
   14fe0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14fe4:	85 e5       	ldi	r24, 0x55	; 85
   14fe6:	94 e1       	ldi	r25, 0x14	; 20
   14fe8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   14fec:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   14ff0:	5b e1       	ldi	r21, 0x1B	; 27
   14ff2:	f5 2e       	mov	r15, r21
   14ff4:	fe 9e       	mul	r15, r30
   14ff6:	f0 01       	movw	r30, r0
   14ff8:	11 24       	eor	r1, r1
   14ffa:	ec 57       	subi	r30, 0x7C	; 124
   14ffc:	f2 4f       	sbci	r31, 0xF2	; 242
   14ffe:	4a e0       	ldi	r20, 0x0A	; 10
   15000:	50 e0       	ldi	r21, 0x00	; 0
   15002:	62 81       	ldd	r22, Z+2	; 0x02
   15004:	85 e5       	ldi	r24, 0x55	; 85
   15006:	94 e1       	ldi	r25, 0x14	; 20
   15008:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   1500c:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   15010:	fe 9e       	mul	r15, r30
   15012:	f0 01       	movw	r30, r0
   15014:	11 24       	eor	r1, r1
   15016:	ec 57       	subi	r30, 0x7C	; 124
   15018:	f2 4f       	sbci	r31, 0xF2	; 242
   1501a:	4a e0       	ldi	r20, 0x0A	; 10
   1501c:	50 e0       	ldi	r21, 0x00	; 0
   1501e:	61 8d       	ldd	r22, Z+25	; 0x19
   15020:	85 e5       	ldi	r24, 0x55	; 85
   15022:	94 e1       	ldi	r25, 0x14	; 20
   15024:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   15028:	81 e0       	ldi	r24, 0x01	; 1
   1502a:	90 e0       	ldi	r25, 0x00	; 0
   1502c:	cd 50       	subi	r28, 0x0D	; 13
   1502e:	de 4f       	sbci	r29, 0xFE	; 254
   15030:	99 83       	std	Y+1, r25	; 0x01
   15032:	88 83       	st	Y, r24
   15034:	c3 5f       	subi	r28, 0xF3	; 243
   15036:	d1 40       	sbci	r29, 0x01	; 1
   15038:	ae 01       	movw	r20, r28
   1503a:	4d 50       	subi	r20, 0x0D	; 13
   1503c:	5e 4f       	sbci	r21, 0xFE	; 254
   1503e:	6d e6       	ldi	r22, 0x6D	; 109
   15040:	71 e3       	ldi	r23, 0x31	; 49
   15042:	c8 01       	movw	r24, r16
   15044:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15048:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   1504c:	8e ef       	ldi	r24, 0xFE	; 254
   1504e:	8e 0f       	add	r24, r30
   15050:	88 30       	cpi	r24, 0x08	; 8
   15052:	08 f4       	brcc	.+2      	; 0x15056 <_Z12Publish_Datav+0xa9a>
   15054:	5c c0       	rjmp	.+184    	; 0x1510e <_Z12Publish_Datav+0xb52>
   15056:	bb e1       	ldi	r27, 0x1B	; 27
   15058:	eb 9f       	mul	r30, r27
   1505a:	f0 01       	movw	r30, r0
   1505c:	11 24       	eor	r1, r1
   1505e:	ec 57       	subi	r30, 0x7C	; 124
   15060:	f2 4f       	sbci	r31, 0xF2	; 242
   15062:	82 81       	ldd	r24, Z+2	; 0x02
   15064:	85 30       	cpi	r24, 0x05	; 5
   15066:	71 f4       	brne	.+28     	; 0x15084 <_Z12Publish_Datav+0xac8>
   15068:	cd 50       	subi	r28, 0x0D	; 13
   1506a:	de 4f       	sbci	r29, 0xFE	; 254
   1506c:	19 82       	std	Y+1, r1	; 0x01
   1506e:	18 82       	st	Y, r1
   15070:	c3 5f       	subi	r28, 0xF3	; 243
   15072:	d1 40       	sbci	r29, 0x01	; 1
   15074:	ae 01       	movw	r20, r28
   15076:	4d 50       	subi	r20, 0x0D	; 13
   15078:	5e 4f       	sbci	r21, 0xFE	; 254
   1507a:	66 e6       	ldi	r22, 0x66	; 102
   1507c:	71 e3       	ldi	r23, 0x31	; 49
   1507e:	c8 01       	movw	r24, r16
   15080:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15084:	e0 91 00 14 	lds	r30, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   15088:	2b e1       	ldi	r18, 0x1B	; 27
   1508a:	e2 9f       	mul	r30, r18
   1508c:	f0 01       	movw	r30, r0
   1508e:	11 24       	eor	r1, r1
   15090:	ec 57       	subi	r30, 0x7C	; 124
   15092:	f2 4f       	sbci	r31, 0xF2	; 242
   15094:	82 81       	ldd	r24, Z+2	; 0x02
   15096:	84 30       	cpi	r24, 0x04	; 4
   15098:	81 f4       	brne	.+32     	; 0x150ba <_Z12Publish_Datav+0xafe>
   1509a:	81 e0       	ldi	r24, 0x01	; 1
   1509c:	90 e0       	ldi	r25, 0x00	; 0
   1509e:	cd 50       	subi	r28, 0x0D	; 13
   150a0:	de 4f       	sbci	r29, 0xFE	; 254
   150a2:	99 83       	std	Y+1, r25	; 0x01
   150a4:	88 83       	st	Y, r24
   150a6:	c3 5f       	subi	r28, 0xF3	; 243
   150a8:	d1 40       	sbci	r29, 0x01	; 1
   150aa:	ae 01       	movw	r20, r28
   150ac:	4d 50       	subi	r20, 0x0D	; 13
   150ae:	5e 4f       	sbci	r21, 0xFE	; 254
   150b0:	6f e5       	ldi	r22, 0x5F	; 95
   150b2:	71 e3       	ldi	r23, 0x31	; 49
   150b4:	c8 01       	movw	r24, r16
   150b6:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   150ba:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   150be:	81 30       	cpi	r24, 0x01	; 1
   150c0:	31 f5       	brne	.+76     	; 0x1510e <_Z12Publish_Datav+0xb52>
   150c2:	e0 91 a4 0d 	lds	r30, 0x0DA4	; 0x800da4 <_sExtra_Plot+0x20>
   150c6:	f0 e0       	ldi	r31, 0x00	; 0
   150c8:	ec 53       	subi	r30, 0x3C	; 60
   150ca:	fc 4e       	sbci	r31, 0xEC	; 236
   150cc:	80 81       	ld	r24, Z
   150ce:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   150d2:	89 2b       	or	r24, r25
   150d4:	61 f0       	breq	.+24     	; 0x150ee <_Z12Publish_Datav+0xb32>
   150d6:	cd 50       	subi	r28, 0x0D	; 13
   150d8:	de 4f       	sbci	r29, 0xFE	; 254
   150da:	19 82       	std	Y+1, r1	; 0x01
   150dc:	18 82       	st	Y, r1
   150de:	c3 5f       	subi	r28, 0xF3	; 243
   150e0:	d1 40       	sbci	r29, 0x01	; 1
   150e2:	ae 01       	movw	r20, r28
   150e4:	4d 50       	subi	r20, 0x0D	; 13
   150e6:	5e 4f       	sbci	r21, 0xFE	; 254
   150e8:	68 e5       	ldi	r22, 0x58	; 88
   150ea:	71 e3       	ldi	r23, 0x31	; 49
   150ec:	0d c0       	rjmp	.+26     	; 0x15108 <_Z12Publish_Datav+0xb4c>
   150ee:	81 e0       	ldi	r24, 0x01	; 1
   150f0:	90 e0       	ldi	r25, 0x00	; 0
   150f2:	cd 50       	subi	r28, 0x0D	; 13
   150f4:	de 4f       	sbci	r29, 0xFE	; 254
   150f6:	99 83       	std	Y+1, r25	; 0x01
   150f8:	88 83       	st	Y, r24
   150fa:	c3 5f       	subi	r28, 0xF3	; 243
   150fc:	d1 40       	sbci	r29, 0x01	; 1
   150fe:	ae 01       	movw	r20, r28
   15100:	4d 50       	subi	r20, 0x0D	; 13
   15102:	5e 4f       	sbci	r21, 0xFE	; 254
   15104:	61 e5       	ldi	r22, 0x51	; 81
   15106:	71 e3       	ldi	r23, 0x31	; 49
   15108:	c8 01       	movw	r24, r16
   1510a:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1510e:	4c ed       	ldi	r20, 0xDC	; 220
   15110:	50 e0       	ldi	r21, 0x00	; 0
   15112:	b6 01       	movw	r22, r12
   15114:	c8 01       	movw	r24, r16
   15116:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1511a:	ee ef       	ldi	r30, 0xFE	; 254
   1511c:	fe e0       	ldi	r31, 0x0E	; 14
   1511e:	8e e6       	ldi	r24, 0x6E	; 110
   15120:	df 01       	movw	r26, r30
   15122:	1d 92       	st	X+, r1
   15124:	8a 95       	dec	r24
   15126:	e9 f7       	brne	.-6      	; 0x15122 <_Z12Publish_Datav+0xb66>
   15128:	8a e6       	ldi	r24, 0x6A	; 106
   1512a:	93 e1       	ldi	r25, 0x13	; 19
   1512c:	9f 93       	push	r25
   1512e:	8f 93       	push	r24
   15130:	8d e9       	ldi	r24, 0x9D	; 157
   15132:	97 e0       	ldi	r25, 0x07	; 7
   15134:	9f 93       	push	r25
   15136:	8f 93       	push	r24
   15138:	ff 93       	push	r31
   1513a:	ef 93       	push	r30
   1513c:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   15140:	0f 90       	pop	r0
   15142:	0f 90       	pop	r0
   15144:	0f 90       	pop	r0
   15146:	0f 90       	pop	r0
   15148:	0f 90       	pop	r0
   1514a:	0f 90       	pop	r0
   1514c:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15150:	88 23       	and	r24, r24
   15152:	d1 f0       	breq	.+52     	; 0x15188 <_Z12Publish_Datav+0xbcc>
   15154:	b6 01       	movw	r22, r12
   15156:	8e ef       	ldi	r24, 0xFE	; 254
   15158:	9e e0       	ldi	r25, 0x0E	; 14
   1515a:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   1515e:	88 23       	and	r24, r24
   15160:	69 f0       	breq	.+26     	; 0x1517c <_Z12Publish_Datav+0xbc0>
   15162:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <_sRuble_Parameters+0xb6>
   15166:	bb e1       	ldi	r27, 0x1B	; 27
   15168:	8b 9f       	mul	r24, r27
   1516a:	f0 01       	movw	r30, r0
   1516c:	11 24       	eor	r1, r1
   1516e:	ec 57       	subi	r30, 0x7C	; 124
   15170:	f2 4f       	sbci	r31, 0xF2	; 242
   15172:	12 8e       	std	Z+26, r1	; 0x1a
   15174:	8f 5f       	subi	r24, 0xFF	; 255
   15176:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   1517a:	06 c0       	rjmp	.+12     	; 0x15188 <_Z12Publish_Datav+0xbcc>
   1517c:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15180:	81 50       	subi	r24, 0x01	; 1
   15182:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15186:	e2 cf       	rjmp	.-60     	; 0x1514c <_Z12Publish_Datav+0xb90>
   15188:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1518c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   15190:	9f 7d       	andi	r25, 0xDF	; 223
   15192:	5d cb       	rjmp	.-2374   	; 0x1484e <_Z12Publish_Datav+0x292>
   15194:	82 ff       	sbrs	r24, 2
   15196:	b0 c1       	rjmp	.+864    	; 0x154f8 <_Z12Publish_Datav+0xf3c>
   15198:	7e 01       	movw	r14, r28
   1519a:	e9 ee       	ldi	r30, 0xE9	; 233
   1519c:	ee 1a       	sub	r14, r30
   1519e:	ee ef       	ldi	r30, 0xFE	; 254
   151a0:	fe 0a       	sbc	r15, r30
   151a2:	8c ed       	ldi	r24, 0xDC	; 220
   151a4:	d7 01       	movw	r26, r14
   151a6:	1d 92       	st	X+, r1
   151a8:	8a 95       	dec	r24
   151aa:	e9 f7       	brne	.-6      	; 0x151a6 <_Z12Publish_Datav+0xbea>
   151ac:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   151b0:	81 11       	cpse	r24, r1
   151b2:	4e c0       	rjmp	.+156    	; 0x15250 <_Z12Publish_Datav+0xc94>
   151b4:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xbd>
   151b8:	88 23       	and	r24, r24
   151ba:	09 f4       	brne	.+2      	; 0x151be <_Z12Publish_Datav+0xc02>
   151bc:	43 c0       	rjmp	.+134    	; 0x15244 <_Z12Publish_Datav+0xc88>
   151be:	90 90 52 13 	lds	r9, 0x1352	; 0x801352 <_sRuble_Parameters+0x8>
   151c2:	a0 90 53 13 	lds	r10, 0x1353	; 0x801353 <_sRuble_Parameters+0x9>
   151c6:	b0 90 54 13 	lds	r11, 0x1354	; 0x801354 <_sRuble_Parameters+0xa>
   151ca:	c0 90 55 13 	lds	r12, 0x1355	; 0x801355 <_sRuble_Parameters+0xb>
   151ce:	d0 90 56 13 	lds	r13, 0x1356	; 0x801356 <_sRuble_Parameters+0xc>
   151d2:	b0 91 57 13 	lds	r27, 0x1357	; 0x801357 <_sRuble_Parameters+0xd>
   151d6:	f0 91 58 13 	lds	r31, 0x1358	; 0x801358 <_sRuble_Parameters+0xe>
   151da:	e0 91 59 13 	lds	r30, 0x1359	; 0x801359 <_sRuble_Parameters+0xf>
   151de:	29 2d       	mov	r18, r9
   151e0:	3a 2d       	mov	r19, r10
   151e2:	4b 2d       	mov	r20, r11
   151e4:	5c 2d       	mov	r21, r12
   151e6:	6d 2d       	mov	r22, r13
   151e8:	7b 2f       	mov	r23, r27
   151ea:	8f 2f       	mov	r24, r31
   151ec:	9e 2f       	mov	r25, r30
   151ee:	a2 e0       	ldi	r26, 0x02	; 2
   151f0:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   151f4:	81 f0       	breq	.+32     	; 0x15216 <_Z12Publish_Datav+0xc5a>
   151f6:	a4 e0       	ldi	r26, 0x04	; 4
   151f8:	cd 50       	subi	r28, 0x0D	; 13
   151fa:	de 4f       	sbci	r29, 0xFE	; 254
   151fc:	19 82       	std	Y+1, r1	; 0x01
   151fe:	18 82       	st	Y, r1
   15200:	c3 5f       	subi	r28, 0xF3	; 243
   15202:	d1 40       	sbci	r29, 0x01	; 1
   15204:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   15208:	a1 f4       	brne	.+40     	; 0x15232 <_Z12Publish_Datav+0xc76>
   1520a:	ae 01       	movw	r20, r28
   1520c:	4d 50       	subi	r20, 0x0D	; 13
   1520e:	5e 4f       	sbci	r21, 0xFE	; 254
   15210:	69 e4       	ldi	r22, 0x49	; 73
   15212:	71 e3       	ldi	r23, 0x31	; 49
   15214:	13 c0       	rjmp	.+38     	; 0x1523c <_Z12Publish_Datav+0xc80>
   15216:	81 e0       	ldi	r24, 0x01	; 1
   15218:	90 e0       	ldi	r25, 0x00	; 0
   1521a:	cd 50       	subi	r28, 0x0D	; 13
   1521c:	de 4f       	sbci	r29, 0xFE	; 254
   1521e:	99 83       	std	Y+1, r25	; 0x01
   15220:	88 83       	st	Y, r24
   15222:	c3 5f       	subi	r28, 0xF3	; 243
   15224:	d1 40       	sbci	r29, 0x01	; 1
   15226:	ae 01       	movw	r20, r28
   15228:	4d 50       	subi	r20, 0x0D	; 13
   1522a:	5e 4f       	sbci	r21, 0xFE	; 254
   1522c:	61 e4       	ldi	r22, 0x41	; 65
   1522e:	71 e3       	ldi	r23, 0x31	; 49
   15230:	05 c0       	rjmp	.+10     	; 0x1523c <_Z12Publish_Datav+0xc80>
   15232:	ae 01       	movw	r20, r28
   15234:	4d 50       	subi	r20, 0x0D	; 13
   15236:	5e 4f       	sbci	r21, 0xFE	; 254
   15238:	69 e3       	ldi	r22, 0x39	; 57
   1523a:	71 e3       	ldi	r23, 0x31	; 49
   1523c:	c8 01       	movw	r24, r16
   1523e:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15242:	21 c0       	rjmp	.+66     	; 0x15286 <_Z12Publish_Datav+0xcca>
   15244:	8a e0       	ldi	r24, 0x0A	; 10
   15246:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   1524a:	89 2b       	or	r24, r25
   1524c:	71 f4       	brne	.+28     	; 0x1526a <_Z12Publish_Datav+0xcae>
   1524e:	04 c0       	rjmp	.+8      	; 0x15258 <_Z12Publish_Datav+0xc9c>
   15250:	80 91 0a 14 	lds	r24, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
   15254:	81 30       	cpi	r24, 0x01	; 1
   15256:	49 f4       	brne	.+18     	; 0x1526a <_Z12Publish_Datav+0xcae>
   15258:	81 e0       	ldi	r24, 0x01	; 1
   1525a:	90 e0       	ldi	r25, 0x00	; 0
   1525c:	cd 50       	subi	r28, 0x0D	; 13
   1525e:	de 4f       	sbci	r29, 0xFE	; 254
   15260:	99 83       	std	Y+1, r25	; 0x01
   15262:	88 83       	st	Y, r24
   15264:	c3 5f       	subi	r28, 0xF3	; 243
   15266:	d1 40       	sbci	r29, 0x01	; 1
   15268:	06 c0       	rjmp	.+12     	; 0x15276 <_Z12Publish_Datav+0xcba>
   1526a:	cd 50       	subi	r28, 0x0D	; 13
   1526c:	de 4f       	sbci	r29, 0xFE	; 254
   1526e:	19 82       	std	Y+1, r1	; 0x01
   15270:	18 82       	st	Y, r1
   15272:	c3 5f       	subi	r28, 0xF3	; 243
   15274:	d1 40       	sbci	r29, 0x01	; 1
   15276:	ae 01       	movw	r20, r28
   15278:	4d 50       	subi	r20, 0x0D	; 13
   1527a:	5e 4f       	sbci	r21, 0xFE	; 254
   1527c:	65 e9       	ldi	r22, 0x95	; 149
   1527e:	77 e0       	ldi	r23, 0x07	; 7
   15280:	c8 01       	movw	r24, r16
   15282:	0e 94 29 8a 	call	0x11452	; 0x11452 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15286:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   1528a:	cd 50       	subi	r28, 0x0D	; 13
   1528c:	de 4f       	sbci	r29, 0xFE	; 254
   1528e:	88 83       	st	Y, r24
   15290:	c3 5f       	subi	r28, 0xF3	; 243
   15292:	d1 40       	sbci	r29, 0x01	; 1
   15294:	ae 01       	movw	r20, r28
   15296:	4d 50       	subi	r20, 0x0D	; 13
   15298:	5e 4f       	sbci	r21, 0xFE	; 254
   1529a:	64 e3       	ldi	r22, 0x34	; 52
   1529c:	71 e3       	ldi	r23, 0x31	; 49
   1529e:	c8 01       	movw	r24, r16
   152a0:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   152a4:	61 e2       	ldi	r22, 0x21	; 33
   152a6:	71 e3       	ldi	r23, 0x31	; 49
   152a8:	c8 01       	movw	r24, r16
   152aa:	0e 94 a8 88 	call	0x11150	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   152ae:	6c 01       	movw	r12, r24
   152b0:	89 2b       	or	r24, r25
   152b2:	91 f4       	brne	.+36     	; 0x152d8 <_Z12Publish_Datav+0xd1c>
   152b4:	c8 01       	movw	r24, r16
   152b6:	0e 94 cc 88 	call	0x11198	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   152ba:	6c 01       	movw	r12, r24
   152bc:	00 97       	sbiw	r24, 0x00	; 0
   152be:	d9 f0       	breq	.+54     	; 0x152f6 <_Z12Publish_Datav+0xd3a>
   152c0:	41 e2       	ldi	r20, 0x21	; 33
   152c2:	51 e3       	ldi	r21, 0x31	; 49
   152c4:	bc 01       	movw	r22, r24
   152c6:	6e 5f       	subi	r22, 0xFE	; 254
   152c8:	7f 4f       	sbci	r23, 0xFF	; 255
   152ca:	f8 01       	movw	r30, r16
   152cc:	80 81       	ld	r24, Z
   152ce:	91 81       	ldd	r25, Z+1	; 0x01
   152d0:	0e 94 ed 88 	call	0x111da	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   152d4:	88 23       	and	r24, r24
   152d6:	79 f0       	breq	.+30     	; 0x152f6 <_Z12Publish_Datav+0xd3a>
   152d8:	80 91 44 13 	lds	r24, 0x1344	; 0x801344 <_sPump_Parameter+0x4>
   152dc:	90 91 45 13 	lds	r25, 0x1345	; 0x801345 <_sPump_Parameter+0x5>
   152e0:	a0 91 46 13 	lds	r26, 0x1346	; 0x801346 <_sPump_Parameter+0x6>
   152e4:	b0 91 47 13 	lds	r27, 0x1347	; 0x801347 <_sPump_Parameter+0x7>
   152e8:	28 e0       	ldi	r18, 0x08	; 8
   152ea:	f6 01       	movw	r30, r12
   152ec:	24 83       	std	Z+4, r18	; 0x04
   152ee:	85 83       	std	Z+5, r24	; 0x05
   152f0:	96 83       	std	Z+6, r25	; 0x06
   152f2:	a7 83       	std	Z+7, r26	; 0x07
   152f4:	b0 87       	std	Z+8, r27	; 0x08
   152f6:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   152fa:	82 30       	cpi	r24, 0x02	; 2
   152fc:	41 f0       	breq	.+16     	; 0x1530e <_Z12Publish_Datav+0xd52>
   152fe:	45 ea       	ldi	r20, 0xA5	; 165
   15300:	53 e1       	ldi	r21, 0x13	; 19
   15302:	6c e1       	ldi	r22, 0x1C	; 28
   15304:	71 e3       	ldi	r23, 0x31	; 49
   15306:	c8 01       	movw	r24, r16
   15308:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1530c:	0e c0       	rjmp	.+28     	; 0x1532a <_Z12Publish_Datav+0xd6e>
   1530e:	cd 50       	subi	r28, 0x0D	; 13
   15310:	de 4f       	sbci	r29, 0xFE	; 254
   15312:	19 82       	std	Y+1, r1	; 0x01
   15314:	18 82       	st	Y, r1
   15316:	c3 5f       	subi	r28, 0xF3	; 243
   15318:	d1 40       	sbci	r29, 0x01	; 1
   1531a:	ae 01       	movw	r20, r28
   1531c:	4d 50       	subi	r20, 0x0D	; 13
   1531e:	5e 4f       	sbci	r21, 0xFE	; 254
   15320:	67 e1       	ldi	r22, 0x17	; 23
   15322:	71 e3       	ldi	r23, 0x31	; 49
   15324:	c8 01       	movw	r24, r16
   15326:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1532a:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   1532e:	85 30       	cpi	r24, 0x05	; 5
   15330:	09 f0       	breq	.+2      	; 0x15334 <_Z12Publish_Datav+0xd78>
   15332:	67 c0       	rjmp	.+206    	; 0x15402 <_Z12Publish_Datav+0xe46>
   15334:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   15338:	88 23       	and	r24, r24
   1533a:	09 f4       	brne	.+2      	; 0x1533e <_Z12Publish_Datav+0xd82>
   1533c:	48 c0       	rjmp	.+144    	; 0x153ce <_Z12Publish_Datav+0xe12>
   1533e:	6e e0       	ldi	r22, 0x0E	; 14
   15340:	71 e3       	ldi	r23, 0x31	; 49
   15342:	c8 01       	movw	r24, r16
   15344:	0e 94 a8 88 	call	0x11150	; 0x11150 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   15348:	6c 01       	movw	r12, r24
   1534a:	89 2b       	or	r24, r25
   1534c:	91 f4       	brne	.+36     	; 0x15372 <_Z12Publish_Datav+0xdb6>
   1534e:	c8 01       	movw	r24, r16
   15350:	0e 94 cc 88 	call	0x11198	; 0x11198 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   15354:	6c 01       	movw	r12, r24
   15356:	00 97       	sbiw	r24, 0x00	; 0
   15358:	c1 f0       	breq	.+48     	; 0x1538a <_Z12Publish_Datav+0xdce>
   1535a:	4e e0       	ldi	r20, 0x0E	; 14
   1535c:	51 e3       	ldi	r21, 0x31	; 49
   1535e:	bc 01       	movw	r22, r24
   15360:	6e 5f       	subi	r22, 0xFE	; 254
   15362:	7f 4f       	sbci	r23, 0xFF	; 255
   15364:	d8 01       	movw	r26, r16
   15366:	8d 91       	ld	r24, X+
   15368:	9c 91       	ld	r25, X
   1536a:	0e 94 ed 88 	call	0x111da	; 0x111da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1536e:	88 23       	and	r24, r24
   15370:	61 f0       	breq	.+24     	; 0x1538a <_Z12Publish_Datav+0xdce>
   15372:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   15376:	94 e0       	ldi	r25, 0x04	; 4
   15378:	f6 01       	movw	r30, r12
   1537a:	94 83       	std	Z+4, r25	; 0x04
   1537c:	90 e0       	ldi	r25, 0x00	; 0
   1537e:	a0 e0       	ldi	r26, 0x00	; 0
   15380:	b0 e0       	ldi	r27, 0x00	; 0
   15382:	85 83       	std	Z+5, r24	; 0x05
   15384:	96 83       	std	Z+6, r25	; 0x06
   15386:	a7 83       	std	Z+7, r26	; 0x07
   15388:	b0 87       	std	Z+8, r27	; 0x08
   1538a:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
   1538e:	f0 e0       	ldi	r31, 0x00	; 0
   15390:	ee 0f       	add	r30, r30
   15392:	ff 1f       	adc	r31, r31
   15394:	e4 5e       	subi	r30, 0xE4	; 228
   15396:	f6 4f       	sbci	r31, 0xF6	; 246
   15398:	87 8d       	ldd	r24, Z+31	; 0x1f
   1539a:	90 a1       	ldd	r25, Z+32	; 0x20
   1539c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
   153a0:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
   153a4:	82 1b       	sub	r24, r18
   153a6:	93 0b       	sbc	r25, r19
   153a8:	6c e3       	ldi	r22, 0x3C	; 60
   153aa:	70 e0       	ldi	r23, 0x00	; 0
   153ac:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   153b0:	cd 50       	subi	r28, 0x0D	; 13
   153b2:	de 4f       	sbci	r29, 0xFE	; 254
   153b4:	79 83       	std	Y+1, r23	; 0x01
   153b6:	68 83       	st	Y, r22
   153b8:	c3 5f       	subi	r28, 0xF3	; 243
   153ba:	d1 40       	sbci	r29, 0x01	; 1
   153bc:	ae 01       	movw	r20, r28
   153be:	4d 50       	subi	r20, 0x0D	; 13
   153c0:	5e 4f       	sbci	r21, 0xFE	; 254
   153c2:	6f ef       	ldi	r22, 0xFF	; 255
   153c4:	70 e3       	ldi	r23, 0x30	; 48
   153c6:	c8 01       	movw	r24, r16
   153c8:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   153cc:	36 c0       	rjmp	.+108    	; 0x1543a <_Z12Publish_Datav+0xe7e>
   153ce:	cd 50       	subi	r28, 0x0D	; 13
   153d0:	de 4f       	sbci	r29, 0xFE	; 254
   153d2:	19 82       	std	Y+1, r1	; 0x01
   153d4:	18 82       	st	Y, r1
   153d6:	c3 5f       	subi	r28, 0xF3	; 243
   153d8:	d1 40       	sbci	r29, 0x01	; 1
   153da:	ae 01       	movw	r20, r28
   153dc:	4d 50       	subi	r20, 0x0D	; 13
   153de:	5e 4f       	sbci	r21, 0xFE	; 254
   153e0:	66 ef       	ldi	r22, 0xF6	; 246
   153e2:	70 e3       	ldi	r23, 0x30	; 48
   153e4:	c8 01       	movw	r24, r16
   153e6:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   153ea:	cd 50       	subi	r28, 0x0D	; 13
   153ec:	de 4f       	sbci	r29, 0xFE	; 254
   153ee:	19 82       	std	Y+1, r1	; 0x01
   153f0:	18 82       	st	Y, r1
   153f2:	c3 5f       	subi	r28, 0xF3	; 243
   153f4:	d1 40       	sbci	r29, 0x01	; 1
   153f6:	ae 01       	movw	r20, r28
   153f8:	4d 50       	subi	r20, 0x0D	; 13
   153fa:	5e 4f       	sbci	r21, 0xFE	; 254
   153fc:	67 ee       	ldi	r22, 0xE7	; 231
   153fe:	70 e3       	ldi	r23, 0x30	; 48
   15400:	19 c0       	rjmp	.+50     	; 0x15434 <_Z12Publish_Datav+0xe78>
   15402:	cd 50       	subi	r28, 0x0D	; 13
   15404:	de 4f       	sbci	r29, 0xFE	; 254
   15406:	19 82       	std	Y+1, r1	; 0x01
   15408:	18 82       	st	Y, r1
   1540a:	c3 5f       	subi	r28, 0xF3	; 243
   1540c:	d1 40       	sbci	r29, 0x01	; 1
   1540e:	ae 01       	movw	r20, r28
   15410:	4d 50       	subi	r20, 0x0D	; 13
   15412:	5e 4f       	sbci	r21, 0xFE	; 254
   15414:	6e ed       	ldi	r22, 0xDE	; 222
   15416:	70 e3       	ldi	r23, 0x30	; 48
   15418:	c8 01       	movw	r24, r16
   1541a:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1541e:	cd 50       	subi	r28, 0x0D	; 13
   15420:	de 4f       	sbci	r29, 0xFE	; 254
   15422:	19 82       	std	Y+1, r1	; 0x01
   15424:	18 82       	st	Y, r1
   15426:	c3 5f       	subi	r28, 0xF3	; 243
   15428:	d1 40       	sbci	r29, 0x01	; 1
   1542a:	ae 01       	movw	r20, r28
   1542c:	4d 50       	subi	r20, 0x0D	; 13
   1542e:	5e 4f       	sbci	r21, 0xFE	; 254
   15430:	6f ec       	ldi	r22, 0xCF	; 207
   15432:	70 e3       	ldi	r23, 0x30	; 48
   15434:	c8 01       	movw	r24, r16
   15436:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1543a:	46 e2       	ldi	r20, 0x26	; 38
   1543c:	54 e1       	ldi	r21, 0x14	; 20
   1543e:	66 ec       	ldi	r22, 0xC6	; 198
   15440:	70 e3       	ldi	r23, 0x30	; 48
   15442:	c8 01       	movw	r24, r16
   15444:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15448:	4e ef       	ldi	r20, 0xFE	; 254
   1544a:	53 e1       	ldi	r21, 0x13	; 19
   1544c:	6a eb       	ldi	r22, 0xBA	; 186
   1544e:	70 e3       	ldi	r23, 0x30	; 48
   15450:	c8 01       	movw	r24, r16
   15452:	0e 94 cc 89 	call	0x11398	; 0x11398 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15456:	4c ed       	ldi	r20, 0xDC	; 220
   15458:	50 e0       	ldi	r21, 0x00	; 0
   1545a:	b7 01       	movw	r22, r14
   1545c:	c8 01       	movw	r24, r16
   1545e:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15462:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15466:	81 30       	cpi	r24, 0x01	; 1
   15468:	31 f4       	brne	.+12     	; 0x15476 <_Z12Publish_Datav+0xeba>
   1546a:	6c e6       	ldi	r22, 0x6C	; 108
   1546c:	7f e0       	ldi	r23, 0x0F	; 15
   1546e:	85 e5       	ldi	r24, 0x55	; 85
   15470:	94 e1       	ldi	r25, 0x14	; 20
   15472:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   15476:	80 91 7e 0d 	lds	r24, 0x0D7E	; 0x800d7e <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1547a:	8f 5f       	subi	r24, 0xFF	; 255
   1547c:	80 93 7e 0d 	sts	0x0D7E, r24	; 0x800d7e <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15480:	ee ef       	ldi	r30, 0xFE	; 254
   15482:	fe e0       	ldi	r31, 0x0E	; 14
   15484:	8e e6       	ldi	r24, 0x6E	; 110
   15486:	df 01       	movw	r26, r30
   15488:	1d 92       	st	X+, r1
   1548a:	8a 95       	dec	r24
   1548c:	e9 f7       	brne	.-6      	; 0x15488 <_Z12Publish_Datav+0xecc>
   1548e:	8a e6       	ldi	r24, 0x6A	; 106
   15490:	93 e1       	ldi	r25, 0x13	; 19
   15492:	9f 93       	push	r25
   15494:	8f 93       	push	r24
   15496:	86 eb       	ldi	r24, 0xB6	; 182
   15498:	97 e0       	ldi	r25, 0x07	; 7
   1549a:	9f 93       	push	r25
   1549c:	8f 93       	push	r24
   1549e:	ff 93       	push	r31
   154a0:	ef 93       	push	r30
   154a2:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   154a6:	0f 90       	pop	r0
   154a8:	0f 90       	pop	r0
   154aa:	0f 90       	pop	r0
   154ac:	0f 90       	pop	r0
   154ae:	0f 90       	pop	r0
   154b0:	0f 90       	pop	r0
   154b2:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   154b6:	88 23       	and	r24, r24
   154b8:	81 f0       	breq	.+32     	; 0x154da <_Z12Publish_Datav+0xf1e>
   154ba:	b7 01       	movw	r22, r14
   154bc:	8e ef       	ldi	r24, 0xFE	; 254
   154be:	9e e0       	ldi	r25, 0x0E	; 14
   154c0:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   154c4:	88 23       	and	r24, r24
   154c6:	19 f0       	breq	.+6      	; 0x154ce <_Z12Publish_Datav+0xf12>
   154c8:	10 92 7e 0d 	sts	0x0D7E, r1	; 0x800d7e <_ZZ12Publish_DatavE26ruble_data_success_counter>
   154cc:	06 c0       	rjmp	.+12     	; 0x154da <_Z12Publish_Datav+0xf1e>
   154ce:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   154d2:	81 50       	subi	r24, 0x01	; 1
   154d4:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   154d8:	ec cf       	rjmp	.-40     	; 0x154b2 <_Z12Publish_Datav+0xef6>
   154da:	80 91 7e 0d 	lds	r24, 0x0D7E	; 0x800d7e <_ZZ12Publish_DatavE26ruble_data_success_counter>
   154de:	84 30       	cpi	r24, 0x04	; 4
   154e0:	28 f0       	brcs	.+10     	; 0x154ec <_Z12Publish_Datav+0xf30>
   154e2:	82 e0       	ldi	r24, 0x02	; 2
   154e4:	80 93 a7 13 	sts	0x13A7, r24	; 0x8013a7 <_sRuble_Parameters+0x5d>
   154e8:	0e 94 1b 7f 	call	0xfe36	; 0xfe36 <_Z14Ping_to_Serverv>
   154ec:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   154f0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   154f4:	8b 7f       	andi	r24, 0xFB	; 251
   154f6:	ab c9       	rjmp	.-3242   	; 0x1484e <_Z12Publish_Datav+0x292>
   154f8:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   154fc:	90 91 7d 0d 	lds	r25, 0x0D7D	; 0x800d7d <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15500:	00 97       	sbiw	r24, 0x00	; 0
   15502:	09 f0       	breq	.+2      	; 0x15506 <_Z12Publish_Datav+0xf4a>
   15504:	42 c2       	rjmp	.+1156   	; 0x1598a <_Z12Publish_Datav+0x13ce>
   15506:	34 e8       	ldi	r19, 0x84	; 132
   15508:	c3 2e       	mov	r12, r19
   1550a:	3d e0       	ldi	r19, 0x0D	; 13
   1550c:	d3 2e       	mov	r13, r19
   1550e:	e1 2c       	mov	r14, r1
   15510:	f1 2c       	mov	r15, r1
   15512:	7e 2c       	mov	r7, r14
   15514:	f6 01       	movw	r30, r12
   15516:	81 81       	ldd	r24, Z+1	; 0x01
   15518:	85 36       	cpi	r24, 0x65	; 101
   1551a:	08 f4       	brcc	.+2      	; 0x1551e <_Z12Publish_Datav+0xf62>
   1551c:	2a c2       	rjmp	.+1108   	; 0x15972 <_Z12Publish_Datav+0x13b6>
   1551e:	62 8d       	ldd	r22, Z+26	; 0x1a
   15520:	66 23       	and	r22, r22
   15522:	09 f4       	brne	.+2      	; 0x15526 <_Z12Publish_Datav+0xf6a>
   15524:	26 c2       	rjmp	.+1100   	; 0x15972 <_Z12Publish_Datav+0x13b6>
   15526:	4a e0       	ldi	r20, 0x0A	; 10
   15528:	50 e0       	ldi	r21, 0x00	; 0
   1552a:	85 e5       	ldi	r24, 0x55	; 85
   1552c:	94 e1       	ldi	r25, 0x14	; 20
   1552e:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   15532:	d6 01       	movw	r26, r12
   15534:	5a 96       	adiw	r26, 0x1a	; 26
   15536:	8c 91       	ld	r24, X
   15538:	81 30       	cpi	r24, 0x01	; 1
   1553a:	09 f4       	brne	.+2      	; 0x1553e <_Z12Publish_Datav+0xf82>
   1553c:	f8 c0       	rjmp	.+496    	; 0x1572e <_Z12Publish_Datav+0x1172>
   1553e:	82 30       	cpi	r24, 0x02	; 2
   15540:	09 f0       	breq	.+2      	; 0x15544 <_Z12Publish_Datav+0xf88>
   15542:	17 c2       	rjmp	.+1070   	; 0x15972 <_Z12Publish_Datav+0x13b6>
   15544:	6e 01       	movw	r12, r28
   15546:	b9 ee       	ldi	r27, 0xE9	; 233
   15548:	cb 1a       	sub	r12, r27
   1554a:	be ef       	ldi	r27, 0xFE	; 254
   1554c:	db 0a       	sbc	r13, r27
   1554e:	8c ed       	ldi	r24, 0xDC	; 220
   15550:	f6 01       	movw	r30, r12
   15552:	11 92       	st	Z+, r1
   15554:	8a 95       	dec	r24
   15556:	e9 f7       	brne	.-6      	; 0x15552 <_Z12Publish_Datav+0xf96>
   15558:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1555c:	81 30       	cpi	r24, 0x01	; 1
   1555e:	51 f4       	brne	.+20     	; 0x15574 <_Z12Publish_Datav+0xfb8>
   15560:	6f e9       	ldi	r22, 0x9F	; 159
   15562:	70 e3       	ldi	r23, 0x30	; 48
   15564:	85 e5       	ldi	r24, 0x55	; 85
   15566:	94 e1       	ldi	r25, 0x14	; 20
   15568:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1556c:	85 e5       	ldi	r24, 0x55	; 85
   1556e:	94 e1       	ldi	r25, 0x14	; 20
   15570:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15574:	c7 01       	movw	r24, r14
   15576:	8b 59       	subi	r24, 0x9B	; 155
   15578:	9f 4f       	sbci	r25, 0xFF	; 255
   1557a:	cd 50       	subi	r28, 0x0D	; 13
   1557c:	de 4f       	sbci	r29, 0xFE	; 254
   1557e:	99 83       	std	Y+1, r25	; 0x01
   15580:	88 83       	st	Y, r24
   15582:	c3 5f       	subi	r28, 0xF3	; 243
   15584:	d1 40       	sbci	r29, 0x01	; 1
   15586:	ae 01       	movw	r20, r28
   15588:	4d 50       	subi	r20, 0x0D	; 13
   1558a:	5e 4f       	sbci	r21, 0xFE	; 254
   1558c:	6b e9       	ldi	r22, 0x9B	; 155
   1558e:	70 e3       	ldi	r23, 0x30	; 48
   15590:	c8 01       	movw	r24, r16
   15592:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15596:	8b e1       	ldi	r24, 0x1B	; 27
   15598:	8e 9d       	mul	r24, r14
   1559a:	f0 01       	movw	r30, r0
   1559c:	8f 9d       	mul	r24, r15
   1559e:	f0 0d       	add	r31, r0
   155a0:	11 24       	eor	r1, r1
   155a2:	ec 57       	subi	r30, 0x7C	; 124
   155a4:	f2 4f       	sbci	r31, 0xF2	; 242
   155a6:	82 81       	ldd	r24, Z+2	; 0x02
   155a8:	81 30       	cpi	r24, 0x01	; 1
   155aa:	79 f4       	brne	.+30     	; 0x155ca <_Z12Publish_Datav+0x100e>
   155ac:	81 8d       	ldd	r24, Z+25	; 0x19
   155ae:	81 11       	cpse	r24, r1
   155b0:	0c c0       	rjmp	.+24     	; 0x155ca <_Z12Publish_Datav+0x100e>
   155b2:	cd 50       	subi	r28, 0x0D	; 13
   155b4:	de 4f       	sbci	r29, 0xFE	; 254
   155b6:	19 82       	std	Y+1, r1	; 0x01
   155b8:	18 82       	st	Y, r1
   155ba:	c3 5f       	subi	r28, 0xF3	; 243
   155bc:	d1 40       	sbci	r29, 0x01	; 1
   155be:	ae 01       	movw	r20, r28
   155c0:	4d 50       	subi	r20, 0x0D	; 13
   155c2:	5e 4f       	sbci	r21, 0xFE	; 254
   155c4:	64 e9       	ldi	r22, 0x94	; 148
   155c6:	70 e3       	ldi	r23, 0x30	; 48
   155c8:	0d c0       	rjmp	.+26     	; 0x155e4 <_Z12Publish_Datav+0x1028>
   155ca:	81 e0       	ldi	r24, 0x01	; 1
   155cc:	90 e0       	ldi	r25, 0x00	; 0
   155ce:	cd 50       	subi	r28, 0x0D	; 13
   155d0:	de 4f       	sbci	r29, 0xFE	; 254
   155d2:	99 83       	std	Y+1, r25	; 0x01
   155d4:	88 83       	st	Y, r24
   155d6:	c3 5f       	subi	r28, 0xF3	; 243
   155d8:	d1 40       	sbci	r29, 0x01	; 1
   155da:	ae 01       	movw	r20, r28
   155dc:	4d 50       	subi	r20, 0x0D	; 13
   155de:	5e 4f       	sbci	r21, 0xFE	; 254
   155e0:	6d e8       	ldi	r22, 0x8D	; 141
   155e2:	70 e3       	ldi	r23, 0x30	; 48
   155e4:	c8 01       	movw	r24, r16
   155e6:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   155ea:	8e ef       	ldi	r24, 0xFE	; 254
   155ec:	87 0d       	add	r24, r7
   155ee:	88 30       	cpi	r24, 0x08	; 8
   155f0:	08 f4       	brcc	.+2      	; 0x155f4 <_Z12Publish_Datav+0x1038>
   155f2:	64 c0       	rjmp	.+200    	; 0x156bc <_Z12Publish_Datav+0x1100>
   155f4:	8b e1       	ldi	r24, 0x1B	; 27
   155f6:	8e 9d       	mul	r24, r14
   155f8:	f0 01       	movw	r30, r0
   155fa:	8f 9d       	mul	r24, r15
   155fc:	f0 0d       	add	r31, r0
   155fe:	11 24       	eor	r1, r1
   15600:	ec 57       	subi	r30, 0x7C	; 124
   15602:	f2 4f       	sbci	r31, 0xF2	; 242
   15604:	82 81       	ldd	r24, Z+2	; 0x02
   15606:	85 30       	cpi	r24, 0x05	; 5
   15608:	71 f4       	brne	.+28     	; 0x15626 <_Z12Publish_Datav+0x106a>
   1560a:	cd 50       	subi	r28, 0x0D	; 13
   1560c:	de 4f       	sbci	r29, 0xFE	; 254
   1560e:	19 82       	std	Y+1, r1	; 0x01
   15610:	18 82       	st	Y, r1
   15612:	c3 5f       	subi	r28, 0xF3	; 243
   15614:	d1 40       	sbci	r29, 0x01	; 1
   15616:	ae 01       	movw	r20, r28
   15618:	4d 50       	subi	r20, 0x0D	; 13
   1561a:	5e 4f       	sbci	r21, 0xFE	; 254
   1561c:	66 e8       	ldi	r22, 0x86	; 134
   1561e:	70 e3       	ldi	r23, 0x30	; 48
   15620:	c8 01       	movw	r24, r16
   15622:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15626:	8b e1       	ldi	r24, 0x1B	; 27
   15628:	8e 9d       	mul	r24, r14
   1562a:	f0 01       	movw	r30, r0
   1562c:	8f 9d       	mul	r24, r15
   1562e:	f0 0d       	add	r31, r0
   15630:	11 24       	eor	r1, r1
   15632:	ec 57       	subi	r30, 0x7C	; 124
   15634:	f2 4f       	sbci	r31, 0xF2	; 242
   15636:	82 81       	ldd	r24, Z+2	; 0x02
   15638:	84 30       	cpi	r24, 0x04	; 4
   1563a:	81 f4       	brne	.+32     	; 0x1565c <_Z12Publish_Datav+0x10a0>
   1563c:	81 e0       	ldi	r24, 0x01	; 1
   1563e:	90 e0       	ldi	r25, 0x00	; 0
   15640:	cd 50       	subi	r28, 0x0D	; 13
   15642:	de 4f       	sbci	r29, 0xFE	; 254
   15644:	99 83       	std	Y+1, r25	; 0x01
   15646:	88 83       	st	Y, r24
   15648:	c3 5f       	subi	r28, 0xF3	; 243
   1564a:	d1 40       	sbci	r29, 0x01	; 1
   1564c:	ae 01       	movw	r20, r28
   1564e:	4d 50       	subi	r20, 0x0D	; 13
   15650:	5e 4f       	sbci	r21, 0xFE	; 254
   15652:	6f e7       	ldi	r22, 0x7F	; 127
   15654:	70 e3       	ldi	r23, 0x30	; 48
   15656:	c8 01       	movw	r24, r16
   15658:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1565c:	f1 e0       	ldi	r31, 0x01	; 1
   1565e:	7f 12       	cpse	r7, r31
   15660:	2d c0       	rjmp	.+90     	; 0x156bc <_Z12Publish_Datav+0x1100>
   15662:	8b e1       	ldi	r24, 0x1B	; 27
   15664:	8e 9d       	mul	r24, r14
   15666:	f0 01       	movw	r30, r0
   15668:	8f 9d       	mul	r24, r15
   1566a:	f0 0d       	add	r31, r0
   1566c:	11 24       	eor	r1, r1
   1566e:	ec 57       	subi	r30, 0x7C	; 124
   15670:	f2 4f       	sbci	r31, 0xF2	; 242
   15672:	e5 81       	ldd	r30, Z+5	; 0x05
   15674:	f0 e0       	ldi	r31, 0x00	; 0
   15676:	ec 53       	subi	r30, 0x3C	; 60
   15678:	fc 4e       	sbci	r31, 0xEC	; 236
   1567a:	80 81       	ld	r24, Z
   1567c:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   15680:	89 2b       	or	r24, r25
   15682:	61 f0       	breq	.+24     	; 0x1569c <_Z12Publish_Datav+0x10e0>
   15684:	cd 50       	subi	r28, 0x0D	; 13
   15686:	de 4f       	sbci	r29, 0xFE	; 254
   15688:	19 82       	std	Y+1, r1	; 0x01
   1568a:	18 82       	st	Y, r1
   1568c:	c3 5f       	subi	r28, 0xF3	; 243
   1568e:	d1 40       	sbci	r29, 0x01	; 1
   15690:	ae 01       	movw	r20, r28
   15692:	4d 50       	subi	r20, 0x0D	; 13
   15694:	5e 4f       	sbci	r21, 0xFE	; 254
   15696:	68 e7       	ldi	r22, 0x78	; 120
   15698:	70 e3       	ldi	r23, 0x30	; 48
   1569a:	0d c0       	rjmp	.+26     	; 0x156b6 <_Z12Publish_Datav+0x10fa>
   1569c:	81 e0       	ldi	r24, 0x01	; 1
   1569e:	90 e0       	ldi	r25, 0x00	; 0
   156a0:	cd 50       	subi	r28, 0x0D	; 13
   156a2:	de 4f       	sbci	r29, 0xFE	; 254
   156a4:	99 83       	std	Y+1, r25	; 0x01
   156a6:	88 83       	st	Y, r24
   156a8:	c3 5f       	subi	r28, 0xF3	; 243
   156aa:	d1 40       	sbci	r29, 0x01	; 1
   156ac:	ae 01       	movw	r20, r28
   156ae:	4d 50       	subi	r20, 0x0D	; 13
   156b0:	5e 4f       	sbci	r21, 0xFE	; 254
   156b2:	61 e7       	ldi	r22, 0x71	; 113
   156b4:	70 e3       	ldi	r23, 0x30	; 48
   156b6:	c8 01       	movw	r24, r16
   156b8:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   156bc:	4c ed       	ldi	r20, 0xDC	; 220
   156be:	50 e0       	ldi	r21, 0x00	; 0
   156c0:	b6 01       	movw	r22, r12
   156c2:	c8 01       	movw	r24, r16
   156c4:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   156c8:	0e ef       	ldi	r16, 0xFE	; 254
   156ca:	1e e0       	ldi	r17, 0x0E	; 14
   156cc:	8e e6       	ldi	r24, 0x6E	; 110
   156ce:	68 2e       	mov	r6, r24
   156d0:	9a e6       	ldi	r25, 0x6A	; 106
   156d2:	a9 2e       	mov	r10, r25
   156d4:	93 e1       	ldi	r25, 0x13	; 19
   156d6:	b9 2e       	mov	r11, r25
   156d8:	2d e9       	ldi	r18, 0x9D	; 157
   156da:	82 2e       	mov	r8, r18
   156dc:	27 e0       	ldi	r18, 0x07	; 7
   156de:	92 2e       	mov	r9, r18
   156e0:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   156e4:	88 23       	and	r24, r24
   156e6:	01 f1       	breq	.+64     	; 0x15728 <_Z12Publish_Datav+0x116c>
   156e8:	d8 01       	movw	r26, r16
   156ea:	e6 2d       	mov	r30, r6
   156ec:	1d 92       	st	X+, r1
   156ee:	ea 95       	dec	r30
   156f0:	e9 f7       	brne	.-6      	; 0x156ec <_Z12Publish_Datav+0x1130>
   156f2:	bf 92       	push	r11
   156f4:	af 92       	push	r10
   156f6:	9f 92       	push	r9
   156f8:	8f 92       	push	r8
   156fa:	1f 93       	push	r17
   156fc:	0f 93       	push	r16
   156fe:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   15702:	b6 01       	movw	r22, r12
   15704:	8e ef       	ldi	r24, 0xFE	; 254
   15706:	9e e0       	ldi	r25, 0x0E	; 14
   15708:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   1570c:	0f 90       	pop	r0
   1570e:	0f 90       	pop	r0
   15710:	0f 90       	pop	r0
   15712:	0f 90       	pop	r0
   15714:	0f 90       	pop	r0
   15716:	0f 90       	pop	r0
   15718:	81 11       	cpse	r24, r1
   1571a:	13 c1       	rjmp	.+550    	; 0x15942 <_Z12Publish_Datav+0x1386>
   1571c:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15720:	81 50       	subi	r24, 0x01	; 1
   15722:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15726:	dc cf       	rjmp	.-72     	; 0x156e0 <_Z12Publish_Datav+0x1124>
   15728:	8c e3       	ldi	r24, 0x3C	; 60
   1572a:	90 e0       	ldi	r25, 0x00	; 0
   1572c:	2f c1       	rjmp	.+606    	; 0x1598c <_Z12Publish_Datav+0x13d0>
   1572e:	6e 01       	movw	r12, r28
   15730:	f9 ee       	ldi	r31, 0xE9	; 233
   15732:	cf 1a       	sub	r12, r31
   15734:	fe ef       	ldi	r31, 0xFE	; 254
   15736:	df 0a       	sbc	r13, r31
   15738:	8c ed       	ldi	r24, 0xDC	; 220
   1573a:	d6 01       	movw	r26, r12
   1573c:	1d 92       	st	X+, r1
   1573e:	8a 95       	dec	r24
   15740:	e9 f7       	brne	.-6      	; 0x1573c <_Z12Publish_Datav+0x1180>
   15742:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15746:	81 30       	cpi	r24, 0x01	; 1
   15748:	51 f4       	brne	.+20     	; 0x1575e <_Z12Publish_Datav+0x11a2>
   1574a:	65 e5       	ldi	r22, 0x55	; 85
   1574c:	70 e3       	ldi	r23, 0x30	; 48
   1574e:	85 e5       	ldi	r24, 0x55	; 85
   15750:	94 e1       	ldi	r25, 0x14	; 20
   15752:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15756:	85 e5       	ldi	r24, 0x55	; 85
   15758:	94 e1       	ldi	r25, 0x14	; 20
   1575a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1575e:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   15762:	81 11       	cpse	r24, r1
   15764:	4e c0       	rjmp	.+156    	; 0x15802 <_Z12Publish_Datav+0x1246>
   15766:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xbd>
   1576a:	88 23       	and	r24, r24
   1576c:	09 f4       	brne	.+2      	; 0x15770 <_Z12Publish_Datav+0x11b4>
   1576e:	43 c0       	rjmp	.+134    	; 0x157f6 <_Z12Publish_Datav+0x123a>
   15770:	60 90 52 13 	lds	r6, 0x1352	; 0x801352 <_sRuble_Parameters+0x8>
   15774:	80 90 53 13 	lds	r8, 0x1353	; 0x801353 <_sRuble_Parameters+0x9>
   15778:	90 90 54 13 	lds	r9, 0x1354	; 0x801354 <_sRuble_Parameters+0xa>
   1577c:	a0 90 55 13 	lds	r10, 0x1355	; 0x801355 <_sRuble_Parameters+0xb>
   15780:	b0 90 56 13 	lds	r11, 0x1356	; 0x801356 <_sRuble_Parameters+0xc>
   15784:	b0 91 57 13 	lds	r27, 0x1357	; 0x801357 <_sRuble_Parameters+0xd>
   15788:	f0 91 58 13 	lds	r31, 0x1358	; 0x801358 <_sRuble_Parameters+0xe>
   1578c:	e0 91 59 13 	lds	r30, 0x1359	; 0x801359 <_sRuble_Parameters+0xf>
   15790:	26 2d       	mov	r18, r6
   15792:	38 2d       	mov	r19, r8
   15794:	49 2d       	mov	r20, r9
   15796:	5a 2d       	mov	r21, r10
   15798:	6b 2d       	mov	r22, r11
   1579a:	7b 2f       	mov	r23, r27
   1579c:	8f 2f       	mov	r24, r31
   1579e:	9e 2f       	mov	r25, r30
   157a0:	a2 e0       	ldi	r26, 0x02	; 2
   157a2:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   157a6:	81 f0       	breq	.+32     	; 0x157c8 <_Z12Publish_Datav+0x120c>
   157a8:	a4 e0       	ldi	r26, 0x04	; 4
   157aa:	cd 50       	subi	r28, 0x0D	; 13
   157ac:	de 4f       	sbci	r29, 0xFE	; 254
   157ae:	19 82       	std	Y+1, r1	; 0x01
   157b0:	18 82       	st	Y, r1
   157b2:	c3 5f       	subi	r28, 0xF3	; 243
   157b4:	d1 40       	sbci	r29, 0x01	; 1
   157b6:	0e 94 bc e7 	call	0x1cf78	; 0x1cf78 <__cmpdi2_s8>
   157ba:	a1 f4       	brne	.+40     	; 0x157e4 <_Z12Publish_Datav+0x1228>
   157bc:	ae 01       	movw	r20, r28
   157be:	4d 50       	subi	r20, 0x0D	; 13
   157c0:	5e 4f       	sbci	r21, 0xFE	; 254
   157c2:	6d e4       	ldi	r22, 0x4D	; 77
   157c4:	70 e3       	ldi	r23, 0x30	; 48
   157c6:	13 c0       	rjmp	.+38     	; 0x157ee <_Z12Publish_Datav+0x1232>
   157c8:	81 e0       	ldi	r24, 0x01	; 1
   157ca:	90 e0       	ldi	r25, 0x00	; 0
   157cc:	cd 50       	subi	r28, 0x0D	; 13
   157ce:	de 4f       	sbci	r29, 0xFE	; 254
   157d0:	99 83       	std	Y+1, r25	; 0x01
   157d2:	88 83       	st	Y, r24
   157d4:	c3 5f       	subi	r28, 0xF3	; 243
   157d6:	d1 40       	sbci	r29, 0x01	; 1
   157d8:	ae 01       	movw	r20, r28
   157da:	4d 50       	subi	r20, 0x0D	; 13
   157dc:	5e 4f       	sbci	r21, 0xFE	; 254
   157de:	65 e4       	ldi	r22, 0x45	; 69
   157e0:	70 e3       	ldi	r23, 0x30	; 48
   157e2:	05 c0       	rjmp	.+10     	; 0x157ee <_Z12Publish_Datav+0x1232>
   157e4:	ae 01       	movw	r20, r28
   157e6:	4d 50       	subi	r20, 0x0D	; 13
   157e8:	5e 4f       	sbci	r21, 0xFE	; 254
   157ea:	6d e3       	ldi	r22, 0x3D	; 61
   157ec:	70 e3       	ldi	r23, 0x30	; 48
   157ee:	c8 01       	movw	r24, r16
   157f0:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   157f4:	21 c0       	rjmp	.+66     	; 0x15838 <_Z12Publish_Datav+0x127c>
   157f6:	8a e0       	ldi	r24, 0x0A	; 10
   157f8:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   157fc:	89 2b       	or	r24, r25
   157fe:	71 f4       	brne	.+28     	; 0x1581c <_Z12Publish_Datav+0x1260>
   15800:	04 c0       	rjmp	.+8      	; 0x1580a <_Z12Publish_Datav+0x124e>
   15802:	80 91 0a 14 	lds	r24, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
   15806:	81 30       	cpi	r24, 0x01	; 1
   15808:	49 f4       	brne	.+18     	; 0x1581c <_Z12Publish_Datav+0x1260>
   1580a:	81 e0       	ldi	r24, 0x01	; 1
   1580c:	90 e0       	ldi	r25, 0x00	; 0
   1580e:	cd 50       	subi	r28, 0x0D	; 13
   15810:	de 4f       	sbci	r29, 0xFE	; 254
   15812:	99 83       	std	Y+1, r25	; 0x01
   15814:	88 83       	st	Y, r24
   15816:	c3 5f       	subi	r28, 0xF3	; 243
   15818:	d1 40       	sbci	r29, 0x01	; 1
   1581a:	06 c0       	rjmp	.+12     	; 0x15828 <_Z12Publish_Datav+0x126c>
   1581c:	cd 50       	subi	r28, 0x0D	; 13
   1581e:	de 4f       	sbci	r29, 0xFE	; 254
   15820:	19 82       	std	Y+1, r1	; 0x01
   15822:	18 82       	st	Y, r1
   15824:	c3 5f       	subi	r28, 0xF3	; 243
   15826:	d1 40       	sbci	r29, 0x01	; 1
   15828:	ae 01       	movw	r20, r28
   1582a:	4d 50       	subi	r20, 0x0D	; 13
   1582c:	5e 4f       	sbci	r21, 0xFE	; 254
   1582e:	65 e9       	ldi	r22, 0x95	; 149
   15830:	77 e0       	ldi	r23, 0x07	; 7
   15832:	c8 01       	movw	r24, r16
   15834:	0e 94 29 8a 	call	0x11452	; 0x11452 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15838:	cd 50       	subi	r28, 0x0D	; 13
   1583a:	de 4f       	sbci	r29, 0xFE	; 254
   1583c:	19 82       	std	Y+1, r1	; 0x01
   1583e:	18 82       	st	Y, r1
   15840:	c3 5f       	subi	r28, 0xF3	; 243
   15842:	d1 40       	sbci	r29, 0x01	; 1
   15844:	ae 01       	movw	r20, r28
   15846:	4d 50       	subi	r20, 0x0D	; 13
   15848:	5e 4f       	sbci	r21, 0xFE	; 254
   1584a:	66 e3       	ldi	r22, 0x36	; 54
   1584c:	70 e3       	ldi	r23, 0x30	; 48
   1584e:	c8 01       	movw	r24, r16
   15850:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15854:	8b e1       	ldi	r24, 0x1B	; 27
   15856:	8e 9d       	mul	r24, r14
   15858:	a0 01       	movw	r20, r0
   1585a:	8f 9d       	mul	r24, r15
   1585c:	50 0d       	add	r21, r0
   1585e:	11 24       	eor	r1, r1
   15860:	fa 01       	movw	r30, r20
   15862:	ec 57       	subi	r30, 0x7C	; 124
   15864:	f2 4f       	sbci	r31, 0xF2	; 242
   15866:	83 81       	ldd	r24, Z+3	; 0x03
   15868:	94 81       	ldd	r25, Z+4	; 0x04
   1586a:	f7 01       	movw	r30, r14
   1586c:	eb 59       	subi	r30, 0x9B	; 155
   1586e:	ff 4f       	sbci	r31, 0xFF	; 255
   15870:	5f 01       	movw	r10, r30
   15872:	00 97       	sbiw	r24, 0x00	; 0
   15874:	01 f1       	breq	.+64     	; 0x158b6 <_Z12Publish_Datav+0x12fa>
   15876:	6c e3       	ldi	r22, 0x3C	; 60
   15878:	70 e0       	ldi	r23, 0x00	; 0
   1587a:	0e 94 36 e7 	call	0x1ce6c	; 0x1ce6c <__udivmodhi4>
   1587e:	6f 5f       	subi	r22, 0xFF	; 255
   15880:	7f 4f       	sbci	r23, 0xFF	; 255
   15882:	cd 50       	subi	r28, 0x0D	; 13
   15884:	de 4f       	sbci	r29, 0xFE	; 254
   15886:	79 83       	std	Y+1, r23	; 0x01
   15888:	68 83       	st	Y, r22
   1588a:	c3 5f       	subi	r28, 0xF3	; 243
   1588c:	d1 40       	sbci	r29, 0x01	; 1
   1588e:	ae 01       	movw	r20, r28
   15890:	4d 50       	subi	r20, 0x0D	; 13
   15892:	5e 4f       	sbci	r21, 0xFE	; 254
   15894:	61 e3       	ldi	r22, 0x31	; 49
   15896:	70 e3       	ldi	r23, 0x30	; 48
   15898:	c8 01       	movw	r24, r16
   1589a:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1589e:	cd 50       	subi	r28, 0x0D	; 13
   158a0:	de 4f       	sbci	r29, 0xFE	; 254
   158a2:	b9 82       	std	Y+1, r11	; 0x01
   158a4:	a8 82       	st	Y, r10
   158a6:	c3 5f       	subi	r28, 0xF3	; 243
   158a8:	d1 40       	sbci	r29, 0x01	; 1
   158aa:	ae 01       	movw	r20, r28
   158ac:	4d 50       	subi	r20, 0x0D	; 13
   158ae:	5e 4f       	sbci	r21, 0xFE	; 254
   158b0:	6c e2       	ldi	r22, 0x2C	; 44
   158b2:	70 e3       	ldi	r23, 0x30	; 48
   158b4:	12 c0       	rjmp	.+36     	; 0x158da <_Z12Publish_Datav+0x131e>
   158b6:	49 57       	subi	r20, 0x79	; 121
   158b8:	52 4f       	sbci	r21, 0xF2	; 242
   158ba:	67 e2       	ldi	r22, 0x27	; 39
   158bc:	70 e3       	ldi	r23, 0x30	; 48
   158be:	c8 01       	movw	r24, r16
   158c0:	0e 94 5b 89 	call	0x112b6	; 0x112b6 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   158c4:	cd 50       	subi	r28, 0x0D	; 13
   158c6:	de 4f       	sbci	r29, 0xFE	; 254
   158c8:	b9 82       	std	Y+1, r11	; 0x01
   158ca:	a8 82       	st	Y, r10
   158cc:	c3 5f       	subi	r28, 0xF3	; 243
   158ce:	d1 40       	sbci	r29, 0x01	; 1
   158d0:	ae 01       	movw	r20, r28
   158d2:	4d 50       	subi	r20, 0x0D	; 13
   158d4:	5e 4f       	sbci	r21, 0xFE	; 254
   158d6:	62 e2       	ldi	r22, 0x22	; 34
   158d8:	70 e3       	ldi	r23, 0x30	; 48
   158da:	c8 01       	movw	r24, r16
   158dc:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   158e0:	4c ed       	ldi	r20, 0xDC	; 220
   158e2:	50 e0       	ldi	r21, 0x00	; 0
   158e4:	b6 01       	movw	r22, r12
   158e6:	c8 01       	movw	r24, r16
   158e8:	0e 94 65 91 	call	0x122ca	; 0x122ca <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   158ec:	b6 01       	movw	r22, r12
   158ee:	85 e5       	ldi	r24, 0x55	; 85
   158f0:	94 e1       	ldi	r25, 0x14	; 20
   158f2:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   158f6:	ee ef       	ldi	r30, 0xFE	; 254
   158f8:	fe e0       	ldi	r31, 0x0E	; 14
   158fa:	8e e6       	ldi	r24, 0x6E	; 110
   158fc:	df 01       	movw	r26, r30
   158fe:	1d 92       	st	X+, r1
   15900:	8a 95       	dec	r24
   15902:	e9 f7       	brne	.-6      	; 0x158fe <_Z12Publish_Datav+0x1342>
   15904:	8a e6       	ldi	r24, 0x6A	; 106
   15906:	93 e1       	ldi	r25, 0x13	; 19
   15908:	9f 93       	push	r25
   1590a:	8f 93       	push	r24
   1590c:	8b e3       	ldi	r24, 0x3B	; 59
   1590e:	97 e0       	ldi	r25, 0x07	; 7
   15910:	9f 93       	push	r25
   15912:	8f 93       	push	r24
   15914:	ff 93       	push	r31
   15916:	ef 93       	push	r30
   15918:	0e 94 de e9 	call	0x1d3bc	; 0x1d3bc <sprintf>
   1591c:	0f 90       	pop	r0
   1591e:	0f 90       	pop	r0
   15920:	0f 90       	pop	r0
   15922:	0f 90       	pop	r0
   15924:	0f 90       	pop	r0
   15926:	0f 90       	pop	r0
   15928:	0c e3       	ldi	r16, 0x3C	; 60
   1592a:	10 e0       	ldi	r17, 0x00	; 0
   1592c:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15930:	88 23       	and	r24, r24
   15932:	81 f1       	breq	.+96     	; 0x15994 <_Z12Publish_Datav+0x13d8>
   15934:	b6 01       	movw	r22, r12
   15936:	8e ef       	ldi	r24, 0xFE	; 254
   15938:	9e e0       	ldi	r25, 0x0E	; 14
   1593a:	0e 94 4e 68 	call	0xd09c	; 0xd09c <_Z12MQTT_PublishPhS_>
   1593e:	88 23       	and	r24, r24
   15940:	71 f0       	breq	.+28     	; 0x1595e <_Z12Publish_Datav+0x13a2>
   15942:	8b e1       	ldi	r24, 0x1B	; 27
   15944:	8e 9d       	mul	r24, r14
   15946:	f0 01       	movw	r30, r0
   15948:	8f 9d       	mul	r24, r15
   1594a:	f0 0d       	add	r31, r0
   1594c:	11 24       	eor	r1, r1
   1594e:	ec 57       	subi	r30, 0x7C	; 124
   15950:	f2 4f       	sbci	r31, 0xF2	; 242
   15952:	12 8e       	std	Z+26, r1	; 0x1a
   15954:	81 e0       	ldi	r24, 0x01	; 1
   15956:	87 0d       	add	r24, r7
   15958:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   1595c:	1b c0       	rjmp	.+54     	; 0x15994 <_Z12Publish_Datav+0x13d8>
   1595e:	10 93 7d 0d 	sts	0x0D7D, r17	; 0x800d7d <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15962:	00 93 7c 0d 	sts	0x0D7C, r16	; 0x800d7c <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15966:	80 91 7f 0d 	lds	r24, 0x0D7F	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   1596a:	81 50       	subi	r24, 0x01	; 1
   1596c:	80 93 7f 0d 	sts	0x0D7F, r24	; 0x800d7f <_ZZ12Publish_DatavE5retry>
   15970:	dd cf       	rjmp	.-70     	; 0x1592c <_Z12Publish_Datav+0x1370>
   15972:	bf ef       	ldi	r27, 0xFF	; 255
   15974:	eb 1a       	sub	r14, r27
   15976:	fb 0a       	sbc	r15, r27
   15978:	eb e1       	ldi	r30, 0x1B	; 27
   1597a:	ce 0e       	add	r12, r30
   1597c:	d1 1c       	adc	r13, r1
   1597e:	fe e0       	ldi	r31, 0x0E	; 14
   15980:	ef 16       	cp	r14, r31
   15982:	f1 04       	cpc	r15, r1
   15984:	09 f0       	breq	.+2      	; 0x15988 <_Z12Publish_Datav+0x13cc>
   15986:	c5 cd       	rjmp	.-1142   	; 0x15512 <_Z12Publish_Datav+0xf56>
   15988:	05 c0       	rjmp	.+10     	; 0x15994 <_Z12Publish_Datav+0x13d8>
   1598a:	01 97       	sbiw	r24, 0x01	; 1
   1598c:	90 93 7d 0d 	sts	0x0D7D, r25	; 0x800d7d <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15990:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15994:	cc 50       	subi	r28, 0x0C	; 12
   15996:	de 4f       	sbci	r29, 0xFE	; 254
   15998:	0f b6       	in	r0, 0x3f	; 63
   1599a:	f8 94       	cli
   1599c:	de bf       	out	0x3e, r29	; 62
   1599e:	0f be       	out	0x3f, r0	; 63
   159a0:	cd bf       	out	0x3d, r28	; 61
   159a2:	df 91       	pop	r29
   159a4:	cf 91       	pop	r28
   159a6:	1f 91       	pop	r17
   159a8:	0f 91       	pop	r16
   159aa:	ff 90       	pop	r15
   159ac:	ef 90       	pop	r14
   159ae:	df 90       	pop	r13
   159b0:	cf 90       	pop	r12
   159b2:	bf 90       	pop	r11
   159b4:	af 90       	pop	r10
   159b6:	9f 90       	pop	r9
   159b8:	8f 90       	pop	r8
   159ba:	7f 90       	pop	r7
   159bc:	6f 90       	pop	r6
   159be:	08 95       	ret

000159c0 <_Z22Valve_Grouping_Handlerh>:
   159c0:	2f 92       	push	r2
   159c2:	3f 92       	push	r3
   159c4:	4f 92       	push	r4
   159c6:	5f 92       	push	r5
   159c8:	6f 92       	push	r6
   159ca:	7f 92       	push	r7
   159cc:	8f 92       	push	r8
   159ce:	9f 92       	push	r9
   159d0:	af 92       	push	r10
   159d2:	bf 92       	push	r11
   159d4:	cf 92       	push	r12
   159d6:	df 92       	push	r13
   159d8:	ef 92       	push	r14
   159da:	ff 92       	push	r15
   159dc:	0f 93       	push	r16
   159de:	1f 93       	push	r17
   159e0:	cf 93       	push	r28
   159e2:	df 93       	push	r29
   159e4:	cd b7       	in	r28, 0x3d	; 61
   159e6:	de b7       	in	r29, 0x3e	; 62
   159e8:	e6 97       	sbiw	r28, 0x36	; 54
   159ea:	0f b6       	in	r0, 0x3f	; 63
   159ec:	f8 94       	cli
   159ee:	de bf       	out	0x3e, r29	; 62
   159f0:	0f be       	out	0x3f, r0	; 63
   159f2:	cd bf       	out	0x3d, r28	; 61
   159f4:	48 2e       	mov	r4, r24
   159f6:	88 e0       	ldi	r24, 0x08	; 8
   159f8:	eb e6       	ldi	r30, 0x6B	; 107
   159fa:	f2 e0       	ldi	r31, 0x02	; 2
   159fc:	de 01       	movw	r26, r28
   159fe:	9b 96       	adiw	r26, 0x2b	; 43
   15a00:	01 90       	ld	r0, Z+
   15a02:	0d 92       	st	X+, r0
   15a04:	8a 95       	dec	r24
   15a06:	e1 f7       	brne	.-8      	; 0x15a00 <_Z22Valve_Grouping_Handlerh+0x40>
   15a08:	9e 01       	movw	r18, r28
   15a0a:	2f 5f       	subi	r18, 0xFF	; 255
   15a0c:	3f 4f       	sbci	r19, 0xFF	; 255
   15a0e:	39 01       	movw	r6, r18
   15a10:	8a e2       	ldi	r24, 0x2A	; 42
   15a12:	d9 01       	movw	r26, r18
   15a14:	1d 92       	st	X+, r1
   15a16:	8a 95       	dec	r24
   15a18:	e9 f7       	brne	.-6      	; 0x15a14 <_Z22Valve_Grouping_Handlerh+0x54>
   15a1a:	60 e0       	ldi	r22, 0x00	; 0
   15a1c:	a6 2e       	mov	r10, r22
   15a1e:	6d e0       	ldi	r22, 0x0D	; 13
   15a20:	b6 2e       	mov	r11, r22
   15a22:	44 e5       	ldi	r20, 0x54	; 84
   15a24:	5d e0       	ldi	r21, 0x0D	; 13
   15a26:	75 01       	movw	r14, r10
   15a28:	10 e0       	ldi	r17, 0x00	; 0
   15a2a:	f7 01       	movw	r30, r14
   15a2c:	80 81       	ld	r24, Z
   15a2e:	81 50       	subi	r24, 0x01	; 1
   15a30:	8e 30       	cpi	r24, 0x0E	; 14
   15a32:	d8 f5       	brcc	.+118    	; 0x15aaa <_Z22Valve_Grouping_Handlerh+0xea>
   15a34:	d7 01       	movw	r26, r14
   15a36:	25 e0       	ldi	r18, 0x05	; 5
   15a38:	89 81       	ldd	r24, Y+1	; 0x01
   15a3a:	88 23       	and	r24, r24
   15a3c:	f9 f0       	breq	.+62     	; 0x15a7c <_Z22Valve_Grouping_Handlerh+0xbc>
   15a3e:	00 e0       	ldi	r16, 0x00	; 0
   15a40:	30 e0       	ldi	r19, 0x00	; 0
   15a42:	83 2f       	mov	r24, r19
   15a44:	90 e0       	ldi	r25, 0x00	; 0
   15a46:	b3 01       	movw	r22, r6
   15a48:	68 0f       	add	r22, r24
   15a4a:	79 1f       	adc	r23, r25
   15a4c:	fb 01       	movw	r30, r22
   15a4e:	70 81       	ld	r23, Z
   15a50:	77 23       	and	r23, r23
   15a52:	d1 f0       	breq	.+52     	; 0x15a88 <_Z22Valve_Grouping_Handlerh+0xc8>
   15a54:	11 96       	adiw	r26, 0x01	; 1
   15a56:	6c 91       	ld	r22, X
   15a58:	11 97       	sbiw	r26, 0x01	; 1
   15a5a:	66 23       	and	r22, r22
   15a5c:	69 f0       	breq	.+26     	; 0x15a78 <_Z22Valve_Grouping_Handlerh+0xb8>
   15a5e:	76 17       	cp	r23, r22
   15a60:	99 f0       	breq	.+38     	; 0x15a88 <_Z22Valve_Grouping_Handlerh+0xc8>
   15a62:	62 e0       	ldi	r22, 0x02	; 2
   15a64:	70 e0       	ldi	r23, 0x00	; 0
   15a66:	6c 0f       	add	r22, r28
   15a68:	7d 1f       	adc	r23, r29
   15a6a:	86 0f       	add	r24, r22
   15a6c:	97 1f       	adc	r25, r23
   15a6e:	fc 01       	movw	r30, r24
   15a70:	80 81       	ld	r24, Z
   15a72:	81 11       	cpse	r24, r1
   15a74:	01 c0       	rjmp	.+2      	; 0x15a78 <_Z22Valve_Grouping_Handlerh+0xb8>
   15a76:	01 e0       	ldi	r16, 0x01	; 1
   15a78:	3f 5f       	subi	r19, 0xFF	; 255
   15a7a:	e3 cf       	rjmp	.-58     	; 0x15a42 <_Z22Valve_Grouping_Handlerh+0x82>
   15a7c:	11 96       	adiw	r26, 0x01	; 1
   15a7e:	8c 91       	ld	r24, X
   15a80:	11 97       	sbiw	r26, 0x01	; 1
   15a82:	81 11       	cpse	r24, r1
   15a84:	03 c0       	rjmp	.+6      	; 0x15a8c <_Z22Valve_Grouping_Handlerh+0xcc>
   15a86:	0d c0       	rjmp	.+26     	; 0x15aa2 <_Z22Valve_Grouping_Handlerh+0xe2>
   15a88:	00 23       	and	r16, r16
   15a8a:	59 f0       	breq	.+22     	; 0x15aa2 <_Z22Valve_Grouping_Handlerh+0xe2>
   15a8c:	11 96       	adiw	r26, 0x01	; 1
   15a8e:	8c 91       	ld	r24, X
   15a90:	11 97       	sbiw	r26, 0x01	; 1
   15a92:	86 31       	cpi	r24, 0x16	; 22
   15a94:	30 f4       	brcc	.+12     	; 0x15aa2 <_Z22Valve_Grouping_Handlerh+0xe2>
   15a96:	b3 01       	movw	r22, r6
   15a98:	61 0f       	add	r22, r17
   15a9a:	71 1d       	adc	r23, r1
   15a9c:	fb 01       	movw	r30, r22
   15a9e:	80 83       	st	Z, r24
   15aa0:	1f 5f       	subi	r17, 0xFF	; 255
   15aa2:	21 50       	subi	r18, 0x01	; 1
   15aa4:	11 96       	adiw	r26, 0x01	; 1
   15aa6:	21 11       	cpse	r18, r1
   15aa8:	c7 cf       	rjmp	.-114    	; 0x15a38 <_Z22Valve_Grouping_Handlerh+0x78>
   15aaa:	f6 e0       	ldi	r31, 0x06	; 6
   15aac:	ef 0e       	add	r14, r31
   15aae:	f1 1c       	adc	r15, r1
   15ab0:	4e 15       	cp	r20, r14
   15ab2:	5f 05       	cpc	r21, r15
   15ab4:	09 f0       	breq	.+2      	; 0x15ab8 <_Z22Valve_Grouping_Handlerh+0xf8>
   15ab6:	b9 cf       	rjmp	.-142    	; 0x15a2a <_Z22Valve_Grouping_Handlerh+0x6a>
   15ab8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15abc:	81 30       	cpi	r24, 0x01	; 1
   15abe:	51 f4       	brne	.+20     	; 0x15ad4 <_Z22Valve_Grouping_Handlerh+0x114>
   15ac0:	66 ef       	ldi	r22, 0xF6	; 246
   15ac2:	7f e3       	ldi	r23, 0x3F	; 63
   15ac4:	85 e5       	ldi	r24, 0x55	; 85
   15ac6:	94 e1       	ldi	r25, 0x14	; 20
   15ac8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15acc:	85 e5       	ldi	r24, 0x55	; 85
   15ace:	94 e1       	ldi	r25, 0x14	; 20
   15ad0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15ad4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15ad8:	81 30       	cpi	r24, 0x01	; 1
   15ada:	e9 f4       	brne	.+58     	; 0x15b16 <_Z22Valve_Grouping_Handlerh+0x156>
   15adc:	00 e0       	ldi	r16, 0x00	; 0
   15ade:	73 01       	movw	r14, r6
   15ae0:	e0 0e       	add	r14, r16
   15ae2:	f1 1c       	adc	r15, r1
   15ae4:	d7 01       	movw	r26, r14
   15ae6:	8c 91       	ld	r24, X
   15ae8:	88 23       	and	r24, r24
   15aea:	a9 f0       	breq	.+42     	; 0x15b16 <_Z22Valve_Grouping_Handlerh+0x156>
   15aec:	64 ee       	ldi	r22, 0xE4	; 228
   15aee:	7f e3       	ldi	r23, 0x3F	; 63
   15af0:	85 e5       	ldi	r24, 0x55	; 85
   15af2:	94 e1       	ldi	r25, 0x14	; 20
   15af4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15af8:	f7 01       	movw	r30, r14
   15afa:	60 81       	ld	r22, Z
   15afc:	70 e0       	ldi	r23, 0x00	; 0
   15afe:	4a e0       	ldi	r20, 0x0A	; 10
   15b00:	50 e0       	ldi	r21, 0x00	; 0
   15b02:	85 e5       	ldi	r24, 0x55	; 85
   15b04:	94 e1       	ldi	r25, 0x14	; 20
   15b06:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
   15b0a:	85 e5       	ldi	r24, 0x55	; 85
   15b0c:	94 e1       	ldi	r25, 0x14	; 20
   15b0e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   15b12:	0f 5f       	subi	r16, 0xFF	; 255
   15b14:	e4 cf       	rjmp	.-56     	; 0x15ade <_Z22Valve_Grouping_Handlerh+0x11e>
   15b16:	f3 e0       	ldi	r31, 0x03	; 3
   15b18:	4f 12       	cpse	r4, r31
   15b1a:	81 c0       	rjmp	.+258    	; 0x15c1e <_Z22Valve_Grouping_Handlerh+0x25e>
   15b1c:	54 e8       	ldi	r21, 0x84	; 132
   15b1e:	e5 2e       	mov	r14, r21
   15b20:	5d e0       	ldi	r21, 0x0D	; 13
   15b22:	f5 2e       	mov	r15, r21
   15b24:	4e ef       	ldi	r20, 0xFE	; 254
   15b26:	5e e0       	ldi	r21, 0x0E	; 14
   15b28:	d7 01       	movw	r26, r14
   15b2a:	11 96       	adiw	r26, 0x01	; 1
   15b2c:	8c 91       	ld	r24, X
   15b2e:	11 97       	sbiw	r26, 0x01	; 1
   15b30:	85 56       	subi	r24, 0x65	; 101
   15b32:	8e 30       	cpi	r24, 0x0E	; 14
   15b34:	d0 f5       	brcc	.+116    	; 0x15baa <_Z22Valve_Grouping_Handlerh+0x1ea>
   15b36:	25 e0       	ldi	r18, 0x05	; 5
   15b38:	89 81       	ldd	r24, Y+1	; 0x01
   15b3a:	88 23       	and	r24, r24
   15b3c:	f9 f0       	breq	.+62     	; 0x15b7c <_Z22Valve_Grouping_Handlerh+0x1bc>
   15b3e:	00 e0       	ldi	r16, 0x00	; 0
   15b40:	30 e0       	ldi	r19, 0x00	; 0
   15b42:	83 2f       	mov	r24, r19
   15b44:	90 e0       	ldi	r25, 0x00	; 0
   15b46:	b3 01       	movw	r22, r6
   15b48:	68 0f       	add	r22, r24
   15b4a:	79 1f       	adc	r23, r25
   15b4c:	fb 01       	movw	r30, r22
   15b4e:	70 81       	ld	r23, Z
   15b50:	77 23       	and	r23, r23
   15b52:	d1 f0       	breq	.+52     	; 0x15b88 <_Z22Valve_Grouping_Handlerh+0x1c8>
   15b54:	15 96       	adiw	r26, 0x05	; 5
   15b56:	6c 91       	ld	r22, X
   15b58:	15 97       	sbiw	r26, 0x05	; 5
   15b5a:	66 23       	and	r22, r22
   15b5c:	69 f0       	breq	.+26     	; 0x15b78 <_Z22Valve_Grouping_Handlerh+0x1b8>
   15b5e:	76 17       	cp	r23, r22
   15b60:	99 f0       	breq	.+38     	; 0x15b88 <_Z22Valve_Grouping_Handlerh+0x1c8>
   15b62:	62 e0       	ldi	r22, 0x02	; 2
   15b64:	70 e0       	ldi	r23, 0x00	; 0
   15b66:	6c 0f       	add	r22, r28
   15b68:	7d 1f       	adc	r23, r29
   15b6a:	86 0f       	add	r24, r22
   15b6c:	97 1f       	adc	r25, r23
   15b6e:	fc 01       	movw	r30, r24
   15b70:	80 81       	ld	r24, Z
   15b72:	81 11       	cpse	r24, r1
   15b74:	01 c0       	rjmp	.+2      	; 0x15b78 <_Z22Valve_Grouping_Handlerh+0x1b8>
   15b76:	01 e0       	ldi	r16, 0x01	; 1
   15b78:	3f 5f       	subi	r19, 0xFF	; 255
   15b7a:	e3 cf       	rjmp	.-58     	; 0x15b42 <_Z22Valve_Grouping_Handlerh+0x182>
   15b7c:	15 96       	adiw	r26, 0x05	; 5
   15b7e:	8c 91       	ld	r24, X
   15b80:	15 97       	sbiw	r26, 0x05	; 5
   15b82:	81 11       	cpse	r24, r1
   15b84:	03 c0       	rjmp	.+6      	; 0x15b8c <_Z22Valve_Grouping_Handlerh+0x1cc>
   15b86:	0d c0       	rjmp	.+26     	; 0x15ba2 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15b88:	00 23       	and	r16, r16
   15b8a:	59 f0       	breq	.+22     	; 0x15ba2 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15b8c:	15 96       	adiw	r26, 0x05	; 5
   15b8e:	8c 91       	ld	r24, X
   15b90:	15 97       	sbiw	r26, 0x05	; 5
   15b92:	86 31       	cpi	r24, 0x16	; 22
   15b94:	30 f4       	brcc	.+12     	; 0x15ba2 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15b96:	b3 01       	movw	r22, r6
   15b98:	61 0f       	add	r22, r17
   15b9a:	71 1d       	adc	r23, r1
   15b9c:	fb 01       	movw	r30, r22
   15b9e:	80 83       	st	Z, r24
   15ba0:	1f 5f       	subi	r17, 0xFF	; 255
   15ba2:	21 50       	subi	r18, 0x01	; 1
   15ba4:	11 96       	adiw	r26, 0x01	; 1
   15ba6:	21 11       	cpse	r18, r1
   15ba8:	c7 cf       	rjmp	.-114    	; 0x15b38 <_Z22Valve_Grouping_Handlerh+0x178>
   15baa:	fb e1       	ldi	r31, 0x1B	; 27
   15bac:	ef 0e       	add	r14, r31
   15bae:	f1 1c       	adc	r15, r1
   15bb0:	4e 15       	cp	r20, r14
   15bb2:	5f 05       	cpc	r21, r15
   15bb4:	09 f0       	breq	.+2      	; 0x15bb8 <_Z22Valve_Grouping_Handlerh+0x1f8>
   15bb6:	b8 cf       	rjmp	.-144    	; 0x15b28 <_Z22Valve_Grouping_Handlerh+0x168>
   15bb8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15bbc:	81 30       	cpi	r24, 0x01	; 1
   15bbe:	51 f4       	brne	.+20     	; 0x15bd4 <_Z22Valve_Grouping_Handlerh+0x214>
   15bc0:	63 ed       	ldi	r22, 0xD3	; 211
   15bc2:	7f e3       	ldi	r23, 0x3F	; 63
   15bc4:	85 e5       	ldi	r24, 0x55	; 85
   15bc6:	94 e1       	ldi	r25, 0x14	; 20
   15bc8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15bcc:	85 e5       	ldi	r24, 0x55	; 85
   15bce:	94 e1       	ldi	r25, 0x14	; 20
   15bd0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15bd4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15bd8:	81 30       	cpi	r24, 0x01	; 1
   15bda:	91 f5       	brne	.+100    	; 0x15c40 <_Z22Valve_Grouping_Handlerh+0x280>
   15bdc:	10 e0       	ldi	r17, 0x00	; 0
   15bde:	73 01       	movw	r14, r6
   15be0:	e1 0e       	add	r14, r17
   15be2:	f1 1c       	adc	r15, r1
   15be4:	d7 01       	movw	r26, r14
   15be6:	8c 91       	ld	r24, X
   15be8:	88 23       	and	r24, r24
   15bea:	e1 f0       	breq	.+56     	; 0x15c24 <_Z22Valve_Grouping_Handlerh+0x264>
   15bec:	61 ec       	ldi	r22, 0xC1	; 193
   15bee:	7f e3       	ldi	r23, 0x3F	; 63
   15bf0:	85 e5       	ldi	r24, 0x55	; 85
   15bf2:	94 e1       	ldi	r25, 0x14	; 20
   15bf4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15bf8:	f7 01       	movw	r30, r14
   15bfa:	60 81       	ld	r22, Z
   15bfc:	70 e0       	ldi	r23, 0x00	; 0
   15bfe:	4a e0       	ldi	r20, 0x0A	; 10
   15c00:	50 e0       	ldi	r21, 0x00	; 0
   15c02:	85 e5       	ldi	r24, 0x55	; 85
   15c04:	94 e1       	ldi	r25, 0x14	; 20
   15c06:	0e 94 22 d2 	call	0x1a444	; 0x1a444 <_ZN5Print5printEii>
   15c0a:	85 e5       	ldi	r24, 0x55	; 85
   15c0c:	94 e1       	ldi	r25, 0x14	; 20
   15c0e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15c12:	85 e5       	ldi	r24, 0x55	; 85
   15c14:	94 e1       	ldi	r25, 0x14	; 20
   15c16:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   15c1a:	1f 5f       	subi	r17, 0xFF	; 255
   15c1c:	e0 cf       	rjmp	.-64     	; 0x15bde <_Z22Valve_Grouping_Handlerh+0x21e>
   15c1e:	a5 e0       	ldi	r26, 0x05	; 5
   15c20:	4a 12       	cpse	r4, r26
   15c22:	5c c1       	rjmp	.+696    	; 0x15edc <_Z22Valve_Grouping_Handlerh+0x51c>
   15c24:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15c28:	81 30       	cpi	r24, 0x01	; 1
   15c2a:	51 f4       	brne	.+20     	; 0x15c40 <_Z22Valve_Grouping_Handlerh+0x280>
   15c2c:	66 e9       	ldi	r22, 0x96	; 150
   15c2e:	7f e3       	ldi	r23, 0x3F	; 63
   15c30:	85 e5       	ldi	r24, 0x55	; 85
   15c32:	94 e1       	ldi	r25, 0x14	; 20
   15c34:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15c38:	85 e5       	ldi	r24, 0x55	; 85
   15c3a:	94 e1       	ldi	r25, 0x14	; 20
   15c3c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15c40:	07 eb       	ldi	r16, 0xB7	; 183
   15c42:	1b e0       	ldi	r17, 0x0B	; 11
   15c44:	44 e0       	ldi	r20, 0x04	; 4
   15c46:	c4 2e       	mov	r12, r20
   15c48:	d1 2c       	mov	r13, r1
   15c4a:	e1 2c       	mov	r14, r1
   15c4c:	f1 2c       	mov	r15, r1
   15c4e:	d8 01       	movw	r26, r16
   15c50:	8c 91       	ld	r24, X
   15c52:	88 23       	and	r24, r24
   15c54:	21 f1       	breq	.+72     	; 0x15c9e <_Z22Valve_Grouping_Handlerh+0x2de>
   15c56:	81 2c       	mov	r8, r1
   15c58:	40 e0       	ldi	r20, 0x00	; 0
   15c5a:	39 c0       	rjmp	.+114    	; 0x15cce <_Z22Valve_Grouping_Handlerh+0x30e>
   15c5c:	9e 01       	movw	r18, r28
   15c5e:	25 5d       	subi	r18, 0xD5	; 213
   15c60:	3f 4f       	sbci	r19, 0xFF	; 255
   15c62:	3c ab       	std	Y+52, r19	; 0x34
   15c64:	2b ab       	std	Y+51, r18	; 0x33
   15c66:	99 24       	eor	r9, r9
   15c68:	93 94       	inc	r9
   15c6a:	3d e0       	ldi	r19, 0x0D	; 13
   15c6c:	3e 9d       	mul	r19, r14
   15c6e:	c0 01       	movw	r24, r0
   15c70:	3f 9d       	mul	r19, r15
   15c72:	90 0d       	add	r25, r0
   15c74:	11 24       	eor	r1, r1
   15c76:	bc 01       	movw	r22, r24
   15c78:	69 54       	subi	r22, 0x49	; 73
   15c7a:	74 4f       	sbci	r23, 0xF4	; 244
   15c7c:	7e ab       	std	Y+54, r23	; 0x36
   15c7e:	6d ab       	std	Y+53, r22	; 0x35
   15c80:	17 01       	movw	r2, r14
   15c82:	7f ef       	ldi	r23, 0xFF	; 255
   15c84:	27 1a       	sub	r2, r23
   15c86:	37 0a       	sbc	r3, r23
   15c88:	ab a9       	ldd	r26, Y+51	; 0x33
   15c8a:	bc a9       	ldd	r27, Y+52	; 0x34
   15c8c:	8d 91       	ld	r24, X+
   15c8e:	bc ab       	std	Y+52, r27	; 0x34
   15c90:	ab ab       	std	Y+51, r26	; 0x33
   15c92:	88 21       	and	r24, r8
   15c94:	49 f5       	brne	.+82     	; 0x15ce8 <_Z22Valve_Grouping_Handlerh+0x328>
   15c96:	93 94       	inc	r9
   15c98:	b4 e0       	ldi	r27, 0x04	; 4
   15c9a:	9b 12       	cpse	r9, r27
   15c9c:	f5 cf       	rjmp	.-22     	; 0x15c88 <_Z22Valve_Grouping_Handlerh+0x2c8>
   15c9e:	bf ef       	ldi	r27, 0xFF	; 255
   15ca0:	eb 1a       	sub	r14, r27
   15ca2:	fb 0a       	sbc	r15, r27
   15ca4:	03 5f       	subi	r16, 0xF3	; 243
   15ca6:	1f 4f       	sbci	r17, 0xFF	; 255
   15ca8:	e3 e0       	ldi	r30, 0x03	; 3
   15caa:	ce 0e       	add	r12, r30
   15cac:	d1 1c       	adc	r13, r1
   15cae:	f6 e0       	ldi	r31, 0x06	; 6
   15cb0:	ef 16       	cp	r14, r31
   15cb2:	f1 04       	cpc	r15, r1
   15cb4:	61 f6       	brne	.-104    	; 0x15c4e <_Z22Valve_Grouping_Handlerh+0x28e>
   15cb6:	c8 c0       	rjmp	.+400    	; 0x15e48 <_Z22Valve_Grouping_Handlerh+0x488>
   15cb8:	28 17       	cp	r18, r24
   15cba:	39 07       	cpc	r19, r25
   15cbc:	11 f4       	brne	.+4      	; 0x15cc2 <_Z22Valve_Grouping_Handlerh+0x302>
   15cbe:	50 81       	ld	r21, Z
   15cc0:	85 2a       	or	r8, r21
   15cc2:	01 96       	adiw	r24, 0x01	; 1
   15cc4:	31 96       	adiw	r30, 0x01	; 1
   15cc6:	c8 16       	cp	r12, r24
   15cc8:	d9 06       	cpc	r13, r25
   15cca:	b1 f7       	brne	.-20     	; 0x15cb8 <_Z22Valve_Grouping_Handlerh+0x2f8>
   15ccc:	4f 5f       	subi	r20, 0xFF	; 255
   15cce:	f3 01       	movw	r30, r6
   15cd0:	e4 0f       	add	r30, r20
   15cd2:	f1 1d       	adc	r31, r1
   15cd4:	20 81       	ld	r18, Z
   15cd6:	22 23       	and	r18, r18
   15cd8:	09 f4       	brne	.+2      	; 0x15cdc <_Z22Valve_Grouping_Handlerh+0x31c>
   15cda:	c0 cf       	rjmp	.-128    	; 0x15c5c <_Z22Valve_Grouping_Handlerh+0x29c>
   15cdc:	c6 01       	movw	r24, r12
   15cde:	03 97       	sbiw	r24, 0x03	; 3
   15ce0:	fe 01       	movw	r30, r28
   15ce2:	bb 96       	adiw	r30, 0x2b	; 43
   15ce4:	30 e0       	ldi	r19, 0x00	; 0
   15ce6:	e8 cf       	rjmp	.-48     	; 0x15cb8 <_Z22Valve_Grouping_Handlerh+0x2f8>
   15ce8:	ec e7       	ldi	r30, 0x7C	; 124
   15cea:	f3 e1       	ldi	r31, 0x13	; 19
   15cec:	24 e1       	ldi	r18, 0x14	; 20
   15cee:	11 92       	st	Z+, r1
   15cf0:	2a 95       	dec	r18
   15cf2:	e9 f7       	brne	.-6      	; 0x15cee <_Z22Valve_Grouping_Handlerh+0x32e>
   15cf4:	d8 01       	movw	r26, r16
   15cf6:	11 96       	adiw	r26, 0x01	; 1
   15cf8:	8c 91       	ld	r24, X
   15cfa:	11 97       	sbiw	r26, 0x01	; 1
   15cfc:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
   15d00:	12 96       	adiw	r26, 0x02	; 2
   15d02:	8c 91       	ld	r24, X
   15d04:	12 97       	sbiw	r26, 0x02	; 2
   15d06:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
   15d0a:	13 96       	adiw	r26, 0x03	; 3
   15d0c:	8c 91       	ld	r24, X
   15d0e:	13 97       	sbiw	r26, 0x03	; 3
   15d10:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
   15d14:	14 96       	adiw	r26, 0x04	; 4
   15d16:	8c 91       	ld	r24, X
   15d18:	14 97       	sbiw	r26, 0x04	; 4
   15d1a:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
   15d1e:	15 96       	adiw	r26, 0x05	; 5
   15d20:	8c 91       	ld	r24, X
   15d22:	15 97       	sbiw	r26, 0x05	; 5
   15d24:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
   15d28:	16 96       	adiw	r26, 0x06	; 6
   15d2a:	8c 91       	ld	r24, X
   15d2c:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
   15d30:	b2 e0       	ldi	r27, 0x02	; 2
   15d32:	b0 93 82 13 	sts	0x1382, r27	; 0x801382 <_sRuble_Parameters+0x38>
   15d36:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   15d3a:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
   15d3e:	90 92 87 13 	sts	0x1387, r9	; 0x801387 <_sRuble_Parameters+0x3d>
   15d42:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15d46:	81 30       	cpi	r24, 0x01	; 1
   15d48:	39 f5       	brne	.+78     	; 0x15d98 <_Z22Valve_Grouping_Handlerh+0x3d8>
   15d4a:	63 e7       	ldi	r22, 0x73	; 115
   15d4c:	7f e3       	ldi	r23, 0x3F	; 63
   15d4e:	85 e5       	ldi	r24, 0x55	; 85
   15d50:	94 e1       	ldi	r25, 0x14	; 20
   15d52:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   15d56:	4a e0       	ldi	r20, 0x0A	; 10
   15d58:	50 e0       	ldi	r21, 0x00	; 0
   15d5a:	b1 01       	movw	r22, r2
   15d5c:	85 e5       	ldi	r24, 0x55	; 85
   15d5e:	94 e1       	ldi	r25, 0x14	; 20
   15d60:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   15d64:	85 e5       	ldi	r24, 0x55	; 85
   15d66:	94 e1       	ldi	r25, 0x14	; 20
   15d68:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15d6c:	6e e5       	ldi	r22, 0x5E	; 94
   15d6e:	7f e3       	ldi	r23, 0x3F	; 63
   15d70:	85 e5       	ldi	r24, 0x55	; 85
   15d72:	94 e1       	ldi	r25, 0x14	; 20
   15d74:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   15d78:	4c e0       	ldi	r20, 0x0C	; 12
   15d7a:	50 e0       	ldi	r21, 0x00	; 0
   15d7c:	6c e7       	ldi	r22, 0x7C	; 124
   15d7e:	73 e1       	ldi	r23, 0x13	; 19
   15d80:	85 e5       	ldi	r24, 0x55	; 85
   15d82:	94 e1       	ldi	r25, 0x14	; 20
   15d84:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   15d88:	85 e5       	ldi	r24, 0x55	; 85
   15d8a:	94 e1       	ldi	r25, 0x14	; 20
   15d8c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   15d90:	85 e5       	ldi	r24, 0x55	; 85
   15d92:	94 e1       	ldi	r25, 0x14	; 20
   15d94:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15d98:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   15d9c:	8c e0       	ldi	r24, 0x0C	; 12
   15d9e:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   15da2:	88 eb       	ldi	r24, 0xB8	; 184
   15da4:	9b e0       	ldi	r25, 0x0B	; 11
   15da6:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   15daa:	88 23       	and	r24, r24
   15dac:	e9 f1       	breq	.+122    	; 0x15e28 <_Z22Valve_Grouping_Handlerh+0x468>
   15dae:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   15db2:	90 e0       	ldi	r25, 0x00	; 0
   15db4:	80 e0       	ldi	r24, 0x00	; 0
   15db6:	28 2f       	mov	r18, r24
   15db8:	30 e0       	ldi	r19, 0x00	; 0
   15dba:	ed a9       	ldd	r30, Y+53	; 0x35
   15dbc:	fe a9       	ldd	r31, Y+54	; 0x36
   15dbe:	e2 0f       	add	r30, r18
   15dc0:	f3 1f       	adc	r31, r19
   15dc2:	d9 01       	movw	r26, r18
   15dc4:	a0 57       	subi	r26, 0x70	; 112
   15dc6:	bc 4e       	sbci	r27, 0xEC	; 236
   15dc8:	41 81       	ldd	r20, Z+1	; 0x01
   15dca:	2c 91       	ld	r18, X
   15dcc:	42 17       	cp	r20, r18
   15dce:	11 f0       	breq	.+4      	; 0x15dd4 <_Z22Valve_Grouping_Handlerh+0x414>
   15dd0:	90 e0       	ldi	r25, 0x00	; 0
   15dd2:	86 e0       	ldi	r24, 0x06	; 6
   15dd4:	9f 5f       	subi	r25, 0xFF	; 255
   15dd6:	8f 5f       	subi	r24, 0xFF	; 255
   15dd8:	86 30       	cpi	r24, 0x06	; 6
   15dda:	68 f3       	brcs	.-38     	; 0x15db6 <_Z22Valve_Grouping_Handlerh+0x3f6>
   15ddc:	96 30       	cpi	r25, 0x06	; 6
   15dde:	e1 f4       	brne	.+56     	; 0x15e18 <_Z22Valve_Grouping_Handlerh+0x458>
   15de0:	21 e0       	ldi	r18, 0x01	; 1
   15de2:	f8 01       	movw	r30, r16
   15de4:	23 87       	std	Z+11, r18	; 0x0b
   15de6:	20 91 98 13 	lds	r18, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   15dea:	22 87       	std	Z+10, r18	; 0x0a
   15dec:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   15df0:	90 e0       	ldi	r25, 0x00	; 0
   15df2:	98 2f       	mov	r25, r24
   15df4:	88 27       	eor	r24, r24
   15df6:	30 91 9a 13 	lds	r19, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   15dfa:	83 2b       	or	r24, r19
   15dfc:	91 87       	std	Z+9, r25	; 0x09
   15dfe:	80 87       	std	Z+8, r24	; 0x08
   15e00:	22 23       	and	r18, r18
   15e02:	11 f4       	brne	.+4      	; 0x15e08 <_Z22Valve_Grouping_Handlerh+0x448>
   15e04:	0c 94 06 b7 	jmp	0x16e0c	; 0x16e0c <_Z22Valve_Grouping_Handlerh+0x144c>
   15e08:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15e0c:	81 30       	cpi	r24, 0x01	; 1
   15e0e:	09 f0       	breq	.+2      	; 0x15e12 <_Z22Valve_Grouping_Handlerh+0x452>
   15e10:	fd c7       	rjmp	.+4090   	; 0x16e0c <_Z22Valve_Grouping_Handlerh+0x144c>
   15e12:	69 e3       	ldi	r22, 0x39	; 57
   15e14:	7f e3       	ldi	r23, 0x3F	; 63
   15e16:	0f c0       	rjmp	.+30     	; 0x15e36 <_Z22Valve_Grouping_Handlerh+0x476>
   15e18:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15e1c:	81 30       	cpi	r24, 0x01	; 1
   15e1e:	09 f0       	breq	.+2      	; 0x15e22 <_Z22Valve_Grouping_Handlerh+0x462>
   15e20:	f5 c7       	rjmp	.+4074   	; 0x16e0c <_Z22Valve_Grouping_Handlerh+0x144c>
   15e22:	68 e1       	ldi	r22, 0x18	; 24
   15e24:	7f e3       	ldi	r23, 0x3F	; 63
   15e26:	07 c0       	rjmp	.+14     	; 0x15e36 <_Z22Valve_Grouping_Handlerh+0x476>
   15e28:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15e2c:	81 30       	cpi	r24, 0x01	; 1
   15e2e:	09 f0       	breq	.+2      	; 0x15e32 <_Z22Valve_Grouping_Handlerh+0x472>
   15e30:	ed c7       	rjmp	.+4058   	; 0x16e0c <_Z22Valve_Grouping_Handlerh+0x144c>
   15e32:	61 ef       	ldi	r22, 0xF1	; 241
   15e34:	7e e3       	ldi	r23, 0x3E	; 62
   15e36:	85 e5       	ldi	r24, 0x55	; 85
   15e38:	94 e1       	ldi	r25, 0x14	; 20
   15e3a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15e3e:	85 e5       	ldi	r24, 0x55	; 85
   15e40:	94 e1       	ldi	r25, 0x14	; 20
   15e42:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15e46:	e2 c7       	rjmp	.+4036   	; 0x16e0c <_Z22Valve_Grouping_Handlerh+0x144c>
   15e48:	33 e0       	ldi	r19, 0x03	; 3
   15e4a:	43 16       	cp	r4, r19
   15e4c:	09 f4       	brne	.+2      	; 0x15e50 <_Z22Valve_Grouping_Handlerh+0x490>
   15e4e:	dc c7       	rjmp	.+4024   	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   15e50:	65 e0       	ldi	r22, 0x05	; 5
   15e52:	46 12       	cpse	r4, r22
   15e54:	43 c0       	rjmp	.+134    	; 0x15edc <_Z22Valve_Grouping_Handlerh+0x51c>
   15e56:	9e e0       	ldi	r25, 0x0E	; 14
   15e58:	f9 2e       	mov	r15, r25
   15e5a:	00 e0       	ldi	r16, 0x00	; 0
   15e5c:	10 e0       	ldi	r17, 0x00	; 0
   15e5e:	f5 01       	movw	r30, r10
   15e60:	e0 0f       	add	r30, r16
   15e62:	f1 1f       	adc	r31, r17
   15e64:	e1 81       	ldd	r30, Z+1	; 0x01
   15e66:	e6 31       	cpi	r30, 0x16	; 22
   15e68:	68 f0       	brcs	.+26     	; 0x15e84 <_Z22Valve_Grouping_Handlerh+0x4c4>
   15e6a:	f0 e0       	ldi	r31, 0x00	; 0
   15e6c:	ec 53       	subi	r30, 0x3C	; 60
   15e6e:	fc 4e       	sbci	r31, 0xEC	; 236
   15e70:	61 e0       	ldi	r22, 0x01	; 1
   15e72:	80 81       	ld	r24, Z
   15e74:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   15e78:	68 ec       	ldi	r22, 0xC8	; 200
   15e7a:	70 e0       	ldi	r23, 0x00	; 0
   15e7c:	80 e0       	ldi	r24, 0x00	; 0
   15e7e:	90 e0       	ldi	r25, 0x00	; 0
   15e80:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   15e84:	0f 5f       	subi	r16, 0xFF	; 255
   15e86:	1f 4f       	sbci	r17, 0xFF	; 255
   15e88:	05 30       	cpi	r16, 0x05	; 5
   15e8a:	11 05       	cpc	r17, r1
   15e8c:	41 f7       	brne	.-48     	; 0x15e5e <_Z22Valve_Grouping_Handlerh+0x49e>
   15e8e:	fa 94       	dec	r15
   15e90:	76 e0       	ldi	r23, 0x06	; 6
   15e92:	a7 0e       	add	r10, r23
   15e94:	b1 1c       	adc	r11, r1
   15e96:	f1 10       	cpse	r15, r1
   15e98:	e0 cf       	rjmp	.-64     	; 0x15e5a <_Z22Valve_Grouping_Handlerh+0x49a>
   15e9a:	80 91 d6 0d 	lds	r24, 0x0DD6	; 0x800dd6 <_sExtra_Plot+0x52>
   15e9e:	88 36       	cpi	r24, 0x68	; 104
   15ea0:	09 f0       	breq	.+2      	; 0x15ea4 <_Z22Valve_Grouping_Handlerh+0x4e4>
   15ea2:	b2 c7       	rjmp	.+3940   	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   15ea4:	0a ed       	ldi	r16, 0xDA	; 218
   15ea6:	1d e0       	ldi	r17, 0x0D	; 13
   15ea8:	8f ed       	ldi	r24, 0xDF	; 223
   15eaa:	e8 2e       	mov	r14, r24
   15eac:	8d e0       	ldi	r24, 0x0D	; 13
   15eae:	f8 2e       	mov	r15, r24
   15eb0:	d8 01       	movw	r26, r16
   15eb2:	ed 91       	ld	r30, X+
   15eb4:	8d 01       	movw	r16, r26
   15eb6:	e6 31       	cpi	r30, 0x16	; 22
   15eb8:	68 f0       	brcs	.+26     	; 0x15ed4 <_Z22Valve_Grouping_Handlerh+0x514>
   15eba:	f0 e0       	ldi	r31, 0x00	; 0
   15ebc:	ec 53       	subi	r30, 0x3C	; 60
   15ebe:	fc 4e       	sbci	r31, 0xEC	; 236
   15ec0:	61 e0       	ldi	r22, 0x01	; 1
   15ec2:	80 81       	ld	r24, Z
   15ec4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   15ec8:	68 ec       	ldi	r22, 0xC8	; 200
   15eca:	70 e0       	ldi	r23, 0x00	; 0
   15ecc:	80 e0       	ldi	r24, 0x00	; 0
   15ece:	90 e0       	ldi	r25, 0x00	; 0
   15ed0:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   15ed4:	e0 16       	cp	r14, r16
   15ed6:	f1 06       	cpc	r15, r17
   15ed8:	59 f7       	brne	.-42     	; 0x15eb0 <_Z22Valve_Grouping_Handlerh+0x4f0>
   15eda:	96 c7       	rjmp	.+3884   	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   15edc:	b1 e0       	ldi	r27, 0x01	; 1
   15ede:	4b 12       	cpse	r4, r27
   15ee0:	0e c1       	rjmp	.+540    	; 0x160fe <_Z22Valve_Grouping_Handlerh+0x73e>
   15ee2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   15ee6:	81 30       	cpi	r24, 0x01	; 1
   15ee8:	51 f4       	brne	.+20     	; 0x15efe <_Z22Valve_Grouping_Handlerh+0x53e>
   15eea:	66 ec       	ldi	r22, 0xC6	; 198
   15eec:	7e e3       	ldi	r23, 0x3E	; 62
   15eee:	85 e5       	ldi	r24, 0x55	; 85
   15ef0:	94 e1       	ldi	r25, 0x14	; 20
   15ef2:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15ef6:	85 e5       	ldi	r24, 0x55	; 85
   15ef8:	94 e1       	ldi	r25, 0x14	; 20
   15efa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   15efe:	07 eb       	ldi	r16, 0xB7	; 183
   15f00:	1b e0       	ldi	r17, 0x0B	; 11
   15f02:	b4 e0       	ldi	r27, 0x04	; 4
   15f04:	cb 2e       	mov	r12, r27
   15f06:	d1 2c       	mov	r13, r1
   15f08:	e1 2c       	mov	r14, r1
   15f0a:	f1 2c       	mov	r15, r1
   15f0c:	f8 01       	movw	r30, r16
   15f0e:	82 85       	ldd	r24, Z+10	; 0x0a
   15f10:	88 23       	and	r24, r24
   15f12:	19 f1       	breq	.+70     	; 0x15f5a <_Z22Valve_Grouping_Handlerh+0x59a>
   15f14:	21 2c       	mov	r2, r1
   15f16:	40 e0       	ldi	r20, 0x00	; 0
   15f18:	38 c0       	rjmp	.+112    	; 0x15f8a <_Z22Valve_Grouping_Handlerh+0x5ca>
   15f1a:	be 01       	movw	r22, r28
   15f1c:	65 5d       	subi	r22, 0xD5	; 213
   15f1e:	7f 4f       	sbci	r23, 0xFF	; 255
   15f20:	7c ab       	std	Y+52, r23	; 0x34
   15f22:	6b ab       	std	Y+51, r22	; 0x33
   15f24:	33 24       	eor	r3, r3
   15f26:	33 94       	inc	r3
   15f28:	7d e0       	ldi	r23, 0x0D	; 13
   15f2a:	7e 9d       	mul	r23, r14
   15f2c:	c0 01       	movw	r24, r0
   15f2e:	7f 9d       	mul	r23, r15
   15f30:	90 0d       	add	r25, r0
   15f32:	11 24       	eor	r1, r1
   15f34:	dc 01       	movw	r26, r24
   15f36:	a9 54       	subi	r26, 0x49	; 73
   15f38:	b4 4f       	sbci	r27, 0xF4	; 244
   15f3a:	5d 01       	movw	r10, r26
   15f3c:	47 01       	movw	r8, r14
   15f3e:	bf ef       	ldi	r27, 0xFF	; 255
   15f40:	8b 1a       	sub	r8, r27
   15f42:	9b 0a       	sbc	r9, r27
   15f44:	eb a9       	ldd	r30, Y+51	; 0x33
   15f46:	fc a9       	ldd	r31, Y+52	; 0x34
   15f48:	81 91       	ld	r24, Z+
   15f4a:	fc ab       	std	Y+52, r31	; 0x34
   15f4c:	eb ab       	std	Y+51, r30	; 0x33
   15f4e:	82 21       	and	r24, r2
   15f50:	41 f5       	brne	.+80     	; 0x15fa2 <_Z22Valve_Grouping_Handlerh+0x5e2>
   15f52:	33 94       	inc	r3
   15f54:	f4 e0       	ldi	r31, 0x04	; 4
   15f56:	3f 12       	cpse	r3, r31
   15f58:	f5 cf       	rjmp	.-22     	; 0x15f44 <_Z22Valve_Grouping_Handlerh+0x584>
   15f5a:	ff ef       	ldi	r31, 0xFF	; 255
   15f5c:	ef 1a       	sub	r14, r31
   15f5e:	ff 0a       	sbc	r15, r31
   15f60:	03 5f       	subi	r16, 0xF3	; 243
   15f62:	1f 4f       	sbci	r17, 0xFF	; 255
   15f64:	23 e0       	ldi	r18, 0x03	; 3
   15f66:	c2 0e       	add	r12, r18
   15f68:	d1 1c       	adc	r13, r1
   15f6a:	37 e0       	ldi	r19, 0x07	; 7
   15f6c:	e3 16       	cp	r14, r19
   15f6e:	f1 04       	cpc	r15, r1
   15f70:	69 f6       	brne	.-102    	; 0x15f0c <_Z22Valve_Grouping_Handlerh+0x54c>
   15f72:	c9 c0       	rjmp	.+402    	; 0x16106 <_Z22Valve_Grouping_Handlerh+0x746>
   15f74:	28 17       	cp	r18, r24
   15f76:	39 07       	cpc	r19, r25
   15f78:	11 f4       	brne	.+4      	; 0x15f7e <_Z22Valve_Grouping_Handlerh+0x5be>
   15f7a:	50 81       	ld	r21, Z
   15f7c:	25 2a       	or	r2, r21
   15f7e:	01 96       	adiw	r24, 0x01	; 1
   15f80:	31 96       	adiw	r30, 0x01	; 1
   15f82:	c8 16       	cp	r12, r24
   15f84:	d9 06       	cpc	r13, r25
   15f86:	b1 f7       	brne	.-20     	; 0x15f74 <_Z22Valve_Grouping_Handlerh+0x5b4>
   15f88:	4f 5f       	subi	r20, 0xFF	; 255
   15f8a:	f3 01       	movw	r30, r6
   15f8c:	e4 0f       	add	r30, r20
   15f8e:	f1 1d       	adc	r31, r1
   15f90:	20 81       	ld	r18, Z
   15f92:	22 23       	and	r18, r18
   15f94:	11 f2       	breq	.-124    	; 0x15f1a <_Z22Valve_Grouping_Handlerh+0x55a>
   15f96:	c6 01       	movw	r24, r12
   15f98:	03 97       	sbiw	r24, 0x03	; 3
   15f9a:	fe 01       	movw	r30, r28
   15f9c:	bb 96       	adiw	r30, 0x2b	; 43
   15f9e:	30 e0       	ldi	r19, 0x00	; 0
   15fa0:	e9 cf       	rjmp	.-46     	; 0x15f74 <_Z22Valve_Grouping_Handlerh+0x5b4>
   15fa2:	ac e7       	ldi	r26, 0x7C	; 124
   15fa4:	b3 e1       	ldi	r27, 0x13	; 19
   15fa6:	e4 e1       	ldi	r30, 0x14	; 20
   15fa8:	1d 92       	st	X+, r1
   15faa:	ea 95       	dec	r30
   15fac:	e9 f7       	brne	.-6      	; 0x15fa8 <_Z22Valve_Grouping_Handlerh+0x5e8>
   15fae:	d8 01       	movw	r26, r16
   15fb0:	11 96       	adiw	r26, 0x01	; 1
   15fb2:	8c 91       	ld	r24, X
   15fb4:	11 97       	sbiw	r26, 0x01	; 1
   15fb6:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
   15fba:	12 96       	adiw	r26, 0x02	; 2
   15fbc:	8c 91       	ld	r24, X
   15fbe:	12 97       	sbiw	r26, 0x02	; 2
   15fc0:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
   15fc4:	13 96       	adiw	r26, 0x03	; 3
   15fc6:	8c 91       	ld	r24, X
   15fc8:	13 97       	sbiw	r26, 0x03	; 3
   15fca:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
   15fce:	14 96       	adiw	r26, 0x04	; 4
   15fd0:	8c 91       	ld	r24, X
   15fd2:	14 97       	sbiw	r26, 0x04	; 4
   15fd4:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
   15fd8:	15 96       	adiw	r26, 0x05	; 5
   15fda:	8c 91       	ld	r24, X
   15fdc:	15 97       	sbiw	r26, 0x05	; 5
   15fde:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
   15fe2:	16 96       	adiw	r26, 0x06	; 6
   15fe4:	8c 91       	ld	r24, X
   15fe6:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
   15fea:	b2 e0       	ldi	r27, 0x02	; 2
   15fec:	b0 93 82 13 	sts	0x1382, r27	; 0x801382 <_sRuble_Parameters+0x38>
   15ff0:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   15ff4:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
   15ff8:	30 92 87 13 	sts	0x1387, r3	; 0x801387 <_sRuble_Parameters+0x3d>
   15ffc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16000:	81 30       	cpi	r24, 0x01	; 1
   16002:	39 f5       	brne	.+78     	; 0x16052 <_Z22Valve_Grouping_Handlerh+0x692>
   16004:	62 ea       	ldi	r22, 0xA2	; 162
   16006:	7e e3       	ldi	r23, 0x3E	; 62
   16008:	85 e5       	ldi	r24, 0x55	; 85
   1600a:	94 e1       	ldi	r25, 0x14	; 20
   1600c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16010:	4a e0       	ldi	r20, 0x0A	; 10
   16012:	50 e0       	ldi	r21, 0x00	; 0
   16014:	b4 01       	movw	r22, r8
   16016:	85 e5       	ldi	r24, 0x55	; 85
   16018:	94 e1       	ldi	r25, 0x14	; 20
   1601a:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   1601e:	85 e5       	ldi	r24, 0x55	; 85
   16020:	94 e1       	ldi	r25, 0x14	; 20
   16022:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16026:	6d e8       	ldi	r22, 0x8D	; 141
   16028:	7e e3       	ldi	r23, 0x3E	; 62
   1602a:	85 e5       	ldi	r24, 0x55	; 85
   1602c:	94 e1       	ldi	r25, 0x14	; 20
   1602e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16032:	46 e0       	ldi	r20, 0x06	; 6
   16034:	50 e0       	ldi	r21, 0x00	; 0
   16036:	6c e7       	ldi	r22, 0x7C	; 124
   16038:	73 e1       	ldi	r23, 0x13	; 19
   1603a:	85 e5       	ldi	r24, 0x55	; 85
   1603c:	94 e1       	ldi	r25, 0x14	; 20
   1603e:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   16042:	85 e5       	ldi	r24, 0x55	; 85
   16044:	94 e1       	ldi	r25, 0x14	; 20
   16046:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   1604a:	85 e5       	ldi	r24, 0x55	; 85
   1604c:	94 e1       	ldi	r25, 0x14	; 20
   1604e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16052:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   16056:	8c e0       	ldi	r24, 0x0C	; 12
   16058:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   1605c:	88 eb       	ldi	r24, 0xB8	; 184
   1605e:	9b e0       	ldi	r25, 0x0B	; 11
   16060:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   16064:	88 23       	and	r24, r24
   16066:	d9 f1       	breq	.+118    	; 0x160de <_Z22Valve_Grouping_Handlerh+0x71e>
   16068:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   1606c:	90 e0       	ldi	r25, 0x00	; 0
   1606e:	80 e0       	ldi	r24, 0x00	; 0
   16070:	28 2f       	mov	r18, r24
   16072:	30 e0       	ldi	r19, 0x00	; 0
   16074:	f5 01       	movw	r30, r10
   16076:	e2 0f       	add	r30, r18
   16078:	f3 1f       	adc	r31, r19
   1607a:	d9 01       	movw	r26, r18
   1607c:	a0 57       	subi	r26, 0x70	; 112
   1607e:	bc 4e       	sbci	r27, 0xEC	; 236
   16080:	41 81       	ldd	r20, Z+1	; 0x01
   16082:	2c 91       	ld	r18, X
   16084:	42 17       	cp	r20, r18
   16086:	11 f0       	breq	.+4      	; 0x1608c <_Z22Valve_Grouping_Handlerh+0x6cc>
   16088:	90 e0       	ldi	r25, 0x00	; 0
   1608a:	86 e0       	ldi	r24, 0x06	; 6
   1608c:	9f 5f       	subi	r25, 0xFF	; 255
   1608e:	8f 5f       	subi	r24, 0xFF	; 255
   16090:	86 30       	cpi	r24, 0x06	; 6
   16092:	70 f3       	brcs	.-36     	; 0x16070 <_Z22Valve_Grouping_Handlerh+0x6b0>
   16094:	96 30       	cpi	r25, 0x06	; 6
   16096:	d9 f4       	brne	.+54     	; 0x160ce <_Z22Valve_Grouping_Handlerh+0x70e>
   16098:	21 e0       	ldi	r18, 0x01	; 1
   1609a:	f8 01       	movw	r30, r16
   1609c:	23 87       	std	Z+11, r18	; 0x0b
   1609e:	20 91 98 13 	lds	r18, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   160a2:	22 87       	std	Z+10, r18	; 0x0a
   160a4:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   160a8:	90 e0       	ldi	r25, 0x00	; 0
   160aa:	98 2f       	mov	r25, r24
   160ac:	88 27       	eor	r24, r24
   160ae:	30 91 9a 13 	lds	r19, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   160b2:	83 2b       	or	r24, r19
   160b4:	91 87       	std	Z+9, r25	; 0x09
   160b6:	80 87       	std	Z+8, r24	; 0x08
   160b8:	22 23       	and	r18, r18
   160ba:	09 f4       	brne	.+2      	; 0x160be <_Z22Valve_Grouping_Handlerh+0x6fe>
   160bc:	af c6       	rjmp	.+3422   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x145c>
   160be:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   160c2:	81 30       	cpi	r24, 0x01	; 1
   160c4:	09 f0       	breq	.+2      	; 0x160c8 <_Z22Valve_Grouping_Handlerh+0x708>
   160c6:	aa c6       	rjmp	.+3412   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x145c>
   160c8:	67 e6       	ldi	r22, 0x67	; 103
   160ca:	7e e3       	ldi	r23, 0x3E	; 62
   160cc:	0f c0       	rjmp	.+30     	; 0x160ec <_Z22Valve_Grouping_Handlerh+0x72c>
   160ce:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   160d2:	81 30       	cpi	r24, 0x01	; 1
   160d4:	09 f0       	breq	.+2      	; 0x160d8 <_Z22Valve_Grouping_Handlerh+0x718>
   160d6:	a2 c6       	rjmp	.+3396   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x145c>
   160d8:	65 e4       	ldi	r22, 0x45	; 69
   160da:	7e e3       	ldi	r23, 0x3E	; 62
   160dc:	07 c0       	rjmp	.+14     	; 0x160ec <_Z22Valve_Grouping_Handlerh+0x72c>
   160de:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   160e2:	81 30       	cpi	r24, 0x01	; 1
   160e4:	09 f0       	breq	.+2      	; 0x160e8 <_Z22Valve_Grouping_Handlerh+0x728>
   160e6:	9a c6       	rjmp	.+3380   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x145c>
   160e8:	67 e1       	ldi	r22, 0x17	; 23
   160ea:	7e e3       	ldi	r23, 0x3E	; 62
   160ec:	85 e5       	ldi	r24, 0x55	; 85
   160ee:	94 e1       	ldi	r25, 0x14	; 20
   160f0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   160f4:	85 e5       	ldi	r24, 0x55	; 85
   160f6:	94 e1       	ldi	r25, 0x14	; 20
   160f8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   160fc:	8f c6       	rjmp	.+3358   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x145c>
   160fe:	31 e0       	ldi	r19, 0x01	; 1
   16100:	34 15       	cp	r19, r4
   16102:	08 f4       	brcc	.+2      	; 0x16106 <_Z22Valve_Grouping_Handlerh+0x746>
   16104:	80 c6       	rjmp	.+3328   	; 0x16e06 <_Z22Valve_Grouping_Handlerh+0x1446>
   16106:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1610a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1610e:	9f 30       	cpi	r25, 0x0F	; 15
   16110:	08 f0       	brcs	.+2      	; 0x16114 <_Z22Valve_Grouping_Handlerh+0x754>
   16112:	45 c3       	rjmp	.+1674   	; 0x1679e <_Z22Valve_Grouping_Handlerh+0xdde>
   16114:	81 30       	cpi	r24, 0x01	; 1
   16116:	51 f4       	brne	.+20     	; 0x1612c <_Z22Valve_Grouping_Handlerh+0x76c>
   16118:	69 e0       	ldi	r22, 0x09	; 9
   1611a:	7e e3       	ldi	r23, 0x3E	; 62
   1611c:	85 e5       	ldi	r24, 0x55	; 85
   1611e:	94 e1       	ldi	r25, 0x14	; 20
   16120:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16124:	85 e5       	ldi	r24, 0x55	; 85
   16126:	94 e1       	ldi	r25, 0x14	; 20
   16128:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1612c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16130:	81 30       	cpi	r24, 0x01	; 1
   16132:	c1 f5       	brne	.+112    	; 0x161a4 <_Z22Valve_Grouping_Handlerh+0x7e4>
   16134:	00 e0       	ldi	r16, 0x00	; 0
   16136:	10 e0       	ldi	r17, 0x00	; 0
   16138:	e6 e0       	ldi	r30, 0x06	; 6
   1613a:	fe 2e       	mov	r15, r30
   1613c:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16140:	90 e0       	ldi	r25, 0x00	; 0
   16142:	01 97       	sbiw	r24, 0x01	; 1
   16144:	f8 9e       	mul	r15, r24
   16146:	f0 01       	movw	r30, r0
   16148:	f9 9e       	mul	r15, r25
   1614a:	f0 0d       	add	r31, r0
   1614c:	11 24       	eor	r1, r1
   1614e:	e0 50       	subi	r30, 0x00	; 0
   16150:	f3 4f       	sbci	r31, 0xF3	; 243
   16152:	e0 0f       	add	r30, r16
   16154:	f1 1f       	adc	r31, r17
   16156:	4a e0       	ldi	r20, 0x0A	; 10
   16158:	50 e0       	ldi	r21, 0x00	; 0
   1615a:	61 81       	ldd	r22, Z+1	; 0x01
   1615c:	85 e5       	ldi	r24, 0x55	; 85
   1615e:	94 e1       	ldi	r25, 0x14	; 20
   16160:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   16164:	67 e0       	ldi	r22, 0x07	; 7
   16166:	7e e3       	ldi	r23, 0x3E	; 62
   16168:	85 e5       	ldi	r24, 0x55	; 85
   1616a:	94 e1       	ldi	r25, 0x14	; 20
   1616c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16170:	0f 5f       	subi	r16, 0xFF	; 255
   16172:	1f 4f       	sbci	r17, 0xFF	; 255
   16174:	05 30       	cpi	r16, 0x05	; 5
   16176:	11 05       	cpc	r17, r1
   16178:	09 f7       	brne	.-62     	; 0x1613c <_Z22Valve_Grouping_Handlerh+0x77c>
   1617a:	61 ef       	ldi	r22, 0xF1	; 241
   1617c:	7d e3       	ldi	r23, 0x3D	; 61
   1617e:	85 e5       	ldi	r24, 0x55	; 85
   16180:	94 e1       	ldi	r25, 0x14	; 20
   16182:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16186:	60 91 a5 13 	lds	r22, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1618a:	70 e0       	ldi	r23, 0x00	; 0
   1618c:	61 50       	subi	r22, 0x01	; 1
   1618e:	71 09       	sbc	r23, r1
   16190:	4a e0       	ldi	r20, 0x0A	; 10
   16192:	50 e0       	ldi	r21, 0x00	; 0
   16194:	85 e5       	ldi	r24, 0x55	; 85
   16196:	94 e1       	ldi	r25, 0x14	; 20
   16198:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   1619c:	85 e5       	ldi	r24, 0x55	; 85
   1619e:	94 e1       	ldi	r25, 0x14	; 20
   161a0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   161a4:	e1 2c       	mov	r14, r1
   161a6:	f1 2c       	mov	r15, r1
   161a8:	36 e0       	ldi	r19, 0x06	; 6
   161aa:	33 2e       	mov	r3, r19
   161ac:	42 e0       	ldi	r20, 0x02	; 2
   161ae:	b4 2e       	mov	r11, r20
   161b0:	aa 24       	eor	r10, r10
   161b2:	a3 94       	inc	r10
   161b4:	84 2d       	mov	r24, r4
   161b6:	8a 25       	eor	r24, r10
   161b8:	81 70       	andi	r24, 0x01	; 1
   161ba:	28 2e       	mov	r2, r24
   161bc:	5c e7       	ldi	r21, 0x7C	; 124
   161be:	c5 2e       	mov	r12, r21
   161c0:	53 e1       	ldi	r21, 0x13	; 19
   161c2:	d5 2e       	mov	r13, r21
   161c4:	64 e1       	ldi	r22, 0x14	; 20
   161c6:	66 2e       	mov	r6, r22
   161c8:	77 e0       	ldi	r23, 0x07	; 7
   161ca:	77 2e       	mov	r7, r23
   161cc:	0d e0       	ldi	r16, 0x0D	; 13
   161ce:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   161d2:	90 e0       	ldi	r25, 0x00	; 0
   161d4:	01 97       	sbiw	r24, 0x01	; 1
   161d6:	38 9e       	mul	r3, r24
   161d8:	f0 01       	movw	r30, r0
   161da:	39 9e       	mul	r3, r25
   161dc:	f0 0d       	add	r31, r0
   161de:	11 24       	eor	r1, r1
   161e0:	e0 50       	subi	r30, 0x00	; 0
   161e2:	f3 4f       	sbci	r31, 0xF3	; 243
   161e4:	ee 0d       	add	r30, r14
   161e6:	ff 1d       	adc	r31, r15
   161e8:	11 81       	ldd	r17, Z+1	; 0x01
   161ea:	8f ef       	ldi	r24, 0xFF	; 255
   161ec:	81 0f       	add	r24, r17
   161ee:	85 31       	cpi	r24, 0x15	; 21
   161f0:	08 f0       	brcs	.+2      	; 0x161f4 <_Z22Valve_Grouping_Handlerh+0x834>
   161f2:	9c c2       	rjmp	.+1336   	; 0x1672c <_Z22Valve_Grouping_Handlerh+0xd6c>
   161f4:	14 30       	cpi	r17, 0x04	; 4
   161f6:	a0 f0       	brcs	.+40     	; 0x16220 <_Z22Valve_Grouping_Handlerh+0x860>
   161f8:	81 2f       	mov	r24, r17
   161fa:	63 e0       	ldi	r22, 0x03	; 3
   161fc:	0e 94 2a e7 	call	0x1ce54	; 0x1ce54 <__udivmodqi4>
   16200:	2b ea       	ldi	r18, 0xAB	; 171
   16202:	12 9f       	mul	r17, r18
   16204:	21 2d       	mov	r18, r1
   16206:	11 24       	eor	r1, r1
   16208:	99 23       	and	r25, r25
   1620a:	31 f0       	breq	.+12     	; 0x16218 <_Z22Valve_Grouping_Handlerh+0x858>
   1620c:	26 95       	lsr	r18
   1620e:	99 24       	eor	r9, r9
   16210:	93 94       	inc	r9
   16212:	92 0e       	add	r9, r18
   16214:	19 2f       	mov	r17, r25
   16216:	06 c0       	rjmp	.+12     	; 0x16224 <_Z22Valve_Grouping_Handlerh+0x864>
   16218:	92 2e       	mov	r9, r18
   1621a:	96 94       	lsr	r9
   1621c:	13 e0       	ldi	r17, 0x03	; 3
   1621e:	02 c0       	rjmp	.+4      	; 0x16224 <_Z22Valve_Grouping_Handlerh+0x864>
   16220:	99 24       	eor	r9, r9
   16222:	93 94       	inc	r9
   16224:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16228:	81 30       	cpi	r24, 0x01	; 1
   1622a:	89 f4       	brne	.+34     	; 0x1624e <_Z22Valve_Grouping_Handlerh+0x88e>
   1622c:	6d ed       	ldi	r22, 0xDD	; 221
   1622e:	7d e3       	ldi	r23, 0x3D	; 61
   16230:	85 e5       	ldi	r24, 0x55	; 85
   16232:	94 e1       	ldi	r25, 0x14	; 20
   16234:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16238:	4a e0       	ldi	r20, 0x0A	; 10
   1623a:	50 e0       	ldi	r21, 0x00	; 0
   1623c:	69 2d       	mov	r22, r9
   1623e:	85 e5       	ldi	r24, 0x55	; 85
   16240:	94 e1       	ldi	r25, 0x14	; 20
   16242:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   16246:	85 e5       	ldi	r24, 0x55	; 85
   16248:	94 e1       	ldi	r25, 0x14	; 20
   1624a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1624e:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   16252:	81 11       	cpse	r24, r1
   16254:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   16258:	d6 01       	movw	r26, r12
   1625a:	e6 2d       	mov	r30, r6
   1625c:	1d 92       	st	X+, r1
   1625e:	ea 95       	dec	r30
   16260:	e9 f7       	brne	.-6      	; 0x1625c <_Z22Valve_Grouping_Handlerh+0x89c>
   16262:	29 2d       	mov	r18, r9
   16264:	30 e0       	ldi	r19, 0x00	; 0
   16266:	21 50       	subi	r18, 0x01	; 1
   16268:	31 09       	sbc	r19, r1
   1626a:	72 9e       	mul	r7, r18
   1626c:	c0 01       	movw	r24, r0
   1626e:	73 9e       	mul	r7, r19
   16270:	90 0d       	add	r25, r0
   16272:	11 24       	eor	r1, r1
   16274:	86 5b       	subi	r24, 0xB6	; 182
   16276:	9c 4e       	sbci	r25, 0xEC	; 236
   16278:	fc 01       	movw	r30, r24
   1627a:	e1 5a       	subi	r30, 0xA1	; 161
   1627c:	ff 4f       	sbci	r31, 0xFF	; 255
   1627e:	20 81       	ld	r18, Z
   16280:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
   16284:	31 96       	adiw	r30, 0x01	; 1
   16286:	20 81       	ld	r18, Z
   16288:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
   1628c:	31 96       	adiw	r30, 0x01	; 1
   1628e:	20 81       	ld	r18, Z
   16290:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
   16294:	31 96       	adiw	r30, 0x01	; 1
   16296:	20 81       	ld	r18, Z
   16298:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
   1629c:	31 96       	adiw	r30, 0x01	; 1
   1629e:	20 81       	ld	r18, Z
   162a0:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
   162a4:	31 96       	adiw	r30, 0x01	; 1
   162a6:	20 81       	ld	r18, Z
   162a8:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
   162ac:	b0 92 82 13 	sts	0x1382, r11	; 0x801382 <_sRuble_Parameters+0x38>
   162b0:	40 92 83 13 	sts	0x1383, r4	; 0x801383 <_sRuble_Parameters+0x39>
   162b4:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   162b8:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
   162bc:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   162c0:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
   162c4:	10 93 87 13 	sts	0x1387, r17	; 0x801387 <_sRuble_Parameters+0x3d>
   162c8:	40 e0       	ldi	r20, 0x00	; 0
   162ca:	50 e0       	ldi	r21, 0x00	; 0
   162cc:	14 2f       	mov	r17, r20
   162ce:	81 2c       	mov	r8, r1
   162d0:	91 2c       	mov	r9, r1
   162d2:	04 9f       	mul	r16, r20
   162d4:	b0 01       	movw	r22, r0
   162d6:	05 9f       	mul	r16, r21
   162d8:	70 0d       	add	r23, r0
   162da:	11 24       	eor	r1, r1
   162dc:	69 54       	subi	r22, 0x49	; 73
   162de:	74 4f       	sbci	r23, 0xF4	; 244
   162e0:	29 2d       	mov	r18, r9
   162e2:	30 e0       	ldi	r19, 0x00	; 0
   162e4:	fb 01       	movw	r30, r22
   162e6:	e2 0f       	add	r30, r18
   162e8:	f3 1f       	adc	r31, r19
   162ea:	28 0f       	add	r18, r24
   162ec:	39 1f       	adc	r19, r25
   162ee:	d9 01       	movw	r26, r18
   162f0:	a1 5a       	subi	r26, 0xA1	; 161
   162f2:	bf 4f       	sbci	r27, 0xFF	; 255
   162f4:	31 81       	ldd	r19, Z+1	; 0x01
   162f6:	2c 91       	ld	r18, X
   162f8:	32 17       	cp	r19, r18
   162fa:	19 f0       	breq	.+6      	; 0x16302 <_Z22Valve_Grouping_Handlerh+0x942>
   162fc:	81 2c       	mov	r8, r1
   162fe:	26 e0       	ldi	r18, 0x06	; 6
   16300:	92 2e       	mov	r9, r18
   16302:	83 94       	inc	r8
   16304:	93 94       	inc	r9
   16306:	f5 e0       	ldi	r31, 0x05	; 5
   16308:	f9 15       	cp	r31, r9
   1630a:	50 f7       	brcc	.-44     	; 0x162e0 <_Z22Valve_Grouping_Handlerh+0x920>
   1630c:	26 e0       	ldi	r18, 0x06	; 6
   1630e:	82 16       	cp	r8, r18
   16310:	31 f0       	breq	.+12     	; 0x1631e <_Z22Valve_Grouping_Handlerh+0x95e>
   16312:	4f 5f       	subi	r20, 0xFF	; 255
   16314:	5f 4f       	sbci	r21, 0xFF	; 255
   16316:	47 30       	cpi	r20, 0x07	; 7
   16318:	51 05       	cpc	r21, r1
   1631a:	c1 f6       	brne	.-80     	; 0x162cc <_Z22Valve_Grouping_Handlerh+0x90c>
   1631c:	15 2d       	mov	r17, r5
   1631e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16322:	81 30       	cpi	r24, 0x01	; 1
   16324:	89 f4       	brne	.+34     	; 0x16348 <_Z22Valve_Grouping_Handlerh+0x988>
   16326:	67 ec       	ldi	r22, 0xC7	; 199
   16328:	7d e3       	ldi	r23, 0x3D	; 61
   1632a:	85 e5       	ldi	r24, 0x55	; 85
   1632c:	94 e1       	ldi	r25, 0x14	; 20
   1632e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16332:	4a e0       	ldi	r20, 0x0A	; 10
   16334:	50 e0       	ldi	r21, 0x00	; 0
   16336:	61 2f       	mov	r22, r17
   16338:	85 e5       	ldi	r24, 0x55	; 85
   1633a:	94 e1       	ldi	r25, 0x14	; 20
   1633c:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   16340:	85 e5       	ldi	r24, 0x55	; 85
   16342:	94 e1       	ldi	r25, 0x14	; 20
   16344:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16348:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1634c:	81 30       	cpi	r24, 0x01	; 1
   1634e:	51 f4       	brne	.+20     	; 0x16364 <_Z22Valve_Grouping_Handlerh+0x9a4>
   16350:	63 ea       	ldi	r22, 0xA3	; 163
   16352:	7d e3       	ldi	r23, 0x3D	; 61
   16354:	85 e5       	ldi	r24, 0x55	; 85
   16356:	94 e1       	ldi	r25, 0x14	; 20
   16358:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1635c:	85 e5       	ldi	r24, 0x55	; 85
   1635e:	94 e1       	ldi	r25, 0x14	; 20
   16360:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16364:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   16368:	8c e0       	ldi	r24, 0x0C	; 12
   1636a:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   1636e:	88 eb       	ldi	r24, 0xB8	; 184
   16370:	9b e0       	ldi	r25, 0x0B	; 11
   16372:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   16376:	88 23       	and	r24, r24
   16378:	09 f4       	brne	.+2      	; 0x1637c <_Z22Valve_Grouping_Handlerh+0x9bc>
   1637a:	76 c1       	rjmp	.+748    	; 0x16668 <_Z22Valve_Grouping_Handlerh+0xca8>
   1637c:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   16380:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16384:	88 23       	and	r24, r24
   16386:	09 f4       	brne	.+2      	; 0x1638a <_Z22Valve_Grouping_Handlerh+0x9ca>
   16388:	17 c1       	rjmp	.+558    	; 0x165b8 <_Z22Valve_Grouping_Handlerh+0xbf8>
   1638a:	81 2e       	mov	r8, r17
   1638c:	91 2c       	mov	r9, r1
   1638e:	91 30       	cpi	r25, 0x01	; 1
   16390:	89 f5       	brne	.+98     	; 0x163f4 <_Z22Valve_Grouping_Handlerh+0xa34>
   16392:	6d e8       	ldi	r22, 0x8D	; 141
   16394:	7d e3       	ldi	r23, 0x3D	; 61
   16396:	85 e5       	ldi	r24, 0x55	; 85
   16398:	94 e1       	ldi	r25, 0x14	; 20
   1639a:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1639e:	4a e0       	ldi	r20, 0x0A	; 10
   163a0:	50 e0       	ldi	r21, 0x00	; 0
   163a2:	60 e9       	ldi	r22, 0x90	; 144
   163a4:	73 e1       	ldi	r23, 0x13	; 19
   163a6:	85 e5       	ldi	r24, 0x55	; 85
   163a8:	94 e1       	ldi	r25, 0x14	; 20
   163aa:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   163ae:	85 e5       	ldi	r24, 0x55	; 85
   163b0:	94 e1       	ldi	r25, 0x14	; 20
   163b2:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   163b6:	85 e5       	ldi	r24, 0x55	; 85
   163b8:	94 e1       	ldi	r25, 0x14	; 20
   163ba:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   163be:	6f e6       	ldi	r22, 0x6F	; 111
   163c0:	7d e3       	ldi	r23, 0x3D	; 61
   163c2:	85 e5       	ldi	r24, 0x55	; 85
   163c4:	94 e1       	ldi	r25, 0x14	; 20
   163c6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   163ca:	08 9d       	mul	r16, r8
   163cc:	b0 01       	movw	r22, r0
   163ce:	09 9d       	mul	r16, r9
   163d0:	70 0d       	add	r23, r0
   163d2:	11 24       	eor	r1, r1
   163d4:	68 54       	subi	r22, 0x48	; 72
   163d6:	74 4f       	sbci	r23, 0xF4	; 244
   163d8:	47 e0       	ldi	r20, 0x07	; 7
   163da:	50 e0       	ldi	r21, 0x00	; 0
   163dc:	85 e5       	ldi	r24, 0x55	; 85
   163de:	94 e1       	ldi	r25, 0x14	; 20
   163e0:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   163e4:	85 e5       	ldi	r24, 0x55	; 85
   163e6:	94 e1       	ldi	r25, 0x14	; 20
   163e8:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   163ec:	85 e5       	ldi	r24, 0x55	; 85
   163ee:	94 e1       	ldi	r25, 0x14	; 20
   163f0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   163f4:	a0 e9       	ldi	r26, 0x90	; 144
   163f6:	b3 e1       	ldi	r27, 0x13	; 19
   163f8:	6d e0       	ldi	r22, 0x0D	; 13
   163fa:	16 9f       	mul	r17, r22
   163fc:	90 01       	movw	r18, r0
   163fe:	11 24       	eor	r1, r1
   16400:	80 e0       	ldi	r24, 0x00	; 0
   16402:	90 e0       	ldi	r25, 0x00	; 0
   16404:	4d 91       	ld	r20, X+
   16406:	f9 01       	movw	r30, r18
   16408:	e8 0f       	add	r30, r24
   1640a:	f9 1f       	adc	r31, r25
   1640c:	e9 54       	subi	r30, 0x49	; 73
   1640e:	f4 4f       	sbci	r31, 0xF4	; 244
   16410:	51 81       	ldd	r21, Z+1	; 0x01
   16412:	54 17       	cp	r21, r20
   16414:	09 f4       	brne	.+2      	; 0x16418 <_Z22Valve_Grouping_Handlerh+0xa58>
   16416:	5a c0       	rjmp	.+180    	; 0x164cc <_Z22Valve_Grouping_Handlerh+0xb0c>
   16418:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1641c:	81 30       	cpi	r24, 0x01	; 1
   1641e:	51 f4       	brne	.+20     	; 0x16434 <_Z22Valve_Grouping_Handlerh+0xa74>
   16420:	64 e4       	ldi	r22, 0x44	; 68
   16422:	7d e3       	ldi	r23, 0x3D	; 61
   16424:	85 e5       	ldi	r24, 0x55	; 85
   16426:	94 e1       	ldi	r25, 0x14	; 20
   16428:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1642c:	85 e5       	ldi	r24, 0x55	; 85
   1642e:	94 e1       	ldi	r25, 0x14	; 20
   16430:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16434:	86 e0       	ldi	r24, 0x06	; 6
   16436:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   1643a:	84 e6       	ldi	r24, 0x64	; 100
   1643c:	90 e0       	ldi	r25, 0x00	; 0
   1643e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16442:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16446:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1644a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1644e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16452:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16456:	a0 62       	ori	r26, 0x20	; 32
   16458:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1645c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16460:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16464:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16468:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   1646c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   16470:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16474:	82 60       	ori	r24, 0x02	; 2
   16476:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1647a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1647e:	00 e0       	ldi	r16, 0x00	; 0
   16480:	10 e0       	ldi	r17, 0x00	; 0
   16482:	b6 e0       	ldi	r27, 0x06	; 6
   16484:	fb 2e       	mov	r15, r27
   16486:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1648a:	90 e0       	ldi	r25, 0x00	; 0
   1648c:	01 97       	sbiw	r24, 0x01	; 1
   1648e:	f8 9e       	mul	r15, r24
   16490:	f0 01       	movw	r30, r0
   16492:	f9 9e       	mul	r15, r25
   16494:	f0 0d       	add	r31, r0
   16496:	11 24       	eor	r1, r1
   16498:	e0 50       	subi	r30, 0x00	; 0
   1649a:	f3 4f       	sbci	r31, 0xF3	; 243
   1649c:	e0 0f       	add	r30, r16
   1649e:	f1 1f       	adc	r31, r17
   164a0:	e1 81       	ldd	r30, Z+1	; 0x01
   164a2:	e6 31       	cpi	r30, 0x16	; 22
   164a4:	68 f0       	brcs	.+26     	; 0x164c0 <_Z22Valve_Grouping_Handlerh+0xb00>
   164a6:	f0 e0       	ldi	r31, 0x00	; 0
   164a8:	ec 53       	subi	r30, 0x3C	; 60
   164aa:	fc 4e       	sbci	r31, 0xEC	; 236
   164ac:	61 e0       	ldi	r22, 0x01	; 1
   164ae:	80 81       	ld	r24, Z
   164b0:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   164b4:	68 ec       	ldi	r22, 0xC8	; 200
   164b6:	70 e0       	ldi	r23, 0x00	; 0
   164b8:	80 e0       	ldi	r24, 0x00	; 0
   164ba:	90 e0       	ldi	r25, 0x00	; 0
   164bc:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   164c0:	0f 5f       	subi	r16, 0xFF	; 255
   164c2:	1f 4f       	sbci	r17, 0xFF	; 255
   164c4:	05 30       	cpi	r16, 0x05	; 5
   164c6:	11 05       	cpc	r17, r1
   164c8:	f1 f6       	brne	.-68     	; 0x16486 <_Z22Valve_Grouping_Handlerh+0xac6>
   164ca:	4e c4       	rjmp	.+2204   	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   164cc:	01 96       	adiw	r24, 0x01	; 1
   164ce:	86 30       	cpi	r24, 0x06	; 6
   164d0:	91 05       	cpc	r25, r1
   164d2:	09 f0       	breq	.+2      	; 0x164d6 <_Z22Valve_Grouping_Handlerh+0xb16>
   164d4:	97 cf       	rjmp	.-210    	; 0x16404 <_Z22Valve_Grouping_Handlerh+0xa44>
   164d6:	08 9d       	mul	r16, r8
   164d8:	f0 01       	movw	r30, r0
   164da:	09 9d       	mul	r16, r9
   164dc:	f0 0d       	add	r31, r0
   164de:	11 24       	eor	r1, r1
   164e0:	e9 54       	subi	r30, 0x49	; 73
   164e2:	f4 4f       	sbci	r31, 0xF4	; 244
   164e4:	a3 86       	std	Z+11, r10	; 0x0b
   164e6:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   164ea:	90 e0       	ldi	r25, 0x00	; 0
   164ec:	98 2f       	mov	r25, r24
   164ee:	88 27       	eor	r24, r24
   164f0:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   164f4:	82 2b       	or	r24, r18
   164f6:	91 87       	std	Z+9, r25	; 0x09
   164f8:	80 87       	std	Z+8, r24	; 0x08
   164fa:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   164fe:	48 16       	cp	r4, r24
   16500:	09 f4       	brne	.+2      	; 0x16504 <_Z22Valve_Grouping_Handlerh+0xb44>
   16502:	0c c1       	rjmp	.+536    	; 0x1671c <_Z22Valve_Grouping_Handlerh+0xd5c>
   16504:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16508:	81 30       	cpi	r24, 0x01	; 1
   1650a:	51 f4       	brne	.+20     	; 0x16520 <_Z22Valve_Grouping_Handlerh+0xb60>
   1650c:	61 e3       	ldi	r22, 0x31	; 49
   1650e:	7d e3       	ldi	r23, 0x3D	; 61
   16510:	85 e5       	ldi	r24, 0x55	; 85
   16512:	94 e1       	ldi	r25, 0x14	; 20
   16514:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16518:	85 e5       	ldi	r24, 0x55	; 85
   1651a:	94 e1       	ldi	r25, 0x14	; 20
   1651c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16520:	86 e0       	ldi	r24, 0x06	; 6
   16522:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   16526:	84 e6       	ldi	r24, 0x64	; 100
   16528:	90 e0       	ldi	r25, 0x00	; 0
   1652a:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   1652e:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16532:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16536:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1653a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1653e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16542:	a0 62       	ori	r26, 0x20	; 32
   16544:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16548:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1654c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16550:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16554:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   16558:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1655c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16560:	82 60       	ori	r24, 0x02	; 2
   16562:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16566:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1656a:	00 e0       	ldi	r16, 0x00	; 0
   1656c:	10 e0       	ldi	r17, 0x00	; 0
   1656e:	76 e0       	ldi	r23, 0x06	; 6
   16570:	f7 2e       	mov	r15, r23
   16572:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16576:	90 e0       	ldi	r25, 0x00	; 0
   16578:	01 97       	sbiw	r24, 0x01	; 1
   1657a:	f8 9e       	mul	r15, r24
   1657c:	f0 01       	movw	r30, r0
   1657e:	f9 9e       	mul	r15, r25
   16580:	f0 0d       	add	r31, r0
   16582:	11 24       	eor	r1, r1
   16584:	e0 50       	subi	r30, 0x00	; 0
   16586:	f3 4f       	sbci	r31, 0xF3	; 243
   16588:	e0 0f       	add	r30, r16
   1658a:	f1 1f       	adc	r31, r17
   1658c:	e1 81       	ldd	r30, Z+1	; 0x01
   1658e:	e6 31       	cpi	r30, 0x16	; 22
   16590:	68 f0       	brcs	.+26     	; 0x165ac <_Z22Valve_Grouping_Handlerh+0xbec>
   16592:	f0 e0       	ldi	r31, 0x00	; 0
   16594:	ec 53       	subi	r30, 0x3C	; 60
   16596:	fc 4e       	sbci	r31, 0xEC	; 236
   16598:	61 e0       	ldi	r22, 0x01	; 1
   1659a:	80 81       	ld	r24, Z
   1659c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   165a0:	68 ec       	ldi	r22, 0xC8	; 200
   165a2:	70 e0       	ldi	r23, 0x00	; 0
   165a4:	80 e0       	ldi	r24, 0x00	; 0
   165a6:	90 e0       	ldi	r25, 0x00	; 0
   165a8:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   165ac:	0f 5f       	subi	r16, 0xFF	; 255
   165ae:	1f 4f       	sbci	r17, 0xFF	; 255
   165b0:	05 30       	cpi	r16, 0x05	; 5
   165b2:	11 05       	cpc	r17, r1
   165b4:	f1 f6       	brne	.-68     	; 0x16572 <_Z22Valve_Grouping_Handlerh+0xbb2>
   165b6:	d8 c3       	rjmp	.+1968   	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   165b8:	91 30       	cpi	r25, 0x01	; 1
   165ba:	51 f4       	brne	.+20     	; 0x165d0 <_Z22Valve_Grouping_Handlerh+0xc10>
   165bc:	66 ef       	ldi	r22, 0xF6	; 246
   165be:	7c e3       	ldi	r23, 0x3C	; 60
   165c0:	85 e5       	ldi	r24, 0x55	; 85
   165c2:	94 e1       	ldi	r25, 0x14	; 20
   165c4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   165c8:	85 e5       	ldi	r24, 0x55	; 85
   165ca:	94 e1       	ldi	r25, 0x14	; 20
   165cc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   165d0:	86 e0       	ldi	r24, 0x06	; 6
   165d2:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   165d6:	84 e6       	ldi	r24, 0x64	; 100
   165d8:	90 e0       	ldi	r25, 0x00	; 0
   165da:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   165de:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   165e2:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   165e6:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   165ea:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   165ee:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   165f2:	a0 62       	ori	r26, 0x20	; 32
   165f4:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   165f8:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   165fc:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16600:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16604:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   16608:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1660c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16610:	82 60       	ori	r24, 0x02	; 2
   16612:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16616:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1661a:	00 e0       	ldi	r16, 0x00	; 0
   1661c:	10 e0       	ldi	r17, 0x00	; 0
   1661e:	66 e0       	ldi	r22, 0x06	; 6
   16620:	f6 2e       	mov	r15, r22
   16622:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16626:	90 e0       	ldi	r25, 0x00	; 0
   16628:	01 97       	sbiw	r24, 0x01	; 1
   1662a:	f8 9e       	mul	r15, r24
   1662c:	f0 01       	movw	r30, r0
   1662e:	f9 9e       	mul	r15, r25
   16630:	f0 0d       	add	r31, r0
   16632:	11 24       	eor	r1, r1
   16634:	e0 50       	subi	r30, 0x00	; 0
   16636:	f3 4f       	sbci	r31, 0xF3	; 243
   16638:	e0 0f       	add	r30, r16
   1663a:	f1 1f       	adc	r31, r17
   1663c:	e1 81       	ldd	r30, Z+1	; 0x01
   1663e:	e6 31       	cpi	r30, 0x16	; 22
   16640:	68 f0       	brcs	.+26     	; 0x1665c <_Z22Valve_Grouping_Handlerh+0xc9c>
   16642:	f0 e0       	ldi	r31, 0x00	; 0
   16644:	ec 53       	subi	r30, 0x3C	; 60
   16646:	fc 4e       	sbci	r31, 0xEC	; 236
   16648:	61 e0       	ldi	r22, 0x01	; 1
   1664a:	80 81       	ld	r24, Z
   1664c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16650:	68 ec       	ldi	r22, 0xC8	; 200
   16652:	70 e0       	ldi	r23, 0x00	; 0
   16654:	80 e0       	ldi	r24, 0x00	; 0
   16656:	90 e0       	ldi	r25, 0x00	; 0
   16658:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1665c:	0f 5f       	subi	r16, 0xFF	; 255
   1665e:	1f 4f       	sbci	r17, 0xFF	; 255
   16660:	05 30       	cpi	r16, 0x05	; 5
   16662:	11 05       	cpc	r17, r1
   16664:	f1 f6       	brne	.-68     	; 0x16622 <_Z22Valve_Grouping_Handlerh+0xc62>
   16666:	80 c3       	rjmp	.+1792   	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   16668:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1666c:	81 30       	cpi	r24, 0x01	; 1
   1666e:	51 f4       	brne	.+20     	; 0x16684 <_Z22Valve_Grouping_Handlerh+0xcc4>
   16670:	6b eb       	ldi	r22, 0xBB	; 187
   16672:	7c e3       	ldi	r23, 0x3C	; 60
   16674:	85 e5       	ldi	r24, 0x55	; 85
   16676:	94 e1       	ldi	r25, 0x14	; 20
   16678:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1667c:	85 e5       	ldi	r24, 0x55	; 85
   1667e:	94 e1       	ldi	r25, 0x14	; 20
   16680:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16684:	86 e0       	ldi	r24, 0x06	; 6
   16686:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   1668a:	84 e6       	ldi	r24, 0x64	; 100
   1668c:	90 e0       	ldi	r25, 0x00	; 0
   1668e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16692:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16696:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1669a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1669e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   166a2:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   166a6:	a0 62       	ori	r26, 0x20	; 32
   166a8:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   166ac:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   166b0:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   166b4:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   166b8:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   166bc:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   166c0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   166c4:	82 60       	ori	r24, 0x02	; 2
   166c6:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   166ca:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   166ce:	00 e0       	ldi	r16, 0x00	; 0
   166d0:	10 e0       	ldi	r17, 0x00	; 0
   166d2:	56 e0       	ldi	r21, 0x06	; 6
   166d4:	f5 2e       	mov	r15, r21
   166d6:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   166da:	90 e0       	ldi	r25, 0x00	; 0
   166dc:	01 97       	sbiw	r24, 0x01	; 1
   166de:	f8 9e       	mul	r15, r24
   166e0:	f0 01       	movw	r30, r0
   166e2:	f9 9e       	mul	r15, r25
   166e4:	f0 0d       	add	r31, r0
   166e6:	11 24       	eor	r1, r1
   166e8:	e0 50       	subi	r30, 0x00	; 0
   166ea:	f3 4f       	sbci	r31, 0xF3	; 243
   166ec:	e0 0f       	add	r30, r16
   166ee:	f1 1f       	adc	r31, r17
   166f0:	e1 81       	ldd	r30, Z+1	; 0x01
   166f2:	e6 31       	cpi	r30, 0x16	; 22
   166f4:	68 f0       	brcs	.+26     	; 0x16710 <_Z22Valve_Grouping_Handlerh+0xd50>
   166f6:	f0 e0       	ldi	r31, 0x00	; 0
   166f8:	ec 53       	subi	r30, 0x3C	; 60
   166fa:	fc 4e       	sbci	r31, 0xEC	; 236
   166fc:	61 e0       	ldi	r22, 0x01	; 1
   166fe:	80 81       	ld	r24, Z
   16700:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16704:	68 ec       	ldi	r22, 0xC8	; 200
   16706:	70 e0       	ldi	r23, 0x00	; 0
   16708:	80 e0       	ldi	r24, 0x00	; 0
   1670a:	90 e0       	ldi	r25, 0x00	; 0
   1670c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16710:	0f 5f       	subi	r16, 0xFF	; 255
   16712:	1f 4f       	sbci	r17, 0xFF	; 255
   16714:	05 30       	cpi	r16, 0x05	; 5
   16716:	11 05       	cpc	r17, r1
   16718:	f1 f6       	brne	.-68     	; 0x166d6 <_Z22Valve_Grouping_Handlerh+0xd16>
   1671a:	26 c3       	rjmp	.+1612   	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   1671c:	68 ee       	ldi	r22, 0xE8	; 232
   1671e:	73 e0       	ldi	r23, 0x03	; 3
   16720:	80 e0       	ldi	r24, 0x00	; 0
   16722:	90 e0       	ldi	r25, 0x00	; 0
   16724:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16728:	51 2e       	mov	r5, r17
   1672a:	29 c0       	rjmp	.+82     	; 0x1677e <_Z22Valve_Grouping_Handlerh+0xdbe>
   1672c:	8a ee       	ldi	r24, 0xEA	; 234
   1672e:	81 0f       	add	r24, r17
   16730:	8e 34       	cpi	r24, 0x4E	; 78
   16732:	78 f4       	brcc	.+30     	; 0x16752 <_Z22Valve_Grouping_Handlerh+0xd92>
   16734:	e1 2f       	mov	r30, r17
   16736:	f0 e0       	ldi	r31, 0x00	; 0
   16738:	ec 53       	subi	r30, 0x3C	; 60
   1673a:	fc 4e       	sbci	r31, 0xEC	; 236
   1673c:	62 2d       	mov	r22, r2
   1673e:	80 81       	ld	r24, Z
   16740:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16744:	68 ec       	ldi	r22, 0xC8	; 200
   16746:	70 e0       	ldi	r23, 0x00	; 0
   16748:	80 e0       	ldi	r24, 0x00	; 0
   1674a:	90 e0       	ldi	r25, 0x00	; 0
   1674c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16750:	16 c0       	rjmp	.+44     	; 0x1677e <_Z22Valve_Grouping_Handlerh+0xdbe>
   16752:	15 36       	cpi	r17, 0x65	; 101
   16754:	a1 f4       	brne	.+40     	; 0x1677e <_Z22Valve_Grouping_Handlerh+0xdbe>
   16756:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   1675a:	71 e0       	ldi	r23, 0x01	; 1
   1675c:	47 12       	cpse	r4, r23
   1675e:	05 c0       	rjmp	.+10     	; 0x1676a <_Z22Valve_Grouping_Handlerh+0xdaa>
   16760:	88 23       	and	r24, r24
   16762:	69 f0       	breq	.+26     	; 0x1677e <_Z22Valve_Grouping_Handlerh+0xdbe>
   16764:	40 92 09 14 	sts	0x1409, r4	; 0x801409 <_sRuble_Parameters+0xbf>
   16768:	04 c0       	rjmp	.+8      	; 0x16772 <_Z22Valve_Grouping_Handlerh+0xdb2>
   1676a:	88 23       	and	r24, r24
   1676c:	41 f0       	breq	.+16     	; 0x1677e <_Z22Valve_Grouping_Handlerh+0xdbe>
   1676e:	b0 92 09 14 	sts	0x1409, r11	; 0x801409 <_sRuble_Parameters+0xbf>
   16772:	69 e0       	ldi	r22, 0x09	; 9
   16774:	74 e1       	ldi	r23, 0x14	; 20
   16776:	88 ea       	ldi	r24, 0xA8	; 168
   16778:	9c e0       	ldi	r25, 0x0C	; 12
   1677a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1677e:	8f ef       	ldi	r24, 0xFF	; 255
   16780:	e8 1a       	sub	r14, r24
   16782:	f8 0a       	sbc	r15, r24
   16784:	95 e0       	ldi	r25, 0x05	; 5
   16786:	e9 16       	cp	r14, r25
   16788:	f1 04       	cpc	r15, r1
   1678a:	09 f0       	breq	.+2      	; 0x1678e <_Z22Valve_Grouping_Handlerh+0xdce>
   1678c:	20 cd       	rjmp	.-1472   	; 0x161ce <_Z22Valve_Grouping_Handlerh+0x80e>
   1678e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16792:	81 30       	cpi	r24, 0x01	; 1
   16794:	09 f0       	breq	.+2      	; 0x16798 <_Z22Valve_Grouping_Handlerh+0xdd8>
   16796:	38 c3       	rjmp	.+1648   	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   16798:	6c e9       	ldi	r22, 0x9C	; 156
   1679a:	7c e3       	ldi	r23, 0x3C	; 60
   1679c:	2b c3       	rjmp	.+1622   	; 0x16df4 <_Z22Valve_Grouping_Handlerh+0x1434>
   1679e:	81 30       	cpi	r24, 0x01	; 1
   167a0:	51 f4       	brne	.+20     	; 0x167b6 <_Z22Valve_Grouping_Handlerh+0xdf6>
   167a2:	6e e8       	ldi	r22, 0x8E	; 142
   167a4:	7c e3       	ldi	r23, 0x3C	; 60
   167a6:	85 e5       	ldi	r24, 0x55	; 85
   167a8:	94 e1       	ldi	r25, 0x14	; 20
   167aa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   167ae:	85 e5       	ldi	r24, 0x55	; 85
   167b0:	94 e1       	ldi	r25, 0x14	; 20
   167b2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   167b6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   167ba:	81 30       	cpi	r24, 0x01	; 1
   167bc:	d1 f0       	breq	.+52     	; 0x167f2 <_Z22Valve_Grouping_Handlerh+0xe32>
   167be:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   167c2:	81 30       	cpi	r24, 0x01	; 1
   167c4:	d9 f5       	brne	.+118    	; 0x1683c <_Z22Valve_Grouping_Handlerh+0xe7c>
   167c6:	66 e7       	ldi	r22, 0x76	; 118
   167c8:	7c e3       	ldi	r23, 0x3C	; 60
   167ca:	85 e5       	ldi	r24, 0x55	; 85
   167cc:	94 e1       	ldi	r25, 0x14	; 20
   167ce:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   167d2:	60 91 a5 13 	lds	r22, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   167d6:	70 e0       	ldi	r23, 0x00	; 0
   167d8:	61 50       	subi	r22, 0x01	; 1
   167da:	71 09       	sbc	r23, r1
   167dc:	4a e0       	ldi	r20, 0x0A	; 10
   167de:	50 e0       	ldi	r21, 0x00	; 0
   167e0:	85 e5       	ldi	r24, 0x55	; 85
   167e2:	94 e1       	ldi	r25, 0x14	; 20
   167e4:	0e 94 28 d2 	call	0x1a450	; 0x1a450 <_ZN5Print7printlnEii>
   167e8:	85 e5       	ldi	r24, 0x55	; 85
   167ea:	94 e1       	ldi	r25, 0x14	; 20
   167ec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   167f0:	25 c0       	rjmp	.+74     	; 0x1683c <_Z22Valve_Grouping_Handlerh+0xe7c>
   167f2:	00 e0       	ldi	r16, 0x00	; 0
   167f4:	10 e0       	ldi	r17, 0x00	; 0
   167f6:	4b e1       	ldi	r20, 0x1B	; 27
   167f8:	f4 2e       	mov	r15, r20
   167fa:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   167fe:	90 e0       	ldi	r25, 0x00	; 0
   16800:	85 56       	subi	r24, 0x65	; 101
   16802:	91 09       	sbc	r25, r1
   16804:	f8 9e       	mul	r15, r24
   16806:	f0 01       	movw	r30, r0
   16808:	f9 9e       	mul	r15, r25
   1680a:	f0 0d       	add	r31, r0
   1680c:	11 24       	eor	r1, r1
   1680e:	ec 57       	subi	r30, 0x7C	; 124
   16810:	f2 4f       	sbci	r31, 0xF2	; 242
   16812:	e0 0f       	add	r30, r16
   16814:	f1 1f       	adc	r31, r17
   16816:	4a e0       	ldi	r20, 0x0A	; 10
   16818:	50 e0       	ldi	r21, 0x00	; 0
   1681a:	65 81       	ldd	r22, Z+5	; 0x05
   1681c:	85 e5       	ldi	r24, 0x55	; 85
   1681e:	94 e1       	ldi	r25, 0x14	; 20
   16820:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   16824:	6c e8       	ldi	r22, 0x8C	; 140
   16826:	7c e3       	ldi	r23, 0x3C	; 60
   16828:	85 e5       	ldi	r24, 0x55	; 85
   1682a:	94 e1       	ldi	r25, 0x14	; 20
   1682c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16830:	0f 5f       	subi	r16, 0xFF	; 255
   16832:	1f 4f       	sbci	r17, 0xFF	; 255
   16834:	05 30       	cpi	r16, 0x05	; 5
   16836:	11 05       	cpc	r17, r1
   16838:	01 f7       	brne	.-64     	; 0x167fa <_Z22Valve_Grouping_Handlerh+0xe3a>
   1683a:	c1 cf       	rjmp	.-126    	; 0x167be <_Z22Valve_Grouping_Handlerh+0xdfe>
   1683c:	00 e0       	ldi	r16, 0x00	; 0
   1683e:	10 e0       	ldi	r17, 0x00	; 0
   16840:	ab e1       	ldi	r26, 0x1B	; 27
   16842:	3a 2e       	mov	r3, r26
   16844:	b6 e0       	ldi	r27, 0x06	; 6
   16846:	2b 2e       	mov	r2, r27
   16848:	82 e0       	ldi	r24, 0x02	; 2
   1684a:	c8 2e       	mov	r12, r24
   1684c:	bb 24       	eor	r11, r11
   1684e:	b3 94       	inc	r11
   16850:	84 2d       	mov	r24, r4
   16852:	8b 25       	eor	r24, r11
   16854:	81 70       	andi	r24, 0x01	; 1
   16856:	78 2e       	mov	r7, r24
   16858:	9c e7       	ldi	r25, 0x7C	; 124
   1685a:	e9 2e       	mov	r14, r25
   1685c:	93 e1       	ldi	r25, 0x13	; 19
   1685e:	f9 2e       	mov	r15, r25
   16860:	27 e0       	ldi	r18, 0x07	; 7
   16862:	a2 2e       	mov	r10, r18
   16864:	3d e0       	ldi	r19, 0x0D	; 13
   16866:	d3 2e       	mov	r13, r19
   16868:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1686c:	90 e0       	ldi	r25, 0x00	; 0
   1686e:	9c 01       	movw	r18, r24
   16870:	25 56       	subi	r18, 0x65	; 101
   16872:	31 09       	sbc	r19, r1
   16874:	32 9e       	mul	r3, r18
   16876:	f0 01       	movw	r30, r0
   16878:	33 9e       	mul	r3, r19
   1687a:	f0 0d       	add	r31, r0
   1687c:	11 24       	eor	r1, r1
   1687e:	ec 57       	subi	r30, 0x7C	; 124
   16880:	f2 4f       	sbci	r31, 0xF2	; 242
   16882:	e0 0f       	add	r30, r16
   16884:	f1 1f       	adc	r31, r17
   16886:	95 80       	ldd	r9, Z+5	; 0x05
   16888:	2f ef       	ldi	r18, 0xFF	; 255
   1688a:	29 0d       	add	r18, r9
   1688c:	25 31       	cpi	r18, 0x15	; 21
   1688e:	08 f0       	brcs	.+2      	; 0x16892 <_Z22Valve_Grouping_Handlerh+0xed2>
   16890:	72 c2       	rjmp	.+1252   	; 0x16d76 <_Z22Valve_Grouping_Handlerh+0x13b6>
   16892:	a3 e0       	ldi	r26, 0x03	; 3
   16894:	a9 15       	cp	r26, r9
   16896:	a8 f4       	brcc	.+42     	; 0x168c2 <_Z22Valve_Grouping_Handlerh+0xf02>
   16898:	6b ea       	ldi	r22, 0xAB	; 171
   1689a:	96 9e       	mul	r9, r22
   1689c:	61 2d       	mov	r22, r1
   1689e:	11 24       	eor	r1, r1
   168a0:	86 2f       	mov	r24, r22
   168a2:	86 95       	lsr	r24
   168a4:	98 2f       	mov	r25, r24
   168a6:	99 0f       	add	r25, r25
   168a8:	89 0f       	add	r24, r25
   168aa:	98 1a       	sub	r9, r24
   168ac:	66 95       	lsr	r22
   168ae:	99 20       	and	r9, r9
   168b0:	21 f0       	breq	.+8      	; 0x168ba <_Z22Valve_Grouping_Handlerh+0xefa>
   168b2:	88 24       	eor	r8, r8
   168b4:	83 94       	inc	r8
   168b6:	86 0e       	add	r8, r22
   168b8:	06 c0       	rjmp	.+12     	; 0x168c6 <_Z22Valve_Grouping_Handlerh+0xf06>
   168ba:	86 2e       	mov	r8, r22
   168bc:	f3 e0       	ldi	r31, 0x03	; 3
   168be:	9f 2e       	mov	r9, r31
   168c0:	02 c0       	rjmp	.+4      	; 0x168c6 <_Z22Valve_Grouping_Handlerh+0xf06>
   168c2:	88 24       	eor	r8, r8
   168c4:	83 94       	inc	r8
   168c6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   168ca:	81 30       	cpi	r24, 0x01	; 1
   168cc:	89 f4       	brne	.+34     	; 0x168f0 <_Z22Valve_Grouping_Handlerh+0xf30>
   168ce:	62 e6       	ldi	r22, 0x62	; 98
   168d0:	7c e3       	ldi	r23, 0x3C	; 60
   168d2:	85 e5       	ldi	r24, 0x55	; 85
   168d4:	94 e1       	ldi	r25, 0x14	; 20
   168d6:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   168da:	4a e0       	ldi	r20, 0x0A	; 10
   168dc:	50 e0       	ldi	r21, 0x00	; 0
   168de:	68 2d       	mov	r22, r8
   168e0:	85 e5       	ldi	r24, 0x55	; 85
   168e2:	94 e1       	ldi	r25, 0x14	; 20
   168e4:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   168e8:	85 e5       	ldi	r24, 0x55	; 85
   168ea:	94 e1       	ldi	r25, 0x14	; 20
   168ec:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   168f0:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   168f4:	81 11       	cpse	r24, r1
   168f6:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   168fa:	84 e1       	ldi	r24, 0x14	; 20
   168fc:	f7 01       	movw	r30, r14
   168fe:	11 92       	st	Z+, r1
   16900:	8a 95       	dec	r24
   16902:	e9 f7       	brne	.-6      	; 0x168fe <_Z22Valve_Grouping_Handlerh+0xf3e>
   16904:	68 2d       	mov	r22, r8
   16906:	70 e0       	ldi	r23, 0x00	; 0
   16908:	61 50       	subi	r22, 0x01	; 1
   1690a:	71 09       	sbc	r23, r1
   1690c:	a6 9e       	mul	r10, r22
   1690e:	c0 01       	movw	r24, r0
   16910:	a7 9e       	mul	r10, r23
   16912:	90 0d       	add	r25, r0
   16914:	11 24       	eor	r1, r1
   16916:	86 5b       	subi	r24, 0xB6	; 182
   16918:	9c 4e       	sbci	r25, 0xEC	; 236
   1691a:	fc 01       	movw	r30, r24
   1691c:	e1 5a       	subi	r30, 0xA1	; 161
   1691e:	ff 4f       	sbci	r31, 0xFF	; 255
   16920:	20 81       	ld	r18, Z
   16922:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
   16926:	31 96       	adiw	r30, 0x01	; 1
   16928:	20 81       	ld	r18, Z
   1692a:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
   1692e:	31 96       	adiw	r30, 0x01	; 1
   16930:	20 81       	ld	r18, Z
   16932:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
   16936:	31 96       	adiw	r30, 0x01	; 1
   16938:	20 81       	ld	r18, Z
   1693a:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
   1693e:	31 96       	adiw	r30, 0x01	; 1
   16940:	20 81       	ld	r18, Z
   16942:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
   16946:	31 96       	adiw	r30, 0x01	; 1
   16948:	20 81       	ld	r18, Z
   1694a:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
   1694e:	c0 92 82 13 	sts	0x1382, r12	; 0x801382 <_sRuble_Parameters+0x38>
   16952:	40 92 83 13 	sts	0x1383, r4	; 0x801383 <_sRuble_Parameters+0x39>
   16956:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   1695a:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
   1695e:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   16962:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
   16966:	90 92 87 13 	sts	0x1387, r9	; 0x801387 <_sRuble_Parameters+0x3d>
   1696a:	40 e0       	ldi	r20, 0x00	; 0
   1696c:	50 e0       	ldi	r21, 0x00	; 0
   1696e:	64 2e       	mov	r6, r20
   16970:	81 2c       	mov	r8, r1
   16972:	91 2c       	mov	r9, r1
   16974:	d4 9e       	mul	r13, r20
   16976:	b0 01       	movw	r22, r0
   16978:	d5 9e       	mul	r13, r21
   1697a:	70 0d       	add	r23, r0
   1697c:	11 24       	eor	r1, r1
   1697e:	69 54       	subi	r22, 0x49	; 73
   16980:	74 4f       	sbci	r23, 0xF4	; 244
   16982:	29 2d       	mov	r18, r9
   16984:	30 e0       	ldi	r19, 0x00	; 0
   16986:	fb 01       	movw	r30, r22
   16988:	e2 0f       	add	r30, r18
   1698a:	f3 1f       	adc	r31, r19
   1698c:	28 0f       	add	r18, r24
   1698e:	39 1f       	adc	r19, r25
   16990:	d9 01       	movw	r26, r18
   16992:	a1 5a       	subi	r26, 0xA1	; 161
   16994:	bf 4f       	sbci	r27, 0xFF	; 255
   16996:	31 81       	ldd	r19, Z+1	; 0x01
   16998:	2c 91       	ld	r18, X
   1699a:	32 17       	cp	r19, r18
   1699c:	19 f0       	breq	.+6      	; 0x169a4 <_Z22Valve_Grouping_Handlerh+0xfe4>
   1699e:	81 2c       	mov	r8, r1
   169a0:	e6 e0       	ldi	r30, 0x06	; 6
   169a2:	9e 2e       	mov	r9, r30
   169a4:	83 94       	inc	r8
   169a6:	93 94       	inc	r9
   169a8:	f5 e0       	ldi	r31, 0x05	; 5
   169aa:	f9 15       	cp	r31, r9
   169ac:	50 f7       	brcc	.-44     	; 0x16982 <_Z22Valve_Grouping_Handlerh+0xfc2>
   169ae:	26 e0       	ldi	r18, 0x06	; 6
   169b0:	82 16       	cp	r8, r18
   169b2:	31 f0       	breq	.+12     	; 0x169c0 <_Z22Valve_Grouping_Handlerh+0x1000>
   169b4:	4f 5f       	subi	r20, 0xFF	; 255
   169b6:	5f 4f       	sbci	r21, 0xFF	; 255
   169b8:	47 30       	cpi	r20, 0x07	; 7
   169ba:	51 05       	cpc	r21, r1
   169bc:	c1 f6       	brne	.-80     	; 0x1696e <_Z22Valve_Grouping_Handlerh+0xfae>
   169be:	01 c0       	rjmp	.+2      	; 0x169c2 <_Z22Valve_Grouping_Handlerh+0x1002>
   169c0:	56 2c       	mov	r5, r6
   169c2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   169c6:	81 30       	cpi	r24, 0x01	; 1
   169c8:	89 f4       	brne	.+34     	; 0x169ec <_Z22Valve_Grouping_Handlerh+0x102c>
   169ca:	6c e4       	ldi	r22, 0x4C	; 76
   169cc:	7c e3       	ldi	r23, 0x3C	; 60
   169ce:	85 e5       	ldi	r24, 0x55	; 85
   169d0:	94 e1       	ldi	r25, 0x14	; 20
   169d2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   169d6:	4a e0       	ldi	r20, 0x0A	; 10
   169d8:	50 e0       	ldi	r21, 0x00	; 0
   169da:	65 2d       	mov	r22, r5
   169dc:	85 e5       	ldi	r24, 0x55	; 85
   169de:	94 e1       	ldi	r25, 0x14	; 20
   169e0:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   169e4:	85 e5       	ldi	r24, 0x55	; 85
   169e6:	94 e1       	ldi	r25, 0x14	; 20
   169e8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   169ec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   169f0:	81 30       	cpi	r24, 0x01	; 1
   169f2:	51 f4       	brne	.+20     	; 0x16a08 <_Z22Valve_Grouping_Handlerh+0x1048>
   169f4:	68 e2       	ldi	r22, 0x28	; 40
   169f6:	7c e3       	ldi	r23, 0x3C	; 60
   169f8:	85 e5       	ldi	r24, 0x55	; 85
   169fa:	94 e1       	ldi	r25, 0x14	; 20
   169fc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16a00:	85 e5       	ldi	r24, 0x55	; 85
   16a02:	94 e1       	ldi	r25, 0x14	; 20
   16a04:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16a08:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   16a0c:	8c e0       	ldi	r24, 0x0C	; 12
   16a0e:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   16a12:	88 eb       	ldi	r24, 0xB8	; 184
   16a14:	9b e0       	ldi	r25, 0x0B	; 11
   16a16:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   16a1a:	88 23       	and	r24, r24
   16a1c:	09 f4       	brne	.+2      	; 0x16a20 <_Z22Valve_Grouping_Handlerh+0x1060>
   16a1e:	71 c1       	rjmp	.+738    	; 0x16d02 <_Z22Valve_Grouping_Handlerh+0x1342>
   16a20:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   16a24:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16a28:	88 23       	and	r24, r24
   16a2a:	09 f4       	brne	.+2      	; 0x16a2e <_Z22Valve_Grouping_Handlerh+0x106e>
   16a2c:	11 c1       	rjmp	.+546    	; 0x16c50 <_Z22Valve_Grouping_Handlerh+0x1290>
   16a2e:	85 2c       	mov	r8, r5
   16a30:	91 2c       	mov	r9, r1
   16a32:	91 30       	cpi	r25, 0x01	; 1
   16a34:	49 f5       	brne	.+82     	; 0x16a88 <_Z22Valve_Grouping_Handlerh+0x10c8>
   16a36:	62 e1       	ldi	r22, 0x12	; 18
   16a38:	7c e3       	ldi	r23, 0x3C	; 60
   16a3a:	85 e5       	ldi	r24, 0x55	; 85
   16a3c:	94 e1       	ldi	r25, 0x14	; 20
   16a3e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16a42:	4a e0       	ldi	r20, 0x0A	; 10
   16a44:	50 e0       	ldi	r21, 0x00	; 0
   16a46:	60 e9       	ldi	r22, 0x90	; 144
   16a48:	73 e1       	ldi	r23, 0x13	; 19
   16a4a:	85 e5       	ldi	r24, 0x55	; 85
   16a4c:	94 e1       	ldi	r25, 0x14	; 20
   16a4e:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   16a52:	85 e5       	ldi	r24, 0x55	; 85
   16a54:	94 e1       	ldi	r25, 0x14	; 20
   16a56:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   16a5a:	64 ef       	ldi	r22, 0xF4	; 244
   16a5c:	7b e3       	ldi	r23, 0x3B	; 59
   16a5e:	85 e5       	ldi	r24, 0x55	; 85
   16a60:	94 e1       	ldi	r25, 0x14	; 20
   16a62:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16a66:	d8 9c       	mul	r13, r8
   16a68:	b0 01       	movw	r22, r0
   16a6a:	d9 9c       	mul	r13, r9
   16a6c:	70 0d       	add	r23, r0
   16a6e:	11 24       	eor	r1, r1
   16a70:	68 54       	subi	r22, 0x48	; 72
   16a72:	74 4f       	sbci	r23, 0xF4	; 244
   16a74:	47 e0       	ldi	r20, 0x07	; 7
   16a76:	50 e0       	ldi	r21, 0x00	; 0
   16a78:	85 e5       	ldi	r24, 0x55	; 85
   16a7a:	94 e1       	ldi	r25, 0x14	; 20
   16a7c:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   16a80:	85 e5       	ldi	r24, 0x55	; 85
   16a82:	94 e1       	ldi	r25, 0x14	; 20
   16a84:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   16a88:	a0 e9       	ldi	r26, 0x90	; 144
   16a8a:	b3 e1       	ldi	r27, 0x13	; 19
   16a8c:	6d e0       	ldi	r22, 0x0D	; 13
   16a8e:	56 9e       	mul	r5, r22
   16a90:	90 01       	movw	r18, r0
   16a92:	11 24       	eor	r1, r1
   16a94:	80 e0       	ldi	r24, 0x00	; 0
   16a96:	90 e0       	ldi	r25, 0x00	; 0
   16a98:	4d 91       	ld	r20, X+
   16a9a:	f9 01       	movw	r30, r18
   16a9c:	e8 0f       	add	r30, r24
   16a9e:	f9 1f       	adc	r31, r25
   16aa0:	e9 54       	subi	r30, 0x49	; 73
   16aa2:	f4 4f       	sbci	r31, 0xF4	; 244
   16aa4:	51 81       	ldd	r21, Z+1	; 0x01
   16aa6:	54 17       	cp	r21, r20
   16aa8:	09 f4       	brne	.+2      	; 0x16aac <_Z22Valve_Grouping_Handlerh+0x10ec>
   16aaa:	5b c0       	rjmp	.+182    	; 0x16b62 <_Z22Valve_Grouping_Handlerh+0x11a2>
   16aac:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16ab0:	81 30       	cpi	r24, 0x01	; 1
   16ab2:	51 f4       	brne	.+20     	; 0x16ac8 <_Z22Valve_Grouping_Handlerh+0x1108>
   16ab4:	69 ec       	ldi	r22, 0xC9	; 201
   16ab6:	7b e3       	ldi	r23, 0x3B	; 59
   16ab8:	85 e5       	ldi	r24, 0x55	; 85
   16aba:	94 e1       	ldi	r25, 0x14	; 20
   16abc:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16ac0:	85 e5       	ldi	r24, 0x55	; 85
   16ac2:	94 e1       	ldi	r25, 0x14	; 20
   16ac4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16ac8:	86 e0       	ldi	r24, 0x06	; 6
   16aca:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   16ace:	84 e6       	ldi	r24, 0x64	; 100
   16ad0:	90 e0       	ldi	r25, 0x00	; 0
   16ad2:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16ad6:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16ada:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16ade:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16ae2:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16ae6:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16aea:	a0 62       	ori	r26, 0x20	; 32
   16aec:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16af0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16af4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16af8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16afc:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0xb2>
   16b00:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   16b04:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16b08:	82 60       	ori	r24, 0x02	; 2
   16b0a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16b0e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   16b12:	00 e0       	ldi	r16, 0x00	; 0
   16b14:	10 e0       	ldi	r17, 0x00	; 0
   16b16:	3b e1       	ldi	r19, 0x1B	; 27
   16b18:	f3 2e       	mov	r15, r19
   16b1a:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16b1e:	90 e0       	ldi	r25, 0x00	; 0
   16b20:	85 56       	subi	r24, 0x65	; 101
   16b22:	91 09       	sbc	r25, r1
   16b24:	f8 9e       	mul	r15, r24
   16b26:	f0 01       	movw	r30, r0
   16b28:	f9 9e       	mul	r15, r25
   16b2a:	f0 0d       	add	r31, r0
   16b2c:	11 24       	eor	r1, r1
   16b2e:	ec 57       	subi	r30, 0x7C	; 124
   16b30:	f2 4f       	sbci	r31, 0xF2	; 242
   16b32:	e0 0f       	add	r30, r16
   16b34:	f1 1f       	adc	r31, r17
   16b36:	e5 81       	ldd	r30, Z+5	; 0x05
   16b38:	e6 31       	cpi	r30, 0x16	; 22
   16b3a:	68 f0       	brcs	.+26     	; 0x16b56 <_Z22Valve_Grouping_Handlerh+0x1196>
   16b3c:	f0 e0       	ldi	r31, 0x00	; 0
   16b3e:	ec 53       	subi	r30, 0x3C	; 60
   16b40:	fc 4e       	sbci	r31, 0xEC	; 236
   16b42:	61 e0       	ldi	r22, 0x01	; 1
   16b44:	80 81       	ld	r24, Z
   16b46:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16b4a:	68 ec       	ldi	r22, 0xC8	; 200
   16b4c:	70 e0       	ldi	r23, 0x00	; 0
   16b4e:	80 e0       	ldi	r24, 0x00	; 0
   16b50:	90 e0       	ldi	r25, 0x00	; 0
   16b52:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16b56:	0f 5f       	subi	r16, 0xFF	; 255
   16b58:	1f 4f       	sbci	r17, 0xFF	; 255
   16b5a:	05 30       	cpi	r16, 0x05	; 5
   16b5c:	11 05       	cpc	r17, r1
   16b5e:	e9 f6       	brne	.-70     	; 0x16b1a <_Z22Valve_Grouping_Handlerh+0x115a>
   16b60:	03 c1       	rjmp	.+518    	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   16b62:	01 96       	adiw	r24, 0x01	; 1
   16b64:	86 30       	cpi	r24, 0x06	; 6
   16b66:	91 05       	cpc	r25, r1
   16b68:	09 f0       	breq	.+2      	; 0x16b6c <_Z22Valve_Grouping_Handlerh+0x11ac>
   16b6a:	96 cf       	rjmp	.-212    	; 0x16a98 <_Z22Valve_Grouping_Handlerh+0x10d8>
   16b6c:	d8 9c       	mul	r13, r8
   16b6e:	f0 01       	movw	r30, r0
   16b70:	d9 9c       	mul	r13, r9
   16b72:	f0 0d       	add	r31, r0
   16b74:	11 24       	eor	r1, r1
   16b76:	e9 54       	subi	r30, 0x49	; 73
   16b78:	f4 4f       	sbci	r31, 0xF4	; 244
   16b7a:	b3 86       	std	Z+11, r11	; 0x0b
   16b7c:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   16b80:	90 e0       	ldi	r25, 0x00	; 0
   16b82:	98 2f       	mov	r25, r24
   16b84:	88 27       	eor	r24, r24
   16b86:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   16b8a:	82 2b       	or	r24, r18
   16b8c:	91 87       	std	Z+9, r25	; 0x09
   16b8e:	80 87       	std	Z+8, r24	; 0x08
   16b90:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   16b94:	48 16       	cp	r4, r24
   16b96:	09 f4       	brne	.+2      	; 0x16b9a <_Z22Valve_Grouping_Handlerh+0x11da>
   16b98:	e9 c0       	rjmp	.+466    	; 0x16d6c <_Z22Valve_Grouping_Handlerh+0x13ac>
   16b9a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16b9e:	81 30       	cpi	r24, 0x01	; 1
   16ba0:	51 f4       	brne	.+20     	; 0x16bb6 <_Z22Valve_Grouping_Handlerh+0x11f6>
   16ba2:	66 eb       	ldi	r22, 0xB6	; 182
   16ba4:	7b e3       	ldi	r23, 0x3B	; 59
   16ba6:	85 e5       	ldi	r24, 0x55	; 85
   16ba8:	94 e1       	ldi	r25, 0x14	; 20
   16baa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16bae:	85 e5       	ldi	r24, 0x55	; 85
   16bb0:	94 e1       	ldi	r25, 0x14	; 20
   16bb2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16bb6:	86 e0       	ldi	r24, 0x06	; 6
   16bb8:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   16bbc:	84 e6       	ldi	r24, 0x64	; 100
   16bbe:	90 e0       	ldi	r25, 0x00	; 0
   16bc0:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16bc4:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16bc8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16bcc:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16bd0:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16bd4:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16bd8:	a0 62       	ori	r26, 0x20	; 32
   16bda:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16bde:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16be2:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16be6:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16bea:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0xb2>
   16bee:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   16bf2:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16bf6:	82 60       	ori	r24, 0x02	; 2
   16bf8:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16bfc:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   16c00:	00 e0       	ldi	r16, 0x00	; 0
   16c02:	10 e0       	ldi	r17, 0x00	; 0
   16c04:	9b e1       	ldi	r25, 0x1B	; 27
   16c06:	f9 2e       	mov	r15, r25
   16c08:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16c0c:	90 e0       	ldi	r25, 0x00	; 0
   16c0e:	85 56       	subi	r24, 0x65	; 101
   16c10:	91 09       	sbc	r25, r1
   16c12:	f8 9e       	mul	r15, r24
   16c14:	f0 01       	movw	r30, r0
   16c16:	f9 9e       	mul	r15, r25
   16c18:	f0 0d       	add	r31, r0
   16c1a:	11 24       	eor	r1, r1
   16c1c:	ec 57       	subi	r30, 0x7C	; 124
   16c1e:	f2 4f       	sbci	r31, 0xF2	; 242
   16c20:	e0 0f       	add	r30, r16
   16c22:	f1 1f       	adc	r31, r17
   16c24:	e5 81       	ldd	r30, Z+5	; 0x05
   16c26:	e6 31       	cpi	r30, 0x16	; 22
   16c28:	68 f0       	brcs	.+26     	; 0x16c44 <_Z22Valve_Grouping_Handlerh+0x1284>
   16c2a:	f0 e0       	ldi	r31, 0x00	; 0
   16c2c:	ec 53       	subi	r30, 0x3C	; 60
   16c2e:	fc 4e       	sbci	r31, 0xEC	; 236
   16c30:	61 e0       	ldi	r22, 0x01	; 1
   16c32:	80 81       	ld	r24, Z
   16c34:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16c38:	68 ec       	ldi	r22, 0xC8	; 200
   16c3a:	70 e0       	ldi	r23, 0x00	; 0
   16c3c:	80 e0       	ldi	r24, 0x00	; 0
   16c3e:	90 e0       	ldi	r25, 0x00	; 0
   16c40:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16c44:	0f 5f       	subi	r16, 0xFF	; 255
   16c46:	1f 4f       	sbci	r17, 0xFF	; 255
   16c48:	05 30       	cpi	r16, 0x05	; 5
   16c4a:	11 05       	cpc	r17, r1
   16c4c:	e9 f6       	brne	.-70     	; 0x16c08 <_Z22Valve_Grouping_Handlerh+0x1248>
   16c4e:	8c c0       	rjmp	.+280    	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   16c50:	91 30       	cpi	r25, 0x01	; 1
   16c52:	51 f4       	brne	.+20     	; 0x16c68 <_Z22Valve_Grouping_Handlerh+0x12a8>
   16c54:	6b e7       	ldi	r22, 0x7B	; 123
   16c56:	7b e3       	ldi	r23, 0x3B	; 59
   16c58:	85 e5       	ldi	r24, 0x55	; 85
   16c5a:	94 e1       	ldi	r25, 0x14	; 20
   16c5c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16c60:	85 e5       	ldi	r24, 0x55	; 85
   16c62:	94 e1       	ldi	r25, 0x14	; 20
   16c64:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16c68:	86 e0       	ldi	r24, 0x06	; 6
   16c6a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   16c6e:	84 e6       	ldi	r24, 0x64	; 100
   16c70:	90 e0       	ldi	r25, 0x00	; 0
   16c72:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16c76:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16c7a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16c7e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16c82:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16c86:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16c8a:	a0 62       	ori	r26, 0x20	; 32
   16c8c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16c90:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16c94:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16c98:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16c9c:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0xb2>
   16ca0:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   16ca4:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16ca8:	82 60       	ori	r24, 0x02	; 2
   16caa:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16cae:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   16cb2:	00 e0       	ldi	r16, 0x00	; 0
   16cb4:	10 e0       	ldi	r17, 0x00	; 0
   16cb6:	8b e1       	ldi	r24, 0x1B	; 27
   16cb8:	f8 2e       	mov	r15, r24
   16cba:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   16cbe:	90 e0       	ldi	r25, 0x00	; 0
   16cc0:	85 56       	subi	r24, 0x65	; 101
   16cc2:	91 09       	sbc	r25, r1
   16cc4:	f8 9e       	mul	r15, r24
   16cc6:	f0 01       	movw	r30, r0
   16cc8:	f9 9e       	mul	r15, r25
   16cca:	f0 0d       	add	r31, r0
   16ccc:	11 24       	eor	r1, r1
   16cce:	ec 57       	subi	r30, 0x7C	; 124
   16cd0:	f2 4f       	sbci	r31, 0xF2	; 242
   16cd2:	e0 0f       	add	r30, r16
   16cd4:	f1 1f       	adc	r31, r17
   16cd6:	e5 81       	ldd	r30, Z+5	; 0x05
   16cd8:	e6 31       	cpi	r30, 0x16	; 22
   16cda:	68 f0       	brcs	.+26     	; 0x16cf6 <_Z22Valve_Grouping_Handlerh+0x1336>
   16cdc:	f0 e0       	ldi	r31, 0x00	; 0
   16cde:	ec 53       	subi	r30, 0x3C	; 60
   16ce0:	fc 4e       	sbci	r31, 0xEC	; 236
   16ce2:	61 e0       	ldi	r22, 0x01	; 1
   16ce4:	80 81       	ld	r24, Z
   16ce6:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16cea:	68 ec       	ldi	r22, 0xC8	; 200
   16cec:	70 e0       	ldi	r23, 0x00	; 0
   16cee:	80 e0       	ldi	r24, 0x00	; 0
   16cf0:	90 e0       	ldi	r25, 0x00	; 0
   16cf2:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16cf6:	0f 5f       	subi	r16, 0xFF	; 255
   16cf8:	1f 4f       	sbci	r17, 0xFF	; 255
   16cfa:	05 30       	cpi	r16, 0x05	; 5
   16cfc:	11 05       	cpc	r17, r1
   16cfe:	e9 f6       	brne	.-70     	; 0x16cba <_Z22Valve_Grouping_Handlerh+0x12fa>
   16d00:	33 c0       	rjmp	.+102    	; 0x16d68 <_Z22Valve_Grouping_Handlerh+0x13a8>
   16d02:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16d06:	81 30       	cpi	r24, 0x01	; 1
   16d08:	51 f4       	brne	.+20     	; 0x16d1e <_Z22Valve_Grouping_Handlerh+0x135e>
   16d0a:	60 e4       	ldi	r22, 0x40	; 64
   16d0c:	7b e3       	ldi	r23, 0x3B	; 59
   16d0e:	85 e5       	ldi	r24, 0x55	; 85
   16d10:	94 e1       	ldi	r25, 0x14	; 20
   16d12:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16d16:	85 e5       	ldi	r24, 0x55	; 85
   16d18:	94 e1       	ldi	r25, 0x14	; 20
   16d1a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16d1e:	86 e0       	ldi	r24, 0x06	; 6
   16d20:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   16d24:	84 e6       	ldi	r24, 0x64	; 100
   16d26:	90 e0       	ldi	r25, 0x00	; 0
   16d28:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   16d2c:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   16d30:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16d34:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16d38:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16d3c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16d40:	a0 62       	ori	r26, 0x20	; 32
   16d42:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16d46:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16d4a:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16d4e:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16d52:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0xb2>
   16d56:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   16d5a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   16d5e:	82 60       	ori	r24, 0x02	; 2
   16d60:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   16d64:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   16d68:	80 e0       	ldi	r24, 0x00	; 0
   16d6a:	5f c0       	rjmp	.+190    	; 0x16e2a <_Z22Valve_Grouping_Handlerh+0x146a>
   16d6c:	68 ee       	ldi	r22, 0xE8	; 232
   16d6e:	73 e0       	ldi	r23, 0x03	; 3
   16d70:	80 e0       	ldi	r24, 0x00	; 0
   16d72:	90 e0       	ldi	r25, 0x00	; 0
   16d74:	0f c0       	rjmp	.+30     	; 0x16d94 <_Z22Valve_Grouping_Handlerh+0x13d4>
   16d76:	75 e1       	ldi	r23, 0x15	; 21
   16d78:	79 15       	cp	r23, r9
   16d7a:	78 f4       	brcc	.+30     	; 0x16d9a <_Z22Valve_Grouping_Handlerh+0x13da>
   16d7c:	e9 2d       	mov	r30, r9
   16d7e:	f0 e0       	ldi	r31, 0x00	; 0
   16d80:	ec 53       	subi	r30, 0x3C	; 60
   16d82:	fc 4e       	sbci	r31, 0xEC	; 236
   16d84:	67 2d       	mov	r22, r7
   16d86:	80 81       	ld	r24, Z
   16d88:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16d8c:	68 ec       	ldi	r22, 0xC8	; 200
   16d8e:	70 e0       	ldi	r23, 0x00	; 0
   16d90:	80 e0       	ldi	r24, 0x00	; 0
   16d92:	90 e0       	ldi	r25, 0x00	; 0
   16d94:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16d98:	21 c0       	rjmp	.+66     	; 0x16ddc <_Z22Valve_Grouping_Handlerh+0x141c>
   16d9a:	01 97       	sbiw	r24, 0x01	; 1
   16d9c:	28 9e       	mul	r2, r24
   16d9e:	f0 01       	movw	r30, r0
   16da0:	29 9e       	mul	r2, r25
   16da2:	f0 0d       	add	r31, r0
   16da4:	11 24       	eor	r1, r1
   16da6:	e0 50       	subi	r30, 0x00	; 0
   16da8:	f3 4f       	sbci	r31, 0xF3	; 243
   16daa:	e0 0f       	add	r30, r16
   16dac:	f1 1f       	adc	r31, r17
   16dae:	81 81       	ldd	r24, Z+1	; 0x01
   16db0:	85 36       	cpi	r24, 0x65	; 101
   16db2:	a1 f4       	brne	.+40     	; 0x16ddc <_Z22Valve_Grouping_Handlerh+0x141c>
   16db4:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   16db8:	91 e0       	ldi	r25, 0x01	; 1
   16dba:	49 12       	cpse	r4, r25
   16dbc:	05 c0       	rjmp	.+10     	; 0x16dc8 <_Z22Valve_Grouping_Handlerh+0x1408>
   16dbe:	88 23       	and	r24, r24
   16dc0:	69 f0       	breq	.+26     	; 0x16ddc <_Z22Valve_Grouping_Handlerh+0x141c>
   16dc2:	40 92 09 14 	sts	0x1409, r4	; 0x801409 <_sRuble_Parameters+0xbf>
   16dc6:	04 c0       	rjmp	.+8      	; 0x16dd0 <_Z22Valve_Grouping_Handlerh+0x1410>
   16dc8:	88 23       	and	r24, r24
   16dca:	41 f0       	breq	.+16     	; 0x16ddc <_Z22Valve_Grouping_Handlerh+0x141c>
   16dcc:	c0 92 09 14 	sts	0x1409, r12	; 0x801409 <_sRuble_Parameters+0xbf>
   16dd0:	69 e0       	ldi	r22, 0x09	; 9
   16dd2:	74 e1       	ldi	r23, 0x14	; 20
   16dd4:	88 ea       	ldi	r24, 0xA8	; 168
   16dd6:	9c e0       	ldi	r25, 0x0C	; 12
   16dd8:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16ddc:	0f 5f       	subi	r16, 0xFF	; 255
   16dde:	1f 4f       	sbci	r17, 0xFF	; 255
   16de0:	05 30       	cpi	r16, 0x05	; 5
   16de2:	11 05       	cpc	r17, r1
   16de4:	09 f0       	breq	.+2      	; 0x16de8 <_Z22Valve_Grouping_Handlerh+0x1428>
   16de6:	40 cd       	rjmp	.-1408   	; 0x16868 <_Z22Valve_Grouping_Handlerh+0xea8>
   16de8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16dec:	81 30       	cpi	r24, 0x01	; 1
   16dee:	61 f4       	brne	.+24     	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   16df0:	61 e2       	ldi	r22, 0x21	; 33
   16df2:	7b e3       	ldi	r23, 0x3B	; 59
   16df4:	85 e5       	ldi	r24, 0x55	; 85
   16df6:	94 e1       	ldi	r25, 0x14	; 20
   16df8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16dfc:	85 e5       	ldi	r24, 0x55	; 85
   16dfe:	94 e1       	ldi	r25, 0x14	; 20
   16e00:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16e04:	01 c0       	rjmp	.+2      	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1448>
   16e06:	11 c0       	rjmp	.+34     	; 0x16e2a <_Z22Valve_Grouping_Handlerh+0x146a>
   16e08:	81 e0       	ldi	r24, 0x01	; 1
   16e0a:	0f c0       	rjmp	.+30     	; 0x16e2a <_Z22Valve_Grouping_Handlerh+0x146a>
   16e0c:	68 ee       	ldi	r22, 0xE8	; 232
   16e0e:	73 e0       	ldi	r23, 0x03	; 3
   16e10:	80 e0       	ldi	r24, 0x00	; 0
   16e12:	90 e0       	ldi	r25, 0x00	; 0
   16e14:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16e18:	0c 94 4b ae 	jmp	0x15c96	; 0x15c96 <_Z22Valve_Grouping_Handlerh+0x2d6>
   16e1c:	68 ee       	ldi	r22, 0xE8	; 232
   16e1e:	73 e0       	ldi	r23, 0x03	; 3
   16e20:	80 e0       	ldi	r24, 0x00	; 0
   16e22:	90 e0       	ldi	r25, 0x00	; 0
   16e24:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16e28:	94 c8       	rjmp	.-3800   	; 0x15f52 <_Z22Valve_Grouping_Handlerh+0x592>
   16e2a:	e6 96       	adiw	r28, 0x36	; 54
   16e2c:	0f b6       	in	r0, 0x3f	; 63
   16e2e:	f8 94       	cli
   16e30:	de bf       	out	0x3e, r29	; 62
   16e32:	0f be       	out	0x3f, r0	; 63
   16e34:	cd bf       	out	0x3d, r28	; 61
   16e36:	df 91       	pop	r29
   16e38:	cf 91       	pop	r28
   16e3a:	1f 91       	pop	r17
   16e3c:	0f 91       	pop	r16
   16e3e:	ff 90       	pop	r15
   16e40:	ef 90       	pop	r14
   16e42:	df 90       	pop	r13
   16e44:	cf 90       	pop	r12
   16e46:	bf 90       	pop	r11
   16e48:	af 90       	pop	r10
   16e4a:	9f 90       	pop	r9
   16e4c:	8f 90       	pop	r8
   16e4e:	7f 90       	pop	r7
   16e50:	6f 90       	pop	r6
   16e52:	5f 90       	pop	r5
   16e54:	4f 90       	pop	r4
   16e56:	3f 90       	pop	r3
   16e58:	2f 90       	pop	r2
   16e5a:	08 95       	ret

00016e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   16e5c:	3f 92       	push	r3
   16e5e:	4f 92       	push	r4
   16e60:	5f 92       	push	r5
   16e62:	6f 92       	push	r6
   16e64:	7f 92       	push	r7
   16e66:	8f 92       	push	r8
   16e68:	9f 92       	push	r9
   16e6a:	af 92       	push	r10
   16e6c:	bf 92       	push	r11
   16e6e:	cf 92       	push	r12
   16e70:	df 92       	push	r13
   16e72:	ef 92       	push	r14
   16e74:	ff 92       	push	r15
   16e76:	0f 93       	push	r16
   16e78:	1f 93       	push	r17
   16e7a:	cf 93       	push	r28
   16e7c:	df 93       	push	r29
   16e7e:	08 2f       	mov	r16, r24
   16e80:	c6 2f       	mov	r28, r22
   16e82:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16e86:	81 30       	cpi	r24, 0x01	; 1
   16e88:	31 f4       	brne	.+12     	; 0x16e96 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3a>
   16e8a:	63 ef       	ldi	r22, 0xF3	; 243
   16e8c:	7e e2       	ldi	r23, 0x2E	; 46
   16e8e:	85 e5       	ldi	r24, 0x55	; 85
   16e90:	94 e1       	ldi	r25, 0x14	; 20
   16e92:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16e96:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16e9a:	81 30       	cpi	r24, 0x01	; 1
   16e9c:	81 f5       	brne	.+96     	; 0x16efe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xa2>
   16e9e:	2b e1       	ldi	r18, 0x1B	; 27
   16ea0:	c2 9f       	mul	r28, r18
   16ea2:	60 01       	movw	r12, r0
   16ea4:	11 24       	eor	r1, r1
   16ea6:	e1 2c       	mov	r14, r1
   16ea8:	f1 2c       	mov	r15, r1
   16eaa:	f6 01       	movw	r30, r12
   16eac:	ee 0d       	add	r30, r14
   16eae:	ff 1d       	adc	r31, r15
   16eb0:	ec 57       	subi	r30, 0x7C	; 124
   16eb2:	f2 4f       	sbci	r31, 0xF2	; 242
   16eb4:	4a e0       	ldi	r20, 0x0A	; 10
   16eb6:	50 e0       	ldi	r21, 0x00	; 0
   16eb8:	65 81       	ldd	r22, Z+5	; 0x05
   16eba:	85 e5       	ldi	r24, 0x55	; 85
   16ebc:	94 e1       	ldi	r25, 0x14	; 20
   16ebe:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   16ec2:	61 ef       	ldi	r22, 0xF1	; 241
   16ec4:	7e e2       	ldi	r23, 0x2E	; 46
   16ec6:	85 e5       	ldi	r24, 0x55	; 85
   16ec8:	94 e1       	ldi	r25, 0x14	; 20
   16eca:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16ece:	8f ef       	ldi	r24, 0xFF	; 255
   16ed0:	e8 1a       	sub	r14, r24
   16ed2:	f8 0a       	sbc	r15, r24
   16ed4:	95 e0       	ldi	r25, 0x05	; 5
   16ed6:	e9 16       	cp	r14, r25
   16ed8:	f1 04       	cpc	r15, r1
   16eda:	39 f7       	brne	.-50     	; 0x16eaa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4e>
   16edc:	65 ed       	ldi	r22, 0xD5	; 213
   16ede:	7e e2       	ldi	r23, 0x2E	; 46
   16ee0:	85 e5       	ldi	r24, 0x55	; 85
   16ee2:	94 e1       	ldi	r25, 0x14	; 20
   16ee4:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16ee8:	4a e0       	ldi	r20, 0x0A	; 10
   16eea:	50 e0       	ldi	r21, 0x00	; 0
   16eec:	6c 2f       	mov	r22, r28
   16eee:	85 e5       	ldi	r24, 0x55	; 85
   16ef0:	94 e1       	ldi	r25, 0x14	; 20
   16ef2:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   16ef6:	85 e5       	ldi	r24, 0x55	; 85
   16ef8:	94 e1       	ldi	r25, 0x14	; 20
   16efa:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16efe:	c4 30       	cpi	r28, 0x04	; 4
   16f00:	11 f4       	brne	.+4      	; 0x16f06 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xaa>
   16f02:	01 30       	cpi	r16, 0x01	; 1
   16f04:	b9 f0       	breq	.+46     	; 0x16f34 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xd8>
   16f06:	eb e1       	ldi	r30, 0x1B	; 27
   16f08:	ce 9f       	mul	r28, r30
   16f0a:	e0 01       	movw	r28, r0
   16f0c:	11 24       	eor	r1, r1
   16f0e:	e1 2c       	mov	r14, r1
   16f10:	f1 2c       	mov	r15, r1
   16f12:	44 24       	eor	r4, r4
   16f14:	43 94       	inc	r4
   16f16:	4c e7       	ldi	r20, 0x7C	; 124
   16f18:	c4 2e       	mov	r12, r20
   16f1a:	43 e1       	ldi	r20, 0x13	; 19
   16f1c:	d4 2e       	mov	r13, r20
   16f1e:	54 e1       	ldi	r21, 0x14	; 20
   16f20:	55 2e       	mov	r5, r21
   16f22:	67 e0       	ldi	r22, 0x07	; 7
   16f24:	66 2e       	mov	r6, r22
   16f26:	72 e0       	ldi	r23, 0x02	; 2
   16f28:	77 2e       	mov	r7, r23
   16f2a:	ed e0       	ldi	r30, 0x0D	; 13
   16f2c:	9e 2e       	mov	r9, r30
   16f2e:	fb ea       	ldi	r31, 0xAB	; 171
   16f30:	8f 2e       	mov	r8, r31
   16f32:	68 c1       	rjmp	.+720    	; 0x17204 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3a8>
   16f34:	e5 ef       	ldi	r30, 0xF5	; 245
   16f36:	fd e0       	ldi	r31, 0x0D	; 13
   16f38:	80 e0       	ldi	r24, 0x00	; 0
   16f3a:	91 91       	ld	r25, Z+
   16f3c:	91 11       	cpse	r25, r1
   16f3e:	8f 5f       	subi	r24, 0xFF	; 255
   16f40:	2d e0       	ldi	r18, 0x0D	; 13
   16f42:	ea 3f       	cpi	r30, 0xFA	; 250
   16f44:	f2 07       	cpc	r31, r18
   16f46:	c9 f7       	brne	.-14     	; 0x16f3a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xde>
   16f48:	82 30       	cpi	r24, 0x02	; 2
   16f4a:	18 f4       	brcc	.+6      	; 0x16f52 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xf6>
   16f4c:	91 e0       	ldi	r25, 0x01	; 1
   16f4e:	90 93 9d 0c 	sts	0x0C9D, r25	; 0x800c9d <_gRunning_Flush_Num>
   16f52:	90 91 9d 0c 	lds	r25, 0x0C9D	; 0x800c9d <_gRunning_Flush_Num>
   16f56:	99 23       	and	r25, r25
   16f58:	11 f0       	breq	.+4      	; 0x16f5e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x102>
   16f5a:	89 17       	cp	r24, r25
   16f5c:	48 f4       	brcc	.+18     	; 0x16f70 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x114>
   16f5e:	81 e0       	ldi	r24, 0x01	; 1
   16f60:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gRunning_Flush_Num>
   16f64:	6d e9       	ldi	r22, 0x9D	; 157
   16f66:	7c e0       	ldi	r23, 0x0C	; 12
   16f68:	87 eb       	ldi	r24, 0xB7	; 183
   16f6a:	9e e0       	ldi	r25, 0x0E	; 14
   16f6c:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16f70:	e0 91 9d 0c 	lds	r30, 0x0C9D	; 0x800c9d <_gRunning_Flush_Num>
   16f74:	f0 e0       	ldi	r31, 0x00	; 0
   16f76:	ec 50       	subi	r30, 0x0C	; 12
   16f78:	f2 4f       	sbci	r31, 0xF2	; 242
   16f7a:	e0 81       	ld	r30, Z
   16f7c:	e6 31       	cpi	r30, 0x16	; 22
   16f7e:	20 f4       	brcc	.+8      	; 0x16f88 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x12c>
   16f80:	80 91 fa 0d 	lds	r24, 0x0DFA	; 0x800dfa <_sExtra_Plot+0x76>
   16f84:	81 11       	cpse	r24, r1
   16f86:	b9 c2       	rjmp	.+1394   	; 0x174fa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x69e>
   16f88:	f0 e0       	ldi	r31, 0x00	; 0
   16f8a:	ec 53       	subi	r30, 0x3C	; 60
   16f8c:	fc 4e       	sbci	r31, 0xEC	; 236
   16f8e:	60 e0       	ldi	r22, 0x00	; 0
   16f90:	80 81       	ld	r24, Z
   16f92:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   16f96:	68 ec       	ldi	r22, 0xC8	; 200
   16f98:	70 e0       	ldi	r23, 0x00	; 0
   16f9a:	80 e0       	ldi	r24, 0x00	; 0
   16f9c:	90 e0       	ldi	r25, 0x00	; 0
   16f9e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   16fa2:	ab c2       	rjmp	.+1366   	; 0x174fa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x69e>
   16fa4:	14 30       	cpi	r17, 0x04	; 4
   16fa6:	08 f4       	brcc	.+2      	; 0x16faa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x14e>
   16fa8:	3c c1       	rjmp	.+632    	; 0x17222 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c6>
   16faa:	18 9d       	mul	r17, r8
   16fac:	b1 2c       	mov	r11, r1
   16fae:	11 24       	eor	r1, r1
   16fb0:	8b 2d       	mov	r24, r11
   16fb2:	86 95       	lsr	r24
   16fb4:	98 2f       	mov	r25, r24
   16fb6:	99 0f       	add	r25, r25
   16fb8:	89 0f       	add	r24, r25
   16fba:	18 1b       	sub	r17, r24
   16fbc:	6b 2d       	mov	r22, r11
   16fbe:	66 95       	lsr	r22
   16fc0:	11 23       	and	r17, r17
   16fc2:	09 f4       	brne	.+2      	; 0x16fc6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x16a>
   16fc4:	2b c1       	rjmp	.+598    	; 0x1721c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   16fc6:	bb 24       	eor	r11, r11
   16fc8:	b3 94       	inc	r11
   16fca:	b6 0e       	add	r11, r22
   16fcc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   16fd0:	81 30       	cpi	r24, 0x01	; 1
   16fd2:	89 f4       	brne	.+34     	; 0x16ff6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x19a>
   16fd4:	61 ec       	ldi	r22, 0xC1	; 193
   16fd6:	7e e2       	ldi	r23, 0x2E	; 46
   16fd8:	85 e5       	ldi	r24, 0x55	; 85
   16fda:	94 e1       	ldi	r25, 0x14	; 20
   16fdc:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   16fe0:	85 e5       	ldi	r24, 0x55	; 85
   16fe2:	94 e1       	ldi	r25, 0x14	; 20
   16fe4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   16fe8:	4a e0       	ldi	r20, 0x0A	; 10
   16fea:	50 e0       	ldi	r21, 0x00	; 0
   16fec:	6b 2d       	mov	r22, r11
   16fee:	85 e5       	ldi	r24, 0x55	; 85
   16ff0:	94 e1       	ldi	r25, 0x14	; 20
   16ff2:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   16ff6:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   16ffa:	81 11       	cpse	r24, r1
   16ffc:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   17000:	f6 01       	movw	r30, r12
   17002:	25 2d       	mov	r18, r5
   17004:	11 92       	st	Z+, r1
   17006:	2a 95       	dec	r18
   17008:	e9 f7       	brne	.-6      	; 0x17004 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1a8>
   1700a:	6b 2d       	mov	r22, r11
   1700c:	70 e0       	ldi	r23, 0x00	; 0
   1700e:	61 50       	subi	r22, 0x01	; 1
   17010:	71 09       	sbc	r23, r1
   17012:	66 9e       	mul	r6, r22
   17014:	c0 01       	movw	r24, r0
   17016:	67 9e       	mul	r6, r23
   17018:	90 0d       	add	r25, r0
   1701a:	11 24       	eor	r1, r1
   1701c:	86 5b       	subi	r24, 0xB6	; 182
   1701e:	9c 4e       	sbci	r25, 0xEC	; 236
   17020:	fc 01       	movw	r30, r24
   17022:	e1 5a       	subi	r30, 0xA1	; 161
   17024:	ff 4f       	sbci	r31, 0xFF	; 255
   17026:	20 81       	ld	r18, Z
   17028:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
   1702c:	31 96       	adiw	r30, 0x01	; 1
   1702e:	20 81       	ld	r18, Z
   17030:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
   17034:	31 96       	adiw	r30, 0x01	; 1
   17036:	20 81       	ld	r18, Z
   17038:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
   1703c:	31 96       	adiw	r30, 0x01	; 1
   1703e:	20 81       	ld	r18, Z
   17040:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
   17044:	31 96       	adiw	r30, 0x01	; 1
   17046:	20 81       	ld	r18, Z
   17048:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
   1704c:	31 96       	adiw	r30, 0x01	; 1
   1704e:	20 81       	ld	r18, Z
   17050:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
   17054:	70 92 82 13 	sts	0x1382, r7	; 0x801382 <_sRuble_Parameters+0x38>
   17058:	00 93 83 13 	sts	0x1383, r16	; 0x801383 <_sRuble_Parameters+0x39>
   1705c:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   17060:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
   17064:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   17068:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
   1706c:	10 93 87 13 	sts	0x1387, r17	; 0x801387 <_sRuble_Parameters+0x3d>
   17070:	40 e0       	ldi	r20, 0x00	; 0
   17072:	50 e0       	ldi	r21, 0x00	; 0
   17074:	14 2f       	mov	r17, r20
   17076:	a1 2c       	mov	r10, r1
   17078:	b1 2c       	mov	r11, r1
   1707a:	94 9e       	mul	r9, r20
   1707c:	b0 01       	movw	r22, r0
   1707e:	95 9e       	mul	r9, r21
   17080:	70 0d       	add	r23, r0
   17082:	11 24       	eor	r1, r1
   17084:	69 54       	subi	r22, 0x49	; 73
   17086:	74 4f       	sbci	r23, 0xF4	; 244
   17088:	2b 2d       	mov	r18, r11
   1708a:	30 e0       	ldi	r19, 0x00	; 0
   1708c:	fb 01       	movw	r30, r22
   1708e:	e2 0f       	add	r30, r18
   17090:	f3 1f       	adc	r31, r19
   17092:	28 0f       	add	r18, r24
   17094:	39 1f       	adc	r19, r25
   17096:	d9 01       	movw	r26, r18
   17098:	a1 5a       	subi	r26, 0xA1	; 161
   1709a:	bf 4f       	sbci	r27, 0xFF	; 255
   1709c:	31 81       	ldd	r19, Z+1	; 0x01
   1709e:	2c 91       	ld	r18, X
   170a0:	32 17       	cp	r19, r18
   170a2:	19 f0       	breq	.+6      	; 0x170aa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x24e>
   170a4:	a1 2c       	mov	r10, r1
   170a6:	36 e0       	ldi	r19, 0x06	; 6
   170a8:	b3 2e       	mov	r11, r19
   170aa:	a3 94       	inc	r10
   170ac:	b3 94       	inc	r11
   170ae:	e5 e0       	ldi	r30, 0x05	; 5
   170b0:	eb 15       	cp	r30, r11
   170b2:	50 f7       	brcc	.-44     	; 0x17088 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x22c>
   170b4:	f6 e0       	ldi	r31, 0x06	; 6
   170b6:	af 12       	cpse	r10, r31
   170b8:	b7 c0       	rjmp	.+366    	; 0x17228 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3cc>
   170ba:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   170be:	81 30       	cpi	r24, 0x01	; 1
   170c0:	89 f4       	brne	.+34     	; 0x170e4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x288>
   170c2:	6b ea       	ldi	r22, 0xAB	; 171
   170c4:	7e e2       	ldi	r23, 0x2E	; 46
   170c6:	85 e5       	ldi	r24, 0x55	; 85
   170c8:	94 e1       	ldi	r25, 0x14	; 20
   170ca:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   170ce:	4a e0       	ldi	r20, 0x0A	; 10
   170d0:	50 e0       	ldi	r21, 0x00	; 0
   170d2:	61 2f       	mov	r22, r17
   170d4:	85 e5       	ldi	r24, 0x55	; 85
   170d6:	94 e1       	ldi	r25, 0x14	; 20
   170d8:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   170dc:	85 e5       	ldi	r24, 0x55	; 85
   170de:	94 e1       	ldi	r25, 0x14	; 20
   170e0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   170e4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   170e8:	81 30       	cpi	r24, 0x01	; 1
   170ea:	51 f4       	brne	.+20     	; 0x17100 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2a4>
   170ec:	67 e8       	ldi	r22, 0x87	; 135
   170ee:	7e e2       	ldi	r23, 0x2E	; 46
   170f0:	85 e5       	ldi	r24, 0x55	; 85
   170f2:	94 e1       	ldi	r25, 0x14	; 20
   170f4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   170f8:	85 e5       	ldi	r24, 0x55	; 85
   170fa:	94 e1       	ldi	r25, 0x14	; 20
   170fc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17100:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   17104:	8c e0       	ldi	r24, 0x0C	; 12
   17106:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   1710a:	88 eb       	ldi	r24, 0xB8	; 184
   1710c:	9b e0       	ldi	r25, 0x0B	; 11
   1710e:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   17112:	88 23       	and	r24, r24
   17114:	09 f4       	brne	.+2      	; 0x17118 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2bc>
   17116:	7f c1       	rjmp	.+766    	; 0x17416 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5ba>
   17118:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   1711c:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17120:	88 23       	and	r24, r24
   17122:	09 f4       	brne	.+2      	; 0x17126 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2ca>
   17124:	2a c1       	rjmp	.+596    	; 0x1737a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x51e>
   17126:	a1 2e       	mov	r10, r17
   17128:	b1 2c       	mov	r11, r1
   1712a:	91 30       	cpi	r25, 0x01	; 1
   1712c:	89 f5       	brne	.+98     	; 0x17190 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x334>
   1712e:	61 e7       	ldi	r22, 0x71	; 113
   17130:	7e e2       	ldi	r23, 0x2E	; 46
   17132:	85 e5       	ldi	r24, 0x55	; 85
   17134:	94 e1       	ldi	r25, 0x14	; 20
   17136:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1713a:	4a e0       	ldi	r20, 0x0A	; 10
   1713c:	50 e0       	ldi	r21, 0x00	; 0
   1713e:	60 e9       	ldi	r22, 0x90	; 144
   17140:	73 e1       	ldi	r23, 0x13	; 19
   17142:	85 e5       	ldi	r24, 0x55	; 85
   17144:	94 e1       	ldi	r25, 0x14	; 20
   17146:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   1714a:	85 e5       	ldi	r24, 0x55	; 85
   1714c:	94 e1       	ldi	r25, 0x14	; 20
   1714e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17152:	85 e5       	ldi	r24, 0x55	; 85
   17154:	94 e1       	ldi	r25, 0x14	; 20
   17156:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1715a:	63 e5       	ldi	r22, 0x53	; 83
   1715c:	7e e2       	ldi	r23, 0x2E	; 46
   1715e:	85 e5       	ldi	r24, 0x55	; 85
   17160:	94 e1       	ldi	r25, 0x14	; 20
   17162:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17166:	9a 9c       	mul	r9, r10
   17168:	b0 01       	movw	r22, r0
   1716a:	9b 9c       	mul	r9, r11
   1716c:	70 0d       	add	r23, r0
   1716e:	11 24       	eor	r1, r1
   17170:	68 54       	subi	r22, 0x48	; 72
   17172:	74 4f       	sbci	r23, 0xF4	; 244
   17174:	47 e0       	ldi	r20, 0x07	; 7
   17176:	50 e0       	ldi	r21, 0x00	; 0
   17178:	85 e5       	ldi	r24, 0x55	; 85
   1717a:	94 e1       	ldi	r25, 0x14	; 20
   1717c:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   17180:	85 e5       	ldi	r24, 0x55	; 85
   17182:	94 e1       	ldi	r25, 0x14	; 20
   17184:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17188:	85 e5       	ldi	r24, 0x55	; 85
   1718a:	94 e1       	ldi	r25, 0x14	; 20
   1718c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17190:	a0 e9       	ldi	r26, 0x90	; 144
   17192:	b3 e1       	ldi	r27, 0x13	; 19
   17194:	8d e0       	ldi	r24, 0x0D	; 13
   17196:	18 9f       	mul	r17, r24
   17198:	90 01       	movw	r18, r0
   1719a:	11 24       	eor	r1, r1
   1719c:	80 e0       	ldi	r24, 0x00	; 0
   1719e:	90 e0       	ldi	r25, 0x00	; 0
   171a0:	4d 91       	ld	r20, X+
   171a2:	fc 01       	movw	r30, r24
   171a4:	e2 0f       	add	r30, r18
   171a6:	f3 1f       	adc	r31, r19
   171a8:	e9 54       	subi	r30, 0x49	; 73
   171aa:	f4 4f       	sbci	r31, 0xF4	; 244
   171ac:	51 81       	ldd	r21, Z+1	; 0x01
   171ae:	54 13       	cpse	r21, r20
   171b0:	43 c0       	rjmp	.+134    	; 0x17238 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3dc>
   171b2:	01 96       	adiw	r24, 0x01	; 1
   171b4:	86 30       	cpi	r24, 0x06	; 6
   171b6:	91 05       	cpc	r25, r1
   171b8:	99 f7       	brne	.-26     	; 0x171a0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x344>
   171ba:	9a 9c       	mul	r9, r10
   171bc:	f0 01       	movw	r30, r0
   171be:	9b 9c       	mul	r9, r11
   171c0:	f0 0d       	add	r31, r0
   171c2:	11 24       	eor	r1, r1
   171c4:	e9 54       	subi	r30, 0x49	; 73
   171c6:	f4 4f       	sbci	r31, 0xF4	; 244
   171c8:	43 86       	std	Z+11, r4	; 0x0b
   171ca:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   171ce:	90 e0       	ldi	r25, 0x00	; 0
   171d0:	98 2f       	mov	r25, r24
   171d2:	88 27       	eor	r24, r24
   171d4:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   171d8:	82 2b       	or	r24, r18
   171da:	91 87       	std	Z+9, r25	; 0x09
   171dc:	80 87       	std	Z+8, r24	; 0x08
   171de:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   171e2:	08 13       	cpse	r16, r24
   171e4:	7a c0       	rjmp	.+244    	; 0x172da <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x47e>
   171e6:	68 ee       	ldi	r22, 0xE8	; 232
   171e8:	73 e0       	ldi	r23, 0x03	; 3
   171ea:	80 e0       	ldi	r24, 0x00	; 0
   171ec:	90 e0       	ldi	r25, 0x00	; 0
   171ee:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   171f2:	31 2e       	mov	r3, r17
   171f4:	9f ef       	ldi	r25, 0xFF	; 255
   171f6:	e9 1a       	sub	r14, r25
   171f8:	f9 0a       	sbc	r15, r25
   171fa:	e5 e0       	ldi	r30, 0x05	; 5
   171fc:	ee 16       	cp	r14, r30
   171fe:	f1 04       	cpc	r15, r1
   17200:	09 f4       	brne	.+2      	; 0x17204 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3a8>
   17202:	6d c1       	rjmp	.+730    	; 0x174de <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x682>
   17204:	f7 01       	movw	r30, r14
   17206:	ec 0f       	add	r30, r28
   17208:	fd 1f       	adc	r31, r29
   1720a:	ec 57       	subi	r30, 0x7C	; 124
   1720c:	f2 4f       	sbci	r31, 0xF2	; 242
   1720e:	15 81       	ldd	r17, Z+5	; 0x05
   17210:	8f ef       	ldi	r24, 0xFF	; 255
   17212:	81 0f       	add	r24, r17
   17214:	85 31       	cpi	r24, 0x15	; 21
   17216:	08 f0       	brcs	.+2      	; 0x1721a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3be>
   17218:	4e c1       	rjmp	.+668    	; 0x174b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x65a>
   1721a:	c4 ce       	rjmp	.-632    	; 0x16fa4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x148>
   1721c:	b6 2e       	mov	r11, r22
   1721e:	13 e0       	ldi	r17, 0x03	; 3
   17220:	d5 ce       	rjmp	.-598    	; 0x16fcc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x170>
   17222:	bb 24       	eor	r11, r11
   17224:	b3 94       	inc	r11
   17226:	d2 ce       	rjmp	.-604    	; 0x16fcc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x170>
   17228:	4f 5f       	subi	r20, 0xFF	; 255
   1722a:	5f 4f       	sbci	r21, 0xFF	; 255
   1722c:	47 30       	cpi	r20, 0x07	; 7
   1722e:	51 05       	cpc	r21, r1
   17230:	09 f0       	breq	.+2      	; 0x17234 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d8>
   17232:	20 cf       	rjmp	.-448    	; 0x17074 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x218>
   17234:	13 2d       	mov	r17, r3
   17236:	41 cf       	rjmp	.-382    	; 0x170ba <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x25e>
   17238:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1723c:	81 30       	cpi	r24, 0x01	; 1
   1723e:	51 f4       	brne	.+20     	; 0x17254 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3f8>
   17240:	68 e2       	ldi	r22, 0x28	; 40
   17242:	7e e2       	ldi	r23, 0x2E	; 46
   17244:	85 e5       	ldi	r24, 0x55	; 85
   17246:	94 e1       	ldi	r25, 0x14	; 20
   17248:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1724c:	85 e5       	ldi	r24, 0x55	; 85
   1724e:	94 e1       	ldi	r25, 0x14	; 20
   17250:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17254:	86 e0       	ldi	r24, 0x06	; 6
   17256:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   1725a:	84 e6       	ldi	r24, 0x64	; 100
   1725c:	90 e0       	ldi	r25, 0x00	; 0
   1725e:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   17262:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   17266:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1726a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1726e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17272:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17276:	a0 62       	ori	r26, 0x20	; 32
   17278:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1727c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17280:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17284:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17288:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   1728c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17290:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17294:	82 60       	ori	r24, 0x02	; 2
   17296:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1729a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1729e:	00 e0       	ldi	r16, 0x00	; 0
   172a0:	10 e0       	ldi	r17, 0x00	; 0
   172a2:	fe 01       	movw	r30, r28
   172a4:	e0 0f       	add	r30, r16
   172a6:	f1 1f       	adc	r31, r17
   172a8:	ec 57       	subi	r30, 0x7C	; 124
   172aa:	f2 4f       	sbci	r31, 0xF2	; 242
   172ac:	e5 81       	ldd	r30, Z+5	; 0x05
   172ae:	e6 31       	cpi	r30, 0x16	; 22
   172b0:	68 f0       	brcs	.+26     	; 0x172cc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x470>
   172b2:	f0 e0       	ldi	r31, 0x00	; 0
   172b4:	ec 53       	subi	r30, 0x3C	; 60
   172b6:	fc 4e       	sbci	r31, 0xEC	; 236
   172b8:	61 e0       	ldi	r22, 0x01	; 1
   172ba:	80 81       	ld	r24, Z
   172bc:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   172c0:	68 ec       	ldi	r22, 0xC8	; 200
   172c2:	70 e0       	ldi	r23, 0x00	; 0
   172c4:	80 e0       	ldi	r24, 0x00	; 0
   172c6:	90 e0       	ldi	r25, 0x00	; 0
   172c8:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   172cc:	0f 5f       	subi	r16, 0xFF	; 255
   172ce:	1f 4f       	sbci	r17, 0xFF	; 255
   172d0:	05 30       	cpi	r16, 0x05	; 5
   172d2:	11 05       	cpc	r17, r1
   172d4:	31 f7       	brne	.-52     	; 0x172a2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x446>
   172d6:	80 e0       	ldi	r24, 0x00	; 0
   172d8:	11 c1       	rjmp	.+546    	; 0x174fc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6a0>
   172da:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   172de:	81 30       	cpi	r24, 0x01	; 1
   172e0:	51 f4       	brne	.+20     	; 0x172f6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x49a>
   172e2:	65 e1       	ldi	r22, 0x15	; 21
   172e4:	7e e2       	ldi	r23, 0x2E	; 46
   172e6:	85 e5       	ldi	r24, 0x55	; 85
   172e8:	94 e1       	ldi	r25, 0x14	; 20
   172ea:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   172ee:	85 e5       	ldi	r24, 0x55	; 85
   172f0:	94 e1       	ldi	r25, 0x14	; 20
   172f2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   172f6:	86 e0       	ldi	r24, 0x06	; 6
   172f8:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   172fc:	84 e6       	ldi	r24, 0x64	; 100
   172fe:	90 e0       	ldi	r25, 0x00	; 0
   17300:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   17304:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   17308:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1730c:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17310:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17314:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17318:	a0 62       	ori	r26, 0x20	; 32
   1731a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1731e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17322:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17326:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1732a:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   1732e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17332:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17336:	82 60       	ori	r24, 0x02	; 2
   17338:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1733c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17340:	00 e0       	ldi	r16, 0x00	; 0
   17342:	10 e0       	ldi	r17, 0x00	; 0
   17344:	fe 01       	movw	r30, r28
   17346:	e0 0f       	add	r30, r16
   17348:	f1 1f       	adc	r31, r17
   1734a:	ec 57       	subi	r30, 0x7C	; 124
   1734c:	f2 4f       	sbci	r31, 0xF2	; 242
   1734e:	e5 81       	ldd	r30, Z+5	; 0x05
   17350:	e6 31       	cpi	r30, 0x16	; 22
   17352:	68 f0       	brcs	.+26     	; 0x1736e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x512>
   17354:	f0 e0       	ldi	r31, 0x00	; 0
   17356:	ec 53       	subi	r30, 0x3C	; 60
   17358:	fc 4e       	sbci	r31, 0xEC	; 236
   1735a:	61 e0       	ldi	r22, 0x01	; 1
   1735c:	80 81       	ld	r24, Z
   1735e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   17362:	68 ec       	ldi	r22, 0xC8	; 200
   17364:	70 e0       	ldi	r23, 0x00	; 0
   17366:	80 e0       	ldi	r24, 0x00	; 0
   17368:	90 e0       	ldi	r25, 0x00	; 0
   1736a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1736e:	0f 5f       	subi	r16, 0xFF	; 255
   17370:	1f 4f       	sbci	r17, 0xFF	; 255
   17372:	05 30       	cpi	r16, 0x05	; 5
   17374:	11 05       	cpc	r17, r1
   17376:	31 f7       	brne	.-52     	; 0x17344 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4e8>
   17378:	ae cf       	rjmp	.-164    	; 0x172d6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x47a>
   1737a:	91 30       	cpi	r25, 0x01	; 1
   1737c:	51 f4       	brne	.+20     	; 0x17392 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   1737e:	6a ed       	ldi	r22, 0xDA	; 218
   17380:	7d e2       	ldi	r23, 0x2D	; 45
   17382:	85 e5       	ldi	r24, 0x55	; 85
   17384:	94 e1       	ldi	r25, 0x14	; 20
   17386:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1738a:	85 e5       	ldi	r24, 0x55	; 85
   1738c:	94 e1       	ldi	r25, 0x14	; 20
   1738e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17392:	86 e0       	ldi	r24, 0x06	; 6
   17394:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   17398:	84 e6       	ldi	r24, 0x64	; 100
   1739a:	90 e0       	ldi	r25, 0x00	; 0
   1739c:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   173a0:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   173a4:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   173a8:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   173ac:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   173b0:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   173b4:	a0 62       	ori	r26, 0x20	; 32
   173b6:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   173ba:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   173be:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   173c2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   173c6:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   173ca:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   173ce:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   173d2:	82 60       	ori	r24, 0x02	; 2
   173d4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   173d8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   173dc:	00 e0       	ldi	r16, 0x00	; 0
   173de:	10 e0       	ldi	r17, 0x00	; 0
   173e0:	fe 01       	movw	r30, r28
   173e2:	e0 0f       	add	r30, r16
   173e4:	f1 1f       	adc	r31, r17
   173e6:	ec 57       	subi	r30, 0x7C	; 124
   173e8:	f2 4f       	sbci	r31, 0xF2	; 242
   173ea:	e5 81       	ldd	r30, Z+5	; 0x05
   173ec:	e6 31       	cpi	r30, 0x16	; 22
   173ee:	68 f0       	brcs	.+26     	; 0x1740a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5ae>
   173f0:	f0 e0       	ldi	r31, 0x00	; 0
   173f2:	ec 53       	subi	r30, 0x3C	; 60
   173f4:	fc 4e       	sbci	r31, 0xEC	; 236
   173f6:	61 e0       	ldi	r22, 0x01	; 1
   173f8:	80 81       	ld	r24, Z
   173fa:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   173fe:	68 ec       	ldi	r22, 0xC8	; 200
   17400:	70 e0       	ldi	r23, 0x00	; 0
   17402:	80 e0       	ldi	r24, 0x00	; 0
   17404:	90 e0       	ldi	r25, 0x00	; 0
   17406:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1740a:	0f 5f       	subi	r16, 0xFF	; 255
   1740c:	1f 4f       	sbci	r17, 0xFF	; 255
   1740e:	05 30       	cpi	r16, 0x05	; 5
   17410:	11 05       	cpc	r17, r1
   17412:	31 f7       	brne	.-52     	; 0x173e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x584>
   17414:	60 cf       	rjmp	.-320    	; 0x172d6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x47a>
   17416:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1741a:	81 30       	cpi	r24, 0x01	; 1
   1741c:	51 f4       	brne	.+20     	; 0x17432 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5d6>
   1741e:	6f e9       	ldi	r22, 0x9F	; 159
   17420:	7d e2       	ldi	r23, 0x2D	; 45
   17422:	85 e5       	ldi	r24, 0x55	; 85
   17424:	94 e1       	ldi	r25, 0x14	; 20
   17426:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1742a:	85 e5       	ldi	r24, 0x55	; 85
   1742c:	94 e1       	ldi	r25, 0x14	; 20
   1742e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17432:	86 e0       	ldi	r24, 0x06	; 6
   17434:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   17438:	84 e6       	ldi	r24, 0x64	; 100
   1743a:	90 e0       	ldi	r25, 0x00	; 0
   1743c:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   17440:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   17444:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17448:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1744c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17450:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17454:	a0 62       	ori	r26, 0x20	; 32
   17456:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1745a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1745e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17462:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17466:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0xb2>
   1746a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1746e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17472:	82 60       	ori	r24, 0x02	; 2
   17474:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17478:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1747c:	00 e0       	ldi	r16, 0x00	; 0
   1747e:	10 e0       	ldi	r17, 0x00	; 0
   17480:	fe 01       	movw	r30, r28
   17482:	e0 0f       	add	r30, r16
   17484:	f1 1f       	adc	r31, r17
   17486:	ec 57       	subi	r30, 0x7C	; 124
   17488:	f2 4f       	sbci	r31, 0xF2	; 242
   1748a:	e5 81       	ldd	r30, Z+5	; 0x05
   1748c:	e6 31       	cpi	r30, 0x16	; 22
   1748e:	68 f0       	brcs	.+26     	; 0x174aa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x64e>
   17490:	f0 e0       	ldi	r31, 0x00	; 0
   17492:	ec 53       	subi	r30, 0x3C	; 60
   17494:	fc 4e       	sbci	r31, 0xEC	; 236
   17496:	61 e0       	ldi	r22, 0x01	; 1
   17498:	80 81       	ld	r24, Z
   1749a:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1749e:	68 ec       	ldi	r22, 0xC8	; 200
   174a0:	70 e0       	ldi	r23, 0x00	; 0
   174a2:	80 e0       	ldi	r24, 0x00	; 0
   174a4:	90 e0       	ldi	r25, 0x00	; 0
   174a6:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   174aa:	0f 5f       	subi	r16, 0xFF	; 255
   174ac:	1f 4f       	sbci	r17, 0xFF	; 255
   174ae:	05 30       	cpi	r16, 0x05	; 5
   174b0:	11 05       	cpc	r17, r1
   174b2:	31 f7       	brne	.-52     	; 0x17480 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x624>
   174b4:	10 cf       	rjmp	.-480    	; 0x172d6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x47a>
   174b6:	16 31       	cpi	r17, 0x16	; 22
   174b8:	08 f4       	brcc	.+2      	; 0x174bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x660>
   174ba:	9c ce       	rjmp	.-712    	; 0x171f4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x398>
   174bc:	61 e0       	ldi	r22, 0x01	; 1
   174be:	01 11       	cpse	r16, r1
   174c0:	60 e0       	ldi	r22, 0x00	; 0
   174c2:	e1 2f       	mov	r30, r17
   174c4:	f0 e0       	ldi	r31, 0x00	; 0
   174c6:	ec 53       	subi	r30, 0x3C	; 60
   174c8:	fc 4e       	sbci	r31, 0xEC	; 236
   174ca:	80 81       	ld	r24, Z
   174cc:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   174d0:	68 ec       	ldi	r22, 0xC8	; 200
   174d2:	70 e0       	ldi	r23, 0x00	; 0
   174d4:	80 e0       	ldi	r24, 0x00	; 0
   174d6:	90 e0       	ldi	r25, 0x00	; 0
   174d8:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   174dc:	8b ce       	rjmp	.-746    	; 0x171f4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x398>
   174de:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   174e2:	81 30       	cpi	r24, 0x01	; 1
   174e4:	51 f4       	brne	.+20     	; 0x174fa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x69e>
   174e6:	60 e8       	ldi	r22, 0x80	; 128
   174e8:	7d e2       	ldi	r23, 0x2D	; 45
   174ea:	85 e5       	ldi	r24, 0x55	; 85
   174ec:	94 e1       	ldi	r25, 0x14	; 20
   174ee:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   174f2:	85 e5       	ldi	r24, 0x55	; 85
   174f4:	94 e1       	ldi	r25, 0x14	; 20
   174f6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   174fa:	81 e0       	ldi	r24, 0x01	; 1
   174fc:	df 91       	pop	r29
   174fe:	cf 91       	pop	r28
   17500:	1f 91       	pop	r17
   17502:	0f 91       	pop	r16
   17504:	ff 90       	pop	r15
   17506:	ef 90       	pop	r14
   17508:	df 90       	pop	r13
   1750a:	cf 90       	pop	r12
   1750c:	bf 90       	pop	r11
   1750e:	af 90       	pop	r10
   17510:	9f 90       	pop	r9
   17512:	8f 90       	pop	r8
   17514:	7f 90       	pop	r7
   17516:	6f 90       	pop	r6
   17518:	5f 90       	pop	r5
   1751a:	4f 90       	pop	r4
   1751c:	3f 90       	pop	r3
   1751e:	08 95       	ret

00017520 <_Z20Wireless_Pump_On_Offhh>:
   17520:	6f 92       	push	r6
   17522:	7f 92       	push	r7
   17524:	8f 92       	push	r8
   17526:	9f 92       	push	r9
   17528:	af 92       	push	r10
   1752a:	bf 92       	push	r11
   1752c:	cf 92       	push	r12
   1752e:	df 92       	push	r13
   17530:	ef 92       	push	r14
   17532:	ff 92       	push	r15
   17534:	0f 93       	push	r16
   17536:	1f 93       	push	r17
   17538:	cf 93       	push	r28
   1753a:	df 93       	push	r29
   1753c:	78 2e       	mov	r7, r24
   1753e:	c6 2f       	mov	r28, r22
   17540:	80 91 6d 0d 	lds	r24, 0x0D6D	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17544:	8f 5f       	subi	r24, 0xFF	; 255
   17546:	80 93 6d 0d 	sts	0x0D6D, r24	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1754a:	22 e0       	ldi	r18, 0x02	; 2
   1754c:	72 16       	cp	r7, r18
   1754e:	39 f0       	breq	.+14     	; 0x1755e <_Z20Wireless_Pump_On_Offhh+0x3e>
   17550:	34 e0       	ldi	r19, 0x04	; 4
   17552:	73 16       	cp	r7, r19
   17554:	21 f0       	breq	.+8      	; 0x1755e <_Z20Wireless_Pump_On_Offhh+0x3e>
   17556:	81 e0       	ldi	r24, 0x01	; 1
   17558:	78 12       	cpse	r7, r24
   1755a:	07 c3       	rjmp	.+1550   	; 0x17b6a <_Z20Wireless_Pump_On_Offhh+0x64a>
   1755c:	42 c2       	rjmp	.+1156   	; 0x179e2 <_Z20Wireless_Pump_On_Offhh+0x4c2>
   1755e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17562:	81 30       	cpi	r24, 0x01	; 1
   17564:	89 f4       	brne	.+34     	; 0x17588 <_Z20Wireless_Pump_On_Offhh+0x68>
   17566:	63 e1       	ldi	r22, 0x13	; 19
   17568:	7d e2       	ldi	r23, 0x2D	; 45
   1756a:	85 e5       	ldi	r24, 0x55	; 85
   1756c:	94 e1       	ldi	r25, 0x14	; 20
   1756e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17572:	4a e0       	ldi	r20, 0x0A	; 10
   17574:	50 e0       	ldi	r21, 0x00	; 0
   17576:	6c 2f       	mov	r22, r28
   17578:	85 e5       	ldi	r24, 0x55	; 85
   1757a:	94 e1       	ldi	r25, 0x14	; 20
   1757c:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   17580:	85 e5       	ldi	r24, 0x55	; 85
   17582:	94 e1       	ldi	r25, 0x14	; 20
   17584:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17588:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   1758c:	81 11       	cpse	r24, r1
   1758e:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   17592:	84 e1       	ldi	r24, 0x14	; 20
   17594:	ec e7       	ldi	r30, 0x7C	; 124
   17596:	f3 e1       	ldi	r31, 0x13	; 19
   17598:	df 01       	movw	r26, r30
   1759a:	1d 92       	st	X+, r1
   1759c:	8a 95       	dec	r24
   1759e:	e9 f7       	brne	.-6      	; 0x1759a <_Z20Wireless_Pump_On_Offhh+0x7a>
   175a0:	0c 2f       	mov	r16, r28
   175a2:	10 e0       	ldi	r17, 0x00	; 0
   175a4:	bb e0       	ldi	r27, 0x0B	; 11
   175a6:	cb 9f       	mul	r28, r27
   175a8:	c0 01       	movw	r24, r0
   175aa:	11 24       	eor	r1, r1
   175ac:	fc 01       	movw	r30, r24
   175ae:	ea 56       	subi	r30, 0x6A	; 106
   175b0:	f4 4f       	sbci	r31, 0xF4	; 244
   175b2:	21 81       	ldd	r18, Z+1	; 0x01
   175b4:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x32>
   175b8:	22 81       	ldd	r18, Z+2	; 0x02
   175ba:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x33>
   175be:	23 81       	ldd	r18, Z+3	; 0x03
   175c0:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x34>
   175c4:	24 81       	ldd	r18, Z+4	; 0x04
   175c6:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x35>
   175ca:	25 81       	ldd	r18, Z+5	; 0x05
   175cc:	20 93 80 13 	sts	0x1380, r18	; 0x801380 <_sRuble_Parameters+0x36>
   175d0:	26 81       	ldd	r18, Z+6	; 0x06
   175d2:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x37>
   175d6:	21 e0       	ldi	r18, 0x01	; 1
   175d8:	20 93 82 13 	sts	0x1382, r18	; 0x801382 <_sRuble_Parameters+0x38>
   175dc:	70 92 83 13 	sts	0x1383, r7	; 0x801383 <_sRuble_Parameters+0x39>
   175e0:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   175e4:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3a>
   175e8:	20 91 60 13 	lds	r18, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   175ec:	20 93 86 13 	sts	0x1386, r18	; 0x801386 <_sRuble_Parameters+0x3c>
   175f0:	21 e0       	ldi	r18, 0x01	; 1
   175f2:	2c 0f       	add	r18, r28
   175f4:	20 93 87 13 	sts	0x1387, r18	; 0x801387 <_sRuble_Parameters+0x3d>
   175f8:	23 e5       	ldi	r18, 0x53	; 83
   175fa:	20 93 88 13 	sts	0x1388, r18	; 0x801388 <_sRuble_Parameters+0x3e>
   175fe:	4c 01       	movw	r8, r24
   17600:	d0 e0       	ldi	r29, 0x00	; 0
   17602:	9c 01       	movw	r18, r24
   17604:	29 56       	subi	r18, 0x69	; 105
   17606:	34 4f       	sbci	r19, 0xF4	; 244
   17608:	79 01       	movw	r14, r18
   1760a:	df 5f       	subi	r29, 0xFF	; 255
   1760c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17610:	81 30       	cpi	r24, 0x01	; 1
   17612:	51 f4       	brne	.+20     	; 0x17628 <_Z20Wireless_Pump_On_Offhh+0x108>
   17614:	6c ee       	ldi	r22, 0xEC	; 236
   17616:	7c e2       	ldi	r23, 0x2C	; 44
   17618:	85 e5       	ldi	r24, 0x55	; 85
   1761a:	94 e1       	ldi	r25, 0x14	; 20
   1761c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17620:	85 e5       	ldi	r24, 0x55	; 85
   17622:	94 e1       	ldi	r25, 0x14	; 20
   17624:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17628:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   1762c:	10 92 a3 0c 	sts	0x0CA3, r1	; 0x800ca3 <_gTime_To_Wait_Lora_Resp+0x1>
   17630:	10 92 a2 0c 	sts	0x0CA2, r1	; 0x800ca2 <_gTime_To_Wait_Lora_Resp>
   17634:	8d e0       	ldi	r24, 0x0D	; 13
   17636:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   1763a:	61 2c       	mov	r6, r1
   1763c:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   17640:	88 23       	and	r24, r24
   17642:	09 f4       	brne	.+2      	; 0x17646 <_Z20Wireless_Pump_On_Offhh+0x126>
   17644:	68 c1       	rjmp	.+720    	; 0x17916 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17646:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1764a:	81 30       	cpi	r24, 0x01	; 1
   1764c:	71 f4       	brne	.+28     	; 0x1766a <_Z20Wireless_Pump_On_Offhh+0x14a>
   1764e:	60 ed       	ldi	r22, 0xD0	; 208
   17650:	7c e2       	ldi	r23, 0x2C	; 44
   17652:	85 e5       	ldi	r24, 0x55	; 85
   17654:	94 e1       	ldi	r25, 0x14	; 20
   17656:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1765a:	85 e5       	ldi	r24, 0x55	; 85
   1765c:	94 e1       	ldi	r25, 0x14	; 20
   1765e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17662:	85 e5       	ldi	r24, 0x55	; 85
   17664:	94 e1       	ldi	r25, 0x14	; 20
   17666:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1766a:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   1766e:	88 23       	and	r24, r24
   17670:	09 f4       	brne	.+2      	; 0x17674 <_Z20Wireless_Pump_On_Offhh+0x154>
   17672:	51 c1       	rjmp	.+674    	; 0x17916 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17674:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17678:	81 30       	cpi	r24, 0x01	; 1
   1767a:	59 f5       	brne	.+86     	; 0x176d2 <_Z20Wireless_Pump_On_Offhh+0x1b2>
   1767c:	67 eb       	ldi	r22, 0xB7	; 183
   1767e:	7c e2       	ldi	r23, 0x2C	; 44
   17680:	85 e5       	ldi	r24, 0x55	; 85
   17682:	94 e1       	ldi	r25, 0x14	; 20
   17684:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17688:	4a e0       	ldi	r20, 0x0A	; 10
   1768a:	50 e0       	ldi	r21, 0x00	; 0
   1768c:	60 e9       	ldi	r22, 0x90	; 144
   1768e:	73 e1       	ldi	r23, 0x13	; 19
   17690:	85 e5       	ldi	r24, 0x55	; 85
   17692:	94 e1       	ldi	r25, 0x14	; 20
   17694:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   17698:	85 e5       	ldi	r24, 0x55	; 85
   1769a:	94 e1       	ldi	r25, 0x14	; 20
   1769c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   176a0:	85 e5       	ldi	r24, 0x55	; 85
   176a2:	94 e1       	ldi	r25, 0x14	; 20
   176a4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   176a8:	60 e9       	ldi	r22, 0x90	; 144
   176aa:	7c e2       	ldi	r23, 0x2C	; 44
   176ac:	85 e5       	ldi	r24, 0x55	; 85
   176ae:	94 e1       	ldi	r25, 0x14	; 20
   176b0:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   176b4:	47 e0       	ldi	r20, 0x07	; 7
   176b6:	50 e0       	ldi	r21, 0x00	; 0
   176b8:	b7 01       	movw	r22, r14
   176ba:	85 e5       	ldi	r24, 0x55	; 85
   176bc:	94 e1       	ldi	r25, 0x14	; 20
   176be:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   176c2:	85 e5       	ldi	r24, 0x55	; 85
   176c4:	94 e1       	ldi	r25, 0x14	; 20
   176c6:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   176ca:	85 e5       	ldi	r24, 0x55	; 85
   176cc:	94 e1       	ldi	r25, 0x14	; 20
   176ce:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   176d2:	80 e9       	ldi	r24, 0x90	; 144
   176d4:	a8 2e       	mov	r10, r24
   176d6:	83 e1       	ldi	r24, 0x13	; 19
   176d8:	b8 2e       	mov	r11, r24
   176da:	c1 2c       	mov	r12, r1
   176dc:	d1 2c       	mov	r13, r1
   176de:	d5 01       	movw	r26, r10
   176e0:	8d 91       	ld	r24, X+
   176e2:	5d 01       	movw	r10, r26
   176e4:	f4 01       	movw	r30, r8
   176e6:	ec 0d       	add	r30, r12
   176e8:	fd 1d       	adc	r31, r13
   176ea:	ea 56       	subi	r30, 0x6A	; 106
   176ec:	f4 4f       	sbci	r31, 0xF4	; 244
   176ee:	91 81       	ldd	r25, Z+1	; 0x01
   176f0:	98 17       	cp	r25, r24
   176f2:	09 f4       	brne	.+2      	; 0x176f6 <_Z20Wireless_Pump_On_Offhh+0x1d6>
   176f4:	54 c0       	rjmp	.+168    	; 0x1779e <_Z20Wireless_Pump_On_Offhh+0x27e>
   176f6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   176fa:	81 30       	cpi	r24, 0x01	; 1
   176fc:	51 f4       	brne	.+20     	; 0x17712 <_Z20Wireless_Pump_On_Offhh+0x1f2>
   176fe:	64 e6       	ldi	r22, 0x64	; 100
   17700:	7c e2       	ldi	r23, 0x2C	; 44
   17702:	85 e5       	ldi	r24, 0x55	; 85
   17704:	94 e1       	ldi	r25, 0x14	; 20
   17706:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1770a:	85 e5       	ldi	r24, 0x55	; 85
   1770c:	94 e1       	ldi	r25, 0x14	; 20
   1770e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17712:	68 ee       	ldi	r22, 0xE8	; 232
   17714:	73 e0       	ldi	r23, 0x03	; 3
   17716:	80 e0       	ldi	r24, 0x00	; 0
   17718:	90 e0       	ldi	r25, 0x00	; 0
   1771a:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1771e:	80 91 a2 0c 	lds	r24, 0x0CA2	; 0x800ca2 <_gTime_To_Wait_Lora_Resp>
   17722:	90 91 a3 0c 	lds	r25, 0x0CA3	; 0x800ca3 <_gTime_To_Wait_Lora_Resp+0x1>
   17726:	0b 97       	sbiw	r24, 0x0b	; 11
   17728:	a0 f0       	brcs	.+40     	; 0x17752 <_Z20Wireless_Pump_On_Offhh+0x232>
   1772a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1772e:	81 30       	cpi	r24, 0x01	; 1
   17730:	09 f0       	breq	.+2      	; 0x17734 <_Z20Wireless_Pump_On_Offhh+0x214>
   17732:	91 c0       	rjmp	.+290    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17734:	66 e4       	ldi	r22, 0x46	; 70
   17736:	7c e2       	ldi	r23, 0x2C	; 44
   17738:	85 e5       	ldi	r24, 0x55	; 85
   1773a:	94 e1       	ldi	r25, 0x14	; 20
   1773c:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17740:	85 e5       	ldi	r24, 0x55	; 85
   17742:	94 e1       	ldi	r25, 0x14	; 20
   17744:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17748:	85 e5       	ldi	r24, 0x55	; 85
   1774a:	94 e1       	ldi	r25, 0x14	; 20
   1774c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17750:	82 c0       	rjmp	.+260    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17752:	d1 30       	cpi	r29, 0x01	; 1
   17754:	11 f1       	breq	.+68     	; 0x1779a <_Z20Wireless_Pump_On_Offhh+0x27a>
   17756:	80 91 6d 0d 	lds	r24, 0x0D6D	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1775a:	83 30       	cpi	r24, 0x03	; 3
   1775c:	f0 f0       	brcs	.+60     	; 0x1779a <_Z20Wireless_Pump_On_Offhh+0x27a>
   1775e:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17762:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17766:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1776a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1776e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17772:	a0 62       	ori	r26, 0x20	; 32
   17774:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17778:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1777c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17780:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17784:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb3>
   17788:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1778c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17790:	90 68       	ori	r25, 0x80	; 128
   17792:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17796:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1779a:	66 24       	eor	r6, r6
   1779c:	63 94       	inc	r6
   1779e:	bf ef       	ldi	r27, 0xFF	; 255
   177a0:	cb 1a       	sub	r12, r27
   177a2:	db 0a       	sbc	r13, r27
   177a4:	e6 e0       	ldi	r30, 0x06	; 6
   177a6:	ce 16       	cp	r12, r30
   177a8:	d1 04       	cpc	r13, r1
   177aa:	09 f0       	breq	.+2      	; 0x177ae <_Z20Wireless_Pump_On_Offhh+0x28e>
   177ac:	98 cf       	rjmp	.-208    	; 0x176de <_Z20Wireless_Pump_On_Offhh+0x1be>
   177ae:	61 10       	cpse	r6, r1
   177b0:	b2 c0       	rjmp	.+356    	; 0x17916 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   177b2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   177b6:	81 30       	cpi	r24, 0x01	; 1
   177b8:	71 f4       	brne	.+28     	; 0x177d6 <_Z20Wireless_Pump_On_Offhh+0x2b6>
   177ba:	6a e2       	ldi	r22, 0x2A	; 42
   177bc:	7c e2       	ldi	r23, 0x2C	; 44
   177be:	85 e5       	ldi	r24, 0x55	; 85
   177c0:	94 e1       	ldi	r25, 0x14	; 20
   177c2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   177c6:	85 e5       	ldi	r24, 0x55	; 85
   177c8:	94 e1       	ldi	r25, 0x14	; 20
   177ca:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   177ce:	85 e5       	ldi	r24, 0x55	; 85
   177d0:	94 e1       	ldi	r25, 0x14	; 20
   177d2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   177d6:	68 ee       	ldi	r22, 0xE8	; 232
   177d8:	73 e0       	ldi	r23, 0x03	; 3
   177da:	80 e0       	ldi	r24, 0x00	; 0
   177dc:	90 e0       	ldi	r25, 0x00	; 0
   177de:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   177e2:	f2 e0       	ldi	r31, 0x02	; 2
   177e4:	7f 12       	cpse	r7, r31
   177e6:	3f c0       	rjmp	.+126    	; 0x17866 <_Z20Wireless_Pump_On_Offhh+0x346>
   177e8:	90 91 97 13 	lds	r25, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
   177ec:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   177f0:	92 30       	cpi	r25, 0x02	; 2
   177f2:	31 f4       	brne	.+12     	; 0x17800 <_Z20Wireless_Pump_On_Offhh+0x2e0>
   177f4:	81 30       	cpi	r24, 0x01	; 1
   177f6:	09 f0       	breq	.+2      	; 0x177fa <_Z20Wireless_Pump_On_Offhh+0x2da>
   177f8:	47 c0       	rjmp	.+142    	; 0x17888 <_Z20Wireless_Pump_On_Offhh+0x368>
   177fa:	60 e2       	ldi	r22, 0x20	; 32
   177fc:	7c e2       	ldi	r23, 0x2C	; 44
   177fe:	40 c0       	rjmp	.+128    	; 0x17880 <_Z20Wireless_Pump_On_Offhh+0x360>
   17800:	98 30       	cpi	r25, 0x08	; 8
   17802:	59 f5       	brne	.+86     	; 0x1785a <_Z20Wireless_Pump_On_Offhh+0x33a>
   17804:	81 30       	cpi	r24, 0x01	; 1
   17806:	31 f4       	brne	.+12     	; 0x17814 <_Z20Wireless_Pump_On_Offhh+0x2f4>
   17808:	62 e0       	ldi	r22, 0x02	; 2
   1780a:	7c e2       	ldi	r23, 0x2C	; 44
   1780c:	85 e5       	ldi	r24, 0x55	; 85
   1780e:	94 e1       	ldi	r25, 0x14	; 20
   17810:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17814:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17818:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb3>
   1781c:	84 e0       	ldi	r24, 0x04	; 4
   1781e:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   17822:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17826:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1782a:	82 60       	ori	r24, 0x02	; 2
   1782c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17830:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17834:	8b e0       	ldi	r24, 0x0B	; 11
   17836:	80 9f       	mul	r24, r16
   17838:	f0 01       	movw	r30, r0
   1783a:	81 9f       	mul	r24, r17
   1783c:	f0 0d       	add	r31, r0
   1783e:	11 24       	eor	r1, r1
   17840:	ea 56       	subi	r30, 0x6A	; 106
   17842:	f4 4f       	sbci	r31, 0xF4	; 244
   17844:	80 91 9b 13 	lds	r24, 0x139B	; 0x80139b <_sRuble_Parameters+0x51>
   17848:	90 91 9c 13 	lds	r25, 0x139C	; 0x80139c <_sRuble_Parameters+0x52>
   1784c:	98 27       	eor	r25, r24
   1784e:	89 27       	eor	r24, r25
   17850:	98 27       	eor	r25, r24
   17852:	91 87       	std	Z+9, r25	; 0x09
   17854:	80 87       	std	Z+8, r24	; 0x08
   17856:	c0 e0       	ldi	r28, 0x00	; 0
   17858:	8a c1       	rjmp	.+788    	; 0x17b6e <_Z20Wireless_Pump_On_Offhh+0x64e>
   1785a:	81 30       	cpi	r24, 0x01	; 1
   1785c:	09 f0       	breq	.+2      	; 0x17860 <_Z20Wireless_Pump_On_Offhh+0x340>
   1785e:	5d c0       	rjmp	.+186    	; 0x1791a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17860:	66 ee       	ldi	r22, 0xE6	; 230
   17862:	7b e2       	ldi	r23, 0x2B	; 43
   17864:	4f c0       	rjmp	.+158    	; 0x17904 <_Z20Wireless_Pump_On_Offhh+0x3e4>
   17866:	24 e0       	ldi	r18, 0x04	; 4
   17868:	72 12       	cpse	r7, r18
   1786a:	57 c0       	rjmp	.+174    	; 0x1791a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   1786c:	90 91 97 13 	lds	r25, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
   17870:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17874:	94 30       	cpi	r25, 0x04	; 4
   17876:	e1 f4       	brne	.+56     	; 0x178b0 <_Z20Wireless_Pump_On_Offhh+0x390>
   17878:	81 30       	cpi	r24, 0x01	; 1
   1787a:	31 f4       	brne	.+12     	; 0x17888 <_Z20Wireless_Pump_On_Offhh+0x368>
   1787c:	6b ed       	ldi	r22, 0xDB	; 219
   1787e:	7b e2       	ldi	r23, 0x2B	; 43
   17880:	85 e5       	ldi	r24, 0x55	; 85
   17882:	94 e1       	ldi	r25, 0x14	; 20
   17884:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17888:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1788c:	8b e0       	ldi	r24, 0x0B	; 11
   1788e:	80 9f       	mul	r24, r16
   17890:	f0 01       	movw	r30, r0
   17892:	81 9f       	mul	r24, r17
   17894:	f0 0d       	add	r31, r0
   17896:	11 24       	eor	r1, r1
   17898:	ea 56       	subi	r30, 0x6A	; 106
   1789a:	f4 4f       	sbci	r31, 0xF4	; 244
   1789c:	80 91 9b 13 	lds	r24, 0x139B	; 0x80139b <_sRuble_Parameters+0x51>
   178a0:	90 91 9c 13 	lds	r25, 0x139C	; 0x80139c <_sRuble_Parameters+0x52>
   178a4:	98 27       	eor	r25, r24
   178a6:	89 27       	eor	r24, r25
   178a8:	98 27       	eor	r25, r24
   178aa:	91 87       	std	Z+9, r25	; 0x09
   178ac:	80 87       	std	Z+8, r24	; 0x08
   178ae:	5e c1       	rjmp	.+700    	; 0x17b6c <_Z20Wireless_Pump_On_Offhh+0x64c>
   178b0:	98 30       	cpi	r25, 0x08	; 8
   178b2:	21 f5       	brne	.+72     	; 0x178fc <_Z20Wireless_Pump_On_Offhh+0x3dc>
   178b4:	81 30       	cpi	r24, 0x01	; 1
   178b6:	31 f4       	brne	.+12     	; 0x178c4 <_Z20Wireless_Pump_On_Offhh+0x3a4>
   178b8:	6d eb       	ldi	r22, 0xBD	; 189
   178ba:	7b e2       	ldi	r23, 0x2B	; 43
   178bc:	85 e5       	ldi	r24, 0x55	; 85
   178be:	94 e1       	ldi	r25, 0x14	; 20
   178c0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   178c4:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   178c8:	8b e0       	ldi	r24, 0x0B	; 11
   178ca:	80 9f       	mul	r24, r16
   178cc:	f0 01       	movw	r30, r0
   178ce:	81 9f       	mul	r24, r17
   178d0:	f0 0d       	add	r31, r0
   178d2:	11 24       	eor	r1, r1
   178d4:	ea 56       	subi	r30, 0x6A	; 106
   178d6:	f4 4f       	sbci	r31, 0xF4	; 244
   178d8:	80 91 9b 13 	lds	r24, 0x139B	; 0x80139b <_sRuble_Parameters+0x51>
   178dc:	90 91 9c 13 	lds	r25, 0x139C	; 0x80139c <_sRuble_Parameters+0x52>
   178e0:	98 27       	eor	r25, r24
   178e2:	89 27       	eor	r24, r25
   178e4:	98 27       	eor	r25, r24
   178e6:	91 87       	std	Z+9, r25	; 0x09
   178e8:	80 87       	std	Z+8, r24	; 0x08
   178ea:	84 e0       	ldi	r24, 0x04	; 4
   178ec:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   178f0:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   178f4:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   178f8:	82 60       	ori	r24, 0x02	; 2
   178fa:	6e c0       	rjmp	.+220    	; 0x179d8 <_Z20Wireless_Pump_On_Offhh+0x4b8>
   178fc:	81 30       	cpi	r24, 0x01	; 1
   178fe:	69 f4       	brne	.+26     	; 0x1791a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17900:	61 ea       	ldi	r22, 0xA1	; 161
   17902:	7b e2       	ldi	r23, 0x2B	; 43
   17904:	85 e5       	ldi	r24, 0x55	; 85
   17906:	94 e1       	ldi	r25, 0x14	; 20
   17908:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1790c:	85 e5       	ldi	r24, 0x55	; 85
   1790e:	94 e1       	ldi	r25, 0x14	; 20
   17910:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17914:	02 c0       	rjmp	.+4      	; 0x1791a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17916:	80 e0       	ldi	r24, 0x00	; 0
   17918:	02 c0       	rjmp	.+4      	; 0x1791e <_Z20Wireless_Pump_On_Offhh+0x3fe>
   1791a:	81 e0       	ldi	r24, 0x01	; 1
   1791c:	d3 e0       	ldi	r29, 0x03	; 3
   1791e:	20 91 a2 0c 	lds	r18, 0x0CA2	; 0x800ca2 <_gTime_To_Wait_Lora_Resp>
   17922:	30 91 a3 0c 	lds	r19, 0x0CA3	; 0x800ca3 <_gTime_To_Wait_Lora_Resp+0x1>
   17926:	28 30       	cpi	r18, 0x08	; 8
   17928:	31 05       	cpc	r19, r1
   1792a:	20 f4       	brcc	.+8      	; 0x17934 <_Z20Wireless_Pump_On_Offhh+0x414>
   1792c:	88 23       	and	r24, r24
   1792e:	09 f4       	brne	.+2      	; 0x17932 <_Z20Wireless_Pump_On_Offhh+0x412>
   17930:	85 ce       	rjmp	.-758    	; 0x1763c <_Z20Wireless_Pump_On_Offhh+0x11c>
   17932:	02 c0       	rjmp	.+4      	; 0x17938 <_Z20Wireless_Pump_On_Offhh+0x418>
   17934:	81 30       	cpi	r24, 0x01	; 1
   17936:	b1 f4       	brne	.+44     	; 0x17964 <_Z20Wireless_Pump_On_Offhh+0x444>
   17938:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1793c:	c0 91 3a 14 	lds	r28, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17940:	c1 30       	cpi	r28, 0x01	; 1
   17942:	09 f0       	breq	.+2      	; 0x17946 <_Z20Wireless_Pump_On_Offhh+0x426>
   17944:	13 c1       	rjmp	.+550    	; 0x17b6c <_Z20Wireless_Pump_On_Offhh+0x64c>
   17946:	65 e8       	ldi	r22, 0x85	; 133
   17948:	7b e2       	ldi	r23, 0x2B	; 43
   1794a:	85 e5       	ldi	r24, 0x55	; 85
   1794c:	94 e1       	ldi	r25, 0x14	; 20
   1794e:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17952:	85 e5       	ldi	r24, 0x55	; 85
   17954:	94 e1       	ldi	r25, 0x14	; 20
   17956:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   1795a:	85 e5       	ldi	r24, 0x55	; 85
   1795c:	94 e1       	ldi	r25, 0x14	; 20
   1795e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17962:	05 c1       	rjmp	.+522    	; 0x17b6e <_Z20Wireless_Pump_On_Offhh+0x64e>
   17964:	80 91 6d 0d 	lds	r24, 0x0D6D	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17968:	83 30       	cpi	r24, 0x03	; 3
   1796a:	a8 f0       	brcs	.+42     	; 0x17996 <_Z20Wireless_Pump_On_Offhh+0x476>
   1796c:	10 92 6d 0d 	sts	0x0D6D, r1	; 0x800d6d <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17970:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17974:	81 30       	cpi	r24, 0x01	; 1
   17976:	c1 f4       	brne	.+48     	; 0x179a8 <_Z20Wireless_Pump_On_Offhh+0x488>
   17978:	69 e6       	ldi	r22, 0x69	; 105
   1797a:	7b e2       	ldi	r23, 0x2B	; 43
   1797c:	85 e5       	ldi	r24, 0x55	; 85
   1797e:	94 e1       	ldi	r25, 0x14	; 20
   17980:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17984:	85 e5       	ldi	r24, 0x55	; 85
   17986:	94 e1       	ldi	r25, 0x14	; 20
   17988:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   1798c:	85 e5       	ldi	r24, 0x55	; 85
   1798e:	94 e1       	ldi	r25, 0x14	; 20
   17990:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17994:	09 c0       	rjmp	.+18     	; 0x179a8 <_Z20Wireless_Pump_On_Offhh+0x488>
   17996:	68 ee       	ldi	r22, 0xE8	; 232
   17998:	73 e0       	ldi	r23, 0x03	; 3
   1799a:	80 e0       	ldi	r24, 0x00	; 0
   1799c:	90 e0       	ldi	r25, 0x00	; 0
   1799e:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   179a2:	d1 30       	cpi	r29, 0x01	; 1
   179a4:	09 f4       	brne	.+2      	; 0x179a8 <_Z20Wireless_Pump_On_Offhh+0x488>
   179a6:	31 ce       	rjmp	.-926    	; 0x1760a <_Z20Wireless_Pump_On_Offhh+0xea>
   179a8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   179ac:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   179b0:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   179b4:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   179b8:	a0 62       	ori	r26, 0x20	; 32
   179ba:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   179be:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   179c2:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   179c6:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   179ca:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb3>
   179ce:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   179d2:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   179d6:	90 68       	ori	r25, 0x80	; 128
   179d8:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   179dc:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   179e0:	3a cf       	rjmp	.-396    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   179e2:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   179e6:	81 30       	cpi	r24, 0x01	; 1
   179e8:	89 f4       	brne	.+34     	; 0x17a0c <_Z20Wireless_Pump_On_Offhh+0x4ec>
   179ea:	66 e5       	ldi	r22, 0x56	; 86
   179ec:	7b e2       	ldi	r23, 0x2B	; 43
   179ee:	85 e5       	ldi	r24, 0x55	; 85
   179f0:	94 e1       	ldi	r25, 0x14	; 20
   179f2:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   179f6:	4a e0       	ldi	r20, 0x0A	; 10
   179f8:	50 e0       	ldi	r21, 0x00	; 0
   179fa:	6c 2f       	mov	r22, r28
   179fc:	85 e5       	ldi	r24, 0x55	; 85
   179fe:	94 e1       	ldi	r25, 0x14	; 20
   17a00:	0e 94 a8 d1 	call	0x1a350	; 0x1a350 <_ZN5Print7printlnEhi>
   17a04:	85 e5       	ldi	r24, 0x55	; 85
   17a06:	94 e1       	ldi	r25, 0x14	; 20
   17a08:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17a0c:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   17a10:	81 11       	cpse	r24, r1
   17a12:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   17a16:	84 e1       	ldi	r24, 0x14	; 20
   17a18:	ec e7       	ldi	r30, 0x7C	; 124
   17a1a:	f3 e1       	ldi	r31, 0x13	; 19
   17a1c:	df 01       	movw	r26, r30
   17a1e:	1d 92       	st	X+, r1
   17a20:	8a 95       	dec	r24
   17a22:	e9 f7       	brne	.-6      	; 0x17a1e <_Z20Wireless_Pump_On_Offhh+0x4fe>
   17a24:	bb e0       	ldi	r27, 0x0B	; 11
   17a26:	cb 9f       	mul	r28, r27
   17a28:	80 01       	movw	r16, r0
   17a2a:	11 24       	eor	r1, r1
   17a2c:	f8 01       	movw	r30, r16
   17a2e:	ea 56       	subi	r30, 0x6A	; 106
   17a30:	f4 4f       	sbci	r31, 0xF4	; 244
   17a32:	81 81       	ldd	r24, Z+1	; 0x01
   17a34:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
   17a38:	82 81       	ldd	r24, Z+2	; 0x02
   17a3a:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
   17a3e:	83 81       	ldd	r24, Z+3	; 0x03
   17a40:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
   17a44:	84 81       	ldd	r24, Z+4	; 0x04
   17a46:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
   17a4a:	85 81       	ldd	r24, Z+5	; 0x05
   17a4c:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
   17a50:	86 81       	ldd	r24, Z+6	; 0x06
   17a52:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
   17a56:	81 e0       	ldi	r24, 0x01	; 1
   17a58:	80 93 82 13 	sts	0x1382, r24	; 0x801382 <_sRuble_Parameters+0x38>
   17a5c:	80 93 83 13 	sts	0x1383, r24	; 0x801383 <_sRuble_Parameters+0x39>
   17a60:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   17a64:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
   17a68:	80 91 60 13 	lds	r24, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   17a6c:	80 93 86 13 	sts	0x1386, r24	; 0x801386 <_sRuble_Parameters+0x3c>
   17a70:	81 e0       	ldi	r24, 0x01	; 1
   17a72:	8c 0f       	add	r24, r28
   17a74:	80 93 87 13 	sts	0x1387, r24	; 0x801387 <_sRuble_Parameters+0x3d>
   17a78:	83 e5       	ldi	r24, 0x53	; 83
   17a7a:	80 93 88 13 	sts	0x1388, r24	; 0x801388 <_sRuble_Parameters+0x3e>
   17a7e:	80 91 3b 14 	lds	r24, 0x143B	; 0x80143b <_sRuble_Parameters+0xf1>
   17a82:	80 93 89 13 	sts	0x1389, r24	; 0x801389 <_sRuble_Parameters+0x3f>
   17a86:	78 01       	movw	r14, r16
   17a88:	d2 e0       	ldi	r29, 0x02	; 2
   17a8a:	09 56       	subi	r16, 0x69	; 105
   17a8c:	14 4f       	sbci	r17, 0xF4	; 244
   17a8e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17a92:	81 30       	cpi	r24, 0x01	; 1
   17a94:	51 f4       	brne	.+20     	; 0x17aaa <_Z20Wireless_Pump_On_Offhh+0x58a>
   17a96:	6f e2       	ldi	r22, 0x2F	; 47
   17a98:	7b e2       	ldi	r23, 0x2B	; 43
   17a9a:	85 e5       	ldi	r24, 0x55	; 85
   17a9c:	94 e1       	ldi	r25, 0x14	; 20
   17a9e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17aa2:	85 e5       	ldi	r24, 0x55	; 85
   17aa4:	94 e1       	ldi	r25, 0x14	; 20
   17aa6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17aaa:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   17aae:	8e e0       	ldi	r24, 0x0E	; 14
   17ab0:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   17ab4:	80 ee       	ldi	r24, 0xE0	; 224
   17ab6:	9e e2       	ldi	r25, 0x2E	; 46
   17ab8:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   17abc:	88 23       	and	r24, r24
   17abe:	09 f4       	brne	.+2      	; 0x17ac2 <_Z20Wireless_Pump_On_Offhh+0x5a2>
   17ac0:	ca ce       	rjmp	.-620    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17ac2:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   17ac6:	88 23       	and	r24, r24
   17ac8:	09 f4       	brne	.+2      	; 0x17acc <_Z20Wireless_Pump_On_Offhh+0x5ac>
   17aca:	c5 ce       	rjmp	.-630    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17acc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17ad0:	81 30       	cpi	r24, 0x01	; 1
   17ad2:	59 f5       	brne	.+86     	; 0x17b2a <_Z20Wireless_Pump_On_Offhh+0x60a>
   17ad4:	66 e1       	ldi	r22, 0x16	; 22
   17ad6:	7b e2       	ldi	r23, 0x2B	; 43
   17ad8:	85 e5       	ldi	r24, 0x55	; 85
   17ada:	94 e1       	ldi	r25, 0x14	; 20
   17adc:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17ae0:	4a e0       	ldi	r20, 0x0A	; 10
   17ae2:	50 e0       	ldi	r21, 0x00	; 0
   17ae4:	60 e9       	ldi	r22, 0x90	; 144
   17ae6:	73 e1       	ldi	r23, 0x13	; 19
   17ae8:	85 e5       	ldi	r24, 0x55	; 85
   17aea:	94 e1       	ldi	r25, 0x14	; 20
   17aec:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   17af0:	85 e5       	ldi	r24, 0x55	; 85
   17af2:	94 e1       	ldi	r25, 0x14	; 20
   17af4:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17af8:	85 e5       	ldi	r24, 0x55	; 85
   17afa:	94 e1       	ldi	r25, 0x14	; 20
   17afc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17b00:	68 ef       	ldi	r22, 0xF8	; 248
   17b02:	7a e2       	ldi	r23, 0x2A	; 42
   17b04:	85 e5       	ldi	r24, 0x55	; 85
   17b06:	94 e1       	ldi	r25, 0x14	; 20
   17b08:	0e 94 fb d0 	call	0x1a1f6	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   17b0c:	47 e0       	ldi	r20, 0x07	; 7
   17b0e:	50 e0       	ldi	r21, 0x00	; 0
   17b10:	b8 01       	movw	r22, r16
   17b12:	85 e5       	ldi	r24, 0x55	; 85
   17b14:	94 e1       	ldi	r25, 0x14	; 20
   17b16:	0e 94 d1 d0 	call	0x1a1a2	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   17b1a:	85 e5       	ldi	r24, 0x55	; 85
   17b1c:	94 e1       	ldi	r25, 0x14	; 20
   17b1e:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <_ZN5Print7printlnEv>
   17b22:	85 e5       	ldi	r24, 0x55	; 85
   17b24:	94 e1       	ldi	r25, 0x14	; 20
   17b26:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17b2a:	a0 e9       	ldi	r26, 0x90	; 144
   17b2c:	b3 e1       	ldi	r27, 0x13	; 19
   17b2e:	80 e0       	ldi	r24, 0x00	; 0
   17b30:	90 e0       	ldi	r25, 0x00	; 0
   17b32:	2d 91       	ld	r18, X+
   17b34:	fc 01       	movw	r30, r24
   17b36:	ee 0d       	add	r30, r14
   17b38:	ff 1d       	adc	r31, r15
   17b3a:	ea 56       	subi	r30, 0x6A	; 106
   17b3c:	f4 4f       	sbci	r31, 0xF4	; 244
   17b3e:	31 81       	ldd	r19, Z+1	; 0x01
   17b40:	32 13       	cpse	r19, r18
   17b42:	89 ce       	rjmp	.-750    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17b44:	01 96       	adiw	r24, 0x01	; 1
   17b46:	86 30       	cpi	r24, 0x06	; 6
   17b48:	91 05       	cpc	r25, r1
   17b4a:	99 f7       	brne	.-26     	; 0x17b32 <_Z20Wireless_Pump_On_Offhh+0x612>
   17b4c:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x4d>
   17b50:	81 30       	cpi	r24, 0x01	; 1
   17b52:	09 f0       	breq	.+2      	; 0x17b56 <_Z20Wireless_Pump_On_Offhh+0x636>
   17b54:	80 ce       	rjmp	.-768    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17b56:	d1 50       	subi	r29, 0x01	; 1
   17b58:	09 f0       	breq	.+2      	; 0x17b5c <_Z20Wireless_Pump_On_Offhh+0x63c>
   17b5a:	99 cf       	rjmp	.-206    	; 0x17a8e <_Z20Wireless_Pump_On_Offhh+0x56e>
   17b5c:	c1 e0       	ldi	r28, 0x01	; 1
   17b5e:	80 91 9d 13 	lds	r24, 0x139D	; 0x80139d <_sRuble_Parameters+0x53>
   17b62:	81 30       	cpi	r24, 0x01	; 1
   17b64:	09 f0       	breq	.+2      	; 0x17b68 <_Z20Wireless_Pump_On_Offhh+0x648>
   17b66:	77 ce       	rjmp	.-786    	; 0x17856 <_Z20Wireless_Pump_On_Offhh+0x336>
   17b68:	02 c0       	rjmp	.+4      	; 0x17b6e <_Z20Wireless_Pump_On_Offhh+0x64e>
   17b6a:	02 c0       	rjmp	.+4      	; 0x17b70 <_Z20Wireless_Pump_On_Offhh+0x650>
   17b6c:	c1 e0       	ldi	r28, 0x01	; 1
   17b6e:	8c 2f       	mov	r24, r28
   17b70:	df 91       	pop	r29
   17b72:	cf 91       	pop	r28
   17b74:	1f 91       	pop	r17
   17b76:	0f 91       	pop	r16
   17b78:	ff 90       	pop	r15
   17b7a:	ef 90       	pop	r14
   17b7c:	df 90       	pop	r13
   17b7e:	cf 90       	pop	r12
   17b80:	bf 90       	pop	r11
   17b82:	af 90       	pop	r10
   17b84:	9f 90       	pop	r9
   17b86:	8f 90       	pop	r8
   17b88:	7f 90       	pop	r7
   17b8a:	6f 90       	pop	r6
   17b8c:	08 95       	ret

00017b8e <_Z15Stop_Irrigationv>:
   17b8e:	cf 93       	push	r28
   17b90:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17b94:	81 30       	cpi	r24, 0x01	; 1
   17b96:	51 f4       	brne	.+20     	; 0x17bac <_Z15Stop_Irrigationv+0x1e>
   17b98:	6b e6       	ldi	r22, 0x6B	; 107
   17b9a:	70 e4       	ldi	r23, 0x40	; 64
   17b9c:	85 e5       	ldi	r24, 0x55	; 85
   17b9e:	94 e1       	ldi	r25, 0x14	; 20
   17ba0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ba4:	85 e5       	ldi	r24, 0x55	; 85
   17ba6:	94 e1       	ldi	r25, 0x14	; 20
   17ba8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17bac:	c0 91 28 14 	lds	r28, 0x1428	; 0x801428 <_sRuble_Parameters+0xde>
   17bb0:	8f ef       	ldi	r24, 0xFF	; 255
   17bb2:	8c 0f       	add	r24, r28
   17bb4:	83 30       	cpi	r24, 0x03	; 3
   17bb6:	18 f4       	brcc	.+6      	; 0x17bbe <_Z15Stop_Irrigationv+0x30>
   17bb8:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xde>
   17bbc:	02 c0       	rjmp	.+4      	; 0x17bc2 <_Z15Stop_Irrigationv+0x34>
   17bbe:	c0 91 26 14 	lds	r28, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   17bc2:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   17bc6:	81 30       	cpi	r24, 0x01	; 1
   17bc8:	59 f4       	brne	.+22     	; 0x17be0 <_Z15Stop_Irrigationv+0x52>
   17bca:	c2 30       	cpi	r28, 0x02	; 2
   17bcc:	48 f0       	brcs	.+18     	; 0x17be0 <_Z15Stop_Irrigationv+0x52>
   17bce:	82 e0       	ldi	r24, 0x02	; 2
   17bd0:	80 93 09 14 	sts	0x1409, r24	; 0x801409 <_sRuble_Parameters+0xbf>
   17bd4:	69 e0       	ldi	r22, 0x09	; 9
   17bd6:	74 e1       	ldi	r23, 0x14	; 20
   17bd8:	88 ea       	ldi	r24, 0xA8	; 168
   17bda:	9c e0       	ldi	r25, 0x0C	; 12
   17bdc:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17be0:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
   17be4:	81 30       	cpi	r24, 0x01	; 1
   17be6:	29 f4       	brne	.+10     	; 0x17bf2 <_Z15Stop_Irrigationv+0x64>
   17be8:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   17bec:	81 30       	cpi	r24, 0x01	; 1
   17bee:	09 f0       	breq	.+2      	; 0x17bf2 <_Z15Stop_Irrigationv+0x64>
   17bf0:	6b c0       	rjmp	.+214    	; 0x17cc8 <_Z15Stop_Irrigationv+0x13a>
   17bf2:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   17bf6:	81 11       	cpse	r24, r1
   17bf8:	16 c0       	rjmp	.+44     	; 0x17c26 <_Z15Stop_Irrigationv+0x98>
   17bfa:	c1 30       	cpi	r28, 0x01	; 1
   17bfc:	a1 f4       	brne	.+40     	; 0x17c26 <_Z15Stop_Irrigationv+0x98>
   17bfe:	8a e0       	ldi	r24, 0x0A	; 10
   17c00:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   17c04:	01 97       	sbiw	r24, 0x01	; 1
   17c06:	21 f0       	breq	.+8      	; 0x17c10 <_Z15Stop_Irrigationv+0x82>
   17c08:	61 e0       	ldi	r22, 0x01	; 1
   17c0a:	8a e0       	ldi	r24, 0x0A	; 10
   17c0c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   17c10:	8b e0       	ldi	r24, 0x0B	; 11
   17c12:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   17c16:	01 97       	sbiw	r24, 0x01	; 1
   17c18:	09 f4       	brne	.+2      	; 0x17c1c <_Z15Stop_Irrigationv+0x8e>
   17c1a:	56 c0       	rjmp	.+172    	; 0x17cc8 <_Z15Stop_Irrigationv+0x13a>
   17c1c:	61 e0       	ldi	r22, 0x01	; 1
   17c1e:	8b e0       	ldi	r24, 0x0B	; 11
   17c20:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   17c24:	51 c0       	rjmp	.+162    	; 0x17cc8 <_Z15Stop_Irrigationv+0x13a>
   17c26:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17c2a:	81 30       	cpi	r24, 0x01	; 1
   17c2c:	31 f4       	brne	.+12     	; 0x17c3a <_Z15Stop_Irrigationv+0xac>
   17c2e:	61 e4       	ldi	r22, 0x41	; 65
   17c30:	70 e4       	ldi	r23, 0x40	; 64
   17c32:	85 e5       	ldi	r24, 0x55	; 85
   17c34:	94 e1       	ldi	r25, 0x14	; 20
   17c36:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c3a:	6e ef       	ldi	r22, 0xFE	; 254
   17c3c:	6c 0f       	add	r22, r28
   17c3e:	84 e0       	ldi	r24, 0x04	; 4
   17c40:	6f dc       	rcall	.-1826   	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   17c42:	2c 2f       	mov	r18, r28
   17c44:	30 e0       	ldi	r19, 0x00	; 0
   17c46:	e0 91 a5 13 	lds	r30, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   17c4a:	d9 01       	movw	r26, r18
   17c4c:	a0 5e       	subi	r26, 0xE0	; 224
   17c4e:	bb 4e       	sbci	r27, 0xEB	; 235
   17c50:	1c 92       	st	X, r1
   17c52:	f0 e0       	ldi	r31, 0x00	; 0
   17c54:	e4 5f       	subi	r30, 0xF4	; 244
   17c56:	fb 4e       	sbci	r31, 0xEB	; 235
   17c58:	88 23       	and	r24, r24
   17c5a:	61 f0       	breq	.+24     	; 0x17c74 <_Z15Stop_Irrigationv+0xe6>
   17c5c:	10 82       	st	Z, r1
   17c5e:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   17c62:	6a e0       	ldi	r22, 0x0A	; 10
   17c64:	74 e1       	ldi	r23, 0x14	; 20
   17c66:	8d ea       	ldi	r24, 0xAD	; 173
   17c68:	9c e0       	ldi	r25, 0x0C	; 12
   17c6a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17c6e:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   17c72:	2a c0       	rjmp	.+84     	; 0x17cc8 <_Z15Stop_Irrigationv+0x13a>
   17c74:	81 e0       	ldi	r24, 0x01	; 1
   17c76:	80 83       	st	Z, r24
   17c78:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   17c7c:	6a e0       	ldi	r22, 0x0A	; 10
   17c7e:	74 e1       	ldi	r23, 0x14	; 20
   17c80:	8d ea       	ldi	r24, 0xAD	; 173
   17c82:	9c e0       	ldi	r25, 0x0C	; 12
   17c84:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17c88:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   17c8c:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17c90:	8d 7f       	andi	r24, 0xFD	; 253
   17c92:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17c96:	10 92 a5 13 	sts	0x13A5, r1	; 0x8013a5 <_sRuble_Parameters+0x5b>
   17c9a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17c9e:	81 30       	cpi	r24, 0x01	; 1
   17ca0:	51 f4       	brne	.+20     	; 0x17cb6 <_Z15Stop_Irrigationv+0x128>
   17ca2:	60 e3       	ldi	r22, 0x30	; 48
   17ca4:	70 e4       	ldi	r23, 0x40	; 64
   17ca6:	85 e5       	ldi	r24, 0x55	; 85
   17ca8:	94 e1       	ldi	r25, 0x14	; 20
   17caa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17cae:	85 e5       	ldi	r24, 0x55	; 85
   17cb0:	94 e1       	ldi	r25, 0x14	; 20
   17cb2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17cb6:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17cba:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17cbe:	84 60       	ori	r24, 0x04	; 4
   17cc0:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17cc4:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17cc8:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   17ccc:	88 23       	and	r24, r24
   17cce:	09 f4       	brne	.+2      	; 0x17cd2 <_Z15Stop_Irrigationv+0x144>
   17cd0:	41 c0       	rjmp	.+130    	; 0x17d54 <_Z15Stop_Irrigationv+0x1c6>
   17cd2:	80 93 05 14 	sts	0x1405, r24	; 0x801405 <_sRuble_Parameters+0xbb>
   17cd6:	83 e0       	ldi	r24, 0x03	; 3
   17cd8:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z22Hard_Coded_Flush_Valveh>
   17cdc:	80 e0       	ldi	r24, 0x00	; 0
   17cde:	0e 94 e0 ac 	call	0x159c0	; 0x159c0 <_Z22Valve_Grouping_Handlerh>
   17ce2:	20 91 3a 14 	lds	r18, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17ce6:	88 23       	and	r24, r24
   17ce8:	e9 f0       	breq	.+58     	; 0x17d24 <_Z15Stop_Irrigationv+0x196>
   17cea:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17cee:	8d 7f       	andi	r24, 0xFD	; 253
   17cf0:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17cf4:	10 92 a5 13 	sts	0x13A5, r1	; 0x8013a5 <_sRuble_Parameters+0x5b>
   17cf8:	21 30       	cpi	r18, 0x01	; 1
   17cfa:	51 f4       	brne	.+20     	; 0x17d10 <_Z15Stop_Irrigationv+0x182>
   17cfc:	6f e1       	ldi	r22, 0x1F	; 31
   17cfe:	70 e4       	ldi	r23, 0x40	; 64
   17d00:	85 e5       	ldi	r24, 0x55	; 85
   17d02:	94 e1       	ldi	r25, 0x14	; 20
   17d04:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17d08:	85 e5       	ldi	r24, 0x55	; 85
   17d0a:	94 e1       	ldi	r25, 0x14	; 20
   17d0c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17d10:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17d14:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17d18:	84 60       	ori	r24, 0x04	; 4
   17d1a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17d1e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17d22:	18 c0       	rjmp	.+48     	; 0x17d54 <_Z15Stop_Irrigationv+0x1c6>
   17d24:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17d28:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17d2c:	84 60       	ori	r24, 0x04	; 4
   17d2e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17d32:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17d36:	10 92 a5 13 	sts	0x13A5, r1	; 0x8013a5 <_sRuble_Parameters+0x5b>
   17d3a:	21 30       	cpi	r18, 0x01	; 1
   17d3c:	69 f4       	brne	.+26     	; 0x17d58 <_Z15Stop_Irrigationv+0x1ca>
   17d3e:	67 e0       	ldi	r22, 0x07	; 7
   17d40:	70 e4       	ldi	r23, 0x40	; 64
   17d42:	85 e5       	ldi	r24, 0x55	; 85
   17d44:	94 e1       	ldi	r25, 0x14	; 20
   17d46:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17d4a:	85 e5       	ldi	r24, 0x55	; 85
   17d4c:	94 e1       	ldi	r25, 0x14	; 20
   17d4e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17d52:	02 c0       	rjmp	.+4      	; 0x17d58 <_Z15Stop_Irrigationv+0x1ca>
   17d54:	81 e0       	ldi	r24, 0x01	; 1
   17d56:	01 c0       	rjmp	.+2      	; 0x17d5a <_Z15Stop_Irrigationv+0x1cc>
   17d58:	80 e0       	ldi	r24, 0x00	; 0
   17d5a:	cf 91       	pop	r28
   17d5c:	08 95       	ret

00017d5e <_Z21Select_Operation_Modev>:
   17d5e:	90 91 73 13 	lds	r25, 0x1373	; 0x801373 <_sRuble_Parameters+0x29>
   17d62:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   17d66:	93 30       	cpi	r25, 0x03	; 3
   17d68:	09 f4       	brne	.+2      	; 0x17d6c <_Z21Select_Operation_Modev+0xe>
   17d6a:	c5 c0       	rjmp	.+394    	; 0x17ef6 <_Z21Select_Operation_Modev+0x198>
   17d6c:	94 30       	cpi	r25, 0x04	; 4
   17d6e:	09 f4       	brne	.+2      	; 0x17d72 <_Z21Select_Operation_Modev+0x14>
   17d70:	7e c0       	rjmp	.+252    	; 0x17e6e <_Z21Select_Operation_Modev+0x110>
   17d72:	91 30       	cpi	r25, 0x01	; 1
   17d74:	09 f0       	breq	.+2      	; 0x17d78 <_Z21Select_Operation_Modev+0x1a>
   17d76:	0d c1       	rjmp	.+538    	; 0x17f92 <_Z21Select_Operation_Modev+0x234>
   17d78:	2d ef       	ldi	r18, 0xFD	; 253
   17d7a:	28 0f       	add	r18, r24
   17d7c:	22 30       	cpi	r18, 0x02	; 2
   17d7e:	08 f0       	brcs	.+2      	; 0x17d82 <_Z21Select_Operation_Modev+0x24>
   17d80:	08 c1       	rjmp	.+528    	; 0x17f92 <_Z21Select_Operation_Modev+0x234>
   17d82:	10 92 73 13 	sts	0x1373, r1	; 0x801373 <_sRuble_Parameters+0x29>
   17d86:	83 30       	cpi	r24, 0x03	; 3
   17d88:	21 f4       	brne	.+8      	; 0x17d92 <_Z21Select_Operation_Modev+0x34>
   17d8a:	82 e0       	ldi	r24, 0x02	; 2
   17d8c:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   17d90:	02 c0       	rjmp	.+4      	; 0x17d96 <_Z21Select_Operation_Modev+0x38>
   17d92:	90 93 72 13 	sts	0x1372, r25	; 0x801372 <_sRuble_Parameters+0x28>
   17d96:	90 91 74 13 	lds	r25, 0x1374	; 0x801374 <_sRuble_Parameters+0x2a>
   17d9a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17d9e:	92 30       	cpi	r25, 0x02	; 2
   17da0:	79 f1       	breq	.+94     	; 0x17e00 <_Z21Select_Operation_Modev+0xa2>
   17da2:	81 30       	cpi	r24, 0x01	; 1
   17da4:	51 f4       	brne	.+20     	; 0x17dba <_Z21Select_Operation_Modev+0x5c>
   17da6:	61 ed       	ldi	r22, 0xD1	; 209
   17da8:	75 e4       	ldi	r23, 0x45	; 69
   17daa:	85 e5       	ldi	r24, 0x55	; 85
   17dac:	94 e1       	ldi	r25, 0x14	; 20
   17dae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17db2:	85 e5       	ldi	r24, 0x55	; 85
   17db4:	94 e1       	ldi	r25, 0x14	; 20
   17db6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17dba:	85 e0       	ldi	r24, 0x05	; 5
   17dbc:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   17dc0:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17dc4:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17dc8:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17dcc:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17dd0:	80 61       	ori	r24, 0x10	; 16
   17dd2:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17dd6:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17dda:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17dde:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17de2:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17de6:	8e 7f       	andi	r24, 0xFE	; 254
   17de8:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17dec:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17df0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17df4:	84 60       	ori	r24, 0x04	; 4
   17df6:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17dfa:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17dfe:	25 c0       	rjmp	.+74     	; 0x17e4a <_Z21Select_Operation_Modev+0xec>
   17e00:	81 30       	cpi	r24, 0x01	; 1
   17e02:	51 f4       	brne	.+20     	; 0x17e18 <_Z21Select_Operation_Modev+0xba>
   17e04:	65 eb       	ldi	r22, 0xB5	; 181
   17e06:	75 e4       	ldi	r23, 0x45	; 69
   17e08:	85 e5       	ldi	r24, 0x55	; 85
   17e0a:	94 e1       	ldi	r25, 0x14	; 20
   17e0c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e10:	85 e5       	ldi	r24, 0x55	; 85
   17e12:	94 e1       	ldi	r25, 0x14	; 20
   17e14:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17e18:	85 e0       	ldi	r24, 0x05	; 5
   17e1a:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   17e1e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17e22:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17e26:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17e2a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17e2e:	80 61       	ori	r24, 0x10	; 16
   17e30:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17e34:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17e38:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17e3c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17e40:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17e44:	81 60       	ori	r24, 0x01	; 1
   17e46:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17e4a:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   17e4e:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   17e52:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17e56:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17e5a:	84 60       	ori	r24, 0x04	; 4
   17e5c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17e60:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17e64:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   17e68:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   17e6c:	3d c0       	rjmp	.+122    	; 0x17ee8 <_Z21Select_Operation_Modev+0x18a>
   17e6e:	81 50       	subi	r24, 0x01	; 1
   17e70:	83 30       	cpi	r24, 0x03	; 3
   17e72:	08 f0       	brcs	.+2      	; 0x17e76 <_Z21Select_Operation_Modev+0x118>
   17e74:	8e c0       	rjmp	.+284    	; 0x17f92 <_Z21Select_Operation_Modev+0x234>
   17e76:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17e7a:	81 30       	cpi	r24, 0x01	; 1
   17e7c:	51 f4       	brne	.+20     	; 0x17e92 <_Z21Select_Operation_Modev+0x134>
   17e7e:	6b e9       	ldi	r22, 0x9B	; 155
   17e80:	75 e4       	ldi	r23, 0x45	; 69
   17e82:	85 e5       	ldi	r24, 0x55	; 85
   17e84:	94 e1       	ldi	r25, 0x14	; 20
   17e86:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e8a:	85 e5       	ldi	r24, 0x55	; 85
   17e8c:	94 e1       	ldi	r25, 0x14	; 20
   17e8e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17e92:	10 92 73 13 	sts	0x1373, r1	; 0x801373 <_sRuble_Parameters+0x29>
   17e96:	81 e0       	ldi	r24, 0x01	; 1
   17e98:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   17e9c:	84 e0       	ldi	r24, 0x04	; 4
   17e9e:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   17ea2:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   17ea6:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   17eaa:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17eae:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17eb2:	84 60       	ori	r24, 0x04	; 4
   17eb4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17eb8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17ebc:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17ec0:	81 60       	ori	r24, 0x01	; 1
   17ec2:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17ec6:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17eca:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17ece:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17ed2:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17ed6:	84 60       	ori	r24, 0x04	; 4
   17ed8:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17edc:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17ee0:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17ee4:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17ee8:	61 e7       	ldi	r22, 0x71	; 113
   17eea:	73 e1       	ldi	r23, 0x13	; 19
   17eec:	88 ed       	ldi	r24, 0xD8	; 216
   17eee:	94 e0       	ldi	r25, 0x04	; 4
   17ef0:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17ef4:	4e c0       	rjmp	.+156    	; 0x17f92 <_Z21Select_Operation_Modev+0x234>
   17ef6:	81 30       	cpi	r24, 0x01	; 1
   17ef8:	19 f0       	breq	.+6      	; 0x17f00 <_Z21Select_Operation_Modev+0x1a2>
   17efa:	85 30       	cpi	r24, 0x05	; 5
   17efc:	69 f0       	breq	.+26     	; 0x17f18 <_Z21Select_Operation_Modev+0x1ba>
   17efe:	47 c0       	rjmp	.+142    	; 0x17f8e <_Z21Select_Operation_Modev+0x230>
   17f00:	10 92 73 13 	sts	0x1373, r1	; 0x801373 <_sRuble_Parameters+0x29>
   17f04:	82 e0       	ldi	r24, 0x02	; 2
   17f06:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   17f0a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17f0e:	81 30       	cpi	r24, 0x01	; 1
   17f10:	b1 f4       	brne	.+44     	; 0x17f3e <_Z21Select_Operation_Modev+0x1e0>
   17f12:	67 e8       	ldi	r22, 0x87	; 135
   17f14:	75 e4       	ldi	r23, 0x45	; 69
   17f16:	0b c0       	rjmp	.+22     	; 0x17f2e <_Z21Select_Operation_Modev+0x1d0>
   17f18:	10 92 73 13 	sts	0x1373, r1	; 0x801373 <_sRuble_Parameters+0x29>
   17f1c:	82 e0       	ldi	r24, 0x02	; 2
   17f1e:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   17f22:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17f26:	81 30       	cpi	r24, 0x01	; 1
   17f28:	51 f4       	brne	.+20     	; 0x17f3e <_Z21Select_Operation_Modev+0x1e0>
   17f2a:	63 e7       	ldi	r22, 0x73	; 115
   17f2c:	75 e4       	ldi	r23, 0x45	; 69
   17f2e:	85 e5       	ldi	r24, 0x55	; 85
   17f30:	94 e1       	ldi	r25, 0x14	; 20
   17f32:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f36:	85 e5       	ldi	r24, 0x55	; 85
   17f38:	94 e1       	ldi	r25, 0x14	; 20
   17f3a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17f3e:	83 e0       	ldi	r24, 0x03	; 3
   17f40:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   17f44:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17f48:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17f4c:	8c 60       	ori	r24, 0x0C	; 12
   17f4e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17f52:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17f56:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   17f5a:	8e 7f       	andi	r24, 0xFE	; 254
   17f5c:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   17f60:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17f64:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17f68:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17f6c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17f70:	80 62       	ori	r24, 0x20	; 32
   17f72:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17f76:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17f7a:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17f7e:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17f82:	61 e7       	ldi	r22, 0x71	; 113
   17f84:	73 e1       	ldi	r23, 0x13	; 19
   17f86:	88 ed       	ldi	r24, 0xD8	; 216
   17f88:	94 e0       	ldi	r25, 0x04	; 4
   17f8a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17f8e:	10 92 73 13 	sts	0x1373, r1	; 0x801373 <_sRuble_Parameters+0x29>
   17f92:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   17f96:	82 30       	cpi	r24, 0x02	; 2
   17f98:	09 f4       	brne	.+2      	; 0x17f9c <_Z21Select_Operation_Modev+0x23e>
   17f9a:	66 c1       	rjmp	.+716    	; 0x18268 <_Z21Select_Operation_Modev+0x50a>
   17f9c:	20 f4       	brcc	.+8      	; 0x17fa6 <_Z21Select_Operation_Modev+0x248>
   17f9e:	81 30       	cpi	r24, 0x01	; 1
   17fa0:	09 f4       	brne	.+2      	; 0x17fa4 <_Z21Select_Operation_Modev+0x246>
   17fa2:	c6 c0       	rjmp	.+396    	; 0x18130 <_Z21Select_Operation_Modev+0x3d2>
   17fa4:	08 95       	ret
   17fa6:	83 30       	cpi	r24, 0x03	; 3
   17fa8:	21 f0       	breq	.+8      	; 0x17fb2 <_Z21Select_Operation_Modev+0x254>
   17faa:	85 30       	cpi	r24, 0x05	; 5
   17fac:	09 f4       	brne	.+2      	; 0x17fb0 <_Z21Select_Operation_Modev+0x252>
   17fae:	17 c1       	rjmp	.+558    	; 0x181de <_Z21Select_Operation_Modev+0x480>
   17fb0:	08 95       	ret
   17fb2:	80 91 60 13 	lds	r24, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   17fb6:	90 91 61 13 	lds	r25, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
   17fba:	89 2b       	or	r24, r25
   17fbc:	09 f0       	breq	.+2      	; 0x17fc0 <_Z21Select_Operation_Modev+0x262>
   17fbe:	5f c0       	rjmp	.+190    	; 0x1807e <_Z21Select_Operation_Modev+0x320>
   17fc0:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   17fc4:	88 23       	and	r24, r24
   17fc6:	e1 f0       	breq	.+56     	; 0x18000 <_Z21Select_Operation_Modev+0x2a2>
   17fc8:	e2 dd       	rcall	.-1084   	; 0x17b8e <_Z15Stop_Irrigationv>
   17fca:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   17fce:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   17fd2:	84 60       	ori	r24, 0x04	; 4
   17fd4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   17fd8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   17fdc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   17fe0:	81 30       	cpi	r24, 0x01	; 1
   17fe2:	51 f4       	brne	.+20     	; 0x17ff8 <_Z21Select_Operation_Modev+0x29a>
   17fe4:	60 e6       	ldi	r22, 0x60	; 96
   17fe6:	75 e4       	ldi	r23, 0x45	; 69
   17fe8:	85 e5       	ldi	r24, 0x55	; 85
   17fea:	94 e1       	ldi	r25, 0x14	; 20
   17fec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ff0:	85 e5       	ldi	r24, 0x55	; 85
   17ff2:	94 e1       	ldi	r25, 0x14	; 20
   17ff4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   17ff8:	85 e0       	ldi	r24, 0x05	; 5
   17ffa:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   17ffe:	1e c0       	rjmp	.+60     	; 0x1803c <_Z21Select_Operation_Modev+0x2de>
   18000:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18004:	81 30       	cpi	r24, 0x01	; 1
   18006:	51 f4       	brne	.+20     	; 0x1801c <_Z21Select_Operation_Modev+0x2be>
   18008:	64 e4       	ldi	r22, 0x44	; 68
   1800a:	75 e4       	ldi	r23, 0x45	; 69
   1800c:	85 e5       	ldi	r24, 0x55	; 85
   1800e:	94 e1       	ldi	r25, 0x14	; 20
   18010:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18014:	85 e5       	ldi	r24, 0x55	; 85
   18016:	94 e1       	ldi	r25, 0x14	; 20
   18018:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1801c:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   18020:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   18024:	85 e0       	ldi	r24, 0x05	; 5
   18026:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   1802a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1802e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18032:	84 60       	ori	r24, 0x04	; 4
   18034:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18038:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1803c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18040:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18044:	20 91 75 13 	lds	r18, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   18048:	2e 7f       	andi	r18, 0xFE	; 254
   1804a:	20 93 75 13 	sts	0x1375, r18	; 0x801375 <_sRuble_Parameters+0x2b>
   1804e:	24 e0       	ldi	r18, 0x04	; 4
   18050:	20 93 72 13 	sts	0x1372, r18	; 0x801372 <_sRuble_Parameters+0x28>
   18054:	8c 60       	ori	r24, 0x0C	; 12
   18056:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1805a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1805e:	61 e7       	ldi	r22, 0x71	; 113
   18060:	73 e1       	ldi	r23, 0x13	; 19
   18062:	88 ed       	ldi	r24, 0xD8	; 216
   18064:	94 e0       	ldi	r25, 0x04	; 4
   18066:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1806a:	65 ea       	ldi	r22, 0xA5	; 165
   1806c:	73 e1       	ldi	r23, 0x13	; 19
   1806e:	86 e9       	ldi	r24, 0x96	; 150
   18070:	9c e0       	ldi	r25, 0x0C	; 12
   18072:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18076:	88 e9       	ldi	r24, 0x98	; 152
   18078:	9c e0       	ldi	r25, 0x0C	; 12
   1807a:	0e 94 a8 84 	call	0x10950	; 0x10950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   1807e:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2a>
   18082:	82 30       	cpi	r24, 0x02	; 2
   18084:	09 f4       	brne	.+2      	; 0x18088 <_Z21Select_Operation_Modev+0x32a>
   18086:	3e c1       	rjmp	.+636    	; 0x18304 <_Z21Select_Operation_Modev+0x5a6>
   18088:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1808c:	81 30       	cpi	r24, 0x01	; 1
   1808e:	51 f4       	brne	.+20     	; 0x180a4 <_Z21Select_Operation_Modev+0x346>
   18090:	6f e2       	ldi	r22, 0x2F	; 47
   18092:	75 e4       	ldi	r23, 0x45	; 69
   18094:	85 e5       	ldi	r24, 0x55	; 85
   18096:	94 e1       	ldi	r25, 0x14	; 20
   18098:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1809c:	85 e5       	ldi	r24, 0x55	; 85
   1809e:	94 e1       	ldi	r25, 0x14	; 20
   180a0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   180a4:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   180a8:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   180ac:	22 e0       	ldi	r18, 0x02	; 2
   180ae:	20 93 71 13 	sts	0x1371, r18	; 0x801371 <_sRuble_Parameters+0x27>
   180b2:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   180b6:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   180ba:	88 60       	ori	r24, 0x08	; 8
   180bc:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   180c0:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   180c4:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   180c8:	81 60       	ori	r24, 0x01	; 1
   180ca:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   180ce:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   180d2:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   180d6:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   180da:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   180de:	92 60       	ori	r25, 0x02	; 2
   180e0:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   180e4:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   180e8:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   180ec:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   180f0:	81 e0       	ldi	r24, 0x01	; 1
   180f2:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   180f6:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0xb5>
   180fa:	6f ef       	ldi	r22, 0xFF	; 255
   180fc:	73 e1       	ldi	r23, 0x13	; 19
   180fe:	89 e1       	ldi	r24, 0x19	; 25
   18100:	95 e0       	ldi	r25, 0x05	; 5
   18102:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18106:	61 e7       	ldi	r22, 0x71	; 113
   18108:	73 e1       	ldi	r23, 0x13	; 19
   1810a:	88 ed       	ldi	r24, 0xD8	; 216
   1810c:	94 e0       	ldi	r25, 0x04	; 4
   1810e:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18112:	65 ea       	ldi	r22, 0xA5	; 165
   18114:	73 e1       	ldi	r23, 0x13	; 19
   18116:	86 e9       	ldi	r24, 0x96	; 150
   18118:	9c e0       	ldi	r25, 0x0C	; 12
   1811a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1811e:	88 e9       	ldi	r24, 0x98	; 152
   18120:	9c e0       	ldi	r25, 0x0C	; 12
   18122:	0e 94 a8 84 	call	0x10950	; 0x10950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   18126:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   1812a:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   1812e:	08 95       	ret
   18130:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2a>
   18134:	82 30       	cpi	r24, 0x02	; 2
   18136:	09 f4       	brne	.+2      	; 0x1813a <_Z21Select_Operation_Modev+0x3dc>
   18138:	45 c0       	rjmp	.+138    	; 0x181c4 <_Z21Select_Operation_Modev+0x466>
   1813a:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1813e:	81 30       	cpi	r24, 0x01	; 1
   18140:	51 f4       	brne	.+20     	; 0x18156 <_Z21Select_Operation_Modev+0x3f8>
   18142:	6a e1       	ldi	r22, 0x1A	; 26
   18144:	75 e4       	ldi	r23, 0x45	; 69
   18146:	85 e5       	ldi	r24, 0x55	; 85
   18148:	94 e1       	ldi	r25, 0x14	; 20
   1814a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1814e:	85 e5       	ldi	r24, 0x55	; 85
   18150:	94 e1       	ldi	r25, 0x14	; 20
   18152:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18156:	22 e0       	ldi	r18, 0x02	; 2
   18158:	20 93 71 13 	sts	0x1371, r18	; 0x801371 <_sRuble_Parameters+0x27>
   1815c:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18160:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18164:	84 60       	ori	r24, 0x04	; 4
   18166:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1816a:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1816e:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   18172:	81 60       	ori	r24, 0x01	; 1
   18174:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   18178:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1817c:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18180:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18184:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   18188:	88 60       	ori	r24, 0x08	; 8
   1818a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1818e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18192:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18196:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1819a:	81 e0       	ldi	r24, 0x01	; 1
   1819c:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   181a0:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0xb5>
   181a4:	6f ef       	ldi	r22, 0xFF	; 255
   181a6:	73 e1       	ldi	r23, 0x13	; 19
   181a8:	89 e1       	ldi	r24, 0x19	; 25
   181aa:	95 e0       	ldi	r25, 0x05	; 5
   181ac:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181b0:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   181b4:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   181b8:	61 e7       	ldi	r22, 0x71	; 113
   181ba:	73 e1       	ldi	r23, 0x13	; 19
   181bc:	88 ed       	ldi	r24, 0xD8	; 216
   181be:	94 e0       	ldi	r25, 0x04	; 4
   181c0:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181c4:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   181c8:	88 23       	and	r24, r24
   181ca:	09 f4       	brne	.+2      	; 0x181ce <_Z21Select_Operation_Modev+0x470>
   181cc:	9b c0       	rjmp	.+310    	; 0x18304 <_Z21Select_Operation_Modev+0x5a6>
   181ce:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   181d2:	81 30       	cpi	r24, 0x01	; 1
   181d4:	09 f0       	breq	.+2      	; 0x181d8 <_Z21Select_Operation_Modev+0x47a>
   181d6:	70 c0       	rjmp	.+224    	; 0x182b8 <_Z21Select_Operation_Modev+0x55a>
   181d8:	67 e0       	ldi	r22, 0x07	; 7
   181da:	75 e4       	ldi	r23, 0x45	; 69
   181dc:	54 c0       	rjmp	.+168    	; 0x18286 <_Z21Select_Operation_Modev+0x528>
   181de:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2a>
   181e2:	82 30       	cpi	r24, 0x02	; 2
   181e4:	09 f4       	brne	.+2      	; 0x181e8 <_Z21Select_Operation_Modev+0x48a>
   181e6:	8e c0       	rjmp	.+284    	; 0x18304 <_Z21Select_Operation_Modev+0x5a6>
   181e8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   181ec:	81 30       	cpi	r24, 0x01	; 1
   181ee:	51 f4       	brne	.+20     	; 0x18204 <_Z21Select_Operation_Modev+0x4a6>
   181f0:	62 ef       	ldi	r22, 0xF2	; 242
   181f2:	74 e4       	ldi	r23, 0x44	; 68
   181f4:	85 e5       	ldi	r24, 0x55	; 85
   181f6:	94 e1       	ldi	r25, 0x14	; 20
   181f8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   181fc:	85 e5       	ldi	r24, 0x55	; 85
   181fe:	94 e1       	ldi	r25, 0x14	; 20
   18200:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18204:	22 e0       	ldi	r18, 0x02	; 2
   18206:	20 93 71 13 	sts	0x1371, r18	; 0x801371 <_sRuble_Parameters+0x27>
   1820a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1820e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18212:	84 60       	ori	r24, 0x04	; 4
   18214:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18218:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1821c:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   18220:	81 60       	ori	r24, 0x01	; 1
   18222:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   18226:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1822a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1822e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18232:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   18236:	88 60       	ori	r24, 0x08	; 8
   18238:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1823c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18240:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18244:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   18248:	81 e0       	ldi	r24, 0x01	; 1
   1824a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   1824e:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0xb5>
   18252:	6f ef       	ldi	r22, 0xFF	; 255
   18254:	73 e1       	ldi	r23, 0x13	; 19
   18256:	89 e1       	ldi	r24, 0x19	; 25
   18258:	95 e0       	ldi	r25, 0x05	; 5
   1825a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1825e:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   18262:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   18266:	48 c0       	rjmp	.+144    	; 0x182f8 <_Z21Select_Operation_Modev+0x59a>
   18268:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2a>
   1826c:	82 30       	cpi	r24, 0x02	; 2
   1826e:	09 f0       	breq	.+2      	; 0x18272 <_Z21Select_Operation_Modev+0x514>
   18270:	49 c0       	rjmp	.+146    	; 0x18304 <_Z21Select_Operation_Modev+0x5a6>
   18272:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
   18276:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1827a:	99 23       	and	r25, r25
   1827c:	69 f0       	breq	.+26     	; 0x18298 <_Z21Select_Operation_Modev+0x53a>
   1827e:	81 30       	cpi	r24, 0x01	; 1
   18280:	d9 f4       	brne	.+54     	; 0x182b8 <_Z21Select_Operation_Modev+0x55a>
   18282:	6f ed       	ldi	r22, 0xDF	; 223
   18284:	74 e4       	ldi	r23, 0x44	; 68
   18286:	85 e5       	ldi	r24, 0x55	; 85
   18288:	94 e1       	ldi	r25, 0x14	; 20
   1828a:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1828e:	85 e5       	ldi	r24, 0x55	; 85
   18290:	94 e1       	ldi	r25, 0x14	; 20
   18292:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18296:	10 c0       	rjmp	.+32     	; 0x182b8 <_Z21Select_Operation_Modev+0x55a>
   18298:	81 30       	cpi	r24, 0x01	; 1
   1829a:	51 f4       	brne	.+20     	; 0x182b0 <_Z21Select_Operation_Modev+0x552>
   1829c:	6c ec       	ldi	r22, 0xCC	; 204
   1829e:	74 e4       	ldi	r23, 0x44	; 68
   182a0:	85 e5       	ldi	r24, 0x55	; 85
   182a2:	94 e1       	ldi	r25, 0x14	; 20
   182a4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   182a8:	85 e5       	ldi	r24, 0x55	; 85
   182aa:	94 e1       	ldi	r25, 0x14	; 20
   182ac:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   182b0:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xe8>
   182b4:	10 92 31 14 	sts	0x1431, r1	; 0x801431 <_sRuble_Parameters+0xe7>
   182b8:	85 e0       	ldi	r24, 0x05	; 5
   182ba:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x27>
   182be:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   182c2:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   182c6:	84 60       	ori	r24, 0x04	; 4
   182c8:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   182cc:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   182d0:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   182d4:	8e 7f       	andi	r24, 0xFE	; 254
   182d6:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   182da:	80 e1       	ldi	r24, 0x10	; 16
   182dc:	90 e0       	ldi	r25, 0x00	; 0
   182de:	a0 e0       	ldi	r26, 0x00	; 0
   182e0:	b0 e0       	ldi	r27, 0x00	; 0
   182e2:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   182e6:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   182ea:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   182ee:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   182f2:	81 e0       	ldi	r24, 0x01	; 1
   182f4:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   182f8:	61 e7       	ldi	r22, 0x71	; 113
   182fa:	73 e1       	ldi	r23, 0x13	; 19
   182fc:	88 ed       	ldi	r24, 0xD8	; 216
   182fe:	94 e0       	ldi	r25, 0x04	; 4
   18300:	0c 94 8f 84 	jmp	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18304:	08 95       	ret

00018306 <_Z16Start_Irrigationv>:
   18306:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1830a:	81 30       	cpi	r24, 0x01	; 1
   1830c:	31 f4       	brne	.+12     	; 0x1831a <_Z16Start_Irrigationv+0x14>
   1830e:	68 e1       	ldi	r22, 0x18	; 24
   18310:	71 e4       	ldi	r23, 0x41	; 65
   18312:	85 e5       	ldi	r24, 0x55	; 85
   18314:	94 e1       	ldi	r25, 0x14	; 20
   18316:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1831a:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
   1831e:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18322:	81 30       	cpi	r24, 0x01	; 1
   18324:	29 f4       	brne	.+10     	; 0x18330 <_Z16Start_Irrigationv+0x2a>
   18326:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   1832a:	81 30       	cpi	r24, 0x01	; 1
   1832c:	09 f4       	brne	.+2      	; 0x18330 <_Z16Start_Irrigationv+0x2a>
   1832e:	d4 c0       	rjmp	.+424    	; 0x184d8 <_Z16Start_Irrigationv+0x1d2>
   18330:	82 e0       	ldi	r24, 0x02	; 2
   18332:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z22Hard_Coded_Flush_Valveh>
   18336:	81 e0       	ldi	r24, 0x01	; 1
   18338:	0e 94 e0 ac 	call	0x159c0	; 0x159c0 <_Z22Valve_Grouping_Handlerh>
   1833c:	88 23       	and	r24, r24
   1833e:	09 f4       	brne	.+2      	; 0x18342 <_Z16Start_Irrigationv+0x3c>
   18340:	b3 c0       	rjmp	.+358    	; 0x184a8 <_Z16Start_Irrigationv+0x1a2>
   18342:	10 92 65 13 	sts	0x1365, r1	; 0x801365 <_sRuble_Parameters+0x1b>
   18346:	10 92 64 13 	sts	0x1364, r1	; 0x801364 <_sRuble_Parameters+0x1a>
   1834a:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   1834e:	81 11       	cpse	r24, r1
   18350:	22 c0       	rjmp	.+68     	; 0x18396 <_Z16Start_Irrigationv+0x90>
   18352:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18356:	81 30       	cpi	r24, 0x01	; 1
   18358:	f1 f4       	brne	.+60     	; 0x18396 <_Z16Start_Irrigationv+0x90>
   1835a:	8a e0       	ldi	r24, 0x0A	; 10
   1835c:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   18360:	89 2b       	or	r24, r25
   18362:	21 f0       	breq	.+8      	; 0x1836c <_Z16Start_Irrigationv+0x66>
   18364:	60 e0       	ldi	r22, 0x00	; 0
   18366:	8a e0       	ldi	r24, 0x0A	; 10
   18368:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1836c:	80 e3       	ldi	r24, 0x30	; 48
   1836e:	95 e7       	ldi	r25, 0x75	; 117
   18370:	0e 94 87 73 	call	0xe70e	; 0xe70e <_Z8My_Delayj>
   18374:	8b e0       	ldi	r24, 0x0B	; 11
   18376:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   1837a:	89 2b       	or	r24, r25
   1837c:	21 f0       	breq	.+8      	; 0x18386 <_Z16Start_Irrigationv+0x80>
   1837e:	60 e0       	ldi	r22, 0x00	; 0
   18380:	8b e0       	ldi	r24, 0x0B	; 11
   18382:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   18386:	e0 91 26 14 	lds	r30, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   1838a:	f0 e0       	ldi	r31, 0x00	; 0
   1838c:	e0 5e       	subi	r30, 0xE0	; 224
   1838e:	fb 4e       	sbci	r31, 0xEB	; 235
   18390:	81 e0       	ldi	r24, 0x01	; 1
   18392:	80 83       	st	Z, r24
   18394:	32 c0       	rjmp	.+100    	; 0x183fa <_Z16Start_Irrigationv+0xf4>
   18396:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1839a:	81 30       	cpi	r24, 0x01	; 1
   1839c:	51 f4       	brne	.+20     	; 0x183b2 <_Z16Start_Irrigationv+0xac>
   1839e:	61 ef       	ldi	r22, 0xF1	; 241
   183a0:	70 e4       	ldi	r23, 0x40	; 64
   183a2:	85 e5       	ldi	r24, 0x55	; 85
   183a4:	94 e1       	ldi	r25, 0x14	; 20
   183a6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   183aa:	85 e5       	ldi	r24, 0x55	; 85
   183ac:	94 e1       	ldi	r25, 0x14	; 20
   183ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   183b2:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   183b6:	62 50       	subi	r22, 0x02	; 2
   183b8:	82 e0       	ldi	r24, 0x02	; 2
   183ba:	b2 d8       	rcall	.-3740   	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   183bc:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   183c0:	88 23       	and	r24, r24
   183c2:	b9 f1       	breq	.+110    	; 0x18432 <_Z16Start_Irrigationv+0x12c>
   183c4:	91 30       	cpi	r25, 0x01	; 1
   183c6:	51 f4       	brne	.+20     	; 0x183dc <_Z16Start_Irrigationv+0xd6>
   183c8:	6c ed       	ldi	r22, 0xDC	; 220
   183ca:	70 e4       	ldi	r23, 0x40	; 64
   183cc:	85 e5       	ldi	r24, 0x55	; 85
   183ce:	94 e1       	ldi	r25, 0x14	; 20
   183d0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   183d4:	85 e5       	ldi	r24, 0x55	; 85
   183d6:	94 e1       	ldi	r25, 0x14	; 20
   183d8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   183dc:	e0 91 26 14 	lds	r30, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   183e0:	f0 e0       	ldi	r31, 0x00	; 0
   183e2:	e0 5e       	subi	r30, 0xE0	; 224
   183e4:	fb 4e       	sbci	r31, 0xEB	; 235
   183e6:	81 e0       	ldi	r24, 0x01	; 1
   183e8:	80 83       	st	Z, r24
   183ea:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
   183ee:	6a e0       	ldi	r22, 0x0A	; 10
   183f0:	74 e1       	ldi	r23, 0x14	; 20
   183f2:	8d ea       	ldi	r24, 0xAD	; 173
   183f4:	9c e0       	ldi	r25, 0x0C	; 12
   183f6:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   183fa:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   183fe:	86 e9       	ldi	r24, 0x96	; 150
   18400:	90 e0       	ldi	r25, 0x00	; 0
   18402:	90 93 0c 14 	sts	0x140C, r25	; 0x80140c <_sRuble_Parameters+0xc2>
   18406:	80 93 0b 14 	sts	0x140B, r24	; 0x80140b <_sRuble_Parameters+0xc1>
   1840a:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2b>
   1840e:	82 60       	ori	r24, 0x02	; 2
   18410:	80 93 75 13 	sts	0x1375, r24	; 0x801375 <_sRuble_Parameters+0x2b>
   18414:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18418:	81 30       	cpi	r24, 0x01	; 1
   1841a:	d9 f5       	brne	.+118    	; 0x18492 <_Z16Start_Irrigationv+0x18c>
   1841c:	68 e9       	ldi	r22, 0x98	; 152
   1841e:	70 e4       	ldi	r23, 0x40	; 64
   18420:	85 e5       	ldi	r24, 0x55	; 85
   18422:	94 e1       	ldi	r25, 0x14	; 20
   18424:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18428:	85 e5       	ldi	r24, 0x55	; 85
   1842a:	94 e1       	ldi	r25, 0x14	; 20
   1842c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18430:	30 c0       	rjmp	.+96     	; 0x18492 <_Z16Start_Irrigationv+0x18c>
   18432:	91 30       	cpi	r25, 0x01	; 1
   18434:	51 f4       	brne	.+20     	; 0x1844a <_Z16Start_Irrigationv+0x144>
   18436:	6f eb       	ldi	r22, 0xBF	; 191
   18438:	70 e4       	ldi	r23, 0x40	; 64
   1843a:	85 e5       	ldi	r24, 0x55	; 85
   1843c:	94 e1       	ldi	r25, 0x14	; 20
   1843e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18442:	85 e5       	ldi	r24, 0x55	; 85
   18444:	94 e1       	ldi	r25, 0x14	; 20
   18446:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1844a:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   1844e:	6a e0       	ldi	r22, 0x0A	; 10
   18450:	74 e1       	ldi	r23, 0x14	; 20
   18452:	8d ea       	ldi	r24, 0xAD	; 173
   18454:	9c e0       	ldi	r25, 0x0C	; 12
   18456:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1845a:	e0 91 26 14 	lds	r30, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   1845e:	f0 e0       	ldi	r31, 0x00	; 0
   18460:	e0 5e       	subi	r30, 0xE0	; 224
   18462:	fb 4e       	sbci	r31, 0xEB	; 235
   18464:	10 82       	st	Z, r1
   18466:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   1846a:	91 db       	rcall	.-2270   	; 0x17b8e <_Z15Stop_Irrigationv>
   1846c:	64 e0       	ldi	r22, 0x04	; 4
   1846e:	80 e0       	ldi	r24, 0x00	; 0
   18470:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18474:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18478:	81 30       	cpi	r24, 0x01	; 1
   1847a:	71 f5       	brne	.+92     	; 0x184d8 <_Z16Start_Irrigationv+0x1d2>
   1847c:	69 ea       	ldi	r22, 0xA9	; 169
   1847e:	70 e4       	ldi	r23, 0x40	; 64
   18480:	85 e5       	ldi	r24, 0x55	; 85
   18482:	94 e1       	ldi	r25, 0x14	; 20
   18484:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18488:	85 e5       	ldi	r24, 0x55	; 85
   1848a:	94 e1       	ldi	r25, 0x14	; 20
   1848c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18490:	23 c0       	rjmp	.+70     	; 0x184d8 <_Z16Start_Irrigationv+0x1d2>
   18492:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18496:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1849a:	84 60       	ori	r24, 0x04	; 4
   1849c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   184a0:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   184a4:	81 e0       	ldi	r24, 0x01	; 1
   184a6:	08 95       	ret
   184a8:	72 db       	rcall	.-2332   	; 0x17b8e <_Z15Stop_Irrigationv>
   184aa:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   184ae:	81 30       	cpi	r24, 0x01	; 1
   184b0:	51 f4       	brne	.+20     	; 0x184c6 <_Z16Start_Irrigationv+0x1c0>
   184b2:	62 e8       	ldi	r22, 0x82	; 130
   184b4:	70 e4       	ldi	r23, 0x40	; 64
   184b6:	85 e5       	ldi	r24, 0x55	; 85
   184b8:	94 e1       	ldi	r25, 0x14	; 20
   184ba:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   184be:	85 e5       	ldi	r24, 0x55	; 85
   184c0:	94 e1       	ldi	r25, 0x14	; 20
   184c2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   184c6:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   184ca:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   184ce:	84 60       	ori	r24, 0x04	; 4
   184d0:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   184d4:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   184d8:	80 e0       	ldi	r24, 0x00	; 0
   184da:	08 95       	ret

000184dc <_Z13Run_Operationv>:
   184dc:	0f 93       	push	r16
   184de:	1f 93       	push	r17
   184e0:	cf 93       	push	r28
   184e2:	df 93       	push	r29
   184e4:	1f 92       	push	r1
   184e6:	1f 92       	push	r1
   184e8:	cd b7       	in	r28, 0x3d	; 61
   184ea:	de b7       	in	r29, 0x3e	; 62
   184ec:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Monitoring_Three_Phase>
   184f0:	86 34       	cpi	r24, 0x46	; 70
   184f2:	08 f4       	brcc	.+2      	; 0x184f6 <_Z13Run_Operationv+0x1a>
   184f4:	01 c3       	rjmp	.+1538   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   184f6:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   184fa:	82 30       	cpi	r24, 0x02	; 2
   184fc:	61 f0       	breq	.+24     	; 0x18516 <_Z13Run_Operationv+0x3a>
   184fe:	20 f4       	brcc	.+8      	; 0x18508 <_Z13Run_Operationv+0x2c>
   18500:	81 30       	cpi	r24, 0x01	; 1
   18502:	09 f4       	brne	.+2      	; 0x18506 <_Z13Run_Operationv+0x2a>
   18504:	42 c0       	rjmp	.+132    	; 0x1858a <_Z13Run_Operationv+0xae>
   18506:	f8 c2       	rjmp	.+1520   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18508:	83 30       	cpi	r24, 0x03	; 3
   1850a:	09 f4       	brne	.+2      	; 0x1850e <_Z13Run_Operationv+0x32>
   1850c:	d5 c0       	rjmp	.+426    	; 0x186b8 <_Z13Run_Operationv+0x1dc>
   1850e:	85 30       	cpi	r24, 0x05	; 5
   18510:	09 f4       	brne	.+2      	; 0x18514 <_Z13Run_Operationv+0x38>
   18512:	ce c2       	rjmp	.+1436   	; 0x18ab0 <_Z13Run_Operationv+0x5d4>
   18514:	f1 c2       	rjmp	.+1506   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18516:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x28>
   1851a:	81 30       	cpi	r24, 0x01	; 1
   1851c:	19 f0       	breq	.+6      	; 0x18524 <_Z13Run_Operationv+0x48>
   1851e:	84 30       	cpi	r24, 0x04	; 4
   18520:	09 f0       	breq	.+2      	; 0x18524 <_Z13Run_Operationv+0x48>
   18522:	ea c2       	rjmp	.+1492   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18524:	0e 94 60 52 	call	0xa4c0	; 0xa4c0 <_Z20Schedules_Monitoringv>
   18528:	80 91 31 14 	lds	r24, 0x1431	; 0x801431 <_sRuble_Parameters+0xe7>
   1852c:	90 91 32 14 	lds	r25, 0x1432	; 0x801432 <_sRuble_Parameters+0xe8>
   18530:	89 2b       	or	r24, r25
   18532:	09 f0       	breq	.+2      	; 0x18536 <_Z13Run_Operationv+0x5a>
   18534:	e1 c2       	rjmp	.+1474   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18536:	2b db       	rcall	.-2474   	; 0x17b8e <_Z15Stop_Irrigationv>
   18538:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1853c:	88 23       	and	r24, r24
   1853e:	49 f0       	breq	.+18     	; 0x18552 <_Z13Run_Operationv+0x76>
   18540:	83 e0       	ldi	r24, 0x03	; 3
   18542:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18546:	91 30       	cpi	r25, 0x01	; 1
   18548:	09 f0       	breq	.+2      	; 0x1854c <_Z13Run_Operationv+0x70>
   1854a:	d6 c2       	rjmp	.+1452   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   1854c:	64 ea       	ldi	r22, 0xA4	; 164
   1854e:	74 e4       	ldi	r23, 0x44	; 68
   18550:	0e c0       	rjmp	.+28     	; 0x1856e <_Z13Run_Operationv+0x92>
   18552:	84 e0       	ldi	r24, 0x04	; 4
   18554:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18558:	28 e5       	ldi	r18, 0x58	; 88
   1855a:	32 e0       	ldi	r19, 0x02	; 2
   1855c:	30 93 32 14 	sts	0x1432, r19	; 0x801432 <_sRuble_Parameters+0xe8>
   18560:	20 93 31 14 	sts	0x1431, r18	; 0x801431 <_sRuble_Parameters+0xe7>
   18564:	91 30       	cpi	r25, 0x01	; 1
   18566:	09 f0       	breq	.+2      	; 0x1856a <_Z13Run_Operationv+0x8e>
   18568:	c7 c2       	rjmp	.+1422   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   1856a:	6c e7       	ldi	r22, 0x7C	; 124
   1856c:	74 e4       	ldi	r23, 0x44	; 68
   1856e:	85 e5       	ldi	r24, 0x55	; 85
   18570:	94 e1       	ldi	r25, 0x14	; 20
   18572:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18576:	85 e5       	ldi	r24, 0x55	; 85
   18578:	94 e1       	ldi	r25, 0x14	; 20
   1857a:	0f 90       	pop	r0
   1857c:	0f 90       	pop	r0
   1857e:	df 91       	pop	r29
   18580:	cf 91       	pop	r28
   18582:	1f 91       	pop	r17
   18584:	0f 91       	pop	r16
   18586:	0c 94 9b cf 	jmp	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1858a:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x28>
   1858e:	83 30       	cpi	r24, 0x03	; 3
   18590:	09 f4       	brne	.+2      	; 0x18594 <_Z13Run_Operationv+0xb8>
   18592:	48 c0       	rjmp	.+144    	; 0x18624 <_Z13Run_Operationv+0x148>
   18594:	20 f4       	brcc	.+8      	; 0x1859e <_Z13Run_Operationv+0xc2>
   18596:	81 30       	cpi	r24, 0x01	; 1
   18598:	08 f4       	brcc	.+2      	; 0x1859c <_Z13Run_Operationv+0xc0>
   1859a:	ae c2       	rjmp	.+1372   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   1859c:	03 c0       	rjmp	.+6      	; 0x185a4 <_Z13Run_Operationv+0xc8>
   1859e:	84 30       	cpi	r24, 0x04	; 4
   185a0:	09 f0       	breq	.+2      	; 0x185a4 <_Z13Run_Operationv+0xc8>
   185a2:	aa c2       	rjmp	.+1364   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   185a4:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <_sRuble_Parameters+0xb8>
   185a8:	81 11       	cpse	r24, r1
   185aa:	a6 c2       	rjmp	.+1356   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   185ac:	0e 94 60 52 	call	0xa4c0	; 0xa4c0 <_Z20Schedules_Monitoringv>
   185b0:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   185b4:	88 23       	and	r24, r24
   185b6:	59 f1       	breq	.+86     	; 0x1860e <_Z13Run_Operationv+0x132>
   185b8:	80 91 31 14 	lds	r24, 0x1431	; 0x801431 <_sRuble_Parameters+0xe7>
   185bc:	90 91 32 14 	lds	r25, 0x1432	; 0x801432 <_sRuble_Parameters+0xe8>
   185c0:	89 2b       	or	r24, r25
   185c2:	09 f0       	breq	.+2      	; 0x185c6 <_Z13Run_Operationv+0xea>
   185c4:	99 c2       	rjmp	.+1330   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   185c6:	e3 da       	rcall	.-2618   	; 0x17b8e <_Z15Stop_Irrigationv>
   185c8:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   185cc:	88 23       	and	r24, r24
   185ce:	49 f0       	breq	.+18     	; 0x185e2 <_Z13Run_Operationv+0x106>
   185d0:	83 e0       	ldi	r24, 0x03	; 3
   185d2:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   185d6:	91 30       	cpi	r25, 0x01	; 1
   185d8:	09 f0       	breq	.+2      	; 0x185dc <_Z13Run_Operationv+0x100>
   185da:	8e c2       	rjmp	.+1308   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   185dc:	6a e5       	ldi	r22, 0x5A	; 90
   185de:	74 e4       	ldi	r23, 0x44	; 68
   185e0:	c6 cf       	rjmp	.-116    	; 0x1856e <_Z13Run_Operationv+0x92>
   185e2:	84 e0       	ldi	r24, 0x04	; 4
   185e4:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   185e8:	91 30       	cpi	r25, 0x01	; 1
   185ea:	51 f4       	brne	.+20     	; 0x18600 <_Z13Run_Operationv+0x124>
   185ec:	6f e2       	ldi	r22, 0x2F	; 47
   185ee:	74 e4       	ldi	r23, 0x44	; 68
   185f0:	85 e5       	ldi	r24, 0x55	; 85
   185f2:	94 e1       	ldi	r25, 0x14	; 20
   185f4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   185f8:	85 e5       	ldi	r24, 0x55	; 85
   185fa:	94 e1       	ldi	r25, 0x14	; 20
   185fc:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18600:	88 e5       	ldi	r24, 0x58	; 88
   18602:	92 e0       	ldi	r25, 0x02	; 2
   18604:	90 93 32 14 	sts	0x1432, r25	; 0x801432 <_sRuble_Parameters+0xe8>
   18608:	80 93 31 14 	sts	0x1431, r24	; 0x801431 <_sRuble_Parameters+0xe7>
   1860c:	75 c2       	rjmp	.+1258   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   1860e:	83 e0       	ldi	r24, 0x03	; 3
   18610:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18614:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18618:	81 30       	cpi	r24, 0x01	; 1
   1861a:	09 f0       	breq	.+2      	; 0x1861e <_Z13Run_Operationv+0x142>
   1861c:	6d c2       	rjmp	.+1242   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   1861e:	6e e0       	ldi	r22, 0x0E	; 14
   18620:	74 e4       	ldi	r23, 0x44	; 68
   18622:	a5 cf       	rjmp	.-182    	; 0x1856e <_Z13Run_Operationv+0x92>
   18624:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
   18628:	88 23       	and	r24, r24
   1862a:	a1 f0       	breq	.+40     	; 0x18654 <_Z13Run_Operationv+0x178>
   1862c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18630:	81 30       	cpi	r24, 0x01	; 1
   18632:	51 f4       	brne	.+20     	; 0x18648 <_Z13Run_Operationv+0x16c>
   18634:	6f ed       	ldi	r22, 0xDF	; 223
   18636:	73 e4       	ldi	r23, 0x43	; 67
   18638:	85 e5       	ldi	r24, 0x55	; 85
   1863a:	94 e1       	ldi	r25, 0x14	; 20
   1863c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18640:	85 e5       	ldi	r24, 0x55	; 85
   18642:	94 e1       	ldi	r25, 0x14	; 20
   18644:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18648:	a2 da       	rcall	.-2748   	; 0x17b8e <_Z15Stop_Irrigationv>
   1864a:	81 11       	cpse	r24, r1
   1864c:	03 c0       	rjmp	.+6      	; 0x18654 <_Z13Run_Operationv+0x178>
   1864e:	84 e0       	ldi	r24, 0x04	; 4
   18650:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18654:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   18658:	81 11       	cpse	r24, r1
   1865a:	04 c0       	rjmp	.+8      	; 0x18664 <_Z13Run_Operationv+0x188>
   1865c:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18660:	88 23       	and	r24, r24
   18662:	a1 f0       	breq	.+40     	; 0x1868c <_Z13Run_Operationv+0x1b0>
   18664:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18668:	81 30       	cpi	r24, 0x01	; 1
   1866a:	51 f4       	brne	.+20     	; 0x18680 <_Z13Run_Operationv+0x1a4>
   1866c:	64 ec       	ldi	r22, 0xC4	; 196
   1866e:	73 e4       	ldi	r23, 0x43	; 67
   18670:	85 e5       	ldi	r24, 0x55	; 85
   18672:	94 e1       	ldi	r25, 0x14	; 20
   18674:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18678:	85 e5       	ldi	r24, 0x55	; 85
   1867a:	94 e1       	ldi	r25, 0x14	; 20
   1867c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18680:	86 da       	rcall	.-2804   	; 0x17b8e <_Z15Stop_Irrigationv>
   18682:	81 11       	cpse	r24, r1
   18684:	03 c0       	rjmp	.+6      	; 0x1868c <_Z13Run_Operationv+0x1b0>
   18686:	84 e0       	ldi	r24, 0x04	; 4
   18688:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   1868c:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <_sRuble_Parameters+0xb8>
   18690:	88 23       	and	r24, r24
   18692:	09 f4       	brne	.+2      	; 0x18696 <_Z13Run_Operationv+0x1ba>
   18694:	31 c2       	rjmp	.+1122   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18696:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1869a:	81 30       	cpi	r24, 0x01	; 1
   1869c:	51 f4       	brne	.+20     	; 0x186b2 <_Z13Run_Operationv+0x1d6>
   1869e:	6b e9       	ldi	r22, 0x9B	; 155
   186a0:	73 e4       	ldi	r23, 0x43	; 67
   186a2:	85 e5       	ldi	r24, 0x55	; 85
   186a4:	94 e1       	ldi	r25, 0x14	; 20
   186a6:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   186aa:	85 e5       	ldi	r24, 0x55	; 85
   186ac:	94 e1       	ldi	r25, 0x14	; 20
   186ae:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   186b2:	6d da       	rcall	.-2854   	; 0x17b8e <_Z15Stop_Irrigationv>
   186b4:	84 e0       	ldi	r24, 0x04	; 4
   186b6:	55 c0       	rjmp	.+170    	; 0x18762 <_Z13Run_Operationv+0x286>
   186b8:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x28>
   186bc:	83 30       	cpi	r24, 0x03	; 3
   186be:	09 f4       	brne	.+2      	; 0x186c2 <_Z13Run_Operationv+0x1e6>
   186c0:	76 c0       	rjmp	.+236    	; 0x187ae <_Z13Run_Operationv+0x2d2>
   186c2:	20 f4       	brcc	.+8      	; 0x186cc <_Z13Run_Operationv+0x1f0>
   186c4:	81 30       	cpi	r24, 0x01	; 1
   186c6:	08 f4       	brcc	.+2      	; 0x186ca <_Z13Run_Operationv+0x1ee>
   186c8:	17 c2       	rjmp	.+1070   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   186ca:	03 c0       	rjmp	.+6      	; 0x186d2 <_Z13Run_Operationv+0x1f6>
   186cc:	84 30       	cpi	r24, 0x04	; 4
   186ce:	09 f0       	breq	.+2      	; 0x186d2 <_Z13Run_Operationv+0x1f6>
   186d0:	13 c2       	rjmp	.+1062   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   186d2:	80 91 68 13 	lds	r24, 0x1368	; 0x801368 <_sRuble_Parameters+0x1e>
   186d6:	90 91 69 13 	lds	r25, 0x1369	; 0x801369 <_sRuble_Parameters+0x1f>
   186da:	89 2b       	or	r24, r25
   186dc:	09 f0       	breq	.+2      	; 0x186e0 <_Z13Run_Operationv+0x204>
   186de:	0c c2       	rjmp	.+1048   	; 0x18af8 <_Z13Run_Operationv+0x61c>
   186e0:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   186e4:	81 30       	cpi	r24, 0x01	; 1
   186e6:	b1 f4       	brne	.+44     	; 0x18714 <_Z13Run_Operationv+0x238>
   186e8:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   186ec:	81 30       	cpi	r24, 0x01	; 1
   186ee:	91 f4       	brne	.+36     	; 0x18714 <_Z13Run_Operationv+0x238>
   186f0:	80 ef       	ldi	r24, 0xF0	; 240
   186f2:	90 e0       	ldi	r25, 0x00	; 0
   186f4:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   186f8:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   186fc:	63 ef       	ldi	r22, 0xF3	; 243
   186fe:	73 e1       	ldi	r23, 0x13	; 19
   18700:	86 e9       	ldi	r24, 0x96	; 150
   18702:	9c e0       	ldi	r25, 0x0C	; 12
   18704:	0f 90       	pop	r0
   18706:	0f 90       	pop	r0
   18708:	df 91       	pop	r29
   1870a:	cf 91       	pop	r28
   1870c:	1f 91       	pop	r17
   1870e:	0f 91       	pop	r16
   18710:	0c 94 8f 84 	jmp	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18714:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   18718:	81 11       	cpse	r24, r1
   1871a:	04 c0       	rjmp	.+8      	; 0x18724 <_Z13Run_Operationv+0x248>
   1871c:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18720:	88 23       	and	r24, r24
   18722:	39 f0       	breq	.+14     	; 0x18732 <_Z13Run_Operationv+0x256>
   18724:	8c e3       	ldi	r24, 0x3C	; 60
   18726:	90 e0       	ldi	r25, 0x00	; 0
   18728:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   1872c:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   18730:	e3 c1       	rjmp	.+966    	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18732:	10 92 80 0d 	sts	0x0D80, r1	; 0x800d80 <_ZZ13Run_OperationvE12eeprom_timer>
   18736:	10 92 06 14 	sts	0x1406, r1	; 0x801406 <_sRuble_Parameters+0xbc>
   1873a:	0e 94 60 52 	call	0xa4c0	; 0xa4c0 <_Z20Schedules_Monitoringv>
   1873e:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   18742:	88 23       	and	r24, r24
   18744:	69 f0       	breq	.+26     	; 0x18760 <_Z13Run_Operationv+0x284>
   18746:	23 da       	rcall	.-3002   	; 0x17b8e <_Z15Stop_Irrigationv>
   18748:	88 23       	and	r24, r24
   1874a:	71 f0       	breq	.+28     	; 0x18768 <_Z13Run_Operationv+0x28c>
   1874c:	69 e7       	ldi	r22, 0x79	; 121
   1874e:	73 e4       	ldi	r23, 0x43	; 67
   18750:	85 e5       	ldi	r24, 0x55	; 85
   18752:	94 e1       	ldi	r25, 0x14	; 20
   18754:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18758:	85 e5       	ldi	r24, 0x55	; 85
   1875a:	94 e1       	ldi	r25, 0x14	; 20
   1875c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18760:	83 e0       	ldi	r24, 0x03	; 3
   18762:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18766:	c8 c1       	rjmp	.+912    	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18768:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1876c:	81 30       	cpi	r24, 0x01	; 1
   1876e:	51 f4       	brne	.+20     	; 0x18784 <_Z13Run_Operationv+0x2a8>
   18770:	66 e3       	ldi	r22, 0x36	; 54
   18772:	73 e4       	ldi	r23, 0x43	; 67
   18774:	85 e5       	ldi	r24, 0x55	; 85
   18776:	94 e1       	ldi	r25, 0x14	; 20
   18778:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1877c:	85 e5       	ldi	r24, 0x55	; 85
   1877e:	94 e1       	ldi	r25, 0x14	; 20
   18780:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18784:	83 e0       	ldi	r24, 0x03	; 3
   18786:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   1878a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1878e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18792:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18796:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   1879a:	92 60       	ori	r25, 0x02	; 2
   1879c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   187a0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   187a4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   187a8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   187ac:	a5 c1       	rjmp	.+842    	; 0x18af8 <_Z13Run_Operationv+0x61c>
   187ae:	80 91 80 0d 	lds	r24, 0x0D80	; 0x800d80 <_ZZ13Run_OperationvE12eeprom_timer>
   187b2:	8f 5f       	subi	r24, 0xFF	; 255
   187b4:	8b 3a       	cpi	r24, 0xAB	; 171
   187b6:	18 f4       	brcc	.+6      	; 0x187be <_Z13Run_Operationv+0x2e2>
   187b8:	80 93 80 0d 	sts	0x0D80, r24	; 0x800d80 <_ZZ13Run_OperationvE12eeprom_timer>
   187bc:	06 c0       	rjmp	.+12     	; 0x187ca <_Z13Run_Operationv+0x2ee>
   187be:	10 92 80 0d 	sts	0x0D80, r1	; 0x800d80 <_ZZ13Run_OperationvE12eeprom_timer>
   187c2:	88 e9       	ldi	r24, 0x98	; 152
   187c4:	9c e0       	ldi	r25, 0x0C	; 12
   187c6:	0e 94 a8 84 	call	0x10950	; 0x10950 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   187ca:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   187ce:	81 11       	cpse	r24, r1
   187d0:	95 c0       	rjmp	.+298    	; 0x188fc <_Z13Run_Operationv+0x420>
   187d2:	00 91 62 13 	lds	r16, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   187d6:	10 91 63 13 	lds	r17, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   187da:	c8 01       	movw	r24, r16
   187dc:	88 60       	ori	r24, 0x08	; 8
   187de:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   187e2:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   187e6:	88 e9       	ldi	r24, 0x98	; 152
   187e8:	9c e0       	ldi	r25, 0x0C	; 12
   187ea:	0e 94 b9 ec 	call	0x1d972	; 0x1d972 <eeprom_read_byte>
   187ee:	89 83       	std	Y+1, r24	; 0x01
   187f0:	89 e9       	ldi	r24, 0x99	; 153
   187f2:	9c e0       	ldi	r25, 0x0C	; 12
   187f4:	0e 94 b9 ec 	call	0x1d972	; 0x1d972 <eeprom_read_byte>
   187f8:	8a 83       	std	Y+2, r24	; 0x02
   187fa:	89 81       	ldd	r24, Y+1	; 0x01
   187fc:	9a 81       	ldd	r25, Y+2	; 0x02
   187fe:	90 93 61 13 	sts	0x1361, r25	; 0x801361 <_sRuble_Parameters+0x17>
   18802:	80 93 60 13 	sts	0x1360, r24	; 0x801360 <_sRuble_Parameters+0x16>
   18806:	10 92 65 13 	sts	0x1365, r1	; 0x801365 <_sRuble_Parameters+0x1b>
   1880a:	10 92 64 13 	sts	0x1364, r1	; 0x801364 <_sRuble_Parameters+0x1a>
   1880e:	88 e7       	ldi	r24, 0x78	; 120
   18810:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbc>
   18814:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   18818:	81 11       	cpse	r24, r1
   1881a:	62 c0       	rjmp	.+196    	; 0x188e0 <_Z13Run_Operationv+0x404>
   1881c:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18820:	81 11       	cpse	r24, r1
   18822:	5e c0       	rjmp	.+188    	; 0x188e0 <_Z13Run_Operationv+0x404>
   18824:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0xa9>
   18828:	80 93 a5 13 	sts	0x13A5, r24	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1882c:	65 ea       	ldi	r22, 0xA5	; 165
   1882e:	73 e1       	ldi	r23, 0x13	; 19
   18830:	86 e9       	ldi	r24, 0x96	; 150
   18832:	9c e0       	ldi	r25, 0x0C	; 12
   18834:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18838:	66 dd       	rcall	.-1332   	; 0x18306 <_Z16Start_Irrigationv>
   1883a:	81 11       	cpse	r24, r1
   1883c:	2c c0       	rjmp	.+88     	; 0x18896 <_Z13Run_Operationv+0x3ba>
   1883e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18842:	81 30       	cpi	r24, 0x01	; 1
   18844:	51 f4       	brne	.+20     	; 0x1885a <_Z13Run_Operationv+0x37e>
   18846:	6e ee       	ldi	r22, 0xEE	; 238
   18848:	72 e4       	ldi	r23, 0x42	; 66
   1884a:	85 e5       	ldi	r24, 0x55	; 85
   1884c:	94 e1       	ldi	r25, 0x14	; 20
   1884e:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18852:	85 e5       	ldi	r24, 0x55	; 85
   18854:	94 e1       	ldi	r25, 0x14	; 20
   18856:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1885a:	81 e0       	ldi	r24, 0x01	; 1
   1885c:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18860:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18864:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18868:	84 60       	ori	r24, 0x04	; 4
   1886a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1886e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18872:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18876:	81 30       	cpi	r24, 0x01	; 1
   18878:	39 f4       	brne	.+14     	; 0x18888 <_Z13Run_Operationv+0x3ac>
   1887a:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   1887e:	81 30       	cpi	r24, 0x01	; 1
   18880:	19 f4       	brne	.+6      	; 0x18888 <_Z13Run_Operationv+0x3ac>
   18882:	80 ef       	ldi	r24, 0xF0	; 240
   18884:	90 e0       	ldi	r25, 0x00	; 0
   18886:	02 c0       	rjmp	.+4      	; 0x1888c <_Z13Run_Operationv+0x3b0>
   18888:	88 e5       	ldi	r24, 0x58	; 88
   1888a:	92 e0       	ldi	r25, 0x02	; 2
   1888c:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   18890:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   18894:	33 c0       	rjmp	.+102    	; 0x188fc <_Z13Run_Operationv+0x420>
   18896:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1889a:	81 11       	cpse	r24, r1
   1889c:	2f c0       	rjmp	.+94     	; 0x188fc <_Z13Run_Operationv+0x420>
   1889e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   188a2:	81 30       	cpi	r24, 0x01	; 1
   188a4:	51 f4       	brne	.+20     	; 0x188ba <_Z13Run_Operationv+0x3de>
   188a6:	66 ea       	ldi	r22, 0xA6	; 166
   188a8:	72 e4       	ldi	r23, 0x42	; 66
   188aa:	85 e5       	ldi	r24, 0x55	; 85
   188ac:	94 e1       	ldi	r25, 0x14	; 20
   188ae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   188b2:	85 e5       	ldi	r24, 0x55	; 85
   188b4:	94 e1       	ldi	r25, 0x14	; 20
   188b6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   188ba:	88 e5       	ldi	r24, 0x58	; 88
   188bc:	92 e0       	ldi	r25, 0x02	; 2
   188be:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   188c2:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   188c6:	81 e0       	ldi	r24, 0x01	; 1
   188c8:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   188cc:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   188d0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   188d4:	84 60       	ori	r24, 0x04	; 4
   188d6:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   188da:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   188de:	0e c0       	rjmp	.+28     	; 0x188fc <_Z13Run_Operationv+0x420>
   188e0:	88 e5       	ldi	r24, 0x58	; 88
   188e2:	92 e0       	ldi	r25, 0x02	; 2
   188e4:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   188e8:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   188ec:	81 e0       	ldi	r24, 0x01	; 1
   188ee:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   188f2:	0c 60       	ori	r16, 0x0C	; 12
   188f4:	10 93 63 13 	sts	0x1363, r17	; 0x801363 <_sRuble_Parameters+0x19>
   188f8:	00 93 62 13 	sts	0x1362, r16	; 0x801362 <_sRuble_Parameters+0x18>
   188fc:	80 91 60 13 	lds	r24, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   18900:	90 91 61 13 	lds	r25, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
   18904:	89 2b       	or	r24, r25
   18906:	a9 f0       	breq	.+42     	; 0x18932 <_Z13Run_Operationv+0x456>
   18908:	6b e8       	ldi	r22, 0x8B	; 139
   1890a:	72 e4       	ldi	r23, 0x42	; 66
   1890c:	85 e5       	ldi	r24, 0x55	; 85
   1890e:	94 e1       	ldi	r25, 0x14	; 20
   18910:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18914:	60 91 60 13 	lds	r22, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   18918:	70 91 61 13 	lds	r23, 0x1361	; 0x801361 <_sRuble_Parameters+0x17>
   1891c:	4a e0       	ldi	r20, 0x0A	; 10
   1891e:	50 e0       	ldi	r21, 0x00	; 0
   18920:	85 e5       	ldi	r24, 0x55	; 85
   18922:	94 e1       	ldi	r25, 0x14	; 20
   18924:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEji>
   18928:	85 e5       	ldi	r24, 0x55	; 85
   1892a:	94 e1       	ldi	r25, 0x14	; 20
   1892c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18930:	13 c0       	rjmp	.+38     	; 0x18958 <_Z13Run_Operationv+0x47c>
   18932:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18936:	81 30       	cpi	r24, 0x01	; 1
   18938:	51 f4       	brne	.+20     	; 0x1894e <_Z13Run_Operationv+0x472>
   1893a:	6e e6       	ldi	r22, 0x6E	; 110
   1893c:	72 e4       	ldi	r23, 0x42	; 66
   1893e:	85 e5       	ldi	r24, 0x55	; 85
   18940:	94 e1       	ldi	r25, 0x14	; 20
   18942:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18946:	85 e5       	ldi	r24, 0x55	; 85
   18948:	94 e1       	ldi	r25, 0x14	; 20
   1894a:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1894e:	1f d9       	rcall	.-3522   	; 0x17b8e <_Z15Stop_Irrigationv>
   18950:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   18954:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   18958:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
   1895c:	81 11       	cpse	r24, r1
   1895e:	09 c0       	rjmp	.+18     	; 0x18972 <_Z13Run_Operationv+0x496>
   18960:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   18964:	81 11       	cpse	r24, r1
   18966:	11 c0       	rjmp	.+34     	; 0x1898a <_Z13Run_Operationv+0x4ae>
   18968:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   1896c:	81 11       	cpse	r24, r1
   1896e:	0d c0       	rjmp	.+26     	; 0x1898a <_Z13Run_Operationv+0x4ae>
   18970:	93 c0       	rjmp	.+294    	; 0x18a98 <_Z13Run_Operationv+0x5bc>
   18972:	98 2f       	mov	r25, r24
   18974:	97 7f       	andi	r25, 0xF7	; 247
   18976:	91 30       	cpi	r25, 0x01	; 1
   18978:	89 f0       	breq	.+34     	; 0x1899c <_Z13Run_Operationv+0x4c0>
   1897a:	98 2f       	mov	r25, r24
   1897c:	9d 7f       	andi	r25, 0xFD	; 253
   1897e:	94 30       	cpi	r25, 0x04	; 4
   18980:	69 f0       	breq	.+26     	; 0x1899c <_Z13Run_Operationv+0x4c0>
   18982:	8c 30       	cpi	r24, 0x0C	; 12
   18984:	59 f0       	breq	.+22     	; 0x1899c <_Z13Run_Operationv+0x4c0>
   18986:	8f 30       	cpi	r24, 0x0F	; 15
   18988:	49 f0       	breq	.+18     	; 0x1899c <_Z13Run_Operationv+0x4c0>
   1898a:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   1898e:	81 11       	cpse	r24, r1
   18990:	05 c0       	rjmp	.+10     	; 0x1899c <_Z13Run_Operationv+0x4c0>
   18992:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18996:	88 23       	and	r24, r24
   18998:	09 f4       	brne	.+2      	; 0x1899c <_Z13Run_Operationv+0x4c0>
   1899a:	52 c0       	rjmp	.+164    	; 0x18a40 <_Z13Run_Operationv+0x564>
   1899c:	f8 d8       	rcall	.-3600   	; 0x17b8e <_Z15Stop_Irrigationv>
   1899e:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   189a2:	81 30       	cpi	r24, 0x01	; 1
   189a4:	51 f4       	brne	.+20     	; 0x189ba <_Z13Run_Operationv+0x4de>
   189a6:	6b e3       	ldi	r22, 0x3B	; 59
   189a8:	72 e4       	ldi	r23, 0x42	; 66
   189aa:	85 e5       	ldi	r24, 0x55	; 85
   189ac:	94 e1       	ldi	r25, 0x14	; 20
   189ae:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   189b2:	85 e5       	ldi	r24, 0x55	; 85
   189b4:	94 e1       	ldi	r25, 0x14	; 20
   189b6:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   189ba:	90 91 d5 0d 	lds	r25, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   189be:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   189c2:	91 11       	cpse	r25, r1
   189c4:	04 c0       	rjmp	.+8      	; 0x189ce <_Z13Run_Operationv+0x4f2>
   189c6:	90 91 ee 0d 	lds	r25, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   189ca:	99 23       	and	r25, r25
   189cc:	79 f0       	breq	.+30     	; 0x189ec <_Z13Run_Operationv+0x510>
   189ce:	81 30       	cpi	r24, 0x01	; 1
   189d0:	51 f4       	brne	.+20     	; 0x189e6 <_Z13Run_Operationv+0x50a>
   189d2:	68 e0       	ldi	r22, 0x08	; 8
   189d4:	72 e4       	ldi	r23, 0x42	; 66
   189d6:	85 e5       	ldi	r24, 0x55	; 85
   189d8:	94 e1       	ldi	r25, 0x14	; 20
   189da:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   189de:	85 e5       	ldi	r24, 0x55	; 85
   189e0:	94 e1       	ldi	r25, 0x14	; 20
   189e2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   189e6:	8c e3       	ldi	r24, 0x3C	; 60
   189e8:	90 e0       	ldi	r25, 0x00	; 0
   189ea:	22 c0       	rjmp	.+68     	; 0x18a30 <_Z13Run_Operationv+0x554>
   189ec:	81 30       	cpi	r24, 0x01	; 1
   189ee:	51 f4       	brne	.+20     	; 0x18a04 <_Z13Run_Operationv+0x528>
   189f0:	65 ed       	ldi	r22, 0xD5	; 213
   189f2:	71 e4       	ldi	r23, 0x41	; 65
   189f4:	85 e5       	ldi	r24, 0x55	; 85
   189f6:	94 e1       	ldi	r25, 0x14	; 20
   189f8:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   189fc:	85 e5       	ldi	r24, 0x55	; 85
   189fe:	94 e1       	ldi	r25, 0x14	; 20
   18a00:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18a04:	80 91 3c 14 	lds	r24, 0x143C	; 0x80143c <_sRuble_Parameters+0xf2>
   18a08:	81 30       	cpi	r24, 0x01	; 1
   18a0a:	29 f4       	brne	.+10     	; 0x18a16 <_Z13Run_Operationv+0x53a>
   18a0c:	10 92 3c 14 	sts	0x143C, r1	; 0x80143c <_sRuble_Parameters+0xf2>
   18a10:	80 e1       	ldi	r24, 0x10	; 16
   18a12:	9e e0       	ldi	r25, 0x0E	; 14
   18a14:	0d c0       	rjmp	.+26     	; 0x18a30 <_Z13Run_Operationv+0x554>
   18a16:	80 91 26 14 	lds	r24, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18a1a:	81 30       	cpi	r24, 0x01	; 1
   18a1c:	39 f4       	brne	.+14     	; 0x18a2c <_Z13Run_Operationv+0x550>
   18a1e:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   18a22:	81 30       	cpi	r24, 0x01	; 1
   18a24:	19 f4       	brne	.+6      	; 0x18a2c <_Z13Run_Operationv+0x550>
   18a26:	80 ef       	ldi	r24, 0xF0	; 240
   18a28:	90 e0       	ldi	r25, 0x00	; 0
   18a2a:	02 c0       	rjmp	.+4      	; 0x18a30 <_Z13Run_Operationv+0x554>
   18a2c:	88 e5       	ldi	r24, 0x58	; 88
   18a2e:	92 e0       	ldi	r25, 0x02	; 2
   18a30:	90 93 69 13 	sts	0x1369, r25	; 0x801369 <_sRuble_Parameters+0x1f>
   18a34:	80 93 68 13 	sts	0x1368, r24	; 0x801368 <_sRuble_Parameters+0x1e>
   18a38:	81 e0       	ldi	r24, 0x01	; 1
   18a3a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x28>
   18a3e:	2c c0       	rjmp	.+88     	; 0x18a98 <_Z13Run_Operationv+0x5bc>
   18a40:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18a44:	81 30       	cpi	r24, 0x01	; 1
   18a46:	51 f4       	brne	.+20     	; 0x18a5c <_Z13Run_Operationv+0x580>
   18a48:	62 ea       	ldi	r22, 0xA2	; 162
   18a4a:	71 e4       	ldi	r23, 0x41	; 65
   18a4c:	85 e5       	ldi	r24, 0x55	; 85
   18a4e:	94 e1       	ldi	r25, 0x14	; 20
   18a50:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a54:	85 e5       	ldi	r24, 0x55	; 85
   18a56:	94 e1       	ldi	r25, 0x14	; 20
   18a58:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18a5c:	98 d8       	rcall	.-3792   	; 0x17b8e <_Z15Stop_Irrigationv>
   18a5e:	80 91 d5 0d 	lds	r24, 0x0DD5	; 0x800dd5 <_sExtra_Plot+0x51>
   18a62:	88 23       	and	r24, r24
   18a64:	21 f0       	breq	.+8      	; 0x18a6e <_Z13Run_Operationv+0x592>
   18a66:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18a6a:	81 11       	cpse	r24, r1
   18a6c:	04 c0       	rjmp	.+8      	; 0x18a76 <_Z13Run_Operationv+0x59a>
   18a6e:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x17>
   18a72:	10 92 60 13 	sts	0x1360, r1	; 0x801360 <_sRuble_Parameters+0x16>
   18a76:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18a7a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18a7e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18a82:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   18a86:	92 60       	ori	r25, 0x02	; 2
   18a88:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   18a8c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18a90:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18a94:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   18a98:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <_sRuble_Parameters+0xb8>
   18a9c:	88 23       	and	r24, r24
   18a9e:	61 f1       	breq	.+88     	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18aa0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18aa4:	81 30       	cpi	r24, 0x01	; 1
   18aa6:	09 f0       	breq	.+2      	; 0x18aaa <_Z13Run_Operationv+0x5ce>
   18aa8:	04 ce       	rjmp	.-1016   	; 0x186b2 <_Z13Run_Operationv+0x1d6>
   18aaa:	68 e7       	ldi	r22, 0x78	; 120
   18aac:	71 e4       	ldi	r23, 0x41	; 65
   18aae:	f9 cd       	rjmp	.-1038   	; 0x186a2 <_Z13Run_Operationv+0x1c6>
   18ab0:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x28>
   18ab4:	83 30       	cpi	r24, 0x03	; 3
   18ab6:	c1 f0       	breq	.+48     	; 0x18ae8 <_Z13Run_Operationv+0x60c>
   18ab8:	18 f4       	brcc	.+6      	; 0x18ac0 <_Z13Run_Operationv+0x5e4>
   18aba:	81 30       	cpi	r24, 0x01	; 1
   18abc:	e8 f0       	brcs	.+58     	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18abe:	02 c0       	rjmp	.+4      	; 0x18ac4 <_Z13Run_Operationv+0x5e8>
   18ac0:	84 30       	cpi	r24, 0x04	; 4
   18ac2:	d1 f4       	brne	.+52     	; 0x18af8 <_Z13Run_Operationv+0x61c>
   18ac4:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   18ac8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18acc:	99 23       	and	r25, r25
   18ace:	31 f0       	breq	.+12     	; 0x18adc <_Z13Run_Operationv+0x600>
   18ad0:	81 30       	cpi	r24, 0x01	; 1
   18ad2:	09 f0       	breq	.+2      	; 0x18ad6 <_Z13Run_Operationv+0x5fa>
   18ad4:	45 ce       	rjmp	.-886    	; 0x18760 <_Z13Run_Operationv+0x284>
   18ad6:	61 e5       	ldi	r22, 0x51	; 81
   18ad8:	71 e4       	ldi	r23, 0x41	; 65
   18ada:	3a ce       	rjmp	.-908    	; 0x18750 <_Z13Run_Operationv+0x274>
   18adc:	81 30       	cpi	r24, 0x01	; 1
   18ade:	09 f0       	breq	.+2      	; 0x18ae2 <_Z13Run_Operationv+0x606>
   18ae0:	3f ce       	rjmp	.-898    	; 0x18760 <_Z13Run_Operationv+0x284>
   18ae2:	64 e3       	ldi	r22, 0x34	; 52
   18ae4:	71 e4       	ldi	r23, 0x41	; 65
   18ae6:	34 ce       	rjmp	.-920    	; 0x18750 <_Z13Run_Operationv+0x274>
   18ae8:	0f 90       	pop	r0
   18aea:	0f 90       	pop	r0
   18aec:	df 91       	pop	r29
   18aee:	cf 91       	pop	r28
   18af0:	1f 91       	pop	r17
   18af2:	0f 91       	pop	r16
   18af4:	0c 94 60 52 	jmp	0xa4c0	; 0xa4c0 <_Z20Schedules_Monitoringv>
   18af8:	0f 90       	pop	r0
   18afa:	0f 90       	pop	r0
   18afc:	df 91       	pop	r29
   18afe:	cf 91       	pop	r28
   18b00:	1f 91       	pop	r17
   18b02:	0f 91       	pop	r16
   18b04:	08 95       	ret

00018b06 <_Z26Start_Extra_Plot_Operationh>:
   18b06:	1f 93       	push	r17
   18b08:	cf 93       	push	r28
   18b0a:	df 93       	push	r29
   18b0c:	c8 2f       	mov	r28, r24
   18b0e:	65 ef       	ldi	r22, 0xF5	; 245
   18b10:	7f e2       	ldi	r23, 0x2F	; 47
   18b12:	85 e5       	ldi	r24, 0x55	; 85
   18b14:	94 e1       	ldi	r25, 0x14	; 20
   18b16:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b1a:	4a e0       	ldi	r20, 0x0A	; 10
   18b1c:	50 e0       	ldi	r21, 0x00	; 0
   18b1e:	6c 2f       	mov	r22, r28
   18b20:	85 e5       	ldi	r24, 0x55	; 85
   18b22:	94 e1       	ldi	r25, 0x14	; 20
   18b24:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEhi>
   18b28:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18b2c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18b30:	84 60       	ori	r24, 0x04	; 4
   18b32:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18b36:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18b3a:	1d ef       	ldi	r17, 0xFD	; 253
   18b3c:	1c 0f       	add	r17, r28
   18b3e:	12 30       	cpi	r17, 0x02	; 2
   18b40:	10 f4       	brcc	.+4      	; 0x18b46 <_Z26Start_Extra_Plot_Operationh+0x40>
   18b42:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
   18b46:	6c 2f       	mov	r22, r28
   18b48:	81 e0       	ldi	r24, 0x01	; 1
   18b4a:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18b4e:	d8 2f       	mov	r29, r24
   18b50:	88 23       	and	r24, r24
   18b52:	09 f4       	brne	.+2      	; 0x18b56 <_Z26Start_Extra_Plot_Operationh+0x50>
   18b54:	81 c0       	rjmp	.+258    	; 0x18c58 <_Z26Start_Extra_Plot_Operationh+0x152>
   18b56:	12 30       	cpi	r17, 0x02	; 2
   18b58:	08 f0       	brcs	.+2      	; 0x18b5c <_Z26Start_Extra_Plot_Operationh+0x56>
   18b5a:	4c c0       	rjmp	.+152    	; 0x18bf4 <_Z26Start_Extra_Plot_Operationh+0xee>
   18b5c:	c4 30       	cpi	r28, 0x04	; 4
   18b5e:	19 f0       	breq	.+6      	; 0x18b66 <_Z26Start_Extra_Plot_Operationh+0x60>
   18b60:	82 e0       	ldi	r24, 0x02	; 2
   18b62:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z22Hard_Coded_Flush_Valveh>
   18b66:	10 92 65 13 	sts	0x1365, r1	; 0x801365 <_sRuble_Parameters+0x1b>
   18b6a:	10 92 64 13 	sts	0x1364, r1	; 0x801364 <_sRuble_Parameters+0x1a>
   18b6e:	10 92 48 13 	sts	0x1348, r1	; 0x801348 <_sPump_Parameter+0x8>
   18b72:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   18b76:	81 11       	cpse	r24, r1
   18b78:	13 c0       	rjmp	.+38     	; 0x18ba0 <_Z26Start_Extra_Plot_Operationh+0x9a>
   18b7a:	8a e0       	ldi	r24, 0x0A	; 10
   18b7c:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   18b80:	89 2b       	or	r24, r25
   18b82:	21 f0       	breq	.+8      	; 0x18b8c <_Z26Start_Extra_Plot_Operationh+0x86>
   18b84:	60 e0       	ldi	r22, 0x00	; 0
   18b86:	8a e0       	ldi	r24, 0x0A	; 10
   18b88:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   18b8c:	8b e0       	ldi	r24, 0x0B	; 11
   18b8e:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   18b92:	89 2b       	or	r24, r25
   18b94:	79 f1       	breq	.+94     	; 0x18bf4 <_Z26Start_Extra_Plot_Operationh+0xee>
   18b96:	60 e0       	ldi	r22, 0x00	; 0
   18b98:	8b e0       	ldi	r24, 0x0B	; 11
   18b9a:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   18b9e:	2a c0       	rjmp	.+84     	; 0x18bf4 <_Z26Start_Extra_Plot_Operationh+0xee>
   18ba0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18ba4:	81 30       	cpi	r24, 0x01	; 1
   18ba6:	51 f4       	brne	.+20     	; 0x18bbc <_Z26Start_Extra_Plot_Operationh+0xb6>
   18ba8:	60 ed       	ldi	r22, 0xD0	; 208
   18baa:	7f e2       	ldi	r23, 0x2F	; 47
   18bac:	85 e5       	ldi	r24, 0x55	; 85
   18bae:	94 e1       	ldi	r25, 0x14	; 20
   18bb0:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bb4:	85 e5       	ldi	r24, 0x55	; 85
   18bb6:	94 e1       	ldi	r25, 0x14	; 20
   18bb8:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18bbc:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18bc0:	62 50       	subi	r22, 0x02	; 2
   18bc2:	82 e0       	ldi	r24, 0x02	; 2
   18bc4:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   18bc8:	88 23       	and	r24, r24
   18bca:	51 f0       	breq	.+20     	; 0x18be0 <_Z26Start_Extra_Plot_Operationh+0xda>
   18bcc:	81 e0       	ldi	r24, 0x01	; 1
   18bce:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
   18bd2:	6a e0       	ldi	r22, 0x0A	; 10
   18bd4:	74 e1       	ldi	r23, 0x14	; 20
   18bd6:	8d ea       	ldi	r24, 0xAD	; 173
   18bd8:	9c e0       	ldi	r25, 0x0C	; 12
   18bda:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18bde:	0a c0       	rjmp	.+20     	; 0x18bf4 <_Z26Start_Extra_Plot_Operationh+0xee>
   18be0:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   18be4:	6a e0       	ldi	r22, 0x0A	; 10
   18be6:	74 e1       	ldi	r23, 0x14	; 20
   18be8:	8d ea       	ldi	r24, 0xAD	; 173
   18bea:	9c e0       	ldi	r25, 0x0C	; 12
   18bec:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18bf0:	d0 e0       	ldi	r29, 0x00	; 0
   18bf2:	40 c0       	rjmp	.+128    	; 0x18c74 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18bf4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18bf8:	81 30       	cpi	r24, 0x01	; 1
   18bfa:	51 f4       	brne	.+20     	; 0x18c10 <_Z26Start_Extra_Plot_Operationh+0x10a>
   18bfc:	62 ec       	ldi	r22, 0xC2	; 194
   18bfe:	7f e2       	ldi	r23, 0x2F	; 47
   18c00:	85 e5       	ldi	r24, 0x55	; 85
   18c02:	94 e1       	ldi	r25, 0x14	; 20
   18c04:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c08:	85 e5       	ldi	r24, 0x55	; 85
   18c0a:	94 e1       	ldi	r25, 0x14	; 20
   18c0c:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18c10:	8b e1       	ldi	r24, 0x1B	; 27
   18c12:	c8 9f       	mul	r28, r24
   18c14:	f0 01       	movw	r30, r0
   18c16:	11 24       	eor	r1, r1
   18c18:	ec 57       	subi	r30, 0x7C	; 124
   18c1a:	f2 4f       	sbci	r31, 0xF2	; 242
   18c1c:	81 e0       	ldi	r24, 0x01	; 1
   18c1e:	80 83       	st	Z, r24
   18c20:	23 85       	ldd	r18, Z+11	; 0x0b
   18c22:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18c26:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18c2a:	21 30       	cpi	r18, 0x01	; 1
   18c2c:	51 f4       	brne	.+20     	; 0x18c42 <_Z26Start_Extra_Plot_Operationh+0x13c>
   18c2e:	90 61       	ori	r25, 0x10	; 16
   18c30:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18c34:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18c38:	12 86       	std	Z+10, r1	; 0x0a
   18c3a:	c0 93 01 14 	sts	0x1401, r28	; 0x801401 <_sRuble_Parameters+0xb7>
   18c3e:	22 8f       	std	Z+26, r18	; 0x1a
   18c40:	19 c0       	rjmp	.+50     	; 0x18c74 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18c42:	90 62       	ori	r25, 0x20	; 32
   18c44:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18c48:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18c4c:	13 86       	std	Z+11, r1	; 0x0b
   18c4e:	c0 93 00 14 	sts	0x1400, r28	; 0x801400 <_sRuble_Parameters+0xb6>
   18c52:	82 e0       	ldi	r24, 0x02	; 2
   18c54:	82 8f       	std	Z+26, r24	; 0x1a
   18c56:	0e c0       	rjmp	.+28     	; 0x18c74 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18c58:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18c5c:	81 30       	cpi	r24, 0x01	; 1
   18c5e:	51 f4       	brne	.+20     	; 0x18c74 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18c60:	6b ea       	ldi	r22, 0xAB	; 171
   18c62:	7f e2       	ldi	r23, 0x2F	; 47
   18c64:	85 e5       	ldi	r24, 0x55	; 85
   18c66:	94 e1       	ldi	r25, 0x14	; 20
   18c68:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c6c:	85 e5       	ldi	r24, 0x55	; 85
   18c6e:	94 e1       	ldi	r25, 0x14	; 20
   18c70:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18c74:	8d 2f       	mov	r24, r29
   18c76:	df 91       	pop	r29
   18c78:	cf 91       	pop	r28
   18c7a:	1f 91       	pop	r17
   18c7c:	08 95       	ret

00018c7e <_Z25Stop_Extra_Plot_Operationh>:
   18c7e:	0f 93       	push	r16
   18c80:	1f 93       	push	r17
   18c82:	cf 93       	push	r28
   18c84:	df 93       	push	r29
   18c86:	c8 2f       	mov	r28, r24
   18c88:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18c8c:	81 30       	cpi	r24, 0x01	; 1
   18c8e:	51 f4       	brne	.+20     	; 0x18ca4 <_Z25Stop_Extra_Plot_Operationh+0x26>
   18c90:	69 e9       	ldi	r22, 0x99	; 153
   18c92:	7f e2       	ldi	r23, 0x2F	; 47
   18c94:	85 e5       	ldi	r24, 0x55	; 85
   18c96:	94 e1       	ldi	r25, 0x14	; 20
   18c98:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c9c:	85 e5       	ldi	r24, 0x55	; 85
   18c9e:	94 e1       	ldi	r25, 0x14	; 20
   18ca0:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18ca4:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18ca8:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18cac:	84 60       	ori	r24, 0x04	; 4
   18cae:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18cb2:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18cb6:	0c 2f       	mov	r16, r28
   18cb8:	10 e0       	ldi	r17, 0x00	; 0
   18cba:	8b e1       	ldi	r24, 0x1B	; 27
   18cbc:	c8 9f       	mul	r28, r24
   18cbe:	f0 01       	movw	r30, r0
   18cc0:	11 24       	eor	r1, r1
   18cc2:	ec 57       	subi	r30, 0x7C	; 124
   18cc4:	f2 4f       	sbci	r31, 0xF2	; 242
   18cc6:	10 82       	st	Z, r1
   18cc8:	8d ef       	ldi	r24, 0xFD	; 253
   18cca:	8c 0f       	add	r24, r28
   18ccc:	82 30       	cpi	r24, 0x02	; 2
   18cce:	20 f4       	brcc	.+8      	; 0x18cd8 <_Z25Stop_Extra_Plot_Operationh+0x5a>
   18cd0:	90 91 71 13 	lds	r25, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   18cd4:	93 30       	cpi	r25, 0x03	; 3
   18cd6:	a9 f4       	brne	.+42     	; 0x18d02 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18cd8:	90 91 48 13 	lds	r25, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
   18cdc:	99 23       	and	r25, r25
   18cde:	11 f0       	breq	.+4      	; 0x18ce4 <_Z25Stop_Extra_Plot_Operationh+0x66>
   18ce0:	82 30       	cpi	r24, 0x02	; 2
   18ce2:	78 f0       	brcs	.+30     	; 0x18d02 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18ce4:	90 91 71 13 	lds	r25, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   18ce8:	93 30       	cpi	r25, 0x03	; 3
   18cea:	31 f4       	brne	.+12     	; 0x18cf8 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18cec:	90 91 a5 13 	lds	r25, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   18cf0:	91 11       	cpse	r25, r1
   18cf2:	02 c0       	rjmp	.+4      	; 0x18cf8 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18cf4:	82 30       	cpi	r24, 0x02	; 2
   18cf6:	28 f0       	brcs	.+10     	; 0x18d02 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18cf8:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb4>
   18cfc:	81 30       	cpi	r24, 0x01	; 1
   18cfe:	09 f0       	breq	.+2      	; 0x18d02 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18d00:	aa c0       	rjmp	.+340    	; 0x18e56 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18d02:	83 e0       	ldi	r24, 0x03	; 3
   18d04:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z22Hard_Coded_Flush_Valveh>
   18d08:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   18d0c:	81 11       	cpse	r24, r1
   18d0e:	a3 c0       	rjmp	.+326    	; 0x18e56 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18d10:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   18d14:	81 11       	cpse	r24, r1
   18d16:	14 c0       	rjmp	.+40     	; 0x18d40 <_Z25Stop_Extra_Plot_Operationh+0xc2>
   18d18:	8a e0       	ldi	r24, 0x0A	; 10
   18d1a:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   18d1e:	01 97       	sbiw	r24, 0x01	; 1
   18d20:	21 f0       	breq	.+8      	; 0x18d2a <_Z25Stop_Extra_Plot_Operationh+0xac>
   18d22:	61 e0       	ldi	r22, 0x01	; 1
   18d24:	8a e0       	ldi	r24, 0x0A	; 10
   18d26:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   18d2a:	8b e0       	ldi	r24, 0x0B	; 11
   18d2c:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   18d30:	01 97       	sbiw	r24, 0x01	; 1
   18d32:	09 f4       	brne	.+2      	; 0x18d36 <_Z25Stop_Extra_Plot_Operationh+0xb8>
   18d34:	90 c0       	rjmp	.+288    	; 0x18e56 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18d36:	61 e0       	ldi	r22, 0x01	; 1
   18d38:	8b e0       	ldi	r24, 0x0B	; 11
   18d3a:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   18d3e:	8b c0       	rjmp	.+278    	; 0x18e56 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18d40:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18d44:	81 30       	cpi	r24, 0x01	; 1
   18d46:	51 f4       	brne	.+20     	; 0x18d5c <_Z25Stop_Extra_Plot_Operationh+0xde>
   18d48:	63 e7       	ldi	r22, 0x73	; 115
   18d4a:	7f e2       	ldi	r23, 0x2F	; 47
   18d4c:	85 e5       	ldi	r24, 0x55	; 85
   18d4e:	94 e1       	ldi	r25, 0x14	; 20
   18d50:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d54:	85 e5       	ldi	r24, 0x55	; 85
   18d56:	94 e1       	ldi	r25, 0x14	; 20
   18d58:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18d5c:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   18d60:	62 50       	subi	r22, 0x02	; 2
   18d62:	84 e0       	ldi	r24, 0x04	; 4
   18d64:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   18d68:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18d6c:	88 23       	and	r24, r24
   18d6e:	b9 f0       	breq	.+46     	; 0x18d9e <_Z25Stop_Extra_Plot_Operationh+0x120>
   18d70:	91 30       	cpi	r25, 0x01	; 1
   18d72:	51 f4       	brne	.+20     	; 0x18d88 <_Z25Stop_Extra_Plot_Operationh+0x10a>
   18d74:	63 e5       	ldi	r22, 0x53	; 83
   18d76:	7f e2       	ldi	r23, 0x2F	; 47
   18d78:	85 e5       	ldi	r24, 0x55	; 85
   18d7a:	94 e1       	ldi	r25, 0x14	; 20
   18d7c:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d80:	85 e5       	ldi	r24, 0x55	; 85
   18d82:	94 e1       	ldi	r25, 0x14	; 20
   18d84:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18d88:	10 92 1a 14 	sts	0x141A, r1	; 0x80141a <_sRuble_Parameters+0xd0>
   18d8c:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   18d90:	6a e0       	ldi	r22, 0x0A	; 10
   18d92:	74 e1       	ldi	r23, 0x14	; 20
   18d94:	8d ea       	ldi	r24, 0xAD	; 173
   18d96:	9c e0       	ldi	r25, 0x0C	; 12
   18d98:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18d9c:	5c c0       	rjmp	.+184    	; 0x18e56 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18d9e:	91 30       	cpi	r25, 0x01	; 1
   18da0:	51 f4       	brne	.+20     	; 0x18db6 <_Z25Stop_Extra_Plot_Operationh+0x138>
   18da2:	6b e2       	ldi	r22, 0x2B	; 43
   18da4:	7f e2       	ldi	r23, 0x2F	; 47
   18da6:	85 e5       	ldi	r24, 0x55	; 85
   18da8:	94 e1       	ldi	r25, 0x14	; 20
   18daa:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18dae:	85 e5       	ldi	r24, 0x55	; 85
   18db0:	94 e1       	ldi	r25, 0x14	; 20
   18db2:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18db6:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   18dba:	81 11       	cpse	r24, r1
   18dbc:	0c c0       	rjmp	.+24     	; 0x18dd6 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18dbe:	80 91 09 0e 	lds	r24, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
   18dc2:	81 30       	cpi	r24, 0x01	; 1
   18dc4:	41 f0       	breq	.+16     	; 0x18dd6 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18dc6:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   18dca:	81 30       	cpi	r24, 0x01	; 1
   18dcc:	21 f0       	breq	.+8      	; 0x18dd6 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18dce:	81 e0       	ldi	r24, 0x01	; 1
   18dd0:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
   18dd4:	02 c0       	rjmp	.+4      	; 0x18dda <_Z25Stop_Extra_Plot_Operationh+0x15c>
   18dd6:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   18dda:	6a e0       	ldi	r22, 0x0A	; 10
   18ddc:	74 e1       	ldi	r23, 0x14	; 20
   18dde:	8d ea       	ldi	r24, 0xAD	; 173
   18de0:	9c e0       	ldi	r25, 0x0C	; 12
   18de2:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18de6:	6a e0       	ldi	r22, 0x0A	; 10
   18de8:	74 e1       	ldi	r23, 0x14	; 20
   18dea:	8d ea       	ldi	r24, 0xAD	; 173
   18dec:	9c e0       	ldi	r25, 0x0C	; 12
   18dee:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18df2:	81 e0       	ldi	r24, 0x01	; 1
   18df4:	80 93 1a 14 	sts	0x141A, r24	; 0x80141a <_sRuble_Parameters+0xd0>
   18df8:	8b e1       	ldi	r24, 0x1B	; 27
   18dfa:	80 9f       	mul	r24, r16
   18dfc:	f0 01       	movw	r30, r0
   18dfe:	81 9f       	mul	r24, r17
   18e00:	f0 0d       	add	r31, r0
   18e02:	11 24       	eor	r1, r1
   18e04:	ec 57       	subi	r30, 0x7C	; 124
   18e06:	f2 4f       	sbci	r31, 0xF2	; 242
   18e08:	23 85       	ldd	r18, Z+11	; 0x0b
   18e0a:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18e0e:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18e12:	21 30       	cpi	r18, 0x01	; 1
   18e14:	51 f4       	brne	.+20     	; 0x18e2a <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   18e16:	90 61       	ori	r25, 0x10	; 16
   18e18:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18e1c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18e20:	13 86       	std	Z+11, r1	; 0x0b
   18e22:	c0 93 01 14 	sts	0x1401, r28	; 0x801401 <_sRuble_Parameters+0xb7>
   18e26:	22 8f       	std	Z+26, r18	; 0x1a
   18e28:	0b c0       	rjmp	.+22     	; 0x18e40 <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   18e2a:	90 62       	ori	r25, 0x20	; 32
   18e2c:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18e30:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18e34:	12 86       	std	Z+10, r1	; 0x0a
   18e36:	c0 93 00 14 	sts	0x1400, r28	; 0x801400 <_sRuble_Parameters+0xb6>
   18e3a:	13 86       	std	Z+11, r1	; 0x0b
   18e3c:	82 e0       	ldi	r24, 0x02	; 2
   18e3e:	82 8f       	std	Z+26, r24	; 0x1a
   18e40:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18e44:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18e48:	84 60       	ori	r24, 0x04	; 4
   18e4a:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18e4e:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18e52:	d1 e0       	ldi	r29, 0x01	; 1
   18e54:	51 c0       	rjmp	.+162    	; 0x18ef8 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18e56:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18e5a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18e5e:	84 60       	ori	r24, 0x04	; 4
   18e60:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18e64:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18e68:	6c 2f       	mov	r22, r28
   18e6a:	80 e0       	ldi	r24, 0x00	; 0
   18e6c:	0e 94 2e b7 	call	0x16e5c	; 0x16e5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18e70:	d8 2f       	mov	r29, r24
   18e72:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   18e76:	dd 23       	and	r29, r29
   18e78:	99 f1       	breq	.+102    	; 0x18ee0 <_Z25Stop_Extra_Plot_Operationh+0x262>
   18e7a:	81 30       	cpi	r24, 0x01	; 1
   18e7c:	51 f4       	brne	.+20     	; 0x18e92 <_Z25Stop_Extra_Plot_Operationh+0x214>
   18e7e:	6a e1       	ldi	r22, 0x1A	; 26
   18e80:	7f e2       	ldi	r23, 0x2F	; 47
   18e82:	85 e5       	ldi	r24, 0x55	; 85
   18e84:	94 e1       	ldi	r25, 0x14	; 20
   18e86:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e8a:	85 e5       	ldi	r24, 0x55	; 85
   18e8c:	94 e1       	ldi	r25, 0x14	; 20
   18e8e:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18e92:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   18e96:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   18e9a:	2b e1       	ldi	r18, 0x1B	; 27
   18e9c:	20 9f       	mul	r18, r16
   18e9e:	f0 01       	movw	r30, r0
   18ea0:	21 9f       	mul	r18, r17
   18ea2:	f0 0d       	add	r31, r0
   18ea4:	11 24       	eor	r1, r1
   18ea6:	ec 57       	subi	r30, 0x7C	; 124
   18ea8:	f2 4f       	sbci	r31, 0xF2	; 242
   18eaa:	23 85       	ldd	r18, Z+11	; 0x0b
   18eac:	21 30       	cpi	r18, 0x01	; 1
   18eae:	59 f4       	brne	.+22     	; 0x18ec6 <_Z25Stop_Extra_Plot_Operationh+0x248>
   18eb0:	84 60       	ori	r24, 0x04	; 4
   18eb2:	90 61       	ori	r25, 0x10	; 16
   18eb4:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18eb8:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18ebc:	13 86       	std	Z+11, r1	; 0x0b
   18ebe:	c0 93 01 14 	sts	0x1401, r28	; 0x801401 <_sRuble_Parameters+0xb7>
   18ec2:	22 8f       	std	Z+26, r18	; 0x1a
   18ec4:	19 c0       	rjmp	.+50     	; 0x18ef8 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18ec6:	84 60       	ori	r24, 0x04	; 4
   18ec8:	90 62       	ori	r25, 0x20	; 32
   18eca:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   18ece:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   18ed2:	12 86       	std	Z+10, r1	; 0x0a
   18ed4:	c0 93 00 14 	sts	0x1400, r28	; 0x801400 <_sRuble_Parameters+0xb6>
   18ed8:	13 86       	std	Z+11, r1	; 0x0b
   18eda:	82 e0       	ldi	r24, 0x02	; 2
   18edc:	82 8f       	std	Z+26, r24	; 0x1a
   18ede:	0c c0       	rjmp	.+24     	; 0x18ef8 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18ee0:	81 30       	cpi	r24, 0x01	; 1
   18ee2:	51 f4       	brne	.+20     	; 0x18ef8 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18ee4:	61 e0       	ldi	r22, 0x01	; 1
   18ee6:	7f e2       	ldi	r23, 0x2F	; 47
   18ee8:	85 e5       	ldi	r24, 0x55	; 85
   18eea:	94 e1       	ldi	r25, 0x14	; 20
   18eec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ef0:	85 e5       	ldi	r24, 0x55	; 85
   18ef2:	94 e1       	ldi	r25, 0x14	; 20
   18ef4:	0e 94 9b cf 	call	0x19f36	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   18ef8:	8d 2f       	mov	r24, r29
   18efa:	df 91       	pop	r29
   18efc:	cf 91       	pop	r28
   18efe:	1f 91       	pop	r17
   18f00:	0f 91       	pop	r16
   18f02:	08 95       	ret

00018f04 <_Z24Run_Extra_Plot_Operationv>:
   18f04:	cf 92       	push	r12
   18f06:	df 92       	push	r13
   18f08:	ef 92       	push	r14
   18f0a:	ff 92       	push	r15
   18f0c:	1f 93       	push	r17
   18f0e:	cf 93       	push	r28
   18f10:	df 93       	push	r29
   18f12:	84 e8       	ldi	r24, 0x84	; 132
   18f14:	e8 2e       	mov	r14, r24
   18f16:	8d e0       	ldi	r24, 0x0D	; 13
   18f18:	f8 2e       	mov	r15, r24
   18f1a:	9e e6       	ldi	r25, 0x6E	; 110
   18f1c:	c9 2e       	mov	r12, r25
   18f1e:	9d e0       	ldi	r25, 0x0D	; 13
   18f20:	d9 2e       	mov	r13, r25
   18f22:	c0 e0       	ldi	r28, 0x00	; 0
   18f24:	d0 e0       	ldi	r29, 0x00	; 0
   18f26:	1c 2f       	mov	r17, r28
   18f28:	f7 01       	movw	r30, r14
   18f2a:	81 81       	ldd	r24, Z+1	; 0x01
   18f2c:	81 50       	subi	r24, 0x01	; 1
   18f2e:	82 37       	cpi	r24, 0x72	; 114
   18f30:	08 f0       	brcs	.+2      	; 0x18f34 <_Z24Run_Extra_Plot_Operationv+0x30>
   18f32:	8e c0       	rjmp	.+284    	; 0x19050 <_Z24Run_Extra_Plot_Operationv+0x14c>
   18f34:	82 81       	ldd	r24, Z+2	; 0x02
   18f36:	82 30       	cpi	r24, 0x02	; 2
   18f38:	19 f0       	breq	.+6      	; 0x18f40 <_Z24Run_Extra_Plot_Operationv+0x3c>
   18f3a:	83 30       	cpi	r24, 0x03	; 3
   18f3c:	21 f1       	breq	.+72     	; 0x18f86 <_Z24Run_Extra_Plot_Operationv+0x82>
   18f3e:	88 c0       	rjmp	.+272    	; 0x19050 <_Z24Run_Extra_Plot_Operationv+0x14c>
   18f40:	8b e1       	ldi	r24, 0x1B	; 27
   18f42:	8c 9f       	mul	r24, r28
   18f44:	f0 01       	movw	r30, r0
   18f46:	8d 9f       	mul	r24, r29
   18f48:	f0 0d       	add	r31, r0
   18f4a:	11 24       	eor	r1, r1
   18f4c:	ec 57       	subi	r30, 0x7C	; 124
   18f4e:	f2 4f       	sbci	r31, 0xF2	; 242
   18f50:	83 81       	ldd	r24, Z+3	; 0x03
   18f52:	94 81       	ldd	r25, Z+4	; 0x04
   18f54:	89 2b       	or	r24, r25
   18f56:	41 f4       	brne	.+16     	; 0x18f68 <_Z24Run_Extra_Plot_Operationv+0x64>
   18f58:	82 85       	ldd	r24, Z+10	; 0x0a
   18f5a:	81 11       	cpse	r24, r1
   18f5c:	05 c0       	rjmp	.+10     	; 0x18f68 <_Z24Run_Extra_Plot_Operationv+0x64>
   18f5e:	81 e0       	ldi	r24, 0x01	; 1
   18f60:	82 83       	std	Z+2, r24	; 0x02
   18f62:	14 82       	std	Z+4, r1	; 0x04
   18f64:	13 82       	std	Z+3, r1	; 0x03
   18f66:	44 c0       	rjmp	.+136    	; 0x18ff0 <_Z24Run_Extra_Plot_Operationv+0xec>
   18f68:	81 2f       	mov	r24, r17
   18f6a:	cd dd       	rcall	.-1126   	; 0x18b06 <_Z26Start_Extra_Plot_Operationh>
   18f6c:	88 23       	and	r24, r24
   18f6e:	d1 f0       	breq	.+52     	; 0x18fa4 <_Z24Run_Extra_Plot_Operationv+0xa0>
   18f70:	8b e1       	ldi	r24, 0x1B	; 27
   18f72:	8c 9f       	mul	r24, r28
   18f74:	f0 01       	movw	r30, r0
   18f76:	8d 9f       	mul	r24, r29
   18f78:	f0 0d       	add	r31, r0
   18f7a:	11 24       	eor	r1, r1
   18f7c:	ec 57       	subi	r30, 0x7C	; 124
   18f7e:	f2 4f       	sbci	r31, 0xF2	; 242
   18f80:	83 e0       	ldi	r24, 0x03	; 3
   18f82:	82 83       	std	Z+2, r24	; 0x02
   18f84:	70 c0       	rjmp	.+224    	; 0x19066 <_Z24Run_Extra_Plot_Operationv+0x162>
   18f86:	f7 01       	movw	r30, r14
   18f88:	83 81       	ldd	r24, Z+3	; 0x03
   18f8a:	94 81       	ldd	r25, Z+4	; 0x04
   18f8c:	00 97       	sbiw	r24, 0x00	; 0
   18f8e:	19 f1       	breq	.+70     	; 0x18fd6 <_Z24Run_Extra_Plot_Operationv+0xd2>
   18f90:	20 91 71 13 	lds	r18, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   18f94:	22 30       	cpi	r18, 0x02	; 2
   18f96:	71 f5       	brne	.+92     	; 0x18ff4 <_Z24Run_Extra_Plot_Operationv+0xf0>
   18f98:	18 30       	cpi	r17, 0x08	; 8
   18f9a:	09 f4       	brne	.+2      	; 0x18f9e <_Z24Run_Extra_Plot_Operationv+0x9a>
   18f9c:	64 c0       	rjmp	.+200    	; 0x19066 <_Z24Run_Extra_Plot_Operationv+0x162>
   18f9e:	14 30       	cpi	r17, 0x04	; 4
   18fa0:	09 f4       	brne	.+2      	; 0x18fa4 <_Z24Run_Extra_Plot_Operationv+0xa0>
   18fa2:	61 c0       	rjmp	.+194    	; 0x19066 <_Z24Run_Extra_Plot_Operationv+0x162>
   18fa4:	8b e1       	ldi	r24, 0x1B	; 27
   18fa6:	8c 9f       	mul	r24, r28
   18fa8:	f0 01       	movw	r30, r0
   18faa:	8d 9f       	mul	r24, r29
   18fac:	f0 0d       	add	r31, r0
   18fae:	11 24       	eor	r1, r1
   18fb0:	ec 57       	subi	r30, 0x7C	; 124
   18fb2:	f2 4f       	sbci	r31, 0xF2	; 242
   18fb4:	81 e0       	ldi	r24, 0x01	; 1
   18fb6:	82 83       	std	Z+2, r24	; 0x02
   18fb8:	14 82       	std	Z+4, r1	; 0x04
   18fba:	13 82       	std	Z+3, r1	; 0x03
   18fbc:	81 2f       	mov	r24, r17
   18fbe:	5f de       	rcall	.-834    	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
   18fc0:	81 e0       	ldi	r24, 0x01	; 1
   18fc2:	81 0f       	add	r24, r17
   18fc4:	df 91       	pop	r29
   18fc6:	cf 91       	pop	r28
   18fc8:	1f 91       	pop	r17
   18fca:	ff 90       	pop	r15
   18fcc:	ef 90       	pop	r14
   18fce:	df 90       	pop	r13
   18fd0:	cf 90       	pop	r12
   18fd2:	0c 94 11 79 	jmp	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   18fd6:	22 85       	ldd	r18, Z+10	; 0x0a
   18fd8:	21 11       	cpse	r18, r1
   18fda:	da cf       	rjmp	.-76     	; 0x18f90 <_Z24Run_Extra_Plot_Operationv+0x8c>
   18fdc:	8b e1       	ldi	r24, 0x1B	; 27
   18fde:	8c 9f       	mul	r24, r28
   18fe0:	f0 01       	movw	r30, r0
   18fe2:	8d 9f       	mul	r24, r29
   18fe4:	f0 0d       	add	r31, r0
   18fe6:	11 24       	eor	r1, r1
   18fe8:	ec 57       	subi	r30, 0x7C	; 124
   18fea:	f2 4f       	sbci	r31, 0xF2	; 242
   18fec:	81 e0       	ldi	r24, 0x01	; 1
   18fee:	82 83       	std	Z+2, r24	; 0x02
   18ff0:	8c 2f       	mov	r24, r28
   18ff2:	e5 cf       	rjmp	.-54     	; 0x18fbe <_Z24Run_Extra_Plot_Operationv+0xba>
   18ff4:	89 2b       	or	r24, r25
   18ff6:	69 f0       	breq	.+26     	; 0x19012 <_Z24Run_Extra_Plot_Operationv+0x10e>
   18ff8:	f6 01       	movw	r30, r12
   18ffa:	80 81       	ld	r24, Z
   18ffc:	8f 5f       	subi	r24, 0xFF	; 255
   18ffe:	83 33       	cpi	r24, 0x33	; 51
   19000:	10 f4       	brcc	.+4      	; 0x19006 <_Z24Run_Extra_Plot_Operationv+0x102>
   19002:	80 83       	st	Z, r24
   19004:	06 c0       	rjmp	.+12     	; 0x19012 <_Z24Run_Extra_Plot_Operationv+0x10e>
   19006:	f6 01       	movw	r30, r12
   19008:	10 82       	st	Z, r1
   1900a:	81 e0       	ldi	r24, 0x01	; 1
   1900c:	81 0f       	add	r24, r17
   1900e:	0e 94 11 79 	call	0xf222	; 0xf222 <_Z21Exra_Plot_Data_EEPROMh>
   19012:	13 30       	cpi	r17, 0x03	; 3
   19014:	e9 f4       	brne	.+58     	; 0x19050 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19016:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sPump_Parameter+0x8>
   1901a:	98 2f       	mov	r25, r24
   1901c:	97 7f       	andi	r25, 0xF7	; 247
   1901e:	91 30       	cpi	r25, 0x01	; 1
   19020:	29 f0       	breq	.+10     	; 0x1902c <_Z24Run_Extra_Plot_Operationv+0x128>
   19022:	84 30       	cpi	r24, 0x04	; 4
   19024:	19 f0       	breq	.+6      	; 0x1902c <_Z24Run_Extra_Plot_Operationv+0x128>
   19026:	8c 50       	subi	r24, 0x0C	; 12
   19028:	82 30       	cpi	r24, 0x02	; 2
   1902a:	90 f4       	brcc	.+36     	; 0x19050 <_Z24Run_Extra_Plot_Operationv+0x14c>
   1902c:	6d e0       	ldi	r22, 0x0D	; 13
   1902e:	70 e3       	ldi	r23, 0x30	; 48
   19030:	85 e5       	ldi	r24, 0x55	; 85
   19032:	94 e1       	ldi	r25, 0x14	; 20
   19034:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19038:	85 e5       	ldi	r24, 0x55	; 85
   1903a:	94 e1       	ldi	r25, 0x14	; 20
   1903c:	7c d7       	rcall	.+3832   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1903e:	83 e0       	ldi	r24, 0x03	; 3
   19040:	df 91       	pop	r29
   19042:	cf 91       	pop	r28
   19044:	1f 91       	pop	r17
   19046:	ff 90       	pop	r15
   19048:	ef 90       	pop	r14
   1904a:	df 90       	pop	r13
   1904c:	cf 90       	pop	r12
   1904e:	17 ce       	rjmp	.-978    	; 0x18c7e <_Z25Stop_Extra_Plot_Operationh>
   19050:	21 96       	adiw	r28, 0x01	; 1
   19052:	fb e1       	ldi	r31, 0x1B	; 27
   19054:	ef 0e       	add	r14, r31
   19056:	f1 1c       	adc	r15, r1
   19058:	8f ef       	ldi	r24, 0xFF	; 255
   1905a:	c8 1a       	sub	r12, r24
   1905c:	d8 0a       	sbc	r13, r24
   1905e:	ce 30       	cpi	r28, 0x0E	; 14
   19060:	d1 05       	cpc	r29, r1
   19062:	09 f0       	breq	.+2      	; 0x19066 <_Z24Run_Extra_Plot_Operationv+0x162>
   19064:	60 cf       	rjmp	.-320    	; 0x18f26 <_Z24Run_Extra_Plot_Operationv+0x22>
   19066:	df 91       	pop	r29
   19068:	cf 91       	pop	r28
   1906a:	1f 91       	pop	r17
   1906c:	ff 90       	pop	r15
   1906e:	ef 90       	pop	r14
   19070:	df 90       	pop	r13
   19072:	cf 90       	pop	r12
   19074:	08 95       	ret

00019076 <_Z20Handle_Wireless_Pumpv>:
   19076:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   1907a:	88 23       	and	r24, r24
   1907c:	09 f4       	brne	.+2      	; 0x19080 <_Z20Handle_Wireless_Pumpv+0xa>
   1907e:	7d c0       	rjmp	.+250    	; 0x1917a <_Z20Handle_Wireless_Pumpv+0x104>
   19080:	20 91 a5 13 	lds	r18, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   19084:	80 91 0b 14 	lds	r24, 0x140B	; 0x80140b <_sRuble_Parameters+0xc1>
   19088:	90 91 0c 14 	lds	r25, 0x140C	; 0x80140c <_sRuble_Parameters+0xc2>
   1908c:	21 11       	cpse	r18, r1
   1908e:	09 c0       	rjmp	.+18     	; 0x190a2 <_Z20Handle_Wireless_Pumpv+0x2c>
   19090:	20 91 ee 0d 	lds	r18, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6a>
   19094:	21 11       	cpse	r18, r1
   19096:	05 c0       	rjmp	.+10     	; 0x190a2 <_Z20Handle_Wireless_Pumpv+0x2c>
   19098:	20 91 09 0e 	lds	r18, 0x0E09	; 0x800e09 <_sExtra_Plot+0x85>
   1909c:	22 23       	and	r18, r18
   1909e:	09 f4       	brne	.+2      	; 0x190a2 <_Z20Handle_Wireless_Pumpv+0x2c>
   190a0:	40 c0       	rjmp	.+128    	; 0x19122 <_Z20Handle_Wireless_Pumpv+0xac>
   190a2:	89 2b       	or	r24, r25
   190a4:	09 f0       	breq	.+2      	; 0x190a8 <_Z20Handle_Wireless_Pumpv+0x32>
   190a6:	69 c0       	rjmp	.+210    	; 0x1917a <_Z20Handle_Wireless_Pumpv+0x104>
   190a8:	86 e9       	ldi	r24, 0x96	; 150
   190aa:	90 e0       	ldi	r25, 0x00	; 0
   190ac:	90 93 0c 14 	sts	0x140C, r25	; 0x80140c <_sRuble_Parameters+0xc2>
   190b0:	80 93 0b 14 	sts	0x140B, r24	; 0x80140b <_sRuble_Parameters+0xc1>
   190b4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   190b8:	81 30       	cpi	r24, 0x01	; 1
   190ba:	49 f4       	brne	.+18     	; 0x190ce <_Z20Handle_Wireless_Pumpv+0x58>
   190bc:	65 e5       	ldi	r22, 0x55	; 85
   190be:	7d e2       	ldi	r23, 0x2D	; 45
   190c0:	85 e5       	ldi	r24, 0x55	; 85
   190c2:	94 e1       	ldi	r25, 0x14	; 20
   190c4:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   190c8:	85 e5       	ldi	r24, 0x55	; 85
   190ca:	94 e1       	ldi	r25, 0x14	; 20
   190cc:	34 d7       	rcall	.+3688   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   190ce:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   190d2:	62 50       	subi	r22, 0x02	; 2
   190d4:	82 e0       	ldi	r24, 0x02	; 2
   190d6:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   190da:	88 23       	and	r24, r24
   190dc:	21 f0       	breq	.+8      	; 0x190e6 <_Z20Handle_Wireless_Pumpv+0x70>
   190de:	81 e0       	ldi	r24, 0x01	; 1
   190e0:	80 93 0a 14 	sts	0x140A, r24	; 0x80140a <_sRuble_Parameters+0xc0>
   190e4:	0e c0       	rjmp	.+28     	; 0x19102 <_Z20Handle_Wireless_Pumpv+0x8c>
   190e6:	86 e0       	ldi	r24, 0x06	; 6
   190e8:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   190ec:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   190f0:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   190f4:	90 68       	ori	r25, 0x80	; 128
   190f6:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   190fa:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   190fe:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   19102:	6a e0       	ldi	r22, 0x0A	; 10
   19104:	74 e1       	ldi	r23, 0x14	; 20
   19106:	8d ea       	ldi	r24, 0xAD	; 173
   19108:	9c e0       	ldi	r25, 0x0C	; 12
   1910a:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1910e:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   19112:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   19116:	84 60       	ori	r24, 0x04	; 4
   19118:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   1911c:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   19120:	08 95       	ret
   19122:	89 2b       	or	r24, r25
   19124:	51 f5       	brne	.+84     	; 0x1917a <_Z20Handle_Wireless_Pumpv+0x104>
   19126:	88 e5       	ldi	r24, 0x58	; 88
   19128:	92 e0       	ldi	r25, 0x02	; 2
   1912a:	90 93 0c 14 	sts	0x140C, r25	; 0x80140c <_sRuble_Parameters+0xc2>
   1912e:	80 93 0b 14 	sts	0x140B, r24	; 0x80140b <_sRuble_Parameters+0xc1>
   19132:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   19136:	81 30       	cpi	r24, 0x01	; 1
   19138:	49 f4       	brne	.+18     	; 0x1914c <_Z20Handle_Wireless_Pumpv+0xd6>
   1913a:	66 e2       	ldi	r22, 0x26	; 38
   1913c:	7d e2       	ldi	r23, 0x2D	; 45
   1913e:	85 e5       	ldi	r24, 0x55	; 85
   19140:	94 e1       	ldi	r25, 0x14	; 20
   19142:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19146:	85 e5       	ldi	r24, 0x55	; 85
   19148:	94 e1       	ldi	r25, 0x14	; 20
   1914a:	f5 d6       	rcall	.+3562   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   1914c:	60 91 26 14 	lds	r22, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   19150:	62 50       	subi	r22, 0x02	; 2
   19152:	84 e0       	ldi	r24, 0x04	; 4
   19154:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   19158:	10 92 0a 14 	sts	0x140A, r1	; 0x80140a <_sRuble_Parameters+0xc0>
   1915c:	6a e0       	ldi	r22, 0x0A	; 10
   1915e:	74 e1       	ldi	r23, 0x14	; 20
   19160:	8d ea       	ldi	r24, 0xAD	; 173
   19162:	9c e0       	ldi	r25, 0x0C	; 12
   19164:	0e 94 8f 84 	call	0x1091e	; 0x1091e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19168:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1916c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   19170:	84 60       	ori	r24, 0x04	; 4
   19172:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   19176:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1917a:	08 95       	ret

0001917c <_Z24Pump_Status_List_Monitorv>:
   1917c:	0f 93       	push	r16
   1917e:	1f 93       	push	r17
   19180:	cf 93       	push	r28
   19182:	df 93       	push	r29
   19184:	80 91 6c 0d 	lds	r24, 0x0D6C	; 0x800d6c <_ZZ24Pump_Status_List_MonitorvE7counter>
   19188:	89 37       	cpi	r24, 0x79	; 121
   1918a:	08 f4       	brcc	.+2      	; 0x1918e <_Z24Pump_Status_List_Monitorv+0x12>
   1918c:	4a c0       	rjmp	.+148    	; 0x19222 <_Z24Pump_Status_List_Monitorv+0xa6>
   1918e:	20 91 26 14 	lds	r18, 0x1426	; 0x801426 <_sRuble_Parameters+0xdc>
   19192:	30 e0       	ldi	r19, 0x00	; 0
   19194:	e1 e2       	ldi	r30, 0x21	; 33
   19196:	f4 e1       	ldi	r31, 0x14	; 20
   19198:	80 e0       	ldi	r24, 0x00	; 0
   1919a:	90 e0       	ldi	r25, 0x00	; 0
   1919c:	08 2f       	mov	r16, r24
   1919e:	ec 01       	movw	r28, r24
   191a0:	11 91       	ld	r17, Z+
   191a2:	01 96       	adiw	r24, 0x01	; 1
   191a4:	11 30       	cpi	r17, 0x01	; 1
   191a6:	c1 f5       	brne	.+112    	; 0x19218 <_Z24Pump_Status_List_Monitorv+0x9c>
   191a8:	28 17       	cp	r18, r24
   191aa:	39 07       	cpc	r19, r25
   191ac:	a9 f1       	breq	.+106    	; 0x19218 <_Z24Pump_Status_List_Monitorv+0x9c>
   191ae:	10 92 6c 0d 	sts	0x0D6C, r1	; 0x800d6c <_ZZ24Pump_Status_List_MonitorvE7counter>
   191b2:	01 11       	cpse	r16, r1
   191b4:	13 c0       	rjmp	.+38     	; 0x191dc <_Z24Pump_Status_List_Monitorv+0x60>
   191b6:	8a e0       	ldi	r24, 0x0A	; 10
   191b8:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   191bc:	01 97       	sbiw	r24, 0x01	; 1
   191be:	21 f0       	breq	.+8      	; 0x191c8 <_Z24Pump_Status_List_Monitorv+0x4c>
   191c0:	61 e0       	ldi	r22, 0x01	; 1
   191c2:	8a e0       	ldi	r24, 0x0A	; 10
   191c4:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   191c8:	8b e0       	ldi	r24, 0x0B	; 11
   191ca:	0e 94 f4 d4 	call	0x1a9e8	; 0x1a9e8 <digitalRead>
   191ce:	01 97       	sbiw	r24, 0x01	; 1
   191d0:	c9 f0       	breq	.+50     	; 0x19204 <_Z24Pump_Status_List_Monitorv+0x88>
   191d2:	61 e0       	ldi	r22, 0x01	; 1
   191d4:	8b e0       	ldi	r24, 0x0B	; 11
   191d6:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   191da:	14 c0       	rjmp	.+40     	; 0x19204 <_Z24Pump_Status_List_Monitorv+0x88>
   191dc:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   191e0:	81 30       	cpi	r24, 0x01	; 1
   191e2:	49 f4       	brne	.+18     	; 0x191f6 <_Z24Pump_Status_List_Monitorv+0x7a>
   191e4:	6f e4       	ldi	r22, 0x4F	; 79
   191e6:	79 e2       	ldi	r23, 0x29	; 41
   191e8:	85 e5       	ldi	r24, 0x55	; 85
   191ea:	94 e1       	ldi	r25, 0x14	; 20
   191ec:	0e 94 2c d1 	call	0x1a258	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   191f0:	85 e5       	ldi	r24, 0x55	; 85
   191f2:	94 e1       	ldi	r25, 0x14	; 20
   191f4:	a0 d6       	rcall	.+3392   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   191f6:	6f ef       	ldi	r22, 0xFF	; 255
   191f8:	60 0f       	add	r22, r16
   191fa:	84 e0       	ldi	r24, 0x04	; 4
   191fc:	0e 94 90 ba 	call	0x17520	; 0x17520 <_Z20Wireless_Pump_On_Offhh>
   19200:	88 23       	and	r24, r24
   19202:	31 f0       	breq	.+12     	; 0x19210 <_Z24Pump_Status_List_Monitorv+0x94>
   19204:	cf 5d       	subi	r28, 0xDF	; 223
   19206:	db 4e       	sbci	r29, 0xEB	; 235
   19208:	18 82       	st	Y, r1
   1920a:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   1920e:	0d c0       	rjmp	.+26     	; 0x1922a <_Z24Pump_Status_List_Monitorv+0xae>
   19210:	0e 94 d4 84 	call	0x109a8	; 0x109a8 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   19214:	10 e0       	ldi	r17, 0x00	; 0
   19216:	09 c0       	rjmp	.+18     	; 0x1922a <_Z24Pump_Status_List_Monitorv+0xae>
   19218:	84 30       	cpi	r24, 0x04	; 4
   1921a:	91 05       	cpc	r25, r1
   1921c:	09 f0       	breq	.+2      	; 0x19220 <_Z24Pump_Status_List_Monitorv+0xa4>
   1921e:	be cf       	rjmp	.-132    	; 0x1919c <_Z24Pump_Status_List_Monitorv+0x20>
   19220:	03 c0       	rjmp	.+6      	; 0x19228 <_Z24Pump_Status_List_Monitorv+0xac>
   19222:	8f 5f       	subi	r24, 0xFF	; 255
   19224:	80 93 6c 0d 	sts	0x0D6C, r24	; 0x800d6c <_ZZ24Pump_Status_List_MonitorvE7counter>
   19228:	01 c0       	rjmp	.+2      	; 0x1922c <_Z24Pump_Status_List_Monitorv+0xb0>
   1922a:	81 2f       	mov	r24, r17
   1922c:	df 91       	pop	r29
   1922e:	cf 91       	pop	r28
   19230:	1f 91       	pop	r17
   19232:	0f 91       	pop	r16
   19234:	08 95       	ret

00019236 <_Z24Plot_Status_List_Monitorv>:
   19236:	2f 92       	push	r2
   19238:	3f 92       	push	r3
   1923a:	4f 92       	push	r4
   1923c:	5f 92       	push	r5
   1923e:	6f 92       	push	r6
   19240:	7f 92       	push	r7
   19242:	8f 92       	push	r8
   19244:	9f 92       	push	r9
   19246:	af 92       	push	r10
   19248:	bf 92       	push	r11
   1924a:	cf 92       	push	r12
   1924c:	df 92       	push	r13
   1924e:	ef 92       	push	r14
   19250:	ff 92       	push	r15
   19252:	0f 93       	push	r16
   19254:	1f 93       	push	r17
   19256:	cf 93       	push	r28
   19258:	df 93       	push	r29
   1925a:	00 d0       	rcall	.+0      	; 0x1925c <_Z24Plot_Status_List_Monitorv+0x26>
   1925c:	1f 92       	push	r1
   1925e:	1f 92       	push	r1
   19260:	cd b7       	in	r28, 0x3d	; 61
   19262:	de b7       	in	r29, 0x3e	; 62
   19264:	80 91 09 14 	lds	r24, 0x1409	; 0x801409 <_sRuble_Parameters+0xbf>
   19268:	88 23       	and	r24, r24
   1926a:	09 f4       	brne	.+2      	; 0x1926e <_Z24Plot_Status_List_Monitorv+0x38>
   1926c:	1e c3       	rjmp	.+1596   	; 0x198aa <_Z24Plot_Status_List_Monitorv+0x674>
   1926e:	80 91 0a 14 	lds	r24, 0x140A	; 0x80140a <_sRuble_Parameters+0xc0>
   19272:	88 23       	and	r24, r24
   19274:	49 f0       	breq	.+18     	; 0x19288 <_Z24Plot_Status_List_Monitorv+0x52>
   19276:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1927a:	81 11       	cpse	r24, r1
   1927c:	05 c0       	rjmp	.+10     	; 0x19288 <_Z24Plot_Status_List_Monitorv+0x52>
   1927e:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   19282:	82 30       	cpi	r24, 0x02	; 2
   19284:	09 f0       	breq	.+2      	; 0x19288 <_Z24Plot_Status_List_Monitorv+0x52>
   19286:	11 c3       	rjmp	.+1570   	; 0x198aa <_Z24Plot_Status_List_Monitorv+0x674>
   19288:	ed e0       	ldi	r30, 0x0D	; 13
   1928a:	f4 e1       	ldi	r31, 0x14	; 20
   1928c:	e1 2c       	mov	r14, r1
   1928e:	f1 2c       	mov	r15, r1
   19290:	be 2c       	mov	r11, r14
   19292:	61 90       	ld	r6, Z+
   19294:	21 e0       	ldi	r18, 0x01	; 1
   19296:	62 12       	cpse	r6, r18
   19298:	00 c3       	rjmp	.+1536   	; 0x1989a <_Z24Plot_Status_List_Monitorv+0x664>
   1929a:	20 91 a5 13 	lds	r18, 0x13A5	; 0x8013a5 <_sRuble_Parameters+0x5b>
   1929e:	82 2f       	mov	r24, r18
   192a0:	90 e0       	ldi	r25, 0x00	; 0
   192a2:	01 97       	sbiw	r24, 0x01	; 1
   192a4:	e8 16       	cp	r14, r24
   192a6:	f9 06       	cpc	r15, r25
   192a8:	09 f4       	brne	.+2      	; 0x192ac <_Z24Plot_Status_List_Monitorv+0x76>
   192aa:	00 c3       	rjmp	.+1536   	; 0x198ac <_Z24Plot_Status_List_Monitorv+0x676>
   192ac:	8e 01       	movw	r16, r28
   192ae:	0f 5f       	subi	r16, 0xFF	; 255
   192b0:	1f 4f       	sbci	r17, 0xFF	; 255
   192b2:	22 23       	and	r18, r18
   192b4:	09 f4       	brne	.+2      	; 0x192b8 <_Z24Plot_Status_List_Monitorv+0x82>
   192b6:	4a c0       	rjmp	.+148    	; 0x1934c <_Z24Plot_Status_List_Monitorv+0x116>
   192b8:	25 e0       	ldi	r18, 0x05	; 5
   192ba:	d8 01       	movw	r26, r16
   192bc:	1d 92       	st	X+, r1
   192be:	2a 95       	dec	r18
   192c0:	e9 f7       	brne	.-6      	; 0x192bc <_Z24Plot_Status_List_Monitorv+0x86>
   192c2:	26 e0       	ldi	r18, 0x06	; 6
   192c4:	2e 9d       	mul	r18, r14
   192c6:	b0 01       	movw	r22, r0
   192c8:	2f 9d       	mul	r18, r15
   192ca:	70 0d       	add	r23, r0
   192cc:	11 24       	eor	r1, r1
   192ce:	28 9f       	mul	r18, r24
   192d0:	f0 01       	movw	r30, r0
   192d2:	29 9f       	mul	r18, r25
   192d4:	f0 0d       	add	r31, r0
   192d6:	11 24       	eor	r1, r1
   192d8:	80 e0       	ldi	r24, 0x00	; 0
   192da:	90 e0       	ldi	r25, 0x00	; 0
   192dc:	40 e0       	ldi	r20, 0x00	; 0
   192de:	db 01       	movw	r26, r22
   192e0:	a8 0f       	add	r26, r24
   192e2:	b9 1f       	adc	r27, r25
   192e4:	a0 50       	subi	r26, 0x00	; 0
   192e6:	b3 4f       	sbci	r27, 0xF3	; 243
   192e8:	11 96       	adiw	r26, 0x01	; 1
   192ea:	5c 91       	ld	r21, X
   192ec:	20 e0       	ldi	r18, 0x00	; 0
   192ee:	30 e0       	ldi	r19, 0x00	; 0
   192f0:	d1 2c       	mov	r13, r1
   192f2:	df 01       	movw	r26, r30
   192f4:	a2 0f       	add	r26, r18
   192f6:	b3 1f       	adc	r27, r19
   192f8:	a0 50       	subi	r26, 0x00	; 0
   192fa:	b3 4f       	sbci	r27, 0xF3	; 243
   192fc:	11 96       	adiw	r26, 0x01	; 1
   192fe:	ac 91       	ld	r26, X
   19300:	5a 13       	cpse	r21, r26
   19302:	02 c0       	rjmp	.+4      	; 0x19308 <_Z24Plot_Status_List_Monitorv+0xd2>
   19304:	dd 24       	eor	r13, r13
   19306:	d3 94       	inc	r13
   19308:	2f 5f       	subi	r18, 0xFF	; 255
   1930a:	3f 4f       	sbci	r19, 0xFF	; 255
   1930c:	25 30       	cpi	r18, 0x05	; 5
   1930e:	31 05       	cpc	r19, r1
   19310:	81 f7       	brne	.-32     	; 0x192f2 <_Z24Plot_Status_List_Monitorv+0xbc>
   19312:	d1 10       	cpse	r13, r1
   19314:	05 c0       	rjmp	.+10     	; 0x19320 <_Z24Plot_Status_List_Monitorv+0xea>
   19316:	d8 01       	movw	r26, r16
   19318:	a4 0f       	add	r26, r20
   1931a:	b1 1d       	adc	r27, r1
   1931c:	5c 93       	st	X, r21
   1931e:	4f 5f       	subi	r20, 0xFF	; 255
   19320:	01 96       	adiw	r24, 0x01	; 1
   19322:	85 30       	cpi	r24, 0x05	; 5
   19324:	91 05       	cpc	r25, r1
   19326:	d9 f6       	brne	.-74     	; 0x192de <_Z24Plot_Status_List_Monitorv+0xa8>
   19328:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1932c:	fe 01       	movw	r30, r28
   1932e:	36 96       	adiw	r30, 0x06	; 6
   19330:	6f 01       	movw	r12, r30
   19332:	81 30       	cpi	r24, 0x01	; 1
   19334:	09 f0       	breq	.+2      	; 0x19338 <_Z24Plot_Status_List_Monitorv+0x102>
   19336:	3d c0       	rjmp	.+122    	; 0x193b2 <_Z24Plot_Status_List_Monitorv+0x17c>
   19338:	6f ed       	ldi	r22, 0xDF	; 223
   1933a:	7a e2       	ldi	r23, 0x2A	; 42
   1933c:	85 e5       	ldi	r24, 0x55	; 85
   1933e:	94 e1       	ldi	r25, 0x14	; 20
   19340:	8b d7       	rcall	.+3862   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19342:	85 e5       	ldi	r24, 0x55	; 85
   19344:	94 e1       	ldi	r25, 0x14	; 20
   19346:	f7 d5       	rcall	.+3054   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19348:	48 01       	movw	r8, r16
   1934a:	15 c0       	rjmp	.+42     	; 0x19376 <_Z24Plot_Status_List_Monitorv+0x140>
   1934c:	d8 01       	movw	r26, r16
   1934e:	86 e0       	ldi	r24, 0x06	; 6
   19350:	8e 9d       	mul	r24, r14
   19352:	a0 01       	movw	r20, r0
   19354:	8f 9d       	mul	r24, r15
   19356:	50 0d       	add	r21, r0
   19358:	11 24       	eor	r1, r1
   1935a:	80 e0       	ldi	r24, 0x00	; 0
   1935c:	90 e0       	ldi	r25, 0x00	; 0
   1935e:	fa 01       	movw	r30, r20
   19360:	e8 0f       	add	r30, r24
   19362:	f9 1f       	adc	r31, r25
   19364:	e0 50       	subi	r30, 0x00	; 0
   19366:	f3 4f       	sbci	r31, 0xF3	; 243
   19368:	21 81       	ldd	r18, Z+1	; 0x01
   1936a:	2d 93       	st	X+, r18
   1936c:	01 96       	adiw	r24, 0x01	; 1
   1936e:	85 30       	cpi	r24, 0x05	; 5
   19370:	91 05       	cpc	r25, r1
   19372:	a9 f7       	brne	.-22     	; 0x1935e <_Z24Plot_Status_List_Monitorv+0x128>
   19374:	d9 cf       	rjmp	.-78     	; 0x19328 <_Z24Plot_Status_List_Monitorv+0xf2>
   19376:	d4 01       	movw	r26, r8
   19378:	6d 91       	ld	r22, X+
   1937a:	4d 01       	movw	r8, r26
   1937c:	4a e0       	ldi	r20, 0x0A	; 10
   1937e:	50 e0       	ldi	r21, 0x00	; 0
   19380:	85 e5       	ldi	r24, 0x55	; 85
   19382:	94 e1       	ldi	r25, 0x14	; 20
   19384:	df d7       	rcall	.+4030   	; 0x1a344 <_ZN5Print5printEhi>
   19386:	6d ed       	ldi	r22, 0xDD	; 221
   19388:	7a e2       	ldi	r23, 0x2A	; 42
   1938a:	85 e5       	ldi	r24, 0x55	; 85
   1938c:	94 e1       	ldi	r25, 0x14	; 20
   1938e:	33 d7       	rcall	.+3686   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   19390:	8c 14       	cp	r8, r12
   19392:	9d 04       	cpc	r9, r13
   19394:	81 f7       	brne	.-32     	; 0x19376 <_Z24Plot_Status_List_Monitorv+0x140>
   19396:	6d ec       	ldi	r22, 0xCD	; 205
   19398:	7a e2       	ldi	r23, 0x2A	; 42
   1939a:	85 e5       	ldi	r24, 0x55	; 85
   1939c:	94 e1       	ldi	r25, 0x14	; 20
   1939e:	2b d7       	rcall	.+3670   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   193a0:	4a e0       	ldi	r20, 0x0A	; 10
   193a2:	50 e0       	ldi	r21, 0x00	; 0
   193a4:	6b 2d       	mov	r22, r11
   193a6:	85 e5       	ldi	r24, 0x55	; 85
   193a8:	94 e1       	ldi	r25, 0x14	; 20
   193aa:	d2 d7       	rcall	.+4004   	; 0x1a350 <_ZN5Print7printlnEhi>
   193ac:	85 e5       	ldi	r24, 0x55	; 85
   193ae:	94 e1       	ldi	r25, 0x14	; 20
   193b0:	c2 d5       	rcall	.+2948   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   193b2:	58 01       	movw	r10, r16
   193b4:	71 2c       	mov	r7, r1
   193b6:	ac e7       	ldi	r26, 0x7C	; 124
   193b8:	2a 2e       	mov	r2, r26
   193ba:	a3 e1       	ldi	r26, 0x13	; 19
   193bc:	3a 2e       	mov	r3, r26
   193be:	bd e0       	ldi	r27, 0x0D	; 13
   193c0:	5b 2e       	mov	r5, r27
   193c2:	f5 01       	movw	r30, r10
   193c4:	81 90       	ld	r8, Z+
   193c6:	5f 01       	movw	r10, r30
   193c8:	8f ef       	ldi	r24, 0xFF	; 255
   193ca:	88 0d       	add	r24, r8
   193cc:	85 31       	cpi	r24, 0x15	; 21
   193ce:	08 f0       	brcs	.+2      	; 0x193d2 <_Z24Plot_Status_List_Monitorv+0x19c>
   193d0:	3c c2       	rjmp	.+1144   	; 0x1984a <_Z24Plot_Status_List_Monitorv+0x614>
   193d2:	f3 e0       	ldi	r31, 0x03	; 3
   193d4:	f8 15       	cp	r31, r8
   193d6:	90 f4       	brcc	.+36     	; 0x193fc <_Z24Plot_Status_List_Monitorv+0x1c6>
   193d8:	2b ea       	ldi	r18, 0xAB	; 171
   193da:	82 9e       	mul	r8, r18
   193dc:	91 2c       	mov	r9, r1
   193de:	11 24       	eor	r1, r1
   193e0:	89 2d       	mov	r24, r9
   193e2:	86 95       	lsr	r24
   193e4:	98 2f       	mov	r25, r24
   193e6:	99 0f       	add	r25, r25
   193e8:	89 0f       	add	r24, r25
   193ea:	88 1a       	sub	r8, r24
   193ec:	96 94       	lsr	r9
   193ee:	88 20       	and	r8, r8
   193f0:	11 f0       	breq	.+4      	; 0x193f6 <_Z24Plot_Status_List_Monitorv+0x1c0>
   193f2:	93 94       	inc	r9
   193f4:	05 c0       	rjmp	.+10     	; 0x19400 <_Z24Plot_Status_List_Monitorv+0x1ca>
   193f6:	f3 e0       	ldi	r31, 0x03	; 3
   193f8:	8f 2e       	mov	r8, r31
   193fa:	02 c0       	rjmp	.+4      	; 0x19400 <_Z24Plot_Status_List_Monitorv+0x1ca>
   193fc:	99 24       	eor	r9, r9
   193fe:	93 94       	inc	r9
   19400:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   19404:	81 30       	cpi	r24, 0x01	; 1
   19406:	71 f4       	brne	.+28     	; 0x19424 <_Z24Plot_Status_List_Monitorv+0x1ee>
   19408:	69 eb       	ldi	r22, 0xB9	; 185
   1940a:	7a e2       	ldi	r23, 0x2A	; 42
   1940c:	85 e5       	ldi	r24, 0x55	; 85
   1940e:	94 e1       	ldi	r25, 0x14	; 20
   19410:	f2 d6       	rcall	.+3556   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   19412:	4a e0       	ldi	r20, 0x0A	; 10
   19414:	50 e0       	ldi	r21, 0x00	; 0
   19416:	69 2d       	mov	r22, r9
   19418:	85 e5       	ldi	r24, 0x55	; 85
   1941a:	94 e1       	ldi	r25, 0x14	; 20
   1941c:	99 d7       	rcall	.+3890   	; 0x1a350 <_ZN5Print7printlnEhi>
   1941e:	85 e5       	ldi	r24, 0x55	; 85
   19420:	94 e1       	ldi	r25, 0x14	; 20
   19422:	89 d5       	rcall	.+2834   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19424:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   19428:	81 11       	cpse	r24, r1
   1942a:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   1942e:	d1 01       	movw	r26, r2
   19430:	e4 e1       	ldi	r30, 0x14	; 20
   19432:	1d 92       	st	X+, r1
   19434:	ea 95       	dec	r30
   19436:	e9 f7       	brne	.-6      	; 0x19432 <_Z24Plot_Status_List_Monitorv+0x1fc>
   19438:	89 2d       	mov	r24, r9
   1943a:	90 e0       	ldi	r25, 0x00	; 0
   1943c:	01 97       	sbiw	r24, 0x01	; 1
   1943e:	f7 e0       	ldi	r31, 0x07	; 7
   19440:	f8 9f       	mul	r31, r24
   19442:	b0 01       	movw	r22, r0
   19444:	f9 9f       	mul	r31, r25
   19446:	70 0d       	add	r23, r0
   19448:	11 24       	eor	r1, r1
   1944a:	66 5b       	subi	r22, 0xB6	; 182
   1944c:	7c 4e       	sbci	r23, 0xEC	; 236
   1944e:	fb 01       	movw	r30, r22
   19450:	e1 5a       	subi	r30, 0xA1	; 161
   19452:	ff 4f       	sbci	r31, 0xFF	; 255
   19454:	80 81       	ld	r24, Z
   19456:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x32>
   1945a:	31 96       	adiw	r30, 0x01	; 1
   1945c:	80 81       	ld	r24, Z
   1945e:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x33>
   19462:	31 96       	adiw	r30, 0x01	; 1
   19464:	80 81       	ld	r24, Z
   19466:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x34>
   1946a:	31 96       	adiw	r30, 0x01	; 1
   1946c:	80 81       	ld	r24, Z
   1946e:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x35>
   19472:	31 96       	adiw	r30, 0x01	; 1
   19474:	80 81       	ld	r24, Z
   19476:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x36>
   1947a:	31 96       	adiw	r30, 0x01	; 1
   1947c:	80 81       	ld	r24, Z
   1947e:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x37>
   19482:	22 e0       	ldi	r18, 0x02	; 2
   19484:	20 93 82 13 	sts	0x1382, r18	; 0x801382 <_sRuble_Parameters+0x38>
   19488:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x27>
   1948c:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3a>
   19490:	80 91 60 13 	lds	r24, 0x1360	; 0x801360 <_sRuble_Parameters+0x16>
   19494:	80 93 86 13 	sts	0x1386, r24	; 0x801386 <_sRuble_Parameters+0x3c>
   19498:	80 92 87 13 	sts	0x1387, r8	; 0x801387 <_sRuble_Parameters+0x3d>
   1949c:	20 e0       	ldi	r18, 0x00	; 0
   1949e:	30 e0       	ldi	r19, 0x00	; 0
   194a0:	42 2e       	mov	r4, r18
   194a2:	91 2c       	mov	r9, r1
   194a4:	81 2c       	mov	r8, r1
   194a6:	52 9e       	mul	r5, r18
   194a8:	a0 01       	movw	r20, r0
   194aa:	53 9e       	mul	r5, r19
   194ac:	50 0d       	add	r21, r0
   194ae:	11 24       	eor	r1, r1
   194b0:	49 54       	subi	r20, 0x49	; 73
   194b2:	54 4f       	sbci	r21, 0xF4	; 244
   194b4:	89 2d       	mov	r24, r9
   194b6:	90 e0       	ldi	r25, 0x00	; 0
   194b8:	fa 01       	movw	r30, r20
   194ba:	e8 0f       	add	r30, r24
   194bc:	f9 1f       	adc	r31, r25
   194be:	86 0f       	add	r24, r22
   194c0:	97 1f       	adc	r25, r23
   194c2:	dc 01       	movw	r26, r24
   194c4:	a1 5a       	subi	r26, 0xA1	; 161
   194c6:	bf 4f       	sbci	r27, 0xFF	; 255
   194c8:	81 81       	ldd	r24, Z+1	; 0x01
   194ca:	9c 91       	ld	r25, X
   194cc:	89 17       	cp	r24, r25
   194ce:	19 f0       	breq	.+6      	; 0x194d6 <_Z24Plot_Status_List_Monitorv+0x2a0>
   194d0:	e6 e0       	ldi	r30, 0x06	; 6
   194d2:	9e 2e       	mov	r9, r30
   194d4:	81 2c       	mov	r8, r1
   194d6:	83 94       	inc	r8
   194d8:	93 94       	inc	r9
   194da:	85 e0       	ldi	r24, 0x05	; 5
   194dc:	89 15       	cp	r24, r9
   194de:	50 f7       	brcc	.-44     	; 0x194b4 <_Z24Plot_Status_List_Monitorv+0x27e>
   194e0:	a6 e0       	ldi	r26, 0x06	; 6
   194e2:	8a 16       	cp	r8, r26
   194e4:	31 f0       	breq	.+12     	; 0x194f2 <_Z24Plot_Status_List_Monitorv+0x2bc>
   194e6:	2f 5f       	subi	r18, 0xFF	; 255
   194e8:	3f 4f       	sbci	r19, 0xFF	; 255
   194ea:	27 30       	cpi	r18, 0x07	; 7
   194ec:	31 05       	cpc	r19, r1
   194ee:	c1 f6       	brne	.-80     	; 0x194a0 <_Z24Plot_Status_List_Monitorv+0x26a>
   194f0:	01 c0       	rjmp	.+2      	; 0x194f4 <_Z24Plot_Status_List_Monitorv+0x2be>
   194f2:	74 2c       	mov	r7, r4
   194f4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   194f8:	81 30       	cpi	r24, 0x01	; 1
   194fa:	71 f4       	brne	.+28     	; 0x19518 <_Z24Plot_Status_List_Monitorv+0x2e2>
   194fc:	63 ea       	ldi	r22, 0xA3	; 163
   194fe:	7a e2       	ldi	r23, 0x2A	; 42
   19500:	85 e5       	ldi	r24, 0x55	; 85
   19502:	94 e1       	ldi	r25, 0x14	; 20
   19504:	78 d6       	rcall	.+3312   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   19506:	4a e0       	ldi	r20, 0x0A	; 10
   19508:	50 e0       	ldi	r21, 0x00	; 0
   1950a:	67 2d       	mov	r22, r7
   1950c:	85 e5       	ldi	r24, 0x55	; 85
   1950e:	94 e1       	ldi	r25, 0x14	; 20
   19510:	19 d7       	rcall	.+3634   	; 0x1a344 <_ZN5Print5printEhi>
   19512:	85 e5       	ldi	r24, 0x55	; 85
   19514:	94 e1       	ldi	r25, 0x14	; 20
   19516:	0f d5       	rcall	.+2590   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19518:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1951c:	81 30       	cpi	r24, 0x01	; 1
   1951e:	41 f4       	brne	.+16     	; 0x19530 <_Z24Plot_Status_List_Monitorv+0x2fa>
   19520:	6f e7       	ldi	r22, 0x7F	; 127
   19522:	7a e2       	ldi	r23, 0x2A	; 42
   19524:	85 e5       	ldi	r24, 0x55	; 85
   19526:	94 e1       	ldi	r25, 0x14	; 20
   19528:	97 d6       	rcall	.+3374   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1952a:	85 e5       	ldi	r24, 0x55	; 85
   1952c:	94 e1       	ldi	r25, 0x14	; 20
   1952e:	03 d5       	rcall	.+2566   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19530:	0e 94 21 6b 	call	0xd642	; 0xd642 <_Z16Display_Update_1v>
   19534:	8c e0       	ldi	r24, 0x0C	; 12
   19536:	0e 94 05 66 	call	0xcc0a	; 0xcc0a <_Z14Lora_Data_Sendh>
   1953a:	88 eb       	ldi	r24, 0xB8	; 184
   1953c:	9b e0       	ldi	r25, 0x0B	; 11
   1953e:	0e 94 19 64 	call	0xc832	; 0xc832 <_Z20Check_Data_Availablej>
   19542:	88 23       	and	r24, r24
   19544:	09 f4       	brne	.+2      	; 0x19548 <_Z24Plot_Status_List_Monitorv+0x312>
   19546:	36 c1       	rjmp	.+620    	; 0x197b4 <_Z24Plot_Status_List_Monitorv+0x57e>
   19548:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   1954c:	90 91 3a 14 	lds	r25, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   19550:	88 23       	and	r24, r24
   19552:	09 f4       	brne	.+2      	; 0x19556 <_Z24Plot_Status_List_Monitorv+0x320>
   19554:	eb c0       	rjmp	.+470    	; 0x1972c <_Z24Plot_Status_List_Monitorv+0x4f6>
   19556:	87 2c       	mov	r8, r7
   19558:	91 2c       	mov	r9, r1
   1955a:	91 30       	cpi	r25, 0x01	; 1
   1955c:	51 f5       	brne	.+84     	; 0x195b2 <_Z24Plot_Status_List_Monitorv+0x37c>
   1955e:	69 e6       	ldi	r22, 0x69	; 105
   19560:	7a e2       	ldi	r23, 0x2A	; 42
   19562:	85 e5       	ldi	r24, 0x55	; 85
   19564:	94 e1       	ldi	r25, 0x14	; 20
   19566:	47 d6       	rcall	.+3214   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   19568:	4a e0       	ldi	r20, 0x0A	; 10
   1956a:	50 e0       	ldi	r21, 0x00	; 0
   1956c:	60 e9       	ldi	r22, 0x90	; 144
   1956e:	73 e1       	ldi	r23, 0x13	; 19
   19570:	85 e5       	ldi	r24, 0x55	; 85
   19572:	94 e1       	ldi	r25, 0x14	; 20
   19574:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN5Print5writeEPKcj>
   19578:	85 e5       	ldi	r24, 0x55	; 85
   1957a:	94 e1       	ldi	r25, 0x14	; 20
   1957c:	69 d6       	rcall	.+3282   	; 0x1a250 <_ZN5Print7printlnEv>
   1957e:	85 e5       	ldi	r24, 0x55	; 85
   19580:	94 e1       	ldi	r25, 0x14	; 20
   19582:	d9 d4       	rcall	.+2482   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19584:	6b e4       	ldi	r22, 0x4B	; 75
   19586:	7a e2       	ldi	r23, 0x2A	; 42
   19588:	85 e5       	ldi	r24, 0x55	; 85
   1958a:	94 e1       	ldi	r25, 0x14	; 20
   1958c:	34 d6       	rcall	.+3176   	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1958e:	58 9c       	mul	r5, r8
   19590:	b0 01       	movw	r22, r0
   19592:	59 9c       	mul	r5, r9
   19594:	70 0d       	add	r23, r0
   19596:	11 24       	eor	r1, r1
   19598:	68 54       	subi	r22, 0x48	; 72
   1959a:	74 4f       	sbci	r23, 0xF4	; 244
   1959c:	47 e0       	ldi	r20, 0x07	; 7
   1959e:	50 e0       	ldi	r21, 0x00	; 0
   195a0:	85 e5       	ldi	r24, 0x55	; 85
   195a2:	94 e1       	ldi	r25, 0x14	; 20
   195a4:	fe d5       	rcall	.+3068   	; 0x1a1a2 <_ZN5Print5writeEPKhj>
   195a6:	85 e5       	ldi	r24, 0x55	; 85
   195a8:	94 e1       	ldi	r25, 0x14	; 20
   195aa:	52 d6       	rcall	.+3236   	; 0x1a250 <_ZN5Print7printlnEv>
   195ac:	85 e5       	ldi	r24, 0x55	; 85
   195ae:	94 e1       	ldi	r25, 0x14	; 20
   195b0:	c2 d4       	rcall	.+2436   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   195b2:	a0 e9       	ldi	r26, 0x90	; 144
   195b4:	b3 e1       	ldi	r27, 0x13	; 19
   195b6:	ed e0       	ldi	r30, 0x0D	; 13
   195b8:	7e 9e       	mul	r7, r30
   195ba:	90 01       	movw	r18, r0
   195bc:	11 24       	eor	r1, r1
   195be:	80 e0       	ldi	r24, 0x00	; 0
   195c0:	90 e0       	ldi	r25, 0x00	; 0
   195c2:	4d 91       	ld	r20, X+
   195c4:	f9 01       	movw	r30, r18
   195c6:	e8 0f       	add	r30, r24
   195c8:	f9 1f       	adc	r31, r25
   195ca:	e9 54       	subi	r30, 0x49	; 73
   195cc:	f4 4f       	sbci	r31, 0xF4	; 244
   195ce:	51 81       	ldd	r21, Z+1	; 0x01
   195d0:	54 17       	cp	r21, r20
   195d2:	09 f4       	brne	.+2      	; 0x195d6 <_Z24Plot_Status_List_Monitorv+0x3a0>
   195d4:	48 c0       	rjmp	.+144    	; 0x19666 <_Z24Plot_Status_List_Monitorv+0x430>
   195d6:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   195da:	81 30       	cpi	r24, 0x01	; 1
   195dc:	41 f4       	brne	.+16     	; 0x195ee <_Z24Plot_Status_List_Monitorv+0x3b8>
   195de:	60 e2       	ldi	r22, 0x20	; 32
   195e0:	7a e2       	ldi	r23, 0x2A	; 42
   195e2:	85 e5       	ldi	r24, 0x55	; 85
   195e4:	94 e1       	ldi	r25, 0x14	; 20
   195e6:	38 d6       	rcall	.+3184   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   195e8:	85 e5       	ldi	r24, 0x55	; 85
   195ea:	94 e1       	ldi	r25, 0x14	; 20
   195ec:	a4 d4       	rcall	.+2376   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   195ee:	86 e0       	ldi	r24, 0x06	; 6
   195f0:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   195f4:	84 e6       	ldi	r24, 0x64	; 100
   195f6:	90 e0       	ldi	r25, 0x00	; 0
   195f8:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   195fc:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   19600:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   19604:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   19608:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1960c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   19610:	a0 62       	ori	r26, 0x20	; 32
   19612:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   19616:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1961a:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   1961e:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   19622:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0xb2>
   19626:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1962a:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1962e:	82 60       	ori	r24, 0x02	; 2
   19630:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   19634:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   19638:	d8 01       	movw	r26, r16
   1963a:	ed 91       	ld	r30, X+
   1963c:	8d 01       	movw	r16, r26
   1963e:	e6 31       	cpi	r30, 0x16	; 22
   19640:	68 f0       	brcs	.+26     	; 0x1965c <_Z24Plot_Status_List_Monitorv+0x426>
   19642:	f0 e0       	ldi	r31, 0x00	; 0
   19644:	ec 53       	subi	r30, 0x3C	; 60
   19646:	fc 4e       	sbci	r31, 0xEC	; 236
   19648:	61 e0       	ldi	r22, 0x01	; 1
   1964a:	80 81       	ld	r24, Z
   1964c:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   19650:	68 ec       	ldi	r22, 0xC8	; 200
   19652:	70 e0       	ldi	r23, 0x00	; 0
   19654:	80 e0       	ldi	r24, 0x00	; 0
   19656:	90 e0       	ldi	r25, 0x00	; 0
   19658:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1965c:	0c 15       	cp	r16, r12
   1965e:	1d 05       	cpc	r17, r13
   19660:	59 f7       	brne	.-42     	; 0x19638 <_Z24Plot_Status_List_Monitorv+0x402>
   19662:	61 2c       	mov	r6, r1
   19664:	23 c1       	rjmp	.+582    	; 0x198ac <_Z24Plot_Status_List_Monitorv+0x676>
   19666:	01 96       	adiw	r24, 0x01	; 1
   19668:	86 30       	cpi	r24, 0x06	; 6
   1966a:	91 05       	cpc	r25, r1
   1966c:	09 f0       	breq	.+2      	; 0x19670 <_Z24Plot_Status_List_Monitorv+0x43a>
   1966e:	a9 cf       	rjmp	.-174    	; 0x195c2 <_Z24Plot_Status_List_Monitorv+0x38c>
   19670:	58 9c       	mul	r5, r8
   19672:	f0 01       	movw	r30, r0
   19674:	59 9c       	mul	r5, r9
   19676:	f0 0d       	add	r31, r0
   19678:	11 24       	eor	r1, r1
   1967a:	e9 54       	subi	r30, 0x49	; 73
   1967c:	f4 4f       	sbci	r31, 0xF4	; 244
   1967e:	81 e0       	ldi	r24, 0x01	; 1
   19680:	83 87       	std	Z+11, r24	; 0x0b
   19682:	80 91 99 13 	lds	r24, 0x1399	; 0x801399 <_sRuble_Parameters+0x4f>
   19686:	90 e0       	ldi	r25, 0x00	; 0
   19688:	98 2f       	mov	r25, r24
   1968a:	88 27       	eor	r24, r24
   1968c:	20 91 9a 13 	lds	r18, 0x139A	; 0x80139a <_sRuble_Parameters+0x50>
   19690:	82 2b       	or	r24, r18
   19692:	91 87       	std	Z+9, r25	; 0x09
   19694:	80 87       	std	Z+8, r24	; 0x08
   19696:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x4e>
   1969a:	88 23       	and	r24, r24
   1969c:	09 f4       	brne	.+2      	; 0x196a0 <_Z24Plot_Status_List_Monitorv+0x46a>
   1969e:	d0 c0       	rjmp	.+416    	; 0x19840 <_Z24Plot_Status_List_Monitorv+0x60a>
   196a0:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   196a4:	81 30       	cpi	r24, 0x01	; 1
   196a6:	41 f4       	brne	.+16     	; 0x196b8 <_Z24Plot_Status_List_Monitorv+0x482>
   196a8:	6d e0       	ldi	r22, 0x0D	; 13
   196aa:	7a e2       	ldi	r23, 0x2A	; 42
   196ac:	85 e5       	ldi	r24, 0x55	; 85
   196ae:	94 e1       	ldi	r25, 0x14	; 20
   196b0:	d3 d5       	rcall	.+2982   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   196b2:	85 e5       	ldi	r24, 0x55	; 85
   196b4:	94 e1       	ldi	r25, 0x14	; 20
   196b6:	3f d4       	rcall	.+2174   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   196b8:	86 e0       	ldi	r24, 0x06	; 6
   196ba:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   196be:	84 e6       	ldi	r24, 0x64	; 100
   196c0:	90 e0       	ldi	r25, 0x00	; 0
   196c2:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   196c6:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   196ca:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   196ce:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   196d2:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   196d6:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   196da:	a0 62       	ori	r26, 0x20	; 32
   196dc:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   196e0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   196e4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   196e8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   196ec:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0xb2>
   196f0:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   196f4:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   196f8:	82 60       	ori	r24, 0x02	; 2
   196fa:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   196fe:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   19702:	d8 01       	movw	r26, r16
   19704:	ed 91       	ld	r30, X+
   19706:	8d 01       	movw	r16, r26
   19708:	e6 31       	cpi	r30, 0x16	; 22
   1970a:	60 f0       	brcs	.+24     	; 0x19724 <_Z24Plot_Status_List_Monitorv+0x4ee>
   1970c:	f0 e0       	ldi	r31, 0x00	; 0
   1970e:	ec 53       	subi	r30, 0x3C	; 60
   19710:	fc 4e       	sbci	r31, 0xEC	; 236
   19712:	61 e0       	ldi	r22, 0x01	; 1
   19714:	80 81       	ld	r24, Z
   19716:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1971a:	68 ec       	ldi	r22, 0xC8	; 200
   1971c:	70 e0       	ldi	r23, 0x00	; 0
   1971e:	80 e0       	ldi	r24, 0x00	; 0
   19720:	90 e0       	ldi	r25, 0x00	; 0
   19722:	fb d7       	rcall	.+4086   	; 0x1a71a <delay>
   19724:	c0 16       	cp	r12, r16
   19726:	d1 06       	cpc	r13, r17
   19728:	61 f7       	brne	.-40     	; 0x19702 <_Z24Plot_Status_List_Monitorv+0x4cc>
   1972a:	9b cf       	rjmp	.-202    	; 0x19662 <_Z24Plot_Status_List_Monitorv+0x42c>
   1972c:	91 30       	cpi	r25, 0x01	; 1
   1972e:	41 f4       	brne	.+16     	; 0x19740 <_Z24Plot_Status_List_Monitorv+0x50a>
   19730:	62 ed       	ldi	r22, 0xD2	; 210
   19732:	79 e2       	ldi	r23, 0x29	; 41
   19734:	85 e5       	ldi	r24, 0x55	; 85
   19736:	94 e1       	ldi	r25, 0x14	; 20
   19738:	8f d5       	rcall	.+2846   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1973a:	85 e5       	ldi	r24, 0x55	; 85
   1973c:	94 e1       	ldi	r25, 0x14	; 20
   1973e:	fb d3       	rcall	.+2038   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19740:	86 e0       	ldi	r24, 0x06	; 6
   19742:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   19746:	84 e6       	ldi	r24, 0x64	; 100
   19748:	90 e0       	ldi	r25, 0x00	; 0
   1974a:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   1974e:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   19752:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   19756:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1975a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1975e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   19762:	a0 62       	ori	r26, 0x20	; 32
   19764:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   19768:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1976c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   19770:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   19774:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0xb2>
   19778:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   1977c:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   19780:	82 60       	ori	r24, 0x02	; 2
   19782:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   19786:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   1978a:	d8 01       	movw	r26, r16
   1978c:	ed 91       	ld	r30, X+
   1978e:	8d 01       	movw	r16, r26
   19790:	e6 31       	cpi	r30, 0x16	; 22
   19792:	60 f0       	brcs	.+24     	; 0x197ac <_Z24Plot_Status_List_Monitorv+0x576>
   19794:	f0 e0       	ldi	r31, 0x00	; 0
   19796:	ec 53       	subi	r30, 0x3C	; 60
   19798:	fc 4e       	sbci	r31, 0xEC	; 236
   1979a:	61 e0       	ldi	r22, 0x01	; 1
   1979c:	80 81       	ld	r24, Z
   1979e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   197a2:	68 ec       	ldi	r22, 0xC8	; 200
   197a4:	70 e0       	ldi	r23, 0x00	; 0
   197a6:	80 e0       	ldi	r24, 0x00	; 0
   197a8:	90 e0       	ldi	r25, 0x00	; 0
   197aa:	b7 d7       	rcall	.+3950   	; 0x1a71a <delay>
   197ac:	c0 16       	cp	r12, r16
   197ae:	d1 06       	cpc	r13, r17
   197b0:	61 f7       	brne	.-40     	; 0x1978a <_Z24Plot_Status_List_Monitorv+0x554>
   197b2:	57 cf       	rjmp	.-338    	; 0x19662 <_Z24Plot_Status_List_Monitorv+0x42c>
   197b4:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   197b8:	81 30       	cpi	r24, 0x01	; 1
   197ba:	41 f4       	brne	.+16     	; 0x197cc <_Z24Plot_Status_List_Monitorv+0x596>
   197bc:	67 e9       	ldi	r22, 0x97	; 151
   197be:	79 e2       	ldi	r23, 0x29	; 41
   197c0:	85 e5       	ldi	r24, 0x55	; 85
   197c2:	94 e1       	ldi	r25, 0x14	; 20
   197c4:	49 d5       	rcall	.+2706   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   197c6:	85 e5       	ldi	r24, 0x55	; 85
   197c8:	94 e1       	ldi	r25, 0x14	; 20
   197ca:	b5 d3       	rcall	.+1898   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   197cc:	86 e0       	ldi	r24, 0x06	; 6
   197ce:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sPump_Parameter+0x8>
   197d2:	84 e6       	ldi	r24, 0x64	; 100
   197d4:	90 e0       	ldi	r25, 0x00	; 0
   197d6:	90 93 9f 0c 	sts	0x0C9F, r25	; 0x800c9f <_gfault_Occure+0x1>
   197da:	80 93 9e 0c 	sts	0x0C9E, r24	; 0x800c9e <_gfault_Occure>
   197de:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   197e2:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   197e6:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   197ea:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   197ee:	a0 62       	ori	r26, 0x20	; 32
   197f0:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   197f4:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   197f8:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   197fc:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   19800:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0xb2>
   19804:	80 91 62 13 	lds	r24, 0x1362	; 0x801362 <_sRuble_Parameters+0x18>
   19808:	90 91 63 13 	lds	r25, 0x1363	; 0x801363 <_sRuble_Parameters+0x19>
   1980c:	82 60       	ori	r24, 0x02	; 2
   1980e:	90 93 63 13 	sts	0x1363, r25	; 0x801363 <_sRuble_Parameters+0x19>
   19812:	80 93 62 13 	sts	0x1362, r24	; 0x801362 <_sRuble_Parameters+0x18>
   19816:	d8 01       	movw	r26, r16
   19818:	ed 91       	ld	r30, X+
   1981a:	8d 01       	movw	r16, r26
   1981c:	e6 31       	cpi	r30, 0x16	; 22
   1981e:	60 f0       	brcs	.+24     	; 0x19838 <_Z24Plot_Status_List_Monitorv+0x602>
   19820:	f0 e0       	ldi	r31, 0x00	; 0
   19822:	ec 53       	subi	r30, 0x3C	; 60
   19824:	fc 4e       	sbci	r31, 0xEC	; 236
   19826:	61 e0       	ldi	r22, 0x01	; 1
   19828:	80 81       	ld	r24, Z
   1982a:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1982e:	68 ec       	ldi	r22, 0xC8	; 200
   19830:	70 e0       	ldi	r23, 0x00	; 0
   19832:	80 e0       	ldi	r24, 0x00	; 0
   19834:	90 e0       	ldi	r25, 0x00	; 0
   19836:	71 d7       	rcall	.+3810   	; 0x1a71a <delay>
   19838:	c0 16       	cp	r12, r16
   1983a:	d1 06       	cpc	r13, r17
   1983c:	61 f7       	brne	.-40     	; 0x19816 <_Z24Plot_Status_List_Monitorv+0x5e0>
   1983e:	11 cf       	rjmp	.-478    	; 0x19662 <_Z24Plot_Status_List_Monitorv+0x42c>
   19840:	68 ee       	ldi	r22, 0xE8	; 232
   19842:	73 e0       	ldi	r23, 0x03	; 3
   19844:	80 e0       	ldi	r24, 0x00	; 0
   19846:	90 e0       	ldi	r25, 0x00	; 0
   19848:	10 c0       	rjmp	.+32     	; 0x1986a <_Z24Plot_Status_List_Monitorv+0x634>
   1984a:	8a ee       	ldi	r24, 0xEA	; 234
   1984c:	88 0d       	add	r24, r8
   1984e:	8e 34       	cpi	r24, 0x4E	; 78
   19850:	68 f4       	brcc	.+26     	; 0x1986c <_Z24Plot_Status_List_Monitorv+0x636>
   19852:	e8 2d       	mov	r30, r8
   19854:	f0 e0       	ldi	r31, 0x00	; 0
   19856:	ec 53       	subi	r30, 0x3C	; 60
   19858:	fc 4e       	sbci	r31, 0xEC	; 236
   1985a:	61 e0       	ldi	r22, 0x01	; 1
   1985c:	80 81       	ld	r24, Z
   1985e:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   19862:	68 ec       	ldi	r22, 0xC8	; 200
   19864:	70 e0       	ldi	r23, 0x00	; 0
   19866:	80 e0       	ldi	r24, 0x00	; 0
   19868:	90 e0       	ldi	r25, 0x00	; 0
   1986a:	57 d7       	rcall	.+3758   	; 0x1a71a <delay>
   1986c:	ac 14       	cp	r10, r12
   1986e:	bd 04       	cpc	r11, r13
   19870:	09 f0       	breq	.+2      	; 0x19874 <_Z24Plot_Status_List_Monitorv+0x63e>
   19872:	a7 cd       	rjmp	.-1202   	; 0x193c2 <_Z24Plot_Status_List_Monitorv+0x18c>
   19874:	f7 01       	movw	r30, r14
   19876:	e3 5f       	subi	r30, 0xF3	; 243
   19878:	fb 4e       	sbci	r31, 0xEB	; 235
   1987a:	10 82       	st	Z, r1
   1987c:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   19880:	81 30       	cpi	r24, 0x01	; 1
   19882:	a1 f4       	brne	.+40     	; 0x198ac <_Z24Plot_Status_List_Monitorv+0x676>
   19884:	68 e7       	ldi	r22, 0x78	; 120
   19886:	79 e2       	ldi	r23, 0x29	; 41
   19888:	85 e5       	ldi	r24, 0x55	; 85
   1988a:	94 e1       	ldi	r25, 0x14	; 20
   1988c:	e5 d4       	rcall	.+2506   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1988e:	85 e5       	ldi	r24, 0x55	; 85
   19890:	94 e1       	ldi	r25, 0x14	; 20
   19892:	51 d3       	rcall	.+1698   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
   19894:	66 24       	eor	r6, r6
   19896:	63 94       	inc	r6
   19898:	09 c0       	rjmp	.+18     	; 0x198ac <_Z24Plot_Status_List_Monitorv+0x676>
   1989a:	bf ef       	ldi	r27, 0xFF	; 255
   1989c:	eb 1a       	sub	r14, r27
   1989e:	fb 0a       	sbc	r15, r27
   198a0:	2e e0       	ldi	r18, 0x0E	; 14
   198a2:	e2 16       	cp	r14, r18
   198a4:	f1 04       	cpc	r15, r1
   198a6:	09 f0       	breq	.+2      	; 0x198aa <_Z24Plot_Status_List_Monitorv+0x674>
   198a8:	f3 cc       	rjmp	.-1562   	; 0x19290 <_Z24Plot_Status_List_Monitorv+0x5a>
   198aa:	01 c0       	rjmp	.+2      	; 0x198ae <_Z24Plot_Status_List_Monitorv+0x678>
   198ac:	86 2d       	mov	r24, r6
   198ae:	0f 90       	pop	r0
   198b0:	0f 90       	pop	r0
   198b2:	0f 90       	pop	r0
   198b4:	0f 90       	pop	r0
   198b6:	0f 90       	pop	r0
   198b8:	df 91       	pop	r29
   198ba:	cf 91       	pop	r28
   198bc:	1f 91       	pop	r17
   198be:	0f 91       	pop	r16
   198c0:	ff 90       	pop	r15
   198c2:	ef 90       	pop	r14
   198c4:	df 90       	pop	r13
   198c6:	cf 90       	pop	r12
   198c8:	bf 90       	pop	r11
   198ca:	af 90       	pop	r10
   198cc:	9f 90       	pop	r9
   198ce:	8f 90       	pop	r8
   198d0:	7f 90       	pop	r7
   198d2:	6f 90       	pop	r6
   198d4:	5f 90       	pop	r5
   198d6:	4f 90       	pop	r4
   198d8:	3f 90       	pop	r3
   198da:	2f 90       	pop	r2
   198dc:	08 95       	ret

000198de <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   198de:	0f 93       	push	r16
   198e0:	1f 93       	push	r17
   198e2:	cf 93       	push	r28
   198e4:	df 93       	push	r29
   198e6:	00 d0       	rcall	.+0      	; 0x198e8 <_Z14Lora_Operationv+0xa>
   198e8:	00 d0       	rcall	.+0      	; 0x198ea <_Z14Lora_Operationv+0xc>
   198ea:	cd b7       	in	r28, 0x3d	; 61
   198ec:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   198ee:	0e 94 e3 63 	call	0xc7c6	; 0xc7c6 <_Z14Lora_Availablev>
   198f2:	88 23       	and	r24, r24
   198f4:	09 f4       	brne	.+2      	; 0x198f8 <_Z14Lora_Operationv+0x1a>
   198f6:	45 c0       	rjmp	.+138    	; 0x19982 <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   198f8:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   198fc:	81 30       	cpi	r24, 0x01	; 1
   198fe:	41 f4       	brne	.+16     	; 0x19910 <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   19900:	6f e0       	ldi	r22, 0x0F	; 15
   19902:	7b e3       	ldi	r23, 0x3B	; 59
   19904:	85 e5       	ldi	r24, 0x55	; 85
   19906:	94 e1       	ldi	r25, 0x14	; 20
   19908:	a7 d4       	rcall	.+2382   	; 0x1a258 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1990a:	85 e5       	ldi	r24, 0x55	; 85
   1990c:	94 e1       	ldi	r25, 0x14	; 20
   1990e:	13 d3       	rcall	.+1574   	; 0x19f36 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   19910:	0e 94 e7 63 	call	0xc7ce	; 0xc7ce <_Z17Lora_Data_Receivev>
   19914:	88 23       	and	r24, r24
   19916:	a9 f1       	breq	.+106    	; 0x19982 <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   19918:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_sRuble_Parameters+0xf0>
   1991c:	81 30       	cpi	r24, 0x01	; 1
   1991e:	11 f4       	brne	.+4      	; 0x19924 <_Z14Lora_Operationv+0x46>
   19920:	10 e0       	ldi	r17, 0x00	; 0
   19922:	08 c0       	rjmp	.+16     	; 0x19934 <_Z14Lora_Operationv+0x56>
   19924:	a0 e9       	ldi	r26, 0x90	; 144
   19926:	b3 e1       	ldi	r27, 0x13	; 19
   19928:	fe 01       	movw	r30, r28
   1992a:	31 96       	adiw	r30, 0x01	; 1
   1992c:	ce 01       	movw	r24, r28
   1992e:	07 96       	adiw	r24, 0x07	; 7
   19930:	8f 01       	movw	r16, r30
   19932:	0c c0       	rjmp	.+24     	; 0x1994c <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   19934:	e1 2f       	mov	r30, r17
   19936:	f0 e0       	ldi	r31, 0x00	; 0
   19938:	e0 57       	subi	r30, 0x70	; 112
   1993a:	fc 4e       	sbci	r31, 0xEC	; 236
   1993c:	60 81       	ld	r22, Z
   1993e:	66 23       	and	r22, r22
   19940:	89 f3       	breq	.-30     	; 0x19924 <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   19942:	85 e5       	ldi	r24, 0x55	; 85
   19944:	94 e1       	ldi	r25, 0x14	; 20
   19946:	ad d2       	rcall	.+1370   	; 0x19ea2 <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   19948:	1f 5f       	subi	r17, 0xFF	; 255
   1994a:	f4 cf       	rjmp	.-24     	; 0x19934 <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   1994c:	2d 91       	ld	r18, X+
   1994e:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   19950:	e8 17       	cp	r30, r24
   19952:	f9 07       	cpc	r31, r25
   19954:	d9 f7       	brne	.-10     	; 0x1994c <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   19956:	c8 01       	movw	r24, r16
   19958:	0e 94 84 7d 	call	0xfb08	; 0xfb08 <_Z23Update_Lira_Sensor_DataPh>
   1995c:	81 11       	cpse	r24, r1
   1995e:	11 c0       	rjmp	.+34     	; 0x19982 <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   19960:	c8 01       	movw	r24, r16
   19962:	0e 94 98 5a 	call	0xb530	; 0xb530 <_Z22Update_Euro_Valve_DataPh>
   19966:	81 11       	cpse	r24, r1
   19968:	0c c0       	rjmp	.+24     	; 0x19982 <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   1996a:	c8 01       	movw	r24, r16
   1996c:	0e 94 89 5d 	call	0xbb12	; 0xbb12 <_Z25Update_Wireless_Pump_DataPh>
   19970:	81 11       	cpse	r24, r1
   19972:	07 c0       	rjmp	.+14     	; 0x19982 <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   19974:	84 e1       	ldi	r24, 0x14	; 20
   19976:	e0 e9       	ldi	r30, 0x90	; 144
   19978:	f3 e1       	ldi	r31, 0x13	; 19
   1997a:	df 01       	movw	r26, r30
   1997c:	1d 92       	st	X+, r1
   1997e:	8a 95       	dec	r24
   19980:	e9 f7       	brne	.-6      	; 0x1997c <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   19982:	26 96       	adiw	r28, 0x06	; 6
   19984:	0f b6       	in	r0, 0x3f	; 63
   19986:	f8 94       	cli
   19988:	de bf       	out	0x3e, r29	; 62
   1998a:	0f be       	out	0x3f, r0	; 63
   1998c:	cd bf       	out	0x3d, r28	; 61
   1998e:	df 91       	pop	r29
   19990:	cf 91       	pop	r28
   19992:	1f 91       	pop	r17
   19994:	0f 91       	pop	r16
   19996:	08 95       	ret

00019998 <__subsf3>:
   19998:	50 58       	subi	r21, 0x80	; 128

0001999a <__addsf3>:
   1999a:	bb 27       	eor	r27, r27
   1999c:	aa 27       	eor	r26, r26
   1999e:	0e d0       	rcall	.+28     	; 0x199bc <__addsf3x>
   199a0:	70 c1       	rjmp	.+736    	; 0x19c82 <__fp_round>
   199a2:	61 d1       	rcall	.+706    	; 0x19c66 <__fp_pscA>
   199a4:	30 f0       	brcs	.+12     	; 0x199b2 <__addsf3+0x18>
   199a6:	66 d1       	rcall	.+716    	; 0x19c74 <__fp_pscB>
   199a8:	20 f0       	brcs	.+8      	; 0x199b2 <__addsf3+0x18>
   199aa:	31 f4       	brne	.+12     	; 0x199b8 <__addsf3+0x1e>
   199ac:	9f 3f       	cpi	r25, 0xFF	; 255
   199ae:	11 f4       	brne	.+4      	; 0x199b4 <__addsf3+0x1a>
   199b0:	1e f4       	brtc	.+6      	; 0x199b8 <__addsf3+0x1e>
   199b2:	56 c1       	rjmp	.+684    	; 0x19c60 <__fp_nan>
   199b4:	0e f4       	brtc	.+2      	; 0x199b8 <__addsf3+0x1e>
   199b6:	e0 95       	com	r30
   199b8:	e7 fb       	bst	r30, 7
   199ba:	4c c1       	rjmp	.+664    	; 0x19c54 <__fp_inf>

000199bc <__addsf3x>:
   199bc:	e9 2f       	mov	r30, r25
   199be:	72 d1       	rcall	.+740    	; 0x19ca4 <__fp_split3>
   199c0:	80 f3       	brcs	.-32     	; 0x199a2 <__addsf3+0x8>
   199c2:	ba 17       	cp	r27, r26
   199c4:	62 07       	cpc	r22, r18
   199c6:	73 07       	cpc	r23, r19
   199c8:	84 07       	cpc	r24, r20
   199ca:	95 07       	cpc	r25, r21
   199cc:	18 f0       	brcs	.+6      	; 0x199d4 <__addsf3x+0x18>
   199ce:	71 f4       	brne	.+28     	; 0x199ec <__addsf3x+0x30>
   199d0:	9e f5       	brtc	.+102    	; 0x19a38 <__addsf3x+0x7c>
   199d2:	8a c1       	rjmp	.+788    	; 0x19ce8 <__fp_zero>
   199d4:	0e f4       	brtc	.+2      	; 0x199d8 <__addsf3x+0x1c>
   199d6:	e0 95       	com	r30
   199d8:	0b 2e       	mov	r0, r27
   199da:	ba 2f       	mov	r27, r26
   199dc:	a0 2d       	mov	r26, r0
   199de:	0b 01       	movw	r0, r22
   199e0:	b9 01       	movw	r22, r18
   199e2:	90 01       	movw	r18, r0
   199e4:	0c 01       	movw	r0, r24
   199e6:	ca 01       	movw	r24, r20
   199e8:	a0 01       	movw	r20, r0
   199ea:	11 24       	eor	r1, r1
   199ec:	ff 27       	eor	r31, r31
   199ee:	59 1b       	sub	r21, r25
   199f0:	99 f0       	breq	.+38     	; 0x19a18 <__addsf3x+0x5c>
   199f2:	59 3f       	cpi	r21, 0xF9	; 249
   199f4:	50 f4       	brcc	.+20     	; 0x19a0a <__addsf3x+0x4e>
   199f6:	50 3e       	cpi	r21, 0xE0	; 224
   199f8:	68 f1       	brcs	.+90     	; 0x19a54 <__addsf3x+0x98>
   199fa:	1a 16       	cp	r1, r26
   199fc:	f0 40       	sbci	r31, 0x00	; 0
   199fe:	a2 2f       	mov	r26, r18
   19a00:	23 2f       	mov	r18, r19
   19a02:	34 2f       	mov	r19, r20
   19a04:	44 27       	eor	r20, r20
   19a06:	58 5f       	subi	r21, 0xF8	; 248
   19a08:	f3 cf       	rjmp	.-26     	; 0x199f0 <__addsf3x+0x34>
   19a0a:	46 95       	lsr	r20
   19a0c:	37 95       	ror	r19
   19a0e:	27 95       	ror	r18
   19a10:	a7 95       	ror	r26
   19a12:	f0 40       	sbci	r31, 0x00	; 0
   19a14:	53 95       	inc	r21
   19a16:	c9 f7       	brne	.-14     	; 0x19a0a <__addsf3x+0x4e>
   19a18:	7e f4       	brtc	.+30     	; 0x19a38 <__addsf3x+0x7c>
   19a1a:	1f 16       	cp	r1, r31
   19a1c:	ba 0b       	sbc	r27, r26
   19a1e:	62 0b       	sbc	r22, r18
   19a20:	73 0b       	sbc	r23, r19
   19a22:	84 0b       	sbc	r24, r20
   19a24:	ba f0       	brmi	.+46     	; 0x19a54 <__addsf3x+0x98>
   19a26:	91 50       	subi	r25, 0x01	; 1
   19a28:	a1 f0       	breq	.+40     	; 0x19a52 <__addsf3x+0x96>
   19a2a:	ff 0f       	add	r31, r31
   19a2c:	bb 1f       	adc	r27, r27
   19a2e:	66 1f       	adc	r22, r22
   19a30:	77 1f       	adc	r23, r23
   19a32:	88 1f       	adc	r24, r24
   19a34:	c2 f7       	brpl	.-16     	; 0x19a26 <__addsf3x+0x6a>
   19a36:	0e c0       	rjmp	.+28     	; 0x19a54 <__addsf3x+0x98>
   19a38:	ba 0f       	add	r27, r26
   19a3a:	62 1f       	adc	r22, r18
   19a3c:	73 1f       	adc	r23, r19
   19a3e:	84 1f       	adc	r24, r20
   19a40:	48 f4       	brcc	.+18     	; 0x19a54 <__addsf3x+0x98>
   19a42:	87 95       	ror	r24
   19a44:	77 95       	ror	r23
   19a46:	67 95       	ror	r22
   19a48:	b7 95       	ror	r27
   19a4a:	f7 95       	ror	r31
   19a4c:	9e 3f       	cpi	r25, 0xFE	; 254
   19a4e:	08 f0       	brcs	.+2      	; 0x19a52 <__addsf3x+0x96>
   19a50:	b3 cf       	rjmp	.-154    	; 0x199b8 <__addsf3+0x1e>
   19a52:	93 95       	inc	r25
   19a54:	88 0f       	add	r24, r24
   19a56:	08 f0       	brcs	.+2      	; 0x19a5a <__addsf3x+0x9e>
   19a58:	99 27       	eor	r25, r25
   19a5a:	ee 0f       	add	r30, r30
   19a5c:	97 95       	ror	r25
   19a5e:	87 95       	ror	r24
   19a60:	08 95       	ret

00019a62 <__cmpsf2>:
   19a62:	d4 d0       	rcall	.+424    	; 0x19c0c <__fp_cmp>
   19a64:	08 f4       	brcc	.+2      	; 0x19a68 <__cmpsf2+0x6>
   19a66:	81 e0       	ldi	r24, 0x01	; 1
   19a68:	08 95       	ret

00019a6a <__divsf3>:
   19a6a:	0c d0       	rcall	.+24     	; 0x19a84 <__divsf3x>
   19a6c:	0a c1       	rjmp	.+532    	; 0x19c82 <__fp_round>
   19a6e:	02 d1       	rcall	.+516    	; 0x19c74 <__fp_pscB>
   19a70:	40 f0       	brcs	.+16     	; 0x19a82 <__divsf3+0x18>
   19a72:	f9 d0       	rcall	.+498    	; 0x19c66 <__fp_pscA>
   19a74:	30 f0       	brcs	.+12     	; 0x19a82 <__divsf3+0x18>
   19a76:	21 f4       	brne	.+8      	; 0x19a80 <__divsf3+0x16>
   19a78:	5f 3f       	cpi	r21, 0xFF	; 255
   19a7a:	19 f0       	breq	.+6      	; 0x19a82 <__divsf3+0x18>
   19a7c:	eb c0       	rjmp	.+470    	; 0x19c54 <__fp_inf>
   19a7e:	51 11       	cpse	r21, r1
   19a80:	34 c1       	rjmp	.+616    	; 0x19cea <__fp_szero>
   19a82:	ee c0       	rjmp	.+476    	; 0x19c60 <__fp_nan>

00019a84 <__divsf3x>:
   19a84:	0f d1       	rcall	.+542    	; 0x19ca4 <__fp_split3>
   19a86:	98 f3       	brcs	.-26     	; 0x19a6e <__divsf3+0x4>

00019a88 <__divsf3_pse>:
   19a88:	99 23       	and	r25, r25
   19a8a:	c9 f3       	breq	.-14     	; 0x19a7e <__divsf3+0x14>
   19a8c:	55 23       	and	r21, r21
   19a8e:	b1 f3       	breq	.-20     	; 0x19a7c <__divsf3+0x12>
   19a90:	95 1b       	sub	r25, r21
   19a92:	55 0b       	sbc	r21, r21
   19a94:	bb 27       	eor	r27, r27
   19a96:	aa 27       	eor	r26, r26
   19a98:	62 17       	cp	r22, r18
   19a9a:	73 07       	cpc	r23, r19
   19a9c:	84 07       	cpc	r24, r20
   19a9e:	38 f0       	brcs	.+14     	; 0x19aae <__divsf3_pse+0x26>
   19aa0:	9f 5f       	subi	r25, 0xFF	; 255
   19aa2:	5f 4f       	sbci	r21, 0xFF	; 255
   19aa4:	22 0f       	add	r18, r18
   19aa6:	33 1f       	adc	r19, r19
   19aa8:	44 1f       	adc	r20, r20
   19aaa:	aa 1f       	adc	r26, r26
   19aac:	a9 f3       	breq	.-22     	; 0x19a98 <__divsf3_pse+0x10>
   19aae:	33 d0       	rcall	.+102    	; 0x19b16 <__divsf3_pse+0x8e>
   19ab0:	0e 2e       	mov	r0, r30
   19ab2:	3a f0       	brmi	.+14     	; 0x19ac2 <__divsf3_pse+0x3a>
   19ab4:	e0 e8       	ldi	r30, 0x80	; 128
   19ab6:	30 d0       	rcall	.+96     	; 0x19b18 <__divsf3_pse+0x90>
   19ab8:	91 50       	subi	r25, 0x01	; 1
   19aba:	50 40       	sbci	r21, 0x00	; 0
   19abc:	e6 95       	lsr	r30
   19abe:	00 1c       	adc	r0, r0
   19ac0:	ca f7       	brpl	.-14     	; 0x19ab4 <__divsf3_pse+0x2c>
   19ac2:	29 d0       	rcall	.+82     	; 0x19b16 <__divsf3_pse+0x8e>
   19ac4:	fe 2f       	mov	r31, r30
   19ac6:	27 d0       	rcall	.+78     	; 0x19b16 <__divsf3_pse+0x8e>
   19ac8:	66 0f       	add	r22, r22
   19aca:	77 1f       	adc	r23, r23
   19acc:	88 1f       	adc	r24, r24
   19ace:	bb 1f       	adc	r27, r27
   19ad0:	26 17       	cp	r18, r22
   19ad2:	37 07       	cpc	r19, r23
   19ad4:	48 07       	cpc	r20, r24
   19ad6:	ab 07       	cpc	r26, r27
   19ad8:	b0 e8       	ldi	r27, 0x80	; 128
   19ada:	09 f0       	breq	.+2      	; 0x19ade <__divsf3_pse+0x56>
   19adc:	bb 0b       	sbc	r27, r27
   19ade:	80 2d       	mov	r24, r0
   19ae0:	bf 01       	movw	r22, r30
   19ae2:	ff 27       	eor	r31, r31
   19ae4:	93 58       	subi	r25, 0x83	; 131
   19ae6:	5f 4f       	sbci	r21, 0xFF	; 255
   19ae8:	2a f0       	brmi	.+10     	; 0x19af4 <__divsf3_pse+0x6c>
   19aea:	9e 3f       	cpi	r25, 0xFE	; 254
   19aec:	51 05       	cpc	r21, r1
   19aee:	68 f0       	brcs	.+26     	; 0x19b0a <__divsf3_pse+0x82>
   19af0:	b1 c0       	rjmp	.+354    	; 0x19c54 <__fp_inf>
   19af2:	fb c0       	rjmp	.+502    	; 0x19cea <__fp_szero>
   19af4:	5f 3f       	cpi	r21, 0xFF	; 255
   19af6:	ec f3       	brlt	.-6      	; 0x19af2 <__divsf3_pse+0x6a>
   19af8:	98 3e       	cpi	r25, 0xE8	; 232
   19afa:	dc f3       	brlt	.-10     	; 0x19af2 <__divsf3_pse+0x6a>
   19afc:	86 95       	lsr	r24
   19afe:	77 95       	ror	r23
   19b00:	67 95       	ror	r22
   19b02:	b7 95       	ror	r27
   19b04:	f7 95       	ror	r31
   19b06:	9f 5f       	subi	r25, 0xFF	; 255
   19b08:	c9 f7       	brne	.-14     	; 0x19afc <__divsf3_pse+0x74>
   19b0a:	88 0f       	add	r24, r24
   19b0c:	91 1d       	adc	r25, r1
   19b0e:	96 95       	lsr	r25
   19b10:	87 95       	ror	r24
   19b12:	97 f9       	bld	r25, 7
   19b14:	08 95       	ret
   19b16:	e1 e0       	ldi	r30, 0x01	; 1
   19b18:	66 0f       	add	r22, r22
   19b1a:	77 1f       	adc	r23, r23
   19b1c:	88 1f       	adc	r24, r24
   19b1e:	bb 1f       	adc	r27, r27
   19b20:	62 17       	cp	r22, r18
   19b22:	73 07       	cpc	r23, r19
   19b24:	84 07       	cpc	r24, r20
   19b26:	ba 07       	cpc	r27, r26
   19b28:	20 f0       	brcs	.+8      	; 0x19b32 <__divsf3_pse+0xaa>
   19b2a:	62 1b       	sub	r22, r18
   19b2c:	73 0b       	sbc	r23, r19
   19b2e:	84 0b       	sbc	r24, r20
   19b30:	ba 0b       	sbc	r27, r26
   19b32:	ee 1f       	adc	r30, r30
   19b34:	88 f7       	brcc	.-30     	; 0x19b18 <__divsf3_pse+0x90>
   19b36:	e0 95       	com	r30
   19b38:	08 95       	ret

00019b3a <__fixunssfsi>:
   19b3a:	bc d0       	rcall	.+376    	; 0x19cb4 <__fp_splitA>
   19b3c:	88 f0       	brcs	.+34     	; 0x19b60 <__fixunssfsi+0x26>
   19b3e:	9f 57       	subi	r25, 0x7F	; 127
   19b40:	90 f0       	brcs	.+36     	; 0x19b66 <__fixunssfsi+0x2c>
   19b42:	b9 2f       	mov	r27, r25
   19b44:	99 27       	eor	r25, r25
   19b46:	b7 51       	subi	r27, 0x17	; 23
   19b48:	a0 f0       	brcs	.+40     	; 0x19b72 <__fixunssfsi+0x38>
   19b4a:	d1 f0       	breq	.+52     	; 0x19b80 <__fixunssfsi+0x46>
   19b4c:	66 0f       	add	r22, r22
   19b4e:	77 1f       	adc	r23, r23
   19b50:	88 1f       	adc	r24, r24
   19b52:	99 1f       	adc	r25, r25
   19b54:	1a f0       	brmi	.+6      	; 0x19b5c <__fixunssfsi+0x22>
   19b56:	ba 95       	dec	r27
   19b58:	c9 f7       	brne	.-14     	; 0x19b4c <__fixunssfsi+0x12>
   19b5a:	12 c0       	rjmp	.+36     	; 0x19b80 <__fixunssfsi+0x46>
   19b5c:	b1 30       	cpi	r27, 0x01	; 1
   19b5e:	81 f0       	breq	.+32     	; 0x19b80 <__fixunssfsi+0x46>
   19b60:	c3 d0       	rcall	.+390    	; 0x19ce8 <__fp_zero>
   19b62:	b1 e0       	ldi	r27, 0x01	; 1
   19b64:	08 95       	ret
   19b66:	c0 c0       	rjmp	.+384    	; 0x19ce8 <__fp_zero>
   19b68:	67 2f       	mov	r22, r23
   19b6a:	78 2f       	mov	r23, r24
   19b6c:	88 27       	eor	r24, r24
   19b6e:	b8 5f       	subi	r27, 0xF8	; 248
   19b70:	39 f0       	breq	.+14     	; 0x19b80 <__fixunssfsi+0x46>
   19b72:	b9 3f       	cpi	r27, 0xF9	; 249
   19b74:	cc f3       	brlt	.-14     	; 0x19b68 <__fixunssfsi+0x2e>
   19b76:	86 95       	lsr	r24
   19b78:	77 95       	ror	r23
   19b7a:	67 95       	ror	r22
   19b7c:	b3 95       	inc	r27
   19b7e:	d9 f7       	brne	.-10     	; 0x19b76 <__fixunssfsi+0x3c>
   19b80:	3e f4       	brtc	.+14     	; 0x19b90 <__fixunssfsi+0x56>
   19b82:	90 95       	com	r25
   19b84:	80 95       	com	r24
   19b86:	70 95       	com	r23
   19b88:	61 95       	neg	r22
   19b8a:	7f 4f       	sbci	r23, 0xFF	; 255
   19b8c:	8f 4f       	sbci	r24, 0xFF	; 255
   19b8e:	9f 4f       	sbci	r25, 0xFF	; 255
   19b90:	08 95       	ret

00019b92 <__floatunsisf>:
   19b92:	e8 94       	clt
   19b94:	09 c0       	rjmp	.+18     	; 0x19ba8 <__floatsisf+0x12>

00019b96 <__floatsisf>:
   19b96:	97 fb       	bst	r25, 7
   19b98:	3e f4       	brtc	.+14     	; 0x19ba8 <__floatsisf+0x12>
   19b9a:	90 95       	com	r25
   19b9c:	80 95       	com	r24
   19b9e:	70 95       	com	r23
   19ba0:	61 95       	neg	r22
   19ba2:	7f 4f       	sbci	r23, 0xFF	; 255
   19ba4:	8f 4f       	sbci	r24, 0xFF	; 255
   19ba6:	9f 4f       	sbci	r25, 0xFF	; 255
   19ba8:	99 23       	and	r25, r25
   19baa:	a9 f0       	breq	.+42     	; 0x19bd6 <__floatsisf+0x40>
   19bac:	f9 2f       	mov	r31, r25
   19bae:	96 e9       	ldi	r25, 0x96	; 150
   19bb0:	bb 27       	eor	r27, r27
   19bb2:	93 95       	inc	r25
   19bb4:	f6 95       	lsr	r31
   19bb6:	87 95       	ror	r24
   19bb8:	77 95       	ror	r23
   19bba:	67 95       	ror	r22
   19bbc:	b7 95       	ror	r27
   19bbe:	f1 11       	cpse	r31, r1
   19bc0:	f8 cf       	rjmp	.-16     	; 0x19bb2 <__floatsisf+0x1c>
   19bc2:	fa f4       	brpl	.+62     	; 0x19c02 <__floatsisf+0x6c>
   19bc4:	bb 0f       	add	r27, r27
   19bc6:	11 f4       	brne	.+4      	; 0x19bcc <__floatsisf+0x36>
   19bc8:	60 ff       	sbrs	r22, 0
   19bca:	1b c0       	rjmp	.+54     	; 0x19c02 <__floatsisf+0x6c>
   19bcc:	6f 5f       	subi	r22, 0xFF	; 255
   19bce:	7f 4f       	sbci	r23, 0xFF	; 255
   19bd0:	8f 4f       	sbci	r24, 0xFF	; 255
   19bd2:	9f 4f       	sbci	r25, 0xFF	; 255
   19bd4:	16 c0       	rjmp	.+44     	; 0x19c02 <__floatsisf+0x6c>
   19bd6:	88 23       	and	r24, r24
   19bd8:	11 f0       	breq	.+4      	; 0x19bde <__floatsisf+0x48>
   19bda:	96 e9       	ldi	r25, 0x96	; 150
   19bdc:	11 c0       	rjmp	.+34     	; 0x19c00 <__floatsisf+0x6a>
   19bde:	77 23       	and	r23, r23
   19be0:	21 f0       	breq	.+8      	; 0x19bea <__floatsisf+0x54>
   19be2:	9e e8       	ldi	r25, 0x8E	; 142
   19be4:	87 2f       	mov	r24, r23
   19be6:	76 2f       	mov	r23, r22
   19be8:	05 c0       	rjmp	.+10     	; 0x19bf4 <__floatsisf+0x5e>
   19bea:	66 23       	and	r22, r22
   19bec:	71 f0       	breq	.+28     	; 0x19c0a <__floatsisf+0x74>
   19bee:	96 e8       	ldi	r25, 0x86	; 134
   19bf0:	86 2f       	mov	r24, r22
   19bf2:	70 e0       	ldi	r23, 0x00	; 0
   19bf4:	60 e0       	ldi	r22, 0x00	; 0
   19bf6:	2a f0       	brmi	.+10     	; 0x19c02 <__floatsisf+0x6c>
   19bf8:	9a 95       	dec	r25
   19bfa:	66 0f       	add	r22, r22
   19bfc:	77 1f       	adc	r23, r23
   19bfe:	88 1f       	adc	r24, r24
   19c00:	da f7       	brpl	.-10     	; 0x19bf8 <__floatsisf+0x62>
   19c02:	88 0f       	add	r24, r24
   19c04:	96 95       	lsr	r25
   19c06:	87 95       	ror	r24
   19c08:	97 f9       	bld	r25, 7
   19c0a:	08 95       	ret

00019c0c <__fp_cmp>:
   19c0c:	99 0f       	add	r25, r25
   19c0e:	00 08       	sbc	r0, r0
   19c10:	55 0f       	add	r21, r21
   19c12:	aa 0b       	sbc	r26, r26
   19c14:	e0 e8       	ldi	r30, 0x80	; 128
   19c16:	fe ef       	ldi	r31, 0xFE	; 254
   19c18:	16 16       	cp	r1, r22
   19c1a:	17 06       	cpc	r1, r23
   19c1c:	e8 07       	cpc	r30, r24
   19c1e:	f9 07       	cpc	r31, r25
   19c20:	c0 f0       	brcs	.+48     	; 0x19c52 <__fp_cmp+0x46>
   19c22:	12 16       	cp	r1, r18
   19c24:	13 06       	cpc	r1, r19
   19c26:	e4 07       	cpc	r30, r20
   19c28:	f5 07       	cpc	r31, r21
   19c2a:	98 f0       	brcs	.+38     	; 0x19c52 <__fp_cmp+0x46>
   19c2c:	62 1b       	sub	r22, r18
   19c2e:	73 0b       	sbc	r23, r19
   19c30:	84 0b       	sbc	r24, r20
   19c32:	95 0b       	sbc	r25, r21
   19c34:	39 f4       	brne	.+14     	; 0x19c44 <__fp_cmp+0x38>
   19c36:	0a 26       	eor	r0, r26
   19c38:	61 f0       	breq	.+24     	; 0x19c52 <__fp_cmp+0x46>
   19c3a:	23 2b       	or	r18, r19
   19c3c:	24 2b       	or	r18, r20
   19c3e:	25 2b       	or	r18, r21
   19c40:	21 f4       	brne	.+8      	; 0x19c4a <__fp_cmp+0x3e>
   19c42:	08 95       	ret
   19c44:	0a 26       	eor	r0, r26
   19c46:	09 f4       	brne	.+2      	; 0x19c4a <__fp_cmp+0x3e>
   19c48:	a1 40       	sbci	r26, 0x01	; 1
   19c4a:	a6 95       	lsr	r26
   19c4c:	8f ef       	ldi	r24, 0xFF	; 255
   19c4e:	81 1d       	adc	r24, r1
   19c50:	81 1d       	adc	r24, r1
   19c52:	08 95       	ret

00019c54 <__fp_inf>:
   19c54:	97 f9       	bld	r25, 7
   19c56:	9f 67       	ori	r25, 0x7F	; 127
   19c58:	80 e8       	ldi	r24, 0x80	; 128
   19c5a:	70 e0       	ldi	r23, 0x00	; 0
   19c5c:	60 e0       	ldi	r22, 0x00	; 0
   19c5e:	08 95       	ret

00019c60 <__fp_nan>:
   19c60:	9f ef       	ldi	r25, 0xFF	; 255
   19c62:	80 ec       	ldi	r24, 0xC0	; 192
   19c64:	08 95       	ret

00019c66 <__fp_pscA>:
   19c66:	00 24       	eor	r0, r0
   19c68:	0a 94       	dec	r0
   19c6a:	16 16       	cp	r1, r22
   19c6c:	17 06       	cpc	r1, r23
   19c6e:	18 06       	cpc	r1, r24
   19c70:	09 06       	cpc	r0, r25
   19c72:	08 95       	ret

00019c74 <__fp_pscB>:
   19c74:	00 24       	eor	r0, r0
   19c76:	0a 94       	dec	r0
   19c78:	12 16       	cp	r1, r18
   19c7a:	13 06       	cpc	r1, r19
   19c7c:	14 06       	cpc	r1, r20
   19c7e:	05 06       	cpc	r0, r21
   19c80:	08 95       	ret

00019c82 <__fp_round>:
   19c82:	09 2e       	mov	r0, r25
   19c84:	03 94       	inc	r0
   19c86:	00 0c       	add	r0, r0
   19c88:	11 f4       	brne	.+4      	; 0x19c8e <__fp_round+0xc>
   19c8a:	88 23       	and	r24, r24
   19c8c:	52 f0       	brmi	.+20     	; 0x19ca2 <__fp_round+0x20>
   19c8e:	bb 0f       	add	r27, r27
   19c90:	40 f4       	brcc	.+16     	; 0x19ca2 <__fp_round+0x20>
   19c92:	bf 2b       	or	r27, r31
   19c94:	11 f4       	brne	.+4      	; 0x19c9a <__fp_round+0x18>
   19c96:	60 ff       	sbrs	r22, 0
   19c98:	04 c0       	rjmp	.+8      	; 0x19ca2 <__fp_round+0x20>
   19c9a:	6f 5f       	subi	r22, 0xFF	; 255
   19c9c:	7f 4f       	sbci	r23, 0xFF	; 255
   19c9e:	8f 4f       	sbci	r24, 0xFF	; 255
   19ca0:	9f 4f       	sbci	r25, 0xFF	; 255
   19ca2:	08 95       	ret

00019ca4 <__fp_split3>:
   19ca4:	57 fd       	sbrc	r21, 7
   19ca6:	90 58       	subi	r25, 0x80	; 128
   19ca8:	44 0f       	add	r20, r20
   19caa:	55 1f       	adc	r21, r21
   19cac:	59 f0       	breq	.+22     	; 0x19cc4 <__fp_splitA+0x10>
   19cae:	5f 3f       	cpi	r21, 0xFF	; 255
   19cb0:	71 f0       	breq	.+28     	; 0x19cce <__fp_splitA+0x1a>
   19cb2:	47 95       	ror	r20

00019cb4 <__fp_splitA>:
   19cb4:	88 0f       	add	r24, r24
   19cb6:	97 fb       	bst	r25, 7
   19cb8:	99 1f       	adc	r25, r25
   19cba:	61 f0       	breq	.+24     	; 0x19cd4 <__fp_splitA+0x20>
   19cbc:	9f 3f       	cpi	r25, 0xFF	; 255
   19cbe:	79 f0       	breq	.+30     	; 0x19cde <__fp_splitA+0x2a>
   19cc0:	87 95       	ror	r24
   19cc2:	08 95       	ret
   19cc4:	12 16       	cp	r1, r18
   19cc6:	13 06       	cpc	r1, r19
   19cc8:	14 06       	cpc	r1, r20
   19cca:	55 1f       	adc	r21, r21
   19ccc:	f2 cf       	rjmp	.-28     	; 0x19cb2 <__fp_split3+0xe>
   19cce:	46 95       	lsr	r20
   19cd0:	f1 df       	rcall	.-30     	; 0x19cb4 <__fp_splitA>
   19cd2:	08 c0       	rjmp	.+16     	; 0x19ce4 <__fp_splitA+0x30>
   19cd4:	16 16       	cp	r1, r22
   19cd6:	17 06       	cpc	r1, r23
   19cd8:	18 06       	cpc	r1, r24
   19cda:	99 1f       	adc	r25, r25
   19cdc:	f1 cf       	rjmp	.-30     	; 0x19cc0 <__fp_splitA+0xc>
   19cde:	86 95       	lsr	r24
   19ce0:	71 05       	cpc	r23, r1
   19ce2:	61 05       	cpc	r22, r1
   19ce4:	08 94       	sec
   19ce6:	08 95       	ret

00019ce8 <__fp_zero>:
   19ce8:	e8 94       	clt

00019cea <__fp_szero>:
   19cea:	bb 27       	eor	r27, r27
   19cec:	66 27       	eor	r22, r22
   19cee:	77 27       	eor	r23, r23
   19cf0:	cb 01       	movw	r24, r22
   19cf2:	97 f9       	bld	r25, 7
   19cf4:	08 95       	ret

00019cf6 <__gesf2>:
   19cf6:	8a df       	rcall	.-236    	; 0x19c0c <__fp_cmp>
   19cf8:	08 f4       	brcc	.+2      	; 0x19cfc <__gesf2+0x6>
   19cfa:	8f ef       	ldi	r24, 0xFF	; 255
   19cfc:	08 95       	ret

00019cfe <__mulsf3>:
   19cfe:	0b d0       	rcall	.+22     	; 0x19d16 <__mulsf3x>
   19d00:	c0 cf       	rjmp	.-128    	; 0x19c82 <__fp_round>
   19d02:	b1 df       	rcall	.-158    	; 0x19c66 <__fp_pscA>
   19d04:	28 f0       	brcs	.+10     	; 0x19d10 <__mulsf3+0x12>
   19d06:	b6 df       	rcall	.-148    	; 0x19c74 <__fp_pscB>
   19d08:	18 f0       	brcs	.+6      	; 0x19d10 <__mulsf3+0x12>
   19d0a:	95 23       	and	r25, r21
   19d0c:	09 f0       	breq	.+2      	; 0x19d10 <__mulsf3+0x12>
   19d0e:	a2 cf       	rjmp	.-188    	; 0x19c54 <__fp_inf>
   19d10:	a7 cf       	rjmp	.-178    	; 0x19c60 <__fp_nan>
   19d12:	11 24       	eor	r1, r1
   19d14:	ea cf       	rjmp	.-44     	; 0x19cea <__fp_szero>

00019d16 <__mulsf3x>:
   19d16:	c6 df       	rcall	.-116    	; 0x19ca4 <__fp_split3>
   19d18:	a0 f3       	brcs	.-24     	; 0x19d02 <__mulsf3+0x4>

00019d1a <__mulsf3_pse>:
   19d1a:	95 9f       	mul	r25, r21
   19d1c:	d1 f3       	breq	.-12     	; 0x19d12 <__mulsf3+0x14>
   19d1e:	95 0f       	add	r25, r21
   19d20:	50 e0       	ldi	r21, 0x00	; 0
   19d22:	55 1f       	adc	r21, r21
   19d24:	62 9f       	mul	r22, r18
   19d26:	f0 01       	movw	r30, r0
   19d28:	72 9f       	mul	r23, r18
   19d2a:	bb 27       	eor	r27, r27
   19d2c:	f0 0d       	add	r31, r0
   19d2e:	b1 1d       	adc	r27, r1
   19d30:	63 9f       	mul	r22, r19
   19d32:	aa 27       	eor	r26, r26
   19d34:	f0 0d       	add	r31, r0
   19d36:	b1 1d       	adc	r27, r1
   19d38:	aa 1f       	adc	r26, r26
   19d3a:	64 9f       	mul	r22, r20
   19d3c:	66 27       	eor	r22, r22
   19d3e:	b0 0d       	add	r27, r0
   19d40:	a1 1d       	adc	r26, r1
   19d42:	66 1f       	adc	r22, r22
   19d44:	82 9f       	mul	r24, r18
   19d46:	22 27       	eor	r18, r18
   19d48:	b0 0d       	add	r27, r0
   19d4a:	a1 1d       	adc	r26, r1
   19d4c:	62 1f       	adc	r22, r18
   19d4e:	73 9f       	mul	r23, r19
   19d50:	b0 0d       	add	r27, r0
   19d52:	a1 1d       	adc	r26, r1
   19d54:	62 1f       	adc	r22, r18
   19d56:	83 9f       	mul	r24, r19
   19d58:	a0 0d       	add	r26, r0
   19d5a:	61 1d       	adc	r22, r1
   19d5c:	22 1f       	adc	r18, r18
   19d5e:	74 9f       	mul	r23, r20
   19d60:	33 27       	eor	r19, r19
   19d62:	a0 0d       	add	r26, r0
   19d64:	61 1d       	adc	r22, r1
   19d66:	23 1f       	adc	r18, r19
   19d68:	84 9f       	mul	r24, r20
   19d6a:	60 0d       	add	r22, r0
   19d6c:	21 1d       	adc	r18, r1
   19d6e:	82 2f       	mov	r24, r18
   19d70:	76 2f       	mov	r23, r22
   19d72:	6a 2f       	mov	r22, r26
   19d74:	11 24       	eor	r1, r1
   19d76:	9f 57       	subi	r25, 0x7F	; 127
   19d78:	50 40       	sbci	r21, 0x00	; 0
   19d7a:	8a f0       	brmi	.+34     	; 0x19d9e <__mulsf3_pse+0x84>
   19d7c:	e1 f0       	breq	.+56     	; 0x19db6 <__mulsf3_pse+0x9c>
   19d7e:	88 23       	and	r24, r24
   19d80:	4a f0       	brmi	.+18     	; 0x19d94 <__mulsf3_pse+0x7a>
   19d82:	ee 0f       	add	r30, r30
   19d84:	ff 1f       	adc	r31, r31
   19d86:	bb 1f       	adc	r27, r27
   19d88:	66 1f       	adc	r22, r22
   19d8a:	77 1f       	adc	r23, r23
   19d8c:	88 1f       	adc	r24, r24
   19d8e:	91 50       	subi	r25, 0x01	; 1
   19d90:	50 40       	sbci	r21, 0x00	; 0
   19d92:	a9 f7       	brne	.-22     	; 0x19d7e <__mulsf3_pse+0x64>
   19d94:	9e 3f       	cpi	r25, 0xFE	; 254
   19d96:	51 05       	cpc	r21, r1
   19d98:	70 f0       	brcs	.+28     	; 0x19db6 <__mulsf3_pse+0x9c>
   19d9a:	5c cf       	rjmp	.-328    	; 0x19c54 <__fp_inf>
   19d9c:	a6 cf       	rjmp	.-180    	; 0x19cea <__fp_szero>
   19d9e:	5f 3f       	cpi	r21, 0xFF	; 255
   19da0:	ec f3       	brlt	.-6      	; 0x19d9c <__mulsf3_pse+0x82>
   19da2:	98 3e       	cpi	r25, 0xE8	; 232
   19da4:	dc f3       	brlt	.-10     	; 0x19d9c <__mulsf3_pse+0x82>
   19da6:	86 95       	lsr	r24
   19da8:	77 95       	ror	r23
   19daa:	67 95       	ror	r22
   19dac:	b7 95       	ror	r27
   19dae:	f7 95       	ror	r31
   19db0:	e7 95       	ror	r30
   19db2:	9f 5f       	subi	r25, 0xFF	; 255
   19db4:	c1 f7       	brne	.-16     	; 0x19da6 <__mulsf3_pse+0x8c>
   19db6:	fe 2b       	or	r31, r30
   19db8:	88 0f       	add	r24, r24
   19dba:	91 1d       	adc	r25, r1
   19dbc:	96 95       	lsr	r25
   19dbe:	87 95       	ror	r24
   19dc0:	97 f9       	bld	r25, 7
   19dc2:	08 95       	ret

00019dc4 <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   19dc4:	fc 01       	movw	r30, r24
   19dc6:	91 8d       	ldd	r25, Z+25	; 0x19
   19dc8:	22 8d       	ldd	r18, Z+26	; 0x1a
   19dca:	89 2f       	mov	r24, r25
   19dcc:	90 e0       	ldi	r25, 0x00	; 0
   19dce:	80 53       	subi	r24, 0x30	; 48
   19dd0:	9f 4f       	sbci	r25, 0xFF	; 255
   19dd2:	82 1b       	sub	r24, r18
   19dd4:	91 09       	sbc	r25, r1
   19dd6:	8f 70       	andi	r24, 0x0F	; 15
   19dd8:	99 27       	eor	r25, r25
   19dda:	2d e0       	ldi	r18, 0x0D	; 13
   19ddc:	ac 01       	movw	r20, r24
   19dde:	24 9f       	mul	r18, r20
   19de0:	c0 01       	movw	r24, r0
   19de2:	25 9f       	mul	r18, r21
   19de4:	90 0d       	add	r25, r0
   19de6:	11 24       	eor	r1, r1
   19de8:	08 95       	ret

00019dea <_ZN14HardwareSerial4peekEv>:
   19dea:	fc 01       	movw	r30, r24
   19dec:	91 8d       	ldd	r25, Z+25	; 0x19
   19dee:	82 8d       	ldd	r24, Z+26	; 0x1a
   19df0:	98 17       	cp	r25, r24
   19df2:	31 f0       	breq	.+12     	; 0x19e00 <_ZN14HardwareSerial4peekEv+0x16>
   19df4:	82 8d       	ldd	r24, Z+26	; 0x1a
   19df6:	e8 0f       	add	r30, r24
   19df8:	f1 1d       	adc	r31, r1
   19dfa:	85 8d       	ldd	r24, Z+29	; 0x1d
   19dfc:	90 e0       	ldi	r25, 0x00	; 0
   19dfe:	08 95       	ret
   19e00:	8f ef       	ldi	r24, 0xFF	; 255
   19e02:	9f ef       	ldi	r25, 0xFF	; 255
   19e04:	08 95       	ret

00019e06 <_ZN14HardwareSerial4readEv>:
   19e06:	fc 01       	movw	r30, r24
   19e08:	91 8d       	ldd	r25, Z+25	; 0x19
   19e0a:	82 8d       	ldd	r24, Z+26	; 0x1a
   19e0c:	98 17       	cp	r25, r24
   19e0e:	81 f0       	breq	.+32     	; 0x19e30 <_ZN14HardwareSerial4readEv+0x2a>
   19e10:	82 8d       	ldd	r24, Z+26	; 0x1a
   19e12:	df 01       	movw	r26, r30
   19e14:	a8 0f       	add	r26, r24
   19e16:	b1 1d       	adc	r27, r1
   19e18:	5d 96       	adiw	r26, 0x1d	; 29
   19e1a:	8c 91       	ld	r24, X
   19e1c:	92 8d       	ldd	r25, Z+26	; 0x1a
   19e1e:	9f 5f       	subi	r25, 0xFF	; 255
   19e20:	9f 70       	andi	r25, 0x0F	; 15
   19e22:	2d e0       	ldi	r18, 0x0D	; 13
   19e24:	92 9f       	mul	r25, r18
   19e26:	90 2d       	mov	r25, r0
   19e28:	11 24       	eor	r1, r1
   19e2a:	92 8f       	std	Z+26, r25	; 0x1a
   19e2c:	90 e0       	ldi	r25, 0x00	; 0
   19e2e:	08 95       	ret
   19e30:	8f ef       	ldi	r24, 0xFF	; 255
   19e32:	9f ef       	ldi	r25, 0xFF	; 255
   19e34:	08 95       	ret

00019e36 <_ZN14HardwareSerial17availableForWriteEv>:
   19e36:	fc 01       	movw	r30, r24
   19e38:	53 8d       	ldd	r21, Z+27	; 0x1b
   19e3a:	44 8d       	ldd	r20, Z+28	; 0x1c
   19e3c:	25 2f       	mov	r18, r21
   19e3e:	30 e0       	ldi	r19, 0x00	; 0
   19e40:	84 2f       	mov	r24, r20
   19e42:	90 e0       	ldi	r25, 0x00	; 0
   19e44:	82 1b       	sub	r24, r18
   19e46:	93 0b       	sbc	r25, r19
   19e48:	54 17       	cp	r21, r20
   19e4a:	18 f0       	brcs	.+6      	; 0x19e52 <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   19e4c:	81 53       	subi	r24, 0x31	; 49
   19e4e:	9f 4f       	sbci	r25, 0xFF	; 255
   19e50:	08 95       	ret
   19e52:	01 97       	sbiw	r24, 0x01	; 1
   19e54:	08 95       	ret

00019e56 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   19e56:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   19e58:	84 8d       	ldd	r24, Z+28	; 0x1c
   19e5a:	df 01       	movw	r26, r30
   19e5c:	a8 0f       	add	r26, r24
   19e5e:	b1 1d       	adc	r27, r1
   19e60:	a3 51       	subi	r26, 0x13	; 19
   19e62:	bf 4f       	sbci	r27, 0xFF	; 255
   19e64:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   19e66:	84 8d       	ldd	r24, Z+28	; 0x1c
   19e68:	90 e0       	ldi	r25, 0x00	; 0
   19e6a:	01 96       	adiw	r24, 0x01	; 1
   19e6c:	8f 70       	andi	r24, 0x0F	; 15
   19e6e:	99 27       	eor	r25, r25
   19e70:	9d e0       	ldi	r25, 0x0D	; 13
   19e72:	89 9f       	mul	r24, r25
   19e74:	80 2d       	mov	r24, r0
   19e76:	11 24       	eor	r1, r1
   19e78:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   19e7a:	a6 89       	ldd	r26, Z+22	; 0x16
   19e7c:	b7 89       	ldd	r27, Z+23	; 0x17
   19e7e:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   19e80:	a0 89       	ldd	r26, Z+16	; 0x10
   19e82:	b1 89       	ldd	r27, Z+17	; 0x11
   19e84:	8c 91       	ld	r24, X
   19e86:	83 70       	andi	r24, 0x03	; 3
   19e88:	80 64       	ori	r24, 0x40	; 64
   19e8a:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   19e8c:	93 8d       	ldd	r25, Z+27	; 0x1b
   19e8e:	84 8d       	ldd	r24, Z+28	; 0x1c
   19e90:	98 13       	cpse	r25, r24
   19e92:	06 c0       	rjmp	.+12     	; 0x19ea0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   19e94:	02 88       	ldd	r0, Z+18	; 0x12
   19e96:	f3 89       	ldd	r31, Z+19	; 0x13
   19e98:	e0 2d       	mov	r30, r0
   19e9a:	80 81       	ld	r24, Z
   19e9c:	8f 7d       	andi	r24, 0xDF	; 223
   19e9e:	80 83       	st	Z, r24
   19ea0:	08 95       	ret

00019ea2 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   19ea2:	0f 93       	push	r16
   19ea4:	1f 93       	push	r17
   19ea6:	cf 93       	push	r28
   19ea8:	df 93       	push	r29
   19eaa:	ec 01       	movw	r28, r24
  _written = true;
   19eac:	81 e0       	ldi	r24, 0x01	; 1
   19eae:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   19eb0:	9b 8d       	ldd	r25, Y+27	; 0x1b
   19eb2:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19eb4:	98 13       	cpse	r25, r24
   19eb6:	05 c0       	rjmp	.+10     	; 0x19ec2 <_ZN14HardwareSerial5writeEh+0x20>
   19eb8:	e8 89       	ldd	r30, Y+16	; 0x10
   19eba:	f9 89       	ldd	r31, Y+17	; 0x11
   19ebc:	80 81       	ld	r24, Z
   19ebe:	85 fd       	sbrc	r24, 5
   19ec0:	27 c0       	rjmp	.+78     	; 0x19f10 <_ZN14HardwareSerial5writeEh+0x6e>
   19ec2:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   19ec4:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19ec6:	90 e0       	ldi	r25, 0x00	; 0
   19ec8:	01 96       	adiw	r24, 0x01	; 1
   19eca:	8f 70       	andi	r24, 0x0F	; 15
   19ecc:	99 27       	eor	r25, r25
   19ece:	1d e0       	ldi	r17, 0x0D	; 13
   19ed0:	81 9f       	mul	r24, r17
   19ed2:	10 2d       	mov	r17, r0
   19ed4:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   19ed6:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19ed8:	18 13       	cpse	r17, r24
   19eda:	0b c0       	rjmp	.+22     	; 0x19ef2 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   19edc:	0f b6       	in	r0, 0x3f	; 63
   19ede:	07 fc       	sbrc	r0, 7
   19ee0:	fa cf       	rjmp	.-12     	; 0x19ed6 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   19ee2:	e8 89       	ldd	r30, Y+16	; 0x10
   19ee4:	f9 89       	ldd	r31, Y+17	; 0x11
   19ee6:	80 81       	ld	r24, Z
   19ee8:	85 ff       	sbrs	r24, 5
   19eea:	f5 cf       	rjmp	.-22     	; 0x19ed6 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   19eec:	ce 01       	movw	r24, r28
   19eee:	b3 df       	rcall	.-154    	; 0x19e56 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19ef0:	f2 cf       	rjmp	.-28     	; 0x19ed6 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   19ef2:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19ef4:	fe 01       	movw	r30, r28
   19ef6:	e8 0f       	add	r30, r24
   19ef8:	f1 1d       	adc	r31, r1
   19efa:	e3 51       	subi	r30, 0x13	; 19
   19efc:	ff 4f       	sbci	r31, 0xFF	; 255
   19efe:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   19f00:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   19f02:	f8 94       	cli
    _tx_buffer_head = i;
   19f04:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   19f06:	ea 89       	ldd	r30, Y+18	; 0x12
   19f08:	fb 89       	ldd	r31, Y+19	; 0x13
   19f0a:	80 81       	ld	r24, Z
   19f0c:	80 62       	ori	r24, 0x20	; 32
   19f0e:	0a c0       	rjmp	.+20     	; 0x19f24 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   19f10:	9f b7       	in	r25, 0x3f	; 63
   19f12:	f8 94       	cli
      *_udr = c;
   19f14:	ee 89       	ldd	r30, Y+22	; 0x16
   19f16:	ff 89       	ldd	r31, Y+23	; 0x17
   19f18:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   19f1a:	e8 89       	ldd	r30, Y+16	; 0x10
   19f1c:	f9 89       	ldd	r31, Y+17	; 0x11
   19f1e:	80 81       	ld	r24, Z
   19f20:	83 70       	andi	r24, 0x03	; 3
   19f22:	80 64       	ori	r24, 0x40	; 64
   19f24:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   19f26:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   19f28:	81 e0       	ldi	r24, 0x01	; 1
   19f2a:	90 e0       	ldi	r25, 0x00	; 0
   19f2c:	df 91       	pop	r29
   19f2e:	cf 91       	pop	r28
   19f30:	1f 91       	pop	r17
   19f32:	0f 91       	pop	r16
   19f34:	08 95       	ret

00019f36 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   19f36:	cf 93       	push	r28
   19f38:	df 93       	push	r29
   19f3a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   19f3c:	88 8d       	ldd	r24, Y+24	; 0x18
   19f3e:	88 23       	and	r24, r24
   19f40:	c1 f0       	breq	.+48     	; 0x19f72 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   19f42:	ea 89       	ldd	r30, Y+18	; 0x12
   19f44:	fb 89       	ldd	r31, Y+19	; 0x13
   19f46:	80 81       	ld	r24, Z
   19f48:	85 fd       	sbrc	r24, 5
   19f4a:	05 c0       	rjmp	.+10     	; 0x19f56 <_ZN14HardwareSerial5flushEv+0x20>
   19f4c:	a8 89       	ldd	r26, Y+16	; 0x10
   19f4e:	b9 89       	ldd	r27, Y+17	; 0x11
   19f50:	8c 91       	ld	r24, X
   19f52:	86 fd       	sbrc	r24, 6
   19f54:	0e c0       	rjmp	.+28     	; 0x19f72 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   19f56:	0f b6       	in	r0, 0x3f	; 63
   19f58:	07 fc       	sbrc	r0, 7
   19f5a:	f5 cf       	rjmp	.-22     	; 0x19f46 <_ZN14HardwareSerial5flushEv+0x10>
   19f5c:	80 81       	ld	r24, Z
   19f5e:	85 ff       	sbrs	r24, 5
   19f60:	f2 cf       	rjmp	.-28     	; 0x19f46 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   19f62:	a8 89       	ldd	r26, Y+16	; 0x10
   19f64:	b9 89       	ldd	r27, Y+17	; 0x11
   19f66:	8c 91       	ld	r24, X
   19f68:	85 ff       	sbrs	r24, 5
   19f6a:	ed cf       	rjmp	.-38     	; 0x19f46 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   19f6c:	ce 01       	movw	r24, r28
   19f6e:	73 df       	rcall	.-282    	; 0x19e56 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19f70:	e8 cf       	rjmp	.-48     	; 0x19f42 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   19f72:	df 91       	pop	r29
   19f74:	cf 91       	pop	r28
   19f76:	08 95       	ret

00019f78 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   19f78:	cf 92       	push	r12
   19f7a:	df 92       	push	r13
   19f7c:	ef 92       	push	r14
   19f7e:	ff 92       	push	r15
   19f80:	1f 93       	push	r17
   19f82:	cf 93       	push	r28
   19f84:	df 93       	push	r29
   19f86:	ec 01       	movw	r28, r24
   19f88:	6a 01       	movw	r12, r20
   19f8a:	7b 01       	movw	r14, r22
   19f8c:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   19f8e:	e8 89       	ldd	r30, Y+16	; 0x10
   19f90:	f9 89       	ldd	r31, Y+17	; 0x11
   19f92:	82 e0       	ldi	r24, 0x02	; 2
   19f94:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   19f96:	41 15       	cp	r20, r1
   19f98:	51 4e       	sbci	r21, 0xE1	; 225
   19f9a:	61 05       	cpc	r22, r1
   19f9c:	71 05       	cpc	r23, r1
   19f9e:	b1 f0       	breq	.+44     	; 0x19fcc <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   19fa0:	60 e0       	ldi	r22, 0x00	; 0
   19fa2:	79 e0       	ldi	r23, 0x09	; 9
   19fa4:	8d e3       	ldi	r24, 0x3D	; 61
   19fa6:	90 e0       	ldi	r25, 0x00	; 0
   19fa8:	a7 01       	movw	r20, r14
   19faa:	96 01       	movw	r18, r12
   19fac:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   19fb0:	da 01       	movw	r26, r20
   19fb2:	c9 01       	movw	r24, r18
   19fb4:	01 97       	sbiw	r24, 0x01	; 1
   19fb6:	a1 09       	sbc	r26, r1
   19fb8:	b1 09       	sbc	r27, r1
   19fba:	b6 95       	lsr	r27
   19fbc:	a7 95       	ror	r26
   19fbe:	97 95       	ror	r25
   19fc0:	87 95       	ror	r24
   19fc2:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   19fc4:	21 15       	cp	r18, r1
   19fc6:	80 e1       	ldi	r24, 0x10	; 16
   19fc8:	38 07       	cpc	r19, r24
   19fca:	a8 f0       	brcs	.+42     	; 0x19ff6 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   19fcc:	e8 89       	ldd	r30, Y+16	; 0x10
   19fce:	f9 89       	ldd	r31, Y+17	; 0x11
   19fd0:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   19fd2:	60 e8       	ldi	r22, 0x80	; 128
   19fd4:	74 e8       	ldi	r23, 0x84	; 132
   19fd6:	8e e1       	ldi	r24, 0x1E	; 30
   19fd8:	90 e0       	ldi	r25, 0x00	; 0
   19fda:	a7 01       	movw	r20, r14
   19fdc:	96 01       	movw	r18, r12
   19fde:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   19fe2:	da 01       	movw	r26, r20
   19fe4:	c9 01       	movw	r24, r18
   19fe6:	01 97       	sbiw	r24, 0x01	; 1
   19fe8:	a1 09       	sbc	r26, r1
   19fea:	b1 09       	sbc	r27, r1
   19fec:	b6 95       	lsr	r27
   19fee:	a7 95       	ror	r26
   19ff0:	97 95       	ror	r25
   19ff2:	87 95       	ror	r24
   19ff4:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   19ff6:	ec 85       	ldd	r30, Y+12	; 0x0c
   19ff8:	fd 85       	ldd	r31, Y+13	; 0x0d
   19ffa:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   19ffc:	ee 85       	ldd	r30, Y+14	; 0x0e
   19ffe:	ff 85       	ldd	r31, Y+15	; 0x0f
   1a000:	20 83       	st	Z, r18

  _written = false;
   1a002:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   1a004:	ec 89       	ldd	r30, Y+20	; 0x14
   1a006:	fd 89       	ldd	r31, Y+21	; 0x15
   1a008:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   1a00a:	ea 89       	ldd	r30, Y+18	; 0x12
   1a00c:	fb 89       	ldd	r31, Y+19	; 0x13
   1a00e:	80 81       	ld	r24, Z
   1a010:	80 61       	ori	r24, 0x10	; 16
   1a012:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   1a014:	ea 89       	ldd	r30, Y+18	; 0x12
   1a016:	fb 89       	ldd	r31, Y+19	; 0x13
   1a018:	80 81       	ld	r24, Z
   1a01a:	88 60       	ori	r24, 0x08	; 8
   1a01c:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   1a01e:	ea 89       	ldd	r30, Y+18	; 0x12
   1a020:	fb 89       	ldd	r31, Y+19	; 0x13
   1a022:	80 81       	ld	r24, Z
   1a024:	80 68       	ori	r24, 0x80	; 128
   1a026:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   1a028:	ea 89       	ldd	r30, Y+18	; 0x12
   1a02a:	fb 89       	ldd	r31, Y+19	; 0x13
   1a02c:	80 81       	ld	r24, Z
   1a02e:	8f 7d       	andi	r24, 0xDF	; 223
   1a030:	80 83       	st	Z, r24
}
   1a032:	df 91       	pop	r29
   1a034:	cf 91       	pop	r28
   1a036:	1f 91       	pop	r17
   1a038:	ff 90       	pop	r15
   1a03a:	ef 90       	pop	r14
   1a03c:	df 90       	pop	r13
   1a03e:	cf 90       	pop	r12
   1a040:	08 95       	ret

0001a042 <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   1a042:	80 e0       	ldi	r24, 0x00	; 0
   1a044:	90 e0       	ldi	r25, 0x00	; 0
   1a046:	08 95       	ret

0001a048 <_ZN5Print5flushEv>:
   1a048:	08 95       	ret

0001a04a <__vector_26>:
   1a04a:	1f 92       	push	r1
   1a04c:	0f 92       	push	r0
   1a04e:	0f b6       	in	r0, 0x3f	; 63
   1a050:	0f 92       	push	r0
   1a052:	11 24       	eor	r1, r1
   1a054:	0b b6       	in	r0, 0x3b	; 59
   1a056:	0f 92       	push	r0
   1a058:	2f 93       	push	r18
   1a05a:	3f 93       	push	r19
   1a05c:	4f 93       	push	r20
   1a05e:	5f 93       	push	r21
   1a060:	6f 93       	push	r22
   1a062:	7f 93       	push	r23
   1a064:	8f 93       	push	r24
   1a066:	9f 93       	push	r25
   1a068:	af 93       	push	r26
   1a06a:	bf 93       	push	r27
   1a06c:	ef 93       	push	r30
   1a06e:	ff 93       	push	r31
   1a070:	85 e5       	ldi	r24, 0x55	; 85
   1a072:	94 e1       	ldi	r25, 0x14	; 20
   1a074:	f0 de       	rcall	.-544    	; 0x19e56 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a076:	ff 91       	pop	r31
   1a078:	ef 91       	pop	r30
   1a07a:	bf 91       	pop	r27
   1a07c:	af 91       	pop	r26
   1a07e:	9f 91       	pop	r25
   1a080:	8f 91       	pop	r24
   1a082:	7f 91       	pop	r23
   1a084:	6f 91       	pop	r22
   1a086:	5f 91       	pop	r21
   1a088:	4f 91       	pop	r20
   1a08a:	3f 91       	pop	r19
   1a08c:	2f 91       	pop	r18
   1a08e:	0f 90       	pop	r0
   1a090:	0b be       	out	0x3b, r0	; 59
   1a092:	0f 90       	pop	r0
   1a094:	0f be       	out	0x3f, r0	; 63
   1a096:	0f 90       	pop	r0
   1a098:	1f 90       	pop	r1
   1a09a:	18 95       	reti

0001a09c <_GLOBAL__sub_I___vector_26>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   1a09c:	e5 e5       	ldi	r30, 0x55	; 85
   1a09e:	f4 e1       	ldi	r31, 0x14	; 20
   1a0a0:	13 82       	std	Z+3, r1	; 0x03
   1a0a2:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   1a0a4:	88 ee       	ldi	r24, 0xE8	; 232
   1a0a6:	93 e0       	ldi	r25, 0x03	; 3
   1a0a8:	a0 e0       	ldi	r26, 0x00	; 0
   1a0aa:	b0 e0       	ldi	r27, 0x00	; 0
   1a0ac:	84 83       	std	Z+4, r24	; 0x04
   1a0ae:	95 83       	std	Z+5, r25	; 0x05
   1a0b0:	a6 83       	std	Z+6, r26	; 0x06
   1a0b2:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   1a0b4:	8f ed       	ldi	r24, 0xDF	; 223
   1a0b6:	97 e0       	ldi	r25, 0x07	; 7
   1a0b8:	91 83       	std	Z+1, r25	; 0x01
   1a0ba:	80 83       	st	Z, r24
   1a0bc:	85 ec       	ldi	r24, 0xC5	; 197
   1a0be:	90 e0       	ldi	r25, 0x00	; 0
   1a0c0:	95 87       	std	Z+13, r25	; 0x0d
   1a0c2:	84 87       	std	Z+12, r24	; 0x0c
   1a0c4:	84 ec       	ldi	r24, 0xC4	; 196
   1a0c6:	90 e0       	ldi	r25, 0x00	; 0
   1a0c8:	97 87       	std	Z+15, r25	; 0x0f
   1a0ca:	86 87       	std	Z+14, r24	; 0x0e
   1a0cc:	80 ec       	ldi	r24, 0xC0	; 192
   1a0ce:	90 e0       	ldi	r25, 0x00	; 0
   1a0d0:	91 8b       	std	Z+17, r25	; 0x11
   1a0d2:	80 8b       	std	Z+16, r24	; 0x10
   1a0d4:	81 ec       	ldi	r24, 0xC1	; 193
   1a0d6:	90 e0       	ldi	r25, 0x00	; 0
   1a0d8:	93 8b       	std	Z+19, r25	; 0x13
   1a0da:	82 8b       	std	Z+18, r24	; 0x12
   1a0dc:	82 ec       	ldi	r24, 0xC2	; 194
   1a0de:	90 e0       	ldi	r25, 0x00	; 0
   1a0e0:	95 8b       	std	Z+21, r25	; 0x15
   1a0e2:	84 8b       	std	Z+20, r24	; 0x14
   1a0e4:	86 ec       	ldi	r24, 0xC6	; 198
   1a0e6:	90 e0       	ldi	r25, 0x00	; 0
   1a0e8:	97 8b       	std	Z+23, r25	; 0x17
   1a0ea:	86 8b       	std	Z+22, r24	; 0x16
   1a0ec:	11 8e       	std	Z+25, r1	; 0x19
   1a0ee:	12 8e       	std	Z+26, r1	; 0x1a
   1a0f0:	13 8e       	std	Z+27, r1	; 0x1b
   1a0f2:	14 8e       	std	Z+28, r1	; 0x1c
   1a0f4:	08 95       	ret

0001a0f6 <__vector_37>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   1a0f6:	1f 92       	push	r1
   1a0f8:	0f 92       	push	r0
   1a0fa:	0f b6       	in	r0, 0x3f	; 63
   1a0fc:	0f 92       	push	r0
   1a0fe:	11 24       	eor	r1, r1
   1a100:	0b b6       	in	r0, 0x3b	; 59
   1a102:	0f 92       	push	r0
   1a104:	2f 93       	push	r18
   1a106:	3f 93       	push	r19
   1a108:	4f 93       	push	r20
   1a10a:	5f 93       	push	r21
   1a10c:	6f 93       	push	r22
   1a10e:	7f 93       	push	r23
   1a110:	8f 93       	push	r24
   1a112:	9f 93       	push	r25
   1a114:	af 93       	push	r26
   1a116:	bf 93       	push	r27
   1a118:	ef 93       	push	r30
   1a11a:	ff 93       	push	r31
   1a11c:	82 e1       	ldi	r24, 0x12	; 18
   1a11e:	96 e1       	ldi	r25, 0x16	; 22
   1a120:	9a de       	rcall	.-716    	; 0x19e56 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a122:	ff 91       	pop	r31
   1a124:	ef 91       	pop	r30
   1a126:	bf 91       	pop	r27
   1a128:	af 91       	pop	r26
   1a12a:	9f 91       	pop	r25
   1a12c:	8f 91       	pop	r24
   1a12e:	7f 91       	pop	r23
   1a130:	6f 91       	pop	r22
   1a132:	5f 91       	pop	r21
   1a134:	4f 91       	pop	r20
   1a136:	3f 91       	pop	r19
   1a138:	2f 91       	pop	r18
   1a13a:	0f 90       	pop	r0
   1a13c:	0b be       	out	0x3b, r0	; 59
   1a13e:	0f 90       	pop	r0
   1a140:	0f be       	out	0x3f, r0	; 63
   1a142:	0f 90       	pop	r0
   1a144:	1f 90       	pop	r1
   1a146:	18 95       	reti

0001a148 <_GLOBAL__sub_I___vector_37>:
   1a148:	e2 e1       	ldi	r30, 0x12	; 18
   1a14a:	f6 e1       	ldi	r31, 0x16	; 22
   1a14c:	13 82       	std	Z+3, r1	; 0x03
   1a14e:	12 82       	std	Z+2, r1	; 0x02
   1a150:	88 ee       	ldi	r24, 0xE8	; 232
   1a152:	93 e0       	ldi	r25, 0x03	; 3
   1a154:	a0 e0       	ldi	r26, 0x00	; 0
   1a156:	b0 e0       	ldi	r27, 0x00	; 0
   1a158:	84 83       	std	Z+4, r24	; 0x04
   1a15a:	95 83       	std	Z+5, r25	; 0x05
   1a15c:	a6 83       	std	Z+6, r26	; 0x06
   1a15e:	b7 83       	std	Z+7, r27	; 0x07
   1a160:	8f ed       	ldi	r24, 0xDF	; 223
   1a162:	97 e0       	ldi	r25, 0x07	; 7
   1a164:	91 83       	std	Z+1, r25	; 0x01
   1a166:	80 83       	st	Z, r24
   1a168:	8d ec       	ldi	r24, 0xCD	; 205
   1a16a:	90 e0       	ldi	r25, 0x00	; 0
   1a16c:	95 87       	std	Z+13, r25	; 0x0d
   1a16e:	84 87       	std	Z+12, r24	; 0x0c
   1a170:	8c ec       	ldi	r24, 0xCC	; 204
   1a172:	90 e0       	ldi	r25, 0x00	; 0
   1a174:	97 87       	std	Z+15, r25	; 0x0f
   1a176:	86 87       	std	Z+14, r24	; 0x0e
   1a178:	88 ec       	ldi	r24, 0xC8	; 200
   1a17a:	90 e0       	ldi	r25, 0x00	; 0
   1a17c:	91 8b       	std	Z+17, r25	; 0x11
   1a17e:	80 8b       	std	Z+16, r24	; 0x10
   1a180:	89 ec       	ldi	r24, 0xC9	; 201
   1a182:	90 e0       	ldi	r25, 0x00	; 0
   1a184:	93 8b       	std	Z+19, r25	; 0x13
   1a186:	82 8b       	std	Z+18, r24	; 0x12
   1a188:	8a ec       	ldi	r24, 0xCA	; 202
   1a18a:	90 e0       	ldi	r25, 0x00	; 0
   1a18c:	95 8b       	std	Z+21, r25	; 0x15
   1a18e:	84 8b       	std	Z+20, r24	; 0x14
   1a190:	8e ec       	ldi	r24, 0xCE	; 206
   1a192:	90 e0       	ldi	r25, 0x00	; 0
   1a194:	97 8b       	std	Z+23, r25	; 0x17
   1a196:	86 8b       	std	Z+22, r24	; 0x16
   1a198:	11 8e       	std	Z+25, r1	; 0x19
   1a19a:	12 8e       	std	Z+26, r1	; 0x1a
   1a19c:	13 8e       	std	Z+27, r1	; 0x1b
   1a19e:	14 8e       	std	Z+28, r1	; 0x1c
   1a1a0:	08 95       	ret

0001a1a2 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a1a2:	cf 92       	push	r12
   1a1a4:	df 92       	push	r13
   1a1a6:	ef 92       	push	r14
   1a1a8:	ff 92       	push	r15
   1a1aa:	0f 93       	push	r16
   1a1ac:	1f 93       	push	r17
   1a1ae:	cf 93       	push	r28
   1a1b0:	df 93       	push	r29
   1a1b2:	6c 01       	movw	r12, r24
   1a1b4:	7a 01       	movw	r14, r20
   1a1b6:	8b 01       	movw	r16, r22
   1a1b8:	c0 e0       	ldi	r28, 0x00	; 0
   1a1ba:	d0 e0       	ldi	r29, 0x00	; 0
   1a1bc:	ce 15       	cp	r28, r14
   1a1be:	df 05       	cpc	r29, r15
   1a1c0:	81 f0       	breq	.+32     	; 0x1a1e2 <_ZN5Print5writeEPKhj+0x40>
   1a1c2:	d8 01       	movw	r26, r16
   1a1c4:	6d 91       	ld	r22, X+
   1a1c6:	8d 01       	movw	r16, r26
   1a1c8:	d6 01       	movw	r26, r12
   1a1ca:	ed 91       	ld	r30, X+
   1a1cc:	fc 91       	ld	r31, X
   1a1ce:	01 90       	ld	r0, Z+
   1a1d0:	f0 81       	ld	r31, Z
   1a1d2:	e0 2d       	mov	r30, r0
   1a1d4:	c6 01       	movw	r24, r12
   1a1d6:	19 95       	eicall
   1a1d8:	89 2b       	or	r24, r25
   1a1da:	11 f0       	breq	.+4      	; 0x1a1e0 <_ZN5Print5writeEPKhj+0x3e>
   1a1dc:	21 96       	adiw	r28, 0x01	; 1
   1a1de:	ee cf       	rjmp	.-36     	; 0x1a1bc <_ZN5Print5writeEPKhj+0x1a>
   1a1e0:	7e 01       	movw	r14, r28
   1a1e2:	c7 01       	movw	r24, r14
   1a1e4:	df 91       	pop	r29
   1a1e6:	cf 91       	pop	r28
   1a1e8:	1f 91       	pop	r17
   1a1ea:	0f 91       	pop	r16
   1a1ec:	ff 90       	pop	r15
   1a1ee:	ef 90       	pop	r14
   1a1f0:	df 90       	pop	r13
   1a1f2:	cf 90       	pop	r12
   1a1f4:	08 95       	ret

0001a1f6 <_ZN5Print5printEPK19__FlashStringHelper>:
   1a1f6:	ef 92       	push	r14
   1a1f8:	ff 92       	push	r15
   1a1fa:	0f 93       	push	r16
   1a1fc:	1f 93       	push	r17
   1a1fe:	cf 93       	push	r28
   1a200:	df 93       	push	r29
   1a202:	8c 01       	movw	r16, r24
   1a204:	7b 01       	movw	r14, r22
   1a206:	c0 e0       	ldi	r28, 0x00	; 0
   1a208:	d0 e0       	ldi	r29, 0x00	; 0
   1a20a:	f7 01       	movw	r30, r14
   1a20c:	ec 0f       	add	r30, r28
   1a20e:	fd 1f       	adc	r31, r29
   1a210:	64 91       	lpm	r22, Z
   1a212:	66 23       	and	r22, r22
   1a214:	61 f0       	breq	.+24     	; 0x1a22e <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a216:	d8 01       	movw	r26, r16
   1a218:	ed 91       	ld	r30, X+
   1a21a:	fc 91       	ld	r31, X
   1a21c:	01 90       	ld	r0, Z+
   1a21e:	f0 81       	ld	r31, Z
   1a220:	e0 2d       	mov	r30, r0
   1a222:	c8 01       	movw	r24, r16
   1a224:	19 95       	eicall
   1a226:	89 2b       	or	r24, r25
   1a228:	11 f0       	breq	.+4      	; 0x1a22e <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a22a:	21 96       	adiw	r28, 0x01	; 1
   1a22c:	ee cf       	rjmp	.-36     	; 0x1a20a <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1a22e:	ce 01       	movw	r24, r28
   1a230:	df 91       	pop	r29
   1a232:	cf 91       	pop	r28
   1a234:	1f 91       	pop	r17
   1a236:	0f 91       	pop	r16
   1a238:	ff 90       	pop	r15
   1a23a:	ef 90       	pop	r14
   1a23c:	08 95       	ret

0001a23e <_ZN5Print5printEPKc>:
   1a23e:	0c 94 33 84 	jmp	0x10866	; 0x10866 <_ZN5Print5writeEPKc>

0001a242 <_ZN5Print5printEc>:
   1a242:	dc 01       	movw	r26, r24
   1a244:	ed 91       	ld	r30, X+
   1a246:	fc 91       	ld	r31, X
   1a248:	01 90       	ld	r0, Z+
   1a24a:	f0 81       	ld	r31, Z
   1a24c:	e0 2d       	mov	r30, r0
   1a24e:	19 94       	eijmp

0001a250 <_ZN5Print7printlnEv>:
   1a250:	65 ef       	ldi	r22, 0xF5	; 245
   1a252:	76 e0       	ldi	r23, 0x06	; 6
   1a254:	0c 94 33 84 	jmp	0x10866	; 0x10866 <_ZN5Print5writeEPKc>

0001a258 <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1a258:	0f 93       	push	r16
   1a25a:	1f 93       	push	r17
   1a25c:	cf 93       	push	r28
   1a25e:	df 93       	push	r29
   1a260:	ec 01       	movw	r28, r24
   1a262:	c9 df       	rcall	.-110    	; 0x1a1f6 <_ZN5Print5printEPK19__FlashStringHelper>
   1a264:	8c 01       	movw	r16, r24
   1a266:	ce 01       	movw	r24, r28
   1a268:	f3 df       	rcall	.-26     	; 0x1a250 <_ZN5Print7printlnEv>
   1a26a:	80 0f       	add	r24, r16
   1a26c:	91 1f       	adc	r25, r17
   1a26e:	df 91       	pop	r29
   1a270:	cf 91       	pop	r28
   1a272:	1f 91       	pop	r17
   1a274:	0f 91       	pop	r16
   1a276:	08 95       	ret

0001a278 <_ZN5Print7printlnEPKc>:
   1a278:	0f 93       	push	r16
   1a27a:	1f 93       	push	r17
   1a27c:	cf 93       	push	r28
   1a27e:	df 93       	push	r29
   1a280:	ec 01       	movw	r28, r24
   1a282:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   1a286:	8c 01       	movw	r16, r24
   1a288:	ce 01       	movw	r24, r28
   1a28a:	e2 df       	rcall	.-60     	; 0x1a250 <_ZN5Print7printlnEv>
   1a28c:	80 0f       	add	r24, r16
   1a28e:	91 1f       	adc	r25, r17
   1a290:	df 91       	pop	r29
   1a292:	cf 91       	pop	r28
   1a294:	1f 91       	pop	r17
   1a296:	0f 91       	pop	r16
   1a298:	08 95       	ret

0001a29a <_ZN5Print11printNumberEmh>:
   1a29a:	8f 92       	push	r8
   1a29c:	9f 92       	push	r9
   1a29e:	af 92       	push	r10
   1a2a0:	bf 92       	push	r11
   1a2a2:	ef 92       	push	r14
   1a2a4:	ff 92       	push	r15
   1a2a6:	0f 93       	push	r16
   1a2a8:	1f 93       	push	r17
   1a2aa:	cf 93       	push	r28
   1a2ac:	df 93       	push	r29
   1a2ae:	cd b7       	in	r28, 0x3d	; 61
   1a2b0:	de b7       	in	r29, 0x3e	; 62
   1a2b2:	a1 97       	sbiw	r28, 0x21	; 33
   1a2b4:	0f b6       	in	r0, 0x3f	; 63
   1a2b6:	f8 94       	cli
   1a2b8:	de bf       	out	0x3e, r29	; 62
   1a2ba:	0f be       	out	0x3f, r0	; 63
   1a2bc:	cd bf       	out	0x3d, r28	; 61
   1a2be:	7c 01       	movw	r14, r24
   1a2c0:	fa 01       	movw	r30, r20
   1a2c2:	cb 01       	movw	r24, r22
   1a2c4:	19 a2       	std	Y+33, r1	; 0x21
   1a2c6:	22 30       	cpi	r18, 0x02	; 2
   1a2c8:	08 f4       	brcc	.+2      	; 0x1a2cc <_ZN5Print11printNumberEmh+0x32>
   1a2ca:	2a e0       	ldi	r18, 0x0A	; 10
   1a2cc:	8e 01       	movw	r16, r28
   1a2ce:	0f 5d       	subi	r16, 0xDF	; 223
   1a2d0:	1f 4f       	sbci	r17, 0xFF	; 255
   1a2d2:	82 2e       	mov	r8, r18
   1a2d4:	91 2c       	mov	r9, r1
   1a2d6:	a1 2c       	mov	r10, r1
   1a2d8:	b1 2c       	mov	r11, r1
   1a2da:	bf 01       	movw	r22, r30
   1a2dc:	a5 01       	movw	r20, r10
   1a2de:	94 01       	movw	r18, r8
   1a2e0:	0e 94 5d e7 	call	0x1ceba	; 0x1ceba <__udivmodsi4>
   1a2e4:	f9 01       	movw	r30, r18
   1a2e6:	ca 01       	movw	r24, r20
   1a2e8:	01 50       	subi	r16, 0x01	; 1
   1a2ea:	11 09       	sbc	r17, r1
   1a2ec:	6a 30       	cpi	r22, 0x0A	; 10
   1a2ee:	10 f4       	brcc	.+4      	; 0x1a2f4 <_ZN5Print11printNumberEmh+0x5a>
   1a2f0:	60 5d       	subi	r22, 0xD0	; 208
   1a2f2:	01 c0       	rjmp	.+2      	; 0x1a2f6 <_ZN5Print11printNumberEmh+0x5c>
   1a2f4:	69 5c       	subi	r22, 0xC9	; 201
   1a2f6:	d8 01       	movw	r26, r16
   1a2f8:	6c 93       	st	X, r22
   1a2fa:	23 2b       	or	r18, r19
   1a2fc:	24 2b       	or	r18, r20
   1a2fe:	25 2b       	or	r18, r21
   1a300:	61 f7       	brne	.-40     	; 0x1a2da <_ZN5Print11printNumberEmh+0x40>
   1a302:	b8 01       	movw	r22, r16
   1a304:	c7 01       	movw	r24, r14
   1a306:	0e 94 33 84 	call	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   1a30a:	a1 96       	adiw	r28, 0x21	; 33
   1a30c:	0f b6       	in	r0, 0x3f	; 63
   1a30e:	f8 94       	cli
   1a310:	de bf       	out	0x3e, r29	; 62
   1a312:	0f be       	out	0x3f, r0	; 63
   1a314:	cd bf       	out	0x3d, r28	; 61
   1a316:	df 91       	pop	r29
   1a318:	cf 91       	pop	r28
   1a31a:	1f 91       	pop	r17
   1a31c:	0f 91       	pop	r16
   1a31e:	ff 90       	pop	r15
   1a320:	ef 90       	pop	r14
   1a322:	bf 90       	pop	r11
   1a324:	af 90       	pop	r10
   1a326:	9f 90       	pop	r9
   1a328:	8f 90       	pop	r8
   1a32a:	08 95       	ret

0001a32c <_ZN5Print5printEmi>:
   1a32c:	21 15       	cp	r18, r1
   1a32e:	31 05       	cpc	r19, r1
   1a330:	41 f4       	brne	.+16     	; 0x1a342 <_ZN5Print5printEmi+0x16>
   1a332:	dc 01       	movw	r26, r24
   1a334:	ed 91       	ld	r30, X+
   1a336:	fc 91       	ld	r31, X
   1a338:	01 90       	ld	r0, Z+
   1a33a:	f0 81       	ld	r31, Z
   1a33c:	e0 2d       	mov	r30, r0
   1a33e:	64 2f       	mov	r22, r20
   1a340:	19 94       	eijmp
   1a342:	ab cf       	rjmp	.-170    	; 0x1a29a <_ZN5Print11printNumberEmh>

0001a344 <_ZN5Print5printEhi>:
   1a344:	9a 01       	movw	r18, r20
   1a346:	46 2f       	mov	r20, r22
   1a348:	50 e0       	ldi	r21, 0x00	; 0
   1a34a:	60 e0       	ldi	r22, 0x00	; 0
   1a34c:	70 e0       	ldi	r23, 0x00	; 0
   1a34e:	ee cf       	rjmp	.-36     	; 0x1a32c <_ZN5Print5printEmi>

0001a350 <_ZN5Print7printlnEhi>:
   1a350:	0f 93       	push	r16
   1a352:	1f 93       	push	r17
   1a354:	cf 93       	push	r28
   1a356:	df 93       	push	r29
   1a358:	ec 01       	movw	r28, r24
   1a35a:	f4 df       	rcall	.-24     	; 0x1a344 <_ZN5Print5printEhi>
   1a35c:	8c 01       	movw	r16, r24
   1a35e:	ce 01       	movw	r24, r28
   1a360:	77 df       	rcall	.-274    	; 0x1a250 <_ZN5Print7printlnEv>
   1a362:	80 0f       	add	r24, r16
   1a364:	91 1f       	adc	r25, r17
   1a366:	df 91       	pop	r29
   1a368:	cf 91       	pop	r28
   1a36a:	1f 91       	pop	r17
   1a36c:	0f 91       	pop	r16
   1a36e:	08 95       	ret

0001a370 <_ZN5Print5printEji>:
   1a370:	9a 01       	movw	r18, r20
   1a372:	ab 01       	movw	r20, r22
   1a374:	60 e0       	ldi	r22, 0x00	; 0
   1a376:	70 e0       	ldi	r23, 0x00	; 0
   1a378:	d9 cf       	rjmp	.-78     	; 0x1a32c <_ZN5Print5printEmi>

0001a37a <_ZN5Print7printlnEji>:
   1a37a:	0f 93       	push	r16
   1a37c:	1f 93       	push	r17
   1a37e:	cf 93       	push	r28
   1a380:	df 93       	push	r29
   1a382:	ec 01       	movw	r28, r24
   1a384:	f5 df       	rcall	.-22     	; 0x1a370 <_ZN5Print5printEji>
   1a386:	8c 01       	movw	r16, r24
   1a388:	ce 01       	movw	r24, r28
   1a38a:	62 df       	rcall	.-316    	; 0x1a250 <_ZN5Print7printlnEv>
   1a38c:	80 0f       	add	r24, r16
   1a38e:	91 1f       	adc	r25, r17
   1a390:	df 91       	pop	r29
   1a392:	cf 91       	pop	r28
   1a394:	1f 91       	pop	r17
   1a396:	0f 91       	pop	r16
   1a398:	08 95       	ret

0001a39a <_ZN5Print7printlnEmi>:
   1a39a:	0f 93       	push	r16
   1a39c:	1f 93       	push	r17
   1a39e:	cf 93       	push	r28
   1a3a0:	df 93       	push	r29
   1a3a2:	ec 01       	movw	r28, r24
   1a3a4:	c3 df       	rcall	.-122    	; 0x1a32c <_ZN5Print5printEmi>
   1a3a6:	8c 01       	movw	r16, r24
   1a3a8:	ce 01       	movw	r24, r28
   1a3aa:	52 df       	rcall	.-348    	; 0x1a250 <_ZN5Print7printlnEv>
   1a3ac:	80 0f       	add	r24, r16
   1a3ae:	91 1f       	adc	r25, r17
   1a3b0:	df 91       	pop	r29
   1a3b2:	cf 91       	pop	r28
   1a3b4:	1f 91       	pop	r17
   1a3b6:	0f 91       	pop	r16
   1a3b8:	08 95       	ret

0001a3ba <_ZN5Print5printEli>:
   1a3ba:	cf 92       	push	r12
   1a3bc:	df 92       	push	r13
   1a3be:	ef 92       	push	r14
   1a3c0:	ff 92       	push	r15
   1a3c2:	0f 93       	push	r16
   1a3c4:	1f 93       	push	r17
   1a3c6:	cf 93       	push	r28
   1a3c8:	df 93       	push	r29
   1a3ca:	21 15       	cp	r18, r1
   1a3cc:	31 05       	cpc	r19, r1
   1a3ce:	81 f4       	brne	.+32     	; 0x1a3f0 <_ZN5Print5printEli+0x36>
   1a3d0:	dc 01       	movw	r26, r24
   1a3d2:	ed 91       	ld	r30, X+
   1a3d4:	fc 91       	ld	r31, X
   1a3d6:	01 90       	ld	r0, Z+
   1a3d8:	f0 81       	ld	r31, Z
   1a3da:	e0 2d       	mov	r30, r0
   1a3dc:	64 2f       	mov	r22, r20
   1a3de:	df 91       	pop	r29
   1a3e0:	cf 91       	pop	r28
   1a3e2:	1f 91       	pop	r17
   1a3e4:	0f 91       	pop	r16
   1a3e6:	ff 90       	pop	r15
   1a3e8:	ef 90       	pop	r14
   1a3ea:	df 90       	pop	r13
   1a3ec:	cf 90       	pop	r12
   1a3ee:	19 94       	eijmp
   1a3f0:	2a 30       	cpi	r18, 0x0A	; 10
   1a3f2:	31 05       	cpc	r19, r1
   1a3f4:	f1 f4       	brne	.+60     	; 0x1a432 <_ZN5Print5printEli+0x78>
   1a3f6:	77 ff       	sbrs	r23, 7
   1a3f8:	1b c0       	rjmp	.+54     	; 0x1a430 <_ZN5Print5printEli+0x76>
   1a3fa:	6a 01       	movw	r12, r20
   1a3fc:	7b 01       	movw	r14, r22
   1a3fe:	ec 01       	movw	r28, r24
   1a400:	6d e2       	ldi	r22, 0x2D	; 45
   1a402:	1f df       	rcall	.-450    	; 0x1a242 <_ZN5Print5printEc>
   1a404:	8c 01       	movw	r16, r24
   1a406:	44 27       	eor	r20, r20
   1a408:	55 27       	eor	r21, r21
   1a40a:	ba 01       	movw	r22, r20
   1a40c:	4c 19       	sub	r20, r12
   1a40e:	5d 09       	sbc	r21, r13
   1a410:	6e 09       	sbc	r22, r14
   1a412:	7f 09       	sbc	r23, r15
   1a414:	2a e0       	ldi	r18, 0x0A	; 10
   1a416:	ce 01       	movw	r24, r28
   1a418:	40 df       	rcall	.-384    	; 0x1a29a <_ZN5Print11printNumberEmh>
   1a41a:	80 0f       	add	r24, r16
   1a41c:	91 1f       	adc	r25, r17
   1a41e:	df 91       	pop	r29
   1a420:	cf 91       	pop	r28
   1a422:	1f 91       	pop	r17
   1a424:	0f 91       	pop	r16
   1a426:	ff 90       	pop	r15
   1a428:	ef 90       	pop	r14
   1a42a:	df 90       	pop	r13
   1a42c:	cf 90       	pop	r12
   1a42e:	08 95       	ret
   1a430:	2a e0       	ldi	r18, 0x0A	; 10
   1a432:	df 91       	pop	r29
   1a434:	cf 91       	pop	r28
   1a436:	1f 91       	pop	r17
   1a438:	0f 91       	pop	r16
   1a43a:	ff 90       	pop	r15
   1a43c:	ef 90       	pop	r14
   1a43e:	df 90       	pop	r13
   1a440:	cf 90       	pop	r12
   1a442:	2b cf       	rjmp	.-426    	; 0x1a29a <_ZN5Print11printNumberEmh>

0001a444 <_ZN5Print5printEii>:
   1a444:	9a 01       	movw	r18, r20
   1a446:	ab 01       	movw	r20, r22
   1a448:	77 0f       	add	r23, r23
   1a44a:	66 0b       	sbc	r22, r22
   1a44c:	77 0b       	sbc	r23, r23
   1a44e:	b5 cf       	rjmp	.-150    	; 0x1a3ba <_ZN5Print5printEli>

0001a450 <_ZN5Print7printlnEii>:
   1a450:	0f 93       	push	r16
   1a452:	1f 93       	push	r17
   1a454:	cf 93       	push	r28
   1a456:	df 93       	push	r29
   1a458:	ec 01       	movw	r28, r24
   1a45a:	f4 df       	rcall	.-24     	; 0x1a444 <_ZN5Print5printEii>
   1a45c:	8c 01       	movw	r16, r24
   1a45e:	ce 01       	movw	r24, r28
   1a460:	f7 de       	rcall	.-530    	; 0x1a250 <_ZN5Print7printlnEv>
   1a462:	80 0f       	add	r24, r16
   1a464:	91 1f       	adc	r25, r17
   1a466:	df 91       	pop	r29
   1a468:	cf 91       	pop	r28
   1a46a:	1f 91       	pop	r17
   1a46c:	0f 91       	pop	r16
   1a46e:	08 95       	ret

0001a470 <_ZN5Print10printFloatEdh>:
   1a470:	7f 92       	push	r7
   1a472:	8f 92       	push	r8
   1a474:	9f 92       	push	r9
   1a476:	af 92       	push	r10
   1a478:	bf 92       	push	r11
   1a47a:	cf 92       	push	r12
   1a47c:	df 92       	push	r13
   1a47e:	ef 92       	push	r14
   1a480:	ff 92       	push	r15
   1a482:	0f 93       	push	r16
   1a484:	1f 93       	push	r17
   1a486:	cf 93       	push	r28
   1a488:	df 93       	push	r29
   1a48a:	8c 01       	movw	r16, r24
   1a48c:	6a 01       	movw	r12, r20
   1a48e:	7b 01       	movw	r14, r22
   1a490:	72 2e       	mov	r7, r18
   1a492:	9a 01       	movw	r18, r20
   1a494:	ab 01       	movw	r20, r22
   1a496:	c7 01       	movw	r24, r14
   1a498:	b6 01       	movw	r22, r12
   1a49a:	0e 94 f0 e5 	call	0x1cbe0	; 0x1cbe0 <__unordsf2>
   1a49e:	88 23       	and	r24, r24
   1a4a0:	19 f0       	breq	.+6      	; 0x1a4a8 <_ZN5Print10printFloatEdh+0x38>
   1a4a2:	6d ee       	ldi	r22, 0xED	; 237
   1a4a4:	77 e0       	ldi	r23, 0x07	; 7
   1a4a6:	25 c0       	rjmp	.+74     	; 0x1a4f2 <_ZN5Print10printFloatEdh+0x82>
   1a4a8:	46 01       	movw	r8, r12
   1a4aa:	57 01       	movw	r10, r14
   1a4ac:	e8 94       	clt
   1a4ae:	b7 f8       	bld	r11, 7
   1a4b0:	2f ef       	ldi	r18, 0xFF	; 255
   1a4b2:	3f ef       	ldi	r19, 0xFF	; 255
   1a4b4:	4f e7       	ldi	r20, 0x7F	; 127
   1a4b6:	5f e7       	ldi	r21, 0x7F	; 127
   1a4b8:	c5 01       	movw	r24, r10
   1a4ba:	b4 01       	movw	r22, r8
   1a4bc:	0e 94 f0 e5 	call	0x1cbe0	; 0x1cbe0 <__unordsf2>
   1a4c0:	81 11       	cpse	r24, r1
   1a4c2:	0c c0       	rjmp	.+24     	; 0x1a4dc <_ZN5Print10printFloatEdh+0x6c>
   1a4c4:	2f ef       	ldi	r18, 0xFF	; 255
   1a4c6:	3f ef       	ldi	r19, 0xFF	; 255
   1a4c8:	4f e7       	ldi	r20, 0x7F	; 127
   1a4ca:	5f e7       	ldi	r21, 0x7F	; 127
   1a4cc:	c5 01       	movw	r24, r10
   1a4ce:	b4 01       	movw	r22, r8
   1a4d0:	c8 da       	rcall	.-2672   	; 0x19a62 <__cmpsf2>
   1a4d2:	18 16       	cp	r1, r24
   1a4d4:	1c f4       	brge	.+6      	; 0x1a4dc <_ZN5Print10printFloatEdh+0x6c>
   1a4d6:	61 ef       	ldi	r22, 0xF1	; 241
   1a4d8:	77 e0       	ldi	r23, 0x07	; 7
   1a4da:	0b c0       	rjmp	.+22     	; 0x1a4f2 <_ZN5Print10printFloatEdh+0x82>
   1a4dc:	2f ef       	ldi	r18, 0xFF	; 255
   1a4de:	3f ef       	ldi	r19, 0xFF	; 255
   1a4e0:	4f e7       	ldi	r20, 0x7F	; 127
   1a4e2:	5f e4       	ldi	r21, 0x4F	; 79
   1a4e4:	c7 01       	movw	r24, r14
   1a4e6:	b6 01       	movw	r22, r12
   1a4e8:	06 dc       	rcall	.-2036   	; 0x19cf6 <__gesf2>
   1a4ea:	18 16       	cp	r1, r24
   1a4ec:	94 f4       	brge	.+36     	; 0x1a512 <_ZN5Print10printFloatEdh+0xa2>
   1a4ee:	65 ef       	ldi	r22, 0xF5	; 245
   1a4f0:	77 e0       	ldi	r23, 0x07	; 7
   1a4f2:	c8 01       	movw	r24, r16
   1a4f4:	df 91       	pop	r29
   1a4f6:	cf 91       	pop	r28
   1a4f8:	1f 91       	pop	r17
   1a4fa:	0f 91       	pop	r16
   1a4fc:	ff 90       	pop	r15
   1a4fe:	ef 90       	pop	r14
   1a500:	df 90       	pop	r13
   1a502:	cf 90       	pop	r12
   1a504:	bf 90       	pop	r11
   1a506:	af 90       	pop	r10
   1a508:	9f 90       	pop	r9
   1a50a:	8f 90       	pop	r8
   1a50c:	7f 90       	pop	r7
   1a50e:	0c 94 33 84 	jmp	0x10866	; 0x10866 <_ZN5Print5writeEPKc>
   1a512:	2f ef       	ldi	r18, 0xFF	; 255
   1a514:	3f ef       	ldi	r19, 0xFF	; 255
   1a516:	4f e7       	ldi	r20, 0x7F	; 127
   1a518:	5f ec       	ldi	r21, 0xCF	; 207
   1a51a:	c7 01       	movw	r24, r14
   1a51c:	b6 01       	movw	r22, r12
   1a51e:	a1 da       	rcall	.-2750   	; 0x19a62 <__cmpsf2>
   1a520:	87 fd       	sbrc	r24, 7
   1a522:	e5 cf       	rjmp	.-54     	; 0x1a4ee <_ZN5Print10printFloatEdh+0x7e>
   1a524:	20 e0       	ldi	r18, 0x00	; 0
   1a526:	30 e0       	ldi	r19, 0x00	; 0
   1a528:	a9 01       	movw	r20, r18
   1a52a:	c7 01       	movw	r24, r14
   1a52c:	b6 01       	movw	r22, r12
   1a52e:	99 da       	rcall	.-2766   	; 0x19a62 <__cmpsf2>
   1a530:	87 ff       	sbrs	r24, 7
   1a532:	09 c0       	rjmp	.+18     	; 0x1a546 <_ZN5Print10printFloatEdh+0xd6>
   1a534:	6d e2       	ldi	r22, 0x2D	; 45
   1a536:	c8 01       	movw	r24, r16
   1a538:	84 de       	rcall	.-760    	; 0x1a242 <_ZN5Print5printEc>
   1a53a:	ec 01       	movw	r28, r24
   1a53c:	f7 fa       	bst	r15, 7
   1a53e:	f0 94       	com	r15
   1a540:	f7 f8       	bld	r15, 7
   1a542:	f0 94       	com	r15
   1a544:	02 c0       	rjmp	.+4      	; 0x1a54a <_ZN5Print10printFloatEdh+0xda>
   1a546:	c0 e0       	ldi	r28, 0x00	; 0
   1a548:	d0 e0       	ldi	r29, 0x00	; 0
   1a54a:	b1 2c       	mov	r11, r1
   1a54c:	60 e0       	ldi	r22, 0x00	; 0
   1a54e:	70 e0       	ldi	r23, 0x00	; 0
   1a550:	80 e0       	ldi	r24, 0x00	; 0
   1a552:	9f e3       	ldi	r25, 0x3F	; 63
   1a554:	7b 14       	cp	r7, r11
   1a556:	39 f0       	breq	.+14     	; 0x1a566 <_ZN5Print10printFloatEdh+0xf6>
   1a558:	20 e0       	ldi	r18, 0x00	; 0
   1a55a:	30 e0       	ldi	r19, 0x00	; 0
   1a55c:	40 e2       	ldi	r20, 0x20	; 32
   1a55e:	51 e4       	ldi	r21, 0x41	; 65
   1a560:	84 da       	rcall	.-2808   	; 0x19a6a <__divsf3>
   1a562:	b3 94       	inc	r11
   1a564:	f7 cf       	rjmp	.-18     	; 0x1a554 <_ZN5Print10printFloatEdh+0xe4>
   1a566:	a7 01       	movw	r20, r14
   1a568:	96 01       	movw	r18, r12
   1a56a:	17 da       	rcall	.-3026   	; 0x1999a <__addsf3>
   1a56c:	6b 01       	movw	r12, r22
   1a56e:	7c 01       	movw	r14, r24
   1a570:	e4 da       	rcall	.-2616   	; 0x19b3a <__fixunssfsi>
   1a572:	4b 01       	movw	r8, r22
   1a574:	5c 01       	movw	r10, r24
   1a576:	2a e0       	ldi	r18, 0x0A	; 10
   1a578:	ab 01       	movw	r20, r22
   1a57a:	bc 01       	movw	r22, r24
   1a57c:	c8 01       	movw	r24, r16
   1a57e:	8d de       	rcall	.-742    	; 0x1a29a <_ZN5Print11printNumberEmh>
   1a580:	c8 0f       	add	r28, r24
   1a582:	d9 1f       	adc	r29, r25
   1a584:	77 20       	and	r7, r7
   1a586:	79 f1       	breq	.+94     	; 0x1a5e6 <_ZN5Print10printFloatEdh+0x176>
   1a588:	c5 01       	movw	r24, r10
   1a58a:	b4 01       	movw	r22, r8
   1a58c:	02 db       	rcall	.-2556   	; 0x19b92 <__floatunsisf>
   1a58e:	9b 01       	movw	r18, r22
   1a590:	ac 01       	movw	r20, r24
   1a592:	c7 01       	movw	r24, r14
   1a594:	b6 01       	movw	r22, r12
   1a596:	00 da       	rcall	.-3072   	; 0x19998 <__subsf3>
   1a598:	6b 01       	movw	r12, r22
   1a59a:	7c 01       	movw	r14, r24
   1a59c:	6e e2       	ldi	r22, 0x2E	; 46
   1a59e:	c8 01       	movw	r24, r16
   1a5a0:	50 de       	rcall	.-864    	; 0x1a242 <_ZN5Print5printEc>
   1a5a2:	c8 0f       	add	r28, r24
   1a5a4:	d9 1f       	adc	r29, r25
   1a5a6:	20 e0       	ldi	r18, 0x00	; 0
   1a5a8:	30 e0       	ldi	r19, 0x00	; 0
   1a5aa:	40 e2       	ldi	r20, 0x20	; 32
   1a5ac:	51 e4       	ldi	r21, 0x41	; 65
   1a5ae:	c7 01       	movw	r24, r14
   1a5b0:	b6 01       	movw	r22, r12
   1a5b2:	a5 db       	rcall	.-2230   	; 0x19cfe <__mulsf3>
   1a5b4:	4b 01       	movw	r8, r22
   1a5b6:	5c 01       	movw	r10, r24
   1a5b8:	c0 da       	rcall	.-2688   	; 0x19b3a <__fixunssfsi>
   1a5ba:	6b 01       	movw	r12, r22
   1a5bc:	7c 01       	movw	r14, r24
   1a5be:	4a e0       	ldi	r20, 0x0A	; 10
   1a5c0:	50 e0       	ldi	r21, 0x00	; 0
   1a5c2:	c8 01       	movw	r24, r16
   1a5c4:	d5 de       	rcall	.-598    	; 0x1a370 <_ZN5Print5printEji>
   1a5c6:	c8 0f       	add	r28, r24
   1a5c8:	d9 1f       	adc	r29, r25
   1a5ca:	b6 01       	movw	r22, r12
   1a5cc:	80 e0       	ldi	r24, 0x00	; 0
   1a5ce:	90 e0       	ldi	r25, 0x00	; 0
   1a5d0:	e0 da       	rcall	.-2624   	; 0x19b92 <__floatunsisf>
   1a5d2:	9b 01       	movw	r18, r22
   1a5d4:	ac 01       	movw	r20, r24
   1a5d6:	c5 01       	movw	r24, r10
   1a5d8:	b4 01       	movw	r22, r8
   1a5da:	de d9       	rcall	.-3140   	; 0x19998 <__subsf3>
   1a5dc:	6b 01       	movw	r12, r22
   1a5de:	7c 01       	movw	r14, r24
   1a5e0:	7a 94       	dec	r7
   1a5e2:	71 10       	cpse	r7, r1
   1a5e4:	e0 cf       	rjmp	.-64     	; 0x1a5a6 <_ZN5Print10printFloatEdh+0x136>
   1a5e6:	ce 01       	movw	r24, r28
   1a5e8:	df 91       	pop	r29
   1a5ea:	cf 91       	pop	r28
   1a5ec:	1f 91       	pop	r17
   1a5ee:	0f 91       	pop	r16
   1a5f0:	ff 90       	pop	r15
   1a5f2:	ef 90       	pop	r14
   1a5f4:	df 90       	pop	r13
   1a5f6:	cf 90       	pop	r12
   1a5f8:	bf 90       	pop	r11
   1a5fa:	af 90       	pop	r10
   1a5fc:	9f 90       	pop	r9
   1a5fe:	8f 90       	pop	r8
   1a600:	7f 90       	pop	r7
   1a602:	08 95       	ret

0001a604 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1a604:	0f 93       	push	r16
   1a606:	1f 93       	push	r17
   1a608:	cf 93       	push	r28
   1a60a:	df 93       	push	r29
   1a60c:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a60e:	30 df       	rcall	.-416    	; 0x1a470 <_ZN5Print10printFloatEdh>
   1a610:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1a612:	ce 01       	movw	r24, r28
   1a614:	1d de       	rcall	.-966    	; 0x1a250 <_ZN5Print7printlnEv>
  return n;
}
   1a616:	80 0f       	add	r24, r16
   1a618:	91 1f       	adc	r25, r17
   1a61a:	df 91       	pop	r29
   1a61c:	cf 91       	pop	r28
   1a61e:	1f 91       	pop	r17
   1a620:	0f 91       	pop	r16
   1a622:	08 95       	ret

0001a624 <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1a624:	1f 92       	push	r1
   1a626:	0f 92       	push	r0
   1a628:	0f b6       	in	r0, 0x3f	; 63
   1a62a:	0f 92       	push	r0
   1a62c:	11 24       	eor	r1, r1
   1a62e:	2f 93       	push	r18
   1a630:	3f 93       	push	r19
   1a632:	8f 93       	push	r24
   1a634:	9f 93       	push	r25
   1a636:	af 93       	push	r26
   1a638:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1a63a:	80 91 d0 17 	lds	r24, 0x17D0	; 0x8017d0 <timer0_millis>
   1a63e:	90 91 d1 17 	lds	r25, 0x17D1	; 0x8017d1 <timer0_millis+0x1>
   1a642:	a0 91 d2 17 	lds	r26, 0x17D2	; 0x8017d2 <timer0_millis+0x2>
   1a646:	b0 91 d3 17 	lds	r27, 0x17D3	; 0x8017d3 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1a64a:	30 91 cf 17 	lds	r19, 0x17CF	; 0x8017cf <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1a64e:	23 e0       	ldi	r18, 0x03	; 3
   1a650:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1a652:	2d 37       	cpi	r18, 0x7D	; 125
   1a654:	20 f4       	brcc	.+8      	; 0x1a65e <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1a656:	01 96       	adiw	r24, 0x01	; 1
   1a658:	a1 1d       	adc	r26, r1
   1a65a:	b1 1d       	adc	r27, r1
   1a65c:	05 c0       	rjmp	.+10     	; 0x1a668 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1a65e:	26 e8       	ldi	r18, 0x86	; 134
   1a660:	23 0f       	add	r18, r19
		m += 1;
   1a662:	02 96       	adiw	r24, 0x02	; 2
   1a664:	a1 1d       	adc	r26, r1
   1a666:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1a668:	20 93 cf 17 	sts	0x17CF, r18	; 0x8017cf <timer0_fract>
	timer0_millis = m;
   1a66c:	80 93 d0 17 	sts	0x17D0, r24	; 0x8017d0 <timer0_millis>
   1a670:	90 93 d1 17 	sts	0x17D1, r25	; 0x8017d1 <timer0_millis+0x1>
   1a674:	a0 93 d2 17 	sts	0x17D2, r26	; 0x8017d2 <timer0_millis+0x2>
   1a678:	b0 93 d3 17 	sts	0x17D3, r27	; 0x8017d3 <timer0_millis+0x3>
	timer0_overflow_count++;
   1a67c:	80 91 d4 17 	lds	r24, 0x17D4	; 0x8017d4 <timer0_overflow_count>
   1a680:	90 91 d5 17 	lds	r25, 0x17D5	; 0x8017d5 <timer0_overflow_count+0x1>
   1a684:	a0 91 d6 17 	lds	r26, 0x17D6	; 0x8017d6 <timer0_overflow_count+0x2>
   1a688:	b0 91 d7 17 	lds	r27, 0x17D7	; 0x8017d7 <timer0_overflow_count+0x3>
   1a68c:	01 96       	adiw	r24, 0x01	; 1
   1a68e:	a1 1d       	adc	r26, r1
   1a690:	b1 1d       	adc	r27, r1
   1a692:	80 93 d4 17 	sts	0x17D4, r24	; 0x8017d4 <timer0_overflow_count>
   1a696:	90 93 d5 17 	sts	0x17D5, r25	; 0x8017d5 <timer0_overflow_count+0x1>
   1a69a:	a0 93 d6 17 	sts	0x17D6, r26	; 0x8017d6 <timer0_overflow_count+0x2>
   1a69e:	b0 93 d7 17 	sts	0x17D7, r27	; 0x8017d7 <timer0_overflow_count+0x3>
}
   1a6a2:	bf 91       	pop	r27
   1a6a4:	af 91       	pop	r26
   1a6a6:	9f 91       	pop	r25
   1a6a8:	8f 91       	pop	r24
   1a6aa:	3f 91       	pop	r19
   1a6ac:	2f 91       	pop	r18
   1a6ae:	0f 90       	pop	r0
   1a6b0:	0f be       	out	0x3f, r0	; 63
   1a6b2:	0f 90       	pop	r0
   1a6b4:	1f 90       	pop	r1
   1a6b6:	18 95       	reti

0001a6b8 <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1a6b8:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1a6ba:	f8 94       	cli
	m = timer0_millis;
   1a6bc:	60 91 d0 17 	lds	r22, 0x17D0	; 0x8017d0 <timer0_millis>
   1a6c0:	70 91 d1 17 	lds	r23, 0x17D1	; 0x8017d1 <timer0_millis+0x1>
   1a6c4:	80 91 d2 17 	lds	r24, 0x17D2	; 0x8017d2 <timer0_millis+0x2>
   1a6c8:	90 91 d3 17 	lds	r25, 0x17D3	; 0x8017d3 <timer0_millis+0x3>
	SREG = oldSREG;
   1a6cc:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1a6ce:	08 95       	ret

0001a6d0 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1a6d0:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1a6d2:	f8 94       	cli
	m = timer0_overflow_count;
   1a6d4:	80 91 d4 17 	lds	r24, 0x17D4	; 0x8017d4 <timer0_overflow_count>
   1a6d8:	90 91 d5 17 	lds	r25, 0x17D5	; 0x8017d5 <timer0_overflow_count+0x1>
   1a6dc:	a0 91 d6 17 	lds	r26, 0x17D6	; 0x8017d6 <timer0_overflow_count+0x2>
   1a6e0:	b0 91 d7 17 	lds	r27, 0x17D7	; 0x8017d7 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1a6e4:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1a6e6:	a8 9b       	sbis	0x15, 0	; 21
   1a6e8:	05 c0       	rjmp	.+10     	; 0x1a6f4 <micros+0x24>
   1a6ea:	2f 3f       	cpi	r18, 0xFF	; 255
   1a6ec:	19 f0       	breq	.+6      	; 0x1a6f4 <micros+0x24>
		m++;
   1a6ee:	01 96       	adiw	r24, 0x01	; 1
   1a6f0:	a1 1d       	adc	r26, r1
   1a6f2:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1a6f4:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1a6f6:	ba 2f       	mov	r27, r26
   1a6f8:	a9 2f       	mov	r26, r25
   1a6fa:	98 2f       	mov	r25, r24
   1a6fc:	88 27       	eor	r24, r24
   1a6fe:	82 0f       	add	r24, r18
   1a700:	91 1d       	adc	r25, r1
   1a702:	a1 1d       	adc	r26, r1
   1a704:	b1 1d       	adc	r27, r1
   1a706:	bc 01       	movw	r22, r24
   1a708:	cd 01       	movw	r24, r26
   1a70a:	42 e0       	ldi	r20, 0x02	; 2
   1a70c:	66 0f       	add	r22, r22
   1a70e:	77 1f       	adc	r23, r23
   1a710:	88 1f       	adc	r24, r24
   1a712:	99 1f       	adc	r25, r25
   1a714:	4a 95       	dec	r20
   1a716:	d1 f7       	brne	.-12     	; 0x1a70c <micros+0x3c>
}
   1a718:	08 95       	ret

0001a71a <delay>:

void delay(unsigned long ms)
{
   1a71a:	8f 92       	push	r8
   1a71c:	9f 92       	push	r9
   1a71e:	af 92       	push	r10
   1a720:	bf 92       	push	r11
   1a722:	cf 92       	push	r12
   1a724:	df 92       	push	r13
   1a726:	ef 92       	push	r14
   1a728:	ff 92       	push	r15
   1a72a:	6b 01       	movw	r12, r22
   1a72c:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1a72e:	d0 df       	rcall	.-96     	; 0x1a6d0 <micros>
   1a730:	4b 01       	movw	r8, r22
   1a732:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1a734:	c1 14       	cp	r12, r1
   1a736:	d1 04       	cpc	r13, r1
   1a738:	e1 04       	cpc	r14, r1
   1a73a:	f1 04       	cpc	r15, r1
   1a73c:	f9 f0       	breq	.+62     	; 0x1a77c <delay+0x62>
		yield();
   1a73e:	0e 94 bb de 	call	0x1bd76	; 0x1bd76 <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a742:	c6 df       	rcall	.-116    	; 0x1a6d0 <micros>
   1a744:	dc 01       	movw	r26, r24
   1a746:	cb 01       	movw	r24, r22
   1a748:	88 19       	sub	r24, r8
   1a74a:	99 09       	sbc	r25, r9
   1a74c:	aa 09       	sbc	r26, r10
   1a74e:	bb 09       	sbc	r27, r11
   1a750:	88 3e       	cpi	r24, 0xE8	; 232
   1a752:	93 40       	sbci	r25, 0x03	; 3
   1a754:	a1 05       	cpc	r26, r1
   1a756:	b1 05       	cpc	r27, r1
   1a758:	68 f3       	brcs	.-38     	; 0x1a734 <delay+0x1a>
			ms--;
   1a75a:	21 e0       	ldi	r18, 0x01	; 1
   1a75c:	c2 1a       	sub	r12, r18
   1a75e:	d1 08       	sbc	r13, r1
   1a760:	e1 08       	sbc	r14, r1
   1a762:	f1 08       	sbc	r15, r1
			start += 1000;
   1a764:	88 ee       	ldi	r24, 0xE8	; 232
   1a766:	88 0e       	add	r8, r24
   1a768:	83 e0       	ldi	r24, 0x03	; 3
   1a76a:	98 1e       	adc	r9, r24
   1a76c:	a1 1c       	adc	r10, r1
   1a76e:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a770:	c1 14       	cp	r12, r1
   1a772:	d1 04       	cpc	r13, r1
   1a774:	e1 04       	cpc	r14, r1
   1a776:	f1 04       	cpc	r15, r1
   1a778:	21 f7       	brne	.-56     	; 0x1a742 <delay+0x28>
   1a77a:	dc cf       	rjmp	.-72     	; 0x1a734 <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1a77c:	ff 90       	pop	r15
   1a77e:	ef 90       	pop	r14
   1a780:	df 90       	pop	r13
   1a782:	cf 90       	pop	r12
   1a784:	bf 90       	pop	r11
   1a786:	af 90       	pop	r10
   1a788:	9f 90       	pop	r9
   1a78a:	8f 90       	pop	r8
   1a78c:	08 95       	ret

0001a78e <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1a78e:	82 30       	cpi	r24, 0x02	; 2
   1a790:	91 05       	cpc	r25, r1
   1a792:	38 f0       	brcs	.+14     	; 0x1a7a2 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1a794:	88 0f       	add	r24, r24
   1a796:	99 1f       	adc	r25, r25
   1a798:	88 0f       	add	r24, r24
   1a79a:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1a79c:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1a79e:	01 97       	sbiw	r24, 0x01	; 1
   1a7a0:	f1 f7       	brne	.-4      	; 0x1a79e <delayMicroseconds+0x10>
   1a7a2:	08 95       	ret

0001a7a4 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1a7a4:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1a7a6:	84 b5       	in	r24, 0x24	; 36
   1a7a8:	82 60       	ori	r24, 0x02	; 2
   1a7aa:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1a7ac:	84 b5       	in	r24, 0x24	; 36
   1a7ae:	81 60       	ori	r24, 0x01	; 1
   1a7b0:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1a7b2:	85 b5       	in	r24, 0x25	; 37
   1a7b4:	82 60       	ori	r24, 0x02	; 2
   1a7b6:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1a7b8:	85 b5       	in	r24, 0x25	; 37
   1a7ba:	81 60       	ori	r24, 0x01	; 1
   1a7bc:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1a7be:	ee e6       	ldi	r30, 0x6E	; 110
   1a7c0:	f0 e0       	ldi	r31, 0x00	; 0
   1a7c2:	80 81       	ld	r24, Z
   1a7c4:	81 60       	ori	r24, 0x01	; 1
   1a7c6:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1a7c8:	e1 e8       	ldi	r30, 0x81	; 129
   1a7ca:	f0 e0       	ldi	r31, 0x00	; 0
   1a7cc:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1a7ce:	80 81       	ld	r24, Z
   1a7d0:	82 60       	ori	r24, 0x02	; 2
   1a7d2:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1a7d4:	80 81       	ld	r24, Z
   1a7d6:	81 60       	ori	r24, 0x01	; 1
   1a7d8:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1a7da:	e0 e8       	ldi	r30, 0x80	; 128
   1a7dc:	f0 e0       	ldi	r31, 0x00	; 0
   1a7de:	80 81       	ld	r24, Z
   1a7e0:	81 60       	ori	r24, 0x01	; 1
   1a7e2:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1a7e4:	e1 eb       	ldi	r30, 0xB1	; 177
   1a7e6:	f0 e0       	ldi	r31, 0x00	; 0
   1a7e8:	80 81       	ld	r24, Z
   1a7ea:	84 60       	ori	r24, 0x04	; 4
   1a7ec:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1a7ee:	e0 eb       	ldi	r30, 0xB0	; 176
   1a7f0:	f0 e0       	ldi	r31, 0x00	; 0
   1a7f2:	80 81       	ld	r24, Z
   1a7f4:	81 60       	ori	r24, 0x01	; 1
   1a7f6:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1a7f8:	e1 e9       	ldi	r30, 0x91	; 145
   1a7fa:	f0 e0       	ldi	r31, 0x00	; 0
   1a7fc:	80 81       	ld	r24, Z
   1a7fe:	82 60       	ori	r24, 0x02	; 2
   1a800:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1a802:	80 81       	ld	r24, Z
   1a804:	81 60       	ori	r24, 0x01	; 1
   1a806:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1a808:	e0 e9       	ldi	r30, 0x90	; 144
   1a80a:	f0 e0       	ldi	r31, 0x00	; 0
   1a80c:	80 81       	ld	r24, Z
   1a80e:	81 60       	ori	r24, 0x01	; 1
   1a810:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1a812:	e1 ea       	ldi	r30, 0xA1	; 161
   1a814:	f0 e0       	ldi	r31, 0x00	; 0
   1a816:	80 81       	ld	r24, Z
   1a818:	82 60       	ori	r24, 0x02	; 2
   1a81a:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1a81c:	80 81       	ld	r24, Z
   1a81e:	81 60       	ori	r24, 0x01	; 1
   1a820:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1a822:	e0 ea       	ldi	r30, 0xA0	; 160
   1a824:	f0 e0       	ldi	r31, 0x00	; 0
   1a826:	80 81       	ld	r24, Z
   1a828:	81 60       	ori	r24, 0x01	; 1
   1a82a:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1a82c:	e1 e2       	ldi	r30, 0x21	; 33
   1a82e:	f1 e0       	ldi	r31, 0x01	; 1
   1a830:	80 81       	ld	r24, Z
   1a832:	82 60       	ori	r24, 0x02	; 2
   1a834:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1a836:	80 81       	ld	r24, Z
   1a838:	81 60       	ori	r24, 0x01	; 1
   1a83a:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1a83c:	e0 e2       	ldi	r30, 0x20	; 32
   1a83e:	f1 e0       	ldi	r31, 0x01	; 1
   1a840:	80 81       	ld	r24, Z
   1a842:	81 60       	ori	r24, 0x01	; 1
   1a844:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1a846:	ea e7       	ldi	r30, 0x7A	; 122
   1a848:	f0 e0       	ldi	r31, 0x00	; 0
   1a84a:	80 81       	ld	r24, Z
   1a84c:	84 60       	ori	r24, 0x04	; 4
   1a84e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1a850:	80 81       	ld	r24, Z
   1a852:	82 60       	ori	r24, 0x02	; 2
   1a854:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1a856:	80 81       	ld	r24, Z
   1a858:	81 60       	ori	r24, 0x01	; 1
   1a85a:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1a85c:	80 81       	ld	r24, Z
   1a85e:	80 68       	ori	r24, 0x80	; 128
   1a860:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1a862:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1a866:	08 95       	ret

0001a868 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1a868:	90 e0       	ldi	r25, 0x00	; 0
   1a86a:	fc 01       	movw	r30, r24
   1a86c:	31 97       	sbiw	r30, 0x01	; 1
   1a86e:	e2 31       	cpi	r30, 0x12	; 18
   1a870:	f1 05       	cpc	r31, r1
   1a872:	08 f0       	brcs	.+2      	; 0x1a876 <turnOffPWM+0xe>
   1a874:	4e c0       	rjmp	.+156    	; 0x1a912 <turnOffPWM+0xaa>
   1a876:	88 27       	eor	r24, r24
   1a878:	e9 50       	subi	r30, 0x09	; 9
   1a87a:	ff 4f       	sbci	r31, 0xFF	; 255
   1a87c:	8f 4f       	sbci	r24, 0xFF	; 255
   1a87e:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1a882:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a886:	8f 77       	andi	r24, 0x7F	; 127
   1a888:	03 c0       	rjmp	.+6      	; 0x1a890 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1a88a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a88e:	8f 7d       	andi	r24, 0xDF	; 223
   1a890:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a894:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1a896:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a89a:	87 7f       	andi	r24, 0xF7	; 247
   1a89c:	f9 cf       	rjmp	.-14     	; 0x1a890 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1a89e:	84 b5       	in	r24, 0x24	; 36
   1a8a0:	8f 77       	andi	r24, 0x7F	; 127
   1a8a2:	02 c0       	rjmp	.+4      	; 0x1a8a8 <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1a8a4:	84 b5       	in	r24, 0x24	; 36
   1a8a6:	8f 7d       	andi	r24, 0xDF	; 223
   1a8a8:	84 bd       	out	0x24, r24	; 36
   1a8aa:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1a8ac:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a8b0:	8f 77       	andi	r24, 0x7F	; 127
   1a8b2:	03 c0       	rjmp	.+6      	; 0x1a8ba <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1a8b4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a8b8:	8f 7d       	andi	r24, 0xDF	; 223
   1a8ba:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a8be:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1a8c0:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a8c4:	8f 77       	andi	r24, 0x7F	; 127
   1a8c6:	07 c0       	rjmp	.+14     	; 0x1a8d6 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1a8c8:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a8cc:	8f 7d       	andi	r24, 0xDF	; 223
   1a8ce:	03 c0       	rjmp	.+6      	; 0x1a8d6 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1a8d0:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a8d4:	87 7f       	andi	r24, 0xF7	; 247
   1a8d6:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a8da:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1a8dc:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8e0:	8f 77       	andi	r24, 0x7F	; 127
   1a8e2:	07 c0       	rjmp	.+14     	; 0x1a8f2 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1a8e4:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8e8:	8f 7d       	andi	r24, 0xDF	; 223
   1a8ea:	03 c0       	rjmp	.+6      	; 0x1a8f2 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1a8ec:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8f0:	87 7f       	andi	r24, 0xF7	; 247
   1a8f2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8f6:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1a8f8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a8fc:	8f 77       	andi	r24, 0x7F	; 127
   1a8fe:	07 c0       	rjmp	.+14     	; 0x1a90e <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1a900:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a904:	8f 7d       	andi	r24, 0xDF	; 223
   1a906:	03 c0       	rjmp	.+6      	; 0x1a90e <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1a908:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a90c:	87 7f       	andi	r24, 0xF7	; 247
   1a90e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a912:	08 95       	ret

0001a914 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1a914:	cf 93       	push	r28
   1a916:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1a918:	90 e0       	ldi	r25, 0x00	; 0
   1a91a:	fc 01       	movw	r30, r24
   1a91c:	e4 5d       	subi	r30, 0xD4	; 212
   1a91e:	f9 4b       	sbci	r31, 0xB9	; 185
   1a920:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1a922:	fc 01       	movw	r30, r24
   1a924:	ee 58       	subi	r30, 0x8E	; 142
   1a926:	f9 4b       	sbci	r31, 0xB9	; 185
   1a928:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1a92a:	88 23       	and	r24, r24
   1a92c:	61 f1       	breq	.+88     	; 0x1a986 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1a92e:	90 e0       	ldi	r25, 0x00	; 0
   1a930:	88 0f       	add	r24, r24
   1a932:	99 1f       	adc	r25, r25
   1a934:	fc 01       	movw	r30, r24
   1a936:	e4 51       	subi	r30, 0x14	; 20
   1a938:	f9 4b       	sbci	r31, 0xB9	; 185
   1a93a:	c5 91       	lpm	r28, Z+
   1a93c:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1a93e:	fc 01       	movw	r30, r24
   1a940:	ee 52       	subi	r30, 0x2E	; 46
   1a942:	f9 4b       	sbci	r31, 0xB9	; 185
   1a944:	a5 91       	lpm	r26, Z+
   1a946:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1a948:	61 11       	cpse	r22, r1
   1a94a:	09 c0       	rjmp	.+18     	; 0x1a95e <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1a94c:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1a94e:	f8 94       	cli
		*reg &= ~bit;
   1a950:	88 81       	ld	r24, Y
   1a952:	20 95       	com	r18
   1a954:	82 23       	and	r24, r18
   1a956:	88 83       	st	Y, r24
		*out &= ~bit;
   1a958:	ec 91       	ld	r30, X
   1a95a:	2e 23       	and	r18, r30
   1a95c:	0b c0       	rjmp	.+22     	; 0x1a974 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1a95e:	62 30       	cpi	r22, 0x02	; 2
   1a960:	61 f4       	brne	.+24     	; 0x1a97a <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1a962:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1a964:	f8 94       	cli
		*reg &= ~bit;
   1a966:	88 81       	ld	r24, Y
   1a968:	32 2f       	mov	r19, r18
   1a96a:	30 95       	com	r19
   1a96c:	83 23       	and	r24, r19
   1a96e:	88 83       	st	Y, r24
		*out |= bit;
   1a970:	ec 91       	ld	r30, X
   1a972:	2e 2b       	or	r18, r30
   1a974:	2c 93       	st	X, r18
		SREG = oldSREG;
   1a976:	9f bf       	out	0x3f, r25	; 63
   1a978:	06 c0       	rjmp	.+12     	; 0x1a986 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1a97a:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1a97c:	f8 94       	cli
		*reg |= bit;
   1a97e:	e8 81       	ld	r30, Y
   1a980:	2e 2b       	or	r18, r30
   1a982:	28 83       	st	Y, r18
		SREG = oldSREG;
   1a984:	8f bf       	out	0x3f, r24	; 63
	}
}
   1a986:	df 91       	pop	r29
   1a988:	cf 91       	pop	r28
   1a98a:	08 95       	ret

0001a98c <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1a98c:	1f 93       	push	r17
   1a98e:	cf 93       	push	r28
   1a990:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1a992:	28 2f       	mov	r18, r24
   1a994:	30 e0       	ldi	r19, 0x00	; 0
   1a996:	f9 01       	movw	r30, r18
   1a998:	ea 51       	subi	r30, 0x1A	; 26
   1a99a:	fa 4b       	sbci	r31, 0xBA	; 186
   1a99c:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1a99e:	f9 01       	movw	r30, r18
   1a9a0:	e4 5d       	subi	r30, 0xD4	; 212
   1a9a2:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9a4:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1a9a6:	f9 01       	movw	r30, r18
   1a9a8:	ee 58       	subi	r30, 0x8E	; 142
   1a9aa:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9ac:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1a9ae:	cc 23       	and	r28, r28
   1a9b0:	b9 f0       	breq	.+46     	; 0x1a9e0 <digitalWrite+0x54>
   1a9b2:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1a9b4:	81 11       	cpse	r24, r1
   1a9b6:	58 df       	rcall	.-336    	; 0x1a868 <turnOffPWM>

	out = portOutputRegister(port);
   1a9b8:	ec 2f       	mov	r30, r28
   1a9ba:	f0 e0       	ldi	r31, 0x00	; 0
   1a9bc:	ee 0f       	add	r30, r30
   1a9be:	ff 1f       	adc	r31, r31
   1a9c0:	ee 52       	subi	r30, 0x2E	; 46
   1a9c2:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9c4:	a5 91       	lpm	r26, Z+
   1a9c6:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1a9c8:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1a9ca:	f8 94       	cli

	if (val == LOW) {
   1a9cc:	11 11       	cpse	r17, r1
   1a9ce:	04 c0       	rjmp	.+8      	; 0x1a9d8 <digitalWrite+0x4c>
		*out &= ~bit;
   1a9d0:	8c 91       	ld	r24, X
   1a9d2:	d0 95       	com	r29
   1a9d4:	d8 23       	and	r29, r24
   1a9d6:	02 c0       	rjmp	.+4      	; 0x1a9dc <digitalWrite+0x50>
	} else {
		*out |= bit;
   1a9d8:	ec 91       	ld	r30, X
   1a9da:	de 2b       	or	r29, r30
   1a9dc:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1a9de:	9f bf       	out	0x3f, r25	; 63
}
   1a9e0:	df 91       	pop	r29
   1a9e2:	cf 91       	pop	r28
   1a9e4:	1f 91       	pop	r17
   1a9e6:	08 95       	ret

0001a9e8 <digitalRead>:

int digitalRead(uint8_t pin)
{
   1a9e8:	cf 93       	push	r28
   1a9ea:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1a9ec:	28 2f       	mov	r18, r24
   1a9ee:	30 e0       	ldi	r19, 0x00	; 0
   1a9f0:	f9 01       	movw	r30, r18
   1a9f2:	ea 51       	subi	r30, 0x1A	; 26
   1a9f4:	fa 4b       	sbci	r31, 0xBA	; 186
   1a9f6:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1a9f8:	f9 01       	movw	r30, r18
   1a9fa:	e4 5d       	subi	r30, 0xD4	; 212
   1a9fc:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9fe:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1aa00:	f9 01       	movw	r30, r18
   1aa02:	ee 58       	subi	r30, 0x8E	; 142
   1aa04:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa06:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1aa08:	cc 23       	and	r28, r28
   1aa0a:	89 f0       	breq	.+34     	; 0x1aa2e <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1aa0c:	81 11       	cpse	r24, r1
   1aa0e:	2c df       	rcall	.-424    	; 0x1a868 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1aa10:	ec 2f       	mov	r30, r28
   1aa12:	f0 e0       	ldi	r31, 0x00	; 0
   1aa14:	ee 0f       	add	r30, r30
   1aa16:	ff 1f       	adc	r31, r31
   1aa18:	e8 54       	subi	r30, 0x48	; 72
   1aa1a:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa1c:	a5 91       	lpm	r26, Z+
   1aa1e:	b4 91       	lpm	r27, Z
   1aa20:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1aa22:	ed 23       	and	r30, r29
   1aa24:	81 e0       	ldi	r24, 0x01	; 1
   1aa26:	90 e0       	ldi	r25, 0x00	; 0
   1aa28:	21 f4       	brne	.+8      	; 0x1aa32 <digitalRead+0x4a>
   1aa2a:	80 e0       	ldi	r24, 0x00	; 0
   1aa2c:	02 c0       	rjmp	.+4      	; 0x1aa32 <digitalRead+0x4a>
   1aa2e:	80 e0       	ldi	r24, 0x00	; 0
   1aa30:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1aa32:	df 91       	pop	r29
   1aa34:	cf 91       	pop	r28
   1aa36:	08 95       	ret

0001aa38 <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1aa38:	fc 01       	movw	r30, r24
   1aa3a:	77 8b       	std	Z+23, r23	; 0x17
   1aa3c:	66 8b       	std	Z+22, r22	; 0x16
   1aa3e:	24 8f       	std	Z+28, r18	; 0x1c
   1aa40:	35 8f       	std	Z+29, r19	; 0x1d
   1aa42:	46 8f       	std	Z+30, r20	; 0x1e
   1aa44:	57 8f       	std	Z+31, r21	; 0x1f
   1aa46:	80 e0       	ldi	r24, 0x00	; 0
   1aa48:	90 e0       	ldi	r25, 0x00	; 0
   1aa4a:	a0 e0       	ldi	r26, 0x00	; 0
   1aa4c:	b4 e4       	ldi	r27, 0x44	; 68
   1aa4e:	80 af       	std	Z+56, r24	; 0x38
   1aa50:	91 af       	std	Z+57, r25	; 0x39
   1aa52:	a2 af       	std	Z+58, r26	; 0x3a
   1aa54:	b3 af       	std	Z+59, r27	; 0x3b
   1aa56:	08 95       	ret

0001aa58 <_ZN13EnergyMonitor7readVccEv>:
   1aa58:	8e e5       	ldi	r24, 0x5E	; 94
   1aa5a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1aa5e:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1aa62:	87 7f       	andi	r24, 0xF7	; 247
   1aa64:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1aa68:	62 e0       	ldi	r22, 0x02	; 2
   1aa6a:	70 e0       	ldi	r23, 0x00	; 0
   1aa6c:	80 e0       	ldi	r24, 0x00	; 0
   1aa6e:	90 e0       	ldi	r25, 0x00	; 0
   1aa70:	54 de       	rcall	.-856    	; 0x1a71a <delay>
   1aa72:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa76:	80 64       	ori	r24, 0x40	; 64
   1aa78:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa7c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa80:	86 fd       	sbrc	r24, 6
   1aa82:	fc cf       	rjmp	.-8      	; 0x1aa7c <_ZN13EnergyMonitor7readVccEv+0x24>
   1aa84:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1aa88:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1aa8c:	30 e0       	ldi	r19, 0x00	; 0
   1aa8e:	32 2f       	mov	r19, r18
   1aa90:	22 27       	eor	r18, r18
   1aa92:	a9 01       	movw	r20, r18
   1aa94:	33 0f       	add	r19, r19
   1aa96:	66 0b       	sbc	r22, r22
   1aa98:	77 0b       	sbc	r23, r23
   1aa9a:	9a 01       	movw	r18, r20
   1aa9c:	ab 01       	movw	r20, r22
   1aa9e:	28 2b       	or	r18, r24
   1aaa0:	60 e0       	ldi	r22, 0x00	; 0
   1aaa2:	70 e3       	ldi	r23, 0x30	; 48
   1aaa4:	81 e1       	ldi	r24, 0x11	; 17
   1aaa6:	90 e0       	ldi	r25, 0x00	; 0
   1aaa8:	0e 94 7f e7 	call	0x1cefe	; 0x1cefe <__divmodsi4>
   1aaac:	ca 01       	movw	r24, r20
   1aaae:	b9 01       	movw	r22, r18
   1aab0:	08 95       	ret

0001aab2 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1aab2:	2f 92       	push	r2
   1aab4:	3f 92       	push	r3
   1aab6:	4f 92       	push	r4
   1aab8:	5f 92       	push	r5
   1aaba:	6f 92       	push	r6
   1aabc:	7f 92       	push	r7
   1aabe:	8f 92       	push	r8
   1aac0:	9f 92       	push	r9
   1aac2:	af 92       	push	r10
   1aac4:	bf 92       	push	r11
   1aac6:	cf 92       	push	r12
   1aac8:	df 92       	push	r13
   1aaca:	ef 92       	push	r14
   1aacc:	ff 92       	push	r15
   1aace:	0f 93       	push	r16
   1aad0:	1f 93       	push	r17
   1aad2:	cf 93       	push	r28
   1aad4:	df 93       	push	r29
   1aad6:	00 d0       	rcall	.+0      	; 0x1aad8 <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1aad8:	00 d0       	rcall	.+0      	; 0x1aada <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1aada:	cd b7       	in	r28, 0x3d	; 61
   1aadc:	de b7       	in	r29, 0x3e	; 62
   1aade:	9e 83       	std	Y+6, r25	; 0x06
   1aae0:	8d 83       	std	Y+5, r24	; 0x05
   1aae2:	7a 83       	std	Y+2, r23	; 0x02
   1aae4:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1aae6:	b8 df       	rcall	.-144    	; 0x1aa58 <_ZN13EnergyMonitor7readVccEv>
   1aae8:	6b 01       	movw	r12, r22
   1aaea:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1aaec:	00 e0       	ldi	r16, 0x00	; 0
   1aaee:	10 e0       	ldi	r17, 0x00	; 0
   1aaf0:	8d 81       	ldd	r24, Y+5	; 0x05
   1aaf2:	9e 81       	ldd	r25, Y+6	; 0x06
   1aaf4:	84 5b       	subi	r24, 0xB4	; 180
   1aaf6:	9f 4f       	sbci	r25, 0xFF	; 255
   1aaf8:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1aafa:	ed 81       	ldd	r30, Y+5	; 0x05
   1aafc:	fe 81       	ldd	r31, Y+6	; 0x06
   1aafe:	e8 5b       	subi	r30, 0xB8	; 184
   1ab00:	ff 4f       	sbci	r31, 0xFF	; 255
   1ab02:	fc 83       	std	Y+4, r31	; 0x04
   1ab04:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1ab06:	89 81       	ldd	r24, Y+1	; 0x01
   1ab08:	9a 81       	ldd	r25, Y+2	; 0x02
   1ab0a:	08 17       	cp	r16, r24
   1ab0c:	19 07       	cpc	r17, r25
   1ab0e:	09 f4       	brne	.+2      	; 0x1ab12 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1ab10:	4f c0       	rjmp	.+158    	; 0x1abb0 <_ZN13EnergyMonitor8calcIrmsEj+0xfe>
  {
    sampleI = analogRead(inPinI);
   1ab12:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab14:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab16:	86 89       	ldd	r24, Z+22	; 0x16
   1ab18:	0e 94 8b e0 	call	0x1c116	; 0x1c116 <analogRead>
   1ab1c:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab1e:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab20:	97 a3       	std	Z+39, r25	; 0x27
   1ab22:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1ab24:	bc 01       	movw	r22, r24
   1ab26:	99 0f       	add	r25, r25
   1ab28:	88 0b       	sbc	r24, r24
   1ab2a:	99 0b       	sbc	r25, r25
   1ab2c:	34 d8       	rcall	.-3992   	; 0x19b96 <__floatsisf>
   1ab2e:	4b 01       	movw	r8, r22
   1ab30:	5c 01       	movw	r10, r24
   1ab32:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab34:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab36:	40 ac       	ldd	r4, Z+56	; 0x38
   1ab38:	51 ac       	ldd	r5, Z+57	; 0x39
   1ab3a:	62 ac       	ldd	r6, Z+58	; 0x3a
   1ab3c:	73 ac       	ldd	r7, Z+59	; 0x3b
   1ab3e:	a3 01       	movw	r20, r6
   1ab40:	92 01       	movw	r18, r4
   1ab42:	0e 94 cc cc 	call	0x19998	; 0x19998 <__subsf3>
   1ab46:	20 e0       	ldi	r18, 0x00	; 0
   1ab48:	30 e0       	ldi	r19, 0x00	; 0
   1ab4a:	40 e8       	ldi	r20, 0x80	; 128
   1ab4c:	5a e3       	ldi	r21, 0x3A	; 58
   1ab4e:	d7 d8       	rcall	.-3666   	; 0x19cfe <__mulsf3>
   1ab50:	a3 01       	movw	r20, r6
   1ab52:	92 01       	movw	r18, r4
   1ab54:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   1ab58:	9b 01       	movw	r18, r22
   1ab5a:	ac 01       	movw	r20, r24
   1ab5c:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab5e:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab60:	60 af       	std	Z+56, r22	; 0x38
   1ab62:	71 af       	std	Z+57, r23	; 0x39
   1ab64:	82 af       	std	Z+58, r24	; 0x3a
   1ab66:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1ab68:	c5 01       	movw	r24, r10
   1ab6a:	b4 01       	movw	r22, r8
   1ab6c:	0e 94 cc cc 	call	0x19998	; 0x19998 <__subsf3>
   1ab70:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab72:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab74:	60 ab       	std	Z+48, r22	; 0x30
   1ab76:	71 ab       	std	Z+49, r23	; 0x31
   1ab78:	82 ab       	std	Z+50, r24	; 0x32

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1ab7a:	93 ab       	std	Z+51, r25	; 0x33
   1ab7c:	9b 01       	movw	r18, r22
   1ab7e:	ac 01       	movw	r20, r24
   1ab80:	be d8       	rcall	.-3716   	; 0x19cfe <__mulsf3>
   1ab82:	9b 01       	movw	r18, r22
   1ab84:	ac 01       	movw	r20, r24
   1ab86:	eb 81       	ldd	r30, Y+3	; 0x03
   1ab88:	fc 81       	ldd	r31, Y+4	; 0x04
   1ab8a:	60 83       	st	Z, r22
   1ab8c:	71 83       	std	Z+1, r23	; 0x01
   1ab8e:	82 83       	std	Z+2, r24	; 0x02
   1ab90:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1ab92:	f1 01       	movw	r30, r2
   1ab94:	60 81       	ld	r22, Z
   1ab96:	71 81       	ldd	r23, Z+1	; 0x01
   1ab98:	82 81       	ldd	r24, Z+2	; 0x02
   1ab9a:	93 81       	ldd	r25, Z+3	; 0x03
   1ab9c:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   1aba0:	f1 01       	movw	r30, r2
   1aba2:	60 83       	st	Z, r22
   1aba4:	71 83       	std	Z+1, r23	; 0x01
   1aba6:	82 83       	std	Z+2, r24	; 0x02
   1aba8:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1abaa:	0f 5f       	subi	r16, 0xFF	; 255
   1abac:	1f 4f       	sbci	r17, 0xFF	; 255
   1abae:	ab cf       	rjmp	.-170    	; 0x1ab06 <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1abb0:	b8 01       	movw	r22, r16
   1abb2:	80 e0       	ldi	r24, 0x00	; 0
   1abb4:	90 e0       	ldi	r25, 0x00	; 0
   1abb6:	0e 94 c9 cd 	call	0x19b92	; 0x19b92 <__floatunsisf>
   1abba:	9b 01       	movw	r18, r22
   1abbc:	ac 01       	movw	r20, r24
   1abbe:	f1 01       	movw	r30, r2
   1abc0:	60 81       	ld	r22, Z
   1abc2:	71 81       	ldd	r23, Z+1	; 0x01
   1abc4:	82 81       	ldd	r24, Z+2	; 0x02
   1abc6:	93 81       	ldd	r25, Z+3	; 0x03
   1abc8:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
   1abcc:	0e 94 b1 e5 	call	0x1cb62	; 0x1cb62 <sqrt>
   1abd0:	4b 01       	movw	r8, r22
   1abd2:	5c 01       	movw	r10, r24
   1abd4:	b6 01       	movw	r22, r12
   1abd6:	dd 0c       	add	r13, r13
   1abd8:	88 0b       	sbc	r24, r24
   1abda:	99 0b       	sbc	r25, r25
   1abdc:	0e 94 cb cd 	call	0x19b96	; 0x19b96 <__floatsisf>
   1abe0:	20 e0       	ldi	r18, 0x00	; 0
   1abe2:	30 e0       	ldi	r19, 0x00	; 0
   1abe4:	4a e7       	ldi	r20, 0x7A	; 122
   1abe6:	54 e4       	ldi	r21, 0x44	; 68
   1abe8:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
   1abec:	20 e0       	ldi	r18, 0x00	; 0
   1abee:	30 e0       	ldi	r19, 0x00	; 0
   1abf0:	40 e8       	ldi	r20, 0x80	; 128
   1abf2:	5a e3       	ldi	r21, 0x3A	; 58
   1abf4:	84 d8       	rcall	.-3832   	; 0x19cfe <__mulsf3>
   1abf6:	ed 81       	ldd	r30, Y+5	; 0x05
   1abf8:	fe 81       	ldd	r31, Y+6	; 0x06
   1abfa:	24 8d       	ldd	r18, Z+28	; 0x1c
   1abfc:	35 8d       	ldd	r19, Z+29	; 0x1d
   1abfe:	46 8d       	ldd	r20, Z+30	; 0x1e
   1ac00:	57 8d       	ldd	r21, Z+31	; 0x1f
   1ac02:	7d d8       	rcall	.-3846   	; 0x19cfe <__mulsf3>
   1ac04:	a5 01       	movw	r20, r10
   1ac06:	94 01       	movw	r18, r8
   1ac08:	7a d8       	rcall	.-3852   	; 0x19cfe <__mulsf3>
   1ac0a:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac0c:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac0e:	60 8b       	std	Z+16, r22	; 0x10
   1ac10:	71 8b       	std	Z+17, r23	; 0x11
   1ac12:	82 8b       	std	Z+18, r24	; 0x12
   1ac14:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1ac16:	f1 01       	movw	r30, r2
   1ac18:	10 82       	st	Z, r1
   1ac1a:	11 82       	std	Z+1, r1	; 0x01
   1ac1c:	12 82       	std	Z+2, r1	; 0x02
   1ac1e:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1ac20:	26 96       	adiw	r28, 0x06	; 6
   1ac22:	0f b6       	in	r0, 0x3f	; 63
   1ac24:	f8 94       	cli
   1ac26:	de bf       	out	0x3e, r29	; 62
   1ac28:	0f be       	out	0x3f, r0	; 63
   1ac2a:	cd bf       	out	0x3d, r28	; 61
   1ac2c:	df 91       	pop	r29
   1ac2e:	cf 91       	pop	r28
   1ac30:	1f 91       	pop	r17
   1ac32:	0f 91       	pop	r16
   1ac34:	ff 90       	pop	r15
   1ac36:	ef 90       	pop	r14
   1ac38:	df 90       	pop	r13
   1ac3a:	cf 90       	pop	r12
   1ac3c:	bf 90       	pop	r11
   1ac3e:	af 90       	pop	r10
   1ac40:	9f 90       	pop	r9
   1ac42:	8f 90       	pop	r8
   1ac44:	7f 90       	pop	r7
   1ac46:	6f 90       	pop	r6
   1ac48:	5f 90       	pop	r5
   1ac4a:	4f 90       	pop	r4
   1ac4c:	3f 90       	pop	r3
   1ac4e:	2f 90       	pop	r2
   1ac50:	08 95       	ret

0001ac52 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1ac52:	fc 01       	movw	r30, r24
   1ac54:	13 82       	std	Z+3, r1	; 0x03
   1ac56:	12 82       	std	Z+2, r1	; 0x02
   1ac58:	8d ef       	ldi	r24, 0xFD	; 253
   1ac5a:	97 e0       	ldi	r25, 0x07	; 7
   1ac5c:	91 83       	std	Z+1, r25	; 0x01
   1ac5e:	80 83       	st	Z, r24
   1ac60:	64 83       	std	Z+4, r22	; 0x04
   1ac62:	41 87       	std	Z+9, r20	; 0x09
   1ac64:	22 87       	std	Z+10, r18	; 0x0a
   1ac66:	13 86       	std	Z+11, r1	; 0x0b
   1ac68:	08 95       	ret

0001ac6a <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1ac6a:	1f 93       	push	r17
   1ac6c:	cf 93       	push	r28
   1ac6e:	df 93       	push	r29
   1ac70:	ec 01       	movw	r28, r24
   1ac72:	16 2f       	mov	r17, r22
   1ac74:	6c 81       	ldd	r22, Y+4	; 0x04
   1ac76:	8a ee       	ldi	r24, 0xEA	; 234
   1ac78:	97 e1       	ldi	r25, 0x17	; 23
   1ac7a:	0e 94 98 de 	call	0x1bd30	; 0x1bd30 <_ZN7TwoWire17beginTransmissionEh>
   1ac7e:	6b 85       	ldd	r22, Y+11	; 0x0b
   1ac80:	61 2b       	or	r22, r17
   1ac82:	8a ee       	ldi	r24, 0xEA	; 234
   1ac84:	97 e1       	ldi	r25, 0x17	; 23
   1ac86:	0e 94 4b de 	call	0x1bc96	; 0x1bc96 <_ZN7TwoWire5writeEh>
   1ac8a:	8a ee       	ldi	r24, 0xEA	; 234
   1ac8c:	97 e1       	ldi	r25, 0x17	; 23
   1ac8e:	df 91       	pop	r29
   1ac90:	cf 91       	pop	r28
   1ac92:	1f 91       	pop	r17
   1ac94:	0c 94 b4 de 	jmp	0x1bd68	; 0x1bd68 <_ZN7TwoWire15endTransmissionEv>

0001ac98 <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1ac98:	0f 93       	push	r16
   1ac9a:	1f 93       	push	r17
   1ac9c:	cf 93       	push	r28
   1ac9e:	8c 01       	movw	r16, r24
   1aca0:	c6 2f       	mov	r28, r22
   1aca2:	64 60       	ori	r22, 0x04	; 4
   1aca4:	e2 df       	rcall	.-60     	; 0x1ac6a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1aca6:	81 e0       	ldi	r24, 0x01	; 1
   1aca8:	90 e0       	ldi	r25, 0x00	; 0
   1acaa:	71 dd       	rcall	.-1310   	; 0x1a78e <delayMicroseconds>
   1acac:	6c 2f       	mov	r22, r28
   1acae:	6b 7f       	andi	r22, 0xFB	; 251
   1acb0:	c8 01       	movw	r24, r16
   1acb2:	db df       	rcall	.-74     	; 0x1ac6a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1acb4:	82 e3       	ldi	r24, 0x32	; 50
   1acb6:	90 e0       	ldi	r25, 0x00	; 0
   1acb8:	cf 91       	pop	r28
   1acba:	1f 91       	pop	r17
   1acbc:	0f 91       	pop	r16
   1acbe:	67 cd       	rjmp	.-1330   	; 0x1a78e <delayMicroseconds>

0001acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1acc0:	1f 93       	push	r17
   1acc2:	cf 93       	push	r28
   1acc4:	df 93       	push	r29
   1acc6:	ec 01       	movw	r28, r24
   1acc8:	16 2f       	mov	r17, r22
   1acca:	cf df       	rcall	.-98     	; 0x1ac6a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1accc:	61 2f       	mov	r22, r17
   1acce:	ce 01       	movw	r24, r28
   1acd0:	df 91       	pop	r29
   1acd2:	cf 91       	pop	r28
   1acd4:	1f 91       	pop	r17
   1acd6:	e0 cf       	rjmp	.-64     	; 0x1ac98 <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001acd8 <_ZN17LiquidCrystal_I2C4sendEhh>:
   1acd8:	0f 93       	push	r16
   1acda:	1f 93       	push	r17
   1acdc:	cf 93       	push	r28
   1acde:	df 93       	push	r29
   1ace0:	8c 01       	movw	r16, r24
   1ace2:	c6 2f       	mov	r28, r22
   1ace4:	d4 2f       	mov	r29, r20
   1ace6:	60 7f       	andi	r22, 0xF0	; 240
   1ace8:	64 2b       	or	r22, r20
   1acea:	ea df       	rcall	.-44     	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1acec:	80 e1       	ldi	r24, 0x10	; 16
   1acee:	c8 9f       	mul	r28, r24
   1acf0:	b0 01       	movw	r22, r0
   1acf2:	11 24       	eor	r1, r1
   1acf4:	6d 2b       	or	r22, r29
   1acf6:	c8 01       	movw	r24, r16
   1acf8:	df 91       	pop	r29
   1acfa:	cf 91       	pop	r28
   1acfc:	1f 91       	pop	r17
   1acfe:	0f 91       	pop	r16
   1ad00:	df cf       	rjmp	.-66     	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001ad02 <_ZN17LiquidCrystal_I2C7commandEh>:
   1ad02:	40 e0       	ldi	r20, 0x00	; 0
   1ad04:	e9 cf       	rjmp	.-46     	; 0x1acd8 <_ZN17LiquidCrystal_I2C4sendEhh>

0001ad06 <_ZN17LiquidCrystal_I2C5clearEv>:
   1ad06:	61 e0       	ldi	r22, 0x01	; 1
   1ad08:	fc df       	rcall	.-8      	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>
   1ad0a:	80 ed       	ldi	r24, 0xD0	; 208
   1ad0c:	97 e0       	ldi	r25, 0x07	; 7
   1ad0e:	3f cd       	rjmp	.-1410   	; 0x1a78e <delayMicroseconds>

0001ad10 <_ZN17LiquidCrystal_I2C4homeEv>:
   1ad10:	62 e0       	ldi	r22, 0x02	; 2
   1ad12:	f7 df       	rcall	.-18     	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>
   1ad14:	80 ed       	ldi	r24, 0xD0	; 208
   1ad16:	97 e0       	ldi	r25, 0x07	; 7
   1ad18:	3a cd       	rjmp	.-1420   	; 0x1a78e <delayMicroseconds>

0001ad1a <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1ad1a:	cf 93       	push	r28
   1ad1c:	df 93       	push	r29
   1ad1e:	cd b7       	in	r28, 0x3d	; 61
   1ad20:	de b7       	in	r29, 0x3e	; 62
   1ad22:	28 97       	sbiw	r28, 0x08	; 8
   1ad24:	0f b6       	in	r0, 0x3f	; 63
   1ad26:	f8 94       	cli
   1ad28:	de bf       	out	0x3e, r29	; 62
   1ad2a:	0f be       	out	0x3f, r0	; 63
   1ad2c:	cd bf       	out	0x3d, r28	; 61
   1ad2e:	9c 01       	movw	r18, r24
   1ad30:	88 e0       	ldi	r24, 0x08	; 8
   1ad32:	e3 e7       	ldi	r30, 0x73	; 115
   1ad34:	f2 e0       	ldi	r31, 0x02	; 2
   1ad36:	de 01       	movw	r26, r28
   1ad38:	11 96       	adiw	r26, 0x01	; 1
   1ad3a:	01 90       	ld	r0, Z+
   1ad3c:	0d 92       	st	X+, r0
   1ad3e:	8a 95       	dec	r24
   1ad40:	e1 f7       	brne	.-8      	; 0x1ad3a <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1ad42:	f9 01       	movw	r30, r18
   1ad44:	80 85       	ldd	r24, Z+8	; 0x08
   1ad46:	84 17       	cp	r24, r20
   1ad48:	10 f4       	brcc	.+4      	; 0x1ad4e <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1ad4a:	4f ef       	ldi	r20, 0xFF	; 255
   1ad4c:	48 0f       	add	r20, r24
   1ad4e:	fe 01       	movw	r30, r28
   1ad50:	31 96       	adiw	r30, 0x01	; 1
   1ad52:	e4 0f       	add	r30, r20
   1ad54:	f1 1d       	adc	r31, r1
   1ad56:	e4 0f       	add	r30, r20
   1ad58:	f1 1d       	adc	r31, r1
   1ad5a:	90 81       	ld	r25, Z
   1ad5c:	69 0f       	add	r22, r25
   1ad5e:	60 68       	ori	r22, 0x80	; 128
   1ad60:	c9 01       	movw	r24, r18
   1ad62:	28 96       	adiw	r28, 0x08	; 8
   1ad64:	0f b6       	in	r0, 0x3f	; 63
   1ad66:	f8 94       	cli
   1ad68:	de bf       	out	0x3e, r29	; 62
   1ad6a:	0f be       	out	0x3f, r0	; 63
   1ad6c:	cd bf       	out	0x3d, r28	; 61
   1ad6e:	df 91       	pop	r29
   1ad70:	cf 91       	pop	r28
   1ad72:	c7 cf       	rjmp	.-114    	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>

0001ad74 <_ZN17LiquidCrystal_I2C7displayEv>:
   1ad74:	fc 01       	movw	r30, r24
   1ad76:	66 81       	ldd	r22, Z+6	; 0x06
   1ad78:	26 2f       	mov	r18, r22
   1ad7a:	24 60       	ori	r18, 0x04	; 4
   1ad7c:	26 83       	std	Z+6, r18	; 0x06
   1ad7e:	6c 60       	ori	r22, 0x0C	; 12
   1ad80:	c0 cf       	rjmp	.-128    	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>

0001ad82 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1ad82:	ef 92       	push	r14
   1ad84:	ff 92       	push	r15
   1ad86:	0f 93       	push	r16
   1ad88:	1f 93       	push	r17
   1ad8a:	cf 93       	push	r28
   1ad8c:	df 93       	push	r29
   1ad8e:	8c 01       	movw	r16, r24
   1ad90:	7a 01       	movw	r14, r20
   1ad92:	67 70       	andi	r22, 0x07	; 7
   1ad94:	88 e0       	ldi	r24, 0x08	; 8
   1ad96:	68 9f       	mul	r22, r24
   1ad98:	b0 01       	movw	r22, r0
   1ad9a:	11 24       	eor	r1, r1
   1ad9c:	60 64       	ori	r22, 0x40	; 64
   1ad9e:	c8 01       	movw	r24, r16
   1ada0:	b0 df       	rcall	.-160    	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>
   1ada2:	e7 01       	movw	r28, r14
   1ada4:	a8 e0       	ldi	r26, 0x08	; 8
   1ada6:	ea 0e       	add	r14, r26
   1ada8:	f1 1c       	adc	r15, r1
   1adaa:	69 91       	ld	r22, Y+
   1adac:	d8 01       	movw	r26, r16
   1adae:	ed 91       	ld	r30, X+
   1adb0:	fc 91       	ld	r31, X
   1adb2:	01 90       	ld	r0, Z+
   1adb4:	f0 81       	ld	r31, Z
   1adb6:	e0 2d       	mov	r30, r0
   1adb8:	c8 01       	movw	r24, r16
   1adba:	19 95       	eicall
   1adbc:	ce 15       	cp	r28, r14
   1adbe:	df 05       	cpc	r29, r15
   1adc0:	a1 f7       	brne	.-24     	; 0x1adaa <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1adc2:	df 91       	pop	r29
   1adc4:	cf 91       	pop	r28
   1adc6:	1f 91       	pop	r17
   1adc8:	0f 91       	pop	r16
   1adca:	ff 90       	pop	r15
   1adcc:	ef 90       	pop	r14
   1adce:	08 95       	ret

0001add0 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1add0:	41 e0       	ldi	r20, 0x01	; 1
   1add2:	82 df       	rcall	.-252    	; 0x1acd8 <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1add4:	81 e0       	ldi	r24, 0x01	; 1
   1add6:	90 e0       	ldi	r25, 0x00	; 0
   1add8:	08 95       	ret

0001adda <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1adda:	cf 93       	push	r28
   1addc:	df 93       	push	r29
   1adde:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1ade0:	42 30       	cpi	r20, 0x02	; 2
   1ade2:	18 f0       	brcs	.+6      	; 0x1adea <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1ade4:	8d 81       	ldd	r24, Y+5	; 0x05
   1ade6:	88 60       	ori	r24, 0x08	; 8
   1ade8:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1adea:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1adec:	22 23       	and	r18, r18
   1adee:	29 f0       	breq	.+10     	; 0x1adfa <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1adf0:	41 30       	cpi	r20, 0x01	; 1
   1adf2:	19 f4       	brne	.+6      	; 0x1adfa <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1adf4:	8d 81       	ldd	r24, Y+5	; 0x05
   1adf6:	84 60       	ori	r24, 0x04	; 4
   1adf8:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1adfa:	62 e3       	ldi	r22, 0x32	; 50
   1adfc:	70 e0       	ldi	r23, 0x00	; 0
   1adfe:	80 e0       	ldi	r24, 0x00	; 0
   1ae00:	90 e0       	ldi	r25, 0x00	; 0
   1ae02:	8b dc       	rcall	.-1770   	; 0x1a71a <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1ae04:	88 e0       	ldi	r24, 0x08	; 8
   1ae06:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1ae08:	60 e0       	ldi	r22, 0x00	; 0
   1ae0a:	ce 01       	movw	r24, r28
   1ae0c:	2e df       	rcall	.-420    	; 0x1ac6a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1ae0e:	68 ee       	ldi	r22, 0xE8	; 232
   1ae10:	73 e0       	ldi	r23, 0x03	; 3
   1ae12:	80 e0       	ldi	r24, 0x00	; 0
   1ae14:	90 e0       	ldi	r25, 0x00	; 0
   1ae16:	81 dc       	rcall	.-1790   	; 0x1a71a <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1ae18:	60 e3       	ldi	r22, 0x30	; 48
   1ae1a:	ce 01       	movw	r24, r28
   1ae1c:	51 df       	rcall	.-350    	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1ae1e:	84 e9       	ldi	r24, 0x94	; 148
   1ae20:	91 e1       	ldi	r25, 0x11	; 17
   1ae22:	b5 dc       	rcall	.-1686   	; 0x1a78e <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1ae24:	60 e3       	ldi	r22, 0x30	; 48
   1ae26:	ce 01       	movw	r24, r28
   1ae28:	4b df       	rcall	.-362    	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1ae2a:	84 e9       	ldi	r24, 0x94	; 148
   1ae2c:	91 e1       	ldi	r25, 0x11	; 17
   1ae2e:	af dc       	rcall	.-1698   	; 0x1a78e <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1ae30:	60 e3       	ldi	r22, 0x30	; 48
   1ae32:	ce 01       	movw	r24, r28
   1ae34:	45 df       	rcall	.-374    	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1ae36:	86 e9       	ldi	r24, 0x96	; 150
   1ae38:	90 e0       	ldi	r25, 0x00	; 0
   1ae3a:	a9 dc       	rcall	.-1710   	; 0x1a78e <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1ae3c:	60 e2       	ldi	r22, 0x20	; 32
   1ae3e:	ce 01       	movw	r24, r28
   1ae40:	3f df       	rcall	.-386    	; 0x1acc0 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1ae42:	6d 81       	ldd	r22, Y+5	; 0x05
   1ae44:	60 62       	ori	r22, 0x20	; 32
   1ae46:	ce 01       	movw	r24, r28
   1ae48:	5c df       	rcall	.-328    	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1ae4a:	84 e0       	ldi	r24, 0x04	; 4
   1ae4c:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1ae4e:	ce 01       	movw	r24, r28
   1ae50:	91 df       	rcall	.-222    	; 0x1ad74 <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1ae52:	ce 01       	movw	r24, r28
   1ae54:	58 df       	rcall	.-336    	; 0x1ad06 <_ZN17LiquidCrystal_I2C5clearEv>
   1ae56:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1ae58:	8f 83       	std	Y+7, r24	; 0x07
   1ae5a:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1ae5c:	ce 01       	movw	r24, r28
   1ae5e:	51 df       	rcall	.-350    	; 0x1ad02 <_ZN17LiquidCrystal_I2C7commandEh>
   1ae60:	ce 01       	movw	r24, r28
   1ae62:	df 91       	pop	r29
	
	home();
   1ae64:	cf 91       	pop	r28
  
}
   1ae66:	54 cf       	rjmp	.-344    	; 0x1ad10 <_ZN17LiquidCrystal_I2C4homeEv>

0001ae68 <_ZN17LiquidCrystal_I2C9init_privEv>:
   1ae68:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1ae6a:	df 93       	push	r29
   1ae6c:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1ae6e:	8a ee       	ldi	r24, 0xEA	; 234
   1ae70:	97 e1       	ldi	r25, 0x17	; 23
   1ae72:	4f d7       	rcall	.+3742   	; 0x1bd12 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1ae74:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1ae76:	20 e0       	ldi	r18, 0x00	; 0
   1ae78:	4a 85       	ldd	r20, Y+10	; 0x0a
   1ae7a:	69 85       	ldd	r22, Y+9	; 0x09
   1ae7c:	ce 01       	movw	r24, r28
}
   1ae7e:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1ae80:	cf 91       	pop	r28
   1ae82:	ab cf       	rjmp	.-170    	; 0x1adda <_ZN17LiquidCrystal_I2C5beginEhhh>

0001ae84 <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1ae84:	f1 cf       	rjmp	.-30     	; 0x1ae68 <_ZN17LiquidCrystal_I2C9init_privEv>

0001ae86 <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1ae86:	81 e0       	ldi	r24, 0x01	; 1
   1ae88:	08 95       	ret

0001ae8a <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1ae8a:	fc 01       	movw	r30, r24
   1ae8c:	64 83       	std	Z+4, r22	; 0x04
   1ae8e:	08 95       	ret

0001ae90 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1ae90:	fc 01       	movw	r30, r24
   1ae92:	63 83       	std	Z+3, r22	; 0x03
   1ae94:	08 95       	ret

0001ae96 <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1ae96:	fc 01       	movw	r30, r24
   1ae98:	61 87       	std	Z+9, r22	; 0x09
   1ae9a:	08 95       	ret

0001ae9c <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1ae9c:	fc 01       	movw	r30, r24
   1ae9e:	62 87       	std	Z+10, r22	; 0x0a
   1aea0:	08 95       	ret

0001aea2 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1aea2:	fc 01       	movw	r30, r24
   1aea4:	63 87       	std	Z+11, r22	; 0x0b
   1aea6:	08 95       	ret

0001aea8 <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1aea8:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1aeaa:	40 95       	com	r20
   1aeac:	94 85       	ldd	r25, Z+12	; 0x0c
   1aeae:	49 23       	and	r20, r25
   1aeb0:	64 2b       	or	r22, r20
   1aeb2:	64 87       	std	Z+12, r22	; 0x0c
   1aeb4:	08 95       	ret

0001aeb6 <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1aeb6:	fc 01       	movw	r30, r24
   1aeb8:	85 81       	ldd	r24, Z+5	; 0x05
}
   1aeba:	08 95       	ret

0001aebc <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1aebc:	fc 01       	movw	r30, r24
   1aebe:	86 81       	ldd	r24, Z+6	; 0x06
}
   1aec0:	08 95       	ret

0001aec2 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1aec2:	fc 01       	movw	r30, r24
   1aec4:	87 81       	ldd	r24, Z+7	; 0x07
}
   1aec6:	08 95       	ret

0001aec8 <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1aec8:	fc 01       	movw	r30, r24
   1aeca:	80 85       	ldd	r24, Z+8	; 0x08
}
   1aecc:	08 95       	ret

0001aece <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1aece:	fc 01       	movw	r30, r24
   1aed0:	85 85       	ldd	r24, Z+13	; 0x0d
   1aed2:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1aed4:	08 95       	ret

0001aed6 <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1aed6:	fc 01       	movw	r30, r24
   1aed8:	82 81       	ldd	r24, Z+2	; 0x02
}
   1aeda:	08 95       	ret

0001aedc <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1aedc:	fc 01       	movw	r30, r24
   1aede:	62 83       	std	Z+2, r22	; 0x02
   1aee0:	08 95       	ret

0001aee2 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1aee2:	80 e0       	ldi	r24, 0x00	; 0
   1aee4:	08 95       	ret

0001aee6 <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1aee6:	fc 01       	movw	r30, r24
   1aee8:	87 85       	ldd	r24, Z+15	; 0x0f
   1aeea:	90 89       	ldd	r25, Z+16	; 0x10
}
   1aeec:	08 95       	ret

0001aeee <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1aeee:	fc 01       	movw	r30, r24
   1aef0:	81 89       	ldd	r24, Z+17	; 0x11
   1aef2:	92 89       	ldd	r25, Z+18	; 0x12
}
   1aef4:	08 95       	ret

0001aef6 <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1aef6:	fc 01       	movw	r30, r24
   1aef8:	83 89       	ldd	r24, Z+19	; 0x13
   1aefa:	94 89       	ldd	r25, Z+20	; 0x14
}
   1aefc:	08 95       	ret

0001aefe <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1aefe:	cf 93       	push	r28
   1af00:	df 93       	push	r29
   1af02:	ec 01       	movw	r28, r24
    while (!available())
   1af04:	e8 81       	ld	r30, Y
   1af06:	f9 81       	ldd	r31, Y+1	; 0x01
   1af08:	06 80       	ldd	r0, Z+6	; 0x06
   1af0a:	f7 81       	ldd	r31, Z+7	; 0x07
   1af0c:	e0 2d       	mov	r30, r0
   1af0e:	ce 01       	movw	r24, r28
   1af10:	19 95       	eicall
   1af12:	81 11       	cpse	r24, r1
   1af14:	02 c0       	rjmp	.+4      	; 0x1af1a <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1af16:	2f d7       	rcall	.+3678   	; 0x1bd76 <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1af18:	f5 cf       	rjmp	.-22     	; 0x1af04 <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1af1a:	df 91       	pop	r29
   1af1c:	cf 91       	pop	r28
   1af1e:	08 95       	ret

0001af20 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1af20:	cf 93       	push	r28
   1af22:	df 93       	push	r29
   1af24:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1af26:	8a 81       	ldd	r24, Y+2	; 0x02
   1af28:	83 30       	cpi	r24, 0x03	; 3
   1af2a:	11 f4       	brne	.+4      	; 0x1af30 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1af2c:	24 d7       	rcall	.+3656   	; 0x1bd76 <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1af2e:	fb cf       	rjmp	.-10     	; 0x1af26 <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1af30:	81 e0       	ldi	r24, 0x01	; 1
   1af32:	df 91       	pop	r29
   1af34:	cf 91       	pop	r28
   1af36:	08 95       	ret

0001af38 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1af38:	8f 92       	push	r8
   1af3a:	9f 92       	push	r9
   1af3c:	af 92       	push	r10
   1af3e:	bf 92       	push	r11
   1af40:	cf 92       	push	r12
   1af42:	df 92       	push	r13
   1af44:	ef 92       	push	r14
   1af46:	ff 92       	push	r15
   1af48:	cf 93       	push	r28
   1af4a:	df 93       	push	r29
   1af4c:	ec 01       	movw	r28, r24
   1af4e:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1af50:	b3 db       	rcall	.-2202   	; 0x1a6b8 <millis>
   1af52:	4b 01       	movw	r8, r22
   1af54:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1af56:	e1 2c       	mov	r14, r1
   1af58:	f1 2c       	mov	r15, r1
   1af5a:	ae db       	rcall	.-2212   	; 0x1a6b8 <millis>
   1af5c:	dc 01       	movw	r26, r24
   1af5e:	cb 01       	movw	r24, r22
   1af60:	88 19       	sub	r24, r8
   1af62:	99 09       	sbc	r25, r9
   1af64:	aa 09       	sbc	r26, r10
   1af66:	bb 09       	sbc	r27, r11
   1af68:	8c 15       	cp	r24, r12
   1af6a:	9d 05       	cpc	r25, r13
   1af6c:	ae 05       	cpc	r26, r14
   1af6e:	bf 05       	cpc	r27, r15
   1af70:	58 f4       	brcc	.+22     	; 0x1af88 <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1af72:	e8 81       	ld	r30, Y
   1af74:	f9 81       	ldd	r31, Y+1	; 0x01
   1af76:	06 80       	ldd	r0, Z+6	; 0x06
   1af78:	f7 81       	ldd	r31, Z+7	; 0x07
   1af7a:	e0 2d       	mov	r30, r0
   1af7c:	ce 01       	movw	r24, r28
   1af7e:	19 95       	eicall
   1af80:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1af82:	03 c0       	rjmp	.+6      	; 0x1af8a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1af84:	f8 d6       	rcall	.+3568   	; 0x1bd76 <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1af86:	e9 cf       	rjmp	.-46     	; 0x1af5a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1af88:	80 e0       	ldi	r24, 0x00	; 0
}
   1af8a:	df 91       	pop	r29
   1af8c:	cf 91       	pop	r28
   1af8e:	ff 90       	pop	r15
   1af90:	ef 90       	pop	r14
   1af92:	df 90       	pop	r13
   1af94:	cf 90       	pop	r12
   1af96:	bf 90       	pop	r11
   1af98:	af 90       	pop	r10
   1af9a:	9f 90       	pop	r9
   1af9c:	8f 90       	pop	r8
   1af9e:	08 95       	ret

0001afa0 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1afa0:	8f 92       	push	r8
   1afa2:	9f 92       	push	r9
   1afa4:	af 92       	push	r10
   1afa6:	bf 92       	push	r11
   1afa8:	cf 92       	push	r12
   1afaa:	df 92       	push	r13
   1afac:	ef 92       	push	r14
   1afae:	ff 92       	push	r15
   1afb0:	cf 93       	push	r28
   1afb2:	df 93       	push	r29
   1afb4:	ec 01       	movw	r28, r24
   1afb6:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1afb8:	7f db       	rcall	.-2306   	; 0x1a6b8 <millis>
   1afba:	4b 01       	movw	r8, r22
   1afbc:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1afbe:	e1 2c       	mov	r14, r1
   1afc0:	f1 2c       	mov	r15, r1
   1afc2:	7a db       	rcall	.-2316   	; 0x1a6b8 <millis>
   1afc4:	dc 01       	movw	r26, r24
   1afc6:	cb 01       	movw	r24, r22
   1afc8:	88 19       	sub	r24, r8
   1afca:	99 09       	sbc	r25, r9
   1afcc:	aa 09       	sbc	r26, r10
   1afce:	bb 09       	sbc	r27, r11
   1afd0:	8c 15       	cp	r24, r12
   1afd2:	9d 05       	cpc	r25, r13
   1afd4:	ae 05       	cpc	r26, r14
   1afd6:	bf 05       	cpc	r27, r15
   1afd8:	28 f4       	brcc	.+10     	; 0x1afe4 <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1afda:	8a 81       	ldd	r24, Y+2	; 0x02
   1afdc:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1afde:	21 f4       	brne	.+8      	; 0x1afe8 <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1afe0:	ca d6       	rcall	.+3476   	; 0x1bd76 <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1afe2:	ef cf       	rjmp	.-34     	; 0x1afc2 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1afe4:	80 e0       	ldi	r24, 0x00	; 0
   1afe6:	01 c0       	rjmp	.+2      	; 0x1afea <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1afe8:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1afea:	df 91       	pop	r29
   1afec:	cf 91       	pop	r28
   1afee:	ff 90       	pop	r15
   1aff0:	ef 90       	pop	r14
   1aff2:	df 90       	pop	r13
   1aff4:	cf 90       	pop	r12
   1aff6:	bf 90       	pop	r11
   1aff8:	af 90       	pop	r10
   1affa:	9f 90       	pop	r9
   1affc:	8f 90       	pop	r8
   1affe:	08 95       	ret

0001b000 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1b000:	cf 92       	push	r12
   1b002:	df 92       	push	r13
   1b004:	ef 92       	push	r14
   1b006:	ff 92       	push	r15
   1b008:	cf 93       	push	r28
   1b00a:	df 93       	push	r29
    if (!_cad_timeout)
   1b00c:	fc 01       	movw	r30, r24
   1b00e:	26 89       	ldd	r18, Z+22	; 0x16
   1b010:	37 89       	ldd	r19, Z+23	; 0x17
   1b012:	23 2b       	or	r18, r19
   1b014:	79 f1       	breq	.+94     	; 0x1b074 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b016:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1b018:	4f db       	rcall	.-2402   	; 0x1a6b8 <millis>
   1b01a:	6b 01       	movw	r12, r22
   1b01c:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1b01e:	e8 81       	ld	r30, Y
   1b020:	f9 81       	ldd	r31, Y+1	; 0x01
   1b022:	00 8c       	ldd	r0, Z+24	; 0x18
   1b024:	f1 8d       	ldd	r31, Z+25	; 0x19
   1b026:	e0 2d       	mov	r30, r0
   1b028:	ce 01       	movw	r24, r28
   1b02a:	19 95       	eicall
   1b02c:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1b02e:	11 f1       	breq	.+68     	; 0x1b074 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b030:	43 db       	rcall	.-2426   	; 0x1a6b8 <millis>
   1b032:	ab 01       	movw	r20, r22
   1b034:	bc 01       	movw	r22, r24
   1b036:	4c 19       	sub	r20, r12
   1b038:	5d 09       	sbc	r21, r13
   1b03a:	6e 09       	sbc	r22, r14
   1b03c:	7f 09       	sbc	r23, r15
   1b03e:	8e 89       	ldd	r24, Y+22	; 0x16
   1b040:	9f 89       	ldd	r25, Y+23	; 0x17
   1b042:	a0 e0       	ldi	r26, 0x00	; 0
   1b044:	b0 e0       	ldi	r27, 0x00	; 0
   1b046:	84 17       	cp	r24, r20
   1b048:	95 07       	cpc	r25, r21
   1b04a:	a6 07       	cpc	r26, r22
   1b04c:	b7 07       	cpc	r27, r23
   1b04e:	a0 f0       	brcs	.+40     	; 0x1b078 <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b050:	2a e0       	ldi	r18, 0x0A	; 10
   1b052:	30 e0       	ldi	r19, 0x00	; 0
   1b054:	40 e0       	ldi	r20, 0x00	; 0
   1b056:	50 e0       	ldi	r21, 0x00	; 0
   1b058:	61 e0       	ldi	r22, 0x01	; 1
   1b05a:	70 e0       	ldi	r23, 0x00	; 0
   1b05c:	80 e0       	ldi	r24, 0x00	; 0
   1b05e:	90 e0       	ldi	r25, 0x00	; 0
   1b060:	0e 94 c9 e0 	call	0x1c192	; 0x1c192 <_Z6randomll>
   1b064:	9b 01       	movw	r18, r22
   1b066:	ac 01       	movw	r20, r24
   1b068:	a4 e6       	ldi	r26, 0x64	; 100
   1b06a:	b0 e0       	ldi	r27, 0x00	; 0
   1b06c:	0e 94 b2 e7 	call	0x1cf64	; 0x1cf64 <__muluhisi3>
   1b070:	54 db       	rcall	.-2392   	; 0x1a71a <delay>
   1b072:	d5 cf       	rjmp	.-86     	; 0x1b01e <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b074:	81 e0       	ldi	r24, 0x01	; 1
   1b076:	01 c0       	rjmp	.+2      	; 0x1b07a <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b078:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b07a:	df 91       	pop	r29
   1b07c:	cf 91       	pop	r28
   1b07e:	ff 90       	pop	r15
   1b080:	ef 90       	pop	r14
   1b082:	df 90       	pop	r13
   1b084:	cf 90       	pop	r12
   1b086:	08 95       	ret

0001b088 <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b088:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b08a:	89 e0       	ldi	r24, 0x09	; 9
   1b08c:	98 e0       	ldi	r25, 0x08	; 8
   1b08e:	91 83       	std	Z+1, r25	; 0x01
   1b090:	80 83       	st	Z, r24
   1b092:	12 82       	std	Z+2, r1	; 0x02
   1b094:	8f ef       	ldi	r24, 0xFF	; 255
   1b096:	83 83       	std	Z+3, r24	; 0x03
   1b098:	81 87       	std	Z+9, r24	; 0x09
   1b09a:	82 87       	std	Z+10, r24	; 0x0a
   1b09c:	13 86       	std	Z+11, r1	; 0x0b
   1b09e:	14 86       	std	Z+12, r1	; 0x0c
   1b0a0:	10 8a       	std	Z+16, r1	; 0x10
   1b0a2:	17 86       	std	Z+15, r1	; 0x0f
   1b0a4:	12 8a       	std	Z+18, r1	; 0x12
   1b0a6:	11 8a       	std	Z+17, r1	; 0x11
   1b0a8:	14 8a       	std	Z+20, r1	; 0x14
   1b0aa:	13 8a       	std	Z+19, r1	; 0x13
   1b0ac:	17 8a       	std	Z+23, r1	; 0x17
   1b0ae:	16 8a       	std	Z+22, r1	; 0x16
   1b0b0:	08 95       	ret

0001b0b2 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b0b2:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b0b4:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b0b6:	0d b4       	in	r0, 0x2d	; 45
   1b0b8:	07 fe       	sbrs	r0, 7
   1b0ba:	fd cf       	rjmp	.-6      	; 0x1b0b6 <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b0bc:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b0be:	08 95       	ret

0001b0c0 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b0c0:	8c b5       	in	r24, 0x2c	; 44
   1b0c2:	80 68       	ori	r24, 0x80	; 128
   1b0c4:	8c bd       	out	0x2c, r24	; 44
   1b0c6:	08 95       	ret

0001b0c8 <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b0c8:	8c b5       	in	r24, 0x2c	; 44
   1b0ca:	8f 77       	andi	r24, 0x7F	; 127
   1b0cc:	8c bd       	out	0x2c, r24	; 44
   1b0ce:	08 95       	ret

0001b0d0 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b0d0:	fc 01       	movw	r30, r24
   1b0d2:	45 81       	ldd	r20, Z+5	; 0x05
   1b0d4:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b0d6:	80 91 e8 17 	lds	r24, 0x17E8	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
   1b0da:	88 23       	and	r24, r24
   1b0dc:	99 f0       	breq	.+38     	; 0x1b104 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b0de:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b0e0:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b0e2:	80 91 e8 17 	lds	r24, 0x17E8	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
   1b0e6:	81 30       	cpi	r24, 0x01	; 1
   1b0e8:	59 f4       	brne	.+22     	; 0x1b100 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b0ea:	8d b3       	in	r24, 0x1d	; 29
   1b0ec:	80 93 e6 17 	sts	0x17E6, r24	; 0x8017e6 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b0f0:	9d b3       	in	r25, 0x1d	; 29
   1b0f2:	80 91 e7 17 	lds	r24, 0x17E7	; 0x8017e7 <_ZN8SPIClass13interruptMaskE>
   1b0f6:	80 95       	com	r24
   1b0f8:	89 23       	and	r24, r25
   1b0fa:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b0fc:	2f bf       	out	0x3f, r18	; 63
   1b0fe:	02 c0       	rjmp	.+4      	; 0x1b104 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b100:	20 93 e6 17 	sts	0x17E6, r18	; 0x8017e6 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b104:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b106:	3d bd       	out	0x2d, r19	; 45
   1b108:	08 95       	ret

0001b10a <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b10a:	0f 93       	push	r16
   1b10c:	1f 93       	push	r17
   1b10e:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b110:	82 81       	ldd	r24, Z+2	; 0x02
   1b112:	84 30       	cpi	r24, 0x04	; 4
   1b114:	59 f0       	breq	.+22     	; 0x1b12c <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b116:	83 30       	cpi	r24, 0x03	; 3
   1b118:	71 f0       	breq	.+28     	; 0x1b136 <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b11a:	82 30       	cpi	r24, 0x02	; 2
   1b11c:	89 f0       	breq	.+34     	; 0x1b140 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b11e:	81 30       	cpi	r24, 0x01	; 1
   1b120:	a1 f0       	breq	.+40     	; 0x1b14a <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b122:	40 e4       	ldi	r20, 0x40	; 64
   1b124:	52 e4       	ldi	r21, 0x42	; 66
   1b126:	6f e0       	ldi	r22, 0x0F	; 15
   1b128:	70 e0       	ldi	r23, 0x00	; 0
   1b12a:	13 c0       	rjmp	.+38     	; 0x1b152 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b12c:	40 e0       	ldi	r20, 0x00	; 0
   1b12e:	54 e2       	ldi	r21, 0x24	; 36
   1b130:	64 ef       	ldi	r22, 0xF4	; 244
   1b132:	70 e0       	ldi	r23, 0x00	; 0
   1b134:	0e c0       	rjmp	.+28     	; 0x1b152 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b136:	40 e0       	ldi	r20, 0x00	; 0
   1b138:	52 e1       	ldi	r21, 0x12	; 18
   1b13a:	6a e7       	ldi	r22, 0x7A	; 122
   1b13c:	70 e0       	ldi	r23, 0x00	; 0
   1b13e:	09 c0       	rjmp	.+18     	; 0x1b152 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b140:	40 e0       	ldi	r20, 0x00	; 0
   1b142:	59 e0       	ldi	r21, 0x09	; 9
   1b144:	6d e3       	ldi	r22, 0x3D	; 61
   1b146:	70 e0       	ldi	r23, 0x00	; 0
   1b148:	04 c0       	rjmp	.+8      	; 0x1b152 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1b14a:	40 e8       	ldi	r20, 0x80	; 128
   1b14c:	54 e8       	ldi	r21, 0x84	; 132
   1b14e:	6e e1       	ldi	r22, 0x1E	; 30
   1b150:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1b152:	84 81       	ldd	r24, Z+4	; 0x04
   1b154:	88 23       	and	r24, r24
   1b156:	61 f0       	breq	.+24     	; 0x1b170 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1b158:	81 30       	cpi	r24, 0x01	; 1
   1b15a:	31 f0       	breq	.+12     	; 0x1b168 <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1b15c:	82 30       	cpi	r24, 0x02	; 2
   1b15e:	31 f0       	breq	.+12     	; 0x1b16c <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1b160:	83 30       	cpi	r24, 0x03	; 3
   1b162:	31 f4       	brne	.+12     	; 0x1b170 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1b164:	9c e0       	ldi	r25, 0x0C	; 12
   1b166:	05 c0       	rjmp	.+10     	; 0x1b172 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1b168:	94 e0       	ldi	r25, 0x04	; 4
   1b16a:	03 c0       	rjmp	.+6      	; 0x1b172 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1b16c:	98 e0       	ldi	r25, 0x08	; 8
   1b16e:	01 c0       	rjmp	.+2      	; 0x1b172 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1b170:	90 e0       	ldi	r25, 0x00	; 0
   1b172:	00 e0       	ldi	r16, 0x00	; 0
   1b174:	12 e1       	ldi	r17, 0x12	; 18
   1b176:	2a e7       	ldi	r18, 0x7A	; 122
   1b178:	30 e0       	ldi	r19, 0x00	; 0
   1b17a:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b17c:	40 17       	cp	r20, r16
   1b17e:	51 07       	cpc	r21, r17
   1b180:	62 07       	cpc	r22, r18
   1b182:	73 07       	cpc	r23, r19
   1b184:	40 f4       	brcc	.+16     	; 0x1b196 <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1b186:	36 95       	lsr	r19
   1b188:	27 95       	ror	r18
   1b18a:	17 95       	ror	r17
   1b18c:	07 95       	ror	r16
        clockDiv++;
   1b18e:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b190:	86 30       	cpi	r24, 0x06	; 6
   1b192:	a1 f7       	brne	.-24     	; 0x1b17c <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1b194:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1b196:	21 e0       	ldi	r18, 0x01	; 1
   1b198:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b19a:	83 81       	ldd	r24, Z+3	; 0x03
   1b19c:	81 30       	cpi	r24, 0x01	; 1
   1b19e:	11 f0       	breq	.+4      	; 0x1b1a4 <_ZN13RHHardwareSPI5beginEv+0x9a>
   1b1a0:	80 e5       	ldi	r24, 0x50	; 80
   1b1a2:	01 c0       	rjmp	.+2      	; 0x1b1a6 <_ZN13RHHardwareSPI5beginEv+0x9c>
   1b1a4:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1b1a6:	32 2f       	mov	r19, r18
   1b1a8:	36 95       	lsr	r19
   1b1aa:	93 2b       	or	r25, r19
   1b1ac:	98 2b       	or	r25, r24
   1b1ae:	95 83       	std	Z+5, r25	; 0x05
   1b1b0:	21 70       	andi	r18, 0x01	; 1
   1b1b2:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1b1b4:	1f 91       	pop	r17
   1b1b6:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1b1b8:	67 c4       	rjmp	.+2254   	; 0x1ba88 <_ZN8SPIClass5beginEv>

0001b1ba <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1b1ba:	9c c4       	rjmp	.+2360   	; 0x1baf4 <_ZN8SPIClass3endEv>

0001b1bc <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1b1bc:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1b1be:	ae c4       	rjmp	.+2396   	; 0x1bb1c <_ZN8SPIClass14usingInterruptEh>

0001b1c0 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1b1c0:	80 91 e8 17 	lds	r24, 0x17E8	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
   1b1c4:	88 23       	and	r24, r24
   1b1c6:	61 f0       	breq	.+24     	; 0x1b1e0 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1b1c8:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1b1ca:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b1cc:	20 91 e8 17 	lds	r18, 0x17E8	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
   1b1d0:	80 91 e6 17 	lds	r24, 0x17E6	; 0x8017e6 <_ZN8SPIClass13interruptSaveE>
   1b1d4:	21 30       	cpi	r18, 0x01	; 1
   1b1d6:	19 f4       	brne	.+6      	; 0x1b1de <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1b1d8:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b1da:	9f bf       	out	0x3f, r25	; 63
   1b1dc:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1b1de:	8f bf       	out	0x3f, r24	; 63
   1b1e0:	08 95       	ret

0001b1e2 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1b1e2:	cf 93       	push	r28
   1b1e4:	df 93       	push	r29
   1b1e6:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1b1e8:	0e 94 f8 e0 	call	0x1c1f0	; 0x1c1f0 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1b1ec:	89 e4       	ldi	r24, 0x49	; 73
   1b1ee:	98 e0       	ldi	r25, 0x08	; 8
   1b1f0:	99 83       	std	Y+1, r25	; 0x01
   1b1f2:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b1f4:	80 e5       	ldi	r24, 0x50	; 80
   1b1f6:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1b1f8:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1b1fa:	df 91       	pop	r29
   1b1fc:	cf 91       	pop	r28
   1b1fe:	08 95       	ret

0001b200 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1b200:	20 e0       	ldi	r18, 0x00	; 0
   1b202:	40 e0       	ldi	r20, 0x00	; 0
   1b204:	60 e0       	ldi	r22, 0x00	; 0
   1b206:	88 ed       	ldi	r24, 0xD8	; 216
   1b208:	97 e1       	ldi	r25, 0x17	; 23
   1b20a:	eb cf       	rjmp	.-42     	; 0x1b1e2 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001b20c <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1b20c:	81 e0       	ldi	r24, 0x01	; 1
   1b20e:	08 95       	ret

0001b210 <_ZN7RH_RF9516maxMessageLengthEv>:
   1b210:	8f e1       	ldi	r24, 0x1F	; 31
   1b212:	08 95       	ret

0001b214 <_ZN7RH_RF95D1Ev>:
   1b214:	08 95       	ret

0001b216 <_ZN7RH_RF9515isChannelActiveEv>:
   1b216:	cf 93       	push	r28
   1b218:	df 93       	push	r29
   1b21a:	ec 01       	movw	r28, r24
   1b21c:	8a 81       	ldd	r24, Y+2	; 0x02
   1b21e:	85 30       	cpi	r24, 0x05	; 5
   1b220:	b1 f0       	breq	.+44     	; 0x1b24e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b222:	e8 81       	ld	r30, Y
   1b224:	f9 81       	ldd	r31, Y+1	; 0x01
   1b226:	e0 5c       	subi	r30, 0xC0	; 192
   1b228:	ff 4f       	sbci	r31, 0xFF	; 255
   1b22a:	01 90       	ld	r0, Z+
   1b22c:	f0 81       	ld	r31, Z
   1b22e:	e0 2d       	mov	r30, r0
   1b230:	65 e0       	ldi	r22, 0x05	; 5
   1b232:	ce 01       	movw	r24, r28
   1b234:	19 95       	eicall
   1b236:	47 e0       	ldi	r20, 0x07	; 7
   1b238:	61 e0       	ldi	r22, 0x01	; 1
   1b23a:	ce 01       	movw	r24, r28
   1b23c:	0e 94 8a e1 	call	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b240:	40 e8       	ldi	r20, 0x80	; 128
   1b242:	60 e4       	ldi	r22, 0x40	; 64
   1b244:	ce 01       	movw	r24, r28
   1b246:	0e 94 8a e1 	call	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b24a:	85 e0       	ldi	r24, 0x05	; 5
   1b24c:	8a 83       	std	Y+2, r24	; 0x02
   1b24e:	8a 81       	ldd	r24, Y+2	; 0x02
   1b250:	85 30       	cpi	r24, 0x05	; 5
   1b252:	11 f4       	brne	.+4      	; 0x1b258 <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1b254:	90 d5       	rcall	.+2848   	; 0x1bd76 <yield>
   1b256:	fb cf       	rjmp	.-10     	; 0x1b24e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b258:	8d 89       	ldd	r24, Y+21	; 0x15
   1b25a:	df 91       	pop	r29
   1b25c:	cf 91       	pop	r28
   1b25e:	08 95       	ret

0001b260 <_ZN7RH_RF95D0Ev>:
   1b260:	8b c5       	rjmp	.+2838   	; 0x1bd78 <_ZdlPv>

0001b262 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1b262:	0f 93       	push	r16
   1b264:	1f 93       	push	r17
   1b266:	cf 93       	push	r28
   1b268:	8c 01       	movw	r16, r24
   1b26a:	c6 2f       	mov	r28, r22
   1b26c:	65 31       	cpi	r22, 0x15	; 21
   1b26e:	2c f4       	brge	.+10     	; 0x1b27a <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1b270:	62 30       	cpi	r22, 0x02	; 2
   1b272:	5c f0       	brlt	.+22     	; 0x1b28a <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1b274:	62 31       	cpi	r22, 0x12	; 18
   1b276:	54 f0       	brlt	.+20     	; 0x1b28c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1b278:	01 c0       	rjmp	.+2      	; 0x1b27c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1b27a:	c4 e1       	ldi	r28, 0x14	; 20
   1b27c:	47 e0       	ldi	r20, 0x07	; 7
   1b27e:	6d e4       	ldi	r22, 0x4D	; 77
   1b280:	c8 01       	movw	r24, r16
   1b282:	0e 94 8a e1 	call	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b286:	c3 50       	subi	r28, 0x03	; 3
   1b288:	06 c0       	rjmp	.+12     	; 0x1b296 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1b28a:	c2 e0       	ldi	r28, 0x02	; 2
   1b28c:	44 e0       	ldi	r20, 0x04	; 4
   1b28e:	6d e4       	ldi	r22, 0x4D	; 77
   1b290:	c8 01       	movw	r24, r16
   1b292:	0e 94 8a e1 	call	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b296:	4e ef       	ldi	r20, 0xFE	; 254
   1b298:	4c 0f       	add	r20, r28
   1b29a:	40 68       	ori	r20, 0x80	; 128
   1b29c:	69 e0       	ldi	r22, 0x09	; 9
   1b29e:	c8 01       	movw	r24, r16
   1b2a0:	cf 91       	pop	r28
   1b2a2:	1f 91       	pop	r17
   1b2a4:	0f 91       	pop	r16
   1b2a6:	0c 94 8a e1 	jmp	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>

0001b2aa <_ZN7RH_RF955sleepEv>:
   1b2aa:	cf 93       	push	r28
   1b2ac:	df 93       	push	r29
   1b2ae:	fc 01       	movw	r30, r24
   1b2b0:	22 81       	ldd	r18, Z+2	; 0x02
   1b2b2:	21 30       	cpi	r18, 0x01	; 1
   1b2b4:	91 f0       	breq	.+36     	; 0x1b2da <_ZN7RH_RF955sleepEv+0x30>
   1b2b6:	ec 01       	movw	r28, r24
   1b2b8:	01 90       	ld	r0, Z+
   1b2ba:	f0 81       	ld	r31, Z
   1b2bc:	e0 2d       	mov	r30, r0
   1b2be:	e0 5c       	subi	r30, 0xC0	; 192
   1b2c0:	ff 4f       	sbci	r31, 0xFF	; 255
   1b2c2:	01 90       	ld	r0, Z+
   1b2c4:	f0 81       	ld	r31, Z
   1b2c6:	e0 2d       	mov	r30, r0
   1b2c8:	61 e0       	ldi	r22, 0x01	; 1
   1b2ca:	19 95       	eicall
   1b2cc:	40 e0       	ldi	r20, 0x00	; 0
   1b2ce:	61 e0       	ldi	r22, 0x01	; 1
   1b2d0:	ce 01       	movw	r24, r28
   1b2d2:	0e 94 8a e1 	call	0x1c314	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b2d6:	81 e0       	ldi	r24, 0x01	; 1
   1b2d8:	8a 83       	std	Y+2, r24	; 0x02
   1b2da:	81 e0       	ldi	r24, 0x01	; 1
   1b2dc:	df 91       	pop	r29
   1b2de:	cf 91       	pop	r28
   1b2e0:	08 95       	ret

0001b2e2 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1b2e2:	1f 93       	push	r17
   1b2e4:	cf 93       	push	r28
   1b2e6:	df 93       	push	r29
   1b2e8:	ec 01       	movw	r28, r24
   1b2ea:	14 2f       	mov	r17, r20
   1b2ec:	a9 01       	movw	r20, r18
   1b2ee:	b6 d7       	rcall	.+3948   	; 0x1c25c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1b2f0:	83 e6       	ldi	r24, 0x63	; 99
   1b2f2:	98 e0       	ldi	r25, 0x08	; 8
   1b2f4:	99 83       	std	Y+1, r25	; 0x01
   1b2f6:	88 83       	st	Y, r24
   1b2f8:	fe 01       	movw	r30, r28
   1b2fa:	ee 5b       	subi	r30, 0xBE	; 190
   1b2fc:	ff 4f       	sbci	r31, 0xFF	; 255
   1b2fe:	10 82       	st	Z, r1
   1b300:	34 96       	adiw	r30, 0x04	; 4
   1b302:	10 82       	st	Z, r1
   1b304:	1c 8f       	std	Y+28, r17	; 0x1c
   1b306:	8f ef       	ldi	r24, 0xFF	; 255
   1b308:	8d 8f       	std	Y+29, r24	; 0x1d
   1b30a:	31 97       	sbiw	r30, 0x01	; 1
   1b30c:	81 e0       	ldi	r24, 0x01	; 1
   1b30e:	80 83       	st	Z, r24
   1b310:	1b 8e       	std	Y+27, r1	; 0x1b
   1b312:	df 91       	pop	r29
   1b314:	cf 91       	pop	r28
   1b316:	1f 91       	pop	r17
   1b318:	08 95       	ret

0001b31a <_ZN7RH_RF9513validateRxBufEv>:
   1b31a:	fc 01       	movw	r30, r24
   1b31c:	86 8d       	ldd	r24, Z+30	; 0x1e
   1b31e:	84 30       	cpi	r24, 0x04	; 4
   1b320:	d8 f0       	brcs	.+54     	; 0x1b358 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b322:	87 8d       	ldd	r24, Z+31	; 0x1f
   1b324:	85 83       	std	Z+5, r24	; 0x05
   1b326:	80 a1       	ldd	r24, Z+32	; 0x20
   1b328:	86 83       	std	Z+6, r24	; 0x06
   1b32a:	81 a1       	ldd	r24, Z+33	; 0x21
   1b32c:	87 83       	std	Z+7, r24	; 0x07
   1b32e:	82 a1       	ldd	r24, Z+34	; 0x22
   1b330:	80 87       	std	Z+8, r24	; 0x08
   1b332:	84 81       	ldd	r24, Z+4	; 0x04
   1b334:	81 11       	cpse	r24, r1
   1b336:	07 c0       	rjmp	.+14     	; 0x1b346 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b338:	95 81       	ldd	r25, Z+5	; 0x05
   1b33a:	83 81       	ldd	r24, Z+3	; 0x03
   1b33c:	98 17       	cp	r25, r24
   1b33e:	19 f0       	breq	.+6      	; 0x1b346 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b340:	85 81       	ldd	r24, Z+5	; 0x05
   1b342:	8f 3f       	cpi	r24, 0xFF	; 255
   1b344:	49 f4       	brne	.+18     	; 0x1b358 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b346:	81 89       	ldd	r24, Z+17	; 0x11
   1b348:	92 89       	ldd	r25, Z+18	; 0x12
   1b34a:	01 96       	adiw	r24, 0x01	; 1
   1b34c:	92 8b       	std	Z+18, r25	; 0x12
   1b34e:	81 8b       	std	Z+17, r24	; 0x11
   1b350:	ee 5b       	subi	r30, 0xBE	; 190
   1b352:	ff 4f       	sbci	r31, 0xFF	; 255
   1b354:	81 e0       	ldi	r24, 0x01	; 1
   1b356:	80 83       	st	Z, r24
   1b358:	08 95       	ret

0001b35a <_ZN7RH_RF9510clearRxBufEv>:
   1b35a:	2f b7       	in	r18, 0x3f	; 63
   1b35c:	f8 94       	cli
   1b35e:	fc 01       	movw	r30, r24
   1b360:	ee 5b       	subi	r30, 0xBE	; 190
   1b362:	ff 4f       	sbci	r31, 0xFF	; 255
   1b364:	10 82       	st	Z, r1
   1b366:	fc 01       	movw	r30, r24
   1b368:	16 8e       	std	Z+30, r1	; 0x1e
   1b36a:	2f bf       	out	0x3f, r18	; 63
   1b36c:	08 95       	ret

0001b36e <_ZN7RH_RF954recvEPhS0_>:
   1b36e:	cf 92       	push	r12
   1b370:	df 92       	push	r13
   1b372:	ef 92       	push	r14
   1b374:	ff 92       	push	r15
   1b376:	0f 93       	push	r16
   1b378:	1f 93       	push	r17
   1b37a:	cf 93       	push	r28
   1b37c:	df 93       	push	r29
   1b37e:	ec 01       	movw	r28, r24
   1b380:	7b 01       	movw	r14, r22
   1b382:	8a 01       	movw	r16, r20
   1b384:	e8 81       	ld	r30, Y
   1b386:	f9 81       	ldd	r31, Y+1	; 0x01
   1b388:	06 80       	ldd	r0, Z+6	; 0x06
   1b38a:	f7 81       	ldd	r31, Z+7	; 0x07
   1b38c:	e0 2d       	mov	r30, r0
   1b38e:	19 95       	eicall
   1b390:	d8 2e       	mov	r13, r24
   1b392:	88 23       	and	r24, r24
   1b394:	01 f1       	breq	.+64     	; 0x1b3d6 <_ZN7RH_RF954recvEPhS0_+0x68>
   1b396:	e1 14       	cp	r14, r1
   1b398:	f1 04       	cpc	r15, r1
   1b39a:	d9 f0       	breq	.+54     	; 0x1b3d2 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b39c:	01 15       	cp	r16, r1
   1b39e:	11 05       	cpc	r17, r1
   1b3a0:	c1 f0       	breq	.+48     	; 0x1b3d2 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b3a2:	cf b6       	in	r12, 0x3f	; 63
   1b3a4:	f8 94       	cli
   1b3a6:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b3a8:	90 e0       	ldi	r25, 0x00	; 0
   1b3aa:	03 97       	sbiw	r24, 0x03	; 3
   1b3ac:	f8 01       	movw	r30, r16
   1b3ae:	20 81       	ld	r18, Z
   1b3b0:	30 e0       	ldi	r19, 0x00	; 0
   1b3b2:	28 17       	cp	r18, r24
   1b3b4:	39 07       	cpc	r19, r25
   1b3b6:	1c f0       	brlt	.+6      	; 0x1b3be <_ZN7RH_RF954recvEPhS0_+0x50>
   1b3b8:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b3ba:	84 50       	subi	r24, 0x04	; 4
   1b3bc:	80 83       	st	Z, r24
   1b3be:	f8 01       	movw	r30, r16
   1b3c0:	40 81       	ld	r20, Z
   1b3c2:	50 e0       	ldi	r21, 0x00	; 0
   1b3c4:	be 01       	movw	r22, r28
   1b3c6:	6d 5d       	subi	r22, 0xDD	; 221
   1b3c8:	7f 4f       	sbci	r23, 0xFF	; 255
   1b3ca:	c7 01       	movw	r24, r14
   1b3cc:	0e 94 a4 e9 	call	0x1d348	; 0x1d348 <memcpy>
   1b3d0:	cf be       	out	0x3f, r12	; 63
   1b3d2:	ce 01       	movw	r24, r28
   1b3d4:	c2 df       	rcall	.-124    	; 0x1b35a <_ZN7RH_RF9510clearRxBufEv>
   1b3d6:	8d 2d       	mov	r24, r13
   1b3d8:	df 91       	pop	r29
   1b3da:	cf 91       	pop	r28
   1b3dc:	1f 91       	pop	r17
   1b3de:	0f 91       	pop	r16
   1b3e0:	ff 90       	pop	r15
   1b3e2:	ef 90       	pop	r14
   1b3e4:	df 90       	pop	r13
   1b3e6:	cf 90       	pop	r12
   1b3e8:	08 95       	ret

0001b3ea <_ZN7RH_RF9512setFrequencyEf>:
   1b3ea:	8f 92       	push	r8
   1b3ec:	9f 92       	push	r9
   1b3ee:	af 92       	push	r10
   1b3f0:	bf 92       	push	r11
   1b3f2:	cf 92       	push	r12
   1b3f4:	df 92       	push	r13
   1b3f6:	ef 92       	push	r14
   1b3f8:	ff 92       	push	r15
   1b3fa:	1f 93       	push	r17
   1b3fc:	cf 93       	push	r28
   1b3fe:	df 93       	push	r29
   1b400:	ec 01       	movw	r28, r24
   1b402:	4a 01       	movw	r8, r20
   1b404:	5b 01       	movw	r10, r22
   1b406:	20 e0       	ldi	r18, 0x00	; 0
   1b408:	34 e2       	ldi	r19, 0x24	; 36
   1b40a:	44 e7       	ldi	r20, 0x74	; 116
   1b40c:	59 e4       	ldi	r21, 0x49	; 73
   1b40e:	c5 01       	movw	r24, r10
   1b410:	b4 01       	movw	r22, r8
   1b412:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
   1b416:	20 e0       	ldi	r18, 0x00	; 0
   1b418:	34 e2       	ldi	r19, 0x24	; 36
   1b41a:	44 e7       	ldi	r20, 0x74	; 116
   1b41c:	52 e4       	ldi	r21, 0x42	; 66
   1b41e:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
   1b422:	0e 94 9d cd 	call	0x19b3a	; 0x19b3a <__fixunssfsi>
   1b426:	6b 01       	movw	r12, r22
   1b428:	7c 01       	movw	r14, r24
   1b42a:	a7 01       	movw	r20, r14
   1b42c:	66 27       	eor	r22, r22
   1b42e:	77 27       	eor	r23, r23
   1b430:	66 e0       	ldi	r22, 0x06	; 6
   1b432:	ce 01       	movw	r24, r28
   1b434:	6f d7       	rcall	.+3806   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b436:	77 27       	eor	r23, r23
   1b438:	6f 2d       	mov	r22, r15
   1b43a:	5e 2d       	mov	r21, r14
   1b43c:	4d 2d       	mov	r20, r13
   1b43e:	67 e0       	ldi	r22, 0x07	; 7
   1b440:	ce 01       	movw	r24, r28
   1b442:	68 d7       	rcall	.+3792   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b444:	4c 2d       	mov	r20, r12
   1b446:	68 e0       	ldi	r22, 0x08	; 8
   1b448:	ce 01       	movw	r24, r28
   1b44a:	64 d7       	rcall	.+3784   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b44c:	cd 5b       	subi	r28, 0xBD	; 189
   1b44e:	df 4f       	sbci	r29, 0xFF	; 255
   1b450:	11 e0       	ldi	r17, 0x01	; 1
   1b452:	20 e0       	ldi	r18, 0x00	; 0
   1b454:	30 ec       	ldi	r19, 0xC0	; 192
   1b456:	42 e4       	ldi	r20, 0x42	; 66
   1b458:	54 e4       	ldi	r21, 0x44	; 68
   1b45a:	c5 01       	movw	r24, r10
   1b45c:	b4 01       	movw	r22, r8
   1b45e:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
   1b462:	87 fd       	sbrc	r24, 7
   1b464:	10 e0       	ldi	r17, 0x00	; 0
   1b466:	18 83       	st	Y, r17
   1b468:	81 e0       	ldi	r24, 0x01	; 1
   1b46a:	df 91       	pop	r29
   1b46c:	cf 91       	pop	r28
   1b46e:	1f 91       	pop	r17
   1b470:	ff 90       	pop	r15
   1b472:	ef 90       	pop	r14
   1b474:	df 90       	pop	r13
   1b476:	cf 90       	pop	r12
   1b478:	bf 90       	pop	r11
   1b47a:	af 90       	pop	r10
   1b47c:	9f 90       	pop	r9
   1b47e:	8f 90       	pop	r8
   1b480:	08 95       	ret

0001b482 <_ZN7RH_RF9511setModeIdleEv>:
   1b482:	cf 93       	push	r28
   1b484:	df 93       	push	r29
   1b486:	fc 01       	movw	r30, r24
   1b488:	22 81       	ldd	r18, Z+2	; 0x02
   1b48a:	22 30       	cpi	r18, 0x02	; 2
   1b48c:	89 f0       	breq	.+34     	; 0x1b4b0 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1b48e:	ec 01       	movw	r28, r24
   1b490:	01 90       	ld	r0, Z+
   1b492:	f0 81       	ld	r31, Z
   1b494:	e0 2d       	mov	r30, r0
   1b496:	e0 5c       	subi	r30, 0xC0	; 192
   1b498:	ff 4f       	sbci	r31, 0xFF	; 255
   1b49a:	01 90       	ld	r0, Z+
   1b49c:	f0 81       	ld	r31, Z
   1b49e:	e0 2d       	mov	r30, r0
   1b4a0:	62 e0       	ldi	r22, 0x02	; 2
   1b4a2:	19 95       	eicall
   1b4a4:	41 e0       	ldi	r20, 0x01	; 1
   1b4a6:	61 e0       	ldi	r22, 0x01	; 1
   1b4a8:	ce 01       	movw	r24, r28
   1b4aa:	34 d7       	rcall	.+3688   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b4ac:	82 e0       	ldi	r24, 0x02	; 2
   1b4ae:	8a 83       	std	Y+2, r24	; 0x02
   1b4b0:	df 91       	pop	r29
   1b4b2:	cf 91       	pop	r28
   1b4b4:	08 95       	ret

0001b4b6 <_ZN7RH_RF9515handleInterruptEv>:
   1b4b6:	0f 93       	push	r16
   1b4b8:	1f 93       	push	r17
   1b4ba:	cf 93       	push	r28
   1b4bc:	df 93       	push	r29
   1b4be:	ec 01       	movw	r28, r24
   1b4c0:	62 e1       	ldi	r22, 0x12	; 18
   1b4c2:	e3 d6       	rcall	.+3526   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b4c4:	18 2f       	mov	r17, r24
   1b4c6:	6c e1       	ldi	r22, 0x1C	; 28
   1b4c8:	ce 01       	movw	r24, r28
   1b4ca:	df d6       	rcall	.+3518   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b4cc:	08 2f       	mov	r16, r24
   1b4ce:	4f ef       	ldi	r20, 0xFF	; 255
   1b4d0:	62 e1       	ldi	r22, 0x12	; 18
   1b4d2:	ce 01       	movw	r24, r28
   1b4d4:	1f d7       	rcall	.+3646   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b4d6:	8a 81       	ldd	r24, Y+2	; 0x02
   1b4d8:	84 30       	cpi	r24, 0x04	; 4
   1b4da:	b1 f4       	brne	.+44     	; 0x1b508 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4dc:	81 2f       	mov	r24, r17
   1b4de:	80 7a       	andi	r24, 0xA0	; 160
   1b4e0:	41 f4       	brne	.+16     	; 0x1b4f2 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1b4e2:	fe 01       	movw	r30, r28
   1b4e4:	eb 5b       	subi	r30, 0xBB	; 187
   1b4e6:	ff 4f       	sbci	r31, 0xFF	; 255
   1b4e8:	80 81       	ld	r24, Z
   1b4ea:	88 23       	and	r24, r24
   1b4ec:	69 f0       	breq	.+26     	; 0x1b508 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4ee:	06 fd       	sbrc	r16, 6
   1b4f0:	0b c0       	rjmp	.+22     	; 0x1b508 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4f2:	8f 85       	ldd	r24, Y+15	; 0x0f
   1b4f4:	98 89       	ldd	r25, Y+16	; 0x10
   1b4f6:	01 96       	adiw	r24, 0x01	; 1
   1b4f8:	98 8b       	std	Y+16, r25	; 0x10
   1b4fa:	8f 87       	std	Y+15, r24	; 0x0f
   1b4fc:	ce 01       	movw	r24, r28
   1b4fe:	df 91       	pop	r29
   1b500:	cf 91       	pop	r28
   1b502:	1f 91       	pop	r17
   1b504:	0f 91       	pop	r16
   1b506:	29 cf       	rjmp	.-430    	; 0x1b35a <_ZN7RH_RF9510clearRxBufEv>
   1b508:	8a 81       	ldd	r24, Y+2	; 0x02
   1b50a:	84 30       	cpi	r24, 0x04	; 4
   1b50c:	11 f4       	brne	.+4      	; 0x1b512 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1b50e:	16 fd       	sbrc	r17, 6
   1b510:	0c c0       	rjmp	.+24     	; 0x1b52a <_ZN7RH_RF9515handleInterruptEv+0x74>
   1b512:	8a 81       	ldd	r24, Y+2	; 0x02
   1b514:	83 30       	cpi	r24, 0x03	; 3
   1b516:	09 f0       	breq	.+2      	; 0x1b51a <_ZN7RH_RF9515handleInterruptEv+0x64>
   1b518:	61 c0       	rjmp	.+194    	; 0x1b5dc <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b51a:	13 ff       	sbrs	r17, 3
   1b51c:	5f c0       	rjmp	.+190    	; 0x1b5dc <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b51e:	8b 89       	ldd	r24, Y+19	; 0x13
   1b520:	9c 89       	ldd	r25, Y+20	; 0x14
   1b522:	01 96       	adiw	r24, 0x01	; 1
   1b524:	9c 8b       	std	Y+20, r25	; 0x14
   1b526:	8b 8b       	std	Y+19, r24	; 0x13
   1b528:	60 c0       	rjmp	.+192    	; 0x1b5ea <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b52a:	63 e1       	ldi	r22, 0x13	; 19
   1b52c:	ce 01       	movw	r24, r28
   1b52e:	ad d6       	rcall	.+3418   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b530:	18 2f       	mov	r17, r24
   1b532:	60 e1       	ldi	r22, 0x10	; 16
   1b534:	ce 01       	movw	r24, r28
   1b536:	a9 d6       	rcall	.+3410   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b538:	48 2f       	mov	r20, r24
   1b53a:	6d e0       	ldi	r22, 0x0D	; 13
   1b53c:	ce 01       	movw	r24, r28
   1b53e:	ea d6       	rcall	.+3540   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b540:	21 2f       	mov	r18, r17
   1b542:	ae 01       	movw	r20, r28
   1b544:	41 5e       	subi	r20, 0xE1	; 225
   1b546:	5f 4f       	sbci	r21, 0xFF	; 255
   1b548:	60 e0       	ldi	r22, 0x00	; 0
   1b54a:	ce 01       	movw	r24, r28
   1b54c:	2b d7       	rcall	.+3670   	; 0x1c3a4 <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1b54e:	1e 8f       	std	Y+30, r17	; 0x1e
   1b550:	69 e1       	ldi	r22, 0x19	; 25
   1b552:	ce 01       	movw	r24, r28
   1b554:	9a d6       	rcall	.+3380   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b556:	8e 01       	movw	r16, r28
   1b558:	0c 5b       	subi	r16, 0xBC	; 188
   1b55a:	1f 4f       	sbci	r17, 0xFF	; 255
   1b55c:	87 fd       	sbrc	r24, 7
   1b55e:	8d 5f       	subi	r24, 0xFD	; 253
   1b560:	85 95       	asr	r24
   1b562:	85 95       	asr	r24
   1b564:	f8 01       	movw	r30, r16
   1b566:	80 83       	st	Z, r24
   1b568:	6a e1       	ldi	r22, 0x1A	; 26
   1b56a:	ce 01       	movw	r24, r28
   1b56c:	8e d6       	rcall	.+3356   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b56e:	90 e0       	ldi	r25, 0x00	; 0
   1b570:	9e 87       	std	Y+14, r25	; 0x0e
   1b572:	8d 87       	std	Y+13, r24	; 0x0d
   1b574:	f8 01       	movw	r30, r16
   1b576:	20 81       	ld	r18, Z
   1b578:	27 ff       	sbrs	r18, 7
   1b57a:	09 c0       	rjmp	.+18     	; 0x1b58e <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1b57c:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b57e:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b580:	82 0f       	add	r24, r18
   1b582:	91 1d       	adc	r25, r1
   1b584:	27 fd       	sbrc	r18, 7
   1b586:	9a 95       	dec	r25
   1b588:	9e 87       	std	Y+14, r25	; 0x0e
   1b58a:	8d 87       	std	Y+13, r24	; 0x0d
   1b58c:	0d c0       	rjmp	.+26     	; 0x1b5a8 <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1b58e:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b590:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b592:	24 e0       	ldi	r18, 0x04	; 4
   1b594:	88 0f       	add	r24, r24
   1b596:	99 1f       	adc	r25, r25
   1b598:	2a 95       	dec	r18
   1b59a:	e1 f7       	brne	.-8      	; 0x1b594 <_ZN7RH_RF9515handleInterruptEv+0xde>
   1b59c:	6f e0       	ldi	r22, 0x0F	; 15
   1b59e:	70 e0       	ldi	r23, 0x00	; 0
   1b5a0:	0e 94 4a e7 	call	0x1ce94	; 0x1ce94 <__divmodhi4>
   1b5a4:	7e 87       	std	Y+14, r23	; 0x0e
   1b5a6:	6d 87       	std	Y+13, r22	; 0x0d
   1b5a8:	fe 01       	movw	r30, r28
   1b5aa:	ed 5b       	subi	r30, 0xBD	; 189
   1b5ac:	ff 4f       	sbci	r31, 0xFF	; 255
   1b5ae:	80 81       	ld	r24, Z
   1b5b0:	88 23       	and	r24, r24
   1b5b2:	29 f0       	breq	.+10     	; 0x1b5be <_ZN7RH_RF9515handleInterruptEv+0x108>
   1b5b4:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b5b6:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b5b8:	8d 59       	subi	r24, 0x9D	; 157
   1b5ba:	91 09       	sbc	r25, r1
   1b5bc:	04 c0       	rjmp	.+8      	; 0x1b5c6 <_ZN7RH_RF9515handleInterruptEv+0x110>
   1b5be:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b5c0:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b5c2:	84 5a       	subi	r24, 0xA4	; 164
   1b5c4:	91 09       	sbc	r25, r1
   1b5c6:	9e 87       	std	Y+14, r25	; 0x0e
   1b5c8:	8d 87       	std	Y+13, r24	; 0x0d
   1b5ca:	ce 01       	movw	r24, r28
   1b5cc:	a6 de       	rcall	.-692    	; 0x1b31a <_ZN7RH_RF9513validateRxBufEv>
   1b5ce:	fe 01       	movw	r30, r28
   1b5d0:	ee 5b       	subi	r30, 0xBE	; 190
   1b5d2:	ff 4f       	sbci	r31, 0xFF	; 255
   1b5d4:	80 81       	ld	r24, Z
   1b5d6:	88 23       	and	r24, r24
   1b5d8:	71 f0       	breq	.+28     	; 0x1b5f6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5da:	07 c0       	rjmp	.+14     	; 0x1b5ea <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b5dc:	8a 81       	ldd	r24, Y+2	; 0x02
   1b5de:	85 30       	cpi	r24, 0x05	; 5
   1b5e0:	51 f4       	brne	.+20     	; 0x1b5f6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5e2:	12 ff       	sbrs	r17, 2
   1b5e4:	08 c0       	rjmp	.+16     	; 0x1b5f6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5e6:	11 70       	andi	r17, 0x01	; 1
   1b5e8:	1d 8b       	std	Y+21, r17	; 0x15
   1b5ea:	ce 01       	movw	r24, r28
   1b5ec:	df 91       	pop	r29
   1b5ee:	cf 91       	pop	r28
   1b5f0:	1f 91       	pop	r17
   1b5f2:	0f 91       	pop	r16
   1b5f4:	46 cf       	rjmp	.-372    	; 0x1b482 <_ZN7RH_RF9511setModeIdleEv>
   1b5f6:	df 91       	pop	r29
   1b5f8:	cf 91       	pop	r28
   1b5fa:	1f 91       	pop	r17
   1b5fc:	0f 91       	pop	r16
   1b5fe:	08 95       	ret

0001b600 <_ZN7RH_RF954isr0Ev>:
   1b600:	80 91 e0 17 	lds	r24, 0x17E0	; 0x8017e0 <_ZN7RH_RF9519_deviceForInterruptE>
   1b604:	90 91 e1 17 	lds	r25, 0x17E1	; 0x8017e1 <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1b608:	00 97       	sbiw	r24, 0x00	; 0
   1b60a:	09 f0       	breq	.+2      	; 0x1b60e <_ZN7RH_RF954isr0Ev+0xe>
   1b60c:	54 cf       	rjmp	.-344    	; 0x1b4b6 <_ZN7RH_RF9515handleInterruptEv>
   1b60e:	08 95       	ret

0001b610 <_ZN7RH_RF954isr1Ev>:
   1b610:	80 91 e2 17 	lds	r24, 0x17E2	; 0x8017e2 <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1b614:	90 91 e3 17 	lds	r25, 0x17E3	; 0x8017e3 <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1b618:	00 97       	sbiw	r24, 0x00	; 0
   1b61a:	09 f0       	breq	.+2      	; 0x1b61e <_ZN7RH_RF954isr1Ev+0xe>
   1b61c:	4c cf       	rjmp	.-360    	; 0x1b4b6 <_ZN7RH_RF9515handleInterruptEv>
   1b61e:	08 95       	ret

0001b620 <_ZN7RH_RF954isr2Ev>:
   1b620:	80 91 e4 17 	lds	r24, 0x17E4	; 0x8017e4 <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1b624:	90 91 e5 17 	lds	r25, 0x17E5	; 0x8017e5 <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1b628:	00 97       	sbiw	r24, 0x00	; 0
   1b62a:	09 f0       	breq	.+2      	; 0x1b62e <_ZN7RH_RF954isr2Ev+0xe>
   1b62c:	44 cf       	rjmp	.-376    	; 0x1b4b6 <_ZN7RH_RF9515handleInterruptEv>
   1b62e:	08 95       	ret

0001b630 <_ZN7RH_RF959setModeRxEv>:
   1b630:	cf 93       	push	r28
   1b632:	df 93       	push	r29
   1b634:	fc 01       	movw	r30, r24
   1b636:	22 81       	ldd	r18, Z+2	; 0x02
   1b638:	24 30       	cpi	r18, 0x04	; 4
   1b63a:	a9 f0       	breq	.+42     	; 0x1b666 <_ZN7RH_RF959setModeRxEv+0x36>
   1b63c:	ec 01       	movw	r28, r24
   1b63e:	01 90       	ld	r0, Z+
   1b640:	f0 81       	ld	r31, Z
   1b642:	e0 2d       	mov	r30, r0
   1b644:	e0 5c       	subi	r30, 0xC0	; 192
   1b646:	ff 4f       	sbci	r31, 0xFF	; 255
   1b648:	01 90       	ld	r0, Z+
   1b64a:	f0 81       	ld	r31, Z
   1b64c:	e0 2d       	mov	r30, r0
   1b64e:	64 e0       	ldi	r22, 0x04	; 4
   1b650:	19 95       	eicall
   1b652:	45 e0       	ldi	r20, 0x05	; 5
   1b654:	61 e0       	ldi	r22, 0x01	; 1
   1b656:	ce 01       	movw	r24, r28
   1b658:	5d d6       	rcall	.+3258   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b65a:	40 e0       	ldi	r20, 0x00	; 0
   1b65c:	60 e4       	ldi	r22, 0x40	; 64
   1b65e:	ce 01       	movw	r24, r28
   1b660:	59 d6       	rcall	.+3250   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b662:	84 e0       	ldi	r24, 0x04	; 4
   1b664:	8a 83       	std	Y+2, r24	; 0x02
   1b666:	df 91       	pop	r29
   1b668:	cf 91       	pop	r28
   1b66a:	08 95       	ret

0001b66c <_ZN7RH_RF959availableEv>:
   1b66c:	cf 93       	push	r28
   1b66e:	df 93       	push	r29
   1b670:	fc 01       	movw	r30, r24
   1b672:	22 81       	ldd	r18, Z+2	; 0x02
   1b674:	23 30       	cpi	r18, 0x03	; 3
   1b676:	31 f0       	breq	.+12     	; 0x1b684 <_ZN7RH_RF959availableEv+0x18>
   1b678:	ec 01       	movw	r28, r24
   1b67a:	da df       	rcall	.-76     	; 0x1b630 <_ZN7RH_RF959setModeRxEv>
   1b67c:	ce 5b       	subi	r28, 0xBE	; 190
   1b67e:	df 4f       	sbci	r29, 0xFF	; 255
   1b680:	88 81       	ld	r24, Y
   1b682:	01 c0       	rjmp	.+2      	; 0x1b686 <_ZN7RH_RF959availableEv+0x1a>
   1b684:	80 e0       	ldi	r24, 0x00	; 0
   1b686:	df 91       	pop	r29
   1b688:	cf 91       	pop	r28
   1b68a:	08 95       	ret

0001b68c <_ZN7RH_RF959setModeTxEv>:
   1b68c:	cf 93       	push	r28
   1b68e:	df 93       	push	r29
   1b690:	fc 01       	movw	r30, r24
   1b692:	22 81       	ldd	r18, Z+2	; 0x02
   1b694:	23 30       	cpi	r18, 0x03	; 3
   1b696:	a9 f0       	breq	.+42     	; 0x1b6c2 <_ZN7RH_RF959setModeTxEv+0x36>
   1b698:	ec 01       	movw	r28, r24
   1b69a:	01 90       	ld	r0, Z+
   1b69c:	f0 81       	ld	r31, Z
   1b69e:	e0 2d       	mov	r30, r0
   1b6a0:	e0 5c       	subi	r30, 0xC0	; 192
   1b6a2:	ff 4f       	sbci	r31, 0xFF	; 255
   1b6a4:	01 90       	ld	r0, Z+
   1b6a6:	f0 81       	ld	r31, Z
   1b6a8:	e0 2d       	mov	r30, r0
   1b6aa:	63 e0       	ldi	r22, 0x03	; 3
   1b6ac:	19 95       	eicall
   1b6ae:	43 e0       	ldi	r20, 0x03	; 3
   1b6b0:	61 e0       	ldi	r22, 0x01	; 1
   1b6b2:	ce 01       	movw	r24, r28
   1b6b4:	2f d6       	rcall	.+3166   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6b6:	40 e4       	ldi	r20, 0x40	; 64
   1b6b8:	60 e4       	ldi	r22, 0x40	; 64
   1b6ba:	ce 01       	movw	r24, r28
   1b6bc:	2b d6       	rcall	.+3158   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6be:	83 e0       	ldi	r24, 0x03	; 3
   1b6c0:	8a 83       	std	Y+2, r24	; 0x02
   1b6c2:	df 91       	pop	r29
   1b6c4:	cf 91       	pop	r28
   1b6c6:	08 95       	ret

0001b6c8 <_ZN7RH_RF954sendEPKhh>:
   1b6c8:	ef 92       	push	r14
   1b6ca:	ff 92       	push	r15
   1b6cc:	0f 93       	push	r16
   1b6ce:	1f 93       	push	r17
   1b6d0:	cf 93       	push	r28
   1b6d2:	df 93       	push	r29
   1b6d4:	40 32       	cpi	r20, 0x20	; 32
   1b6d6:	10 f0       	brcs	.+4      	; 0x1b6dc <_ZN7RH_RF954sendEPKhh+0x14>
   1b6d8:	00 e0       	ldi	r16, 0x00	; 0
   1b6da:	35 c0       	rjmp	.+106    	; 0x1b746 <_ZN7RH_RF954sendEPKhh+0x7e>
   1b6dc:	14 2f       	mov	r17, r20
   1b6de:	7b 01       	movw	r14, r22
   1b6e0:	ec 01       	movw	r28, r24
   1b6e2:	e8 81       	ld	r30, Y
   1b6e4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b6e6:	00 88       	ldd	r0, Z+16	; 0x10
   1b6e8:	f1 89       	ldd	r31, Z+17	; 0x11
   1b6ea:	e0 2d       	mov	r30, r0
   1b6ec:	19 95       	eicall
   1b6ee:	ce 01       	movw	r24, r28
   1b6f0:	c8 de       	rcall	.-624    	; 0x1b482 <_ZN7RH_RF9511setModeIdleEv>
   1b6f2:	e8 81       	ld	r30, Y
   1b6f4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b6f6:	06 88       	ldd	r0, Z+22	; 0x16
   1b6f8:	f7 89       	ldd	r31, Z+23	; 0x17
   1b6fa:	e0 2d       	mov	r30, r0
   1b6fc:	ce 01       	movw	r24, r28
   1b6fe:	19 95       	eicall
   1b700:	08 2f       	mov	r16, r24
   1b702:	88 23       	and	r24, r24
   1b704:	49 f3       	breq	.-46     	; 0x1b6d8 <_ZN7RH_RF954sendEPKhh+0x10>
   1b706:	40 e0       	ldi	r20, 0x00	; 0
   1b708:	6d e0       	ldi	r22, 0x0D	; 13
   1b70a:	ce 01       	movw	r24, r28
   1b70c:	03 d6       	rcall	.+3078   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b70e:	49 85       	ldd	r20, Y+9	; 0x09
   1b710:	60 e0       	ldi	r22, 0x00	; 0
   1b712:	ce 01       	movw	r24, r28
   1b714:	ff d5       	rcall	.+3070   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b716:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b718:	60 e0       	ldi	r22, 0x00	; 0
   1b71a:	ce 01       	movw	r24, r28
   1b71c:	fb d5       	rcall	.+3062   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b71e:	4b 85       	ldd	r20, Y+11	; 0x0b
   1b720:	60 e0       	ldi	r22, 0x00	; 0
   1b722:	ce 01       	movw	r24, r28
   1b724:	f7 d5       	rcall	.+3054   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b726:	4c 85       	ldd	r20, Y+12	; 0x0c
   1b728:	60 e0       	ldi	r22, 0x00	; 0
   1b72a:	ce 01       	movw	r24, r28
   1b72c:	f3 d5       	rcall	.+3046   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b72e:	21 2f       	mov	r18, r17
   1b730:	a7 01       	movw	r20, r14
   1b732:	60 e0       	ldi	r22, 0x00	; 0
   1b734:	ce 01       	movw	r24, r28
   1b736:	91 d6       	rcall	.+3362   	; 0x1c45a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1b738:	44 e0       	ldi	r20, 0x04	; 4
   1b73a:	41 0f       	add	r20, r17
   1b73c:	62 e2       	ldi	r22, 0x22	; 34
   1b73e:	ce 01       	movw	r24, r28
   1b740:	e9 d5       	rcall	.+3026   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b742:	ce 01       	movw	r24, r28
   1b744:	a3 df       	rcall	.-186    	; 0x1b68c <_ZN7RH_RF959setModeTxEv>
   1b746:	80 2f       	mov	r24, r16
   1b748:	df 91       	pop	r29
   1b74a:	cf 91       	pop	r28
   1b74c:	1f 91       	pop	r17
   1b74e:	0f 91       	pop	r16
   1b750:	ff 90       	pop	r15
   1b752:	ef 90       	pop	r14
   1b754:	08 95       	ret

0001b756 <_ZN7RH_RF9510setTxPowerEab>:
   1b756:	cf 93       	push	r28
   1b758:	df 93       	push	r29
   1b75a:	ec 01       	movw	r28, r24
   1b75c:	4b 8f       	std	Y+27, r20	; 0x1b
   1b75e:	44 23       	and	r20, r20
   1b760:	91 f0       	breq	.+36     	; 0x1b786 <_ZN7RH_RF9510setTxPowerEab+0x30>
   1b762:	60 31       	cpi	r22, 0x10	; 16
   1b764:	24 f4       	brge	.+8      	; 0x1b76e <_ZN7RH_RF9510setTxPowerEab+0x18>
   1b766:	67 ff       	sbrs	r22, 7
   1b768:	03 c0       	rjmp	.+6      	; 0x1b770 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b76a:	60 e0       	ldi	r22, 0x00	; 0
   1b76c:	01 c0       	rjmp	.+2      	; 0x1b770 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b76e:	6f e0       	ldi	r22, 0x0F	; 15
   1b770:	46 2f       	mov	r20, r22
   1b772:	40 67       	ori	r20, 0x70	; 112
   1b774:	69 e0       	ldi	r22, 0x09	; 9
   1b776:	ce 01       	movw	r24, r28
   1b778:	cd d5       	rcall	.+2970   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b77a:	44 e0       	ldi	r20, 0x04	; 4
   1b77c:	6d e4       	ldi	r22, 0x4D	; 77
   1b77e:	ce 01       	movw	r24, r28
   1b780:	df 91       	pop	r29
   1b782:	cf 91       	pop	r28
   1b784:	c7 c5       	rjmp	.+2958   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b786:	df 91       	pop	r29
   1b788:	cf 91       	pop	r28
   1b78a:	6b cd       	rjmp	.-1322   	; 0x1b262 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001b78c <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1b78c:	0f 93       	push	r16
   1b78e:	1f 93       	push	r17
   1b790:	cf 93       	push	r28
   1b792:	df 93       	push	r29
   1b794:	ec 01       	movw	r28, r24
   1b796:	8b 01       	movw	r16, r22
   1b798:	fb 01       	movw	r30, r22
   1b79a:	40 81       	ld	r20, Z
   1b79c:	6d e1       	ldi	r22, 0x1D	; 29
   1b79e:	ba d5       	rcall	.+2932   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b7a0:	f8 01       	movw	r30, r16
   1b7a2:	41 81       	ldd	r20, Z+1	; 0x01
   1b7a4:	6e e1       	ldi	r22, 0x1E	; 30
   1b7a6:	ce 01       	movw	r24, r28
   1b7a8:	b5 d5       	rcall	.+2922   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b7aa:	f8 01       	movw	r30, r16
   1b7ac:	42 81       	ldd	r20, Z+2	; 0x02
   1b7ae:	66 e2       	ldi	r22, 0x26	; 38
   1b7b0:	ce 01       	movw	r24, r28
   1b7b2:	df 91       	pop	r29
   1b7b4:	cf 91       	pop	r28
   1b7b6:	1f 91       	pop	r17
   1b7b8:	0f 91       	pop	r16
   1b7ba:	ac c5       	rjmp	.+2904   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>

0001b7bc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1b7bc:	0f 93       	push	r16
   1b7be:	1f 93       	push	r17
   1b7c0:	cf 93       	push	r28
   1b7c2:	df 93       	push	r29
   1b7c4:	00 d0       	rcall	.+0      	; 0x1b7c6 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1b7c6:	cd b7       	in	r28, 0x3d	; 61
   1b7c8:	de b7       	in	r29, 0x3e	; 62
   1b7ca:	70 e0       	ldi	r23, 0x00	; 0
   1b7cc:	66 30       	cpi	r22, 0x06	; 6
   1b7ce:	71 05       	cpc	r23, r1
   1b7d0:	ac f4       	brge	.+42     	; 0x1b7fc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1b7d2:	8c 01       	movw	r16, r24
   1b7d4:	cb 01       	movw	r24, r22
   1b7d6:	88 0f       	add	r24, r24
   1b7d8:	99 1f       	adc	r25, r25
   1b7da:	68 0f       	add	r22, r24
   1b7dc:	79 1f       	adc	r23, r25
   1b7de:	6a 5f       	subi	r22, 0xFA	; 250
   1b7e0:	78 4b       	sbci	r23, 0xB8	; 184
   1b7e2:	43 e0       	ldi	r20, 0x03	; 3
   1b7e4:	50 e0       	ldi	r21, 0x00	; 0
   1b7e6:	ce 01       	movw	r24, r28
   1b7e8:	01 96       	adiw	r24, 0x01	; 1
   1b7ea:	0e 94 89 e9 	call	0x1d312	; 0x1d312 <memcpy_P>
   1b7ee:	be 01       	movw	r22, r28
   1b7f0:	6f 5f       	subi	r22, 0xFF	; 255
   1b7f2:	7f 4f       	sbci	r23, 0xFF	; 255
   1b7f4:	c8 01       	movw	r24, r16
   1b7f6:	ca df       	rcall	.-108    	; 0x1b78c <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1b7f8:	81 e0       	ldi	r24, 0x01	; 1
   1b7fa:	01 c0       	rjmp	.+2      	; 0x1b7fe <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1b7fc:	80 e0       	ldi	r24, 0x00	; 0
   1b7fe:	0f 90       	pop	r0
   1b800:	0f 90       	pop	r0
   1b802:	0f 90       	pop	r0
   1b804:	df 91       	pop	r29
   1b806:	cf 91       	pop	r28
   1b808:	1f 91       	pop	r17
   1b80a:	0f 91       	pop	r16
   1b80c:	08 95       	ret

0001b80e <_ZN7RH_RF9517setPreambleLengthEj>:
   1b80e:	1f 93       	push	r17
   1b810:	cf 93       	push	r28
   1b812:	df 93       	push	r29
   1b814:	ec 01       	movw	r28, r24
   1b816:	16 2f       	mov	r17, r22
   1b818:	47 2f       	mov	r20, r23
   1b81a:	60 e2       	ldi	r22, 0x20	; 32
   1b81c:	7b d5       	rcall	.+2806   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b81e:	41 2f       	mov	r20, r17
   1b820:	61 e2       	ldi	r22, 0x21	; 33
   1b822:	ce 01       	movw	r24, r28
   1b824:	df 91       	pop	r29
   1b826:	cf 91       	pop	r28
   1b828:	1f 91       	pop	r17
   1b82a:	74 c5       	rjmp	.+2792   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>

0001b82c <_ZN7RH_RF954initEv>:
   1b82c:	ff 92       	push	r15
   1b82e:	0f 93       	push	r16
   1b830:	1f 93       	push	r17
   1b832:	cf 93       	push	r28
   1b834:	df 93       	push	r29
   1b836:	ec 01       	movw	r28, r24
   1b838:	e4 d4       	rcall	.+2504   	; 0x1c202 <_ZN11RHSPIDriver4initEv>
   1b83a:	f8 2e       	mov	r15, r24
   1b83c:	81 11       	cpse	r24, r1
   1b83e:	02 c0       	rjmp	.+4      	; 0x1b844 <_ZN7RH_RF954initEv+0x18>
   1b840:	f1 2c       	mov	r15, r1
   1b842:	79 c0       	rjmp	.+242    	; 0x1b936 <_ZN7RH_RF954initEv+0x10a>
   1b844:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b846:	8f 3f       	cpi	r24, 0xFF	; 255
   1b848:	79 f0       	breq	.+30     	; 0x1b868 <_ZN7RH_RF954initEv+0x3c>
   1b84a:	82 30       	cpi	r24, 0x02	; 2
   1b84c:	09 f4       	brne	.+2      	; 0x1b850 <_ZN7RH_RF954initEv+0x24>
   1b84e:	6a c0       	rjmp	.+212    	; 0x1b924 <_ZN7RH_RF954initEv+0xf8>
   1b850:	83 30       	cpi	r24, 0x03	; 3
   1b852:	09 f4       	brne	.+2      	; 0x1b856 <_ZN7RH_RF954initEv+0x2a>
   1b854:	6a c0       	rjmp	.+212    	; 0x1b92a <_ZN7RH_RF954initEv+0xfe>
   1b856:	9e ee       	ldi	r25, 0xEE	; 238
   1b858:	98 0f       	add	r25, r24
   1b85a:	94 30       	cpi	r25, 0x04	; 4
   1b85c:	88 f7       	brcc	.-30     	; 0x1b840 <_ZN7RH_RF954initEv+0x14>
   1b85e:	07 e1       	ldi	r16, 0x17	; 23
   1b860:	10 e0       	ldi	r17, 0x00	; 0
   1b862:	08 1b       	sub	r16, r24
   1b864:	11 09       	sbc	r17, r1
   1b866:	63 c0       	rjmp	.+198    	; 0x1b92e <_ZN7RH_RF954initEv+0x102>
   1b868:	0f ef       	ldi	r16, 0xFF	; 255
   1b86a:	1f ef       	ldi	r17, 0xFF	; 255
   1b86c:	40 e8       	ldi	r20, 0x80	; 128
   1b86e:	61 e0       	ldi	r22, 0x01	; 1
   1b870:	ce 01       	movw	r24, r28
   1b872:	50 d5       	rcall	.+2720   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b874:	6a e0       	ldi	r22, 0x0A	; 10
   1b876:	70 e0       	ldi	r23, 0x00	; 0
   1b878:	80 e0       	ldi	r24, 0x00	; 0
   1b87a:	90 e0       	ldi	r25, 0x00	; 0
   1b87c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1b880:	61 e0       	ldi	r22, 0x01	; 1
   1b882:	ce 01       	movw	r24, r28
   1b884:	02 d5       	rcall	.+2564   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b886:	80 38       	cpi	r24, 0x80	; 128
   1b888:	d9 f6       	brne	.-74     	; 0x1b840 <_ZN7RH_RF954initEv+0x14>
   1b88a:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b88c:	8f 3f       	cpi	r24, 0xFF	; 255
   1b88e:	71 f1       	breq	.+92     	; 0x1b8ec <_ZN7RH_RF954initEv+0xc0>
   1b890:	60 e0       	ldi	r22, 0x00	; 0
   1b892:	40 d8       	rcall	.-3968   	; 0x1a914 <pinMode>
   1b894:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b896:	8f 3f       	cpi	r24, 0xFF	; 255
   1b898:	49 f4       	brne	.+18     	; 0x1b8ac <_ZN7RH_RF954initEv+0x80>
   1b89a:	80 91 df 17 	lds	r24, 0x17DF	; 0x8017df <_ZN7RH_RF9515_interruptCountE>
   1b89e:	84 30       	cpi	r24, 0x04	; 4
   1b8a0:	78 f6       	brcc	.-98     	; 0x1b840 <_ZN7RH_RF954initEv+0x14>
   1b8a2:	91 e0       	ldi	r25, 0x01	; 1
   1b8a4:	98 0f       	add	r25, r24
   1b8a6:	90 93 df 17 	sts	0x17DF, r25	; 0x8017df <_ZN7RH_RF9515_interruptCountE>
   1b8aa:	8d 8f       	std	Y+29, r24	; 0x1d
   1b8ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b8ae:	e8 2f       	mov	r30, r24
   1b8b0:	f0 e0       	ldi	r31, 0x00	; 0
   1b8b2:	ee 0f       	add	r30, r30
   1b8b4:	ff 1f       	adc	r31, r31
   1b8b6:	e0 52       	subi	r30, 0x20	; 32
   1b8b8:	f8 4e       	sbci	r31, 0xE8	; 232
   1b8ba:	d1 83       	std	Z+1, r29	; 0x01
   1b8bc:	c0 83       	st	Z, r28
   1b8be:	81 11       	cpse	r24, r1
   1b8c0:	05 c0       	rjmp	.+10     	; 0x1b8cc <_ZN7RH_RF954initEv+0xa0>
   1b8c2:	43 e0       	ldi	r20, 0x03	; 3
   1b8c4:	50 e0       	ldi	r21, 0x00	; 0
   1b8c6:	60 e0       	ldi	r22, 0x00	; 0
   1b8c8:	7b ed       	ldi	r23, 0xDB	; 219
   1b8ca:	0e c0       	rjmp	.+28     	; 0x1b8e8 <_ZN7RH_RF954initEv+0xbc>
   1b8cc:	81 30       	cpi	r24, 0x01	; 1
   1b8ce:	29 f4       	brne	.+10     	; 0x1b8da <_ZN7RH_RF954initEv+0xae>
   1b8d0:	43 e0       	ldi	r20, 0x03	; 3
   1b8d2:	50 e0       	ldi	r21, 0x00	; 0
   1b8d4:	68 e0       	ldi	r22, 0x08	; 8
   1b8d6:	7b ed       	ldi	r23, 0xDB	; 219
   1b8d8:	07 c0       	rjmp	.+14     	; 0x1b8e8 <_ZN7RH_RF954initEv+0xbc>
   1b8da:	82 30       	cpi	r24, 0x02	; 2
   1b8dc:	09 f0       	breq	.+2      	; 0x1b8e0 <_ZN7RH_RF954initEv+0xb4>
   1b8de:	b0 cf       	rjmp	.-160    	; 0x1b840 <_ZN7RH_RF954initEv+0x14>
   1b8e0:	43 e0       	ldi	r20, 0x03	; 3
   1b8e2:	50 e0       	ldi	r21, 0x00	; 0
   1b8e4:	60 e1       	ldi	r22, 0x10	; 16
   1b8e6:	7b ed       	ldi	r23, 0xDB	; 219
   1b8e8:	80 2f       	mov	r24, r16
   1b8ea:	49 d2       	rcall	.+1170   	; 0x1bd7e <attachInterrupt>
   1b8ec:	40 e0       	ldi	r20, 0x00	; 0
   1b8ee:	6e e0       	ldi	r22, 0x0E	; 14
   1b8f0:	ce 01       	movw	r24, r28
   1b8f2:	10 d5       	rcall	.+2592   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8f4:	40 e0       	ldi	r20, 0x00	; 0
   1b8f6:	6f e0       	ldi	r22, 0x0F	; 15
   1b8f8:	ce 01       	movw	r24, r28
   1b8fa:	0c d5       	rcall	.+2584   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8fc:	ce 01       	movw	r24, r28
   1b8fe:	c1 dd       	rcall	.-1150   	; 0x1b482 <_ZN7RH_RF9511setModeIdleEv>
   1b900:	60 e0       	ldi	r22, 0x00	; 0
   1b902:	ce 01       	movw	r24, r28
   1b904:	5b df       	rcall	.-330    	; 0x1b7bc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1b906:	68 e0       	ldi	r22, 0x08	; 8
   1b908:	70 e0       	ldi	r23, 0x00	; 0
   1b90a:	ce 01       	movw	r24, r28
   1b90c:	80 df       	rcall	.-256    	; 0x1b80e <_ZN7RH_RF9517setPreambleLengthEj>
   1b90e:	40 e0       	ldi	r20, 0x00	; 0
   1b910:	50 e0       	ldi	r21, 0x00	; 0
   1b912:	69 ed       	ldi	r22, 0xD9	; 217
   1b914:	73 e4       	ldi	r23, 0x43	; 67
   1b916:	ce 01       	movw	r24, r28
   1b918:	68 dd       	rcall	.-1328   	; 0x1b3ea <_ZN7RH_RF9512setFrequencyEf>
   1b91a:	1b 8e       	std	Y+27, r1	; 0x1b
   1b91c:	6d e0       	ldi	r22, 0x0D	; 13
   1b91e:	ce 01       	movw	r24, r28
   1b920:	a0 dc       	rcall	.-1728   	; 0x1b262 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1b922:	09 c0       	rjmp	.+18     	; 0x1b936 <_ZN7RH_RF954initEv+0x10a>
   1b924:	00 e0       	ldi	r16, 0x00	; 0
   1b926:	10 e0       	ldi	r17, 0x00	; 0
   1b928:	02 c0       	rjmp	.+4      	; 0x1b92e <_ZN7RH_RF954initEv+0x102>
   1b92a:	01 e0       	ldi	r16, 0x01	; 1
   1b92c:	10 e0       	ldi	r17, 0x00	; 0
   1b92e:	60 2f       	mov	r22, r16
   1b930:	ce 01       	movw	r24, r28
   1b932:	ed d5       	rcall	.+3034   	; 0x1c50e <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1b934:	9b cf       	rjmp	.-202    	; 0x1b86c <_ZN7RH_RF954initEv+0x40>
   1b936:	8f 2d       	mov	r24, r15
   1b938:	df 91       	pop	r29
   1b93a:	cf 91       	pop	r28
   1b93c:	1f 91       	pop	r17
   1b93e:	0f 91       	pop	r16
   1b940:	ff 90       	pop	r15
   1b942:	08 95       	ret

0001b944 <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1b944:	8f 92       	push	r8
   1b946:	9f 92       	push	r9
   1b948:	af 92       	push	r10
   1b94a:	bf 92       	push	r11
   1b94c:	ef 92       	push	r14
   1b94e:	ff 92       	push	r15
   1b950:	1f 93       	push	r17
   1b952:	cf 93       	push	r28
   1b954:	df 93       	push	r29
   1b956:	cd b7       	in	r28, 0x3d	; 61
   1b958:	de b7       	in	r29, 0x3e	; 62
   1b95a:	a8 97       	sbiw	r28, 0x28	; 40
   1b95c:	0f b6       	in	r0, 0x3f	; 63
   1b95e:	f8 94       	cli
   1b960:	de bf       	out	0x3e, r29	; 62
   1b962:	0f be       	out	0x3f, r0	; 63
   1b964:	cd bf       	out	0x3d, r28	; 61
   1b966:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1b968:	6d e1       	ldi	r22, 0x1D	; 29
   1b96a:	8f d4       	rcall	.+2334   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b96c:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1b96e:	6e e1       	ldi	r22, 0x1E	; 30
   1b970:	c7 01       	movw	r24, r14
   1b972:	8b d4       	rcall	.+2326   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1b974:	98 e2       	ldi	r25, 0x28	; 40
   1b976:	e7 ec       	ldi	r30, 0xC7	; 199
   1b978:	f2 e0       	ldi	r31, 0x02	; 2
   1b97a:	de 01       	movw	r26, r28
   1b97c:	11 96       	adiw	r26, 0x01	; 1
   1b97e:	01 90       	ld	r0, Z+
   1b980:	0d 92       	st	X+, r0
   1b982:	9a 95       	dec	r25
   1b984:	e1 f7       	brne	.-8      	; 0x1b97e <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1b986:	68 2f       	mov	r22, r24
   1b988:	70 e0       	ldi	r23, 0x00	; 0
   1b98a:	84 e0       	ldi	r24, 0x04	; 4
   1b98c:	75 95       	asr	r23
   1b98e:	67 95       	ror	r22
   1b990:	8a 95       	dec	r24
   1b992:	e1 f7       	brne	.-8      	; 0x1b98c <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1b994:	70 e0       	ldi	r23, 0x00	; 0
   1b996:	80 e0       	ldi	r24, 0x00	; 0
   1b998:	90 e0       	ldi	r25, 0x00	; 0
   1b99a:	0e 94 c9 cd 	call	0x19b92	; 0x19b92 <__floatunsisf>
   1b99e:	9b 01       	movw	r18, r22
   1b9a0:	ac 01       	movw	r20, r24
   1b9a2:	60 e0       	ldi	r22, 0x00	; 0
   1b9a4:	70 e0       	ldi	r23, 0x00	; 0
   1b9a6:	80 e0       	ldi	r24, 0x00	; 0
   1b9a8:	90 e4       	ldi	r25, 0x40	; 64
   1b9aa:	0e 94 5e e5 	call	0x1cabc	; 0x1cabc <pow>
   1b9ae:	20 e0       	ldi	r18, 0x00	; 0
   1b9b0:	30 e0       	ldi	r19, 0x00	; 0
   1b9b2:	4a e7       	ldi	r20, 0x7A	; 122
   1b9b4:	54 e4       	ldi	r21, 0x44	; 68
   1b9b6:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1b9ba:	e1 2f       	mov	r30, r17
   1b9bc:	f0 e0       	ldi	r31, 0x00	; 0
   1b9be:	24 e0       	ldi	r18, 0x04	; 4
   1b9c0:	f5 95       	asr	r31
   1b9c2:	e7 95       	ror	r30
   1b9c4:	2a 95       	dec	r18
   1b9c6:	e1 f7       	brne	.-8      	; 0x1b9c0 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1b9c8:	ee 0f       	add	r30, r30
   1b9ca:	ff 1f       	adc	r31, r31
   1b9cc:	ee 0f       	add	r30, r30
   1b9ce:	ff 1f       	adc	r31, r31
   1b9d0:	21 e0       	ldi	r18, 0x01	; 1
   1b9d2:	30 e0       	ldi	r19, 0x00	; 0
   1b9d4:	2c 0f       	add	r18, r28
   1b9d6:	3d 1f       	adc	r19, r29
   1b9d8:	e2 0f       	add	r30, r18
   1b9da:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1b9dc:	20 81       	ld	r18, Z
   1b9de:	31 81       	ldd	r19, Z+1	; 0x01
   1b9e0:	42 81       	ldd	r20, Z+2	; 0x02
   1b9e2:	53 81       	ldd	r21, Z+3	; 0x03
   1b9e4:	0e 94 35 cd 	call	0x19a6a	; 0x19a6a <__divsf3>
   1b9e8:	4b 01       	movw	r8, r22
   1b9ea:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1b9ec:	66 e2       	ldi	r22, 0x26	; 38
   1b9ee:	c7 01       	movw	r24, r14
   1b9f0:	4c d4       	rcall	.+2200   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1b9f2:	18 2f       	mov	r17, r24
   1b9f4:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1b9f6:	20 e0       	ldi	r18, 0x00	; 0
   1b9f8:	30 e0       	ldi	r19, 0x00	; 0
   1b9fa:	40 e8       	ldi	r20, 0x80	; 128
   1b9fc:	51 e4       	ldi	r21, 0x41	; 65
   1b9fe:	c5 01       	movw	r24, r10
   1ba00:	b4 01       	movw	r22, r8
   1ba02:	0e 94 7b ce 	call	0x19cf6	; 0x19cf6 <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1ba06:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1ba08:	18 16       	cp	r1, r24
   1ba0a:	0c f4       	brge	.+2      	; 0x1ba0e <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1ba0c:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1ba0e:	66 e2       	ldi	r22, 0x26	; 38
   1ba10:	c7 01       	movw	r24, r14
   
}
   1ba12:	a8 96       	adiw	r28, 0x28	; 40
   1ba14:	0f b6       	in	r0, 0x3f	; 63
   1ba16:	f8 94       	cli
   1ba18:	de bf       	out	0x3e, r29	; 62
   1ba1a:	0f be       	out	0x3f, r0	; 63
   1ba1c:	cd bf       	out	0x3d, r28	; 61
   1ba1e:	df 91       	pop	r29
   1ba20:	cf 91       	pop	r28
   1ba22:	1f 91       	pop	r17
   1ba24:	ff 90       	pop	r15
   1ba26:	ef 90       	pop	r14
   1ba28:	bf 90       	pop	r11
   1ba2a:	af 90       	pop	r10
   1ba2c:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1ba2e:	8f 90       	pop	r8
   1ba30:	71 c4       	rjmp	.+2274   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>

0001ba32 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1ba32:	0f 93       	push	r16
   1ba34:	1f 93       	push	r17
   1ba36:	cf 93       	push	r28
   1ba38:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1ba3a:	67 30       	cpi	r22, 0x07	; 7
   1ba3c:	60 f0       	brcs	.+24     	; 0x1ba56 <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1ba3e:	67 30       	cpi	r22, 0x07	; 7
   1ba40:	61 f0       	breq	.+24     	; 0x1ba5a <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1ba42:	68 30       	cpi	r22, 0x08	; 8
   1ba44:	61 f0       	breq	.+24     	; 0x1ba5e <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1ba46:	69 30       	cpi	r22, 0x09	; 9
   1ba48:	61 f0       	breq	.+24     	; 0x1ba62 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1ba4a:	6a 30       	cpi	r22, 0x0A	; 10
   1ba4c:	61 f0       	breq	.+24     	; 0x1ba66 <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1ba4e:	6b 30       	cpi	r22, 0x0B	; 11
   1ba50:	61 f4       	brne	.+24     	; 0x1ba6a <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1ba52:	c0 eb       	ldi	r28, 0xB0	; 176
   1ba54:	0b c0       	rjmp	.+22     	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1ba56:	c0 e6       	ldi	r28, 0x60	; 96
   1ba58:	09 c0       	rjmp	.+18     	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1ba5a:	c0 e7       	ldi	r28, 0x70	; 112
   1ba5c:	07 c0       	rjmp	.+14     	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1ba5e:	c0 e8       	ldi	r28, 0x80	; 128
   1ba60:	05 c0       	rjmp	.+10     	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1ba62:	c0 e9       	ldi	r28, 0x90	; 144
   1ba64:	03 c0       	rjmp	.+6      	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1ba66:	c0 ea       	ldi	r28, 0xA0	; 160
   1ba68:	01 c0       	rjmp	.+2      	; 0x1ba6c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1ba6a:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1ba6c:	6e e1       	ldi	r22, 0x1E	; 30
   1ba6e:	c8 01       	movw	r24, r16
   1ba70:	0c d4       	rcall	.+2072   	; 0x1c28a <_ZN11RHSPIDriver7spiReadEh>
   1ba72:	8f 70       	andi	r24, 0x0F	; 15
   1ba74:	48 2f       	mov	r20, r24
   1ba76:	4c 2b       	or	r20, r28
   1ba78:	6e e1       	ldi	r22, 0x1E	; 30
   1ba7a:	c8 01       	movw	r24, r16
   1ba7c:	4b d4       	rcall	.+2198   	; 0x1c314 <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1ba7e:	c8 01       	movw	r24, r16
 }
   1ba80:	cf 91       	pop	r28
   1ba82:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1ba84:	0f 91       	pop	r16
   1ba86:	5e cf       	rjmp	.-324    	; 0x1b944 <_ZN7RH_RF9514setLowDatarateEv>

0001ba88 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1ba88:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1ba8a:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1ba8c:	f8 94       	cli
  if (!initialized) {
   1ba8e:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <_ZN8SPIClass11initializedE>
   1ba92:	81 11       	cpse	r24, r1
   1ba94:	27 c0       	rjmp	.+78     	; 0x1bae4 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1ba96:	e7 ea       	ldi	r30, 0xA7	; 167
   1ba98:	f6 e4       	ldi	r31, 0x46	; 70
   1ba9a:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1ba9c:	e1 e6       	ldi	r30, 0x61	; 97
   1ba9e:	f6 e4       	ldi	r31, 0x46	; 70
   1baa0:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1baa2:	e8 2f       	mov	r30, r24
   1baa4:	f0 e0       	ldi	r31, 0x00	; 0
   1baa6:	ee 0f       	add	r30, r30
   1baa8:	ff 1f       	adc	r31, r31
   1baaa:	e4 51       	subi	r30, 0x14	; 20
   1baac:	f9 4b       	sbci	r31, 0xB9	; 185
   1baae:	a5 91       	lpm	r26, Z+
   1bab0:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1bab2:	ec 91       	ld	r30, X
   1bab4:	e9 23       	and	r30, r25
   1bab6:	21 f4       	brne	.+8      	; 0x1bac0 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1bab8:	61 e0       	ldi	r22, 0x01	; 1
   1baba:	85 e3       	ldi	r24, 0x35	; 53
   1babc:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1bac0:	61 e0       	ldi	r22, 0x01	; 1
   1bac2:	85 e3       	ldi	r24, 0x35	; 53
   1bac4:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1bac8:	8c b5       	in	r24, 0x2c	; 44
   1baca:	80 61       	ori	r24, 0x10	; 16
   1bacc:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1bace:	8c b5       	in	r24, 0x2c	; 44
   1bad0:	80 64       	ori	r24, 0x40	; 64
   1bad2:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1bad4:	61 e0       	ldi	r22, 0x01	; 1
   1bad6:	84 e3       	ldi	r24, 0x34	; 52
   1bad8:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
    pinMode(MOSI, OUTPUT);
   1badc:	61 e0       	ldi	r22, 0x01	; 1
   1bade:	83 e3       	ldi	r24, 0x33	; 51
   1bae0:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
  }
  initialized++; // reference count
   1bae4:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <_ZN8SPIClass11initializedE>
   1bae8:	8f 5f       	subi	r24, 0xFF	; 255
   1baea:	80 93 e9 17 	sts	0x17E9, r24	; 0x8017e9 <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1baee:	cf bf       	out	0x3f, r28	; 63
}
   1baf0:	cf 91       	pop	r28
   1baf2:	08 95       	ret

0001baf4 <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1baf4:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1baf6:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1baf8:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <_ZN8SPIClass11initializedE>
   1bafc:	88 23       	and	r24, r24
   1bafe:	19 f0       	breq	.+6      	; 0x1bb06 <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1bb00:	81 50       	subi	r24, 0x01	; 1
   1bb02:	80 93 e9 17 	sts	0x17E9, r24	; 0x8017e9 <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1bb06:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <_ZN8SPIClass11initializedE>
   1bb0a:	81 11       	cpse	r24, r1
   1bb0c:	05 c0       	rjmp	.+10     	; 0x1bb18 <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1bb0e:	8c b5       	in	r24, 0x2c	; 44
   1bb10:	8f 7b       	andi	r24, 0xBF	; 191
   1bb12:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1bb14:	10 92 e8 17 	sts	0x17E8, r1	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1bb18:	9f bf       	out	0x3f, r25	; 63
   1bb1a:	08 95       	ret

0001bb1c <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1bb1c:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1bb1e:	f8 94       	cli
  switch (interruptNumber) {
   1bb20:	90 e0       	ldi	r25, 0x00	; 0
   1bb22:	88 30       	cpi	r24, 0x08	; 8
   1bb24:	91 05       	cpc	r25, r1
   1bb26:	a8 f4       	brcc	.+42     	; 0x1bb52 <_ZN8SPIClass14usingInterruptEh+0x36>
   1bb28:	fc 01       	movw	r30, r24
   1bb2a:	88 27       	eor	r24, r24
   1bb2c:	e7 5f       	subi	r30, 0xF7	; 247
   1bb2e:	fe 4f       	sbci	r31, 0xFE	; 254
   1bb30:	8f 4f       	sbci	r24, 0xFF	; 255
   1bb32:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1bb36:	80 e2       	ldi	r24, 0x20	; 32
   1bb38:	12 c0       	rjmp	.+36     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1bb3a:	81 e0       	ldi	r24, 0x01	; 1
   1bb3c:	10 c0       	rjmp	.+32     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1bb3e:	82 e0       	ldi	r24, 0x02	; 2
   1bb40:	0e c0       	rjmp	.+28     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1bb42:	84 e0       	ldi	r24, 0x04	; 4
   1bb44:	0c c0       	rjmp	.+24     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1bb46:	88 e0       	ldi	r24, 0x08	; 8
   1bb48:	0a c0       	rjmp	.+20     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1bb4a:	80 e4       	ldi	r24, 0x40	; 64
   1bb4c:	08 c0       	rjmp	.+16     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1bb4e:	80 e8       	ldi	r24, 0x80	; 128
   1bb50:	06 c0       	rjmp	.+12     	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1bb52:	82 e0       	ldi	r24, 0x02	; 2
   1bb54:	80 93 e8 17 	sts	0x17E8, r24	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1bb58:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1bb5a:	01 c0       	rjmp	.+2      	; 0x1bb5e <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1bb5c:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1bb5e:	90 91 e7 17 	lds	r25, 0x17E7	; 0x8017e7 <_ZN8SPIClass13interruptMaskE>
   1bb62:	89 2b       	or	r24, r25
   1bb64:	80 93 e7 17 	sts	0x17E7, r24	; 0x8017e7 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1bb68:	80 91 e8 17 	lds	r24, 0x17E8	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
   1bb6c:	81 11       	cpse	r24, r1
   1bb6e:	03 c0       	rjmp	.+6      	; 0x1bb76 <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1bb70:	81 e0       	ldi	r24, 0x01	; 1
   1bb72:	80 93 e8 17 	sts	0x17E8, r24	; 0x8017e8 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1bb76:	2f bf       	out	0x3f, r18	; 63
   1bb78:	08 95       	ret

0001bb7a <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1bb7a:	80 91 1e 18 	lds	r24, 0x181E	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bb7e:	90 e0       	ldi	r25, 0x00	; 0
   1bb80:	20 91 1f 18 	lds	r18, 0x181F	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bb84:	82 1b       	sub	r24, r18
   1bb86:	91 09       	sbc	r25, r1
   1bb88:	08 95       	ret

0001bb8a <_ZN7TwoWire4readEv>:
   1bb8a:	90 91 1f 18 	lds	r25, 0x181F	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bb8e:	80 91 1e 18 	lds	r24, 0x181E	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bb92:	98 17       	cp	r25, r24
   1bb94:	50 f4       	brcc	.+20     	; 0x1bbaa <_ZN7TwoWire4readEv+0x20>
   1bb96:	e9 2f       	mov	r30, r25
   1bb98:	f0 e0       	ldi	r31, 0x00	; 0
   1bb9a:	e0 5e       	subi	r30, 0xE0	; 224
   1bb9c:	f7 4e       	sbci	r31, 0xE7	; 231
   1bb9e:	20 81       	ld	r18, Z
   1bba0:	30 e0       	ldi	r19, 0x00	; 0
   1bba2:	9f 5f       	subi	r25, 0xFF	; 255
   1bba4:	90 93 1f 18 	sts	0x181F, r25	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bba8:	02 c0       	rjmp	.+4      	; 0x1bbae <_ZN7TwoWire4readEv+0x24>
   1bbaa:	2f ef       	ldi	r18, 0xFF	; 255
   1bbac:	3f ef       	ldi	r19, 0xFF	; 255
   1bbae:	c9 01       	movw	r24, r18
   1bbb0:	08 95       	ret

0001bbb2 <_ZN7TwoWire4peekEv>:
   1bbb2:	e0 91 1f 18 	lds	r30, 0x181F	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bbb6:	80 91 1e 18 	lds	r24, 0x181E	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bbba:	e8 17       	cp	r30, r24
   1bbbc:	30 f4       	brcc	.+12     	; 0x1bbca <_ZN7TwoWire4peekEv+0x18>
   1bbbe:	f0 e0       	ldi	r31, 0x00	; 0
   1bbc0:	e0 5e       	subi	r30, 0xE0	; 224
   1bbc2:	f7 4e       	sbci	r31, 0xE7	; 231
   1bbc4:	80 81       	ld	r24, Z
   1bbc6:	90 e0       	ldi	r25, 0x00	; 0
   1bbc8:	08 95       	ret
   1bbca:	8f ef       	ldi	r24, 0xFF	; 255
   1bbcc:	9f ef       	ldi	r25, 0xFF	; 255
   1bbce:	08 95       	ret

0001bbd0 <_ZN7TwoWire5flushEv>:
   1bbd0:	08 95       	ret

0001bbd2 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1bbd2:	cf 93       	push	r28
   1bbd4:	df 93       	push	r29
   1bbd6:	ec 01       	movw	r28, r24
   1bbd8:	e0 91 f6 17 	lds	r30, 0x17F6	; 0x8017f6 <_ZN7TwoWire14user_onReceiveE>
   1bbdc:	f0 91 f7 17 	lds	r31, 0x17F7	; 0x8017f7 <_ZN7TwoWire14user_onReceiveE+0x1>
   1bbe0:	30 97       	sbiw	r30, 0x00	; 0
   1bbe2:	f1 f0       	breq	.+60     	; 0x1bc20 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bbe4:	90 91 1f 18 	lds	r25, 0x181F	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bbe8:	80 91 1e 18 	lds	r24, 0x181E	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bbec:	98 17       	cp	r25, r24
   1bbee:	c0 f0       	brcs	.+48     	; 0x1bc20 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bbf0:	90 e0       	ldi	r25, 0x00	; 0
   1bbf2:	29 2f       	mov	r18, r25
   1bbf4:	30 e0       	ldi	r19, 0x00	; 0
   1bbf6:	26 17       	cp	r18, r22
   1bbf8:	37 07       	cpc	r19, r23
   1bbfa:	54 f4       	brge	.+20     	; 0x1bc10 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1bbfc:	de 01       	movw	r26, r28
   1bbfe:	a2 0f       	add	r26, r18
   1bc00:	b3 1f       	adc	r27, r19
   1bc02:	4c 91       	ld	r20, X
   1bc04:	d9 01       	movw	r26, r18
   1bc06:	a0 5e       	subi	r26, 0xE0	; 224
   1bc08:	b7 4e       	sbci	r27, 0xE7	; 231
   1bc0a:	4c 93       	st	X, r20
   1bc0c:	9f 5f       	subi	r25, 0xFF	; 255
   1bc0e:	f1 cf       	rjmp	.-30     	; 0x1bbf2 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1bc10:	10 92 1f 18 	sts	0x181F, r1	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bc14:	60 93 1e 18 	sts	0x181E, r22	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bc18:	cb 01       	movw	r24, r22
   1bc1a:	df 91       	pop	r29
   1bc1c:	cf 91       	pop	r28
   1bc1e:	19 94       	eijmp
   1bc20:	df 91       	pop	r29
   1bc22:	cf 91       	pop	r28
   1bc24:	08 95       	ret

0001bc26 <_ZN7TwoWire16onRequestServiceEv>:
   1bc26:	e0 91 f8 17 	lds	r30, 0x17F8	; 0x8017f8 <_ZN7TwoWire14user_onRequestE>
   1bc2a:	f0 91 f9 17 	lds	r31, 0x17F9	; 0x8017f9 <_ZN7TwoWire14user_onRequestE+0x1>
   1bc2e:	30 97       	sbiw	r30, 0x00	; 0
   1bc30:	29 f0       	breq	.+10     	; 0x1bc3c <_ZN7TwoWire16onRequestServiceEv+0x16>
   1bc32:	10 92 fc 17 	sts	0x17FC, r1	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bc36:	10 92 fb 17 	sts	0x17FB, r1	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bc3a:	19 94       	eijmp
   1bc3c:	08 95       	ret

0001bc3e <_ZN7TwoWire5writeEPKhj>:
   1bc3e:	cf 92       	push	r12
   1bc40:	df 92       	push	r13
   1bc42:	ef 92       	push	r14
   1bc44:	ff 92       	push	r15
   1bc46:	0f 93       	push	r16
   1bc48:	1f 93       	push	r17
   1bc4a:	cf 93       	push	r28
   1bc4c:	df 93       	push	r29
   1bc4e:	7c 01       	movw	r14, r24
   1bc50:	cb 01       	movw	r24, r22
   1bc52:	8a 01       	movw	r16, r20
   1bc54:	20 91 fa 17 	lds	r18, 0x17FA	; 0x8017fa <_ZN7TwoWire12transmittingE>
   1bc58:	22 23       	and	r18, r18
   1bc5a:	89 f0       	breq	.+34     	; 0x1bc7e <_ZN7TwoWire5writeEPKhj+0x40>
   1bc5c:	eb 01       	movw	r28, r22
   1bc5e:	6b 01       	movw	r12, r22
   1bc60:	c4 0e       	add	r12, r20
   1bc62:	d5 1e       	adc	r13, r21
   1bc64:	cc 15       	cp	r28, r12
   1bc66:	dd 05       	cpc	r29, r13
   1bc68:	61 f0       	breq	.+24     	; 0x1bc82 <_ZN7TwoWire5writeEPKhj+0x44>
   1bc6a:	69 91       	ld	r22, Y+
   1bc6c:	d7 01       	movw	r26, r14
   1bc6e:	ed 91       	ld	r30, X+
   1bc70:	fc 91       	ld	r31, X
   1bc72:	01 90       	ld	r0, Z+
   1bc74:	f0 81       	ld	r31, Z
   1bc76:	e0 2d       	mov	r30, r0
   1bc78:	c7 01       	movw	r24, r14
   1bc7a:	19 95       	eicall
   1bc7c:	f3 cf       	rjmp	.-26     	; 0x1bc64 <_ZN7TwoWire5writeEPKhj+0x26>
   1bc7e:	64 2f       	mov	r22, r20
   1bc80:	7d d4       	rcall	.+2298   	; 0x1c57c <twi_transmit>
   1bc82:	c8 01       	movw	r24, r16
   1bc84:	df 91       	pop	r29
   1bc86:	cf 91       	pop	r28
   1bc88:	1f 91       	pop	r17
   1bc8a:	0f 91       	pop	r16
   1bc8c:	ff 90       	pop	r15
   1bc8e:	ef 90       	pop	r14
   1bc90:	df 90       	pop	r13
   1bc92:	cf 90       	pop	r12
   1bc94:	08 95       	ret

0001bc96 <_ZN7TwoWire5writeEh>:
   1bc96:	cf 93       	push	r28
   1bc98:	df 93       	push	r29
   1bc9a:	1f 92       	push	r1
   1bc9c:	cd b7       	in	r28, 0x3d	; 61
   1bc9e:	de b7       	in	r29, 0x3e	; 62
   1bca0:	69 83       	std	Y+1, r22	; 0x01
   1bca2:	20 91 fa 17 	lds	r18, 0x17FA	; 0x8017fa <_ZN7TwoWire12transmittingE>
   1bca6:	22 23       	and	r18, r18
   1bca8:	d1 f0       	breq	.+52     	; 0x1bcde <_ZN7TwoWire5writeEh+0x48>
   1bcaa:	20 91 fb 17 	lds	r18, 0x17FB	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bcae:	20 32       	cpi	r18, 0x20	; 32
   1bcb0:	40 f0       	brcs	.+16     	; 0x1bcc2 <_ZN7TwoWire5writeEh+0x2c>
   1bcb2:	21 e0       	ldi	r18, 0x01	; 1
   1bcb4:	30 e0       	ldi	r19, 0x00	; 0
   1bcb6:	fc 01       	movw	r30, r24
   1bcb8:	33 83       	std	Z+3, r19	; 0x03
   1bcba:	22 83       	std	Z+2, r18	; 0x02
   1bcbc:	80 e0       	ldi	r24, 0x00	; 0
   1bcbe:	90 e0       	ldi	r25, 0x00	; 0
   1bcc0:	14 c0       	rjmp	.+40     	; 0x1bcea <_ZN7TwoWire5writeEh+0x54>
   1bcc2:	80 91 fc 17 	lds	r24, 0x17FC	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bcc6:	e8 2f       	mov	r30, r24
   1bcc8:	f0 e0       	ldi	r31, 0x00	; 0
   1bcca:	e3 50       	subi	r30, 0x03	; 3
   1bccc:	f8 4e       	sbci	r31, 0xE8	; 232
   1bcce:	99 81       	ldd	r25, Y+1	; 0x01
   1bcd0:	90 83       	st	Z, r25
   1bcd2:	8f 5f       	subi	r24, 0xFF	; 255
   1bcd4:	80 93 fc 17 	sts	0x17FC, r24	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bcd8:	80 93 fb 17 	sts	0x17FB, r24	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bcdc:	04 c0       	rjmp	.+8      	; 0x1bce6 <_ZN7TwoWire5writeEh+0x50>
   1bcde:	61 e0       	ldi	r22, 0x01	; 1
   1bce0:	ce 01       	movw	r24, r28
   1bce2:	01 96       	adiw	r24, 0x01	; 1
   1bce4:	4b d4       	rcall	.+2198   	; 0x1c57c <twi_transmit>
   1bce6:	81 e0       	ldi	r24, 0x01	; 1
   1bce8:	90 e0       	ldi	r25, 0x00	; 0
   1bcea:	0f 90       	pop	r0
   1bcec:	df 91       	pop	r29
   1bcee:	cf 91       	pop	r28
   1bcf0:	08 95       	ret

0001bcf2 <_ZN7TwoWireC1Ev>:
   1bcf2:	fc 01       	movw	r30, r24
   1bcf4:	13 82       	std	Z+3, r1	; 0x03
   1bcf6:	12 82       	std	Z+2, r1	; 0x02
   1bcf8:	88 ee       	ldi	r24, 0xE8	; 232
   1bcfa:	93 e0       	ldi	r25, 0x03	; 3
   1bcfc:	a0 e0       	ldi	r26, 0x00	; 0
   1bcfe:	b0 e0       	ldi	r27, 0x00	; 0
   1bd00:	84 83       	std	Z+4, r24	; 0x04
   1bd02:	95 83       	std	Z+5, r25	; 0x05
   1bd04:	a6 83       	std	Z+6, r26	; 0x06
   1bd06:	b7 83       	std	Z+7, r27	; 0x07
   1bd08:	89 ea       	ldi	r24, 0xA9	; 169
   1bd0a:	98 e0       	ldi	r25, 0x08	; 8
   1bd0c:	91 83       	std	Z+1, r25	; 0x01
   1bd0e:	80 83       	st	Z, r24
   1bd10:	08 95       	ret

0001bd12 <_ZN7TwoWire5beginEv>:
   1bd12:	10 92 1f 18 	sts	0x181F, r1	; 0x80181f <_ZN7TwoWire13rxBufferIndexE>
   1bd16:	10 92 1e 18 	sts	0x181E, r1	; 0x80181e <_ZN7TwoWire14rxBufferLengthE>
   1bd1a:	10 92 fc 17 	sts	0x17FC, r1	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bd1e:	10 92 fb 17 	sts	0x17FB, r1	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bd22:	01 d4       	rcall	.+2050   	; 0x1c526 <twi_init>
   1bd24:	83 e1       	ldi	r24, 0x13	; 19
   1bd26:	9e ed       	ldi	r25, 0xDE	; 222
   1bd28:	56 d4       	rcall	.+2220   	; 0x1c5d6 <twi_attachSlaveTxEvent>
   1bd2a:	89 ee       	ldi	r24, 0xE9	; 233
   1bd2c:	9d ed       	ldi	r25, 0xDD	; 221
   1bd2e:	4e c4       	rjmp	.+2204   	; 0x1c5cc <twi_attachSlaveRxEvent>

0001bd30 <_ZN7TwoWire17beginTransmissionEh>:
   1bd30:	81 e0       	ldi	r24, 0x01	; 1
   1bd32:	80 93 fa 17 	sts	0x17FA, r24	; 0x8017fa <_ZN7TwoWire12transmittingE>
   1bd36:	60 93 1d 18 	sts	0x181D, r22	; 0x80181d <_ZN7TwoWire9txAddressE>
   1bd3a:	10 92 fc 17 	sts	0x17FC, r1	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bd3e:	10 92 fb 17 	sts	0x17FB, r1	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bd42:	08 95       	ret

0001bd44 <_ZN7TwoWire15endTransmissionEh>:
   1bd44:	0f 93       	push	r16
   1bd46:	06 2f       	mov	r16, r22
   1bd48:	21 e0       	ldi	r18, 0x01	; 1
   1bd4a:	40 91 fb 17 	lds	r20, 0x17FB	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bd4e:	6d ef       	ldi	r22, 0xFD	; 253
   1bd50:	77 e1       	ldi	r23, 0x17	; 23
   1bd52:	80 91 1d 18 	lds	r24, 0x181D	; 0x80181d <_ZN7TwoWire9txAddressE>
   1bd56:	5e d4       	rcall	.+2236   	; 0x1c614 <twi_writeTo>
   1bd58:	10 92 fc 17 	sts	0x17FC, r1	; 0x8017fc <_ZN7TwoWire13txBufferIndexE>
   1bd5c:	10 92 fb 17 	sts	0x17FB, r1	; 0x8017fb <_ZN7TwoWire14txBufferLengthE>
   1bd60:	10 92 fa 17 	sts	0x17FA, r1	; 0x8017fa <_ZN7TwoWire12transmittingE>
   1bd64:	0f 91       	pop	r16
   1bd66:	08 95       	ret

0001bd68 <_ZN7TwoWire15endTransmissionEv>:
   1bd68:	61 e0       	ldi	r22, 0x01	; 1
   1bd6a:	ec cf       	rjmp	.-40     	; 0x1bd44 <_ZN7TwoWire15endTransmissionEh>

0001bd6c <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1bd6c:	8a ee       	ldi	r24, 0xEA	; 234
   1bd6e:	97 e1       	ldi	r25, 0x17	; 23
   1bd70:	c0 cf       	rjmp	.-128    	; 0x1bcf2 <_ZN7TwoWireC1Ev>

0001bd72 <__cxa_pure_virtual>:
   1bd72:	0e 94 85 e9 	call	0x1d30a	; 0x1d30a <abort>

0001bd76 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
   1bd76:	08 95       	ret

0001bd78 <_ZdlPv>:
   1bd78:	0c 94 60 e8 	jmp	0x1d0c0	; 0x1d0c0 <free>

0001bd7c <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1bd7c:	08 95       	ret

0001bd7e <attachInterrupt>:
   1bd7e:	88 30       	cpi	r24, 0x08	; 8
   1bd80:	08 f0       	brcs	.+2      	; 0x1bd84 <attachInterrupt+0x6>
   1bd82:	70 c0       	rjmp	.+224    	; 0x1be64 <attachInterrupt+0xe6>
   1bd84:	a8 2f       	mov	r26, r24
   1bd86:	b0 e0       	ldi	r27, 0x00	; 0
   1bd88:	aa 0f       	add	r26, r26
   1bd8a:	bb 1f       	adc	r27, r27
   1bd8c:	ae 5a       	subi	r26, 0xAE	; 174
   1bd8e:	bd 4f       	sbci	r27, 0xFD	; 253
   1bd90:	11 96       	adiw	r26, 0x01	; 1
   1bd92:	7c 93       	st	X, r23
   1bd94:	6e 93       	st	-X, r22
   1bd96:	90 e0       	ldi	r25, 0x00	; 0
   1bd98:	fc 01       	movw	r30, r24
   1bd9a:	31 97       	sbiw	r30, 0x01	; 1
   1bd9c:	e7 30       	cpi	r30, 0x07	; 7
   1bd9e:	f1 05       	cpc	r31, r1
   1bda0:	a0 f5       	brcc	.+104    	; 0x1be0a <attachInterrupt+0x8c>
   1bda2:	88 27       	eor	r24, r24
   1bda4:	ef 5e       	subi	r30, 0xEF	; 239
   1bda6:	fe 4f       	sbci	r31, 0xFE	; 254
   1bda8:	8f 4f       	sbci	r24, 0xFF	; 255
   1bdaa:	0c 94 9b e7 	jmp	0x1cf36	; 0x1cf36 <__tablejump2__>
   1bdae:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdb2:	8c 7f       	andi	r24, 0xFC	; 252
   1bdb4:	48 2b       	or	r20, r24
   1bdb6:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdba:	e8 9a       	sbi	0x1d, 0	; 29
   1bdbc:	08 95       	ret
   1bdbe:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdc2:	83 7f       	andi	r24, 0xF3	; 243
   1bdc4:	44 0f       	add	r20, r20
   1bdc6:	55 1f       	adc	r21, r21
   1bdc8:	44 0f       	add	r20, r20
   1bdca:	55 1f       	adc	r21, r21
   1bdcc:	48 2b       	or	r20, r24
   1bdce:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdd2:	e9 9a       	sbi	0x1d, 1	; 29
   1bdd4:	08 95       	ret
   1bdd6:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdda:	8f 7c       	andi	r24, 0xCF	; 207
   1bddc:	74 e0       	ldi	r23, 0x04	; 4
   1bdde:	44 0f       	add	r20, r20
   1bde0:	55 1f       	adc	r21, r21
   1bde2:	7a 95       	dec	r23
   1bde4:	e1 f7       	brne	.-8      	; 0x1bdde <attachInterrupt+0x60>
   1bde6:	48 2b       	or	r20, r24
   1bde8:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdec:	ea 9a       	sbi	0x1d, 2	; 29
   1bdee:	08 95       	ret
   1bdf0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdf4:	8f 73       	andi	r24, 0x3F	; 63
   1bdf6:	66 e0       	ldi	r22, 0x06	; 6
   1bdf8:	44 0f       	add	r20, r20
   1bdfa:	55 1f       	adc	r21, r21
   1bdfc:	6a 95       	dec	r22
   1bdfe:	e1 f7       	brne	.-8      	; 0x1bdf8 <attachInterrupt+0x7a>
   1be00:	48 2b       	or	r20, r24
   1be02:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1be06:	eb 9a       	sbi	0x1d, 3	; 29
   1be08:	08 95       	ret
   1be0a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be0e:	8c 7f       	andi	r24, 0xFC	; 252
   1be10:	48 2b       	or	r20, r24
   1be12:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be16:	ec 9a       	sbi	0x1d, 4	; 29
   1be18:	08 95       	ret
   1be1a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be1e:	83 7f       	andi	r24, 0xF3	; 243
   1be20:	44 0f       	add	r20, r20
   1be22:	55 1f       	adc	r21, r21
   1be24:	44 0f       	add	r20, r20
   1be26:	55 1f       	adc	r21, r21
   1be28:	48 2b       	or	r20, r24
   1be2a:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be2e:	ed 9a       	sbi	0x1d, 5	; 29
   1be30:	08 95       	ret
   1be32:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be36:	8f 7c       	andi	r24, 0xCF	; 207
   1be38:	24 e0       	ldi	r18, 0x04	; 4
   1be3a:	44 0f       	add	r20, r20
   1be3c:	55 1f       	adc	r21, r21
   1be3e:	2a 95       	dec	r18
   1be40:	e1 f7       	brne	.-8      	; 0x1be3a <attachInterrupt+0xbc>
   1be42:	48 2b       	or	r20, r24
   1be44:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be48:	ee 9a       	sbi	0x1d, 6	; 29
   1be4a:	08 95       	ret
   1be4c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be50:	8f 73       	andi	r24, 0x3F	; 63
   1be52:	96 e0       	ldi	r25, 0x06	; 6
   1be54:	44 0f       	add	r20, r20
   1be56:	55 1f       	adc	r21, r21
   1be58:	9a 95       	dec	r25
   1be5a:	e1 f7       	brne	.-8      	; 0x1be54 <attachInterrupt+0xd6>
   1be5c:	48 2b       	or	r20, r24
   1be5e:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be62:	ef 9a       	sbi	0x1d, 7	; 29
   1be64:	08 95       	ret

0001be66 <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1be66:	1f 92       	push	r1
   1be68:	0f 92       	push	r0
   1be6a:	0f b6       	in	r0, 0x3f	; 63
   1be6c:	0f 92       	push	r0
   1be6e:	11 24       	eor	r1, r1
   1be70:	0b b6       	in	r0, 0x3b	; 59
   1be72:	0f 92       	push	r0
   1be74:	2f 93       	push	r18
   1be76:	3f 93       	push	r19
   1be78:	4f 93       	push	r20
   1be7a:	5f 93       	push	r21
   1be7c:	6f 93       	push	r22
   1be7e:	7f 93       	push	r23
   1be80:	8f 93       	push	r24
   1be82:	9f 93       	push	r25
   1be84:	af 93       	push	r26
   1be86:	bf 93       	push	r27
   1be88:	ef 93       	push	r30
   1be8a:	ff 93       	push	r31
   1be8c:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1be90:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1be94:	19 95       	eicall
   1be96:	ff 91       	pop	r31
   1be98:	ef 91       	pop	r30
   1be9a:	bf 91       	pop	r27
   1be9c:	af 91       	pop	r26
   1be9e:	9f 91       	pop	r25
   1bea0:	8f 91       	pop	r24
   1bea2:	7f 91       	pop	r23
   1bea4:	6f 91       	pop	r22
   1bea6:	5f 91       	pop	r21
   1bea8:	4f 91       	pop	r20
   1beaa:	3f 91       	pop	r19
   1beac:	2f 91       	pop	r18
   1beae:	0f 90       	pop	r0
   1beb0:	0b be       	out	0x3b, r0	; 59
   1beb2:	0f 90       	pop	r0
   1beb4:	0f be       	out	0x3f, r0	; 63
   1beb6:	0f 90       	pop	r0
   1beb8:	1f 90       	pop	r1
   1beba:	18 95       	reti

0001bebc <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1bebc:	1f 92       	push	r1
   1bebe:	0f 92       	push	r0
   1bec0:	0f b6       	in	r0, 0x3f	; 63
   1bec2:	0f 92       	push	r0
   1bec4:	11 24       	eor	r1, r1
   1bec6:	0b b6       	in	r0, 0x3b	; 59
   1bec8:	0f 92       	push	r0
   1beca:	2f 93       	push	r18
   1becc:	3f 93       	push	r19
   1bece:	4f 93       	push	r20
   1bed0:	5f 93       	push	r21
   1bed2:	6f 93       	push	r22
   1bed4:	7f 93       	push	r23
   1bed6:	8f 93       	push	r24
   1bed8:	9f 93       	push	r25
   1beda:	af 93       	push	r26
   1bedc:	bf 93       	push	r27
   1bede:	ef 93       	push	r30
   1bee0:	ff 93       	push	r31
   1bee2:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1bee6:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1beea:	19 95       	eicall
   1beec:	ff 91       	pop	r31
   1beee:	ef 91       	pop	r30
   1bef0:	bf 91       	pop	r27
   1bef2:	af 91       	pop	r26
   1bef4:	9f 91       	pop	r25
   1bef6:	8f 91       	pop	r24
   1bef8:	7f 91       	pop	r23
   1befa:	6f 91       	pop	r22
   1befc:	5f 91       	pop	r21
   1befe:	4f 91       	pop	r20
   1bf00:	3f 91       	pop	r19
   1bf02:	2f 91       	pop	r18
   1bf04:	0f 90       	pop	r0
   1bf06:	0b be       	out	0x3b, r0	; 59
   1bf08:	0f 90       	pop	r0
   1bf0a:	0f be       	out	0x3f, r0	; 63
   1bf0c:	0f 90       	pop	r0
   1bf0e:	1f 90       	pop	r1
   1bf10:	18 95       	reti

0001bf12 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1bf12:	1f 92       	push	r1
   1bf14:	0f 92       	push	r0
   1bf16:	0f b6       	in	r0, 0x3f	; 63
   1bf18:	0f 92       	push	r0
   1bf1a:	11 24       	eor	r1, r1
   1bf1c:	0b b6       	in	r0, 0x3b	; 59
   1bf1e:	0f 92       	push	r0
   1bf20:	2f 93       	push	r18
   1bf22:	3f 93       	push	r19
   1bf24:	4f 93       	push	r20
   1bf26:	5f 93       	push	r21
   1bf28:	6f 93       	push	r22
   1bf2a:	7f 93       	push	r23
   1bf2c:	8f 93       	push	r24
   1bf2e:	9f 93       	push	r25
   1bf30:	af 93       	push	r26
   1bf32:	bf 93       	push	r27
   1bf34:	ef 93       	push	r30
   1bf36:	ff 93       	push	r31
   1bf38:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1bf3c:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1bf40:	19 95       	eicall
   1bf42:	ff 91       	pop	r31
   1bf44:	ef 91       	pop	r30
   1bf46:	bf 91       	pop	r27
   1bf48:	af 91       	pop	r26
   1bf4a:	9f 91       	pop	r25
   1bf4c:	8f 91       	pop	r24
   1bf4e:	7f 91       	pop	r23
   1bf50:	6f 91       	pop	r22
   1bf52:	5f 91       	pop	r21
   1bf54:	4f 91       	pop	r20
   1bf56:	3f 91       	pop	r19
   1bf58:	2f 91       	pop	r18
   1bf5a:	0f 90       	pop	r0
   1bf5c:	0b be       	out	0x3b, r0	; 59
   1bf5e:	0f 90       	pop	r0
   1bf60:	0f be       	out	0x3f, r0	; 63
   1bf62:	0f 90       	pop	r0
   1bf64:	1f 90       	pop	r1
   1bf66:	18 95       	reti

0001bf68 <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1bf68:	1f 92       	push	r1
   1bf6a:	0f 92       	push	r0
   1bf6c:	0f b6       	in	r0, 0x3f	; 63
   1bf6e:	0f 92       	push	r0
   1bf70:	11 24       	eor	r1, r1
   1bf72:	0b b6       	in	r0, 0x3b	; 59
   1bf74:	0f 92       	push	r0
   1bf76:	2f 93       	push	r18
   1bf78:	3f 93       	push	r19
   1bf7a:	4f 93       	push	r20
   1bf7c:	5f 93       	push	r21
   1bf7e:	6f 93       	push	r22
   1bf80:	7f 93       	push	r23
   1bf82:	8f 93       	push	r24
   1bf84:	9f 93       	push	r25
   1bf86:	af 93       	push	r26
   1bf88:	bf 93       	push	r27
   1bf8a:	ef 93       	push	r30
   1bf8c:	ff 93       	push	r31
   1bf8e:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1bf92:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1bf96:	19 95       	eicall
   1bf98:	ff 91       	pop	r31
   1bf9a:	ef 91       	pop	r30
   1bf9c:	bf 91       	pop	r27
   1bf9e:	af 91       	pop	r26
   1bfa0:	9f 91       	pop	r25
   1bfa2:	8f 91       	pop	r24
   1bfa4:	7f 91       	pop	r23
   1bfa6:	6f 91       	pop	r22
   1bfa8:	5f 91       	pop	r21
   1bfaa:	4f 91       	pop	r20
   1bfac:	3f 91       	pop	r19
   1bfae:	2f 91       	pop	r18
   1bfb0:	0f 90       	pop	r0
   1bfb2:	0b be       	out	0x3b, r0	; 59
   1bfb4:	0f 90       	pop	r0
   1bfb6:	0f be       	out	0x3f, r0	; 63
   1bfb8:	0f 90       	pop	r0
   1bfba:	1f 90       	pop	r1
   1bfbc:	18 95       	reti

0001bfbe <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1bfbe:	1f 92       	push	r1
   1bfc0:	0f 92       	push	r0
   1bfc2:	0f b6       	in	r0, 0x3f	; 63
   1bfc4:	0f 92       	push	r0
   1bfc6:	11 24       	eor	r1, r1
   1bfc8:	0b b6       	in	r0, 0x3b	; 59
   1bfca:	0f 92       	push	r0
   1bfcc:	2f 93       	push	r18
   1bfce:	3f 93       	push	r19
   1bfd0:	4f 93       	push	r20
   1bfd2:	5f 93       	push	r21
   1bfd4:	6f 93       	push	r22
   1bfd6:	7f 93       	push	r23
   1bfd8:	8f 93       	push	r24
   1bfda:	9f 93       	push	r25
   1bfdc:	af 93       	push	r26
   1bfde:	bf 93       	push	r27
   1bfe0:	ef 93       	push	r30
   1bfe2:	ff 93       	push	r31
   1bfe4:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1bfe8:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1bfec:	19 95       	eicall
   1bfee:	ff 91       	pop	r31
   1bff0:	ef 91       	pop	r30
   1bff2:	bf 91       	pop	r27
   1bff4:	af 91       	pop	r26
   1bff6:	9f 91       	pop	r25
   1bff8:	8f 91       	pop	r24
   1bffa:	7f 91       	pop	r23
   1bffc:	6f 91       	pop	r22
   1bffe:	5f 91       	pop	r21
   1c000:	4f 91       	pop	r20
   1c002:	3f 91       	pop	r19
   1c004:	2f 91       	pop	r18
   1c006:	0f 90       	pop	r0
   1c008:	0b be       	out	0x3b, r0	; 59
   1c00a:	0f 90       	pop	r0
   1c00c:	0f be       	out	0x3f, r0	; 63
   1c00e:	0f 90       	pop	r0
   1c010:	1f 90       	pop	r1
   1c012:	18 95       	reti

0001c014 <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1c014:	1f 92       	push	r1
   1c016:	0f 92       	push	r0
   1c018:	0f b6       	in	r0, 0x3f	; 63
   1c01a:	0f 92       	push	r0
   1c01c:	11 24       	eor	r1, r1
   1c01e:	0b b6       	in	r0, 0x3b	; 59
   1c020:	0f 92       	push	r0
   1c022:	2f 93       	push	r18
   1c024:	3f 93       	push	r19
   1c026:	4f 93       	push	r20
   1c028:	5f 93       	push	r21
   1c02a:	6f 93       	push	r22
   1c02c:	7f 93       	push	r23
   1c02e:	8f 93       	push	r24
   1c030:	9f 93       	push	r25
   1c032:	af 93       	push	r26
   1c034:	bf 93       	push	r27
   1c036:	ef 93       	push	r30
   1c038:	ff 93       	push	r31
   1c03a:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c03e:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c042:	19 95       	eicall
   1c044:	ff 91       	pop	r31
   1c046:	ef 91       	pop	r30
   1c048:	bf 91       	pop	r27
   1c04a:	af 91       	pop	r26
   1c04c:	9f 91       	pop	r25
   1c04e:	8f 91       	pop	r24
   1c050:	7f 91       	pop	r23
   1c052:	6f 91       	pop	r22
   1c054:	5f 91       	pop	r21
   1c056:	4f 91       	pop	r20
   1c058:	3f 91       	pop	r19
   1c05a:	2f 91       	pop	r18
   1c05c:	0f 90       	pop	r0
   1c05e:	0b be       	out	0x3b, r0	; 59
   1c060:	0f 90       	pop	r0
   1c062:	0f be       	out	0x3f, r0	; 63
   1c064:	0f 90       	pop	r0
   1c066:	1f 90       	pop	r1
   1c068:	18 95       	reti

0001c06a <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c06a:	1f 92       	push	r1
   1c06c:	0f 92       	push	r0
   1c06e:	0f b6       	in	r0, 0x3f	; 63
   1c070:	0f 92       	push	r0
   1c072:	11 24       	eor	r1, r1
   1c074:	0b b6       	in	r0, 0x3b	; 59
   1c076:	0f 92       	push	r0
   1c078:	2f 93       	push	r18
   1c07a:	3f 93       	push	r19
   1c07c:	4f 93       	push	r20
   1c07e:	5f 93       	push	r21
   1c080:	6f 93       	push	r22
   1c082:	7f 93       	push	r23
   1c084:	8f 93       	push	r24
   1c086:	9f 93       	push	r25
   1c088:	af 93       	push	r26
   1c08a:	bf 93       	push	r27
   1c08c:	ef 93       	push	r30
   1c08e:	ff 93       	push	r31
   1c090:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c094:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c098:	19 95       	eicall
   1c09a:	ff 91       	pop	r31
   1c09c:	ef 91       	pop	r30
   1c09e:	bf 91       	pop	r27
   1c0a0:	af 91       	pop	r26
   1c0a2:	9f 91       	pop	r25
   1c0a4:	8f 91       	pop	r24
   1c0a6:	7f 91       	pop	r23
   1c0a8:	6f 91       	pop	r22
   1c0aa:	5f 91       	pop	r21
   1c0ac:	4f 91       	pop	r20
   1c0ae:	3f 91       	pop	r19
   1c0b0:	2f 91       	pop	r18
   1c0b2:	0f 90       	pop	r0
   1c0b4:	0b be       	out	0x3b, r0	; 59
   1c0b6:	0f 90       	pop	r0
   1c0b8:	0f be       	out	0x3f, r0	; 63
   1c0ba:	0f 90       	pop	r0
   1c0bc:	1f 90       	pop	r1
   1c0be:	18 95       	reti

0001c0c0 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c0c0:	1f 92       	push	r1
   1c0c2:	0f 92       	push	r0
   1c0c4:	0f b6       	in	r0, 0x3f	; 63
   1c0c6:	0f 92       	push	r0
   1c0c8:	11 24       	eor	r1, r1
   1c0ca:	0b b6       	in	r0, 0x3b	; 59
   1c0cc:	0f 92       	push	r0
   1c0ce:	2f 93       	push	r18
   1c0d0:	3f 93       	push	r19
   1c0d2:	4f 93       	push	r20
   1c0d4:	5f 93       	push	r21
   1c0d6:	6f 93       	push	r22
   1c0d8:	7f 93       	push	r23
   1c0da:	8f 93       	push	r24
   1c0dc:	9f 93       	push	r25
   1c0de:	af 93       	push	r26
   1c0e0:	bf 93       	push	r27
   1c0e2:	ef 93       	push	r30
   1c0e4:	ff 93       	push	r31
   1c0e6:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c0ea:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c0ee:	19 95       	eicall
   1c0f0:	ff 91       	pop	r31
   1c0f2:	ef 91       	pop	r30
   1c0f4:	bf 91       	pop	r27
   1c0f6:	af 91       	pop	r26
   1c0f8:	9f 91       	pop	r25
   1c0fa:	8f 91       	pop	r24
   1c0fc:	7f 91       	pop	r23
   1c0fe:	6f 91       	pop	r22
   1c100:	5f 91       	pop	r21
   1c102:	4f 91       	pop	r20
   1c104:	3f 91       	pop	r19
   1c106:	2f 91       	pop	r18
   1c108:	0f 90       	pop	r0
   1c10a:	0b be       	out	0x3b, r0	; 59
   1c10c:	0f 90       	pop	r0
   1c10e:	0f be       	out	0x3f, r0	; 63
   1c110:	0f 90       	pop	r0
   1c112:	1f 90       	pop	r1
   1c114:	18 95       	reti

0001c116 <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c116:	86 33       	cpi	r24, 0x36	; 54
   1c118:	08 f0       	brcs	.+2      	; 0x1c11c <analogRead+0x6>
   1c11a:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c11c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c120:	28 2f       	mov	r18, r24
   1c122:	28 70       	andi	r18, 0x08	; 8
   1c124:	97 7f       	andi	r25, 0xF7	; 247
   1c126:	92 2b       	or	r25, r18
   1c128:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c12c:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c130:	90 e4       	ldi	r25, 0x40	; 64
   1c132:	29 9f       	mul	r18, r25
   1c134:	90 01       	movw	r18, r0
   1c136:	11 24       	eor	r1, r1
   1c138:	87 70       	andi	r24, 0x07	; 7
   1c13a:	82 2b       	or	r24, r18
   1c13c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c140:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c144:	80 64       	ori	r24, 0x40	; 64
   1c146:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1c14a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c14e:	86 fd       	sbrc	r24, 6
   1c150:	fc cf       	rjmp	.-8      	; 0x1c14a <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1c152:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1c156:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1c15a:	90 e0       	ldi	r25, 0x00	; 0
}
   1c15c:	92 2b       	or	r25, r18
   1c15e:	08 95       	ret

0001c160 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1c160:	cf 92       	push	r12
   1c162:	df 92       	push	r13
   1c164:	ef 92       	push	r14
   1c166:	ff 92       	push	r15
  if (howbig == 0) {
   1c168:	61 15       	cp	r22, r1
   1c16a:	71 05       	cpc	r23, r1
   1c16c:	81 05       	cpc	r24, r1
   1c16e:	91 05       	cpc	r25, r1
   1c170:	41 f0       	breq	.+16     	; 0x1c182 <_Z6randoml+0x22>
   1c172:	6b 01       	movw	r12, r22
   1c174:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1c176:	0e 94 31 e9 	call	0x1d262	; 0x1d262 <random>
   1c17a:	a7 01       	movw	r20, r14
   1c17c:	96 01       	movw	r18, r12
   1c17e:	bf d6       	rcall	.+3454   	; 0x1cefe <__divmodsi4>
   1c180:	03 c0       	rjmp	.+6      	; 0x1c188 <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1c182:	60 e0       	ldi	r22, 0x00	; 0
   1c184:	70 e0       	ldi	r23, 0x00	; 0
   1c186:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1c188:	ff 90       	pop	r15
   1c18a:	ef 90       	pop	r14
   1c18c:	df 90       	pop	r13
   1c18e:	cf 90       	pop	r12
   1c190:	08 95       	ret

0001c192 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1c192:	cf 92       	push	r12
   1c194:	df 92       	push	r13
   1c196:	ef 92       	push	r14
   1c198:	ff 92       	push	r15
   1c19a:	0f 93       	push	r16
   1c19c:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1c19e:	62 17       	cp	r22, r18
   1c1a0:	73 07       	cpc	r23, r19
   1c1a2:	84 07       	cpc	r24, r20
   1c1a4:	95 07       	cpc	r25, r21
   1c1a6:	7c f4       	brge	.+30     	; 0x1c1c6 <_Z6randomll+0x34>
   1c1a8:	89 01       	movw	r16, r18
   1c1aa:	9a 01       	movw	r18, r20
   1c1ac:	6b 01       	movw	r12, r22
   1c1ae:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1c1b0:	c9 01       	movw	r24, r18
   1c1b2:	b8 01       	movw	r22, r16
   1c1b4:	6c 19       	sub	r22, r12
   1c1b6:	7d 09       	sbc	r23, r13
   1c1b8:	8e 09       	sbc	r24, r14
   1c1ba:	9f 09       	sbc	r25, r15
   1c1bc:	d1 df       	rcall	.-94     	; 0x1c160 <_Z6randoml>
   1c1be:	6c 0d       	add	r22, r12
   1c1c0:	7d 1d       	adc	r23, r13
   1c1c2:	8e 1d       	adc	r24, r14
   1c1c4:	9f 1d       	adc	r25, r15
}
   1c1c6:	1f 91       	pop	r17
   1c1c8:	0f 91       	pop	r16
   1c1ca:	ff 90       	pop	r15
   1c1cc:	ef 90       	pop	r14
   1c1ce:	df 90       	pop	r13
   1c1d0:	cf 90       	pop	r12
   1c1d2:	08 95       	ret

0001c1d4 <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1c1d4:	08 95       	ret

0001c1d6 <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1c1d6:	08 95       	ret

0001c1d8 <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1c1d8:	08 95       	ret

0001c1da <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1c1da:	08 95       	ret

0001c1dc <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1c1dc:	08 95       	ret

0001c1de <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1c1de:	fc 01       	movw	r30, r24
   1c1e0:	63 83       	std	Z+3, r22	; 0x03
   1c1e2:	08 95       	ret

0001c1e4 <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1c1e4:	fc 01       	movw	r30, r24
   1c1e6:	64 83       	std	Z+4, r22	; 0x04
   1c1e8:	08 95       	ret

0001c1ea <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1c1ea:	fc 01       	movw	r30, r24
   1c1ec:	62 83       	std	Z+2, r22	; 0x02
   1c1ee:	08 95       	ret

0001c1f0 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1c1f0:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1c1f2:	8b eb       	ldi	r24, 0xBB	; 187
   1c1f4:	98 e0       	ldi	r25, 0x08	; 8
   1c1f6:	91 83       	std	Z+1, r25	; 0x01
   1c1f8:	80 83       	st	Z, r24
   1c1fa:	62 83       	std	Z+2, r22	; 0x02
   1c1fc:	43 83       	std	Z+3, r20	; 0x03
   1c1fe:	24 83       	std	Z+4, r18	; 0x04
   1c200:	08 95       	ret

0001c202 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1c202:	cf 93       	push	r28
   1c204:	df 93       	push	r29
   1c206:	ec 01       	movw	r28, r24
   1c208:	88 8d       	ldd	r24, Y+24	; 0x18
   1c20a:	99 8d       	ldd	r25, Y+25	; 0x19
   1c20c:	dc 01       	movw	r26, r24
   1c20e:	ed 91       	ld	r30, X+
   1c210:	fc 91       	ld	r31, X
   1c212:	06 80       	ldd	r0, Z+6	; 0x06
   1c214:	f7 81       	ldd	r31, Z+7	; 0x07
   1c216:	e0 2d       	mov	r30, r0
   1c218:	19 95       	eicall
   1c21a:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1c21c:	8f 3f       	cpi	r24, 0xFF	; 255
   1c21e:	19 f0       	breq	.+6      	; 0x1c226 <_ZN11RHSPIDriver4initEv+0x24>
   1c220:	61 e0       	ldi	r22, 0x01	; 1
   1c222:	0e 94 8a d4 	call	0x1a914	; 0x1a914 <pinMode>
   1c226:	e8 81       	ld	r30, Y
   1c228:	f9 81       	ldd	r31, Y+1	; 0x01
   1c22a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c22c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c22e:	e0 2d       	mov	r30, r0
   1c230:	ce 01       	movw	r24, r28
   1c232:	19 95       	eicall
   1c234:	64 e6       	ldi	r22, 0x64	; 100
   1c236:	70 e0       	ldi	r23, 0x00	; 0
   1c238:	80 e0       	ldi	r24, 0x00	; 0
   1c23a:	90 e0       	ldi	r25, 0x00	; 0
   1c23c:	0e 94 8d d3 	call	0x1a71a	; 0x1a71a <delay>
   1c240:	81 e0       	ldi	r24, 0x01	; 1
   1c242:	df 91       	pop	r29
   1c244:	cf 91       	pop	r28
   1c246:	08 95       	ret

0001c248 <_ZN11RHSPIDriver11selectSlaveEv>:
   1c248:	60 e0       	ldi	r22, 0x00	; 0
   1c24a:	fc 01       	movw	r30, r24
   1c24c:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c24e:	0c 94 c6 d4 	jmp	0x1a98c	; 0x1a98c <digitalWrite>

0001c252 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1c252:	61 e0       	ldi	r22, 0x01	; 1
   1c254:	fc 01       	movw	r30, r24
   1c256:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c258:	0c 94 c6 d4 	jmp	0x1a98c	; 0x1a98c <digitalWrite>

0001c25c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1c25c:	ef 92       	push	r14
   1c25e:	ff 92       	push	r15
   1c260:	1f 93       	push	r17
   1c262:	cf 93       	push	r28
   1c264:	df 93       	push	r29
   1c266:	ec 01       	movw	r28, r24
   1c268:	16 2f       	mov	r17, r22
   1c26a:	7a 01       	movw	r14, r20
   1c26c:	0e 94 44 d8 	call	0x1b088	; 0x1b088 <_ZN15RHGenericDriverC1Ev>
   1c270:	85 ed       	ldi	r24, 0xD5	; 213
   1c272:	98 e0       	ldi	r25, 0x08	; 8
   1c274:	99 83       	std	Y+1, r25	; 0x01
   1c276:	88 83       	st	Y, r24
   1c278:	f9 8e       	std	Y+25, r15	; 0x19
   1c27a:	e8 8e       	std	Y+24, r14	; 0x18
   1c27c:	1a 8f       	std	Y+26, r17	; 0x1a
   1c27e:	df 91       	pop	r29
   1c280:	cf 91       	pop	r28
   1c282:	1f 91       	pop	r17
   1c284:	ff 90       	pop	r15
   1c286:	ef 90       	pop	r14
   1c288:	08 95       	ret

0001c28a <_ZN11RHSPIDriver7spiReadEh>:
   1c28a:	0f 93       	push	r16
   1c28c:	1f 93       	push	r17
   1c28e:	cf 93       	push	r28
   1c290:	df 93       	push	r29
   1c292:	ec 01       	movw	r28, r24
   1c294:	16 2f       	mov	r17, r22
   1c296:	0f b7       	in	r16, 0x3f	; 63
   1c298:	f8 94       	cli
   1c29a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c29c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c29e:	dc 01       	movw	r26, r24
   1c2a0:	ed 91       	ld	r30, X+
   1c2a2:	fc 91       	ld	r31, X
   1c2a4:	00 88       	ldd	r0, Z+16	; 0x10
   1c2a6:	f1 89       	ldd	r31, Z+17	; 0x11
   1c2a8:	e0 2d       	mov	r30, r0
   1c2aa:	19 95       	eicall
   1c2ac:	e8 81       	ld	r30, Y
   1c2ae:	f9 81       	ldd	r31, Y+1	; 0x01
   1c2b0:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c2b2:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c2b4:	e0 2d       	mov	r30, r0
   1c2b6:	ce 01       	movw	r24, r28
   1c2b8:	19 95       	eicall
   1c2ba:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2bc:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2be:	61 2f       	mov	r22, r17
   1c2c0:	6f 77       	andi	r22, 0x7F	; 127
   1c2c2:	dc 01       	movw	r26, r24
   1c2c4:	ed 91       	ld	r30, X+
   1c2c6:	fc 91       	ld	r31, X
   1c2c8:	01 90       	ld	r0, Z+
   1c2ca:	f0 81       	ld	r31, Z
   1c2cc:	e0 2d       	mov	r30, r0
   1c2ce:	19 95       	eicall
   1c2d0:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2d2:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2d4:	dc 01       	movw	r26, r24
   1c2d6:	ed 91       	ld	r30, X+
   1c2d8:	fc 91       	ld	r31, X
   1c2da:	01 90       	ld	r0, Z+
   1c2dc:	f0 81       	ld	r31, Z
   1c2de:	e0 2d       	mov	r30, r0
   1c2e0:	60 e0       	ldi	r22, 0x00	; 0
   1c2e2:	19 95       	eicall
   1c2e4:	18 2f       	mov	r17, r24
   1c2e6:	e8 81       	ld	r30, Y
   1c2e8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c2ea:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c2ec:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c2ee:	e0 2d       	mov	r30, r0
   1c2f0:	ce 01       	movw	r24, r28
   1c2f2:	19 95       	eicall
   1c2f4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2f6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2f8:	dc 01       	movw	r26, r24
   1c2fa:	ed 91       	ld	r30, X+
   1c2fc:	fc 91       	ld	r31, X
   1c2fe:	02 88       	ldd	r0, Z+18	; 0x12
   1c300:	f3 89       	ldd	r31, Z+19	; 0x13
   1c302:	e0 2d       	mov	r30, r0
   1c304:	19 95       	eicall
   1c306:	0f bf       	out	0x3f, r16	; 63
   1c308:	81 2f       	mov	r24, r17
   1c30a:	df 91       	pop	r29
   1c30c:	cf 91       	pop	r28
   1c30e:	1f 91       	pop	r17
   1c310:	0f 91       	pop	r16
   1c312:	08 95       	ret

0001c314 <_ZN11RHSPIDriver8spiWriteEhh>:
   1c314:	ff 92       	push	r15
   1c316:	0f 93       	push	r16
   1c318:	1f 93       	push	r17
   1c31a:	cf 93       	push	r28
   1c31c:	df 93       	push	r29
   1c31e:	ec 01       	movw	r28, r24
   1c320:	16 2f       	mov	r17, r22
   1c322:	f4 2e       	mov	r15, r20
   1c324:	0f b7       	in	r16, 0x3f	; 63
   1c326:	f8 94       	cli
   1c328:	88 8d       	ldd	r24, Y+24	; 0x18
   1c32a:	99 8d       	ldd	r25, Y+25	; 0x19
   1c32c:	dc 01       	movw	r26, r24
   1c32e:	ed 91       	ld	r30, X+
   1c330:	fc 91       	ld	r31, X
   1c332:	00 88       	ldd	r0, Z+16	; 0x10
   1c334:	f1 89       	ldd	r31, Z+17	; 0x11
   1c336:	e0 2d       	mov	r30, r0
   1c338:	19 95       	eicall
   1c33a:	e8 81       	ld	r30, Y
   1c33c:	f9 81       	ldd	r31, Y+1	; 0x01
   1c33e:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c340:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c342:	e0 2d       	mov	r30, r0
   1c344:	ce 01       	movw	r24, r28
   1c346:	19 95       	eicall
   1c348:	88 8d       	ldd	r24, Y+24	; 0x18
   1c34a:	99 8d       	ldd	r25, Y+25	; 0x19
   1c34c:	61 2f       	mov	r22, r17
   1c34e:	60 68       	ori	r22, 0x80	; 128
   1c350:	dc 01       	movw	r26, r24
   1c352:	ed 91       	ld	r30, X+
   1c354:	fc 91       	ld	r31, X
   1c356:	01 90       	ld	r0, Z+
   1c358:	f0 81       	ld	r31, Z
   1c35a:	e0 2d       	mov	r30, r0
   1c35c:	19 95       	eicall
   1c35e:	18 2f       	mov	r17, r24
   1c360:	88 8d       	ldd	r24, Y+24	; 0x18
   1c362:	99 8d       	ldd	r25, Y+25	; 0x19
   1c364:	dc 01       	movw	r26, r24
   1c366:	ed 91       	ld	r30, X+
   1c368:	fc 91       	ld	r31, X
   1c36a:	01 90       	ld	r0, Z+
   1c36c:	f0 81       	ld	r31, Z
   1c36e:	e0 2d       	mov	r30, r0
   1c370:	6f 2d       	mov	r22, r15
   1c372:	19 95       	eicall
   1c374:	e8 81       	ld	r30, Y
   1c376:	f9 81       	ldd	r31, Y+1	; 0x01
   1c378:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c37a:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c37c:	e0 2d       	mov	r30, r0
   1c37e:	ce 01       	movw	r24, r28
   1c380:	19 95       	eicall
   1c382:	88 8d       	ldd	r24, Y+24	; 0x18
   1c384:	99 8d       	ldd	r25, Y+25	; 0x19
   1c386:	dc 01       	movw	r26, r24
   1c388:	ed 91       	ld	r30, X+
   1c38a:	fc 91       	ld	r31, X
   1c38c:	02 88       	ldd	r0, Z+18	; 0x12
   1c38e:	f3 89       	ldd	r31, Z+19	; 0x13
   1c390:	e0 2d       	mov	r30, r0
   1c392:	19 95       	eicall
   1c394:	0f bf       	out	0x3f, r16	; 63
   1c396:	81 2f       	mov	r24, r17
   1c398:	df 91       	pop	r29
   1c39a:	cf 91       	pop	r28
   1c39c:	1f 91       	pop	r17
   1c39e:	0f 91       	pop	r16
   1c3a0:	ff 90       	pop	r15
   1c3a2:	08 95       	ret

0001c3a4 <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1c3a4:	bf 92       	push	r11
   1c3a6:	cf 92       	push	r12
   1c3a8:	df 92       	push	r13
   1c3aa:	ef 92       	push	r14
   1c3ac:	ff 92       	push	r15
   1c3ae:	0f 93       	push	r16
   1c3b0:	1f 93       	push	r17
   1c3b2:	cf 93       	push	r28
   1c3b4:	df 93       	push	r29
   1c3b6:	ec 01       	movw	r28, r24
   1c3b8:	06 2f       	mov	r16, r22
   1c3ba:	b4 2e       	mov	r11, r20
   1c3bc:	c5 2e       	mov	r12, r21
   1c3be:	12 2f       	mov	r17, r18
   1c3c0:	df b6       	in	r13, 0x3f	; 63
   1c3c2:	f8 94       	cli
   1c3c4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3c6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3c8:	dc 01       	movw	r26, r24
   1c3ca:	ed 91       	ld	r30, X+
   1c3cc:	fc 91       	ld	r31, X
   1c3ce:	00 88       	ldd	r0, Z+16	; 0x10
   1c3d0:	f1 89       	ldd	r31, Z+17	; 0x11
   1c3d2:	e0 2d       	mov	r30, r0
   1c3d4:	19 95       	eicall
   1c3d6:	e8 81       	ld	r30, Y
   1c3d8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c3da:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c3dc:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c3de:	e0 2d       	mov	r30, r0
   1c3e0:	ce 01       	movw	r24, r28
   1c3e2:	19 95       	eicall
   1c3e4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3e6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3e8:	60 2f       	mov	r22, r16
   1c3ea:	6f 77       	andi	r22, 0x7F	; 127
   1c3ec:	dc 01       	movw	r26, r24
   1c3ee:	ed 91       	ld	r30, X+
   1c3f0:	fc 91       	ld	r31, X
   1c3f2:	01 90       	ld	r0, Z+
   1c3f4:	f0 81       	ld	r31, Z
   1c3f6:	e0 2d       	mov	r30, r0
   1c3f8:	19 95       	eicall
   1c3fa:	08 2f       	mov	r16, r24
   1c3fc:	eb 2c       	mov	r14, r11
   1c3fe:	fc 2c       	mov	r15, r12
   1c400:	11 23       	and	r17, r17
   1c402:	79 f0       	breq	.+30     	; 0x1c422 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1c404:	88 8d       	ldd	r24, Y+24	; 0x18
   1c406:	99 8d       	ldd	r25, Y+25	; 0x19
   1c408:	dc 01       	movw	r26, r24
   1c40a:	ed 91       	ld	r30, X+
   1c40c:	fc 91       	ld	r31, X
   1c40e:	01 90       	ld	r0, Z+
   1c410:	f0 81       	ld	r31, Z
   1c412:	e0 2d       	mov	r30, r0
   1c414:	60 e0       	ldi	r22, 0x00	; 0
   1c416:	19 95       	eicall
   1c418:	f7 01       	movw	r30, r14
   1c41a:	81 93       	st	Z+, r24
   1c41c:	7f 01       	movw	r14, r30
   1c41e:	11 50       	subi	r17, 0x01	; 1
   1c420:	ef cf       	rjmp	.-34     	; 0x1c400 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1c422:	e8 81       	ld	r30, Y
   1c424:	f9 81       	ldd	r31, Y+1	; 0x01
   1c426:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c428:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c42a:	e0 2d       	mov	r30, r0
   1c42c:	ce 01       	movw	r24, r28
   1c42e:	19 95       	eicall
   1c430:	88 8d       	ldd	r24, Y+24	; 0x18
   1c432:	99 8d       	ldd	r25, Y+25	; 0x19
   1c434:	dc 01       	movw	r26, r24
   1c436:	ed 91       	ld	r30, X+
   1c438:	fc 91       	ld	r31, X
   1c43a:	02 88       	ldd	r0, Z+18	; 0x12
   1c43c:	f3 89       	ldd	r31, Z+19	; 0x13
   1c43e:	e0 2d       	mov	r30, r0
   1c440:	19 95       	eicall
   1c442:	df be       	out	0x3f, r13	; 63
   1c444:	80 2f       	mov	r24, r16
   1c446:	df 91       	pop	r29
   1c448:	cf 91       	pop	r28
   1c44a:	1f 91       	pop	r17
   1c44c:	0f 91       	pop	r16
   1c44e:	ff 90       	pop	r15
   1c450:	ef 90       	pop	r14
   1c452:	df 90       	pop	r13
   1c454:	cf 90       	pop	r12
   1c456:	bf 90       	pop	r11
   1c458:	08 95       	ret

0001c45a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1c45a:	bf 92       	push	r11
   1c45c:	cf 92       	push	r12
   1c45e:	df 92       	push	r13
   1c460:	ef 92       	push	r14
   1c462:	ff 92       	push	r15
   1c464:	0f 93       	push	r16
   1c466:	1f 93       	push	r17
   1c468:	cf 93       	push	r28
   1c46a:	df 93       	push	r29
   1c46c:	ec 01       	movw	r28, r24
   1c46e:	06 2f       	mov	r16, r22
   1c470:	b4 2e       	mov	r11, r20
   1c472:	c5 2e       	mov	r12, r21
   1c474:	12 2f       	mov	r17, r18
   1c476:	df b6       	in	r13, 0x3f	; 63
   1c478:	f8 94       	cli
   1c47a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c47c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c47e:	dc 01       	movw	r26, r24
   1c480:	ed 91       	ld	r30, X+
   1c482:	fc 91       	ld	r31, X
   1c484:	00 88       	ldd	r0, Z+16	; 0x10
   1c486:	f1 89       	ldd	r31, Z+17	; 0x11
   1c488:	e0 2d       	mov	r30, r0
   1c48a:	19 95       	eicall
   1c48c:	e8 81       	ld	r30, Y
   1c48e:	f9 81       	ldd	r31, Y+1	; 0x01
   1c490:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c492:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c494:	e0 2d       	mov	r30, r0
   1c496:	ce 01       	movw	r24, r28
   1c498:	19 95       	eicall
   1c49a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c49c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c49e:	60 2f       	mov	r22, r16
   1c4a0:	60 68       	ori	r22, 0x80	; 128
   1c4a2:	dc 01       	movw	r26, r24
   1c4a4:	ed 91       	ld	r30, X+
   1c4a6:	fc 91       	ld	r31, X
   1c4a8:	01 90       	ld	r0, Z+
   1c4aa:	f0 81       	ld	r31, Z
   1c4ac:	e0 2d       	mov	r30, r0
   1c4ae:	19 95       	eicall
   1c4b0:	08 2f       	mov	r16, r24
   1c4b2:	eb 2c       	mov	r14, r11
   1c4b4:	fc 2c       	mov	r15, r12
   1c4b6:	11 23       	and	r17, r17
   1c4b8:	71 f0       	breq	.+28     	; 0x1c4d6 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1c4ba:	88 8d       	ldd	r24, Y+24	; 0x18
   1c4bc:	99 8d       	ldd	r25, Y+25	; 0x19
   1c4be:	f7 01       	movw	r30, r14
   1c4c0:	61 91       	ld	r22, Z+
   1c4c2:	7f 01       	movw	r14, r30
   1c4c4:	dc 01       	movw	r26, r24
   1c4c6:	ed 91       	ld	r30, X+
   1c4c8:	fc 91       	ld	r31, X
   1c4ca:	01 90       	ld	r0, Z+
   1c4cc:	f0 81       	ld	r31, Z
   1c4ce:	e0 2d       	mov	r30, r0
   1c4d0:	19 95       	eicall
   1c4d2:	11 50       	subi	r17, 0x01	; 1
   1c4d4:	f0 cf       	rjmp	.-32     	; 0x1c4b6 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1c4d6:	e8 81       	ld	r30, Y
   1c4d8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c4da:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c4dc:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c4de:	e0 2d       	mov	r30, r0
   1c4e0:	ce 01       	movw	r24, r28
   1c4e2:	19 95       	eicall
   1c4e4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c4e6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c4e8:	dc 01       	movw	r26, r24
   1c4ea:	ed 91       	ld	r30, X+
   1c4ec:	fc 91       	ld	r31, X
   1c4ee:	02 88       	ldd	r0, Z+18	; 0x12
   1c4f0:	f3 89       	ldd	r31, Z+19	; 0x13
   1c4f2:	e0 2d       	mov	r30, r0
   1c4f4:	19 95       	eicall
   1c4f6:	df be       	out	0x3f, r13	; 63
   1c4f8:	80 2f       	mov	r24, r16
   1c4fa:	df 91       	pop	r29
   1c4fc:	cf 91       	pop	r28
   1c4fe:	1f 91       	pop	r17
   1c500:	0f 91       	pop	r16
   1c502:	ff 90       	pop	r15
   1c504:	ef 90       	pop	r14
   1c506:	df 90       	pop	r13
   1c508:	cf 90       	pop	r12
   1c50a:	bf 90       	pop	r11
   1c50c:	08 95       	ret

0001c50e <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1c50e:	dc 01       	movw	r26, r24
   1c510:	58 96       	adiw	r26, 0x18	; 24
   1c512:	8d 91       	ld	r24, X+
   1c514:	9c 91       	ld	r25, X
   1c516:	59 97       	sbiw	r26, 0x19	; 25
   1c518:	dc 01       	movw	r26, r24
   1c51a:	ed 91       	ld	r30, X+
   1c51c:	fc 91       	ld	r31, X
   1c51e:	04 88       	ldd	r0, Z+20	; 0x14
   1c520:	f5 89       	ldd	r31, Z+21	; 0x15
   1c522:	e0 2d       	mov	r30, r0
   1c524:	19 94       	eijmp

0001c526 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1c526:	10 92 b3 18 	sts	0x18B3, r1	; 0x8018b3 <twi_state>
   1c52a:	81 e0       	ldi	r24, 0x01	; 1
   1c52c:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_sendStop>
   1c530:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_inRepStart>
   1c534:	61 e0       	ldi	r22, 0x01	; 1
   1c536:	84 e1       	ldi	r24, 0x14	; 20
   1c538:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1c53c:	61 e0       	ldi	r22, 0x01	; 1
   1c53e:	85 e1       	ldi	r24, 0x15	; 21
   1c540:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1c544:	e9 eb       	ldi	r30, 0xB9	; 185
   1c546:	f0 e0       	ldi	r31, 0x00	; 0
   1c548:	80 81       	ld	r24, Z
   1c54a:	8e 7f       	andi	r24, 0xFE	; 254
   1c54c:	80 83       	st	Z, r24
   1c54e:	80 81       	ld	r24, Z
   1c550:	8d 7f       	andi	r24, 0xFD	; 253
   1c552:	80 83       	st	Z, r24
   1c554:	88 e4       	ldi	r24, 0x48	; 72
   1c556:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c55a:	85 e4       	ldi	r24, 0x45	; 69
   1c55c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c560:	08 95       	ret

0001c562 <twi_disable>:
   1c562:	ec eb       	ldi	r30, 0xBC	; 188
   1c564:	f0 e0       	ldi	r31, 0x00	; 0
   1c566:	80 81       	ld	r24, Z
   1c568:	8a 7b       	andi	r24, 0xBA	; 186
   1c56a:	80 83       	st	Z, r24
   1c56c:	60 e0       	ldi	r22, 0x00	; 0
   1c56e:	84 e1       	ldi	r24, 0x14	; 20
   1c570:	0e 94 c6 d4 	call	0x1a98c	; 0x1a98c <digitalWrite>
   1c574:	60 e0       	ldi	r22, 0x00	; 0
   1c576:	85 e1       	ldi	r24, 0x15	; 21
   1c578:	0c 94 c6 d4 	jmp	0x1a98c	; 0x1a98c <digitalWrite>

0001c57c <twi_transmit>:
   1c57c:	40 91 62 18 	lds	r20, 0x1862	; 0x801862 <twi_txBufferLength>
   1c580:	26 2f       	mov	r18, r22
   1c582:	30 e0       	ldi	r19, 0x00	; 0
   1c584:	24 0f       	add	r18, r20
   1c586:	31 1d       	adc	r19, r1
   1c588:	21 32       	cpi	r18, 0x21	; 33
   1c58a:	31 05       	cpc	r19, r1
   1c58c:	dc f4       	brge	.+54     	; 0x1c5c4 <twi_transmit+0x48>
   1c58e:	20 91 b3 18 	lds	r18, 0x18B3	; 0x8018b3 <twi_state>
   1c592:	24 30       	cpi	r18, 0x04	; 4
   1c594:	c9 f4       	brne	.+50     	; 0x1c5c8 <twi_transmit+0x4c>
   1c596:	fc 01       	movw	r30, r24
   1c598:	80 e0       	ldi	r24, 0x00	; 0
   1c59a:	90 e0       	ldi	r25, 0x00	; 0
   1c59c:	86 17       	cp	r24, r22
   1c59e:	58 f4       	brcc	.+22     	; 0x1c5b6 <twi_transmit+0x3a>
   1c5a0:	30 91 62 18 	lds	r19, 0x1862	; 0x801862 <twi_txBufferLength>
   1c5a4:	21 91       	ld	r18, Z+
   1c5a6:	dc 01       	movw	r26, r24
   1c5a8:	ac 59       	subi	r26, 0x9C	; 156
   1c5aa:	b7 4e       	sbci	r27, 0xE7	; 231
   1c5ac:	a3 0f       	add	r26, r19
   1c5ae:	b1 1d       	adc	r27, r1
   1c5b0:	2c 93       	st	X, r18
   1c5b2:	01 96       	adiw	r24, 0x01	; 1
   1c5b4:	f3 cf       	rjmp	.-26     	; 0x1c59c <twi_transmit+0x20>
   1c5b6:	80 91 62 18 	lds	r24, 0x1862	; 0x801862 <twi_txBufferLength>
   1c5ba:	68 0f       	add	r22, r24
   1c5bc:	60 93 62 18 	sts	0x1862, r22	; 0x801862 <twi_txBufferLength>
   1c5c0:	80 e0       	ldi	r24, 0x00	; 0
   1c5c2:	08 95       	ret
   1c5c4:	81 e0       	ldi	r24, 0x01	; 1
   1c5c6:	08 95       	ret
   1c5c8:	82 e0       	ldi	r24, 0x02	; 2
   1c5ca:	08 95       	ret

0001c5cc <twi_attachSlaveRxEvent>:
   1c5cc:	90 93 a7 18 	sts	0x18A7, r25	; 0x8018a7 <twi_onSlaveReceive+0x1>
   1c5d0:	80 93 a6 18 	sts	0x18A6, r24	; 0x8018a6 <twi_onSlaveReceive>
   1c5d4:	08 95       	ret

0001c5d6 <twi_attachSlaveTxEvent>:
   1c5d6:	90 93 a9 18 	sts	0x18A9, r25	; 0x8018a9 <twi_onSlaveTransmit+0x1>
   1c5da:	80 93 a8 18 	sts	0x18A8, r24	; 0x8018a8 <twi_onSlaveTransmit>
   1c5de:	08 95       	ret

0001c5e0 <twi_releaseBus>:
   1c5e0:	85 ec       	ldi	r24, 0xC5	; 197
   1c5e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c5e6:	10 92 b3 18 	sts	0x18B3, r1	; 0x8018b3 <twi_state>
   1c5ea:	08 95       	ret

0001c5ec <twi_handleTimeout>:
   1c5ec:	cf 93       	push	r28
   1c5ee:	df 93       	push	r29
   1c5f0:	91 e0       	ldi	r25, 0x01	; 1
   1c5f2:	90 93 ab 18 	sts	0x18AB, r25	; 0x8018ab <twi_timed_out_flag>
   1c5f6:	88 23       	and	r24, r24
   1c5f8:	51 f0       	breq	.+20     	; 0x1c60e <twi_handleTimeout+0x22>
   1c5fa:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c5fe:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c602:	af df       	rcall	.-162    	; 0x1c562 <twi_disable>
   1c604:	90 df       	rcall	.-224    	; 0x1c526 <twi_init>
   1c606:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c60a:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c60e:	df 91       	pop	r29
   1c610:	cf 91       	pop	r28
   1c612:	08 95       	ret

0001c614 <twi_writeTo>:
   1c614:	4f 92       	push	r4
   1c616:	5f 92       	push	r5
   1c618:	6f 92       	push	r6
   1c61a:	7f 92       	push	r7
   1c61c:	8f 92       	push	r8
   1c61e:	9f 92       	push	r9
   1c620:	af 92       	push	r10
   1c622:	bf 92       	push	r11
   1c624:	cf 92       	push	r12
   1c626:	df 92       	push	r13
   1c628:	ef 92       	push	r14
   1c62a:	ff 92       	push	r15
   1c62c:	0f 93       	push	r16
   1c62e:	1f 93       	push	r17
   1c630:	cf 93       	push	r28
   1c632:	df 93       	push	r29
   1c634:	41 32       	cpi	r20, 0x21	; 33
   1c636:	08 f0       	brcs	.+2      	; 0x1c63a <twi_writeTo+0x26>
   1c638:	c5 c0       	rjmp	.+394    	; 0x1c7c4 <twi_writeTo+0x1b0>
   1c63a:	12 2f       	mov	r17, r18
   1c63c:	f4 2e       	mov	r15, r20
   1c63e:	d7 2e       	mov	r13, r23
   1c640:	e6 2e       	mov	r14, r22
   1c642:	d8 2f       	mov	r29, r24
   1c644:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c648:	4b 01       	movw	r8, r22
   1c64a:	5c 01       	movw	r10, r24
   1c64c:	c0 91 b3 18 	lds	r28, 0x18B3	; 0x8018b3 <twi_state>
   1c650:	cc 23       	and	r28, r28
   1c652:	11 f1       	breq	.+68     	; 0x1c698 <twi_writeTo+0x84>
   1c654:	80 91 ac 18 	lds	r24, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c658:	90 91 ad 18 	lds	r25, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c65c:	a0 91 ae 18 	lds	r26, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c660:	b0 91 af 18 	lds	r27, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c664:	89 2b       	or	r24, r25
   1c666:	8a 2b       	or	r24, r26
   1c668:	8b 2b       	or	r24, r27
   1c66a:	81 f3       	breq	.-32     	; 0x1c64c <twi_writeTo+0x38>
   1c66c:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c670:	40 90 ac 18 	lds	r4, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c674:	50 90 ad 18 	lds	r5, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c678:	60 90 ae 18 	lds	r6, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c67c:	70 90 af 18 	lds	r7, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c680:	dc 01       	movw	r26, r24
   1c682:	cb 01       	movw	r24, r22
   1c684:	88 19       	sub	r24, r8
   1c686:	99 09       	sbc	r25, r9
   1c688:	aa 09       	sbc	r26, r10
   1c68a:	bb 09       	sbc	r27, r11
   1c68c:	48 16       	cp	r4, r24
   1c68e:	59 06       	cpc	r5, r25
   1c690:	6a 06       	cpc	r6, r26
   1c692:	7b 06       	cpc	r7, r27
   1c694:	d8 f6       	brcc	.-74     	; 0x1c64c <twi_writeTo+0x38>
   1c696:	83 c0       	rjmp	.+262    	; 0x1c79e <twi_writeTo+0x18a>
   1c698:	82 e0       	ldi	r24, 0x02	; 2
   1c69a:	80 93 b3 18 	sts	0x18B3, r24	; 0x8018b3 <twi_state>
   1c69e:	00 93 b1 18 	sts	0x18B1, r16	; 0x8018b1 <twi_sendStop>
   1c6a2:	8f ef       	ldi	r24, 0xFF	; 255
   1c6a4:	80 93 40 18 	sts	0x1840, r24	; 0x801840 <twi_error>
   1c6a8:	10 92 85 18 	sts	0x1885, r1	; 0x801885 <twi_masterBufferIndex>
   1c6ac:	f0 92 84 18 	sts	0x1884, r15	; 0x801884 <twi_masterBufferLength>
   1c6b0:	9e 2d       	mov	r25, r14
   1c6b2:	a6 e8       	ldi	r26, 0x86	; 134
   1c6b4:	b8 e1       	ldi	r27, 0x18	; 24
   1c6b6:	ee 2d       	mov	r30, r14
   1c6b8:	fd 2d       	mov	r31, r13
   1c6ba:	8e 2f       	mov	r24, r30
   1c6bc:	89 1b       	sub	r24, r25
   1c6be:	8f 15       	cp	r24, r15
   1c6c0:	18 f4       	brcc	.+6      	; 0x1c6c8 <twi_writeTo+0xb4>
   1c6c2:	81 91       	ld	r24, Z+
   1c6c4:	8d 93       	st	X+, r24
   1c6c6:	f9 cf       	rjmp	.-14     	; 0x1c6ba <twi_writeTo+0xa6>
   1c6c8:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_slarw>
   1c6cc:	90 91 b2 18 	lds	r25, 0x18B2	; 0x8018b2 <twi_slarw>
   1c6d0:	dd 0f       	add	r29, r29
   1c6d2:	d9 2b       	or	r29, r25
   1c6d4:	d0 93 b2 18 	sts	0x18B2, r29	; 0x8018b2 <twi_slarw>
   1c6d8:	80 91 b0 18 	lds	r24, 0x18B0	; 0x8018b0 <twi_inRepStart>
   1c6dc:	81 30       	cpi	r24, 0x01	; 1
   1c6de:	89 f5       	brne	.+98     	; 0x1c742 <twi_writeTo+0x12e>
   1c6e0:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_inRepStart>
   1c6e4:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c6e8:	6b 01       	movw	r12, r22
   1c6ea:	7c 01       	movw	r14, r24
   1c6ec:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_slarw>
   1c6f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c6f4:	80 91 ac 18 	lds	r24, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c6f8:	90 91 ad 18 	lds	r25, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c6fc:	a0 91 ae 18 	lds	r26, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c700:	b0 91 af 18 	lds	r27, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c704:	89 2b       	or	r24, r25
   1c706:	8a 2b       	or	r24, r26
   1c708:	8b 2b       	or	r24, r27
   1c70a:	a9 f0       	breq	.+42     	; 0x1c736 <twi_writeTo+0x122>
   1c70c:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c710:	80 90 ac 18 	lds	r8, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c714:	90 90 ad 18 	lds	r9, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c718:	a0 90 ae 18 	lds	r10, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c71c:	b0 90 af 18 	lds	r11, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c720:	dc 01       	movw	r26, r24
   1c722:	cb 01       	movw	r24, r22
   1c724:	8c 19       	sub	r24, r12
   1c726:	9d 09       	sbc	r25, r13
   1c728:	ae 09       	sbc	r26, r14
   1c72a:	bf 09       	sbc	r27, r15
   1c72c:	88 16       	cp	r8, r24
   1c72e:	99 06       	cpc	r9, r25
   1c730:	aa 06       	cpc	r10, r26
   1c732:	bb 06       	cpc	r11, r27
   1c734:	a0 f1       	brcs	.+104    	; 0x1c79e <twi_writeTo+0x18a>
   1c736:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c73a:	83 fd       	sbrc	r24, 3
   1c73c:	d7 cf       	rjmp	.-82     	; 0x1c6ec <twi_writeTo+0xd8>
   1c73e:	85 ec       	ldi	r24, 0xC5	; 197
   1c740:	01 c0       	rjmp	.+2      	; 0x1c744 <twi_writeTo+0x130>
   1c742:	85 ee       	ldi	r24, 0xE5	; 229
   1c744:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c748:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c74c:	6b 01       	movw	r12, r22
   1c74e:	7c 01       	movw	r14, r24
   1c750:	11 23       	and	r17, r17
   1c752:	51 f1       	breq	.+84     	; 0x1c7a8 <twi_writeTo+0x194>
   1c754:	80 91 b3 18 	lds	r24, 0x18B3	; 0x8018b3 <twi_state>
   1c758:	82 30       	cpi	r24, 0x02	; 2
   1c75a:	31 f5       	brne	.+76     	; 0x1c7a8 <twi_writeTo+0x194>
   1c75c:	80 91 ac 18 	lds	r24, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c760:	90 91 ad 18 	lds	r25, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c764:	a0 91 ae 18 	lds	r26, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c768:	b0 91 af 18 	lds	r27, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c76c:	89 2b       	or	r24, r25
   1c76e:	8a 2b       	or	r24, r26
   1c770:	8b 2b       	or	r24, r27
   1c772:	71 f3       	breq	.-36     	; 0x1c750 <twi_writeTo+0x13c>
   1c774:	0e 94 68 d3 	call	0x1a6d0	; 0x1a6d0 <micros>
   1c778:	80 90 ac 18 	lds	r8, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c77c:	90 90 ad 18 	lds	r9, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c780:	a0 90 ae 18 	lds	r10, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c784:	b0 90 af 18 	lds	r11, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c788:	dc 01       	movw	r26, r24
   1c78a:	cb 01       	movw	r24, r22
   1c78c:	8c 19       	sub	r24, r12
   1c78e:	9d 09       	sbc	r25, r13
   1c790:	ae 09       	sbc	r26, r14
   1c792:	bf 09       	sbc	r27, r15
   1c794:	88 16       	cp	r8, r24
   1c796:	99 06       	cpc	r9, r25
   1c798:	aa 06       	cpc	r10, r26
   1c79a:	bb 06       	cpc	r11, r27
   1c79c:	c8 f6       	brcc	.-78     	; 0x1c750 <twi_writeTo+0x13c>
   1c79e:	80 91 aa 18 	lds	r24, 0x18AA	; 0x8018aa <twi_do_reset_on_timeout>
   1c7a2:	24 df       	rcall	.-440    	; 0x1c5ec <twi_handleTimeout>
   1c7a4:	c5 e0       	ldi	r28, 0x05	; 5
   1c7a6:	13 c0       	rjmp	.+38     	; 0x1c7ce <twi_writeTo+0x1ba>
   1c7a8:	80 91 40 18 	lds	r24, 0x1840	; 0x801840 <twi_error>
   1c7ac:	8f 3f       	cpi	r24, 0xFF	; 255
   1c7ae:	79 f0       	breq	.+30     	; 0x1c7ce <twi_writeTo+0x1ba>
   1c7b0:	80 91 40 18 	lds	r24, 0x1840	; 0x801840 <twi_error>
   1c7b4:	80 32       	cpi	r24, 0x20	; 32
   1c7b6:	41 f0       	breq	.+16     	; 0x1c7c8 <twi_writeTo+0x1b4>
   1c7b8:	80 91 40 18 	lds	r24, 0x1840	; 0x801840 <twi_error>
   1c7bc:	80 33       	cpi	r24, 0x30	; 48
   1c7be:	31 f0       	breq	.+12     	; 0x1c7cc <twi_writeTo+0x1b8>
   1c7c0:	c4 e0       	ldi	r28, 0x04	; 4
   1c7c2:	05 c0       	rjmp	.+10     	; 0x1c7ce <twi_writeTo+0x1ba>
   1c7c4:	c1 e0       	ldi	r28, 0x01	; 1
   1c7c6:	03 c0       	rjmp	.+6      	; 0x1c7ce <twi_writeTo+0x1ba>
   1c7c8:	c2 e0       	ldi	r28, 0x02	; 2
   1c7ca:	01 c0       	rjmp	.+2      	; 0x1c7ce <twi_writeTo+0x1ba>
   1c7cc:	c3 e0       	ldi	r28, 0x03	; 3
   1c7ce:	8c 2f       	mov	r24, r28
   1c7d0:	df 91       	pop	r29
   1c7d2:	cf 91       	pop	r28
   1c7d4:	1f 91       	pop	r17
   1c7d6:	0f 91       	pop	r16
   1c7d8:	ff 90       	pop	r15
   1c7da:	ef 90       	pop	r14
   1c7dc:	df 90       	pop	r13
   1c7de:	cf 90       	pop	r12
   1c7e0:	bf 90       	pop	r11
   1c7e2:	af 90       	pop	r10
   1c7e4:	9f 90       	pop	r9
   1c7e6:	8f 90       	pop	r8
   1c7e8:	7f 90       	pop	r7
   1c7ea:	6f 90       	pop	r6
   1c7ec:	5f 90       	pop	r5
   1c7ee:	4f 90       	pop	r4
   1c7f0:	08 95       	ret

0001c7f2 <twi_stop>:
   1c7f2:	85 ed       	ldi	r24, 0xD5	; 213
   1c7f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c7f8:	80 91 ac 18 	lds	r24, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c7fc:	90 91 ad 18 	lds	r25, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c800:	a0 91 ae 18 	lds	r26, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c804:	b0 91 af 18 	lds	r27, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c808:	07 96       	adiw	r24, 0x07	; 7
   1c80a:	a1 1d       	adc	r26, r1
   1c80c:	b1 1d       	adc	r27, r1
   1c80e:	23 e0       	ldi	r18, 0x03	; 3
   1c810:	b6 95       	lsr	r27
   1c812:	a7 95       	ror	r26
   1c814:	97 95       	ror	r25
   1c816:	87 95       	ror	r24
   1c818:	2a 95       	dec	r18
   1c81a:	d1 f7       	brne	.-12     	; 0x1c810 <twi_stop+0x1e>
   1c81c:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c820:	24 ff       	sbrs	r18, 4
   1c822:	1b c0       	rjmp	.+54     	; 0x1c85a <twi_stop+0x68>
   1c824:	40 91 ac 18 	lds	r20, 0x18AC	; 0x8018ac <twi_timeout_us>
   1c828:	50 91 ad 18 	lds	r21, 0x18AD	; 0x8018ad <twi_timeout_us+0x1>
   1c82c:	60 91 ae 18 	lds	r22, 0x18AE	; 0x8018ae <twi_timeout_us+0x2>
   1c830:	70 91 af 18 	lds	r23, 0x18AF	; 0x8018af <twi_timeout_us+0x3>
   1c834:	45 2b       	or	r20, r21
   1c836:	46 2b       	or	r20, r22
   1c838:	47 2b       	or	r20, r23
   1c83a:	81 f3       	breq	.-32     	; 0x1c81c <twi_stop+0x2a>
   1c83c:	00 97       	sbiw	r24, 0x00	; 0
   1c83e:	a1 05       	cpc	r26, r1
   1c840:	b1 05       	cpc	r27, r1
   1c842:	41 f0       	breq	.+16     	; 0x1c854 <twi_stop+0x62>
   1c844:	25 e3       	ldi	r18, 0x35	; 53
   1c846:	2a 95       	dec	r18
   1c848:	f1 f7       	brne	.-4      	; 0x1c846 <twi_stop+0x54>
   1c84a:	00 00       	nop
   1c84c:	01 97       	sbiw	r24, 0x01	; 1
   1c84e:	a1 09       	sbc	r26, r1
   1c850:	b1 09       	sbc	r27, r1
   1c852:	e4 cf       	rjmp	.-56     	; 0x1c81c <twi_stop+0x2a>
   1c854:	80 91 aa 18 	lds	r24, 0x18AA	; 0x8018aa <twi_do_reset_on_timeout>
   1c858:	c9 ce       	rjmp	.-622    	; 0x1c5ec <twi_handleTimeout>
   1c85a:	10 92 b3 18 	sts	0x18B3, r1	; 0x8018b3 <twi_state>
   1c85e:	08 95       	ret

0001c860 <__vector_39>:

ISR(TWI_vect)
{
   1c860:	1f 92       	push	r1
   1c862:	0f 92       	push	r0
   1c864:	0f b6       	in	r0, 0x3f	; 63
   1c866:	0f 92       	push	r0
   1c868:	11 24       	eor	r1, r1
   1c86a:	0b b6       	in	r0, 0x3b	; 59
   1c86c:	0f 92       	push	r0
   1c86e:	2f 93       	push	r18
   1c870:	3f 93       	push	r19
   1c872:	4f 93       	push	r20
   1c874:	5f 93       	push	r21
   1c876:	6f 93       	push	r22
   1c878:	7f 93       	push	r23
   1c87a:	8f 93       	push	r24
   1c87c:	9f 93       	push	r25
   1c87e:	af 93       	push	r26
   1c880:	bf 93       	push	r27
   1c882:	ef 93       	push	r30
   1c884:	ff 93       	push	r31
  switch(TW_STATUS){
   1c886:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1c88a:	88 7f       	andi	r24, 0xF8	; 248
   1c88c:	80 36       	cpi	r24, 0x60	; 96
   1c88e:	09 f4       	brne	.+2      	; 0x1c892 <__vector_39+0x32>
   1c890:	9d c0       	rjmp	.+314    	; 0x1c9cc <__vector_39+0x16c>
   1c892:	70 f5       	brcc	.+92     	; 0x1c8f0 <__vector_39+0x90>
   1c894:	88 32       	cpi	r24, 0x28	; 40
   1c896:	09 f4       	brne	.+2      	; 0x1c89a <__vector_39+0x3a>
   1c898:	5c c0       	rjmp	.+184    	; 0x1c952 <__vector_39+0xf2>
   1c89a:	90 f4       	brcc	.+36     	; 0x1c8c0 <__vector_39+0x60>
   1c89c:	80 31       	cpi	r24, 0x10	; 16
   1c89e:	09 f4       	brne	.+2      	; 0x1c8a2 <__vector_39+0x42>
   1c8a0:	55 c0       	rjmp	.+170    	; 0x1c94c <__vector_39+0xec>
   1c8a2:	38 f4       	brcc	.+14     	; 0x1c8b2 <__vector_39+0x52>
   1c8a4:	88 23       	and	r24, r24
   1c8a6:	09 f4       	brne	.+2      	; 0x1c8aa <__vector_39+0x4a>
   1c8a8:	f3 c0       	rjmp	.+486    	; 0x1ca90 <__vector_39+0x230>
   1c8aa:	88 30       	cpi	r24, 0x08	; 8
   1c8ac:	09 f4       	brne	.+2      	; 0x1c8b0 <__vector_39+0x50>
   1c8ae:	4e c0       	rjmp	.+156    	; 0x1c94c <__vector_39+0xec>
   1c8b0:	f2 c0       	rjmp	.+484    	; 0x1ca96 <__vector_39+0x236>
   1c8b2:	88 31       	cpi	r24, 0x18	; 24
   1c8b4:	09 f4       	brne	.+2      	; 0x1c8b8 <__vector_39+0x58>
   1c8b6:	4d c0       	rjmp	.+154    	; 0x1c952 <__vector_39+0xf2>
   1c8b8:	80 32       	cpi	r24, 0x20	; 32
   1c8ba:	09 f4       	brne	.+2      	; 0x1c8be <__vector_39+0x5e>
   1c8bc:	5e c0       	rjmp	.+188    	; 0x1c97a <__vector_39+0x11a>
   1c8be:	eb c0       	rjmp	.+470    	; 0x1ca96 <__vector_39+0x236>
   1c8c0:	80 34       	cpi	r24, 0x40	; 64
   1c8c2:	09 f4       	brne	.+2      	; 0x1c8c6 <__vector_39+0x66>
   1c8c4:	69 c0       	rjmp	.+210    	; 0x1c998 <__vector_39+0x138>
   1c8c6:	50 f4       	brcc	.+20     	; 0x1c8dc <__vector_39+0x7c>
   1c8c8:	80 33       	cpi	r24, 0x30	; 48
   1c8ca:	09 f4       	brne	.+2      	; 0x1c8ce <__vector_39+0x6e>
   1c8cc:	56 c0       	rjmp	.+172    	; 0x1c97a <__vector_39+0x11a>
   1c8ce:	88 33       	cpi	r24, 0x38	; 56
   1c8d0:	09 f0       	breq	.+2      	; 0x1c8d4 <__vector_39+0x74>
   1c8d2:	e1 c0       	rjmp	.+450    	; 0x1ca96 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1c8d4:	80 93 40 18 	sts	0x1840, r24	; 0x801840 <twi_error>
      twi_releaseBus();
   1c8d8:	83 de       	rcall	.-762    	; 0x1c5e0 <twi_releaseBus>
      break;
   1c8da:	dd c0       	rjmp	.+442    	; 0x1ca96 <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1c8dc:	80 35       	cpi	r24, 0x50	; 80
   1c8de:	09 f4       	brne	.+2      	; 0x1c8e2 <__vector_39+0x82>
   1c8e0:	4f c0       	rjmp	.+158    	; 0x1c980 <__vector_39+0x120>
   1c8e2:	88 35       	cpi	r24, 0x58	; 88
   1c8e4:	09 f4       	brne	.+2      	; 0x1c8e8 <__vector_39+0x88>
   1c8e6:	5d c0       	rjmp	.+186    	; 0x1c9a2 <__vector_39+0x142>
   1c8e8:	88 34       	cpi	r24, 0x48	; 72
   1c8ea:	09 f0       	breq	.+2      	; 0x1c8ee <__vector_39+0x8e>
   1c8ec:	d4 c0       	rjmp	.+424    	; 0x1ca96 <__vector_39+0x236>
   1c8ee:	d2 c0       	rjmp	.+420    	; 0x1ca94 <__vector_39+0x234>
   1c8f0:	88 39       	cpi	r24, 0x98	; 152
   1c8f2:	09 f4       	brne	.+2      	; 0x1c8f6 <__vector_39+0x96>
   1c8f4:	c3 c0       	rjmp	.+390    	; 0x1ca7c <__vector_39+0x21c>
   1c8f6:	a8 f4       	brcc	.+42     	; 0x1c922 <__vector_39+0xc2>
   1c8f8:	88 37       	cpi	r24, 0x78	; 120
   1c8fa:	09 f4       	brne	.+2      	; 0x1c8fe <__vector_39+0x9e>
   1c8fc:	67 c0       	rjmp	.+206    	; 0x1c9cc <__vector_39+0x16c>
   1c8fe:	38 f4       	brcc	.+14     	; 0x1c90e <__vector_39+0xae>
   1c900:	88 36       	cpi	r24, 0x68	; 104
   1c902:	09 f4       	brne	.+2      	; 0x1c906 <__vector_39+0xa6>
   1c904:	63 c0       	rjmp	.+198    	; 0x1c9cc <__vector_39+0x16c>
   1c906:	80 37       	cpi	r24, 0x70	; 112
   1c908:	09 f4       	brne	.+2      	; 0x1c90c <__vector_39+0xac>
   1c90a:	60 c0       	rjmp	.+192    	; 0x1c9cc <__vector_39+0x16c>
   1c90c:	c4 c0       	rjmp	.+392    	; 0x1ca96 <__vector_39+0x236>
   1c90e:	88 38       	cpi	r24, 0x88	; 136
   1c910:	09 f4       	brne	.+2      	; 0x1c914 <__vector_39+0xb4>
   1c912:	b4 c0       	rjmp	.+360    	; 0x1ca7c <__vector_39+0x21c>
   1c914:	80 39       	cpi	r24, 0x90	; 144
   1c916:	09 f4       	brne	.+2      	; 0x1c91a <__vector_39+0xba>
   1c918:	5f c0       	rjmp	.+190    	; 0x1c9d8 <__vector_39+0x178>
   1c91a:	80 38       	cpi	r24, 0x80	; 128
   1c91c:	09 f0       	breq	.+2      	; 0x1c920 <__vector_39+0xc0>
   1c91e:	bb c0       	rjmp	.+374    	; 0x1ca96 <__vector_39+0x236>
   1c920:	5b c0       	rjmp	.+182    	; 0x1c9d8 <__vector_39+0x178>
   1c922:	80 3b       	cpi	r24, 0xB0	; 176
   1c924:	09 f4       	brne	.+2      	; 0x1c928 <__vector_39+0xc8>
   1c926:	82 c0       	rjmp	.+260    	; 0x1ca2c <__vector_39+0x1cc>
   1c928:	38 f4       	brcc	.+14     	; 0x1c938 <__vector_39+0xd8>
   1c92a:	80 3a       	cpi	r24, 0xA0	; 160
   1c92c:	09 f4       	brne	.+2      	; 0x1c930 <__vector_39+0xd0>
   1c92e:	66 c0       	rjmp	.+204    	; 0x1c9fc <__vector_39+0x19c>
   1c930:	88 3a       	cpi	r24, 0xA8	; 168
   1c932:	09 f4       	brne	.+2      	; 0x1c936 <__vector_39+0xd6>
   1c934:	7b c0       	rjmp	.+246    	; 0x1ca2c <__vector_39+0x1cc>
   1c936:	af c0       	rjmp	.+350    	; 0x1ca96 <__vector_39+0x236>
   1c938:	80 3c       	cpi	r24, 0xC0	; 192
   1c93a:	09 f4       	brne	.+2      	; 0x1c93e <__vector_39+0xde>
   1c93c:	a3 c0       	rjmp	.+326    	; 0x1ca84 <__vector_39+0x224>
   1c93e:	88 3c       	cpi	r24, 0xC8	; 200
   1c940:	09 f4       	brne	.+2      	; 0x1c944 <__vector_39+0xe4>
   1c942:	a0 c0       	rjmp	.+320    	; 0x1ca84 <__vector_39+0x224>
   1c944:	88 3b       	cpi	r24, 0xB8	; 184
   1c946:	09 f4       	brne	.+2      	; 0x1c94a <__vector_39+0xea>
   1c948:	86 c0       	rjmp	.+268    	; 0x1ca56 <__vector_39+0x1f6>
   1c94a:	a5 c0       	rjmp	.+330    	; 0x1ca96 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1c94c:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_slarw>
   1c950:	10 c0       	rjmp	.+32     	; 0x1c972 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1c952:	90 91 85 18 	lds	r25, 0x1885	; 0x801885 <twi_masterBufferIndex>
   1c956:	80 91 84 18 	lds	r24, 0x1884	; 0x801884 <twi_masterBufferLength>
   1c95a:	98 17       	cp	r25, r24
   1c95c:	70 f5       	brcc	.+92     	; 0x1c9ba <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1c95e:	e0 91 85 18 	lds	r30, 0x1885	; 0x801885 <twi_masterBufferIndex>
   1c962:	81 e0       	ldi	r24, 0x01	; 1
   1c964:	8e 0f       	add	r24, r30
   1c966:	80 93 85 18 	sts	0x1885, r24	; 0x801885 <twi_masterBufferIndex>
   1c96a:	f0 e0       	ldi	r31, 0x00	; 0
   1c96c:	ea 57       	subi	r30, 0x7A	; 122
   1c96e:	f7 4e       	sbci	r31, 0xE7	; 231
   1c970:	80 81       	ld	r24, Z
   1c972:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1c976:	85 ec       	ldi	r24, 0xC5	; 197
   1c978:	82 c0       	rjmp	.+260    	; 0x1ca7e <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1c97a:	80 93 40 18 	sts	0x1840, r24	; 0x801840 <twi_error>
   1c97e:	8a c0       	rjmp	.+276    	; 0x1ca94 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1c980:	e0 91 85 18 	lds	r30, 0x1885	; 0x801885 <twi_masterBufferIndex>
   1c984:	81 e0       	ldi	r24, 0x01	; 1
   1c986:	8e 0f       	add	r24, r30
   1c988:	80 93 85 18 	sts	0x1885, r24	; 0x801885 <twi_masterBufferIndex>
   1c98c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c990:	f0 e0       	ldi	r31, 0x00	; 0
   1c992:	ea 57       	subi	r30, 0x7A	; 122
   1c994:	f7 4e       	sbci	r31, 0xE7	; 231
   1c996:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1c998:	90 91 85 18 	lds	r25, 0x1885	; 0x801885 <twi_masterBufferIndex>
   1c99c:	80 91 84 18 	lds	r24, 0x1884	; 0x801884 <twi_masterBufferLength>
   1c9a0:	6a c0       	rjmp	.+212    	; 0x1ca76 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1c9a2:	e0 91 85 18 	lds	r30, 0x1885	; 0x801885 <twi_masterBufferIndex>
   1c9a6:	81 e0       	ldi	r24, 0x01	; 1
   1c9a8:	8e 0f       	add	r24, r30
   1c9aa:	80 93 85 18 	sts	0x1885, r24	; 0x801885 <twi_masterBufferIndex>
   1c9ae:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c9b2:	f0 e0       	ldi	r31, 0x00	; 0
   1c9b4:	ea 57       	subi	r30, 0x7A	; 122
   1c9b6:	f7 4e       	sbci	r31, 0xE7	; 231
   1c9b8:	80 83       	st	Z, r24
      if (twi_sendStop){
   1c9ba:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_sendStop>
   1c9be:	81 11       	cpse	r24, r1
   1c9c0:	69 c0       	rjmp	.+210    	; 0x1ca94 <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1c9c2:	81 e0       	ldi	r24, 0x01	; 1
   1c9c4:	80 93 b0 18 	sts	0x18B0, r24	; 0x8018b0 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1c9c8:	84 ea       	ldi	r24, 0xA4	; 164
   1c9ca:	5d c0       	rjmp	.+186    	; 0x1ca86 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1c9cc:	83 e0       	ldi	r24, 0x03	; 3
   1c9ce:	80 93 b3 18 	sts	0x18B3, r24	; 0x8018b3 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1c9d2:	10 92 41 18 	sts	0x1841, r1	; 0x801841 <twi_rxBufferIndex>
   1c9d6:	cf cf       	rjmp	.-98     	; 0x1c976 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1c9d8:	80 91 41 18 	lds	r24, 0x1841	; 0x801841 <twi_rxBufferIndex>
   1c9dc:	80 32       	cpi	r24, 0x20	; 32
   1c9de:	08 f0       	brcs	.+2      	; 0x1c9e2 <__vector_39+0x182>
   1c9e0:	4d c0       	rjmp	.+154    	; 0x1ca7c <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1c9e2:	e0 91 41 18 	lds	r30, 0x1841	; 0x801841 <twi_rxBufferIndex>
   1c9e6:	81 e0       	ldi	r24, 0x01	; 1
   1c9e8:	8e 0f       	add	r24, r30
   1c9ea:	80 93 41 18 	sts	0x1841, r24	; 0x801841 <twi_rxBufferIndex>
   1c9ee:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c9f2:	f0 e0       	ldi	r31, 0x00	; 0
   1c9f4:	ee 5b       	subi	r30, 0xBE	; 190
   1c9f6:	f7 4e       	sbci	r31, 0xE7	; 231
   1c9f8:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1c9fa:	bd cf       	rjmp	.-134    	; 0x1c976 <__vector_39+0x116>
   1c9fc:	f1 dd       	rcall	.-1054   	; 0x1c5e0 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1c9fe:	80 91 41 18 	lds	r24, 0x1841	; 0x801841 <twi_rxBufferIndex>
   1ca02:	80 32       	cpi	r24, 0x20	; 32
   1ca04:	30 f4       	brcc	.+12     	; 0x1ca12 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1ca06:	e0 91 41 18 	lds	r30, 0x1841	; 0x801841 <twi_rxBufferIndex>
   1ca0a:	f0 e0       	ldi	r31, 0x00	; 0
   1ca0c:	ee 5b       	subi	r30, 0xBE	; 190
   1ca0e:	f7 4e       	sbci	r31, 0xE7	; 231
   1ca10:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1ca12:	60 91 41 18 	lds	r22, 0x1841	; 0x801841 <twi_rxBufferIndex>
   1ca16:	70 e0       	ldi	r23, 0x00	; 0
   1ca18:	e0 91 a6 18 	lds	r30, 0x18A6	; 0x8018a6 <twi_onSlaveReceive>
   1ca1c:	f0 91 a7 18 	lds	r31, 0x18A7	; 0x8018a7 <twi_onSlaveReceive+0x1>
   1ca20:	82 e4       	ldi	r24, 0x42	; 66
   1ca22:	98 e1       	ldi	r25, 0x18	; 24
   1ca24:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1ca26:	10 92 41 18 	sts	0x1841, r1	; 0x801841 <twi_rxBufferIndex>
      break;
   1ca2a:	35 c0       	rjmp	.+106    	; 0x1ca96 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1ca2c:	84 e0       	ldi	r24, 0x04	; 4
   1ca2e:	80 93 b3 18 	sts	0x18B3, r24	; 0x8018b3 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1ca32:	10 92 63 18 	sts	0x1863, r1	; 0x801863 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1ca36:	10 92 62 18 	sts	0x1862, r1	; 0x801862 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1ca3a:	e0 91 a8 18 	lds	r30, 0x18A8	; 0x8018a8 <twi_onSlaveTransmit>
   1ca3e:	f0 91 a9 18 	lds	r31, 0x18A9	; 0x8018a9 <twi_onSlaveTransmit+0x1>
   1ca42:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1ca44:	80 91 62 18 	lds	r24, 0x1862	; 0x801862 <twi_txBufferLength>
   1ca48:	81 11       	cpse	r24, r1
   1ca4a:	05 c0       	rjmp	.+10     	; 0x1ca56 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1ca4c:	81 e0       	ldi	r24, 0x01	; 1
   1ca4e:	80 93 62 18 	sts	0x1862, r24	; 0x801862 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1ca52:	10 92 64 18 	sts	0x1864, r1	; 0x801864 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1ca56:	e0 91 63 18 	lds	r30, 0x1863	; 0x801863 <twi_txBufferIndex>
   1ca5a:	81 e0       	ldi	r24, 0x01	; 1
   1ca5c:	8e 0f       	add	r24, r30
   1ca5e:	80 93 63 18 	sts	0x1863, r24	; 0x801863 <twi_txBufferIndex>
   1ca62:	f0 e0       	ldi	r31, 0x00	; 0
   1ca64:	ec 59       	subi	r30, 0x9C	; 156
   1ca66:	f7 4e       	sbci	r31, 0xE7	; 231
   1ca68:	80 81       	ld	r24, Z
   1ca6a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1ca6e:	90 91 63 18 	lds	r25, 0x1863	; 0x801863 <twi_txBufferIndex>
   1ca72:	80 91 62 18 	lds	r24, 0x1862	; 0x801862 <twi_txBufferLength>
   1ca76:	98 17       	cp	r25, r24
   1ca78:	08 f4       	brcc	.+2      	; 0x1ca7c <__vector_39+0x21c>
   1ca7a:	7d cf       	rjmp	.-262    	; 0x1c976 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1ca7c:	85 e8       	ldi	r24, 0x85	; 133
   1ca7e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ca82:	09 c0       	rjmp	.+18     	; 0x1ca96 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1ca84:	85 ec       	ldi	r24, 0xC5	; 197
   1ca86:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1ca8a:	10 92 b3 18 	sts	0x18B3, r1	; 0x8018b3 <twi_state>
      break;
   1ca8e:	03 c0       	rjmp	.+6      	; 0x1ca96 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1ca90:	10 92 40 18 	sts	0x1840, r1	; 0x801840 <twi_error>
      twi_stop();
   1ca94:	ae de       	rcall	.-676    	; 0x1c7f2 <twi_stop>
      break;
  }
}
   1ca96:	ff 91       	pop	r31
   1ca98:	ef 91       	pop	r30
   1ca9a:	bf 91       	pop	r27
   1ca9c:	af 91       	pop	r26
   1ca9e:	9f 91       	pop	r25
   1caa0:	8f 91       	pop	r24
   1caa2:	7f 91       	pop	r23
   1caa4:	6f 91       	pop	r22
   1caa6:	5f 91       	pop	r21
   1caa8:	4f 91       	pop	r20
   1caaa:	3f 91       	pop	r19
   1caac:	2f 91       	pop	r18
   1caae:	0f 90       	pop	r0
   1cab0:	0b be       	out	0x3b, r0	; 59
   1cab2:	0f 90       	pop	r0
   1cab4:	0f be       	out	0x3f, r0	; 63
   1cab6:	0f 90       	pop	r0
   1cab8:	1f 90       	pop	r1
   1caba:	18 95       	reti

0001cabc <pow>:
   1cabc:	fa 01       	movw	r30, r20
   1cabe:	ee 0f       	add	r30, r30
   1cac0:	ff 1f       	adc	r31, r31
   1cac2:	30 96       	adiw	r30, 0x00	; 0
   1cac4:	21 05       	cpc	r18, r1
   1cac6:	31 05       	cpc	r19, r1
   1cac8:	a1 f1       	breq	.+104    	; 0x1cb32 <pow+0x76>
   1caca:	61 15       	cp	r22, r1
   1cacc:	71 05       	cpc	r23, r1
   1cace:	61 f4       	brne	.+24     	; 0x1cae8 <pow+0x2c>
   1cad0:	80 38       	cpi	r24, 0x80	; 128
   1cad2:	bf e3       	ldi	r27, 0x3F	; 63
   1cad4:	9b 07       	cpc	r25, r27
   1cad6:	49 f1       	breq	.+82     	; 0x1cb2a <pow+0x6e>
   1cad8:	68 94       	set
   1cada:	90 38       	cpi	r25, 0x80	; 128
   1cadc:	81 05       	cpc	r24, r1
   1cade:	61 f0       	breq	.+24     	; 0x1caf8 <pow+0x3c>
   1cae0:	80 38       	cpi	r24, 0x80	; 128
   1cae2:	bf ef       	ldi	r27, 0xFF	; 255
   1cae4:	9b 07       	cpc	r25, r27
   1cae6:	41 f0       	breq	.+16     	; 0x1caf8 <pow+0x3c>
   1cae8:	99 23       	and	r25, r25
   1caea:	4a f5       	brpl	.+82     	; 0x1cb3e <pow+0x82>
   1caec:	ff 3f       	cpi	r31, 0xFF	; 255
   1caee:	e1 05       	cpc	r30, r1
   1caf0:	31 05       	cpc	r19, r1
   1caf2:	21 05       	cpc	r18, r1
   1caf4:	19 f1       	breq	.+70     	; 0x1cb3c <pow+0x80>
   1caf6:	e8 94       	clt
   1caf8:	08 94       	sec
   1cafa:	e7 95       	ror	r30
   1cafc:	d9 01       	movw	r26, r18
   1cafe:	aa 23       	and	r26, r26
   1cb00:	29 f4       	brne	.+10     	; 0x1cb0c <pow+0x50>
   1cb02:	ab 2f       	mov	r26, r27
   1cb04:	be 2f       	mov	r27, r30
   1cb06:	f8 5f       	subi	r31, 0xF8	; 248
   1cb08:	d0 f3       	brcs	.-12     	; 0x1cafe <pow+0x42>
   1cb0a:	10 c0       	rjmp	.+32     	; 0x1cb2c <pow+0x70>
   1cb0c:	ff 5f       	subi	r31, 0xFF	; 255
   1cb0e:	70 f4       	brcc	.+28     	; 0x1cb2c <pow+0x70>
   1cb10:	a6 95       	lsr	r26
   1cb12:	e0 f7       	brcc	.-8      	; 0x1cb0c <pow+0x50>
   1cb14:	f7 39       	cpi	r31, 0x97	; 151
   1cb16:	50 f0       	brcs	.+20     	; 0x1cb2c <pow+0x70>
   1cb18:	19 f0       	breq	.+6      	; 0x1cb20 <pow+0x64>
   1cb1a:	ff 3a       	cpi	r31, 0xAF	; 175
   1cb1c:	38 f4       	brcc	.+14     	; 0x1cb2c <pow+0x70>
   1cb1e:	9f 77       	andi	r25, 0x7F	; 127
   1cb20:	9f 93       	push	r25
   1cb22:	0d d0       	rcall	.+26     	; 0x1cb3e <pow+0x82>
   1cb24:	0f 90       	pop	r0
   1cb26:	07 fc       	sbrc	r0, 7
   1cb28:	90 58       	subi	r25, 0x80	; 128
   1cb2a:	08 95       	ret
   1cb2c:	46 f0       	brts	.+16     	; 0x1cb3e <pow+0x82>
   1cb2e:	0c 94 30 ce 	jmp	0x19c60	; 0x19c60 <__fp_nan>
   1cb32:	60 e0       	ldi	r22, 0x00	; 0
   1cb34:	70 e0       	ldi	r23, 0x00	; 0
   1cb36:	80 e8       	ldi	r24, 0x80	; 128
   1cb38:	9f e3       	ldi	r25, 0x3F	; 63
   1cb3a:	08 95       	ret
   1cb3c:	4f e7       	ldi	r20, 0x7F	; 127
   1cb3e:	9f 77       	andi	r25, 0x7F	; 127
   1cb40:	5f 93       	push	r21
   1cb42:	4f 93       	push	r20
   1cb44:	3f 93       	push	r19
   1cb46:	2f 93       	push	r18
   1cb48:	0a d1       	rcall	.+532    	; 0x1cd5e <log>
   1cb4a:	2f 91       	pop	r18
   1cb4c:	3f 91       	pop	r19
   1cb4e:	4f 91       	pop	r20
   1cb50:	5f 91       	pop	r21
   1cb52:	0e 94 7f ce 	call	0x19cfe	; 0x19cfe <__mulsf3>
   1cb56:	51 c0       	rjmp	.+162    	; 0x1cbfa <exp>
   1cb58:	19 f4       	brne	.+6      	; 0x1cb60 <pow+0xa4>
   1cb5a:	16 f4       	brtc	.+4      	; 0x1cb60 <pow+0xa4>
   1cb5c:	0c 94 30 ce 	jmp	0x19c60	; 0x19c60 <__fp_nan>
   1cb60:	7a c0       	rjmp	.+244    	; 0x1cc56 <__fp_mpack>

0001cb62 <sqrt>:
   1cb62:	0e 94 5a ce 	call	0x19cb4	; 0x19cb4 <__fp_splitA>
   1cb66:	c0 f3       	brcs	.-16     	; 0x1cb58 <pow+0x9c>
   1cb68:	99 23       	and	r25, r25
   1cb6a:	d1 f3       	breq	.-12     	; 0x1cb60 <pow+0xa4>
   1cb6c:	be f3       	brts	.-18     	; 0x1cb5c <pow+0xa0>
   1cb6e:	9f 57       	subi	r25, 0x7F	; 127
   1cb70:	55 0b       	sbc	r21, r21
   1cb72:	87 ff       	sbrs	r24, 7
   1cb74:	7e d0       	rcall	.+252    	; 0x1cc72 <__fp_norm2>
   1cb76:	00 24       	eor	r0, r0
   1cb78:	a0 e6       	ldi	r26, 0x60	; 96
   1cb7a:	40 ea       	ldi	r20, 0xA0	; 160
   1cb7c:	90 01       	movw	r18, r0
   1cb7e:	80 58       	subi	r24, 0x80	; 128
   1cb80:	56 95       	lsr	r21
   1cb82:	97 95       	ror	r25
   1cb84:	28 f4       	brcc	.+10     	; 0x1cb90 <sqrt+0x2e>
   1cb86:	80 5c       	subi	r24, 0xC0	; 192
   1cb88:	66 0f       	add	r22, r22
   1cb8a:	77 1f       	adc	r23, r23
   1cb8c:	88 1f       	adc	r24, r24
   1cb8e:	20 f0       	brcs	.+8      	; 0x1cb98 <sqrt+0x36>
   1cb90:	26 17       	cp	r18, r22
   1cb92:	37 07       	cpc	r19, r23
   1cb94:	48 07       	cpc	r20, r24
   1cb96:	30 f4       	brcc	.+12     	; 0x1cba4 <sqrt+0x42>
   1cb98:	62 1b       	sub	r22, r18
   1cb9a:	73 0b       	sbc	r23, r19
   1cb9c:	84 0b       	sbc	r24, r20
   1cb9e:	20 29       	or	r18, r0
   1cba0:	31 29       	or	r19, r1
   1cba2:	4a 2b       	or	r20, r26
   1cba4:	a6 95       	lsr	r26
   1cba6:	17 94       	ror	r1
   1cba8:	07 94       	ror	r0
   1cbaa:	20 25       	eor	r18, r0
   1cbac:	31 25       	eor	r19, r1
   1cbae:	4a 27       	eor	r20, r26
   1cbb0:	58 f7       	brcc	.-42     	; 0x1cb88 <sqrt+0x26>
   1cbb2:	66 0f       	add	r22, r22
   1cbb4:	77 1f       	adc	r23, r23
   1cbb6:	88 1f       	adc	r24, r24
   1cbb8:	20 f0       	brcs	.+8      	; 0x1cbc2 <sqrt+0x60>
   1cbba:	26 17       	cp	r18, r22
   1cbbc:	37 07       	cpc	r19, r23
   1cbbe:	48 07       	cpc	r20, r24
   1cbc0:	30 f4       	brcc	.+12     	; 0x1cbce <sqrt+0x6c>
   1cbc2:	62 0b       	sbc	r22, r18
   1cbc4:	73 0b       	sbc	r23, r19
   1cbc6:	84 0b       	sbc	r24, r20
   1cbc8:	20 0d       	add	r18, r0
   1cbca:	31 1d       	adc	r19, r1
   1cbcc:	41 1d       	adc	r20, r1
   1cbce:	a0 95       	com	r26
   1cbd0:	81 f7       	brne	.-32     	; 0x1cbb2 <sqrt+0x50>
   1cbd2:	b9 01       	movw	r22, r18
   1cbd4:	84 2f       	mov	r24, r20
   1cbd6:	91 58       	subi	r25, 0x81	; 129
   1cbd8:	88 0f       	add	r24, r24
   1cbda:	96 95       	lsr	r25
   1cbdc:	87 95       	ror	r24
   1cbde:	08 95       	ret

0001cbe0 <__unordsf2>:
   1cbe0:	0e 94 06 ce 	call	0x19c0c	; 0x19c0c <__fp_cmp>
   1cbe4:	88 0b       	sbc	r24, r24
   1cbe6:	99 0b       	sbc	r25, r25
   1cbe8:	08 95       	ret
   1cbea:	29 f4       	brne	.+10     	; 0x1cbf6 <__unordsf2+0x16>
   1cbec:	16 f0       	brts	.+4      	; 0x1cbf2 <__unordsf2+0x12>
   1cbee:	0c 94 2a ce 	jmp	0x19c54	; 0x19c54 <__fp_inf>
   1cbf2:	0c 94 74 ce 	jmp	0x19ce8	; 0x19ce8 <__fp_zero>
   1cbf6:	0c 94 30 ce 	jmp	0x19c60	; 0x19c60 <__fp_nan>

0001cbfa <exp>:
   1cbfa:	0e 94 5a ce 	call	0x19cb4	; 0x19cb4 <__fp_splitA>
   1cbfe:	a8 f3       	brcs	.-22     	; 0x1cbea <__unordsf2+0xa>
   1cc00:	96 38       	cpi	r25, 0x86	; 134
   1cc02:	a0 f7       	brcc	.-24     	; 0x1cbec <__unordsf2+0xc>
   1cc04:	07 f8       	bld	r0, 7
   1cc06:	0f 92       	push	r0
   1cc08:	e8 94       	clt
   1cc0a:	2b e3       	ldi	r18, 0x3B	; 59
   1cc0c:	3a ea       	ldi	r19, 0xAA	; 170
   1cc0e:	48 eb       	ldi	r20, 0xB8	; 184
   1cc10:	5f e7       	ldi	r21, 0x7F	; 127
   1cc12:	0e 94 8d ce 	call	0x19d1a	; 0x19d1a <__mulsf3_pse>
   1cc16:	0f 92       	push	r0
   1cc18:	0f 92       	push	r0
   1cc1a:	0f 92       	push	r0
   1cc1c:	4d b7       	in	r20, 0x3d	; 61
   1cc1e:	5e b7       	in	r21, 0x3e	; 62
   1cc20:	0f 92       	push	r0
   1cc22:	e4 d0       	rcall	.+456    	; 0x1cdec <modf>
   1cc24:	e0 e3       	ldi	r30, 0x30	; 48
   1cc26:	f2 e0       	ldi	r31, 0x02	; 2
   1cc28:	2b d0       	rcall	.+86     	; 0x1cc80 <__fp_powser>
   1cc2a:	4f 91       	pop	r20
   1cc2c:	5f 91       	pop	r21
   1cc2e:	ef 91       	pop	r30
   1cc30:	ff 91       	pop	r31
   1cc32:	e5 95       	asr	r30
   1cc34:	ee 1f       	adc	r30, r30
   1cc36:	ff 1f       	adc	r31, r31
   1cc38:	49 f0       	breq	.+18     	; 0x1cc4c <exp+0x52>
   1cc3a:	fe 57       	subi	r31, 0x7E	; 126
   1cc3c:	e0 68       	ori	r30, 0x80	; 128
   1cc3e:	44 27       	eor	r20, r20
   1cc40:	ee 0f       	add	r30, r30
   1cc42:	44 1f       	adc	r20, r20
   1cc44:	fa 95       	dec	r31
   1cc46:	e1 f7       	brne	.-8      	; 0x1cc40 <exp+0x46>
   1cc48:	41 95       	neg	r20
   1cc4a:	55 0b       	sbc	r21, r21
   1cc4c:	4b d0       	rcall	.+150    	; 0x1cce4 <ldexp>
   1cc4e:	0f 90       	pop	r0
   1cc50:	07 fe       	sbrs	r0, 7
   1cc52:	3d c0       	rjmp	.+122    	; 0x1ccce <inverse>
   1cc54:	08 95       	ret

0001cc56 <__fp_mpack>:
   1cc56:	9f 3f       	cpi	r25, 0xFF	; 255
   1cc58:	31 f0       	breq	.+12     	; 0x1cc66 <__fp_mpack_finite+0xc>

0001cc5a <__fp_mpack_finite>:
   1cc5a:	91 50       	subi	r25, 0x01	; 1
   1cc5c:	20 f4       	brcc	.+8      	; 0x1cc66 <__fp_mpack_finite+0xc>
   1cc5e:	87 95       	ror	r24
   1cc60:	77 95       	ror	r23
   1cc62:	67 95       	ror	r22
   1cc64:	b7 95       	ror	r27
   1cc66:	88 0f       	add	r24, r24
   1cc68:	91 1d       	adc	r25, r1
   1cc6a:	96 95       	lsr	r25
   1cc6c:	87 95       	ror	r24
   1cc6e:	97 f9       	bld	r25, 7
   1cc70:	08 95       	ret

0001cc72 <__fp_norm2>:
   1cc72:	91 50       	subi	r25, 0x01	; 1
   1cc74:	50 40       	sbci	r21, 0x00	; 0
   1cc76:	66 0f       	add	r22, r22
   1cc78:	77 1f       	adc	r23, r23
   1cc7a:	88 1f       	adc	r24, r24
   1cc7c:	d2 f7       	brpl	.-12     	; 0x1cc72 <__fp_norm2>
   1cc7e:	08 95       	ret

0001cc80 <__fp_powser>:
   1cc80:	df 93       	push	r29
   1cc82:	cf 93       	push	r28
   1cc84:	1f 93       	push	r17
   1cc86:	0f 93       	push	r16
   1cc88:	ff 92       	push	r15
   1cc8a:	ef 92       	push	r14
   1cc8c:	df 92       	push	r13
   1cc8e:	7b 01       	movw	r14, r22
   1cc90:	8c 01       	movw	r16, r24
   1cc92:	68 94       	set
   1cc94:	06 c0       	rjmp	.+12     	; 0x1cca2 <__fp_powser+0x22>
   1cc96:	da 2e       	mov	r13, r26
   1cc98:	ef 01       	movw	r28, r30
   1cc9a:	0e 94 8b ce 	call	0x19d16	; 0x19d16 <__mulsf3x>
   1cc9e:	fe 01       	movw	r30, r28
   1cca0:	e8 94       	clt
   1cca2:	a5 91       	lpm	r26, Z+
   1cca4:	25 91       	lpm	r18, Z+
   1cca6:	35 91       	lpm	r19, Z+
   1cca8:	45 91       	lpm	r20, Z+
   1ccaa:	55 91       	lpm	r21, Z+
   1ccac:	a6 f3       	brts	.-24     	; 0x1cc96 <__fp_powser+0x16>
   1ccae:	ef 01       	movw	r28, r30
   1ccb0:	0e 94 de cc 	call	0x199bc	; 0x199bc <__addsf3x>
   1ccb4:	fe 01       	movw	r30, r28
   1ccb6:	97 01       	movw	r18, r14
   1ccb8:	a8 01       	movw	r20, r16
   1ccba:	da 94       	dec	r13
   1ccbc:	69 f7       	brne	.-38     	; 0x1cc98 <__fp_powser+0x18>
   1ccbe:	df 90       	pop	r13
   1ccc0:	ef 90       	pop	r14
   1ccc2:	ff 90       	pop	r15
   1ccc4:	0f 91       	pop	r16
   1ccc6:	1f 91       	pop	r17
   1ccc8:	cf 91       	pop	r28
   1ccca:	df 91       	pop	r29
   1cccc:	08 95       	ret

0001ccce <inverse>:
   1ccce:	9b 01       	movw	r18, r22
   1ccd0:	ac 01       	movw	r20, r24
   1ccd2:	60 e0       	ldi	r22, 0x00	; 0
   1ccd4:	70 e0       	ldi	r23, 0x00	; 0
   1ccd6:	80 e8       	ldi	r24, 0x80	; 128
   1ccd8:	9f e3       	ldi	r25, 0x3F	; 63
   1ccda:	0c 94 35 cd 	jmp	0x19a6a	; 0x19a6a <__divsf3>
   1ccde:	0c 94 2a ce 	jmp	0x19c54	; 0x19c54 <__fp_inf>
   1cce2:	b9 cf       	rjmp	.-142    	; 0x1cc56 <__fp_mpack>

0001cce4 <ldexp>:
   1cce4:	0e 94 5a ce 	call	0x19cb4	; 0x19cb4 <__fp_splitA>
   1cce8:	e0 f3       	brcs	.-8      	; 0x1cce2 <inverse+0x14>
   1ccea:	99 23       	and	r25, r25
   1ccec:	d1 f3       	breq	.-12     	; 0x1cce2 <inverse+0x14>
   1ccee:	94 0f       	add	r25, r20
   1ccf0:	51 1d       	adc	r21, r1
   1ccf2:	ab f3       	brvs	.-22     	; 0x1ccde <inverse+0x10>
   1ccf4:	91 50       	subi	r25, 0x01	; 1
   1ccf6:	50 40       	sbci	r21, 0x00	; 0
   1ccf8:	94 f0       	brlt	.+36     	; 0x1cd1e <ldexp+0x3a>
   1ccfa:	59 f0       	breq	.+22     	; 0x1cd12 <ldexp+0x2e>
   1ccfc:	88 23       	and	r24, r24
   1ccfe:	32 f0       	brmi	.+12     	; 0x1cd0c <ldexp+0x28>
   1cd00:	66 0f       	add	r22, r22
   1cd02:	77 1f       	adc	r23, r23
   1cd04:	88 1f       	adc	r24, r24
   1cd06:	91 50       	subi	r25, 0x01	; 1
   1cd08:	50 40       	sbci	r21, 0x00	; 0
   1cd0a:	c1 f7       	brne	.-16     	; 0x1ccfc <ldexp+0x18>
   1cd0c:	9e 3f       	cpi	r25, 0xFE	; 254
   1cd0e:	51 05       	cpc	r21, r1
   1cd10:	34 f7       	brge	.-52     	; 0x1ccde <inverse+0x10>
   1cd12:	88 0f       	add	r24, r24
   1cd14:	91 1d       	adc	r25, r1
   1cd16:	96 95       	lsr	r25
   1cd18:	87 95       	ror	r24
   1cd1a:	97 f9       	bld	r25, 7
   1cd1c:	08 95       	ret
   1cd1e:	5f 3f       	cpi	r21, 0xFF	; 255
   1cd20:	ac f0       	brlt	.+42     	; 0x1cd4c <ldexp+0x68>
   1cd22:	98 3e       	cpi	r25, 0xE8	; 232
   1cd24:	9c f0       	brlt	.+38     	; 0x1cd4c <ldexp+0x68>
   1cd26:	bb 27       	eor	r27, r27
   1cd28:	86 95       	lsr	r24
   1cd2a:	77 95       	ror	r23
   1cd2c:	67 95       	ror	r22
   1cd2e:	b7 95       	ror	r27
   1cd30:	08 f4       	brcc	.+2      	; 0x1cd34 <ldexp+0x50>
   1cd32:	b1 60       	ori	r27, 0x01	; 1
   1cd34:	93 95       	inc	r25
   1cd36:	c1 f7       	brne	.-16     	; 0x1cd28 <ldexp+0x44>
   1cd38:	bb 0f       	add	r27, r27
   1cd3a:	58 f7       	brcc	.-42     	; 0x1cd12 <ldexp+0x2e>
   1cd3c:	11 f4       	brne	.+4      	; 0x1cd42 <ldexp+0x5e>
   1cd3e:	60 ff       	sbrs	r22, 0
   1cd40:	e8 cf       	rjmp	.-48     	; 0x1cd12 <ldexp+0x2e>
   1cd42:	6f 5f       	subi	r22, 0xFF	; 255
   1cd44:	7f 4f       	sbci	r23, 0xFF	; 255
   1cd46:	8f 4f       	sbci	r24, 0xFF	; 255
   1cd48:	9f 4f       	sbci	r25, 0xFF	; 255
   1cd4a:	e3 cf       	rjmp	.-58     	; 0x1cd12 <ldexp+0x2e>
   1cd4c:	0c 94 75 ce 	jmp	0x19cea	; 0x19cea <__fp_szero>
   1cd50:	0e f0       	brts	.+2      	; 0x1cd54 <ldexp+0x70>
   1cd52:	81 cf       	rjmp	.-254    	; 0x1cc56 <__fp_mpack>
   1cd54:	0c 94 30 ce 	jmp	0x19c60	; 0x19c60 <__fp_nan>
   1cd58:	68 94       	set
   1cd5a:	0c 94 2a ce 	jmp	0x19c54	; 0x19c54 <__fp_inf>

0001cd5e <log>:
   1cd5e:	0e 94 5a ce 	call	0x19cb4	; 0x19cb4 <__fp_splitA>
   1cd62:	b0 f3       	brcs	.-20     	; 0x1cd50 <ldexp+0x6c>
   1cd64:	99 23       	and	r25, r25
   1cd66:	c1 f3       	breq	.-16     	; 0x1cd58 <ldexp+0x74>
   1cd68:	ae f3       	brts	.-22     	; 0x1cd54 <ldexp+0x70>
   1cd6a:	df 93       	push	r29
   1cd6c:	cf 93       	push	r28
   1cd6e:	1f 93       	push	r17
   1cd70:	0f 93       	push	r16
   1cd72:	ff 92       	push	r15
   1cd74:	c9 2f       	mov	r28, r25
   1cd76:	dd 27       	eor	r29, r29
   1cd78:	88 23       	and	r24, r24
   1cd7a:	2a f0       	brmi	.+10     	; 0x1cd86 <log+0x28>
   1cd7c:	21 97       	sbiw	r28, 0x01	; 1
   1cd7e:	66 0f       	add	r22, r22
   1cd80:	77 1f       	adc	r23, r23
   1cd82:	88 1f       	adc	r24, r24
   1cd84:	da f7       	brpl	.-10     	; 0x1cd7c <log+0x1e>
   1cd86:	20 e0       	ldi	r18, 0x00	; 0
   1cd88:	30 e0       	ldi	r19, 0x00	; 0
   1cd8a:	40 e8       	ldi	r20, 0x80	; 128
   1cd8c:	5f eb       	ldi	r21, 0xBF	; 191
   1cd8e:	9f e3       	ldi	r25, 0x3F	; 63
   1cd90:	88 39       	cpi	r24, 0x98	; 152
   1cd92:	20 f0       	brcs	.+8      	; 0x1cd9c <log+0x3e>
   1cd94:	80 3e       	cpi	r24, 0xE0	; 224
   1cd96:	38 f0       	brcs	.+14     	; 0x1cda6 <log+0x48>
   1cd98:	21 96       	adiw	r28, 0x01	; 1
   1cd9a:	8f 77       	andi	r24, 0x7F	; 127
   1cd9c:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   1cda0:	e8 e5       	ldi	r30, 0x58	; 88
   1cda2:	f2 e0       	ldi	r31, 0x02	; 2
   1cda4:	04 c0       	rjmp	.+8      	; 0x1cdae <log+0x50>
   1cda6:	0e 94 cd cc 	call	0x1999a	; 0x1999a <__addsf3>
   1cdaa:	e5 e8       	ldi	r30, 0x85	; 133
   1cdac:	f2 e0       	ldi	r31, 0x02	; 2
   1cdae:	68 df       	rcall	.-304    	; 0x1cc80 <__fp_powser>
   1cdb0:	8b 01       	movw	r16, r22
   1cdb2:	be 01       	movw	r22, r28
   1cdb4:	ec 01       	movw	r28, r24
   1cdb6:	fb 2e       	mov	r15, r27
   1cdb8:	6f 57       	subi	r22, 0x7F	; 127
   1cdba:	71 09       	sbc	r23, r1
   1cdbc:	75 95       	asr	r23
   1cdbe:	77 1f       	adc	r23, r23
   1cdc0:	88 0b       	sbc	r24, r24
   1cdc2:	99 0b       	sbc	r25, r25
   1cdc4:	0e 94 cb cd 	call	0x19b96	; 0x19b96 <__floatsisf>
   1cdc8:	28 e1       	ldi	r18, 0x18	; 24
   1cdca:	32 e7       	ldi	r19, 0x72	; 114
   1cdcc:	41 e3       	ldi	r20, 0x31	; 49
   1cdce:	5f e3       	ldi	r21, 0x3F	; 63
   1cdd0:	0e 94 8b ce 	call	0x19d16	; 0x19d16 <__mulsf3x>
   1cdd4:	af 2d       	mov	r26, r15
   1cdd6:	98 01       	movw	r18, r16
   1cdd8:	ae 01       	movw	r20, r28
   1cdda:	ff 90       	pop	r15
   1cddc:	0f 91       	pop	r16
   1cdde:	1f 91       	pop	r17
   1cde0:	cf 91       	pop	r28
   1cde2:	df 91       	pop	r29
   1cde4:	0e 94 de cc 	call	0x199bc	; 0x199bc <__addsf3x>
   1cde8:	0c 94 41 ce 	jmp	0x19c82	; 0x19c82 <__fp_round>

0001cdec <modf>:
   1cdec:	fa 01       	movw	r30, r20
   1cdee:	dc 01       	movw	r26, r24
   1cdf0:	aa 0f       	add	r26, r26
   1cdf2:	bb 1f       	adc	r27, r27
   1cdf4:	9b 01       	movw	r18, r22
   1cdf6:	ac 01       	movw	r20, r24
   1cdf8:	bf 57       	subi	r27, 0x7F	; 127
   1cdfa:	28 f4       	brcc	.+10     	; 0x1ce06 <modf+0x1a>
   1cdfc:	22 27       	eor	r18, r18
   1cdfe:	33 27       	eor	r19, r19
   1ce00:	44 27       	eor	r20, r20
   1ce02:	50 78       	andi	r21, 0x80	; 128
   1ce04:	20 c0       	rjmp	.+64     	; 0x1ce46 <modf+0x5a>
   1ce06:	b7 51       	subi	r27, 0x17	; 23
   1ce08:	90 f4       	brcc	.+36     	; 0x1ce2e <modf+0x42>
   1ce0a:	ab 2f       	mov	r26, r27
   1ce0c:	00 24       	eor	r0, r0
   1ce0e:	46 95       	lsr	r20
   1ce10:	37 95       	ror	r19
   1ce12:	27 95       	ror	r18
   1ce14:	01 1c       	adc	r0, r1
   1ce16:	a3 95       	inc	r26
   1ce18:	d2 f3       	brmi	.-12     	; 0x1ce0e <modf+0x22>
   1ce1a:	00 20       	and	r0, r0
   1ce1c:	71 f0       	breq	.+28     	; 0x1ce3a <modf+0x4e>
   1ce1e:	22 0f       	add	r18, r18
   1ce20:	33 1f       	adc	r19, r19
   1ce22:	44 1f       	adc	r20, r20
   1ce24:	b3 95       	inc	r27
   1ce26:	da f3       	brmi	.-10     	; 0x1ce1e <modf+0x32>
   1ce28:	0e d0       	rcall	.+28     	; 0x1ce46 <modf+0x5a>
   1ce2a:	0c 94 cc cc 	jmp	0x19998	; 0x19998 <__subsf3>
   1ce2e:	61 30       	cpi	r22, 0x01	; 1
   1ce30:	71 05       	cpc	r23, r1
   1ce32:	a0 e8       	ldi	r26, 0x80	; 128
   1ce34:	8a 07       	cpc	r24, r26
   1ce36:	b9 46       	sbci	r27, 0x69	; 105
   1ce38:	30 f4       	brcc	.+12     	; 0x1ce46 <modf+0x5a>
   1ce3a:	9b 01       	movw	r18, r22
   1ce3c:	ac 01       	movw	r20, r24
   1ce3e:	66 27       	eor	r22, r22
   1ce40:	77 27       	eor	r23, r23
   1ce42:	88 27       	eor	r24, r24
   1ce44:	90 78       	andi	r25, 0x80	; 128
   1ce46:	30 96       	adiw	r30, 0x00	; 0
   1ce48:	21 f0       	breq	.+8      	; 0x1ce52 <modf+0x66>
   1ce4a:	20 83       	st	Z, r18
   1ce4c:	31 83       	std	Z+1, r19	; 0x01
   1ce4e:	42 83       	std	Z+2, r20	; 0x02
   1ce50:	53 83       	std	Z+3, r21	; 0x03
   1ce52:	08 95       	ret

0001ce54 <__udivmodqi4>:
   1ce54:	99 1b       	sub	r25, r25
   1ce56:	79 e0       	ldi	r23, 0x09	; 9
   1ce58:	04 c0       	rjmp	.+8      	; 0x1ce62 <__udivmodqi4_ep>

0001ce5a <__udivmodqi4_loop>:
   1ce5a:	99 1f       	adc	r25, r25
   1ce5c:	96 17       	cp	r25, r22
   1ce5e:	08 f0       	brcs	.+2      	; 0x1ce62 <__udivmodqi4_ep>
   1ce60:	96 1b       	sub	r25, r22

0001ce62 <__udivmodqi4_ep>:
   1ce62:	88 1f       	adc	r24, r24
   1ce64:	7a 95       	dec	r23
   1ce66:	c9 f7       	brne	.-14     	; 0x1ce5a <__udivmodqi4_loop>
   1ce68:	80 95       	com	r24
   1ce6a:	08 95       	ret

0001ce6c <__udivmodhi4>:
   1ce6c:	aa 1b       	sub	r26, r26
   1ce6e:	bb 1b       	sub	r27, r27
   1ce70:	51 e1       	ldi	r21, 0x11	; 17
   1ce72:	07 c0       	rjmp	.+14     	; 0x1ce82 <__udivmodhi4_ep>

0001ce74 <__udivmodhi4_loop>:
   1ce74:	aa 1f       	adc	r26, r26
   1ce76:	bb 1f       	adc	r27, r27
   1ce78:	a6 17       	cp	r26, r22
   1ce7a:	b7 07       	cpc	r27, r23
   1ce7c:	10 f0       	brcs	.+4      	; 0x1ce82 <__udivmodhi4_ep>
   1ce7e:	a6 1b       	sub	r26, r22
   1ce80:	b7 0b       	sbc	r27, r23

0001ce82 <__udivmodhi4_ep>:
   1ce82:	88 1f       	adc	r24, r24
   1ce84:	99 1f       	adc	r25, r25
   1ce86:	5a 95       	dec	r21
   1ce88:	a9 f7       	brne	.-22     	; 0x1ce74 <__udivmodhi4_loop>
   1ce8a:	80 95       	com	r24
   1ce8c:	90 95       	com	r25
   1ce8e:	bc 01       	movw	r22, r24
   1ce90:	cd 01       	movw	r24, r26
   1ce92:	08 95       	ret

0001ce94 <__divmodhi4>:
   1ce94:	97 fb       	bst	r25, 7
   1ce96:	07 2e       	mov	r0, r23
   1ce98:	16 f4       	brtc	.+4      	; 0x1ce9e <__divmodhi4+0xa>
   1ce9a:	00 94       	com	r0
   1ce9c:	06 d0       	rcall	.+12     	; 0x1ceaa <__divmodhi4_neg1>
   1ce9e:	77 fd       	sbrc	r23, 7
   1cea0:	08 d0       	rcall	.+16     	; 0x1ceb2 <__divmodhi4_neg2>
   1cea2:	e4 df       	rcall	.-56     	; 0x1ce6c <__udivmodhi4>
   1cea4:	07 fc       	sbrc	r0, 7
   1cea6:	05 d0       	rcall	.+10     	; 0x1ceb2 <__divmodhi4_neg2>
   1cea8:	3e f4       	brtc	.+14     	; 0x1ceb8 <__divmodhi4_exit>

0001ceaa <__divmodhi4_neg1>:
   1ceaa:	90 95       	com	r25
   1ceac:	81 95       	neg	r24
   1ceae:	9f 4f       	sbci	r25, 0xFF	; 255
   1ceb0:	08 95       	ret

0001ceb2 <__divmodhi4_neg2>:
   1ceb2:	70 95       	com	r23
   1ceb4:	61 95       	neg	r22
   1ceb6:	7f 4f       	sbci	r23, 0xFF	; 255

0001ceb8 <__divmodhi4_exit>:
   1ceb8:	08 95       	ret

0001ceba <__udivmodsi4>:
   1ceba:	a1 e2       	ldi	r26, 0x21	; 33
   1cebc:	1a 2e       	mov	r1, r26
   1cebe:	aa 1b       	sub	r26, r26
   1cec0:	bb 1b       	sub	r27, r27
   1cec2:	fd 01       	movw	r30, r26
   1cec4:	0d c0       	rjmp	.+26     	; 0x1cee0 <__udivmodsi4_ep>

0001cec6 <__udivmodsi4_loop>:
   1cec6:	aa 1f       	adc	r26, r26
   1cec8:	bb 1f       	adc	r27, r27
   1ceca:	ee 1f       	adc	r30, r30
   1cecc:	ff 1f       	adc	r31, r31
   1cece:	a2 17       	cp	r26, r18
   1ced0:	b3 07       	cpc	r27, r19
   1ced2:	e4 07       	cpc	r30, r20
   1ced4:	f5 07       	cpc	r31, r21
   1ced6:	20 f0       	brcs	.+8      	; 0x1cee0 <__udivmodsi4_ep>
   1ced8:	a2 1b       	sub	r26, r18
   1ceda:	b3 0b       	sbc	r27, r19
   1cedc:	e4 0b       	sbc	r30, r20
   1cede:	f5 0b       	sbc	r31, r21

0001cee0 <__udivmodsi4_ep>:
   1cee0:	66 1f       	adc	r22, r22
   1cee2:	77 1f       	adc	r23, r23
   1cee4:	88 1f       	adc	r24, r24
   1cee6:	99 1f       	adc	r25, r25
   1cee8:	1a 94       	dec	r1
   1ceea:	69 f7       	brne	.-38     	; 0x1cec6 <__udivmodsi4_loop>
   1ceec:	60 95       	com	r22
   1ceee:	70 95       	com	r23
   1cef0:	80 95       	com	r24
   1cef2:	90 95       	com	r25
   1cef4:	9b 01       	movw	r18, r22
   1cef6:	ac 01       	movw	r20, r24
   1cef8:	bd 01       	movw	r22, r26
   1cefa:	cf 01       	movw	r24, r30
   1cefc:	08 95       	ret

0001cefe <__divmodsi4>:
   1cefe:	05 2e       	mov	r0, r21
   1cf00:	97 fb       	bst	r25, 7
   1cf02:	16 f4       	brtc	.+4      	; 0x1cf08 <__divmodsi4+0xa>
   1cf04:	00 94       	com	r0
   1cf06:	0f d0       	rcall	.+30     	; 0x1cf26 <__negsi2>
   1cf08:	57 fd       	sbrc	r21, 7
   1cf0a:	05 d0       	rcall	.+10     	; 0x1cf16 <__divmodsi4_neg2>
   1cf0c:	d6 df       	rcall	.-84     	; 0x1ceba <__udivmodsi4>
   1cf0e:	07 fc       	sbrc	r0, 7
   1cf10:	02 d0       	rcall	.+4      	; 0x1cf16 <__divmodsi4_neg2>
   1cf12:	46 f4       	brtc	.+16     	; 0x1cf24 <__divmodsi4_exit>
   1cf14:	08 c0       	rjmp	.+16     	; 0x1cf26 <__negsi2>

0001cf16 <__divmodsi4_neg2>:
   1cf16:	50 95       	com	r21
   1cf18:	40 95       	com	r20
   1cf1a:	30 95       	com	r19
   1cf1c:	21 95       	neg	r18
   1cf1e:	3f 4f       	sbci	r19, 0xFF	; 255
   1cf20:	4f 4f       	sbci	r20, 0xFF	; 255
   1cf22:	5f 4f       	sbci	r21, 0xFF	; 255

0001cf24 <__divmodsi4_exit>:
   1cf24:	08 95       	ret

0001cf26 <__negsi2>:
   1cf26:	90 95       	com	r25
   1cf28:	80 95       	com	r24
   1cf2a:	70 95       	com	r23
   1cf2c:	61 95       	neg	r22
   1cf2e:	7f 4f       	sbci	r23, 0xFF	; 255
   1cf30:	8f 4f       	sbci	r24, 0xFF	; 255
   1cf32:	9f 4f       	sbci	r25, 0xFF	; 255
   1cf34:	08 95       	ret

0001cf36 <__tablejump2__>:
   1cf36:	ee 0f       	add	r30, r30
   1cf38:	ff 1f       	adc	r31, r31
   1cf3a:	88 1f       	adc	r24, r24
   1cf3c:	8b bf       	out	0x3b, r24	; 59
   1cf3e:	07 90       	elpm	r0, Z+
   1cf40:	f6 91       	elpm	r31, Z
   1cf42:	e0 2d       	mov	r30, r0
   1cf44:	19 94       	eijmp

0001cf46 <__umulhisi3>:
   1cf46:	a2 9f       	mul	r26, r18
   1cf48:	b0 01       	movw	r22, r0
   1cf4a:	b3 9f       	mul	r27, r19
   1cf4c:	c0 01       	movw	r24, r0
   1cf4e:	a3 9f       	mul	r26, r19
   1cf50:	70 0d       	add	r23, r0
   1cf52:	81 1d       	adc	r24, r1
   1cf54:	11 24       	eor	r1, r1
   1cf56:	91 1d       	adc	r25, r1
   1cf58:	b2 9f       	mul	r27, r18
   1cf5a:	70 0d       	add	r23, r0
   1cf5c:	81 1d       	adc	r24, r1
   1cf5e:	11 24       	eor	r1, r1
   1cf60:	91 1d       	adc	r25, r1
   1cf62:	08 95       	ret

0001cf64 <__muluhisi3>:
   1cf64:	f0 df       	rcall	.-32     	; 0x1cf46 <__umulhisi3>
   1cf66:	a5 9f       	mul	r26, r21
   1cf68:	90 0d       	add	r25, r0
   1cf6a:	b4 9f       	mul	r27, r20
   1cf6c:	90 0d       	add	r25, r0
   1cf6e:	a4 9f       	mul	r26, r20
   1cf70:	80 0d       	add	r24, r0
   1cf72:	91 1d       	adc	r25, r1
   1cf74:	11 24       	eor	r1, r1
   1cf76:	08 95       	ret

0001cf78 <__cmpdi2_s8>:
   1cf78:	00 24       	eor	r0, r0
   1cf7a:	a7 fd       	sbrc	r26, 7
   1cf7c:	00 94       	com	r0
   1cf7e:	2a 17       	cp	r18, r26
   1cf80:	30 05       	cpc	r19, r0
   1cf82:	40 05       	cpc	r20, r0
   1cf84:	50 05       	cpc	r21, r0
   1cf86:	60 05       	cpc	r22, r0
   1cf88:	70 05       	cpc	r23, r0
   1cf8a:	80 05       	cpc	r24, r0
   1cf8c:	90 05       	cpc	r25, r0
   1cf8e:	08 95       	ret

0001cf90 <malloc>:
   1cf90:	0f 93       	push	r16
   1cf92:	1f 93       	push	r17
   1cf94:	cf 93       	push	r28
   1cf96:	df 93       	push	r29
   1cf98:	82 30       	cpi	r24, 0x02	; 2
   1cf9a:	91 05       	cpc	r25, r1
   1cf9c:	10 f4       	brcc	.+4      	; 0x1cfa2 <malloc+0x12>
   1cf9e:	82 e0       	ldi	r24, 0x02	; 2
   1cfa0:	90 e0       	ldi	r25, 0x00	; 0
   1cfa2:	e0 91 b6 18 	lds	r30, 0x18B6	; 0x8018b6 <__flp>
   1cfa6:	f0 91 b7 18 	lds	r31, 0x18B7	; 0x8018b7 <__flp+0x1>
   1cfaa:	20 e0       	ldi	r18, 0x00	; 0
   1cfac:	30 e0       	ldi	r19, 0x00	; 0
   1cfae:	a0 e0       	ldi	r26, 0x00	; 0
   1cfb0:	b0 e0       	ldi	r27, 0x00	; 0
   1cfb2:	30 97       	sbiw	r30, 0x00	; 0
   1cfb4:	19 f1       	breq	.+70     	; 0x1cffc <malloc+0x6c>
   1cfb6:	40 81       	ld	r20, Z
   1cfb8:	51 81       	ldd	r21, Z+1	; 0x01
   1cfba:	02 81       	ldd	r16, Z+2	; 0x02
   1cfbc:	13 81       	ldd	r17, Z+3	; 0x03
   1cfbe:	48 17       	cp	r20, r24
   1cfc0:	59 07       	cpc	r21, r25
   1cfc2:	c8 f0       	brcs	.+50     	; 0x1cff6 <malloc+0x66>
   1cfc4:	84 17       	cp	r24, r20
   1cfc6:	95 07       	cpc	r25, r21
   1cfc8:	69 f4       	brne	.+26     	; 0x1cfe4 <malloc+0x54>
   1cfca:	10 97       	sbiw	r26, 0x00	; 0
   1cfcc:	31 f0       	breq	.+12     	; 0x1cfda <malloc+0x4a>
   1cfce:	12 96       	adiw	r26, 0x02	; 2
   1cfd0:	0c 93       	st	X, r16
   1cfd2:	12 97       	sbiw	r26, 0x02	; 2
   1cfd4:	13 96       	adiw	r26, 0x03	; 3
   1cfd6:	1c 93       	st	X, r17
   1cfd8:	27 c0       	rjmp	.+78     	; 0x1d028 <malloc+0x98>
   1cfda:	00 93 b6 18 	sts	0x18B6, r16	; 0x8018b6 <__flp>
   1cfde:	10 93 b7 18 	sts	0x18B7, r17	; 0x8018b7 <__flp+0x1>
   1cfe2:	22 c0       	rjmp	.+68     	; 0x1d028 <malloc+0x98>
   1cfe4:	21 15       	cp	r18, r1
   1cfe6:	31 05       	cpc	r19, r1
   1cfe8:	19 f0       	breq	.+6      	; 0x1cff0 <malloc+0x60>
   1cfea:	42 17       	cp	r20, r18
   1cfec:	53 07       	cpc	r21, r19
   1cfee:	18 f4       	brcc	.+6      	; 0x1cff6 <malloc+0x66>
   1cff0:	9a 01       	movw	r18, r20
   1cff2:	bd 01       	movw	r22, r26
   1cff4:	ef 01       	movw	r28, r30
   1cff6:	df 01       	movw	r26, r30
   1cff8:	f8 01       	movw	r30, r16
   1cffa:	db cf       	rjmp	.-74     	; 0x1cfb2 <malloc+0x22>
   1cffc:	21 15       	cp	r18, r1
   1cffe:	31 05       	cpc	r19, r1
   1d000:	f9 f0       	breq	.+62     	; 0x1d040 <malloc+0xb0>
   1d002:	28 1b       	sub	r18, r24
   1d004:	39 0b       	sbc	r19, r25
   1d006:	24 30       	cpi	r18, 0x04	; 4
   1d008:	31 05       	cpc	r19, r1
   1d00a:	80 f4       	brcc	.+32     	; 0x1d02c <malloc+0x9c>
   1d00c:	8a 81       	ldd	r24, Y+2	; 0x02
   1d00e:	9b 81       	ldd	r25, Y+3	; 0x03
   1d010:	61 15       	cp	r22, r1
   1d012:	71 05       	cpc	r23, r1
   1d014:	21 f0       	breq	.+8      	; 0x1d01e <malloc+0x8e>
   1d016:	fb 01       	movw	r30, r22
   1d018:	93 83       	std	Z+3, r25	; 0x03
   1d01a:	82 83       	std	Z+2, r24	; 0x02
   1d01c:	04 c0       	rjmp	.+8      	; 0x1d026 <malloc+0x96>
   1d01e:	90 93 b7 18 	sts	0x18B7, r25	; 0x8018b7 <__flp+0x1>
   1d022:	80 93 b6 18 	sts	0x18B6, r24	; 0x8018b6 <__flp>
   1d026:	fe 01       	movw	r30, r28
   1d028:	32 96       	adiw	r30, 0x02	; 2
   1d02a:	44 c0       	rjmp	.+136    	; 0x1d0b4 <malloc+0x124>
   1d02c:	fe 01       	movw	r30, r28
   1d02e:	e2 0f       	add	r30, r18
   1d030:	f3 1f       	adc	r31, r19
   1d032:	81 93       	st	Z+, r24
   1d034:	91 93       	st	Z+, r25
   1d036:	22 50       	subi	r18, 0x02	; 2
   1d038:	31 09       	sbc	r19, r1
   1d03a:	39 83       	std	Y+1, r19	; 0x01
   1d03c:	28 83       	st	Y, r18
   1d03e:	3a c0       	rjmp	.+116    	; 0x1d0b4 <malloc+0x124>
   1d040:	20 91 b4 18 	lds	r18, 0x18B4	; 0x8018b4 <__brkval>
   1d044:	30 91 b5 18 	lds	r19, 0x18B5	; 0x8018b5 <__brkval+0x1>
   1d048:	23 2b       	or	r18, r19
   1d04a:	41 f4       	brne	.+16     	; 0x1d05c <malloc+0xcc>
   1d04c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d050:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d054:	30 93 b5 18 	sts	0x18B5, r19	; 0x8018b5 <__brkval+0x1>
   1d058:	20 93 b4 18 	sts	0x18B4, r18	; 0x8018b4 <__brkval>
   1d05c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
   1d060:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
   1d064:	21 15       	cp	r18, r1
   1d066:	31 05       	cpc	r19, r1
   1d068:	41 f4       	brne	.+16     	; 0x1d07a <malloc+0xea>
   1d06a:	2d b7       	in	r18, 0x3d	; 61
   1d06c:	3e b7       	in	r19, 0x3e	; 62
   1d06e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d072:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d076:	24 1b       	sub	r18, r20
   1d078:	35 0b       	sbc	r19, r21
   1d07a:	e0 91 b4 18 	lds	r30, 0x18B4	; 0x8018b4 <__brkval>
   1d07e:	f0 91 b5 18 	lds	r31, 0x18B5	; 0x8018b5 <__brkval+0x1>
   1d082:	e2 17       	cp	r30, r18
   1d084:	f3 07       	cpc	r31, r19
   1d086:	a0 f4       	brcc	.+40     	; 0x1d0b0 <malloc+0x120>
   1d088:	2e 1b       	sub	r18, r30
   1d08a:	3f 0b       	sbc	r19, r31
   1d08c:	28 17       	cp	r18, r24
   1d08e:	39 07       	cpc	r19, r25
   1d090:	78 f0       	brcs	.+30     	; 0x1d0b0 <malloc+0x120>
   1d092:	ac 01       	movw	r20, r24
   1d094:	4e 5f       	subi	r20, 0xFE	; 254
   1d096:	5f 4f       	sbci	r21, 0xFF	; 255
   1d098:	24 17       	cp	r18, r20
   1d09a:	35 07       	cpc	r19, r21
   1d09c:	48 f0       	brcs	.+18     	; 0x1d0b0 <malloc+0x120>
   1d09e:	4e 0f       	add	r20, r30
   1d0a0:	5f 1f       	adc	r21, r31
   1d0a2:	50 93 b5 18 	sts	0x18B5, r21	; 0x8018b5 <__brkval+0x1>
   1d0a6:	40 93 b4 18 	sts	0x18B4, r20	; 0x8018b4 <__brkval>
   1d0aa:	81 93       	st	Z+, r24
   1d0ac:	91 93       	st	Z+, r25
   1d0ae:	02 c0       	rjmp	.+4      	; 0x1d0b4 <malloc+0x124>
   1d0b0:	e0 e0       	ldi	r30, 0x00	; 0
   1d0b2:	f0 e0       	ldi	r31, 0x00	; 0
   1d0b4:	cf 01       	movw	r24, r30
   1d0b6:	df 91       	pop	r29
   1d0b8:	cf 91       	pop	r28
   1d0ba:	1f 91       	pop	r17
   1d0bc:	0f 91       	pop	r16
   1d0be:	08 95       	ret

0001d0c0 <free>:
   1d0c0:	cf 93       	push	r28
   1d0c2:	df 93       	push	r29
   1d0c4:	00 97       	sbiw	r24, 0x00	; 0
   1d0c6:	09 f4       	brne	.+2      	; 0x1d0ca <free+0xa>
   1d0c8:	81 c0       	rjmp	.+258    	; 0x1d1cc <free+0x10c>
   1d0ca:	fc 01       	movw	r30, r24
   1d0cc:	32 97       	sbiw	r30, 0x02	; 2
   1d0ce:	13 82       	std	Z+3, r1	; 0x03
   1d0d0:	12 82       	std	Z+2, r1	; 0x02
   1d0d2:	a0 91 b6 18 	lds	r26, 0x18B6	; 0x8018b6 <__flp>
   1d0d6:	b0 91 b7 18 	lds	r27, 0x18B7	; 0x8018b7 <__flp+0x1>
   1d0da:	10 97       	sbiw	r26, 0x00	; 0
   1d0dc:	81 f4       	brne	.+32     	; 0x1d0fe <free+0x3e>
   1d0de:	20 81       	ld	r18, Z
   1d0e0:	31 81       	ldd	r19, Z+1	; 0x01
   1d0e2:	82 0f       	add	r24, r18
   1d0e4:	93 1f       	adc	r25, r19
   1d0e6:	20 91 b4 18 	lds	r18, 0x18B4	; 0x8018b4 <__brkval>
   1d0ea:	30 91 b5 18 	lds	r19, 0x18B5	; 0x8018b5 <__brkval+0x1>
   1d0ee:	28 17       	cp	r18, r24
   1d0f0:	39 07       	cpc	r19, r25
   1d0f2:	51 f5       	brne	.+84     	; 0x1d148 <free+0x88>
   1d0f4:	f0 93 b5 18 	sts	0x18B5, r31	; 0x8018b5 <__brkval+0x1>
   1d0f8:	e0 93 b4 18 	sts	0x18B4, r30	; 0x8018b4 <__brkval>
   1d0fc:	67 c0       	rjmp	.+206    	; 0x1d1cc <free+0x10c>
   1d0fe:	ed 01       	movw	r28, r26
   1d100:	20 e0       	ldi	r18, 0x00	; 0
   1d102:	30 e0       	ldi	r19, 0x00	; 0
   1d104:	ce 17       	cp	r28, r30
   1d106:	df 07       	cpc	r29, r31
   1d108:	40 f4       	brcc	.+16     	; 0x1d11a <free+0x5a>
   1d10a:	4a 81       	ldd	r20, Y+2	; 0x02
   1d10c:	5b 81       	ldd	r21, Y+3	; 0x03
   1d10e:	9e 01       	movw	r18, r28
   1d110:	41 15       	cp	r20, r1
   1d112:	51 05       	cpc	r21, r1
   1d114:	f1 f0       	breq	.+60     	; 0x1d152 <free+0x92>
   1d116:	ea 01       	movw	r28, r20
   1d118:	f5 cf       	rjmp	.-22     	; 0x1d104 <free+0x44>
   1d11a:	d3 83       	std	Z+3, r29	; 0x03
   1d11c:	c2 83       	std	Z+2, r28	; 0x02
   1d11e:	40 81       	ld	r20, Z
   1d120:	51 81       	ldd	r21, Z+1	; 0x01
   1d122:	84 0f       	add	r24, r20
   1d124:	95 1f       	adc	r25, r21
   1d126:	c8 17       	cp	r28, r24
   1d128:	d9 07       	cpc	r29, r25
   1d12a:	59 f4       	brne	.+22     	; 0x1d142 <free+0x82>
   1d12c:	88 81       	ld	r24, Y
   1d12e:	99 81       	ldd	r25, Y+1	; 0x01
   1d130:	84 0f       	add	r24, r20
   1d132:	95 1f       	adc	r25, r21
   1d134:	02 96       	adiw	r24, 0x02	; 2
   1d136:	91 83       	std	Z+1, r25	; 0x01
   1d138:	80 83       	st	Z, r24
   1d13a:	8a 81       	ldd	r24, Y+2	; 0x02
   1d13c:	9b 81       	ldd	r25, Y+3	; 0x03
   1d13e:	93 83       	std	Z+3, r25	; 0x03
   1d140:	82 83       	std	Z+2, r24	; 0x02
   1d142:	21 15       	cp	r18, r1
   1d144:	31 05       	cpc	r19, r1
   1d146:	29 f4       	brne	.+10     	; 0x1d152 <free+0x92>
   1d148:	f0 93 b7 18 	sts	0x18B7, r31	; 0x8018b7 <__flp+0x1>
   1d14c:	e0 93 b6 18 	sts	0x18B6, r30	; 0x8018b6 <__flp>
   1d150:	3d c0       	rjmp	.+122    	; 0x1d1cc <free+0x10c>
   1d152:	e9 01       	movw	r28, r18
   1d154:	fb 83       	std	Y+3, r31	; 0x03
   1d156:	ea 83       	std	Y+2, r30	; 0x02
   1d158:	49 91       	ld	r20, Y+
   1d15a:	59 91       	ld	r21, Y+
   1d15c:	c4 0f       	add	r28, r20
   1d15e:	d5 1f       	adc	r29, r21
   1d160:	ec 17       	cp	r30, r28
   1d162:	fd 07       	cpc	r31, r29
   1d164:	61 f4       	brne	.+24     	; 0x1d17e <free+0xbe>
   1d166:	80 81       	ld	r24, Z
   1d168:	91 81       	ldd	r25, Z+1	; 0x01
   1d16a:	84 0f       	add	r24, r20
   1d16c:	95 1f       	adc	r25, r21
   1d16e:	02 96       	adiw	r24, 0x02	; 2
   1d170:	e9 01       	movw	r28, r18
   1d172:	99 83       	std	Y+1, r25	; 0x01
   1d174:	88 83       	st	Y, r24
   1d176:	82 81       	ldd	r24, Z+2	; 0x02
   1d178:	93 81       	ldd	r25, Z+3	; 0x03
   1d17a:	9b 83       	std	Y+3, r25	; 0x03
   1d17c:	8a 83       	std	Y+2, r24	; 0x02
   1d17e:	e0 e0       	ldi	r30, 0x00	; 0
   1d180:	f0 e0       	ldi	r31, 0x00	; 0
   1d182:	12 96       	adiw	r26, 0x02	; 2
   1d184:	8d 91       	ld	r24, X+
   1d186:	9c 91       	ld	r25, X
   1d188:	13 97       	sbiw	r26, 0x03	; 3
   1d18a:	00 97       	sbiw	r24, 0x00	; 0
   1d18c:	19 f0       	breq	.+6      	; 0x1d194 <free+0xd4>
   1d18e:	fd 01       	movw	r30, r26
   1d190:	dc 01       	movw	r26, r24
   1d192:	f7 cf       	rjmp	.-18     	; 0x1d182 <free+0xc2>
   1d194:	8d 91       	ld	r24, X+
   1d196:	9c 91       	ld	r25, X
   1d198:	11 97       	sbiw	r26, 0x01	; 1
   1d19a:	9d 01       	movw	r18, r26
   1d19c:	2e 5f       	subi	r18, 0xFE	; 254
   1d19e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d1a0:	82 0f       	add	r24, r18
   1d1a2:	93 1f       	adc	r25, r19
   1d1a4:	20 91 b4 18 	lds	r18, 0x18B4	; 0x8018b4 <__brkval>
   1d1a8:	30 91 b5 18 	lds	r19, 0x18B5	; 0x8018b5 <__brkval+0x1>
   1d1ac:	28 17       	cp	r18, r24
   1d1ae:	39 07       	cpc	r19, r25
   1d1b0:	69 f4       	brne	.+26     	; 0x1d1cc <free+0x10c>
   1d1b2:	30 97       	sbiw	r30, 0x00	; 0
   1d1b4:	29 f4       	brne	.+10     	; 0x1d1c0 <free+0x100>
   1d1b6:	10 92 b7 18 	sts	0x18B7, r1	; 0x8018b7 <__flp+0x1>
   1d1ba:	10 92 b6 18 	sts	0x18B6, r1	; 0x8018b6 <__flp>
   1d1be:	02 c0       	rjmp	.+4      	; 0x1d1c4 <free+0x104>
   1d1c0:	13 82       	std	Z+3, r1	; 0x03
   1d1c2:	12 82       	std	Z+2, r1	; 0x02
   1d1c4:	b0 93 b5 18 	sts	0x18B5, r27	; 0x8018b5 <__brkval+0x1>
   1d1c8:	a0 93 b4 18 	sts	0x18B4, r26	; 0x8018b4 <__brkval>
   1d1cc:	df 91       	pop	r29
   1d1ce:	cf 91       	pop	r28
   1d1d0:	08 95       	ret

0001d1d2 <random_r>:
   1d1d2:	8f 92       	push	r8
   1d1d4:	9f 92       	push	r9
   1d1d6:	af 92       	push	r10
   1d1d8:	bf 92       	push	r11
   1d1da:	cf 92       	push	r12
   1d1dc:	df 92       	push	r13
   1d1de:	ef 92       	push	r14
   1d1e0:	ff 92       	push	r15
   1d1e2:	cf 93       	push	r28
   1d1e4:	df 93       	push	r29
   1d1e6:	ec 01       	movw	r28, r24
   1d1e8:	68 81       	ld	r22, Y
   1d1ea:	79 81       	ldd	r23, Y+1	; 0x01
   1d1ec:	8a 81       	ldd	r24, Y+2	; 0x02
   1d1ee:	9b 81       	ldd	r25, Y+3	; 0x03
   1d1f0:	61 15       	cp	r22, r1
   1d1f2:	71 05       	cpc	r23, r1
   1d1f4:	81 05       	cpc	r24, r1
   1d1f6:	91 05       	cpc	r25, r1
   1d1f8:	21 f4       	brne	.+8      	; 0x1d202 <random_r+0x30>
   1d1fa:	64 e2       	ldi	r22, 0x24	; 36
   1d1fc:	79 ed       	ldi	r23, 0xD9	; 217
   1d1fe:	8b e5       	ldi	r24, 0x5B	; 91
   1d200:	97 e0       	ldi	r25, 0x07	; 7
   1d202:	2d e1       	ldi	r18, 0x1D	; 29
   1d204:	33 ef       	ldi	r19, 0xF3	; 243
   1d206:	41 e0       	ldi	r20, 0x01	; 1
   1d208:	50 e0       	ldi	r21, 0x00	; 0
   1d20a:	79 de       	rcall	.-782    	; 0x1cefe <__divmodsi4>
   1d20c:	49 01       	movw	r8, r18
   1d20e:	5a 01       	movw	r10, r20
   1d210:	9b 01       	movw	r18, r22
   1d212:	ac 01       	movw	r20, r24
   1d214:	a7 ea       	ldi	r26, 0xA7	; 167
   1d216:	b1 e4       	ldi	r27, 0x41	; 65
   1d218:	a5 de       	rcall	.-694    	; 0x1cf64 <__muluhisi3>
   1d21a:	6b 01       	movw	r12, r22
   1d21c:	7c 01       	movw	r14, r24
   1d21e:	ac ee       	ldi	r26, 0xEC	; 236
   1d220:	b4 ef       	ldi	r27, 0xF4	; 244
   1d222:	a5 01       	movw	r20, r10
   1d224:	94 01       	movw	r18, r8
   1d226:	bd d3       	rcall	.+1914   	; 0x1d9a2 <__mulohisi3>
   1d228:	dc 01       	movw	r26, r24
   1d22a:	cb 01       	movw	r24, r22
   1d22c:	8c 0d       	add	r24, r12
   1d22e:	9d 1d       	adc	r25, r13
   1d230:	ae 1d       	adc	r26, r14
   1d232:	bf 1d       	adc	r27, r15
   1d234:	b7 ff       	sbrs	r27, 7
   1d236:	03 c0       	rjmp	.+6      	; 0x1d23e <random_r+0x6c>
   1d238:	01 97       	sbiw	r24, 0x01	; 1
   1d23a:	a1 09       	sbc	r26, r1
   1d23c:	b0 48       	sbci	r27, 0x80	; 128
   1d23e:	88 83       	st	Y, r24
   1d240:	99 83       	std	Y+1, r25	; 0x01
   1d242:	aa 83       	std	Y+2, r26	; 0x02
   1d244:	bb 83       	std	Y+3, r27	; 0x03
   1d246:	bc 01       	movw	r22, r24
   1d248:	cd 01       	movw	r24, r26
   1d24a:	9f 77       	andi	r25, 0x7F	; 127
   1d24c:	df 91       	pop	r29
   1d24e:	cf 91       	pop	r28
   1d250:	ff 90       	pop	r15
   1d252:	ef 90       	pop	r14
   1d254:	df 90       	pop	r13
   1d256:	cf 90       	pop	r12
   1d258:	bf 90       	pop	r11
   1d25a:	af 90       	pop	r10
   1d25c:	9f 90       	pop	r9
   1d25e:	8f 90       	pop	r8
   1d260:	08 95       	ret

0001d262 <random>:
   1d262:	8f 92       	push	r8
   1d264:	9f 92       	push	r9
   1d266:	af 92       	push	r10
   1d268:	bf 92       	push	r11
   1d26a:	cf 92       	push	r12
   1d26c:	df 92       	push	r13
   1d26e:	ef 92       	push	r14
   1d270:	ff 92       	push	r15
   1d272:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1d276:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1d27a:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1d27e:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1d282:	61 15       	cp	r22, r1
   1d284:	71 05       	cpc	r23, r1
   1d286:	81 05       	cpc	r24, r1
   1d288:	91 05       	cpc	r25, r1
   1d28a:	21 f4       	brne	.+8      	; 0x1d294 <random+0x32>
   1d28c:	64 e2       	ldi	r22, 0x24	; 36
   1d28e:	79 ed       	ldi	r23, 0xD9	; 217
   1d290:	8b e5       	ldi	r24, 0x5B	; 91
   1d292:	97 e0       	ldi	r25, 0x07	; 7
   1d294:	2d e1       	ldi	r18, 0x1D	; 29
   1d296:	33 ef       	ldi	r19, 0xF3	; 243
   1d298:	41 e0       	ldi	r20, 0x01	; 1
   1d29a:	50 e0       	ldi	r21, 0x00	; 0
   1d29c:	30 de       	rcall	.-928    	; 0x1cefe <__divmodsi4>
   1d29e:	49 01       	movw	r8, r18
   1d2a0:	5a 01       	movw	r10, r20
   1d2a2:	9b 01       	movw	r18, r22
   1d2a4:	ac 01       	movw	r20, r24
   1d2a6:	a7 ea       	ldi	r26, 0xA7	; 167
   1d2a8:	b1 e4       	ldi	r27, 0x41	; 65
   1d2aa:	5c de       	rcall	.-840    	; 0x1cf64 <__muluhisi3>
   1d2ac:	6b 01       	movw	r12, r22
   1d2ae:	7c 01       	movw	r14, r24
   1d2b0:	ac ee       	ldi	r26, 0xEC	; 236
   1d2b2:	b4 ef       	ldi	r27, 0xF4	; 244
   1d2b4:	a5 01       	movw	r20, r10
   1d2b6:	94 01       	movw	r18, r8
   1d2b8:	74 d3       	rcall	.+1768   	; 0x1d9a2 <__mulohisi3>
   1d2ba:	dc 01       	movw	r26, r24
   1d2bc:	cb 01       	movw	r24, r22
   1d2be:	8c 0d       	add	r24, r12
   1d2c0:	9d 1d       	adc	r25, r13
   1d2c2:	ae 1d       	adc	r26, r14
   1d2c4:	bf 1d       	adc	r27, r15
   1d2c6:	b7 ff       	sbrs	r27, 7
   1d2c8:	03 c0       	rjmp	.+6      	; 0x1d2d0 <random+0x6e>
   1d2ca:	01 97       	sbiw	r24, 0x01	; 1
   1d2cc:	a1 09       	sbc	r26, r1
   1d2ce:	b0 48       	sbci	r27, 0x80	; 128
   1d2d0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1d2d4:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1d2d8:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1d2dc:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1d2e0:	bc 01       	movw	r22, r24
   1d2e2:	cd 01       	movw	r24, r26
   1d2e4:	9f 77       	andi	r25, 0x7F	; 127
   1d2e6:	ff 90       	pop	r15
   1d2e8:	ef 90       	pop	r14
   1d2ea:	df 90       	pop	r13
   1d2ec:	cf 90       	pop	r12
   1d2ee:	bf 90       	pop	r11
   1d2f0:	af 90       	pop	r10
   1d2f2:	9f 90       	pop	r9
   1d2f4:	8f 90       	pop	r8
   1d2f6:	08 95       	ret

0001d2f8 <srandom>:
   1d2f8:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1d2fc:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1d300:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1d304:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1d308:	08 95       	ret

0001d30a <abort>:
   1d30a:	81 e0       	ldi	r24, 0x01	; 1
   1d30c:	90 e0       	ldi	r25, 0x00	; 0
   1d30e:	f8 94       	cli
   1d310:	4c c3       	rjmp	.+1688   	; 0x1d9aa <_exit>

0001d312 <memcpy_P>:
   1d312:	fb 01       	movw	r30, r22
   1d314:	dc 01       	movw	r26, r24
   1d316:	02 c0       	rjmp	.+4      	; 0x1d31c <memcpy_P+0xa>
   1d318:	05 90       	lpm	r0, Z+
   1d31a:	0d 92       	st	X+, r0
   1d31c:	41 50       	subi	r20, 0x01	; 1
   1d31e:	50 40       	sbci	r21, 0x00	; 0
   1d320:	d8 f7       	brcc	.-10     	; 0x1d318 <memcpy_P+0x6>
   1d322:	08 95       	ret

0001d324 <strcmp_P>:
   1d324:	fb 01       	movw	r30, r22
   1d326:	dc 01       	movw	r26, r24
   1d328:	8d 91       	ld	r24, X+
   1d32a:	05 90       	lpm	r0, Z+
   1d32c:	80 19       	sub	r24, r0
   1d32e:	01 10       	cpse	r0, r1
   1d330:	d9 f3       	breq	.-10     	; 0x1d328 <strcmp_P+0x4>
   1d332:	99 0b       	sbc	r25, r25
   1d334:	08 95       	ret

0001d336 <__strlen_P>:
   1d336:	fc 01       	movw	r30, r24
   1d338:	05 90       	lpm	r0, Z+
   1d33a:	00 20       	and	r0, r0
   1d33c:	e9 f7       	brne	.-6      	; 0x1d338 <__strlen_P+0x2>
   1d33e:	80 95       	com	r24
   1d340:	90 95       	com	r25
   1d342:	8e 0f       	add	r24, r30
   1d344:	9f 1f       	adc	r25, r31
   1d346:	08 95       	ret

0001d348 <memcpy>:
   1d348:	fb 01       	movw	r30, r22
   1d34a:	dc 01       	movw	r26, r24
   1d34c:	02 c0       	rjmp	.+4      	; 0x1d352 <memcpy+0xa>
   1d34e:	01 90       	ld	r0, Z+
   1d350:	0d 92       	st	X+, r0
   1d352:	41 50       	subi	r20, 0x01	; 1
   1d354:	50 40       	sbci	r21, 0x00	; 0
   1d356:	d8 f7       	brcc	.-10     	; 0x1d34e <memcpy+0x6>
   1d358:	08 95       	ret

0001d35a <memset>:
   1d35a:	dc 01       	movw	r26, r24
   1d35c:	01 c0       	rjmp	.+2      	; 0x1d360 <memset+0x6>
   1d35e:	6d 93       	st	X+, r22
   1d360:	41 50       	subi	r20, 0x01	; 1
   1d362:	50 40       	sbci	r21, 0x00	; 0
   1d364:	e0 f7       	brcc	.-8      	; 0x1d35e <memset+0x4>
   1d366:	08 95       	ret

0001d368 <strcmp>:
   1d368:	fb 01       	movw	r30, r22
   1d36a:	dc 01       	movw	r26, r24
   1d36c:	8d 91       	ld	r24, X+
   1d36e:	01 90       	ld	r0, Z+
   1d370:	80 19       	sub	r24, r0
   1d372:	01 10       	cpse	r0, r1
   1d374:	d9 f3       	breq	.-10     	; 0x1d36c <strcmp+0x4>
   1d376:	99 0b       	sbc	r25, r25
   1d378:	08 95       	ret

0001d37a <strcpy>:
   1d37a:	fb 01       	movw	r30, r22
   1d37c:	dc 01       	movw	r26, r24
   1d37e:	01 90       	ld	r0, Z+
   1d380:	0d 92       	st	X+, r0
   1d382:	00 20       	and	r0, r0
   1d384:	e1 f7       	brne	.-8      	; 0x1d37e <strcpy+0x4>
   1d386:	08 95       	ret

0001d388 <strstr>:
   1d388:	fb 01       	movw	r30, r22
   1d38a:	51 91       	ld	r21, Z+
   1d38c:	55 23       	and	r21, r21
   1d38e:	a9 f0       	breq	.+42     	; 0x1d3ba <strstr+0x32>
   1d390:	bf 01       	movw	r22, r30
   1d392:	dc 01       	movw	r26, r24
   1d394:	4d 91       	ld	r20, X+
   1d396:	45 17       	cp	r20, r21
   1d398:	41 11       	cpse	r20, r1
   1d39a:	e1 f7       	brne	.-8      	; 0x1d394 <strstr+0xc>
   1d39c:	59 f4       	brne	.+22     	; 0x1d3b4 <strstr+0x2c>
   1d39e:	cd 01       	movw	r24, r26
   1d3a0:	01 90       	ld	r0, Z+
   1d3a2:	00 20       	and	r0, r0
   1d3a4:	49 f0       	breq	.+18     	; 0x1d3b8 <strstr+0x30>
   1d3a6:	4d 91       	ld	r20, X+
   1d3a8:	40 15       	cp	r20, r0
   1d3aa:	41 11       	cpse	r20, r1
   1d3ac:	c9 f3       	breq	.-14     	; 0x1d3a0 <strstr+0x18>
   1d3ae:	fb 01       	movw	r30, r22
   1d3b0:	41 11       	cpse	r20, r1
   1d3b2:	ef cf       	rjmp	.-34     	; 0x1d392 <strstr+0xa>
   1d3b4:	81 e0       	ldi	r24, 0x01	; 1
   1d3b6:	90 e0       	ldi	r25, 0x00	; 0
   1d3b8:	01 97       	sbiw	r24, 0x01	; 1
   1d3ba:	08 95       	ret

0001d3bc <sprintf>:
   1d3bc:	0f 93       	push	r16
   1d3be:	1f 93       	push	r17
   1d3c0:	cf 93       	push	r28
   1d3c2:	df 93       	push	r29
   1d3c4:	cd b7       	in	r28, 0x3d	; 61
   1d3c6:	de b7       	in	r29, 0x3e	; 62
   1d3c8:	2e 97       	sbiw	r28, 0x0e	; 14
   1d3ca:	0f b6       	in	r0, 0x3f	; 63
   1d3cc:	f8 94       	cli
   1d3ce:	de bf       	out	0x3e, r29	; 62
   1d3d0:	0f be       	out	0x3f, r0	; 63
   1d3d2:	cd bf       	out	0x3d, r28	; 61
   1d3d4:	0e 89       	ldd	r16, Y+22	; 0x16
   1d3d6:	1f 89       	ldd	r17, Y+23	; 0x17
   1d3d8:	86 e0       	ldi	r24, 0x06	; 6
   1d3da:	8c 83       	std	Y+4, r24	; 0x04
   1d3dc:	1a 83       	std	Y+2, r17	; 0x02
   1d3de:	09 83       	std	Y+1, r16	; 0x01
   1d3e0:	8f ef       	ldi	r24, 0xFF	; 255
   1d3e2:	9f e7       	ldi	r25, 0x7F	; 127
   1d3e4:	9e 83       	std	Y+6, r25	; 0x06
   1d3e6:	8d 83       	std	Y+5, r24	; 0x05
   1d3e8:	ae 01       	movw	r20, r28
   1d3ea:	46 5e       	subi	r20, 0xE6	; 230
   1d3ec:	5f 4f       	sbci	r21, 0xFF	; 255
   1d3ee:	68 8d       	ldd	r22, Y+24	; 0x18
   1d3f0:	79 8d       	ldd	r23, Y+25	; 0x19
   1d3f2:	ce 01       	movw	r24, r28
   1d3f4:	01 96       	adiw	r24, 0x01	; 1
   1d3f6:	10 d0       	rcall	.+32     	; 0x1d418 <vfprintf>
   1d3f8:	ef 81       	ldd	r30, Y+7	; 0x07
   1d3fa:	f8 85       	ldd	r31, Y+8	; 0x08
   1d3fc:	e0 0f       	add	r30, r16
   1d3fe:	f1 1f       	adc	r31, r17
   1d400:	10 82       	st	Z, r1
   1d402:	2e 96       	adiw	r28, 0x0e	; 14
   1d404:	0f b6       	in	r0, 0x3f	; 63
   1d406:	f8 94       	cli
   1d408:	de bf       	out	0x3e, r29	; 62
   1d40a:	0f be       	out	0x3f, r0	; 63
   1d40c:	cd bf       	out	0x3d, r28	; 61
   1d40e:	df 91       	pop	r29
   1d410:	cf 91       	pop	r28
   1d412:	1f 91       	pop	r17
   1d414:	0f 91       	pop	r16
   1d416:	08 95       	ret

0001d418 <vfprintf>:
   1d418:	2f 92       	push	r2
   1d41a:	3f 92       	push	r3
   1d41c:	4f 92       	push	r4
   1d41e:	5f 92       	push	r5
   1d420:	6f 92       	push	r6
   1d422:	7f 92       	push	r7
   1d424:	8f 92       	push	r8
   1d426:	9f 92       	push	r9
   1d428:	af 92       	push	r10
   1d42a:	bf 92       	push	r11
   1d42c:	cf 92       	push	r12
   1d42e:	df 92       	push	r13
   1d430:	ef 92       	push	r14
   1d432:	ff 92       	push	r15
   1d434:	0f 93       	push	r16
   1d436:	1f 93       	push	r17
   1d438:	cf 93       	push	r28
   1d43a:	df 93       	push	r29
   1d43c:	cd b7       	in	r28, 0x3d	; 61
   1d43e:	de b7       	in	r29, 0x3e	; 62
   1d440:	2b 97       	sbiw	r28, 0x0b	; 11
   1d442:	0f b6       	in	r0, 0x3f	; 63
   1d444:	f8 94       	cli
   1d446:	de bf       	out	0x3e, r29	; 62
   1d448:	0f be       	out	0x3f, r0	; 63
   1d44a:	cd bf       	out	0x3d, r28	; 61
   1d44c:	6c 01       	movw	r12, r24
   1d44e:	7b 01       	movw	r14, r22
   1d450:	8a 01       	movw	r16, r20
   1d452:	fc 01       	movw	r30, r24
   1d454:	17 82       	std	Z+7, r1	; 0x07
   1d456:	16 82       	std	Z+6, r1	; 0x06
   1d458:	83 81       	ldd	r24, Z+3	; 0x03
   1d45a:	81 ff       	sbrs	r24, 1
   1d45c:	bf c1       	rjmp	.+894    	; 0x1d7dc <vfprintf+0x3c4>
   1d45e:	ce 01       	movw	r24, r28
   1d460:	01 96       	adiw	r24, 0x01	; 1
   1d462:	3c 01       	movw	r6, r24
   1d464:	f6 01       	movw	r30, r12
   1d466:	93 81       	ldd	r25, Z+3	; 0x03
   1d468:	f7 01       	movw	r30, r14
   1d46a:	93 fd       	sbrc	r25, 3
   1d46c:	85 91       	lpm	r24, Z+
   1d46e:	93 ff       	sbrs	r25, 3
   1d470:	81 91       	ld	r24, Z+
   1d472:	7f 01       	movw	r14, r30
   1d474:	88 23       	and	r24, r24
   1d476:	09 f4       	brne	.+2      	; 0x1d47a <vfprintf+0x62>
   1d478:	ad c1       	rjmp	.+858    	; 0x1d7d4 <vfprintf+0x3bc>
   1d47a:	85 32       	cpi	r24, 0x25	; 37
   1d47c:	39 f4       	brne	.+14     	; 0x1d48c <vfprintf+0x74>
   1d47e:	93 fd       	sbrc	r25, 3
   1d480:	85 91       	lpm	r24, Z+
   1d482:	93 ff       	sbrs	r25, 3
   1d484:	81 91       	ld	r24, Z+
   1d486:	7f 01       	movw	r14, r30
   1d488:	85 32       	cpi	r24, 0x25	; 37
   1d48a:	21 f4       	brne	.+8      	; 0x1d494 <vfprintf+0x7c>
   1d48c:	b6 01       	movw	r22, r12
   1d48e:	90 e0       	ldi	r25, 0x00	; 0
   1d490:	d6 d1       	rcall	.+940    	; 0x1d83e <fputc>
   1d492:	e8 cf       	rjmp	.-48     	; 0x1d464 <vfprintf+0x4c>
   1d494:	91 2c       	mov	r9, r1
   1d496:	21 2c       	mov	r2, r1
   1d498:	31 2c       	mov	r3, r1
   1d49a:	ff e1       	ldi	r31, 0x1F	; 31
   1d49c:	f3 15       	cp	r31, r3
   1d49e:	d8 f0       	brcs	.+54     	; 0x1d4d6 <vfprintf+0xbe>
   1d4a0:	8b 32       	cpi	r24, 0x2B	; 43
   1d4a2:	79 f0       	breq	.+30     	; 0x1d4c2 <vfprintf+0xaa>
   1d4a4:	38 f4       	brcc	.+14     	; 0x1d4b4 <vfprintf+0x9c>
   1d4a6:	80 32       	cpi	r24, 0x20	; 32
   1d4a8:	79 f0       	breq	.+30     	; 0x1d4c8 <vfprintf+0xb0>
   1d4aa:	83 32       	cpi	r24, 0x23	; 35
   1d4ac:	a1 f4       	brne	.+40     	; 0x1d4d6 <vfprintf+0xbe>
   1d4ae:	23 2d       	mov	r18, r3
   1d4b0:	20 61       	ori	r18, 0x10	; 16
   1d4b2:	1d c0       	rjmp	.+58     	; 0x1d4ee <vfprintf+0xd6>
   1d4b4:	8d 32       	cpi	r24, 0x2D	; 45
   1d4b6:	61 f0       	breq	.+24     	; 0x1d4d0 <vfprintf+0xb8>
   1d4b8:	80 33       	cpi	r24, 0x30	; 48
   1d4ba:	69 f4       	brne	.+26     	; 0x1d4d6 <vfprintf+0xbe>
   1d4bc:	23 2d       	mov	r18, r3
   1d4be:	21 60       	ori	r18, 0x01	; 1
   1d4c0:	16 c0       	rjmp	.+44     	; 0x1d4ee <vfprintf+0xd6>
   1d4c2:	83 2d       	mov	r24, r3
   1d4c4:	82 60       	ori	r24, 0x02	; 2
   1d4c6:	38 2e       	mov	r3, r24
   1d4c8:	e3 2d       	mov	r30, r3
   1d4ca:	e4 60       	ori	r30, 0x04	; 4
   1d4cc:	3e 2e       	mov	r3, r30
   1d4ce:	2a c0       	rjmp	.+84     	; 0x1d524 <vfprintf+0x10c>
   1d4d0:	f3 2d       	mov	r31, r3
   1d4d2:	f8 60       	ori	r31, 0x08	; 8
   1d4d4:	1d c0       	rjmp	.+58     	; 0x1d510 <vfprintf+0xf8>
   1d4d6:	37 fc       	sbrc	r3, 7
   1d4d8:	2d c0       	rjmp	.+90     	; 0x1d534 <vfprintf+0x11c>
   1d4da:	20 ed       	ldi	r18, 0xD0	; 208
   1d4dc:	28 0f       	add	r18, r24
   1d4de:	2a 30       	cpi	r18, 0x0A	; 10
   1d4e0:	40 f0       	brcs	.+16     	; 0x1d4f2 <vfprintf+0xda>
   1d4e2:	8e 32       	cpi	r24, 0x2E	; 46
   1d4e4:	b9 f4       	brne	.+46     	; 0x1d514 <vfprintf+0xfc>
   1d4e6:	36 fc       	sbrc	r3, 6
   1d4e8:	75 c1       	rjmp	.+746    	; 0x1d7d4 <vfprintf+0x3bc>
   1d4ea:	23 2d       	mov	r18, r3
   1d4ec:	20 64       	ori	r18, 0x40	; 64
   1d4ee:	32 2e       	mov	r3, r18
   1d4f0:	19 c0       	rjmp	.+50     	; 0x1d524 <vfprintf+0x10c>
   1d4f2:	36 fe       	sbrs	r3, 6
   1d4f4:	06 c0       	rjmp	.+12     	; 0x1d502 <vfprintf+0xea>
   1d4f6:	8a e0       	ldi	r24, 0x0A	; 10
   1d4f8:	98 9e       	mul	r9, r24
   1d4fa:	20 0d       	add	r18, r0
   1d4fc:	11 24       	eor	r1, r1
   1d4fe:	92 2e       	mov	r9, r18
   1d500:	11 c0       	rjmp	.+34     	; 0x1d524 <vfprintf+0x10c>
   1d502:	ea e0       	ldi	r30, 0x0A	; 10
   1d504:	2e 9e       	mul	r2, r30
   1d506:	20 0d       	add	r18, r0
   1d508:	11 24       	eor	r1, r1
   1d50a:	22 2e       	mov	r2, r18
   1d50c:	f3 2d       	mov	r31, r3
   1d50e:	f0 62       	ori	r31, 0x20	; 32
   1d510:	3f 2e       	mov	r3, r31
   1d512:	08 c0       	rjmp	.+16     	; 0x1d524 <vfprintf+0x10c>
   1d514:	8c 36       	cpi	r24, 0x6C	; 108
   1d516:	21 f4       	brne	.+8      	; 0x1d520 <vfprintf+0x108>
   1d518:	83 2d       	mov	r24, r3
   1d51a:	80 68       	ori	r24, 0x80	; 128
   1d51c:	38 2e       	mov	r3, r24
   1d51e:	02 c0       	rjmp	.+4      	; 0x1d524 <vfprintf+0x10c>
   1d520:	88 36       	cpi	r24, 0x68	; 104
   1d522:	41 f4       	brne	.+16     	; 0x1d534 <vfprintf+0x11c>
   1d524:	f7 01       	movw	r30, r14
   1d526:	93 fd       	sbrc	r25, 3
   1d528:	85 91       	lpm	r24, Z+
   1d52a:	93 ff       	sbrs	r25, 3
   1d52c:	81 91       	ld	r24, Z+
   1d52e:	7f 01       	movw	r14, r30
   1d530:	81 11       	cpse	r24, r1
   1d532:	b3 cf       	rjmp	.-154    	; 0x1d49a <vfprintf+0x82>
   1d534:	98 2f       	mov	r25, r24
   1d536:	9f 7d       	andi	r25, 0xDF	; 223
   1d538:	95 54       	subi	r25, 0x45	; 69
   1d53a:	93 30       	cpi	r25, 0x03	; 3
   1d53c:	28 f4       	brcc	.+10     	; 0x1d548 <vfprintf+0x130>
   1d53e:	0c 5f       	subi	r16, 0xFC	; 252
   1d540:	1f 4f       	sbci	r17, 0xFF	; 255
   1d542:	9f e3       	ldi	r25, 0x3F	; 63
   1d544:	99 83       	std	Y+1, r25	; 0x01
   1d546:	0d c0       	rjmp	.+26     	; 0x1d562 <vfprintf+0x14a>
   1d548:	83 36       	cpi	r24, 0x63	; 99
   1d54a:	31 f0       	breq	.+12     	; 0x1d558 <vfprintf+0x140>
   1d54c:	83 37       	cpi	r24, 0x73	; 115
   1d54e:	71 f0       	breq	.+28     	; 0x1d56c <vfprintf+0x154>
   1d550:	83 35       	cpi	r24, 0x53	; 83
   1d552:	09 f0       	breq	.+2      	; 0x1d556 <vfprintf+0x13e>
   1d554:	55 c0       	rjmp	.+170    	; 0x1d600 <vfprintf+0x1e8>
   1d556:	20 c0       	rjmp	.+64     	; 0x1d598 <vfprintf+0x180>
   1d558:	f8 01       	movw	r30, r16
   1d55a:	80 81       	ld	r24, Z
   1d55c:	89 83       	std	Y+1, r24	; 0x01
   1d55e:	0e 5f       	subi	r16, 0xFE	; 254
   1d560:	1f 4f       	sbci	r17, 0xFF	; 255
   1d562:	88 24       	eor	r8, r8
   1d564:	83 94       	inc	r8
   1d566:	91 2c       	mov	r9, r1
   1d568:	53 01       	movw	r10, r6
   1d56a:	12 c0       	rjmp	.+36     	; 0x1d590 <vfprintf+0x178>
   1d56c:	28 01       	movw	r4, r16
   1d56e:	f2 e0       	ldi	r31, 0x02	; 2
   1d570:	4f 0e       	add	r4, r31
   1d572:	51 1c       	adc	r5, r1
   1d574:	f8 01       	movw	r30, r16
   1d576:	a0 80       	ld	r10, Z
   1d578:	b1 80       	ldd	r11, Z+1	; 0x01
   1d57a:	36 fe       	sbrs	r3, 6
   1d57c:	03 c0       	rjmp	.+6      	; 0x1d584 <vfprintf+0x16c>
   1d57e:	69 2d       	mov	r22, r9
   1d580:	70 e0       	ldi	r23, 0x00	; 0
   1d582:	02 c0       	rjmp	.+4      	; 0x1d588 <vfprintf+0x170>
   1d584:	6f ef       	ldi	r22, 0xFF	; 255
   1d586:	7f ef       	ldi	r23, 0xFF	; 255
   1d588:	c5 01       	movw	r24, r10
   1d58a:	4e d1       	rcall	.+668    	; 0x1d828 <strnlen>
   1d58c:	4c 01       	movw	r8, r24
   1d58e:	82 01       	movw	r16, r4
   1d590:	f3 2d       	mov	r31, r3
   1d592:	ff 77       	andi	r31, 0x7F	; 127
   1d594:	3f 2e       	mov	r3, r31
   1d596:	15 c0       	rjmp	.+42     	; 0x1d5c2 <vfprintf+0x1aa>
   1d598:	28 01       	movw	r4, r16
   1d59a:	22 e0       	ldi	r18, 0x02	; 2
   1d59c:	42 0e       	add	r4, r18
   1d59e:	51 1c       	adc	r5, r1
   1d5a0:	f8 01       	movw	r30, r16
   1d5a2:	a0 80       	ld	r10, Z
   1d5a4:	b1 80       	ldd	r11, Z+1	; 0x01
   1d5a6:	36 fe       	sbrs	r3, 6
   1d5a8:	03 c0       	rjmp	.+6      	; 0x1d5b0 <vfprintf+0x198>
   1d5aa:	69 2d       	mov	r22, r9
   1d5ac:	70 e0       	ldi	r23, 0x00	; 0
   1d5ae:	02 c0       	rjmp	.+4      	; 0x1d5b4 <vfprintf+0x19c>
   1d5b0:	6f ef       	ldi	r22, 0xFF	; 255
   1d5b2:	7f ef       	ldi	r23, 0xFF	; 255
   1d5b4:	c5 01       	movw	r24, r10
   1d5b6:	2d d1       	rcall	.+602    	; 0x1d812 <strnlen_P>
   1d5b8:	4c 01       	movw	r8, r24
   1d5ba:	f3 2d       	mov	r31, r3
   1d5bc:	f0 68       	ori	r31, 0x80	; 128
   1d5be:	3f 2e       	mov	r3, r31
   1d5c0:	82 01       	movw	r16, r4
   1d5c2:	33 fc       	sbrc	r3, 3
   1d5c4:	19 c0       	rjmp	.+50     	; 0x1d5f8 <vfprintf+0x1e0>
   1d5c6:	82 2d       	mov	r24, r2
   1d5c8:	90 e0       	ldi	r25, 0x00	; 0
   1d5ca:	88 16       	cp	r8, r24
   1d5cc:	99 06       	cpc	r9, r25
   1d5ce:	a0 f4       	brcc	.+40     	; 0x1d5f8 <vfprintf+0x1e0>
   1d5d0:	b6 01       	movw	r22, r12
   1d5d2:	80 e2       	ldi	r24, 0x20	; 32
   1d5d4:	90 e0       	ldi	r25, 0x00	; 0
   1d5d6:	33 d1       	rcall	.+614    	; 0x1d83e <fputc>
   1d5d8:	2a 94       	dec	r2
   1d5da:	f5 cf       	rjmp	.-22     	; 0x1d5c6 <vfprintf+0x1ae>
   1d5dc:	f5 01       	movw	r30, r10
   1d5de:	37 fc       	sbrc	r3, 7
   1d5e0:	85 91       	lpm	r24, Z+
   1d5e2:	37 fe       	sbrs	r3, 7
   1d5e4:	81 91       	ld	r24, Z+
   1d5e6:	5f 01       	movw	r10, r30
   1d5e8:	b6 01       	movw	r22, r12
   1d5ea:	90 e0       	ldi	r25, 0x00	; 0
   1d5ec:	28 d1       	rcall	.+592    	; 0x1d83e <fputc>
   1d5ee:	21 10       	cpse	r2, r1
   1d5f0:	2a 94       	dec	r2
   1d5f2:	21 e0       	ldi	r18, 0x01	; 1
   1d5f4:	82 1a       	sub	r8, r18
   1d5f6:	91 08       	sbc	r9, r1
   1d5f8:	81 14       	cp	r8, r1
   1d5fa:	91 04       	cpc	r9, r1
   1d5fc:	79 f7       	brne	.-34     	; 0x1d5dc <vfprintf+0x1c4>
   1d5fe:	e1 c0       	rjmp	.+450    	; 0x1d7c2 <vfprintf+0x3aa>
   1d600:	84 36       	cpi	r24, 0x64	; 100
   1d602:	11 f0       	breq	.+4      	; 0x1d608 <vfprintf+0x1f0>
   1d604:	89 36       	cpi	r24, 0x69	; 105
   1d606:	39 f5       	brne	.+78     	; 0x1d656 <vfprintf+0x23e>
   1d608:	f8 01       	movw	r30, r16
   1d60a:	37 fe       	sbrs	r3, 7
   1d60c:	07 c0       	rjmp	.+14     	; 0x1d61c <vfprintf+0x204>
   1d60e:	60 81       	ld	r22, Z
   1d610:	71 81       	ldd	r23, Z+1	; 0x01
   1d612:	82 81       	ldd	r24, Z+2	; 0x02
   1d614:	93 81       	ldd	r25, Z+3	; 0x03
   1d616:	0c 5f       	subi	r16, 0xFC	; 252
   1d618:	1f 4f       	sbci	r17, 0xFF	; 255
   1d61a:	08 c0       	rjmp	.+16     	; 0x1d62c <vfprintf+0x214>
   1d61c:	60 81       	ld	r22, Z
   1d61e:	71 81       	ldd	r23, Z+1	; 0x01
   1d620:	07 2e       	mov	r0, r23
   1d622:	00 0c       	add	r0, r0
   1d624:	88 0b       	sbc	r24, r24
   1d626:	99 0b       	sbc	r25, r25
   1d628:	0e 5f       	subi	r16, 0xFE	; 254
   1d62a:	1f 4f       	sbci	r17, 0xFF	; 255
   1d62c:	f3 2d       	mov	r31, r3
   1d62e:	ff 76       	andi	r31, 0x6F	; 111
   1d630:	3f 2e       	mov	r3, r31
   1d632:	97 ff       	sbrs	r25, 7
   1d634:	09 c0       	rjmp	.+18     	; 0x1d648 <vfprintf+0x230>
   1d636:	90 95       	com	r25
   1d638:	80 95       	com	r24
   1d63a:	70 95       	com	r23
   1d63c:	61 95       	neg	r22
   1d63e:	7f 4f       	sbci	r23, 0xFF	; 255
   1d640:	8f 4f       	sbci	r24, 0xFF	; 255
   1d642:	9f 4f       	sbci	r25, 0xFF	; 255
   1d644:	f0 68       	ori	r31, 0x80	; 128
   1d646:	3f 2e       	mov	r3, r31
   1d648:	2a e0       	ldi	r18, 0x0A	; 10
   1d64a:	30 e0       	ldi	r19, 0x00	; 0
   1d64c:	a3 01       	movw	r20, r6
   1d64e:	33 d1       	rcall	.+614    	; 0x1d8b6 <__ultoa_invert>
   1d650:	88 2e       	mov	r8, r24
   1d652:	86 18       	sub	r8, r6
   1d654:	44 c0       	rjmp	.+136    	; 0x1d6de <vfprintf+0x2c6>
   1d656:	85 37       	cpi	r24, 0x75	; 117
   1d658:	31 f4       	brne	.+12     	; 0x1d666 <vfprintf+0x24e>
   1d65a:	23 2d       	mov	r18, r3
   1d65c:	2f 7e       	andi	r18, 0xEF	; 239
   1d65e:	b2 2e       	mov	r11, r18
   1d660:	2a e0       	ldi	r18, 0x0A	; 10
   1d662:	30 e0       	ldi	r19, 0x00	; 0
   1d664:	25 c0       	rjmp	.+74     	; 0x1d6b0 <vfprintf+0x298>
   1d666:	93 2d       	mov	r25, r3
   1d668:	99 7f       	andi	r25, 0xF9	; 249
   1d66a:	b9 2e       	mov	r11, r25
   1d66c:	8f 36       	cpi	r24, 0x6F	; 111
   1d66e:	c1 f0       	breq	.+48     	; 0x1d6a0 <vfprintf+0x288>
   1d670:	18 f4       	brcc	.+6      	; 0x1d678 <vfprintf+0x260>
   1d672:	88 35       	cpi	r24, 0x58	; 88
   1d674:	79 f0       	breq	.+30     	; 0x1d694 <vfprintf+0x27c>
   1d676:	ae c0       	rjmp	.+348    	; 0x1d7d4 <vfprintf+0x3bc>
   1d678:	80 37       	cpi	r24, 0x70	; 112
   1d67a:	19 f0       	breq	.+6      	; 0x1d682 <vfprintf+0x26a>
   1d67c:	88 37       	cpi	r24, 0x78	; 120
   1d67e:	21 f0       	breq	.+8      	; 0x1d688 <vfprintf+0x270>
   1d680:	a9 c0       	rjmp	.+338    	; 0x1d7d4 <vfprintf+0x3bc>
   1d682:	e9 2f       	mov	r30, r25
   1d684:	e0 61       	ori	r30, 0x10	; 16
   1d686:	be 2e       	mov	r11, r30
   1d688:	b4 fe       	sbrs	r11, 4
   1d68a:	0d c0       	rjmp	.+26     	; 0x1d6a6 <vfprintf+0x28e>
   1d68c:	fb 2d       	mov	r31, r11
   1d68e:	f4 60       	ori	r31, 0x04	; 4
   1d690:	bf 2e       	mov	r11, r31
   1d692:	09 c0       	rjmp	.+18     	; 0x1d6a6 <vfprintf+0x28e>
   1d694:	34 fe       	sbrs	r3, 4
   1d696:	0a c0       	rjmp	.+20     	; 0x1d6ac <vfprintf+0x294>
   1d698:	29 2f       	mov	r18, r25
   1d69a:	26 60       	ori	r18, 0x06	; 6
   1d69c:	b2 2e       	mov	r11, r18
   1d69e:	06 c0       	rjmp	.+12     	; 0x1d6ac <vfprintf+0x294>
   1d6a0:	28 e0       	ldi	r18, 0x08	; 8
   1d6a2:	30 e0       	ldi	r19, 0x00	; 0
   1d6a4:	05 c0       	rjmp	.+10     	; 0x1d6b0 <vfprintf+0x298>
   1d6a6:	20 e1       	ldi	r18, 0x10	; 16
   1d6a8:	30 e0       	ldi	r19, 0x00	; 0
   1d6aa:	02 c0       	rjmp	.+4      	; 0x1d6b0 <vfprintf+0x298>
   1d6ac:	20 e1       	ldi	r18, 0x10	; 16
   1d6ae:	32 e0       	ldi	r19, 0x02	; 2
   1d6b0:	f8 01       	movw	r30, r16
   1d6b2:	b7 fe       	sbrs	r11, 7
   1d6b4:	07 c0       	rjmp	.+14     	; 0x1d6c4 <vfprintf+0x2ac>
   1d6b6:	60 81       	ld	r22, Z
   1d6b8:	71 81       	ldd	r23, Z+1	; 0x01
   1d6ba:	82 81       	ldd	r24, Z+2	; 0x02
   1d6bc:	93 81       	ldd	r25, Z+3	; 0x03
   1d6be:	0c 5f       	subi	r16, 0xFC	; 252
   1d6c0:	1f 4f       	sbci	r17, 0xFF	; 255
   1d6c2:	06 c0       	rjmp	.+12     	; 0x1d6d0 <vfprintf+0x2b8>
   1d6c4:	60 81       	ld	r22, Z
   1d6c6:	71 81       	ldd	r23, Z+1	; 0x01
   1d6c8:	80 e0       	ldi	r24, 0x00	; 0
   1d6ca:	90 e0       	ldi	r25, 0x00	; 0
   1d6cc:	0e 5f       	subi	r16, 0xFE	; 254
   1d6ce:	1f 4f       	sbci	r17, 0xFF	; 255
   1d6d0:	a3 01       	movw	r20, r6
   1d6d2:	f1 d0       	rcall	.+482    	; 0x1d8b6 <__ultoa_invert>
   1d6d4:	88 2e       	mov	r8, r24
   1d6d6:	86 18       	sub	r8, r6
   1d6d8:	fb 2d       	mov	r31, r11
   1d6da:	ff 77       	andi	r31, 0x7F	; 127
   1d6dc:	3f 2e       	mov	r3, r31
   1d6de:	36 fe       	sbrs	r3, 6
   1d6e0:	0d c0       	rjmp	.+26     	; 0x1d6fc <vfprintf+0x2e4>
   1d6e2:	23 2d       	mov	r18, r3
   1d6e4:	2e 7f       	andi	r18, 0xFE	; 254
   1d6e6:	a2 2e       	mov	r10, r18
   1d6e8:	89 14       	cp	r8, r9
   1d6ea:	58 f4       	brcc	.+22     	; 0x1d702 <vfprintf+0x2ea>
   1d6ec:	34 fe       	sbrs	r3, 4
   1d6ee:	0b c0       	rjmp	.+22     	; 0x1d706 <vfprintf+0x2ee>
   1d6f0:	32 fc       	sbrc	r3, 2
   1d6f2:	09 c0       	rjmp	.+18     	; 0x1d706 <vfprintf+0x2ee>
   1d6f4:	83 2d       	mov	r24, r3
   1d6f6:	8e 7e       	andi	r24, 0xEE	; 238
   1d6f8:	a8 2e       	mov	r10, r24
   1d6fa:	05 c0       	rjmp	.+10     	; 0x1d706 <vfprintf+0x2ee>
   1d6fc:	b8 2c       	mov	r11, r8
   1d6fe:	a3 2c       	mov	r10, r3
   1d700:	03 c0       	rjmp	.+6      	; 0x1d708 <vfprintf+0x2f0>
   1d702:	b8 2c       	mov	r11, r8
   1d704:	01 c0       	rjmp	.+2      	; 0x1d708 <vfprintf+0x2f0>
   1d706:	b9 2c       	mov	r11, r9
   1d708:	a4 fe       	sbrs	r10, 4
   1d70a:	0f c0       	rjmp	.+30     	; 0x1d72a <vfprintf+0x312>
   1d70c:	fe 01       	movw	r30, r28
   1d70e:	e8 0d       	add	r30, r8
   1d710:	f1 1d       	adc	r31, r1
   1d712:	80 81       	ld	r24, Z
   1d714:	80 33       	cpi	r24, 0x30	; 48
   1d716:	21 f4       	brne	.+8      	; 0x1d720 <vfprintf+0x308>
   1d718:	9a 2d       	mov	r25, r10
   1d71a:	99 7e       	andi	r25, 0xE9	; 233
   1d71c:	a9 2e       	mov	r10, r25
   1d71e:	09 c0       	rjmp	.+18     	; 0x1d732 <vfprintf+0x31a>
   1d720:	a2 fe       	sbrs	r10, 2
   1d722:	06 c0       	rjmp	.+12     	; 0x1d730 <vfprintf+0x318>
   1d724:	b3 94       	inc	r11
   1d726:	b3 94       	inc	r11
   1d728:	04 c0       	rjmp	.+8      	; 0x1d732 <vfprintf+0x31a>
   1d72a:	8a 2d       	mov	r24, r10
   1d72c:	86 78       	andi	r24, 0x86	; 134
   1d72e:	09 f0       	breq	.+2      	; 0x1d732 <vfprintf+0x31a>
   1d730:	b3 94       	inc	r11
   1d732:	a3 fc       	sbrc	r10, 3
   1d734:	10 c0       	rjmp	.+32     	; 0x1d756 <vfprintf+0x33e>
   1d736:	a0 fe       	sbrs	r10, 0
   1d738:	06 c0       	rjmp	.+12     	; 0x1d746 <vfprintf+0x32e>
   1d73a:	b2 14       	cp	r11, r2
   1d73c:	80 f4       	brcc	.+32     	; 0x1d75e <vfprintf+0x346>
   1d73e:	28 0c       	add	r2, r8
   1d740:	92 2c       	mov	r9, r2
   1d742:	9b 18       	sub	r9, r11
   1d744:	0d c0       	rjmp	.+26     	; 0x1d760 <vfprintf+0x348>
   1d746:	b2 14       	cp	r11, r2
   1d748:	58 f4       	brcc	.+22     	; 0x1d760 <vfprintf+0x348>
   1d74a:	b6 01       	movw	r22, r12
   1d74c:	80 e2       	ldi	r24, 0x20	; 32
   1d74e:	90 e0       	ldi	r25, 0x00	; 0
   1d750:	76 d0       	rcall	.+236    	; 0x1d83e <fputc>
   1d752:	b3 94       	inc	r11
   1d754:	f8 cf       	rjmp	.-16     	; 0x1d746 <vfprintf+0x32e>
   1d756:	b2 14       	cp	r11, r2
   1d758:	18 f4       	brcc	.+6      	; 0x1d760 <vfprintf+0x348>
   1d75a:	2b 18       	sub	r2, r11
   1d75c:	02 c0       	rjmp	.+4      	; 0x1d762 <vfprintf+0x34a>
   1d75e:	98 2c       	mov	r9, r8
   1d760:	21 2c       	mov	r2, r1
   1d762:	a4 fe       	sbrs	r10, 4
   1d764:	0f c0       	rjmp	.+30     	; 0x1d784 <vfprintf+0x36c>
   1d766:	b6 01       	movw	r22, r12
   1d768:	80 e3       	ldi	r24, 0x30	; 48
   1d76a:	90 e0       	ldi	r25, 0x00	; 0
   1d76c:	68 d0       	rcall	.+208    	; 0x1d83e <fputc>
   1d76e:	a2 fe       	sbrs	r10, 2
   1d770:	16 c0       	rjmp	.+44     	; 0x1d79e <vfprintf+0x386>
   1d772:	a1 fc       	sbrc	r10, 1
   1d774:	03 c0       	rjmp	.+6      	; 0x1d77c <vfprintf+0x364>
   1d776:	88 e7       	ldi	r24, 0x78	; 120
   1d778:	90 e0       	ldi	r25, 0x00	; 0
   1d77a:	02 c0       	rjmp	.+4      	; 0x1d780 <vfprintf+0x368>
   1d77c:	88 e5       	ldi	r24, 0x58	; 88
   1d77e:	90 e0       	ldi	r25, 0x00	; 0
   1d780:	b6 01       	movw	r22, r12
   1d782:	0c c0       	rjmp	.+24     	; 0x1d79c <vfprintf+0x384>
   1d784:	8a 2d       	mov	r24, r10
   1d786:	86 78       	andi	r24, 0x86	; 134
   1d788:	51 f0       	breq	.+20     	; 0x1d79e <vfprintf+0x386>
   1d78a:	a1 fe       	sbrs	r10, 1
   1d78c:	02 c0       	rjmp	.+4      	; 0x1d792 <vfprintf+0x37a>
   1d78e:	8b e2       	ldi	r24, 0x2B	; 43
   1d790:	01 c0       	rjmp	.+2      	; 0x1d794 <vfprintf+0x37c>
   1d792:	80 e2       	ldi	r24, 0x20	; 32
   1d794:	a7 fc       	sbrc	r10, 7
   1d796:	8d e2       	ldi	r24, 0x2D	; 45
   1d798:	b6 01       	movw	r22, r12
   1d79a:	90 e0       	ldi	r25, 0x00	; 0
   1d79c:	50 d0       	rcall	.+160    	; 0x1d83e <fputc>
   1d79e:	89 14       	cp	r8, r9
   1d7a0:	30 f4       	brcc	.+12     	; 0x1d7ae <vfprintf+0x396>
   1d7a2:	b6 01       	movw	r22, r12
   1d7a4:	80 e3       	ldi	r24, 0x30	; 48
   1d7a6:	90 e0       	ldi	r25, 0x00	; 0
   1d7a8:	4a d0       	rcall	.+148    	; 0x1d83e <fputc>
   1d7aa:	9a 94       	dec	r9
   1d7ac:	f8 cf       	rjmp	.-16     	; 0x1d79e <vfprintf+0x386>
   1d7ae:	8a 94       	dec	r8
   1d7b0:	f3 01       	movw	r30, r6
   1d7b2:	e8 0d       	add	r30, r8
   1d7b4:	f1 1d       	adc	r31, r1
   1d7b6:	80 81       	ld	r24, Z
   1d7b8:	b6 01       	movw	r22, r12
   1d7ba:	90 e0       	ldi	r25, 0x00	; 0
   1d7bc:	40 d0       	rcall	.+128    	; 0x1d83e <fputc>
   1d7be:	81 10       	cpse	r8, r1
   1d7c0:	f6 cf       	rjmp	.-20     	; 0x1d7ae <vfprintf+0x396>
   1d7c2:	22 20       	and	r2, r2
   1d7c4:	09 f4       	brne	.+2      	; 0x1d7c8 <vfprintf+0x3b0>
   1d7c6:	4e ce       	rjmp	.-868    	; 0x1d464 <vfprintf+0x4c>
   1d7c8:	b6 01       	movw	r22, r12
   1d7ca:	80 e2       	ldi	r24, 0x20	; 32
   1d7cc:	90 e0       	ldi	r25, 0x00	; 0
   1d7ce:	37 d0       	rcall	.+110    	; 0x1d83e <fputc>
   1d7d0:	2a 94       	dec	r2
   1d7d2:	f7 cf       	rjmp	.-18     	; 0x1d7c2 <vfprintf+0x3aa>
   1d7d4:	f6 01       	movw	r30, r12
   1d7d6:	86 81       	ldd	r24, Z+6	; 0x06
   1d7d8:	97 81       	ldd	r25, Z+7	; 0x07
   1d7da:	02 c0       	rjmp	.+4      	; 0x1d7e0 <vfprintf+0x3c8>
   1d7dc:	8f ef       	ldi	r24, 0xFF	; 255
   1d7de:	9f ef       	ldi	r25, 0xFF	; 255
   1d7e0:	2b 96       	adiw	r28, 0x0b	; 11
   1d7e2:	0f b6       	in	r0, 0x3f	; 63
   1d7e4:	f8 94       	cli
   1d7e6:	de bf       	out	0x3e, r29	; 62
   1d7e8:	0f be       	out	0x3f, r0	; 63
   1d7ea:	cd bf       	out	0x3d, r28	; 61
   1d7ec:	df 91       	pop	r29
   1d7ee:	cf 91       	pop	r28
   1d7f0:	1f 91       	pop	r17
   1d7f2:	0f 91       	pop	r16
   1d7f4:	ff 90       	pop	r15
   1d7f6:	ef 90       	pop	r14
   1d7f8:	df 90       	pop	r13
   1d7fa:	cf 90       	pop	r12
   1d7fc:	bf 90       	pop	r11
   1d7fe:	af 90       	pop	r10
   1d800:	9f 90       	pop	r9
   1d802:	8f 90       	pop	r8
   1d804:	7f 90       	pop	r7
   1d806:	6f 90       	pop	r6
   1d808:	5f 90       	pop	r5
   1d80a:	4f 90       	pop	r4
   1d80c:	3f 90       	pop	r3
   1d80e:	2f 90       	pop	r2
   1d810:	08 95       	ret

0001d812 <strnlen_P>:
   1d812:	fc 01       	movw	r30, r24
   1d814:	05 90       	lpm	r0, Z+
   1d816:	61 50       	subi	r22, 0x01	; 1
   1d818:	70 40       	sbci	r23, 0x00	; 0
   1d81a:	01 10       	cpse	r0, r1
   1d81c:	d8 f7       	brcc	.-10     	; 0x1d814 <strnlen_P+0x2>
   1d81e:	80 95       	com	r24
   1d820:	90 95       	com	r25
   1d822:	8e 0f       	add	r24, r30
   1d824:	9f 1f       	adc	r25, r31
   1d826:	08 95       	ret

0001d828 <strnlen>:
   1d828:	fc 01       	movw	r30, r24
   1d82a:	61 50       	subi	r22, 0x01	; 1
   1d82c:	70 40       	sbci	r23, 0x00	; 0
   1d82e:	01 90       	ld	r0, Z+
   1d830:	01 10       	cpse	r0, r1
   1d832:	d8 f7       	brcc	.-10     	; 0x1d82a <strnlen+0x2>
   1d834:	80 95       	com	r24
   1d836:	90 95       	com	r25
   1d838:	8e 0f       	add	r24, r30
   1d83a:	9f 1f       	adc	r25, r31
   1d83c:	08 95       	ret

0001d83e <fputc>:
   1d83e:	0f 93       	push	r16
   1d840:	1f 93       	push	r17
   1d842:	cf 93       	push	r28
   1d844:	df 93       	push	r29
   1d846:	fb 01       	movw	r30, r22
   1d848:	23 81       	ldd	r18, Z+3	; 0x03
   1d84a:	21 fd       	sbrc	r18, 1
   1d84c:	03 c0       	rjmp	.+6      	; 0x1d854 <fputc+0x16>
   1d84e:	8f ef       	ldi	r24, 0xFF	; 255
   1d850:	9f ef       	ldi	r25, 0xFF	; 255
   1d852:	2c c0       	rjmp	.+88     	; 0x1d8ac <fputc+0x6e>
   1d854:	22 ff       	sbrs	r18, 2
   1d856:	16 c0       	rjmp	.+44     	; 0x1d884 <fputc+0x46>
   1d858:	46 81       	ldd	r20, Z+6	; 0x06
   1d85a:	57 81       	ldd	r21, Z+7	; 0x07
   1d85c:	24 81       	ldd	r18, Z+4	; 0x04
   1d85e:	35 81       	ldd	r19, Z+5	; 0x05
   1d860:	42 17       	cp	r20, r18
   1d862:	53 07       	cpc	r21, r19
   1d864:	44 f4       	brge	.+16     	; 0x1d876 <fputc+0x38>
   1d866:	a0 81       	ld	r26, Z
   1d868:	b1 81       	ldd	r27, Z+1	; 0x01
   1d86a:	9d 01       	movw	r18, r26
   1d86c:	2f 5f       	subi	r18, 0xFF	; 255
   1d86e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d870:	31 83       	std	Z+1, r19	; 0x01
   1d872:	20 83       	st	Z, r18
   1d874:	8c 93       	st	X, r24
   1d876:	26 81       	ldd	r18, Z+6	; 0x06
   1d878:	37 81       	ldd	r19, Z+7	; 0x07
   1d87a:	2f 5f       	subi	r18, 0xFF	; 255
   1d87c:	3f 4f       	sbci	r19, 0xFF	; 255
   1d87e:	37 83       	std	Z+7, r19	; 0x07
   1d880:	26 83       	std	Z+6, r18	; 0x06
   1d882:	14 c0       	rjmp	.+40     	; 0x1d8ac <fputc+0x6e>
   1d884:	8b 01       	movw	r16, r22
   1d886:	ec 01       	movw	r28, r24
   1d888:	fb 01       	movw	r30, r22
   1d88a:	00 84       	ldd	r0, Z+8	; 0x08
   1d88c:	f1 85       	ldd	r31, Z+9	; 0x09
   1d88e:	e0 2d       	mov	r30, r0
   1d890:	19 95       	eicall
   1d892:	89 2b       	or	r24, r25
   1d894:	e1 f6       	brne	.-72     	; 0x1d84e <fputc+0x10>
   1d896:	d8 01       	movw	r26, r16
   1d898:	16 96       	adiw	r26, 0x06	; 6
   1d89a:	8d 91       	ld	r24, X+
   1d89c:	9c 91       	ld	r25, X
   1d89e:	17 97       	sbiw	r26, 0x07	; 7
   1d8a0:	01 96       	adiw	r24, 0x01	; 1
   1d8a2:	17 96       	adiw	r26, 0x07	; 7
   1d8a4:	9c 93       	st	X, r25
   1d8a6:	8e 93       	st	-X, r24
   1d8a8:	16 97       	sbiw	r26, 0x06	; 6
   1d8aa:	ce 01       	movw	r24, r28
   1d8ac:	df 91       	pop	r29
   1d8ae:	cf 91       	pop	r28
   1d8b0:	1f 91       	pop	r17
   1d8b2:	0f 91       	pop	r16
   1d8b4:	08 95       	ret

0001d8b6 <__ultoa_invert>:
   1d8b6:	fa 01       	movw	r30, r20
   1d8b8:	aa 27       	eor	r26, r26
   1d8ba:	28 30       	cpi	r18, 0x08	; 8
   1d8bc:	51 f1       	breq	.+84     	; 0x1d912 <__ultoa_invert+0x5c>
   1d8be:	20 31       	cpi	r18, 0x10	; 16
   1d8c0:	81 f1       	breq	.+96     	; 0x1d922 <__ultoa_invert+0x6c>
   1d8c2:	e8 94       	clt
   1d8c4:	6f 93       	push	r22
   1d8c6:	6e 7f       	andi	r22, 0xFE	; 254
   1d8c8:	6e 5f       	subi	r22, 0xFE	; 254
   1d8ca:	7f 4f       	sbci	r23, 0xFF	; 255
   1d8cc:	8f 4f       	sbci	r24, 0xFF	; 255
   1d8ce:	9f 4f       	sbci	r25, 0xFF	; 255
   1d8d0:	af 4f       	sbci	r26, 0xFF	; 255
   1d8d2:	b1 e0       	ldi	r27, 0x01	; 1
   1d8d4:	3e d0       	rcall	.+124    	; 0x1d952 <__ultoa_invert+0x9c>
   1d8d6:	b4 e0       	ldi	r27, 0x04	; 4
   1d8d8:	3c d0       	rcall	.+120    	; 0x1d952 <__ultoa_invert+0x9c>
   1d8da:	67 0f       	add	r22, r23
   1d8dc:	78 1f       	adc	r23, r24
   1d8de:	89 1f       	adc	r24, r25
   1d8e0:	9a 1f       	adc	r25, r26
   1d8e2:	a1 1d       	adc	r26, r1
   1d8e4:	68 0f       	add	r22, r24
   1d8e6:	79 1f       	adc	r23, r25
   1d8e8:	8a 1f       	adc	r24, r26
   1d8ea:	91 1d       	adc	r25, r1
   1d8ec:	a1 1d       	adc	r26, r1
   1d8ee:	6a 0f       	add	r22, r26
   1d8f0:	71 1d       	adc	r23, r1
   1d8f2:	81 1d       	adc	r24, r1
   1d8f4:	91 1d       	adc	r25, r1
   1d8f6:	a1 1d       	adc	r26, r1
   1d8f8:	20 d0       	rcall	.+64     	; 0x1d93a <__ultoa_invert+0x84>
   1d8fa:	09 f4       	brne	.+2      	; 0x1d8fe <__ultoa_invert+0x48>
   1d8fc:	68 94       	set
   1d8fe:	3f 91       	pop	r19
   1d900:	2a e0       	ldi	r18, 0x0A	; 10
   1d902:	26 9f       	mul	r18, r22
   1d904:	11 24       	eor	r1, r1
   1d906:	30 19       	sub	r19, r0
   1d908:	30 5d       	subi	r19, 0xD0	; 208
   1d90a:	31 93       	st	Z+, r19
   1d90c:	de f6       	brtc	.-74     	; 0x1d8c4 <__ultoa_invert+0xe>
   1d90e:	cf 01       	movw	r24, r30
   1d910:	08 95       	ret
   1d912:	46 2f       	mov	r20, r22
   1d914:	47 70       	andi	r20, 0x07	; 7
   1d916:	40 5d       	subi	r20, 0xD0	; 208
   1d918:	41 93       	st	Z+, r20
   1d91a:	b3 e0       	ldi	r27, 0x03	; 3
   1d91c:	0f d0       	rcall	.+30     	; 0x1d93c <__ultoa_invert+0x86>
   1d91e:	c9 f7       	brne	.-14     	; 0x1d912 <__ultoa_invert+0x5c>
   1d920:	f6 cf       	rjmp	.-20     	; 0x1d90e <__ultoa_invert+0x58>
   1d922:	46 2f       	mov	r20, r22
   1d924:	4f 70       	andi	r20, 0x0F	; 15
   1d926:	40 5d       	subi	r20, 0xD0	; 208
   1d928:	4a 33       	cpi	r20, 0x3A	; 58
   1d92a:	18 f0       	brcs	.+6      	; 0x1d932 <__ultoa_invert+0x7c>
   1d92c:	49 5d       	subi	r20, 0xD9	; 217
   1d92e:	31 fd       	sbrc	r19, 1
   1d930:	40 52       	subi	r20, 0x20	; 32
   1d932:	41 93       	st	Z+, r20
   1d934:	02 d0       	rcall	.+4      	; 0x1d93a <__ultoa_invert+0x84>
   1d936:	a9 f7       	brne	.-22     	; 0x1d922 <__ultoa_invert+0x6c>
   1d938:	ea cf       	rjmp	.-44     	; 0x1d90e <__ultoa_invert+0x58>
   1d93a:	b4 e0       	ldi	r27, 0x04	; 4
   1d93c:	a6 95       	lsr	r26
   1d93e:	97 95       	ror	r25
   1d940:	87 95       	ror	r24
   1d942:	77 95       	ror	r23
   1d944:	67 95       	ror	r22
   1d946:	ba 95       	dec	r27
   1d948:	c9 f7       	brne	.-14     	; 0x1d93c <__ultoa_invert+0x86>
   1d94a:	00 97       	sbiw	r24, 0x00	; 0
   1d94c:	61 05       	cpc	r22, r1
   1d94e:	71 05       	cpc	r23, r1
   1d950:	08 95       	ret
   1d952:	9b 01       	movw	r18, r22
   1d954:	ac 01       	movw	r20, r24
   1d956:	0a 2e       	mov	r0, r26
   1d958:	06 94       	lsr	r0
   1d95a:	57 95       	ror	r21
   1d95c:	47 95       	ror	r20
   1d95e:	37 95       	ror	r19
   1d960:	27 95       	ror	r18
   1d962:	ba 95       	dec	r27
   1d964:	c9 f7       	brne	.-14     	; 0x1d958 <__ultoa_invert+0xa2>
   1d966:	62 0f       	add	r22, r18
   1d968:	73 1f       	adc	r23, r19
   1d96a:	84 1f       	adc	r24, r20
   1d96c:	95 1f       	adc	r25, r21
   1d96e:	a0 1d       	adc	r26, r0
   1d970:	08 95       	ret

0001d972 <eeprom_read_byte>:
   1d972:	f9 99       	sbic	0x1f, 1	; 31
   1d974:	fe cf       	rjmp	.-4      	; 0x1d972 <eeprom_read_byte>
   1d976:	92 bd       	out	0x22, r25	; 34
   1d978:	81 bd       	out	0x21, r24	; 33
   1d97a:	f8 9a       	sbi	0x1f, 0	; 31
   1d97c:	99 27       	eor	r25, r25
   1d97e:	80 b5       	in	r24, 0x20	; 32
   1d980:	08 95       	ret

0001d982 <eeprom_write_byte>:
   1d982:	26 2f       	mov	r18, r22

0001d984 <eeprom_write_r18>:
   1d984:	f9 99       	sbic	0x1f, 1	; 31
   1d986:	fe cf       	rjmp	.-4      	; 0x1d984 <eeprom_write_r18>
   1d988:	1f ba       	out	0x1f, r1	; 31
   1d98a:	92 bd       	out	0x22, r25	; 34
   1d98c:	81 bd       	out	0x21, r24	; 33
   1d98e:	20 bd       	out	0x20, r18	; 32
   1d990:	0f b6       	in	r0, 0x3f	; 63
   1d992:	f8 94       	cli
   1d994:	fa 9a       	sbi	0x1f, 2	; 31
   1d996:	f9 9a       	sbi	0x1f, 1	; 31
   1d998:	0f be       	out	0x3f, r0	; 63
   1d99a:	01 96       	adiw	r24, 0x01	; 1
   1d99c:	08 95       	ret

0001d99e <__mulshisi3>:
   1d99e:	b7 ff       	sbrs	r27, 7
   1d9a0:	e1 ca       	rjmp	.-2622   	; 0x1cf64 <__muluhisi3>

0001d9a2 <__mulohisi3>:
   1d9a2:	e0 da       	rcall	.-2624   	; 0x1cf64 <__muluhisi3>
   1d9a4:	82 1b       	sub	r24, r18
   1d9a6:	93 0b       	sbc	r25, r19
   1d9a8:	08 95       	ret

0001d9aa <_exit>:
   1d9aa:	f8 94       	cli

0001d9ac <__stop_program>:
   1d9ac:	ff cf       	rjmp	.-2      	; 0x1d9ac <__stop_program>
