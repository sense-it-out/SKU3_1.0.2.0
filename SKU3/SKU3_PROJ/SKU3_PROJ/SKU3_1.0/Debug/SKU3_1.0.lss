
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000716  00800200  0001e264  0001e2f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001e264  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001013  00800916  00800916  0001ea0e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001ea0e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001ea6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011f8  00000000  00000000  0001eab0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00048e3b  00000000  00000000  0001fca8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00007e37  00000000  00000000  00068ae3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0001708a  00000000  00000000  0007091a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00004130  00000000  00000000  000879a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014de0  00000000  00000000  0008bad4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001a23a  00000000  00000000  000a08b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001578  00000000  00000000  000baaee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__ctors_end>
       4:	0c 94 8e e3 	jmp	0x1c71c	; 0x1c71c <__vector_1>
       8:	0c 94 b9 e3 	jmp	0x1c772	; 0x1c772 <__vector_2>
       c:	0c 94 e4 e3 	jmp	0x1c7c8	; 0x1c7c8 <__vector_3>
      10:	0c 94 0f e4 	jmp	0x1c81e	; 0x1c81e <__vector_4>
      14:	0c 94 3a e4 	jmp	0x1c874	; 0x1c874 <__vector_5>
      18:	0c 94 65 e4 	jmp	0x1c8ca	; 0x1c8ca <__vector_6>
      1c:	0c 94 90 e4 	jmp	0x1c920	; 0x1c920 <__vector_7>
      20:	0c 94 bb e4 	jmp	0x1c976	; 0x1c976 <__vector_8>
      24:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      28:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      2c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      30:	0c 94 78 63 	jmp	0xc6f0	; 0xc6f0 <__vector_12>
      34:	0c 94 82 65 	jmp	0xcb04	; 0xcb04 <__vector_13>
      38:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      3c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      40:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      44:	0c 94 ce 63 	jmp	0xc79c	; 0xc79c <__vector_17>
      48:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      4c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      50:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      54:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      58:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      5c:	0c 94 6d d7 	jmp	0x1aeda	; 0x1aeda <__vector_23>
      60:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      64:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      68:	0c 94 80 d4 	jmp	0x1a900	; 0x1a900 <__vector_26>
      6c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      70:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      74:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      78:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      7c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      80:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      84:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      88:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      8c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      90:	0c 94 43 63 	jmp	0xc686	; 0xc686 <__vector_36>
      94:	0c 94 d6 d4 	jmp	0x1a9ac	; 0x1a9ac <__vector_37>
      98:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      9c:	0c 94 8b e8 	jmp	0x1d116	; 0x1d116 <__vector_39>
      a0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      a4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      a8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      ac:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      bc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      cc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      dc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      e0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      e4:	e6 32       	cpi	r30, 0x26	; 38
      e6:	e6 32       	cpi	r30, 0x26	; 38
      e8:	1c 33       	cpi	r17, 0x3C	; 60
      ea:	e6 32       	cpi	r30, 0x26	; 38
      ec:	04 33       	cpi	r16, 0x34	; 52
      ee:	e6 32       	cpi	r30, 0x26	; 38
      f0:	04 33       	cpi	r16, 0x34	; 52
      f2:	e6 32       	cpi	r30, 0x26	; 38
      f4:	e6 32       	cpi	r30, 0x26	; 38
      f6:	04 33       	cpi	r16, 0x34	; 52
      f8:	e6 32       	cpi	r30, 0x26	; 38
      fa:	04 33       	cpi	r16, 0x34	; 52
      fc:	f3 32       	cpi	r31, 0x23	; 35
      fe:	f5 32       	cpi	r31, 0x25	; 37
     100:	f8 32       	cpi	r31, 0x28	; 40
     102:	fa 32       	cpi	r31, 0x2A	; 42
     104:	f8 32       	cpi	r31, 0x28	; 40
     106:	fc 32       	cpi	r31, 0x2C	; 44
     108:	f8 32       	cpi	r31, 0x28	; 40
     10a:	fe 32       	cpi	r31, 0x2E	; 46
     10c:	00 33       	cpi	r16, 0x30	; 48
     10e:	f8 32       	cpi	r31, 0x28	; 40
     110:	02 33       	cpi	r16, 0x32	; 50
     112:	da 33       	cpi	r29, 0x3A	; 58
     114:	dc 33       	cpi	r29, 0x3C	; 60
     116:	de 33       	cpi	r29, 0x3E	; 62
     118:	e5 33       	cpi	r30, 0x35	; 53
     11a:	e7 33       	cpi	r30, 0x37	; 55
     11c:	e9 33       	cpi	r30, 0x39	; 57
     11e:	eb 33       	cpi	r30, 0x3B	; 59
     120:	ed 33       	cpi	r30, 0x3D	; 61
     122:	ef 33       	cpi	r30, 0x3F	; 63
     124:	f1 33       	cpi	r31, 0x31	; 49
     126:	f3 33       	cpi	r31, 0x33	; 51
     128:	f6 33       	cpi	r31, 0x36	; 54
     12a:	02 34       	cpi	r16, 0x42	; 66
     12c:	06 34       	cpi	r16, 0x46	; 70
     12e:	0a 34       	cpi	r16, 0x4A	; 74
     130:	13 34       	cpi	r17, 0x43	; 67
     132:	17 34       	cpi	r17, 0x47	; 71
     134:	1b 34       	cpi	r17, 0x4B	; 75
     136:	1f 34       	cpi	r17, 0x4F	; 79
     138:	23 34       	cpi	r18, 0x43	; 67
     13a:	27 34       	cpi	r18, 0x47	; 71
     13c:	2b 34       	cpi	r18, 0x4B	; 75
     13e:	2f 34       	cpi	r18, 0x4F	; 79
     140:	33 34       	cpi	r19, 0x43	; 67
     142:	26 35       	cpi	r18, 0x56	; 86
     144:	07 36       	cpi	r16, 0x67	; 103
     146:	5e 35       	cpi	r21, 0x5E	; 94
     148:	4e 36       	cpi	r20, 0x6E	; 110
     14a:	7f 35       	cpi	r23, 0x5F	; 95
     14c:	70 36       	cpi	r23, 0x60	; 96
     14e:	a1 35       	cpi	r26, 0x51	; 81
     150:	c3 35       	cpi	r28, 0x53	; 83
     152:	92 36       	cpi	r25, 0x62	; 98
     154:	e5 35       	cpi	r30, 0x55	; 85
     156:	b2 36       	cpi	r27, 0x62	; 98
     158:	fe 34       	cpi	r31, 0x4E	; 78
     15a:	37 37       	cpi	r19, 0x77	; 119
     15c:	fc 37       	cpi	r31, 0x7C	; 124
     15e:	57 37       	cpi	r21, 0x77	; 119
     160:	41 38       	cpi	r20, 0x81	; 129
     162:	78 37       	cpi	r23, 0x78	; 120
     164:	62 38       	cpi	r22, 0x82	; 130
     166:	99 37       	cpi	r25, 0x79	; 121
     168:	ba 37       	cpi	r27, 0x7A	; 122
     16a:	83 38       	cpi	r24, 0x83	; 131
     16c:	db 37       	cpi	r29, 0x7B	; 123
     16e:	a3 38       	cpi	r26, 0x83	; 131
     170:	01 37       	cpi	r16, 0x71	; 113
     172:	eb 39       	cpi	r30, 0x9B	; 155
     174:	ab 3a       	cpi	r26, 0xAB	; 171
     176:	0b 3a       	cpi	r16, 0xAB	; 171
     178:	ee 3a       	cpi	r30, 0xAE	; 174
     17a:	2b 3a       	cpi	r18, 0xAB	; 171
     17c:	0e 3b       	cpi	r16, 0xBE	; 190
     17e:	4b 3a       	cpi	r20, 0xAB	; 171
     180:	6b 3a       	cpi	r22, 0xAB	; 171
     182:	2e 3b       	cpi	r18, 0xBE	; 190
     184:	8b 3a       	cpi	r24, 0xAB	; 171
     186:	4d 3b       	cpi	r20, 0xBD	; 189
     188:	c3 39       	cpi	r28, 0x93	; 147
     18a:	d3 3b       	cpi	r29, 0xB3	; 179
     18c:	8d 3c       	cpi	r24, 0xCD	; 205
     18e:	f2 3b       	cpi	r31, 0xB2	; 178
     190:	ce 3c       	cpi	r28, 0xCE	; 206
     192:	11 3c       	cpi	r17, 0xC1	; 193
     194:	ed 3c       	cpi	r30, 0xCD	; 205
     196:	30 3c       	cpi	r19, 0xC0	; 192
     198:	4f 3c       	cpi	r20, 0xCF	; 207
     19a:	0c 3d       	cpi	r16, 0xDC	; 220
     19c:	6e 3c       	cpi	r22, 0xCE	; 206
     19e:	32 3d       	cpi	r19, 0xD2	; 210
     1a0:	b6 3b       	cpi	r27, 0xB6	; 182
     1a2:	b0 46       	sbci	r27, 0x60	; 96
     1a4:	63 46       	sbci	r22, 0x63	; 99
     1a6:	7d 46       	sbci	r23, 0x6D	; 109
     1a8:	ad 46       	sbci	r26, 0x6D	; 109
     1aa:	b0 46       	sbci	r27, 0x60	; 96
     1ac:	ad 46       	sbci	r26, 0x6D	; 109
     1ae:	b0 46       	sbci	r27, 0x60	; 96
     1b0:	b0 46       	sbci	r27, 0x60	; 96
     1b2:	ad 46       	sbci	r26, 0x6D	; 109
     1b4:	b0 46       	sbci	r27, 0x60	; 96
     1b6:	ad 46       	sbci	r26, 0x6D	; 109
     1b8:	b0 46       	sbci	r27, 0x60	; 96
     1ba:	af 6c       	ori	r26, 0xCF	; 207
     1bc:	b5 6c       	ori	r27, 0xC5	; 197
     1be:	be 6c       	ori	r27, 0xCE	; 206
     1c0:	cb 6c       	ori	r28, 0xCB	; 203
     1c2:	da 6c       	ori	r29, 0xCA	; 202
     1c4:	e7 6c       	ori	r30, 0xC7	; 199
     1c6:	f4 6c       	ori	r31, 0xC4	; 196
     1c8:	02 6d       	ori	r16, 0xD2	; 210
     1ca:	09 6d       	ori	r16, 0xD9	; 217
     1cc:	14 6d       	ori	r17, 0xD4	; 212
     1ce:	7b 93       	.word	0x937b	; ????
     1d0:	71 93       	st	Z+, r23
     1d2:	8f 93       	push	r24
     1d4:	82 93       	st	-Z, r24
     1d6:	7f 93       	push	r23
     1d8:	47 93       	lat	Z, r20
     1da:	69 93       	st	Y+, r22
     1dc:	3c 93       	st	X, r19
     1de:	13 9d       	mul	r17, r3
     1e0:	23 9e       	mul	r2, r19
     1e2:	46 9e       	mul	r4, r22
     1e4:	60 9e       	mul	r6, r16
     1e6:	93 9e       	mul	r9, r19
     1e8:	ab 9e       	mul	r10, r27
     1ea:	c2 9e       	mul	r12, r18
     1ec:	d7 9e       	mul	r13, r23
     1ee:	aa d8       	rcall	.-3756   	; 0xfffff344 <__eeprom_end+0xff7ef344>
     1f0:	ad d8       	rcall	.-3750   	; 0xfffff34c <__eeprom_end+0xff7ef34c>
     1f2:	9c d8       	rcall	.-3784   	; 0xfffff32c <__eeprom_end+0xff7ef32c>
     1f4:	a0 d8       	rcall	.-3776   	; 0xfffff336 <__eeprom_end+0xff7ef336>
     1f6:	a6 d8       	rcall	.-3764   	; 0xfffff344 <__eeprom_end+0xff7ef344>
     1f8:	e4 d8       	rcall	.-3640   	; 0xfffff3c2 <__eeprom_end+0xff7ef3c2>
     1fa:	b1 d8       	rcall	.-3742   	; 0xfffff35e <__eeprom_end+0xff7ef35e>
     1fc:	b5 d8       	rcall	.-3734   	; 0xfffff368 <__eeprom_end+0xff7ef368>
     1fe:	bb d8       	rcall	.-3722   	; 0xfffff376 <__eeprom_end+0xff7ef376>
     200:	bf d8       	rcall	.-3714   	; 0xfffff380 <__eeprom_end+0xff7ef380>
     202:	c3 d8       	rcall	.-3706   	; 0xfffff38a <__eeprom_end+0xff7ef38a>
     204:	c9 d8       	rcall	.-3694   	; 0xfffff398 <__eeprom_end+0xff7ef398>
     206:	cd d8       	rcall	.-3686   	; 0xfffff3a2 <__eeprom_end+0xff7ef3a2>
     208:	d1 d8       	rcall	.-3678   	; 0xfffff3ac <__eeprom_end+0xff7ef3ac>
     20a:	e4 d8       	rcall	.-3640   	; 0xfffff3d4 <__eeprom_end+0xff7ef3d4>
     20c:	d7 d8       	rcall	.-3666   	; 0xfffff3bc <__eeprom_end+0xff7ef3bc>
     20e:	db d8       	rcall	.-3658   	; 0xfffff3c6 <__eeprom_end+0xff7ef3c6>
     210:	df d8       	rcall	.-3650   	; 0xfffff3d0 <__eeprom_end+0xff7ef3d0>
     212:	09 e2       	ldi	r16, 0x29	; 41
     214:	f6 e1       	ldi	r31, 0x16	; 22
     216:	f8 e1       	ldi	r31, 0x18	; 24
     218:	fa e1       	ldi	r31, 0x1A	; 26
     21a:	fc e1       	ldi	r31, 0x1C	; 28
     21c:	fe e1       	ldi	r31, 0x1E	; 30
     21e:	00 e2       	ldi	r16, 0x20	; 32
     220:	02 e2       	ldi	r16, 0x22	; 34
     222:	68 e3       	ldi	r22, 0x38	; 56
     224:	32 e3       	ldi	r19, 0x32	; 50
     226:	3a e3       	ldi	r19, 0x3A	; 58
     228:	46 e3       	ldi	r20, 0x36	; 54
     22a:	53 e3       	ldi	r21, 0x33	; 51
     22c:	74 e3       	ldi	r23, 0x34	; 52
     22e:	81 e3       	ldi	r24, 0x31	; 49
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_3>:
     c2a:	43 75 72 72 65 6e 74 20 64 61 74 65 20 3a 20 00     Current date : .

00000c3a <_ZZ18Next_Day_CalculatehhE3__c_2>:
     c3a:	52 65 71 75 69 72 65 64 20 64 61 74 65 20 3a 20     Required date : 
	...

00000c4b <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c4b:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c5b:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c6b:	3a 20 00                                            : .

00000c6e <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c6e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c7f <_ZZ18Next_Day_CalculatehhE3__c>:
     c7f:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c90 <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c90:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     ca0:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     cb0:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cc0:	23 23 23 23 23 23 23 00                             #######.

00000cc8 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     cc8:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cd8:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     ce8:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cf8:	23 23 23 23 23 23 23 23 23 00                       #########.

00000d02 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     d02:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     d12:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d22:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d32:	23 23 23 23 23 23 23 00                             #######.

00000d3a <_ZZ18Edited_In_SchedulevE3__c_21>:
     d3a:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d4a:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d5a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d6a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d7a:	2f 2f 2f 2f 00                                      ////.

00000d7f <_ZZ18Edited_In_SchedulevE3__c_20>:
     d7f:	6d 79 20 31 34 00                                   my 14.

00000d85 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d85:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d95:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     da5:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     db5:	3a 00                                               :.

00000db7 <_ZZ18Edited_In_SchedulevE3__c_18>:
     db7:	6d 79 20 39 00                                      my 9.

00000dbc <_ZZ18Edited_In_SchedulevE3__c_17>:
     dbc:	6d 79 20 38 00                                      my 8.

00000dc1 <_ZZ18Edited_In_SchedulevE3__c_16>:
     dc1:	6d 79 20 37 00                                      my 7.

00000dc6 <_ZZ18Edited_In_SchedulevE3__c_15>:
     dc6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dd6:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     de6:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     df6:	3a 00                                               :.

00000df8 <_ZZ18Edited_In_SchedulevE3__c_14>:
     df8:	6d 79 20 36 2e 32 00                                my 6.2.

00000dff <_ZZ18Edited_In_SchedulevE3__c_13>:
     dff:	6d 79 20 36 2e 31 00                                my 6.1.

00000e06 <_ZZ18Edited_In_SchedulevE3__c_12>:
     e06:	6d 79 20 36 00                                      my 6.

00000e0b <_ZZ18Edited_In_SchedulevE3__c_11>:
     e0b:	6d 79 20 35 00                                      my 5.

00000e10 <_ZZ18Edited_In_SchedulevE3__c_10>:
     e10:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     e20:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e30:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e40:	3a 00                                               :.

00000e42 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e42:	6d 79 20 34 00                                      my 4.

00000e47 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e47:	6d 79 20 33 00                                      my 3.

00000e4c <_ZZ18Edited_In_SchedulevE3__c_7>:
     e4c:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e5c:	20 3a 00                                             :.

00000e5f <_ZZ18Edited_In_SchedulevE3__c_6>:
     e5f:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e6f:	20 3a 00                                             :.

00000e72 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e72:	6d 79 20 32 00                                      my 2.

00000e77 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e77:	6d 79 20 31 00                                      my 1.

00000e7c <_ZZ18Edited_In_SchedulevE3__c_3>:
     e7c:	6d 79 20 30 00                                      my 0.

00000e81 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e81:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e91:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     ea1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     eb1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ec1:	2f 2f 2f 2f 00                                      ////.

00000ec6 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ec6:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     ed6:	74 68 20 00                                         th .

00000eda <_ZZ18Edited_In_SchedulevE3__c_0>:
     eda:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     eea:	65 20 00                                            e .

00000eed <_ZZ18Edited_In_SchedulevE3__c>:
     eed:	6d 79 20 31 34 00                                   my 14.

00000ef3 <_ZZ17Blower_MonitoringhE3__c_0>:
     ef3:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     f03:	3a 20 00                                            : .

00000f06 <_ZZ17Blower_MonitoringhE3__c>:
     f06:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     f16:	3a 20 00                                            : .

00000f19 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     f19:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f29:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f38 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f38:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f49 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f49:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f59:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f68 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f68:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f78:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f88:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f98:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000fa3 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     fa3:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fb3:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fc3:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fd3:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fde <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fde:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fee:	69 6c 00                                            il.

00000ff1 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     ff1:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    1001:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    1011:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

0000101c <_ZZ17Doser_Pump_On_OffhE3__c_5>:
    101c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    102c:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

0000103a <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    103a:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    104a:	74 61 20 3a 20 00                                   ta : .

00001050 <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    1050:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1060:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1070:	65 20 31 00                                         e 1.

00001074 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1074:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1084:	6d 62 65 72 20 00                                   mber .

0000108a <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    108a:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    109a:	6f 2e 20 00                                         o. .

0000109e <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    109e:	20 00                                                .

000010a0 <_ZZ17Doser_Pump_On_OffhE3__c>:
    10a0:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    10b0:	20 6c 69 73 74 20 3a 20 00                           list : .

000010b9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    10b9:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c9:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010d5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10d5:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e5:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010f4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10f4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    1104:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

00001113 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    1113:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1123:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001132 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1132:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1142:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1152:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1162:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000116d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    116d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    117d:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    118d:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    119d:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000011a8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    11a8:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    11b8:	69 6c 00                                            il.

000011bb <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    11bb:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11cb:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11db:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11e6:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11f6:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001204 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    1204:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1214:	74 61 20 3a 20 00                                   ta : .

0000121a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    121a:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    122a:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    123a:	65 20 31 00                                         e 1.

0000123e <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    123e:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    124e:	6d 62 65 72 20 00                                   mber .

00001254 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1254:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1264:	6f 2e 20 00                                         o. .

00001268 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1268:	20 00                                                .

0000126a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    126a:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    127a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001288 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1288:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1298:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

000012a2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    12a2:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    12b2:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12c2:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012cd <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12cd:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012ed <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12ed:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12fd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

0000130b <_ZZ20Schedules_MonitoringvE3__c_37>:
    130b:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

00001319 <_ZZ20Schedules_MonitoringvE3__c_36>:
    1319:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1329:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001332 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1332:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000133e <_ZZ20Schedules_MonitoringvE3__c_34>:
    133e:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

0000134a <_ZZ20Schedules_MonitoringvE3__c_33>:
    134a:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001356 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1356:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001362 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1362:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000136e <_ZZ20Schedules_MonitoringvE3__c_30>:
    136e:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

0000137a <_ZZ20Schedules_MonitoringvE3__c_29>:
    137a:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001386 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1386:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001392 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1392:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000139e <_ZZ20Schedules_MonitoringvE3__c_26>:
    139e:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

000013aa <_ZZ20Schedules_MonitoringvE3__c_25>:
    13aa:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

000013b6 <_ZZ20Schedules_MonitoringvE3__c_24>:
    13b6:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013c2 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13c2:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ce <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ce:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013da <_ZZ20Schedules_MonitoringvE3__c_21>:
    13da:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013e6 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13e6:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013f2 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13f2:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013fe <_ZZ20Schedules_MonitoringvE3__c_18>:
    13fe:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

0000140b <_ZZ20Schedules_MonitoringvE3__c_17>:
    140b:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    141b:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    142b:	2e 2e 2e 2e 2e 2e 00                                .......

00001432 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1432:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1442:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1452:	2e 2e 2e 2e 2e 2e 00                                .......

00001459 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1459:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001469 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1469:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001477 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1477:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001485 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1485:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1495:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    14a5:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    14b5:	3a 00                                               :.

000014b7 <_ZZ20Schedules_MonitoringvE3__c_11>:
    14b7:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014c3 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14c3:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014cf <_ZZ20Schedules_MonitoringvE3__c_9>:
    14cf:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014da <_ZZ20Schedules_MonitoringvE3__c_8>:
    14da:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14fa:	2e 2e 2e 2e 2e 00                                   ......

00001500 <_ZZ20Schedules_MonitoringvE3__c_7>:
    1500:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    1510:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1520:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001529 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1529:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1539:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001547 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1547:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1557:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001565 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1565:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1575:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001582 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1582:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1592:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15a2:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    15b2:	3a 00                                               :.

000015b4 <_ZZ20Schedules_MonitoringvE3__c_2>:
    15b4:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000015c0 <_ZZ20Schedules_MonitoringvE3__c_1>:
    15c0:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15d0:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15e0:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15f0:	2f 2f 2f 20 3a 00                                   /// :.

000015f6 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15f6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1606:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1616:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1626:	2f 20 3a 00                                         / :.

0000162a <_ZZ20Schedules_MonitoringvE3__c>:
    162a:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    163a:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    164a:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    165a:	20 3a 00                                             :.

0000165d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    165d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000166d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    166d:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000167d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    167d:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000168c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    168c:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000169b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    169b:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016aa <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    16aa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    16b7:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16c6:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016d3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16d3:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16e2:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016f1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16f1:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

00001700 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    1700:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

0000170f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    170f:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

0000171e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    171e:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000172d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    172d:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000173c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    173c:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000174b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    174b:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000175a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    175a:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001769 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1769:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001778 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1778:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001787 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1787:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001796 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1796:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    17a5:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    17b4:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17c3:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017d2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17d2:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17e1:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017f0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17f0:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017ff <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17ff:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

0000180e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    180e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    181e:	74 20 31 3a 20 00                                   t 1: .

00001824 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1824:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001832 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1832:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001840 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    1840:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000184d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    184d:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000185a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    185a:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001867 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1867:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001874 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1874:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001881 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1881:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000188e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    188e:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000189b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    189b:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000018a8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    18a8:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

000018b5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    18b5:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018c2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18c2:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18cf:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018dc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18dc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18e9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018f6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18f6:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001903 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    1903:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001910 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    1910:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000191d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    191d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000192a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    192a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001937 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1937:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001944 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1944:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001951 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1951:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000195e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    195e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000196b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    196b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001978 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1978:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001985 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1985:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001992 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1992:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000199f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    199f:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    19af:	74 20 3a 20 00                                      t : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    19b4:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19c4:	65 64 00                                            ed.

000019c7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19c7:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19d5:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19e1:	79 65 61 72 20 3a 20 00                             year : .

000019e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19e9:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019f2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19f2:	64 61 74 65 20 3a 20 00                             date : .

000019fa <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19fa:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    1a0a:	3a 20 00                                            : .

00001a0d <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    1a0d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001a1b <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    1a1b:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a29 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a29:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a36 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a36:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a43 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a43:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a50 <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a50:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a5d <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a5d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a6a <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a6a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a77 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a77:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a84 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a84:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a91 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a91:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a9e <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a9e:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001aab <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1aab:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001ab8 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1ab8:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001ac5 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1ac5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ad2 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ad2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001adf <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1adf:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aec <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1aec:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af9 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1af9:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b06 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1b06:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b13 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1b13:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b20 <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1b20:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b2d <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b2d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b3a <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b3a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b47 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b47:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b54 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b54:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b61 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b61:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b6e <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b6e:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b7b <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b7b:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b88 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b88:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b96 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b96:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001ba4 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1ba4:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bb1 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1bb1:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bbe <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1bbe:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bcb <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1bcb:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd8 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bd8:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001be5 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1be5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bf2 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bf2:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bff <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bff:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001c0c <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1c0c:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001c19 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1c19:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c26 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c26:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c33 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c33:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c40 <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c4d <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c5a <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c5a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c67 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c67:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c74 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c74:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c81 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c81:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c8e <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c8e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c9b <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c9b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca8 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1ca8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cb5 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1cb5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cc2 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1cc2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ccf <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1ccf:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cdc <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cdc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ce9 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1ce9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cf6:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001d03 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1d03:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1d13:	20 3a 20 00                                          : .

00001d17 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1d17:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d27:	3a 20 00                                            : .

00001d2a <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d2a:	79 65 61 72 20 3a 20 00                             year : .

00001d32 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d32:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d3b <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d3b:	64 61 74 65 20 3a 20 00                             date : .

00001d43 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d43:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d53:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d5d <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d5d:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d6d:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d76 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d76:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d83 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d83:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d93:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1da3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1db3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1dc3:	2f 2f 2f 00                                         ///.

00001dc7 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1dc7:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1dd7:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001de3 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1de3:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1df3:	56 45 20 00                                         VE .

00001df7 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1df7:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e07:	4f 57 20 31 20 00                                   OW 1 .

00001e0d <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1e0d:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e1d:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e2d:	30 30 00                                            00.

00001e30 <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e30:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e40:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e50:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e60:	75 6d 70 00                                         ump.

00001e64 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e64:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e74:	4f 57 00                                            OW.

00001e77 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e77:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e87:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e97:	31 31 31 31 00                                      1111.

00001e9c <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e9c:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1eac:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1ebc:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ec8 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ec8:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1ed8:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ee6 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ee6:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ef5 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ef5:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1f05:	69 6e 65 20 3a 20 00                                ine : .

00001f0c <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1f0c:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001f1d <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1f1d:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f2d:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f35 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f35:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f46 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f46:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f56:	74 00                                               t.

00001f58 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f58:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f68:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f73 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f73:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f7f <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f7f:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f8f:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f97 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f97:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1fa7:	45 44 00                                            ED.

00001faa <_ZZ16Gsm_Gprs_NetworkvE3__c_10>:
    1faa:	41 54 45 30 00                                      ATE0.

00001faf <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1faf:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1fbb:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1fcb:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fdc <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1fdc:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fec:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001ffc <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1ffc:	41 54 45 30 00                                      ATE0.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    2001:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000200d <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    200d:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    201d:	47 50 52 53 00                                      GPRS.

00002022 <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    2022:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2032:	6f 72 20 4e 61 6d 65 00                             or Name.

0000203a <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    203a:	6a 69 6f 00                                         jio.

0000203e <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    203e:	41 69 72 74 65 6c 00                                Airtel.

00002045 <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    2045:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

0000204e <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    204e:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    205e:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

0000206e <_ZZ14Get_Local_TimevE3__c_6>:
    206e:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002079 <_ZZ14Get_Local_TimevE3__c_5>:
    2079:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

00002085 <_ZZ14Get_Local_TimevE3__c_4>:
    2085:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002090 <_ZZ14Get_Local_TimevE3__c_3>:
    2090:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002099 <_ZZ14Get_Local_TimevE3__c_2>:
    2099:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

000020a1 <_ZZ14Get_Local_TimevE3__c_1>:
    20a1:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    20b1:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

000020be <_ZZ14Get_Local_TimevE3__c_0>:
    20be:	41 54 2b 43 54 5a 52 3d 31 00                       AT+CTZR=1.

000020c8 <_ZZ14Get_Local_TimevE3__c>:
    20c8:	41 54 2b 43 54 5a 55 3d 31 00                       AT+CTZU=1.

000020d2 <_ZZ16Display_Update_1vE3__c_25>:
    20d2:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020df <_ZZ16Display_Update_1vE3__c_24>:
    20df:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020ec <_ZZ16Display_Update_1vE3__c_23>:
    20ec:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20fc:	20 20 20 20 00                                          .

00002101 <_ZZ16Display_Update_1vE3__c_22>:
    2101:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    2111:	49 4e 47 20 00                                      ING .

00002116 <_ZZ16Display_Update_1vE3__c_21>:
    2116:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2126:	20 20 20 20 00                                          .

0000212b <_ZZ16Display_Update_1vE3__c_20>:
    212b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    213b:	20 20 20 20 00                                          .

00002140 <_ZZ16Display_Update_1vE3__c_19>:
    2140:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2150:	45 54 21 20 00                                      ET! .

00002155 <_ZZ16Display_Update_1vE3__c_18>:
    2155:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2165:	20 20 20 20 00                                          .

0000216a <_ZZ16Display_Update_1vE3__c_17>:
    216a:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    217a:	20 20 20 20 00                                          .

0000217f <_ZZ16Display_Update_1vE3__c_16>:
    217f:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    218f:	45 20 20 20 00                                      E   .

00002194 <_ZZ16Display_Update_1vE3__c_15>:
    2194:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_14>:
    21a9:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    21b9:	47 00                                               G.

000021bb <_ZZ16Display_Update_1vE3__c_13>:
    21bb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21cb:	20 20 20 20 00                                          .

000021d0 <_ZZ16Display_Update_1vE3__c_12>:
    21d0:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21e0:	20 20 20 20 00                                          .

000021e5 <_ZZ16Display_Update_1vE3__c_11>:
    21e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21f5:	20 20 20 20 00                                          .

000021fa <_ZZ16Display_Update_1vE3__c_10>:
    21fa:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    220a:	56 45 52 20 00                                      VER .

0000220f <_ZZ16Display_Update_1vE3__c_9>:
    220f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    221f:	20 20 20 20 00                                          .

00002224 <_ZZ16Display_Update_1vE3__c_8>:
    2224:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    2234:	45 44 20 20 00                                      ED  .

00002239 <_ZZ16Display_Update_1vE3__c_7>:
    2239:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2249:	20 20 20 20 00                                          .

0000224e <_ZZ16Display_Update_1vE3__c_6>:
    224e:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    225e:	54 2e 2e 2e 00                                      T....

00002263 <_ZZ16Display_Update_1vE3__c_5>:
    2263:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2273:	20 20 20 20 00                                          .

00002278 <_ZZ16Display_Update_1vE3__c_4>:
    2278:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    2288:	52 56 45 52 00                                      RVER.

0000228d <_ZZ16Display_Update_1vE3__c_3>:
    228d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    229d:	20 20 20 20 00                                          .

000022a2 <_ZZ16Display_Update_1vE3__c_2>:
    22a2:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    22b2:	20 20 20 20 00                                          .

000022b7 <_ZZ16Display_Update_1vE3__c_1>:
    22b7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    22c7:	20 20 20 20 00                                          .

000022cc <_ZZ16Display_Update_1vE3__c_0>:
    22cc:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22dc:	52 56 45 52 00                                      RVER.

000022e1 <_ZZ16Display_Update_1vE3__c>:
    22e1:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22f1:	20 20 20 20 00                                          .

000022f6 <_ZZ21Subscribed_data_checkvE3__c_0>:
    22f6:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

00002302 <_ZZ21Subscribed_data_checkvE3__c>:
    2302:	65 6e 74 65 72 20 31 00                             enter 1.

0000230a <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    230a:	63 68 65 63 6b 20 6e 6f 74 20 43 6f 6e 6e 65 63     check not Connec
    231a:	74 65 64 20 74 6f 20 6d 71 74 74 00                 ted to mqtt.

00002326 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2326:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2336:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000233e <_ZZ17Is_MQTT_ConnectedvE3__c>:
    233e:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000234f <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    234f:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000235d <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    235d:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000236b <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    236b:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    237b:	32 30 00                                            20.

0000237e <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    237e:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

0000238a <_ZZ12MQTT_PublishPhS_E3__c>:
    238a:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002394 <_ZZ12Gprs_ConnectPcE3__c>:
    2394:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    23a4:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    23b4:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

000023bd <_ZZ17Get_Operator_NamePcE3__c>:
    23bd:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023c6 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23c6:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023d0 <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23d0:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023db <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23db:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023e5 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23e5:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023f0 <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23f0:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023f9 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23f9:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002403 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    2403:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

0000240c <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    240c:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002416 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    2416:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002421 <_ZZ8Gsm_InitvE3__c_1>:
    2421:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000242b <_ZZ8Gsm_InitvE3__c_0>:
    242b:	41 54 2b 49 50 52 45 58 3d 39 36 30 30 00           AT+IPREX=9600.

00002439 <_ZZ8Gsm_InitvE3__c>:
    2439:	41 54 00                                            AT.

0000243c <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    243c:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000244b <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    244b:	41 54 2b 43 53 51 00                                AT+CSQ.

00002452 <_ZZ14Lora_Data_SendhE3__c_1>:
    2452:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000245c <_ZZ14Lora_Data_SendhE3__c_0>:
    245c:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

00002469 <_ZZ14Lora_Data_SendhE3__c>:
    2469:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    2479:	65 6e 20 3a 20 00                                   en : .

0000247f <_ZZ19Initialise_HardwarevE3__c_6>:
    247f:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    248f:	44 00                                               D.

00002491 <_ZZ19Initialise_HardwarevE3__c_5>:
    2491:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

0000249f <_ZZ19Initialise_HardwarevE3__c_4>:
    249f:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    24af:	45 44 00                                            ED.

000024b2 <_ZZ19Initialise_HardwarevE3__c_3>:
    24b2:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

000024c1 <_ZZ19Initialise_HardwarevE3__c_2>:
    24c1:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

000024ce <_ZZ19Initialise_HardwarevE3__c_1>:
    24ce:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24de:	20 20 20 20 00                                          .

000024e3 <_ZZ19Initialise_HardwarevE3__c_0>:
    24e3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24f3:	20 20 20 20 00                                          .

000024f8 <_ZZ19Initialise_HardwarevE3__c>:
    24f8:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    2508:	32 2e 31 20 00                                      2.1 .

0000250d <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    250d:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002519 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    2519:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2529:	72 2e 3a 20 00                                      r.: .

0000252e <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    252e:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    253e:	65 70 72 6f 6d 20 00                                eprom .

00002545 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2545:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

00002553 <_ZZ18Local_Time_SettingvE3__c_2>:
    2553:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

00002560 <_ZZ18Local_Time_SettingvE3__c_1>:
    2560:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002569 <_ZZ18Local_Time_SettingvE3__c_0>:
    2569:	41 54 45 30 00                                      ATE0.

0000256e <_ZZ18Local_Time_SettingvE3__c>:
    256e:	41 54 00                                            AT.

00002571 <_ZZ9Check_SimcE3__c_1>:
    2571:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

0000257a <_ZZ9Check_SimcE3__c_0>:
    257a:	41 54 45 30 00                                      ATE0.

0000257f <_ZZ9Check_SimcE3__c>:
    257f:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000258b <_ZZ11Check_PhasevE3__c_3>:
    258b:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 32     phase is there 2
    259b:	20 00                                                .

0000259d <_ZZ11Check_PhasevE3__c_2>:
    259d:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 31     phase is there 1
    25ad:	20 00                                                .

000025af <_ZZ11Check_PhasevE3__c_1>:
    25af:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25bf:	72 65 20 31 20 00                                   re 1 .

000025c5 <_ZZ11Check_PhasevE3__c_0>:
    25c5:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 00     phase is there .

000025d5 <_ZZ11Check_PhasevE3__c>:
    25d5:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25e5:	72 65 20 00                                         re .

000025e9 <_ZZ14Faults_HandlervE3__c_5>:
    25e9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

000025f9 <_ZZ14Faults_HandlervE3__c_4>:
    25f9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

0000260a <_ZZ14Faults_HandlervE3__c_3>:
    260a:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

00002617 <_ZZ14Faults_HandlervE3__c_2>:
    2617:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

00002625 <_ZZ14Faults_HandlervE3__c_1>:
    2625:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

00002635 <_ZZ14Faults_HandlervE3__c_0>:
    2635:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

00002646 <_ZZ14Faults_HandlervE3__c>:
    2646:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    2656:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    2666:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

0000266e <_ZZ19Calibration_Of_PumpvE3__c>:
    266e:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    267e:	20 69 73 20 64 6f 6e 65 00                           is done.

00002687 <_ZZ11Read_EEPROMvE3__c_2>:
    2687:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002693 <_ZZ11Read_EEPROMvE3__c_1>:
    2693:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    26a3:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

000026af <_ZZ11Read_EEPROMvE3__c_0>:
    26af:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    26bf:	69 6d 65 72 20 3a 20 00                             imer : .

000026c7 <_ZZ11Read_EEPROMvE3__c>:
    26c7:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    26d7:	72 20 3a 20 00                                      r : .

000026dc <_ZZ20Param_InitializationvE3__c_3>:
    26dc:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    26ec:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

000026f7 <_ZZ20Param_InitializationvE3__c_2>:
    26f7:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    2707:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    2717:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    2727:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    2737:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    2747:	45 56 49 43 45 00                                   EVICE.

0000274d <_ZZ20Param_InitializationvE3__c_1>:
    274d:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    275d:	6d 20 43 61 72 64 00                                m Card.

00002764 <_ZZ20Param_InitializationvE3__c_0>:
    2764:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    2774:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002785 <_ZZ20Param_InitializationvE3__c>:
    2785:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2795:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    27a5:	65 76 65 72 00                                      ever.

000027aa <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    27aa:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    27ba:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    27ca:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

000027d6 <_ZZ14Ping_to_ServervE3__c_10>:
    27d6:	41 54 45 30 00                                      ATE0.

000027db <_ZZ14Ping_to_ServervE3__c_9>:
    27db:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

000027e7 <_ZZ14Ping_to_ServervE3__c_8>:
    27e7:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    27f7:	74 68 65 20 73 65 72 76 65 72 00                    the server.

00002802 <_ZZ14Ping_to_ServervE3__c_7>:
    2802:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    2812:	62 73 63 72 69 62 65 64 00                          bscribed.

0000281b <_ZZ14Ping_to_ServervE3__c_6>:
    281b:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    282b:	69 62 65 64 00                                      ibed.

00002830 <_ZZ14Ping_to_ServervE3__c_5>:
    2830:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    2840:	76 65 72 00                                         ver.

00002844 <_ZZ14Ping_to_ServervE3__c_4>:
    2844:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    2854:	68 65 20 73 65 72 76 65 72 00                       he server.

0000285e <_ZZ14Ping_to_ServervE3__c_3>:
    285e:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    286e:	43 4c 4f 53 45 20 00                                CLOSE .

00002875 <_ZZ14Ping_to_ServervE3__c_2>:
    2875:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002881 <_ZZ14Ping_to_ServervE3__c_1>:
    2881:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

0000288f <_ZZ14Ping_to_ServervE3__c_0>:
    288f:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

000028a0 <_ZZ14Ping_to_ServervE3__c>:
    28a0:	41 54 45 30 00                                      ATE0.

000028a5 <_ZZ11Init_BrokervE3__c_4>:
    28a5:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    28b5:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

000028c4 <_ZZ11Init_BrokervE3__c_3>:
    28c4:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    28d4:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

000028df <_ZZ11Init_BrokervE3__c_2>:
    28df:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28ef:	76 65 72 00                                         ver.

000028f3 <_ZZ11Init_BrokervE3__c_1>:
    28f3:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

00002902 <_ZZ11Init_BrokervE3__c_0>:
    2902:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2912:	76 65 72 20 30 00                                   ver 0.

00002918 <_ZZ11Init_BrokervE3__c>:
    2918:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

00002929 <_ZZ4mainE3__c_0>:
    2929:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    2939:	3a 20 00                                            : .

0000293c <_ZZ4mainE3__c>:
    293c:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    294c:	3a 20 00                                            : .

0000294f <_ZZ24Pump_Status_List_MonitorvE3__c>:
    294f:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    295f:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    296f:	35 35 35 35 35 35 35 35 00                          55555555.

00002978 <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    2978:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2988:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002997 <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    2997:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29a7:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29b7:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29c7:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000029d2 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    29d2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29e2:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29f2:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2a02:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002a0d <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    2a0d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2a1d:	69 6c 00                                            il.

00002a20 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    2a20:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2a30:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2a40:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002a4b <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    2a4b:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2a5b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a69 <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a69:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a79:	74 61 20 3a 20 00                                   ta : .

00002a7f <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a7f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a8f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a9f:	65 20 31 00                                         e 1.

00002aa3 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2aa3:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ab3:	6d 62 65 72 20 00                                   mber .

00002ab9 <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2ab9:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ac9:	6f 2e 20 00                                         o. .

00002acd <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2acd:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002add <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2add:	20 00                                                .

00002adf <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2adf:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2aef:	20 6c 69 73 74 20 3a 20 00                           list : .

00002af8 <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2af8:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2b08:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002b16 <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2b16:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2b26:	20 64 61 74 61 20 3a 20 00                           data : .

00002b2f <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2b2f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2b3f:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2b4f:	50 75 6d 70 20 31 00                                Pump 1.

00002b56 <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2b56:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b66:	2e 20 00                                            . .

00002b69 <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b69:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b79:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b85 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b85:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b95:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002ba1 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2ba1:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bb1:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002bbd <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2bbd:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bcd:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bdb <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2bdb:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002be6 <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2be6:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bf6:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002c02 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2c02:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2c12:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002c20 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2c20:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002c2a <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2c2a:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c3a:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002c46 <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2c46:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c56:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c64 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c64:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c74:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c84:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c90 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c90:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2ca0:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2cb0:	53 65 6e 74 20 3a 00                                Sent :.

00002cb7 <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2cb7:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2cc7:	20 64 61 74 61 20 3a 20 00                           data : .

00002cd0 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2cd0:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2ce0:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002cec <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2cec:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2cfc:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2d0c:	50 75 6d 70 20 31 00                                Pump 1.

00002d13 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2d13:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2d23:	2e 20 00                                            . .

00002d26 <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2d26:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d36:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2d46:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002d55 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2d55:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d65:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d75:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d80 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d80:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d90:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d9f <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d9f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2daf:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dbf:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dcf:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002dda <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2dda:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dea:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dfa:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2e0a:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002e15 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2e15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2e25:	69 6c 00                                            il.

00002e28 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2e28:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2e38:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2e48:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002e53 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2e53:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e63:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e71 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e71:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e81:	74 61 20 3a 20 00                                   ta : .

00002e87 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e87:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e97:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2ea7:	65 20 31 00                                         e 1.

00002eab <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2eab:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ebb:	6d 62 65 72 20 00                                   mber .

00002ec1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2ec1:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ed1:	6f 2e 20 00                                         o. .

00002ed5 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2ed5:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2ee5:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002ef1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2ef1:	20 00                                                .

00002ef3 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2ef3:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002f01 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2f01:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2f11:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002f1a <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2f1a:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002f2b <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2f2b:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2f3b:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2f4b:	62 61 63 6b 20 75 70 00                             back up.

00002f53 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2f53:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f63:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f73 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f73:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f83:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f93:	34 34 34 34 34 00                                   44444.

00002f99 <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f99:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2fa9:	61 00                                               a.

00002fab <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2fab:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2fbb:	20 74 6f 20 6f 6e 00                                 to on.

00002fc2 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2fc2:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002fd0 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2fd0:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2fe0:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2ff0:	33 33 33 33 00                                      3333.

00002ff5 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2ff5:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    3005:	72 61 20 70 6c 6f 74 00                             ra plot.

0000300d <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    300d:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    301d:	63 75 72 65 00                                      cure.

00003022 <_ZZ12Publish_DatavE3__c_78>:
    3022:	70 6c 6f 74 00                                      plot.

00003027 <_ZZ12Publish_DatavE3__c_77>:
    3027:	74 69 6d 65 00                                      time.

0000302c <_ZZ12Publish_DatavE3__c_76>:
    302c:	70 6c 6f 74 00                                      plot.

00003031 <_ZZ12Publish_DatavE3__c_75>:
    3031:	74 69 6d 65 00                                      time.

00003036 <_ZZ12Publish_DatavE3__c_74>:
    3036:	6d 65 64 69 75 6d 00                                medium.

0000303d <_ZZ12Publish_DatavE3__c_73>:
    303d:	70 53 74 61 74 75 73 00                             pStatus.

00003045 <_ZZ12Publish_DatavE3__c_72>:
    3045:	70 53 74 61 74 75 73 00                             pStatus.

0000304d <_ZZ12Publish_DatavE3__c_71>:
    304d:	70 53 74 61 74 75 73 00                             pStatus.

00003055 <_ZZ12Publish_DatavE3__c_70>:
    3055:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3065:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003071 <_ZZ12Publish_DatavE3__c_69>:
    3071:	73 74 61 74 75 73 00                                status.

00003078 <_ZZ12Publish_DatavE3__c_68>:
    3078:	73 74 61 74 75 73 00                                status.

0000307f <_ZZ12Publish_DatavE3__c_67>:
    307f:	73 74 61 74 75 73 00                                status.

00003086 <_ZZ12Publish_DatavE3__c_66>:
    3086:	73 74 61 74 75 73 00                                status.

0000308d <_ZZ12Publish_DatavE3__c_65>:
    308d:	73 74 61 74 75 73 00                                status.

00003094 <_ZZ12Publish_DatavE3__c_64>:
    3094:	73 74 61 74 75 73 00                                status.

0000309b <_ZZ12Publish_DatavE3__c_63>:
    309b:	70 4e 6f 00                                         pNo.

0000309f <_ZZ12Publish_DatavE3__c_62>:
    309f:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    30af:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

000030ba <_ZZ12Publish_DatavE3__c_61>:
    30ba:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

000030c6 <_ZZ12Publish_DatavE3__c_60>:
    30c6:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

000030cf <_ZZ12Publish_DatavE3__c_59>:
    30cf:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030de <_ZZ12Publish_DatavE3__c_58>:
    30de:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030e7 <_ZZ12Publish_DatavE3__c_57>:
    30e7:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030f6 <_ZZ12Publish_DatavE3__c_56>:
    30f6:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030ff <_ZZ12Publish_DatavE3__c_55>:
    30ff:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

0000310e <_ZZ12Publish_DatavE3__c_54>:
    310e:	73 63 5f 69 6e 64 65 78 00                          sc_index.

00003117 <_ZZ12Publish_DatavE3__c_53>:
    3117:	70 6c 6f 74 00                                      plot.

0000311c <_ZZ12Publish_DatavE3__c_52>:
    311c:	70 6c 6f 74 00                                      plot.

00003121 <_ZZ12Publish_DatavE3__c_51>:
    3121:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    3131:	65 72 00                                            er.

00003134 <_ZZ12Publish_DatavE3__c_50>:
    3134:	6d 6f 64 65 00                                      mode.

00003139 <_ZZ12Publish_DatavE3__c_49>:
    3139:	70 53 74 61 74 75 73 00                             pStatus.

00003141 <_ZZ12Publish_DatavE3__c_48>:
    3141:	70 53 74 61 74 75 73 00                             pStatus.

00003149 <_ZZ12Publish_DatavE3__c_47>:
    3149:	70 53 74 61 74 75 73 00                             pStatus.

00003151 <_ZZ12Publish_DatavE3__c_46>:
    3151:	73 74 61 74 75 73 00                                status.

00003158 <_ZZ12Publish_DatavE3__c_45>:
    3158:	73 74 61 74 75 73 00                                status.

0000315f <_ZZ12Publish_DatavE3__c_44>:
    315f:	73 74 61 74 75 73 00                                status.

00003166 <_ZZ12Publish_DatavE3__c_43>:
    3166:	73 74 61 74 75 73 00                                status.

0000316d <_ZZ12Publish_DatavE3__c_42>:
    316d:	73 74 61 74 75 73 00                                status.

00003174 <_ZZ12Publish_DatavE3__c_41>:
    3174:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    3184:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3194:	2e 00                                               ..

00003196 <_ZZ12Publish_DatavE3__c_40>:
    3196:	73 74 61 74 75 73 00                                status.

0000319d <_ZZ12Publish_DatavE3__c_39>:
    319d:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    31ad:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

000031be <_ZZ12Publish_DatavE3__c_38>:
    31be:	70 4e 6f 00                                         pNo.

000031c2 <_ZZ12Publish_DatavE3__c_37>:
    31c2:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    31d2:	63 6b 00                                            ck.

000031d5 <_ZZ12Publish_DatavE3__c_36>:
    31d5:	70 6c 6f 74 00                                      plot.

000031da <_ZZ12Publish_DatavE3__c_35>:
    31da:	74 69 6d 65 00                                      time.

000031df <_ZZ12Publish_DatavE3__c_34>:
    31df:	70 6c 6f 74 00                                      plot.

000031e4 <_ZZ12Publish_DatavE3__c_33>:
    31e4:	74 69 6d 65 00                                      time.

000031e9 <_ZZ12Publish_DatavE3__c_32>:
    31e9:	6d 65 64 69 75 6d 00                                medium.

000031f0 <_ZZ12Publish_DatavE3__c_31>:
    31f0:	70 53 74 61 74 75 73 00                             pStatus.

000031f8 <_ZZ12Publish_DatavE3__c_30>:
    31f8:	70 53 74 61 74 75 73 00                             pStatus.

00003200 <_ZZ12Publish_DatavE3__c_29>:
    3200:	70 53 74 61 74 75 73 00                             pStatus.

00003208 <_ZZ12Publish_DatavE3__c_28>:
    3208:	70 53 74 61 74 75 73 00                             pStatus.

00003210 <_ZZ12Publish_DatavE3__c_27>:
    3210:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3220:	20 46 62 00                                          Fb.

00003224 <_ZZ12Publish_DatavE3__c_26>:
    3224:	63 6f 64 65 73 00                                   codes.

0000322a <_ZZ12Publish_DatavE3__c_25>:
    322a:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    323a:	5f 44 41 54 41 00                                   _DATA.

00003240 <_ZZ12Publish_DatavE3__c_24>:
    3240:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

0000324a <_ZZ12Publish_DatavE3__c_23>:
    324a:	76 42 61 74 00                                      vBat.

0000324f <_ZZ12Publish_DatavE3__c_22>:
    324f:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

0000325b <_ZZ12Publish_DatavE3__c_21>:
    325b:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    326b:	5f 44 41 54 41 00                                   _DATA.

00003271 <_ZZ12Publish_DatavE3__c_20>:
    3271:	76 42 61 74 00                                      vBat.

00003276 <_ZZ12Publish_DatavE3__c_19>:
    3276:	6c 69 67 68 74 00                                   light.

0000327c <_ZZ12Publish_DatavE3__c_18>:
    327c:	68 75 6d 69 64 69 74 79 00                          humidity.

00003285 <_ZZ12Publish_DatavE3__c_17>:
    3285:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

00003291 <_ZZ12Publish_DatavE3__c_16>:
    3291:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

0000329b <_ZZ12Publish_DatavE3__c_15>:
    329b:	73 6d 34 00                                         sm4.

0000329f <_ZZ12Publish_DatavE3__c_14>:
    329f:	73 6d 33 00                                         sm3.

000032a3 <_ZZ12Publish_DatavE3__c_13>:
    32a3:	73 6d 32 00                                         sm2.

000032a7 <_ZZ12Publish_DatavE3__c_12>:
    32a7:	73 6d 31 00                                         sm1.

000032ab <_ZZ12Publish_DatavE3__c_11>:
    32ab:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

000032b5 <_ZZ12Publish_DatavE3__c_10>:
    32b5:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    32c5:	44 41 54 41 00                                      DATA.

000032ca <_ZZ12Publish_DatavE3__c_9>:
    32ca:	63 6f 64 65 73 00                                   codes.

000032d0 <_ZZ12Publish_DatavE3__c_8>:
    32d0:	70 6c 6f 74 00                                      plot.

000032d5 <_ZZ12Publish_DatavE3__c_7>:
    32d5:	70 6c 6f 74 00                                      plot.

000032da <_ZZ12Publish_DatavE3__c_6>:
    32da:	74 69 6d 65 00                                      time.

000032df <_ZZ12Publish_DatavE3__c_5>:
    32df:	74 69 6d 65 00                                      time.

000032e4 <_ZZ12Publish_DatavE3__c_4>:
    32e4:	6d 65 64 69 75 6d 00                                medium.

000032eb <_ZZ12Publish_DatavE3__c_3>:
    32eb:	70 53 74 61 74 75 73 00                             pStatus.

000032f3 <_ZZ12Publish_DatavE3__c_2>:
    32f3:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    3303:	42 41 43 4b 00                                      BACK.

00003308 <_ZZ12Publish_DatavE3__c_1>:
    3308:	74 65 73 74 00                                      test.

0000330d <_ZZ12Publish_DatavE3__c_0>:
    330d:	74 65 73 74 00                                      test.

00003312 <_ZZ12Publish_DatavE3__c>:
    3312:	63 6f 64 65 73 00                                   codes.

00003318 <_ZZ12Pub_Sub_DataPcPhjhE3__c_123>:
    3318:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    3328:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3338:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3348:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003359 <_ZZ12Pub_Sub_DataPcPhjhE3__c_122>:
    3359:	73 74 61 74 75 73 00                                status.

00003360 <_ZZ12Pub_Sub_DataPcPhjhE3__c_121>:
    3360:	70 4e 6f 00                                         pNo.

00003364 <_ZZ12Pub_Sub_DataPcPhjhE3__c_120>:
    3364:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    3374:	20 72 75 6c 65 64 00                                 ruled.

0000337b <_ZZ12Pub_Sub_DataPcPhjhE3__c_119>:
    337b:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    338b:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    339b:	72 00                                               r.

0000339d <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    339d:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

000033a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    33a9:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

000033ba <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    33ba:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

000033ca <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    33ca:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

000033da <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    33da:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

000033e4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    33e4:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

000033f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    33f0:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

000033fa <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    33fa:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    340a:	20 00                                                .

0000340c <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    340c:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003417 <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    3417:	54 6e 4f 66 00                                      TnOf.

0000341c <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    341c:	54 6e 4f 6e 00                                      TnOn.

00003421 <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    3421:	54 6e 4e 6f 00                                      TnNo.

00003426 <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    3426:	54 6e 53 74 00                                      TnSt.

0000342b <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    342b:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    343b:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

00003449 <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    3449:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003454 <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    3454:	53 63 53 74 61 74 00                                ScStat.

0000345b <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    345b:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    346b:	20 00                                                .

0000346d <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    346d:	53 63 4f 6e 00                                      ScOn.

00003472 <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    3472:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000347c <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    347c:	53 63 4e 75 6d 00                                   ScNum.

00003482 <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    3482:	53 63 4f 66 66 00                                   ScOff.

00003488 <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    3488:	53 63 4f 6e 00                                      ScOn.

0000348d <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    348d:	53 65 6e 00                                         Sen.

00003491 <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    3491:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    34a1:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    34b1:	20 00                                                .

000034b3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    34b3:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

000034c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    34c1:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

000034ce <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    34ce:	73 6d 73 00                                         sms.

000034d2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    34d2:	64 65 76 69 63 65 4e 75 6d 62 65 72 00              deviceNumber.

000034df <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    34df:	66 61 72 6d 65 72 4e 75 6d 62 65 72 00              farmerNumber.

000034ec <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    34ec:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    34fc:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003507 <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    3507:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    3517:	20 3a 20 00                                          : .

0000351b <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    351b:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    352b:	74 6f 70 69 63 20 3a 20 00                          topic : .

00003534 <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    3534:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    3544:	6f 70 69 63 20 3a 20 00                             opic : .

0000354c <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    354c:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

00003555 <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    3555:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    3565:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003570 <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    3570:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

0000357a <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    357a:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    358a:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

00003598 <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    3598:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

000035a1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    35a1:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    35b1:	63 20 3a 20 00                                      c : .

000035b6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    35b6:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    35c1:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35d1:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035de <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    35de:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035e9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    35e9:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

000035f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    35f4:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3604:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

0000360f <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    360f:	76 49 64 00                                         vId.

00003613 <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    3613:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    3623:	69 63 20 3a 20 00                                   ic : .

00003629 <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    3629:	63 6f 64 65 00                                      code.

0000362e <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    362e:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

0000363a <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    363a:	6d 61 78 20 3a 20 00                                max : .

00003641 <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    3641:	6d 69 6e 20 3a 20 00                                min : .

00003648 <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    3648:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

00003651 <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    3651:	6d 61 78 00                                         max.

00003655 <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    3655:	6d 61 78 00                                         max.

00003659 <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    3659:	6d 69 6e 00                                         min.

0000365d <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    365d:	6d 69 6e 00                                         min.

00003661 <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    3661:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

0000366d <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    366d:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    367d:	72 2e 3a 20 00                                      r.: .

00003682 <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    3682:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3692:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

0000369e <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    369e:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000036a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    36a9:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

000036b5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    36b5:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

000036bf <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    36bf:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

000036c9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    36c9:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

000036d3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    36d3:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

000036dd <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    36dd:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

000036e7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    36e7:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

000036f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    36f4:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3704:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003710 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    3710:	6f 70 4d 6f 64 65 00                                opMode.

00003717 <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    3717:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3727:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003732 <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    3732:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3742:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000374d <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    374d:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    375d:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003768 <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    3768:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3778:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003787 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3787:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3797:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000037a6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    37a6:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    37b6:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000037c5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    37c5:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    37d5:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    37e5:	45 52 00                                            ER.

000037e8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    37e8:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    37f8:	6f 6e 20 00                                         on .

000037fc <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    37fc:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    380c:	74 68 65 20 6c 69 73 74 00                          the list.

00003815 <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    3815:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

00003826 <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    3826:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3836:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003841 <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    3841:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3851:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000385c <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    385c:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    386c:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003877 <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    3877:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3887:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003892 <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    3892:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38a2:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038ad <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    38ad:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38bd:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038c8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    38c8:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38d8:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038e3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    38e3:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38f3:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038fe <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    38fe:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    390e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003919 <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    3919:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3929:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003938 <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    3938:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3948:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003957 <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    3957:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3967:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003976 <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    3976:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003981 <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    3981:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

0000398c <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    398c:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    399c:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

000039a7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    39a7:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    39b7:	6f 6e 20 00                                         on .

000039bb <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    39bb:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    39cb:	74 68 65 20 6c 69 73 74 00                          the list.

000039d4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    39d4:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000039e5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    39e5:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39f5:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a00 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    3a00:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a10:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a1b <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    3a1b:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a2b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a36 <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    3a36:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3a46:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a51 <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    3a51:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a61:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a6c <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    3a6c:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a7c:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a87 <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a87:	76 61 6c 76 65 35 00                                valve5.

00003a8e <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a8e:	76 61 6c 76 65 34 00                                valve4.

00003a95 <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a95:	76 61 6c 76 65 33 00                                valve3.

00003a9c <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a9c:	76 61 6c 76 65 32 00                                valve2.

00003aa3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3aa3:	76 61 6c 76 65 31 00                                valve1.

00003aaa <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3aaa:	70 4e 6f 00                                         pNo.

00003aae <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3aae:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3abe:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3ace:	72 00                                               r.

00003ad0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3ad0:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003ae0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3ae0:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003aef <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3aef:	74 00                                               t.

00003af1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3af1:	70 4e 6f 00                                         pNo.

00003af5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3af5:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3b05:	65 72 76 65 72 00                                   erver.

00003b0b <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3b0b:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3b1b:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3b2b:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003b37 <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3b37:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b47:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003b50 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3b50:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b60:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003b69 <_ZZ14Lora_OperationvE3__c>:
    3b69:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b79:	64 00                                               d.

00003b7b <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b7b:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b8b:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b9a <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b9a:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3baa:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3bba:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3bca:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003bd5 <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3bd5:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3be5:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3bf5:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3c05:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003c10 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3c10:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3c20:	69 6c 00                                            il.

00003c23 <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3c23:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3c33:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3c43:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003c4e <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3c4e:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3c5e:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003c6c <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3c6c:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c7c:	74 61 20 3a 20 00                                   ta : .

00003c82 <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c82:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c92:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ca2:	65 20 31 00                                         e 1.

00003ca6 <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3ca6:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3cb6:	6d 62 65 72 20 00                                   mber .

00003cbc <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3cbc:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3ccc:	6f 2e 20 00                                         o. .

00003cd0 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3cd0:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3ce0:	6e 6f 20 3a 20 00                                   no : .

00003ce6 <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3ce6:	20 00                                                .

00003ce8 <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3ce8:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003cf6 <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3cf6:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3d06:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003d15 <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3d15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d25:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d35:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d45:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003d50 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3d50:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d60:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d70:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d80:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d8b <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d8b:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d9b:	69 6c 00                                            il.

00003d9e <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d9e:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3dae:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3dbe:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003dc9 <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3dc9:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3dd9:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003de7 <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3de7:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3df7:	74 61 20 3a 20 00                                   ta : .

00003dfd <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3dfd:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3e0d:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3e1d:	65 20 31 00                                         e 1.

00003e21 <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3e21:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3e31:	6d 62 65 72 20 00                                   mber .

00003e37 <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3e37:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3e47:	6f 2e 20 00                                         o. .

00003e4b <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3e4b:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3e5b:	6e 6f 20 3a 20 00                                   no : .

00003e61 <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3e61:	20 00                                                .

00003e63 <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3e63:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003e71 <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3e71:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e81:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e91:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e9f <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e9f:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3eaf:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3ebf:	29 00                                               ).

00003ec1 <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3ec1:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3ed1:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3ee1:	20 6f 6e 6e 29 00                                    onn).

00003ee7 <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3ee7:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3ef7:	61 20 3a 20 00                                      a : .

00003efc <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3efc:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3f0c:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3f1c:	65 20 3b 00                                         e ;.

00003f20 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3f20:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3f30:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3f40:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003f4b <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3f4b:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3f5b:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3f6b:	61 64 79 20 6f 6e 00                                ady on.

00003f72 <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3f72:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f82:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f93 <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f93:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3fa3:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3fb3:	20 6f 6e 29 00                                       on).

00003fb8 <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3fb8:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3fc8:	61 20 3a 20 00                                      a : .

00003fcd <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3fcd:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3fdd:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3fed:	65 20 00                                            e .

00003ff0 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3ff0:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    4000:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    4010:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

0000401b <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    401b:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    402b:	20 00                                                .

0000402d <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    402d:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000403e <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    403e:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    404e:	20 00                                                .

00004050 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    4050:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00004061 <_ZZ15Stop_IrrigationvE3__c_3>:
    4061:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4071:	74 6f 20 53 74 6f 70 00                             to Stop.

00004079 <_ZZ15Stop_IrrigationvE3__c_2>:
    4079:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000408a <_ZZ15Stop_IrrigationvE3__c_1>:
    408a:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000409b <_ZZ15Stop_IrrigationvE3__c_0>:
    409b:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40ab:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    40bb:	32 32 32 32 32 32 32 32 32 00                       222222222.

000040c5 <_ZZ15Stop_IrrigationvE3__c>:
    40c5:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    40d5:	67 61 74 69 6f 6e 00                                gation.

000040dc <_ZZ16Start_IrrigationvE3__c_5>:
    40dc:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40ec:	53 74 61 72 74 00                                   Start.

000040f2 <_ZZ16Start_IrrigationvE3__c_4>:
    40f2:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

00004103 <_ZZ16Start_IrrigationvE3__c_3>:
    4103:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4113:	53 74 61 72 74 00                                   Start.

00004119 <_ZZ16Start_IrrigationvE3__c_2>:
    4119:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4129:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

00004136 <_ZZ16Start_IrrigationvE3__c_1>:
    4136:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4146:	72 20 6f 6e 00                                      r on.

0000414b <_ZZ16Start_IrrigationvE3__c_0>:
    414b:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    415b:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    416b:	31 31 31 31 31 31 00                                111111.

00004172 <_ZZ16Start_IrrigationvE3__c>:
    4172:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    4182:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

0000418e <_ZZ13Run_OperationvE3__c_21>:
    418e:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    419e:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

000041ab <_ZZ13Run_OperationvE3__c_19>:
    41ab:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    41bb:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    41cb:	20 53 74 61 72 74 00                                 Start.

000041d2 <_ZZ13Run_OperationvE3__c_18>:
    41d2:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41e2:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    41f2:	72 6f 75 67 68 20 61 70 70 00                       rough app.

000041fc <_ZZ13Run_OperationvE3__c_17>:
    41fc:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    420c:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    421c:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    422c:	20 33 00                                             3.

0000422f <_ZZ13Run_OperationvE3__c_16>:
    422f:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    423f:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    424f:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    425f:	20 32 00                                             2.

00004262 <_ZZ13Run_OperationvE3__c_15>:
    4262:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4272:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4282:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4292:	20 31 00                                             1.

00004295 <_ZZ13Run_OperationvE3__c_14>:
    4295:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42a5:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    42b5:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    42c5:	20 30 00                                             0.

000042c8 <_ZZ13Run_OperationvE3__c_13>:
    42c8:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42d8:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

000042e5 <_ZZ13Run_OperationvE3__c_12>:
    42e5:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    42f5:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

00004300 <_ZZ13Run_OperationvE3__c_11>:
    4300:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4310:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    4320:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4330:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4340:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004348 <_ZZ13Run_OperationvE3__c_10>:
    4348:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4358:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    4368:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4378:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4388:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004390 <_ZZ13Run_OperationvE3__c_9>:
    4390:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    43a0:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    43b0:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    43c0:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    43d0:	74 20 00                                            t .

000043d3 <_ZZ13Run_OperationvE3__c_8>:
    43d3:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    43e3:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    43f3:	74 00                                               t.

000043f5 <_ZZ13Run_OperationvE3__c_7>:
    43f5:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    4405:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    4415:	6f 75 67 68 20 61 70 70 00                          ough app.

0000441e <_ZZ13Run_OperationvE3__c_6>:
    441e:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    442e:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

00004439 <_ZZ13Run_OperationvE3__c_5>:
    4439:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    4449:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    4459:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

00004468 <_ZZ13Run_OperationvE3__c_3>:
    4468:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4478:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

00004489 <_ZZ13Run_OperationvE3__c_2>:
    4489:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4499:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    44a9:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

000044b4 <_ZZ13Run_OperationvE3__c_1>:
    44b4:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    44c4:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    44d4:	74 00                                               t.

000044d6 <_ZZ13Run_OperationvE3__c_0>:
    44d6:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    44e6:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    44f6:	74 6f 20 73 74 6f 70 00                             to stop.

000044fe <_ZZ13Run_OperationvE3__c>:
    44fe:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    450e:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    451e:	6e 20 53 74 61 72 74 00                             n Start.

00004526 <_ZZ21Select_Operation_ModevE3__c_11>:
    4526:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    4536:	65 64 00                                            ed.

00004539 <_ZZ21Select_Operation_ModevE3__c_10>:
    4539:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4549:	65 64 00                                            ed.

0000454c <_ZZ21Select_Operation_ModevE3__c_9>:
    454c:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    455c:	63 74 65 64 00                                      cted.

00004561 <_ZZ21Select_Operation_ModevE3__c_8>:
    4561:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4571:	65 64 00                                            ed.

00004574 <_ZZ21Select_Operation_ModevE3__c_7>:
    4574:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4584:	63 74 65 64 00                                      cted.

00004589 <_ZZ21Select_Operation_ModevE3__c_6>:
    4589:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4599:	63 74 65 64 00                                      cted.

0000459e <_ZZ21Select_Operation_ModevE3__c_5>:
    459e:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45ae:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

000045ba <_ZZ21Select_Operation_ModevE3__c_4>:
    45ba:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    45ca:	65 64 00                                            ed.

000045cd <_ZZ21Select_Operation_ModevE3__c_3>:
    45cd:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45dd:	74 65 64 00                                         ted.

000045e1 <_ZZ21Select_Operation_ModevE3__c_2>:
    45e1:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45f1:	74 65 64 00                                         ted.

000045f5 <_ZZ21Select_Operation_ModevE3__c_1>:
    45f5:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    4605:	20 73 65 6c 65 63 74 65 64 00                        selected.

0000460f <_ZZ21Select_Operation_ModevE3__c_0>:
    460f:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    461f:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

0000462b <_ZZ21Select_Operation_ModevE3__c>:
    462b:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    463b:	63 74 65 64 00                                      cted.

00004640 <digital_pin_to_timer_PGM>:
    4640:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    466c:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00004686 <digital_pin_to_bit_mask_PGM>:
    4686:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    4696:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    46a6:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    46b6:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    46c6:	04 08 10 20 40 80                                   ... @.

000046cc <digital_pin_to_port_PGM>:
    46cc:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    46dc:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    46ec:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    46fc:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    470c:	0b 0b 0b 0b 0b 0b                                   ......

00004712 <port_to_input_PGM>:
    4712:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    4722:	00 01 00 00 03 01 06 01 09 01                       ..........

0000472c <port_to_output_PGM>:
    472c:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    473c:	02 01 00 00 05 01 08 01 0b 01                       ..........

00004746 <port_to_mode_PGM>:
    4746:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    4756:	01 01 00 00 04 01 07 01 0a 01                       ..........

00004760 <_ZL18MODEM_CONFIG_TABLE>:
    4760:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04 00     rt..t.H..x..r...

00004770 <__ctors_start>:
    4770:	23 68       	ori	r18, 0x83	; 131
    4772:	a9 d4       	rcall	.+2386   	; 0x50c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x202>
    4774:	ff d4       	rcall	.+2558   	; 0x5174 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2b0>
    4776:	5b dd       	rcall	.-1354   	; 0x422e <_ZZ13Run_OperationvE3__c_17+0x32>
    4778:	11 e3       	ldi	r17, 0x31	; 49

0000477a <__ctors_end>:
    477a:	11 24       	eor	r1, r1
    477c:	1f be       	out	0x3f, r1	; 63
    477e:	cf ef       	ldi	r28, 0xFF	; 255
    4780:	d1 e2       	ldi	r29, 0x21	; 33
    4782:	de bf       	out	0x3e, r29	; 62
    4784:	cd bf       	out	0x3d, r28	; 61
    4786:	00 e0       	ldi	r16, 0x00	; 0
    4788:	0c bf       	out	0x3c, r16	; 60

0000478a <__do_copy_data>:
    478a:	19 e0       	ldi	r17, 0x09	; 9
    478c:	a0 e0       	ldi	r26, 0x00	; 0
    478e:	b2 e0       	ldi	r27, 0x02	; 2
    4790:	e4 e6       	ldi	r30, 0x64	; 100
    4792:	f2 ee       	ldi	r31, 0xE2	; 226
    4794:	01 e0       	ldi	r16, 0x01	; 1
    4796:	0b bf       	out	0x3b, r16	; 59
    4798:	02 c0       	rjmp	.+4      	; 0x479e <__do_copy_data+0x14>
    479a:	07 90       	elpm	r0, Z+
    479c:	0d 92       	st	X+, r0
    479e:	a6 31       	cpi	r26, 0x16	; 22
    47a0:	b1 07       	cpc	r27, r17
    47a2:	d9 f7       	brne	.-10     	; 0x479a <__do_copy_data+0x10>

000047a4 <__do_clear_bss>:
    47a4:	29 e1       	ldi	r18, 0x19	; 25
    47a6:	a6 e1       	ldi	r26, 0x16	; 22
    47a8:	b9 e0       	ldi	r27, 0x09	; 9
    47aa:	01 c0       	rjmp	.+2      	; 0x47ae <.do_clear_bss_start>

000047ac <.do_clear_bss_loop>:
    47ac:	1d 92       	st	X+, r1

000047ae <.do_clear_bss_start>:
    47ae:	a9 32       	cpi	r26, 0x29	; 41
    47b0:	b2 07       	cpc	r27, r18
    47b2:	e1 f7       	brne	.-8      	; 0x47ac <.do_clear_bss_loop>

000047b4 <__do_global_ctors>:
    47b4:	13 e2       	ldi	r17, 0x23	; 35
    47b6:	cd eb       	ldi	r28, 0xBD	; 189
    47b8:	d3 e2       	ldi	r29, 0x23	; 35
    47ba:	00 e0       	ldi	r16, 0x00	; 0
    47bc:	06 c0       	rjmp	.+12     	; 0x47ca <__do_global_ctors+0x16>
    47be:	21 97       	sbiw	r28, 0x01	; 1
    47c0:	01 09       	sbc	r16, r1
    47c2:	80 2f       	mov	r24, r16
    47c4:	fe 01       	movw	r30, r28
    47c6:	0e 94 f6 eb 	call	0x1d7ec	; 0x1d7ec <__tablejump2__>
    47ca:	c8 3b       	cpi	r28, 0xB8	; 184
    47cc:	d1 07       	cpc	r29, r17
    47ce:	80 e0       	ldi	r24, 0x00	; 0
    47d0:	08 07       	cpc	r16, r24
    47d2:	a9 f7       	brne	.-22     	; 0x47be <__do_global_ctors+0xa>
    47d4:	0e 94 cc 84 	call	0x10998	; 0x10998 <main>
    47d8:	0c 94 30 f1 	jmp	0x1e260	; 0x1e260 <_exit>

000047dc <__bad_interrupt>:
    47dc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000047e0 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    47e0:	dc 01       	movw	r26, r24
    47e2:	ed 91       	ld	r30, X+
    47e4:	fc 91       	ld	r31, X
    47e6:	02 80       	ldd	r0, Z+2	; 0x02
    47e8:	f3 81       	ldd	r31, Z+3	; 0x03
    47ea:	e0 2d       	mov	r30, r0
    47ec:	19 94       	eijmp

000047ee <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47ee:	ff 92       	push	r15
    47f0:	0f 93       	push	r16
    47f2:	1f 93       	push	r17
    47f4:	cf 93       	push	r28
    47f6:	df 93       	push	r29
    47f8:	ec 01       	movw	r28, r24
    47fa:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    47fc:	08 81       	ld	r16, Y
    47fe:	19 81       	ldd	r17, Y+1	; 0x01
    4800:	c8 01       	movw	r24, r16
    4802:	0e 94 14 f1 	call	0x1e228	; 0x1e228 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4806:	f8 16       	cp	r15, r24
    4808:	21 f0       	breq	.+8      	; 0x4812 <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    480a:	6f 2d       	mov	r22, r15
    480c:	c8 01       	movw	r24, r16
    480e:	0e 94 1c f1 	call	0x1e238	; 0x1e238 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4812:	ce 01       	movw	r24, r28
    4814:	df 91       	pop	r29
    4816:	cf 91       	pop	r28
    4818:	1f 91       	pop	r17
    481a:	0f 91       	pop	r16
    481c:	ff 90       	pop	r15
    481e:	08 95       	ret

00004820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    4820:	0f 93       	push	r16
    4822:	1f 93       	push	r17
    4824:	cf 93       	push	r28
    4826:	df 93       	push	r29
    4828:	1f 92       	push	r1
    482a:	1f 92       	push	r1
    482c:	cd b7       	in	r28, 0x3d	; 61
    482e:	de b7       	in	r29, 0x3e	; 62
    4830:	8b 01       	movw	r16, r22
    4832:	fb 01       	movw	r30, r22
    4834:	60 81       	ld	r22, Z
    4836:	9a 83       	std	Y+2, r25	; 0x02
    4838:	89 83       	std	Y+1, r24	; 0x01
    483a:	ce 01       	movw	r24, r28
    483c:	01 96       	adiw	r24, 0x01	; 1
    483e:	d7 df       	rcall	.-82     	; 0x47ee <_ZN5EERef6updateEh>
    4840:	c8 01       	movw	r24, r16
    4842:	0f 90       	pop	r0
    4844:	0f 90       	pop	r0
    4846:	df 91       	pop	r29
    4848:	cf 91       	pop	r28
    484a:	1f 91       	pop	r17
    484c:	0f 91       	pop	r16
    484e:	08 95       	ret

00004850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    4850:	ef 92       	push	r14
    4852:	ff 92       	push	r15
    4854:	0f 93       	push	r16
    4856:	1f 93       	push	r17
    4858:	cf 93       	push	r28
    485a:	df 93       	push	r29
    485c:	1f 92       	push	r1
    485e:	1f 92       	push	r1
    4860:	cd b7       	in	r28, 0x3d	; 61
    4862:	de b7       	in	r29, 0x3e	; 62
    4864:	8b e9       	ldi	r24, 0x9B	; 155
    4866:	e8 2e       	mov	r14, r24
    4868:	84 e1       	ldi	r24, 0x14	; 20
    486a:	f8 2e       	mov	r15, r24
    486c:	0d ea       	ldi	r16, 0xAD	; 173
    486e:	1e e0       	ldi	r17, 0x0E	; 14
    4870:	f7 01       	movw	r30, r14
    4872:	61 91       	ld	r22, Z+
    4874:	7f 01       	movw	r14, r30
    4876:	1a 83       	std	Y+2, r17	; 0x02
    4878:	09 83       	std	Y+1, r16	; 0x01
    487a:	ce 01       	movw	r24, r28
    487c:	01 96       	adiw	r24, 0x01	; 1
    487e:	b7 df       	rcall	.-146    	; 0x47ee <_ZN5EERef6updateEh>
    4880:	0f 5f       	subi	r16, 0xFF	; 255
    4882:	1f 4f       	sbci	r17, 0xFF	; 255
    4884:	01 3b       	cpi	r16, 0xB1	; 177
    4886:	fe e0       	ldi	r31, 0x0E	; 14
    4888:	1f 07       	cpc	r17, r31
    488a:	91 f7       	brne	.-28     	; 0x4870 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    488c:	8b e9       	ldi	r24, 0x9B	; 155
    488e:	94 e1       	ldi	r25, 0x14	; 20
    4890:	0f 90       	pop	r0
    4892:	0f 90       	pop	r0
    4894:	df 91       	pop	r29
    4896:	cf 91       	pop	r28
    4898:	1f 91       	pop	r17
    489a:	0f 91       	pop	r16
    489c:	ff 90       	pop	r15
    489e:	ef 90       	pop	r14
    48a0:	08 95       	ret

000048a2 <_Z22Hard_Coded_Flush_Valveh>:
    48a2:	81 e0       	ldi	r24, 0x01	; 1
    48a4:	08 95       	ret

000048a6 <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    48a6:	80 91 c1 0e 	lds	r24, 0x0EC1	; 0x800ec1 <_sExtra_Plot+0xd9>
    48aa:	8d 36       	cpi	r24, 0x6D	; 109
    48ac:	09 f0       	breq	.+2      	; 0x48b0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    48ae:	7c c0       	rjmp	.+248    	; 0x49a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    48b0:	80 91 c0 0e 	lds	r24, 0x0EC0	; 0x800ec0 <_sExtra_Plot+0xd8>
    48b4:	88 23       	and	r24, r24
    48b6:	09 f4       	brne	.+2      	; 0x48ba <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    48b8:	56 c0       	rjmp	.+172    	; 0x4966 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    48ba:	80 91 c5 0e 	lds	r24, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    48be:	86 36       	cpi	r24, 0x66	; 102
    48c0:	31 f0       	breq	.+12     	; 0x48ce <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    48c2:	87 36       	cpi	r24, 0x67	; 103
    48c4:	41 f0       	breq	.+16     	; 0x48d6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    48c6:	85 36       	cpi	r24, 0x65	; 101
    48c8:	41 f4       	brne	.+16     	; 0x48da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48ca:	82 e0       	ldi	r24, 0x02	; 2
    48cc:	01 c0       	rjmp	.+2      	; 0x48d0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    48ce:	83 e0       	ldi	r24, 0x03	; 3
    48d0:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>

				}break;
    48d4:	2d c0       	rjmp	.+90     	; 0x4930 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    48d6:	84 e0       	ldi	r24, 0x04	; 4
    48d8:	fb cf       	rjmp	.-10     	; 0x48d0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48da:	82 e0       	ldi	r24, 0x02	; 2
    48dc:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    48e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    48e4:	81 30       	cpi	r24, 0x01	; 1
    48e6:	21 f5       	brne	.+72     	; 0x4930 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    48e8:	63 ec       	ldi	r22, 0xC3	; 195
    48ea:	78 e0       	ldi	r23, 0x08	; 8
    48ec:	86 ec       	ldi	r24, 0xC6	; 198
    48ee:	94 e1       	ldi	r25, 0x14	; 20
    48f0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    48f4:	4a e0       	ldi	r20, 0x0A	; 10
    48f6:	50 e0       	ldi	r21, 0x00	; 0
    48f8:	60 91 c5 0e 	lds	r22, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    48fc:	86 ec       	ldi	r24, 0xC6	; 198
    48fe:	94 e1       	ldi	r25, 0x14	; 20
    4900:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    4904:	86 ec       	ldi	r24, 0xC6	; 198
    4906:	94 e1       	ldi	r25, 0x14	; 20
    4908:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    490c:	69 ea       	ldi	r22, 0xA9	; 169
    490e:	78 e0       	ldi	r23, 0x08	; 8
    4910:	86 ec       	ldi	r24, 0xC6	; 198
    4912:	94 e1       	ldi	r25, 0x14	; 20
    4914:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    4918:	4a e0       	ldi	r20, 0x0A	; 10
    491a:	50 e0       	ldi	r21, 0x00	; 0
    491c:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    4920:	86 ec       	ldi	r24, 0xC6	; 198
    4922:	94 e1       	ldi	r25, 0x14	; 20
    4924:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    4928:	86 ec       	ldi	r24, 0xC6	; 198
    492a:	94 e1       	ldi	r25, 0x14	; 20
    492c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    4930:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4934:	81 11       	cpse	r24, r1
    4936:	46 c0       	rjmp	.+140    	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4938:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    493c:	81 30       	cpi	r24, 0x01	; 1
    493e:	51 f4       	brne	.+20     	; 0x4954 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    4940:	6d e7       	ldi	r22, 0x7D	; 125
    4942:	78 e0       	ldi	r23, 0x08	; 8
    4944:	86 ec       	ldi	r24, 0xC6	; 198
    4946:	94 e1       	ldi	r25, 0x14	; 20
    4948:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    494c:	86 ec       	ldi	r24, 0xC6	; 198
    494e:	94 e1       	ldi	r25, 0x14	; 20
    4950:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    4954:	83 e0       	ldi	r24, 0x03	; 3
    4956:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    495a:	6b e7       	ldi	r22, 0x7B	; 123
    495c:	74 e1       	ldi	r23, 0x14	; 20
    495e:	88 ea       	ldi	r24, 0xA8	; 168
    4960:	9c e0       	ldi	r25, 0x0C	; 12
    4962:	5e df       	rcall	.-324    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4964:	2f c0       	rjmp	.+94     	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    4966:	81 e0       	ldi	r24, 0x01	; 1
    4968:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    496c:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4970:	88 23       	and	r24, r24
    4972:	09 f4       	brne	.+2      	; 0x4976 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    4974:	48 c0       	rjmp	.+144    	; 0x4a06 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4976:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    497a:	81 30       	cpi	r24, 0x01	; 1
    497c:	51 f4       	brne	.+20     	; 0x4992 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    497e:	62 e5       	ldi	r22, 0x52	; 82
    4980:	78 e0       	ldi	r23, 0x08	; 8
    4982:	86 ec       	ldi	r24, 0xC6	; 198
    4984:	94 e1       	ldi	r25, 0x14	; 20
    4986:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    498a:	86 ec       	ldi	r24, 0xC6	; 198
    498c:	94 e1       	ldi	r25, 0x14	; 20
    498e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4992:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4996:	6b e7       	ldi	r22, 0x7B	; 123
    4998:	74 e1       	ldi	r23, 0x14	; 20
    499a:	88 ea       	ldi	r24, 0xA8	; 168
    499c:	9c e0       	ldi	r25, 0x0C	; 12
    499e:	40 df       	rcall	.-384    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    49a0:	85 e0       	ldi	r24, 0x05	; 5
    49a2:	0e 94 67 af 	call	0x15ece	; 0x15ece <_Z22Valve_Grouping_Handlerh>
    49a6:	0e c0       	rjmp	.+28     	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    49a8:	81 e0       	ldi	r24, 0x01	; 1
    49aa:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    49ae:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    49b2:	88 23       	and	r24, r24
    49b4:	41 f1       	breq	.+80     	; 0x4a06 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    49b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    49ba:	81 30       	cpi	r24, 0x01	; 1
    49bc:	51 f7       	brne	.-44     	; 0x4992 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    49be:	61 e4       	ldi	r22, 0x41	; 65
    49c0:	78 e0       	ldi	r23, 0x08	; 8
    49c2:	df cf       	rjmp	.-66     	; 0x4982 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    49c4:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    49c8:	82 30       	cpi	r24, 0x02	; 2
    49ca:	d8 f0       	brcs	.+54     	; 0x4a02 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    49cc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    49d0:	81 11       	cpse	r24, r1
    49d2:	32 c0       	rjmp	.+100    	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    49d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    49d8:	81 30       	cpi	r24, 0x01	; 1
    49da:	51 f4       	brne	.+20     	; 0x49f0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    49dc:	60 e3       	ldi	r22, 0x30	; 48
    49de:	78 e0       	ldi	r23, 0x08	; 8
    49e0:	86 ec       	ldi	r24, 0xC6	; 198
    49e2:	94 e1       	ldi	r25, 0x14	; 20
    49e4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    49e8:	86 ec       	ldi	r24, 0xC6	; 198
    49ea:	94 e1       	ldi	r25, 0x14	; 20
    49ec:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    49f0:	83 e0       	ldi	r24, 0x03	; 3
    49f2:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49f6:	6b e7       	ldi	r22, 0x7B	; 123
    49f8:	74 e1       	ldi	r23, 0x14	; 20
    49fa:	88 ea       	ldi	r24, 0xA8	; 168
    49fc:	9c e0       	ldi	r25, 0x0C	; 12
    49fe:	10 cf       	rjmp	.-480    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4a00:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    4a02:	81 30       	cpi	r24, 0x01	; 1
    4a04:	c9 f4       	brne	.+50     	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4a06:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4a0a:	88 23       	and	r24, r24
    4a0c:	a9 f0       	breq	.+42     	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4a0e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4a12:	81 30       	cpi	r24, 0x01	; 1
    4a14:	51 f4       	brne	.+20     	; 0x4a2a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    4a16:	6f e1       	ldi	r22, 0x1F	; 31
    4a18:	78 e0       	ldi	r23, 0x08	; 8
    4a1a:	86 ec       	ldi	r24, 0xC6	; 198
    4a1c:	94 e1       	ldi	r25, 0x14	; 20
    4a1e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4a22:	86 ec       	ldi	r24, 0xC6	; 198
    4a24:	94 e1       	ldi	r25, 0x14	; 20
    4a26:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4a2a:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4a2e:	6b e7       	ldi	r22, 0x7B	; 123
    4a30:	74 e1       	ldi	r23, 0x14	; 20
    4a32:	88 ea       	ldi	r24, 0xA8	; 168
    4a34:	9c e0       	ldi	r25, 0x0C	; 12
    4a36:	f4 ce       	rjmp	.-536    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    4a38:	08 95       	ret

00004a3a <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    4a3a:	e9 e5       	ldi	r30, 0x59	; 89
    4a3c:	fe e0       	ldi	r31, 0x0E	; 14
    4a3e:	2e e5       	ldi	r18, 0x5E	; 94
    4a40:	3e e0       	ldi	r19, 0x0E	; 14
    4a42:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    4a44:	91 91       	ld	r25, Z+
    4a46:	91 11       	cpse	r25, r1
		{
			total_valve++;
    4a48:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    4a4a:	2e 17       	cp	r18, r30
    4a4c:	3f 07       	cpc	r19, r31
    4a4e:	d1 f7       	brne	.-12     	; 0x4a44 <_Z17Flush_Controllingv+0xa>
    4a50:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    4a54:	82 30       	cpi	r24, 0x02	; 2
    4a56:	18 f4       	brcc	.+6      	; 0x4a5e <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    4a58:	81 e0       	ldi	r24, 0x01	; 1
    4a5a:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    4a5e:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4a62:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4a66:	81 34       	cpi	r24, 0x41	; 65
    4a68:	98 43       	sbci	r25, 0x38	; 56
    4a6a:	30 f0       	brcs	.+12     	; 0x4a78 <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    4a6c:	80 e4       	ldi	r24, 0x40	; 64
    4a6e:	98 e3       	ldi	r25, 0x38	; 56
    4a70:	90 93 e9 0b 	sts	0x0BE9, r25	; 0x800be9 <_sSchedules+0x2cb>
    4a74:	80 93 e8 0b 	sts	0x0BE8, r24	; 0x800be8 <_sSchedules+0x2ca>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a78:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4a7c:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4a80:	85 38       	cpi	r24, 0x85	; 133
    4a82:	93 40       	sbci	r25, 0x03	; 3
    4a84:	30 f0       	brcs	.+12     	; 0x4a92 <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a86:	84 e8       	ldi	r24, 0x84	; 132
    4a88:	93 e0       	ldi	r25, 0x03	; 3
    4a8a:	90 93 eb 0b 	sts	0x0BEB, r25	; 0x800beb <_sSchedules+0x2cd>
    4a8e:	80 93 ea 0b 	sts	0x0BEA, r24	; 0x800bea <_sSchedules+0x2cc>
	}
	
	
	if(flush_time_save > 40)
    4a92:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
    4a96:	89 32       	cpi	r24, 0x29	; 41
    4a98:	20 f0       	brcs	.+8      	; 0x4aa2 <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a9a:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a9e:	d8 de       	rcall	.-592    	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4aa0:	03 c0       	rjmp	.+6      	; 0x4aa8 <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4aa2:	8f 5f       	subi	r24, 0xFF	; 255
    4aa4:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4aa8:	80 91 55 0e 	lds	r24, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
    4aac:	89 36       	cpi	r24, 0x69	; 105
    4aae:	09 f0       	breq	.+2      	; 0x4ab2 <_Z17Flush_Controllingv+0x78>
    4ab0:	38 c1       	rjmp	.+624    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4ab2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4ab6:	82 30       	cpi	r24, 0x02	; 2
    4ab8:	09 f4       	brne	.+2      	; 0x4abc <_Z17Flush_Controllingv+0x82>
    4aba:	f9 c0       	rjmp	.+498    	; 0x4cae <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4abc:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    4ac0:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4ac4:	89 2b       	or	r24, r25
    4ac6:	09 f0       	breq	.+2      	; 0x4aca <_Z17Flush_Controllingv+0x90>
    4ac8:	2c c1       	rjmp	.+600    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4aca:	68 ee       	ldi	r22, 0xE8	; 232
    4acc:	72 e0       	ldi	r23, 0x02	; 2
    4ace:	86 ec       	ldi	r24, 0xC6	; 198
    4ad0:	94 e1       	ldi	r25, 0x14	; 20
    4ad2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4ad6:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4ada:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4ade:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4ae2:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4ae6:	2a e0       	ldi	r18, 0x0A	; 10
    4ae8:	30 e0       	ldi	r19, 0x00	; 0
    4aea:	86 ec       	ldi	r24, 0xC6	; 198
    4aec:	94 e1       	ldi	r25, 0x14	; 20
    4aee:	0e 94 f1 d5 	call	0x1abe2	; 0x1abe2 <_ZN5Print5printEmi>
				Serial.println();
    4af2:	86 ec       	ldi	r24, 0xC6	; 198
    4af4:	94 e1       	ldi	r25, 0x14	; 20
    4af6:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4afa:	86 ec       	ldi	r24, 0xC6	; 198
    4afc:	94 e1       	ldi	r25, 0x14	; 20
    4afe:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4b02:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4b06:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4b0a:	a0 e0       	ldi	r26, 0x00	; 0
    4b0c:	b0 e0       	ldi	r27, 0x00	; 0
    4b0e:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4b12:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4b16:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4b1a:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4b1e:	84 17       	cp	r24, r20
    4b20:	95 07       	cpc	r25, r21
    4b22:	a6 07       	cpc	r26, r22
    4b24:	b7 07       	cpc	r27, r23
    4b26:	08 f0       	brcs	.+2      	; 0x4b2a <_Z17Flush_Controllingv+0xf0>
    4b28:	fc c0       	rjmp	.+504    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4b2a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4b2e:	81 30       	cpi	r24, 0x01	; 1
    4b30:	09 f0       	breq	.+2      	; 0x4b34 <_Z17Flush_Controllingv+0xfa>
    4b32:	68 c0       	rjmp	.+208    	; 0x4c04 <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4b34:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4b38:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4b3c:	89 2b       	or	r24, r25
    4b3e:	f9 f0       	breq	.+62     	; 0x4b7e <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4b40:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4b44:	81 30       	cpi	r24, 0x01	; 1
    4b46:	51 f4       	brne	.+20     	; 0x4b5c <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4b48:	66 ed       	ldi	r22, 0xD6	; 214
    4b4a:	72 e0       	ldi	r23, 0x02	; 2
    4b4c:	86 ec       	ldi	r24, 0xC6	; 198
    4b4e:	94 e1       	ldi	r25, 0x14	; 20
    4b50:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4b54:	86 ec       	ldi	r24, 0xC6	; 198
    4b56:	94 e1       	ldi	r25, 0x14	; 20
    4b58:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b5c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4b60:	81 11       	cpse	r24, r1
    4b62:	13 c1       	rjmp	.+550    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
    4b64:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4b68:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4b6c:	89 2b       	or	r24, r25
    4b6e:	09 f4       	brne	.+2      	; 0x4b72 <_Z17Flush_Controllingv+0x138>
    4b70:	0c c1       	rjmp	.+536    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b72:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4b76:	81 30       	cpi	r24, 0x01	; 1
    4b78:	09 f0       	breq	.+2      	; 0x4b7c <_Z17Flush_Controllingv+0x142>
    4b7a:	d3 c0       	rjmp	.+422    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
    4b7c:	06 c1       	rjmp	.+524    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b7e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4b82:	83 30       	cpi	r24, 0x03	; 3
    4b84:	49 f4       	brne	.+18     	; 0x4b98 <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b86:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4b8a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b8e:	88 60       	ori	r24, 0x08	; 8
    4b90:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b94:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b98:	84 e0       	ldi	r24, 0x04	; 4
    4b9a:	0e 94 43 ca 	call	0x19486	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b9e:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4ba2:	88 23       	and	r24, r24
    4ba4:	09 f4       	brne	.+2      	; 0x4ba8 <_Z17Flush_Controllingv+0x16e>
    4ba6:	7d c0       	rjmp	.+250    	; 0x4ca2 <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4ba8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4bac:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4bb0:	90 62       	ori	r25, 0x20	; 32
    4bb2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4bb6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4bba:	84 e0       	ldi	r24, 0x04	; 4
    4bbc:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4bc0:	82 e0       	ldi	r24, 0x02	; 2
    4bc2:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4bc6:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4bca:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4bce:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4bd2:	91 e0       	ldi	r25, 0x01	; 1
    4bd4:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4bd8:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4bdc:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4be0:	82 17       	cp	r24, r18
    4be2:	58 f0       	brcs	.+22     	; 0x4bfa <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4be4:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4be8:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4bec:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4bf0:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4bf4:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
    4bf8:	03 c0       	rjmp	.+6      	; 0x4c00 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4bfa:	8f 5f       	subi	r24, 0xFF	; 255
    4bfc:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4c00:	27 de       	rcall	.-946    	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4c02:	4f c0       	rjmp	.+158    	; 0x4ca2 <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4c04:	90 91 54 0e 	lds	r25, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    4c08:	91 11       	cpse	r25, r1
    4c0a:	bd c0       	rjmp	.+378    	; 0x4d86 <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4c0c:	20 91 e8 0b 	lds	r18, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4c10:	30 91 e9 0b 	lds	r19, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4c14:	23 2b       	or	r18, r19
    4c16:	09 f4       	brne	.+2      	; 0x4c1a <_Z17Flush_Controllingv+0x1e0>
    4c18:	b6 c0       	rjmp	.+364    	; 0x4d86 <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c1a:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    4c1e:	91 11       	cpse	r25, r1
    4c20:	03 c0       	rjmp	.+6      	; 0x4c28 <_Z17Flush_Controllingv+0x1ee>
    4c22:	88 23       	and	r24, r24
    4c24:	09 f4       	brne	.+2      	; 0x4c28 <_Z17Flush_Controllingv+0x1ee>
    4c26:	81 c0       	rjmp	.+258    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4c28:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    4c2c:	81 30       	cpi	r24, 0x01	; 1
    4c2e:	09 f0       	breq	.+2      	; 0x4c32 <_Z17Flush_Controllingv+0x1f8>
    4c30:	1a c1       	rjmp	.+564    	; 0x4e66 <_Z17Flush_Controllingv+0x42c>
    4c32:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4c36:	81 30       	cpi	r24, 0x01	; 1
    4c38:	09 f4       	brne	.+2      	; 0x4c3c <_Z17Flush_Controllingv+0x202>
    4c3a:	42 c1       	rjmp	.+644    	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4c3c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4c40:	85 30       	cpi	r24, 0x05	; 5
    4c42:	09 f4       	brne	.+2      	; 0x4c46 <_Z17Flush_Controllingv+0x20c>
    4c44:	2d c1       	rjmp	.+602    	; 0x4ea0 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c46:	84 e0       	ldi	r24, 0x04	; 4
    4c48:	0e 94 87 c9 	call	0x1930e	; 0x1930e <_Z26Start_Extra_Plot_Operationh>
    4c4c:	88 23       	and	r24, r24
    4c4e:	09 f4       	brne	.+2      	; 0x4c52 <_Z17Flush_Controllingv+0x218>
    4c50:	da c0       	rjmp	.+436    	; 0x4e06 <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4c52:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4c56:	81 30       	cpi	r24, 0x01	; 1
    4c58:	51 f4       	brne	.+20     	; 0x4c6e <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4c5a:	62 eb       	ldi	r22, 0xB2	; 178
    4c5c:	72 e0       	ldi	r23, 0x02	; 2
    4c5e:	86 ec       	ldi	r24, 0xC6	; 198
    4c60:	94 e1       	ldi	r25, 0x14	; 20
    4c62:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4c66:	86 ec       	ldi	r24, 0xC6	; 198
    4c68:	94 e1       	ldi	r25, 0x14	; 20
    4c6a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4c6e:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4c72:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4c76:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4c7a:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c7e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4c82:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c86:	90 62       	ori	r25, 0x20	; 32
    4c88:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c8c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c90:	84 e0       	ldi	r24, 0x04	; 4
    4c92:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c96:	82 e0       	ldi	r24, 0x02	; 2
    4c98:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c9c:	81 e0       	ldi	r24, 0x01	; 1
    4c9e:	80 93 6d 0e 	sts	0x0E6D, r24	; 0x800e6d <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4ca2:	6b ee       	ldi	r22, 0xEB	; 235
    4ca4:	7c e0       	ldi	r23, 0x0C	; 12
    4ca6:	87 eb       	ldi	r24, 0xB7	; 183
    4ca8:	9e e0       	ldi	r25, 0x0E	; 14
    4caa:	ba dd       	rcall	.-1164   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4cac:	3a c0       	rjmp	.+116    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4cae:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4cb2:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4cb6:	89 2b       	or	r24, r25
    4cb8:	21 f4       	brne	.+8      	; 0x4cc2 <_Z17Flush_Controllingv+0x288>
    4cba:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4cbe:	88 23       	and	r24, r24
    4cc0:	a1 f1       	breq	.+104    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4cc2:	10 92 a0 14 	sts	0x14A0, r1	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4cc6:	10 92 9f 14 	sts	0x149F, r1	; 0x80149f <_sRuble_Parameters+0xf1>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4cca:	84 e0       	ldi	r24, 0x04	; 4
    4ccc:	0e 94 43 ca 	call	0x19486	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4cd0:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4cd4:	88 23       	and	r24, r24
    4cd6:	09 f1       	breq	.+66     	; 0x4d1a <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4cd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4cdc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ce0:	90 62       	ori	r25, 0x20	; 32
    4ce2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ce6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4cea:	84 e0       	ldi	r24, 0x04	; 4
    4cec:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4cf0:	82 e0       	ldi	r24, 0x02	; 2
    4cf2:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4cf6:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4cfa:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cfe:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4d02:	81 e0       	ldi	r24, 0x01	; 1
    4d04:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4d08:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4d0c:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4d10:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4d14:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4d18:	9b dd       	rcall	.-1226   	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4d1a:	10 92 a8 14 	sts	0x14A8, r1	; 0x8014a8 <_sRuble_Parameters+0xfa>
    4d1e:	10 92 a7 14 	sts	0x14A7, r1	; 0x8014a7 <_sRuble_Parameters+0xf9>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4d22:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4d26:	81 11       	cpse	r24, r1
    4d28:	1d c0       	rjmp	.+58     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4d2a:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <__data_end>
    4d2e:	88 23       	and	r24, r24
    4d30:	c9 f0       	breq	.+50     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4d32:	80 91 17 09 	lds	r24, 0x0917	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4d36:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d3a:	8d 33       	cpi	r24, 0x3D	; 61
    4d3c:	91 05       	cpc	r25, r1
    4d3e:	68 f0       	brcs	.+26     	; 0x4d5a <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4d40:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d44:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4d48:	64 e0       	ldi	r22, 0x04	; 4
    4d4a:	80 e0       	ldi	r24, 0x00	; 0
    4d4c:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4d50:	88 23       	and	r24, r24
    4d52:	41 f0       	breq	.+16     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4d54:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <__data_end>
    4d58:	05 c0       	rjmp	.+10     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4d5a:	01 96       	adiw	r24, 0x01	; 1
    4d5c:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d60:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4d64:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4d68:	88 23       	and	r24, r24
    4d6a:	21 f0       	breq	.+8      	; 0x4d74 <_Z17Flush_Controllingv+0x33a>
    4d6c:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4d70:	98 17       	cp	r25, r24
    4d72:	40 f4       	brcc	.+16     	; 0x4d84 <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4d74:	81 e0       	ldi	r24, 0x01	; 1
    4d76:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d7a:	6b ee       	ldi	r22, 0xEB	; 235
    4d7c:	7c e0       	ldi	r23, 0x0C	; 12
    4d7e:	87 eb       	ldi	r24, 0xB7	; 183
    4d80:	9e e0       	ldi	r25, 0x0E	; 14
    4d82:	4e cd       	rjmp	.-1380   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d84:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d86:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d88:	08 95       	ret
    4d8a:	6b ee       	ldi	r22, 0xEB	; 235
    4d8c:	7c e0       	ldi	r23, 0x0C	; 12
    4d8e:	87 eb       	ldi	r24, 0xB7	; 183
    4d90:	9e e0       	ldi	r25, 0x0E	; 14
    4d92:	46 dd       	rcall	.-1396   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d94:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4d98:	81 30       	cpi	r24, 0x01	; 1
    4d9a:	51 f4       	brne	.+20     	; 0x4db0 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d9c:	64 ec       	ldi	r22, 0xC4	; 196
    4d9e:	72 e0       	ldi	r23, 0x02	; 2
    4da0:	86 ec       	ldi	r24, 0xC6	; 198
    4da2:	94 e1       	ldi	r25, 0x14	; 20
    4da4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4da8:	86 ec       	ldi	r24, 0xC6	; 198
    4daa:	94 e1       	ldi	r25, 0x14	; 20
    4dac:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4db0:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4db4:	88 23       	and	r24, r24
    4db6:	31 f0       	breq	.+12     	; 0x4dc4 <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4db8:	88 e5       	ldi	r24, 0x58	; 88
    4dba:	92 e0       	ldi	r25, 0x02	; 2
    4dbc:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4dc0:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4dc4:	84 e0       	ldi	r24, 0x04	; 4
    4dc6:	0e 94 43 ca 	call	0x19486	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4dca:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4dce:	88 23       	and	r24, r24
    4dd0:	09 f4       	brne	.+2      	; 0x4dd4 <_Z17Flush_Controllingv+0x39a>
    4dd2:	ab cf       	rjmp	.-170    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dd4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4dd8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ddc:	90 62       	ori	r25, 0x20	; 32
    4dde:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4de2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4de6:	84 e0       	ldi	r24, 0x04	; 4
    4de8:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4dec:	82 e0       	ldi	r24, 0x02	; 2
    4dee:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4df2:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4df6:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dfa:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4dfe:	81 e0       	ldi	r24, 0x01	; 1
    4e00:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
    4e04:	2e c0       	rjmp	.+92     	; 0x4e62 <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4e06:	88 e5       	ldi	r24, 0x58	; 88
    4e08:	92 e0       	ldi	r25, 0x02	; 2
    4e0a:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4e0e:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4e12:	84 e0       	ldi	r24, 0x04	; 4
    4e14:	0e 94 43 ca 	call	0x19486	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4e18:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4e1c:	88 23       	and	r24, r24
    4e1e:	09 f4       	brne	.+2      	; 0x4e22 <_Z17Flush_Controllingv+0x3e8>
    4e20:	84 cf       	rjmp	.-248    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4e22:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4e26:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4e2a:	90 62       	ori	r25, 0x20	; 32
    4e2c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4e30:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4e34:	84 e0       	ldi	r24, 0x04	; 4
    4e36:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4e3a:	82 e0       	ldi	r24, 0x02	; 2
    4e3c:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4e40:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4e44:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4e48:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4e4c:	81 e0       	ldi	r24, 0x01	; 1
    4e4e:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4e52:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4e56:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4e5a:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4e5e:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4e62:	f6 dc       	rcall	.-1556   	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4e64:	5e cf       	rjmp	.-324    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4e66:	82 30       	cpi	r24, 0x02	; 2
    4e68:	08 f4       	brcc	.+2      	; 0x4e6c <_Z17Flush_Controllingv+0x432>
    4e6a:	e8 ce       	rjmp	.-560    	; 0x4c3c <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4e6c:	90 e0       	ldi	r25, 0x00	; 0
    4e6e:	02 97       	sbiw	r24, 0x02	; 2
    4e70:	2b e0       	ldi	r18, 0x0B	; 11
    4e72:	28 9f       	mul	r18, r24
    4e74:	f0 01       	movw	r30, r0
    4e76:	29 9f       	mul	r18, r25
    4e78:	f0 0d       	add	r31, r0
    4e7a:	11 24       	eor	r1, r1
    4e7c:	ec 50       	subi	r30, 0x0C	; 12
    4e7e:	f4 4f       	sbci	r31, 0xF4	; 244
    4e80:	80 85       	ldd	r24, Z+8	; 0x08
    4e82:	91 85       	ldd	r25, Z+9	; 0x09
    4e84:	9c 01       	movw	r18, r24
    4e86:	23 70       	andi	r18, 0x03	; 3
    4e88:	33 27       	eor	r19, r19
    4e8a:	23 30       	cpi	r18, 0x03	; 3
    4e8c:	31 05       	cpc	r19, r1
    4e8e:	c1 f4       	brne	.+48     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e90:	82 ff       	sbrs	r24, 2
    4e92:	16 c0       	rjmp	.+44     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e94:	88 7b       	andi	r24, 0xB8	; 184
    4e96:	92 70       	andi	r25, 0x02	; 2
    4e98:	89 2b       	or	r24, r25
    4e9a:	09 f4       	brne	.+2      	; 0x4e9e <_Z17Flush_Controllingv+0x464>
    4e9c:	cf ce       	rjmp	.-610    	; 0x4c3c <_Z17Flush_Controllingv+0x202>
    4e9e:	10 c0       	rjmp	.+32     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4ea0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4ea4:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4ea8:	89 2b       	or	r24, r25
    4eaa:	09 f4       	brne	.+2      	; 0x4eae <_Z17Flush_Controllingv+0x474>
    4eac:	cc ce       	rjmp	.-616    	; 0x4c46 <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4eae:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4eb2:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4eb6:	44 96       	adiw	r24, 0x14	; 20
    4eb8:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4ebc:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4ec0:	80 e0       	ldi	r24, 0x00	; 0
    4ec2:	08 95       	ret

00004ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4ec4:	2f 92       	push	r2
    4ec6:	3f 92       	push	r3
    4ec8:	4f 92       	push	r4
    4eca:	5f 92       	push	r5
    4ecc:	6f 92       	push	r6
    4ece:	7f 92       	push	r7
    4ed0:	8f 92       	push	r8
    4ed2:	9f 92       	push	r9
    4ed4:	af 92       	push	r10
    4ed6:	bf 92       	push	r11
    4ed8:	cf 92       	push	r12
    4eda:	df 92       	push	r13
    4edc:	ef 92       	push	r14
    4ede:	ff 92       	push	r15
    4ee0:	0f 93       	push	r16
    4ee2:	1f 93       	push	r17
    4ee4:	cf 93       	push	r28
    4ee6:	df 93       	push	r29
    4ee8:	cd b7       	in	r28, 0x3d	; 61
    4eea:	de b7       	in	r29, 0x3e	; 62
    4eec:	e9 97       	sbiw	r28, 0x39	; 57
    4eee:	0f b6       	in	r0, 0x3f	; 63
    4ef0:	f8 94       	cli
    4ef2:	de bf       	out	0x3e, r29	; 62
    4ef4:	0f be       	out	0x3f, r0	; 63
    4ef6:	cd bf       	out	0x3d, r28	; 61
    4ef8:	78 2e       	mov	r7, r24
    4efa:	6b ab       	std	Y+51, r22	; 0x33
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4efc:	88 e0       	ldi	r24, 0x08	; 8
    4efe:	e3 e6       	ldi	r30, 0x63	; 99
    4f00:	f2 e0       	ldi	r31, 0x02	; 2
    4f02:	de 01       	movw	r26, r28
    4f04:	9b 96       	adiw	r26, 0x2b	; 43
    4f06:	01 90       	ld	r0, Z+
    4f08:	0d 92       	st	X+, r0
    4f0a:	8a 95       	dec	r24
    4f0c:	e1 f7       	brne	.-8      	; 0x4f06 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4f0e:	9e 01       	movw	r18, r28
    4f10:	2f 5f       	subi	r18, 0xFF	; 255
    4f12:	3f 4f       	sbci	r19, 0xFF	; 255
    4f14:	29 01       	movw	r4, r18
    4f16:	8a e2       	ldi	r24, 0x2A	; 42
    4f18:	d9 01       	movw	r26, r18
    4f1a:	1d 92       	st	X+, r1
    4f1c:	8a 95       	dec	r24
    4f1e:	e9 f7       	brne	.-6      	; 0x4f1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4f20:	2e e4       	ldi	r18, 0x4E	; 78
    4f22:	a2 2e       	mov	r10, r18
    4f24:	2d e0       	ldi	r18, 0x0D	; 13
    4f26:	b2 2e       	mov	r11, r18
    4f28:	22 ea       	ldi	r18, 0xA2	; 162
    4f2a:	3d e0       	ldi	r19, 0x0D	; 13
    4f2c:	65 01       	movw	r12, r10
	total_valve_number = _kRESET;
    4f2e:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4f30:	f6 01       	movw	r30, r12
    4f32:	80 81       	ld	r24, Z
    4f34:	81 50       	subi	r24, 0x01	; 1
    4f36:	8e 30       	cpi	r24, 0x0E	; 14
    4f38:	d8 f5       	brcc	.+118    	; 0x4fb0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xec>
    4f3a:	d6 01       	movw	r26, r12
    4f3c:	65 e0       	ldi	r22, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4f3e:	89 81       	ldd	r24, Y+1	; 0x01
    4f40:	88 23       	and	r24, r24
    4f42:	f9 f0       	breq	.+62     	; 0x4f82 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
    4f44:	10 e0       	ldi	r17, 0x00	; 0
    4f46:	70 e0       	ldi	r23, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f48:	87 2f       	mov	r24, r23
    4f4a:	90 e0       	ldi	r25, 0x00	; 0
    4f4c:	a2 01       	movw	r20, r4
    4f4e:	48 0f       	add	r20, r24
    4f50:	59 1f       	adc	r21, r25
    4f52:	fa 01       	movw	r30, r20
    4f54:	50 81       	ld	r21, Z
    4f56:	55 23       	and	r21, r21
    4f58:	d1 f0       	breq	.+52     	; 0x4f8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4f5a:	11 96       	adiw	r26, 0x01	; 1
    4f5c:	4c 91       	ld	r20, X
    4f5e:	11 97       	sbiw	r26, 0x01	; 1
    4f60:	44 23       	and	r20, r20
    4f62:	69 f0       	breq	.+26     	; 0x4f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4f64:	54 17       	cp	r21, r20
    4f66:	99 f0       	breq	.+38     	; 0x4f8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4f68:	42 e0       	ldi	r20, 0x02	; 2
    4f6a:	50 e0       	ldi	r21, 0x00	; 0
    4f6c:	4c 0f       	add	r20, r28
    4f6e:	5d 1f       	adc	r21, r29
    4f70:	84 0f       	add	r24, r20
    4f72:	95 1f       	adc	r25, r21
    4f74:	fc 01       	movw	r30, r24
    4f76:	80 81       	ld	r24, Z
    4f78:	81 11       	cpse	r24, r1
    4f7a:	01 c0       	rjmp	.+2      	; 0x4f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
							{
								valve_number_not_match_flag = _kSET;
    4f7c:	11 e0       	ldi	r17, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f7e:	7f 5f       	subi	r23, 0xFF	; 255
    4f80:	e3 cf       	rjmp	.-58     	; 0x4f48 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f82:	11 96       	adiw	r26, 0x01	; 1
    4f84:	8c 91       	ld	r24, X
    4f86:	11 97       	sbiw	r26, 0x01	; 1
    4f88:	81 11       	cpse	r24, r1
    4f8a:	03 c0       	rjmp	.+6      	; 0x4f92 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce>
    4f8c:	0d c0       	rjmp	.+26     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f8e:	11 23       	and	r17, r17
    4f90:	59 f0       	breq	.+22     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f92:	11 96       	adiw	r26, 0x01	; 1
    4f94:	4c 91       	ld	r20, X
    4f96:	11 97       	sbiw	r26, 0x01	; 1
    4f98:	43 31       	cpi	r20, 0x13	; 19
    4f9a:	30 f4       	brcc	.+12     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f9c:	c2 01       	movw	r24, r4
    4f9e:	8f 0d       	add	r24, r15
    4fa0:	91 1d       	adc	r25, r1
    4fa2:	fc 01       	movw	r30, r24
    4fa4:	40 83       	st	Z, r20
						total_valve_number++;
    4fa6:	f3 94       	inc	r15
    4fa8:	61 50       	subi	r22, 0x01	; 1
    4faa:	11 96       	adiw	r26, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4fac:	61 11       	cpse	r22, r1
    4fae:	c7 cf       	rjmp	.-114    	; 0x4f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7a>
    4fb0:	f6 e0       	ldi	r31, 0x06	; 6
    4fb2:	cf 0e       	add	r12, r31
    4fb4:	d1 1c       	adc	r13, r1
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4fb6:	2c 15       	cp	r18, r12
    4fb8:	3d 05       	cpc	r19, r13
    4fba:	09 f0       	breq	.+2      	; 0x4fbe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa>
    4fbc:	b9 cf       	rjmp	.-142    	; 0x4f30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4fbe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4fc2:	81 30       	cpi	r24, 0x01	; 1
    4fc4:	59 f5       	brne	.+86     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4fc6:	6e e0       	ldi	r22, 0x0E	; 14
    4fc8:	78 e0       	ldi	r23, 0x08	; 8
    4fca:	86 ec       	ldi	r24, 0xC6	; 198
    4fcc:	94 e1       	ldi	r25, 0x14	; 20
    4fce:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4fd2:	86 ec       	ldi	r24, 0xC6	; 198
    4fd4:	94 e1       	ldi	r25, 0x14	; 20
    4fd6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4fda:	e1 2c       	mov	r14, r1
    4fdc:	82 01       	movw	r16, r4
    4fde:	0e 0d       	add	r16, r14
    4fe0:	11 1d       	adc	r17, r1
    4fe2:	d8 01       	movw	r26, r16
    4fe4:	8c 91       	ld	r24, X
    4fe6:	88 23       	and	r24, r24
    4fe8:	c9 f0       	breq	.+50     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4fea:	6c ef       	ldi	r22, 0xFC	; 252
    4fec:	77 e0       	ldi	r23, 0x07	; 7
    4fee:	86 ec       	ldi	r24, 0xC6	; 198
    4ff0:	94 e1       	ldi	r25, 0x14	; 20
    4ff2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4ff6:	f8 01       	movw	r30, r16
    4ff8:	60 81       	ld	r22, Z
    4ffa:	70 e0       	ldi	r23, 0x00	; 0
    4ffc:	4a e0       	ldi	r20, 0x0A	; 10
    4ffe:	50 e0       	ldi	r21, 0x00	; 0
    5000:	86 ec       	ldi	r24, 0xC6	; 198
    5002:	94 e1       	ldi	r25, 0x14	; 20
    5004:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
			Serial.println();
    5008:	86 ec       	ldi	r24, 0xC6	; 198
    500a:	94 e1       	ldi	r25, 0x14	; 20
    500c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    5010:	86 ec       	ldi	r24, 0xC6	; 198
    5012:	94 e1       	ldi	r25, 0x14	; 20
    5014:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    5018:	e3 94       	inc	r14
    501a:	e0 cf       	rjmp	.-64     	; 0x4fdc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x118>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    501c:	fb a9       	ldd	r31, Y+51	; 0x33
    501e:	f3 30       	cpi	r31, 0x03	; 3
    5020:	09 f0       	breq	.+2      	; 0x5024 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x160>
    5022:	7d c0       	rjmp	.+250    	; 0x511e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x25a>
    5024:	98 ee       	ldi	r25, 0xE8	; 232
    5026:	c9 2e       	mov	r12, r25
    5028:	9d e0       	ldi	r25, 0x0D	; 13
    502a:	d9 2e       	mov	r13, r25
    502c:	22 e6       	ldi	r18, 0x62	; 98
    502e:	3f e0       	ldi	r19, 0x0F	; 15
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    5030:	d6 01       	movw	r26, r12
    5032:	11 96       	adiw	r26, 0x01	; 1
    5034:	8c 91       	ld	r24, X
    5036:	11 97       	sbiw	r26, 0x01	; 1
    5038:	85 56       	subi	r24, 0x65	; 101
    503a:	8e 30       	cpi	r24, 0x0E	; 14
    503c:	d0 f5       	brcc	.+116    	; 0x50b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ee>
    503e:	65 e0       	ldi	r22, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    5040:	89 81       	ldd	r24, Y+1	; 0x01
    5042:	88 23       	and	r24, r24
    5044:	f9 f0       	breq	.+62     	; 0x5084 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1c0>
    5046:	10 e0       	ldi	r17, 0x00	; 0
    5048:	70 e0       	ldi	r23, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    504a:	87 2f       	mov	r24, r23
    504c:	90 e0       	ldi	r25, 0x00	; 0
    504e:	a2 01       	movw	r20, r4
    5050:	48 0f       	add	r20, r24
    5052:	59 1f       	adc	r21, r25
    5054:	fa 01       	movw	r30, r20
    5056:	50 81       	ld	r21, Z
    5058:	55 23       	and	r21, r21
    505a:	d1 f0       	breq	.+52     	; 0x5090 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    505c:	15 96       	adiw	r26, 0x05	; 5
    505e:	4c 91       	ld	r20, X
    5060:	15 97       	sbiw	r26, 0x05	; 5
    5062:	44 23       	and	r20, r20
    5064:	69 f0       	breq	.+26     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    5066:	54 17       	cp	r21, r20
    5068:	99 f0       	breq	.+38     	; 0x5090 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    506a:	42 e0       	ldi	r20, 0x02	; 2
    506c:	50 e0       	ldi	r21, 0x00	; 0
    506e:	4c 0f       	add	r20, r28
    5070:	5d 1f       	adc	r21, r29
    5072:	84 0f       	add	r24, r20
    5074:	95 1f       	adc	r25, r21
    5076:	fc 01       	movw	r30, r24
    5078:	80 81       	ld	r24, Z
    507a:	81 11       	cpse	r24, r1
    507c:	01 c0       	rjmp	.+2      	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
								{
									valve_number_not_match_flag = _kSET;
    507e:	11 e0       	ldi	r17, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5080:	7f 5f       	subi	r23, 0xFF	; 255
    5082:	e3 cf       	rjmp	.-58     	; 0x504a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x186>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    5084:	15 96       	adiw	r26, 0x05	; 5
    5086:	8c 91       	ld	r24, X
    5088:	15 97       	sbiw	r26, 0x05	; 5
    508a:	81 11       	cpse	r24, r1
    508c:	03 c0       	rjmp	.+6      	; 0x5094 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
    508e:	0d c0       	rjmp	.+26     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5090:	11 23       	and	r17, r17
    5092:	59 f0       	breq	.+22     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5094:	15 96       	adiw	r26, 0x05	; 5
    5096:	4c 91       	ld	r20, X
    5098:	15 97       	sbiw	r26, 0x05	; 5
    509a:	43 31       	cpi	r20, 0x13	; 19
    509c:	30 f4       	brcc	.+12     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    509e:	c2 01       	movw	r24, r4
    50a0:	8f 0d       	add	r24, r15
    50a2:	91 1d       	adc	r25, r1
    50a4:	fc 01       	movw	r30, r24
    50a6:	40 83       	st	Z, r20
							total_valve_number++;
    50a8:	f3 94       	inc	r15
    50aa:	61 50       	subi	r22, 0x01	; 1
    50ac:	11 96       	adiw	r26, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    50ae:	61 11       	cpse	r22, r1
    50b0:	c7 cf       	rjmp	.-114    	; 0x5040 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x17c>
    50b2:	fb e1       	ldi	r31, 0x1B	; 27
    50b4:	cf 0e       	add	r12, r31
    50b6:	d1 1c       	adc	r13, r1
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    50b8:	2c 15       	cp	r18, r12
    50ba:	3d 05       	cpc	r19, r13
    50bc:	09 f0       	breq	.+2      	; 0x50c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1fc>
    50be:	b8 cf       	rjmp	.-144    	; 0x5030 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x16c>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    50c0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    50c4:	81 30       	cpi	r24, 0x01	; 1
    50c6:	e9 f5       	brne	.+122    	; 0x5142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    50c8:	6b ee       	ldi	r22, 0xEB	; 235
    50ca:	77 e0       	ldi	r23, 0x07	; 7
    50cc:	86 ec       	ldi	r24, 0xC6	; 198
    50ce:	94 e1       	ldi	r25, 0x14	; 20
    50d0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50d4:	86 ec       	ldi	r24, 0xC6	; 198
    50d6:	94 e1       	ldi	r25, 0x14	; 20
    50d8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    50dc:	f1 2c       	mov	r15, r1
    50de:	82 01       	movw	r16, r4
    50e0:	0f 0d       	add	r16, r15
    50e2:	11 1d       	adc	r17, r1
    50e4:	d8 01       	movw	r26, r16
    50e6:	8c 91       	ld	r24, X
    50e8:	88 23       	and	r24, r24
    50ea:	e9 f0       	breq	.+58     	; 0x5126 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    50ec:	69 ed       	ldi	r22, 0xD9	; 217
    50ee:	77 e0       	ldi	r23, 0x07	; 7
    50f0:	86 ec       	ldi	r24, 0xC6	; 198
    50f2:	94 e1       	ldi	r25, 0x14	; 20
    50f4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    50f8:	f8 01       	movw	r30, r16
    50fa:	60 81       	ld	r22, Z
    50fc:	70 e0       	ldi	r23, 0x00	; 0
    50fe:	4a e0       	ldi	r20, 0x0A	; 10
    5100:	50 e0       	ldi	r21, 0x00	; 0
    5102:	86 ec       	ldi	r24, 0xC6	; 198
    5104:	94 e1       	ldi	r25, 0x14	; 20
    5106:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
				Serial.println();
    510a:	86 ec       	ldi	r24, 0xC6	; 198
    510c:	94 e1       	ldi	r25, 0x14	; 20
    510e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    5112:	86 ec       	ldi	r24, 0xC6	; 198
    5114:	94 e1       	ldi	r25, 0x14	; 20
    5116:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    511a:	f3 94       	inc	r15
    511c:	e0 cf       	rjmp	.-64     	; 0x50de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x21a>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    511e:	8b a9       	ldd	r24, Y+51	; 0x33
    5120:	85 30       	cpi	r24, 0x05	; 5
    5122:	09 f0       	breq	.+2      	; 0x5126 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
    5124:	9b c1       	rjmp	.+822    	; 0x545c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5126:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    512a:	81 30       	cpi	r24, 0x01	; 1
    512c:	51 f4       	brne	.+20     	; 0x5142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    512e:	6e ea       	ldi	r22, 0xAE	; 174
    5130:	77 e0       	ldi	r23, 0x07	; 7
    5132:	86 ec       	ldi	r24, 0xC6	; 198
    5134:	94 e1       	ldi	r25, 0x14	; 20
    5136:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    513a:	86 ec       	ldi	r24, 0xC6	; 198
    513c:	94 e1       	ldi	r25, 0x14	; 20
    513e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5142:	05 e1       	ldi	r16, 0x15	; 21
    5144:	1c e0       	ldi	r17, 0x0C	; 12
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    5146:	b4 e0       	ldi	r27, 0x04	; 4
    5148:	cb 2e       	mov	r12, r27
    514a:	d1 2c       	mov	r13, r1
    514c:	e1 2c       	mov	r14, r1
    514e:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5150:	8d e0       	ldi	r24, 0x0D	; 13
    5152:	28 2e       	mov	r2, r24
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    5154:	d8 01       	movw	r26, r16
    5156:	8c 91       	ld	r24, X
    5158:	88 23       	and	r24, r24
    515a:	21 f1       	breq	.+72     	; 0x51a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e0>
    515c:	31 2c       	mov	r3, r1
    515e:	40 e0       	ldi	r20, 0x00	; 0
    5160:	39 c0       	rjmp	.+114    	; 0x51d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x310>
    5162:	9e 01       	movw	r18, r28
    5164:	25 5d       	subi	r18, 0xD5	; 213
    5166:	3f 4f       	sbci	r19, 0xFF	; 255
    5168:	3d ab       	std	Y+53, r19	; 0x35
    516a:	2c ab       	std	Y+52, r18	; 0x34
			{
				for(k=0;valve_number_list[k]!=0;k++)
    516c:	99 24       	eor	r9, r9
    516e:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    5170:	a7 01       	movw	r20, r14
    5172:	4f 5f       	subi	r20, 0xFF	; 255
    5174:	5f 4f       	sbci	r21, 0xFF	; 255
    5176:	5f ab       	std	Y+55, r21	; 0x37
    5178:	4e ab       	std	Y+54, r20	; 0x36
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    517a:	2e 9c       	mul	r2, r14
    517c:	c0 01       	movw	r24, r0
    517e:	2f 9c       	mul	r2, r15
    5180:	90 0d       	add	r25, r0
    5182:	11 24       	eor	r1, r1
    5184:	dc 01       	movw	r26, r24
    5186:	ab 5e       	subi	r26, 0xEB	; 235
    5188:	b3 4f       	sbci	r27, 0xF3	; 243
    518a:	b9 af       	std	Y+57, r27	; 0x39
    518c:	a8 af       	std	Y+56, r26	; 0x38
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    518e:	ec a9       	ldd	r30, Y+52	; 0x34
    5190:	fd a9       	ldd	r31, Y+53	; 0x35
    5192:	81 91       	ld	r24, Z+
    5194:	fd ab       	std	Y+53, r31	; 0x35
    5196:	ec ab       	std	Y+52, r30	; 0x34
    5198:	83 21       	and	r24, r3
    519a:	49 f5       	brne	.+82     	; 0x51ee <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32a>
    519c:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    519e:	f4 e0       	ldi	r31, 0x04	; 4
    51a0:	9f 12       	cpse	r9, r31
    51a2:	f5 cf       	rjmp	.-22     	; 0x518e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2ca>
    51a4:	bf ef       	ldi	r27, 0xFF	; 255
    51a6:	eb 1a       	sub	r14, r27
    51a8:	fb 0a       	sbc	r15, r27
    51aa:	03 5f       	subi	r16, 0xF3	; 243
    51ac:	1f 4f       	sbci	r17, 0xFF	; 255
    51ae:	e3 e0       	ldi	r30, 0x03	; 3
    51b0:	ce 0e       	add	r12, r30
    51b2:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    51b4:	f5 e0       	ldi	r31, 0x05	; 5
    51b6:	ef 16       	cp	r14, r31
    51b8:	f1 04       	cpc	r15, r1
    51ba:	61 f6       	brne	.-104    	; 0x5154 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x290>
    51bc:	02 c1       	rjmp	.+516    	; 0x53c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4fe>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    51be:	82 17       	cp	r24, r18
    51c0:	93 07       	cpc	r25, r19
    51c2:	11 f4       	brne	.+4      	; 0x51c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x304>
						{
							total_valve_number |= hex_array[j];
    51c4:	50 81       	ld	r21, Z
    51c6:	35 2a       	or	r3, r21
    51c8:	01 96       	adiw	r24, 0x01	; 1
    51ca:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    51cc:	c8 16       	cp	r12, r24
    51ce:	d9 06       	cpc	r13, r25
    51d0:	b1 f7       	brne	.-20     	; 0x51be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    51d2:	4f 5f       	subi	r20, 0xFF	; 255
    51d4:	f2 01       	movw	r30, r4
    51d6:	e4 0f       	add	r30, r20
    51d8:	f1 1d       	adc	r31, r1
    51da:	20 81       	ld	r18, Z
    51dc:	22 23       	and	r18, r18
    51de:	09 f4       	brne	.+2      	; 0x51e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x31e>
    51e0:	c0 cf       	rjmp	.-128    	; 0x5162 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x29e>
    51e2:	c6 01       	movw	r24, r12
    51e4:	03 97       	sbiw	r24, 0x03	; 3
    51e6:	fe 01       	movw	r30, r28
    51e8:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    51ea:	30 e0       	ldi	r19, 0x00	; 0
    51ec:	e8 cf       	rjmp	.-48     	; 0x51be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
    51ee:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    51f0:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    51f2:	a5 ef       	ldi	r26, 0xF5	; 245
    51f4:	b3 e1       	ldi	r27, 0x13	; 19
    51f6:	e4 e1       	ldi	r30, 0x14	; 20
    51f8:	1d 92       	st	X+, r1
    51fa:	ea 95       	dec	r30
    51fc:	e9 f7       	brne	.-6      	; 0x51f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x334>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    51fe:	d8 01       	movw	r26, r16
    5200:	11 96       	adiw	r26, 0x01	; 1
    5202:	8c 91       	ld	r24, X
    5204:	11 97       	sbiw	r26, 0x01	; 1
    5206:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    520a:	12 96       	adiw	r26, 0x02	; 2
    520c:	8c 91       	ld	r24, X
    520e:	12 97       	sbiw	r26, 0x02	; 2
    5210:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5214:	13 96       	adiw	r26, 0x03	; 3
    5216:	8c 91       	ld	r24, X
    5218:	13 97       	sbiw	r26, 0x03	; 3
    521a:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    521e:	14 96       	adiw	r26, 0x04	; 4
    5220:	8c 91       	ld	r24, X
    5222:	14 97       	sbiw	r26, 0x04	; 4
    5224:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    5228:	15 96       	adiw	r26, 0x05	; 5
    522a:	8c 91       	ld	r24, X
    522c:	15 97       	sbiw	r26, 0x05	; 5
    522e:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5232:	16 96       	adiw	r26, 0x06	; 6
    5234:	8c 91       	ld	r24, X
    5236:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    523a:	b2 e0       	ldi	r27, 0x02	; 2
    523c:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5240:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5244:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    5248:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    524c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5250:	81 30       	cpi	r24, 0x01	; 1
    5252:	39 f5       	brne	.+78     	; 0x52a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3de>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    5254:	6b e8       	ldi	r22, 0x8B	; 139
    5256:	77 e0       	ldi	r23, 0x07	; 7
    5258:	86 ec       	ldi	r24, 0xC6	; 198
    525a:	94 e1       	ldi	r25, 0x14	; 20
    525c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5260:	4a e0       	ldi	r20, 0x0A	; 10
    5262:	50 e0       	ldi	r21, 0x00	; 0
    5264:	6e a9       	ldd	r22, Y+54	; 0x36
    5266:	7f a9       	ldd	r23, Y+55	; 0x37
    5268:	86 ec       	ldi	r24, 0xC6	; 198
    526a:	94 e1       	ldi	r25, 0x14	; 20
    526c:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    5270:	86 ec       	ldi	r24, 0xC6	; 198
    5272:	94 e1       	ldi	r25, 0x14	; 20
    5274:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    5278:	66 e7       	ldi	r22, 0x76	; 118
    527a:	77 e0       	ldi	r23, 0x07	; 7
    527c:	86 ec       	ldi	r24, 0xC6	; 198
    527e:	94 e1       	ldi	r25, 0x14	; 20
    5280:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    5284:	4c e0       	ldi	r20, 0x0C	; 12
    5286:	50 e0       	ldi	r21, 0x00	; 0
    5288:	65 ef       	ldi	r22, 0xF5	; 245
    528a:	73 e1       	ldi	r23, 0x13	; 19
    528c:	86 ec       	ldi	r24, 0xC6	; 198
    528e:	94 e1       	ldi	r25, 0x14	; 20
    5290:	a7 da       	rcall	.-2738   	; 0x47e0 <_ZN5Print5writeEPKcj>
								Serial.println();
    5292:	86 ec       	ldi	r24, 0xC6	; 198
    5294:	94 e1       	ldi	r25, 0x14	; 20
    5296:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    529a:	86 ec       	ldi	r24, 0xC6	; 198
    529c:	94 e1       	ldi	r25, 0x14	; 20
    529e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    52a2:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    52a6:	8c e0       	ldi	r24, 0x0C	; 12
    52a8:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
							
							
							if(Subscribed_data_check())
    52ac:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    52b0:	88 23       	and	r24, r24
    52b2:	a1 f0       	breq	.+40     	; 0x52dc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
							{
								if(Seperate_Out_Sub_Data())
    52b4:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    52b8:	88 23       	and	r24, r24
    52ba:	81 f0       	breq	.+32     	; 0x52dc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    52bc:	e0 ed       	ldi	r30, 0xD0	; 208
    52be:	ff e0       	ldi	r31, 0x0F	; 15
    52c0:	01 90       	ld	r0, Z+
    52c2:	00 20       	and	r0, r0
    52c4:	e9 f7       	brne	.-6      	; 0x52c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3fc>
    52c6:	31 97       	sbiw	r30, 0x01	; 1
    52c8:	af 01       	movw	r20, r30
    52ca:	40 5d       	subi	r20, 0xD0	; 208
    52cc:	5f 40       	sbci	r21, 0x0F	; 15
    52ce:	21 e0       	ldi	r18, 0x01	; 1
    52d0:	60 ed       	ldi	r22, 0xD0	; 208
    52d2:	7f e0       	ldi	r23, 0x0F	; 15
    52d4:	82 e6       	ldi	r24, 0x62	; 98
    52d6:	9f e0       	ldi	r25, 0x0F	; 15
    52d8:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    52dc:	88 eb       	ldi	r24, 0xB8	; 184
    52de:	9b e0       	ldi	r25, 0x0B	; 11
    52e0:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    52e4:	88 23       	and	r24, r24
    52e6:	09 f4       	brne	.+2      	; 0x52ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x426>
    52e8:	59 c0       	rjmp	.+178    	; 0x539c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4d8>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    52ea:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    52ee:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    52f2:	88 23       	and	r24, r24
    52f4:	a1 f0       	breq	.+40     	; 0x531e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
								{
									if(Seperate_Out_Sub_Data())
    52f6:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    52fa:	88 23       	and	r24, r24
    52fc:	81 f0       	breq	.+32     	; 0x531e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    52fe:	e0 ed       	ldi	r30, 0xD0	; 208
    5300:	ff e0       	ldi	r31, 0x0F	; 15
    5302:	01 90       	ld	r0, Z+
    5304:	00 20       	and	r0, r0
    5306:	e9 f7       	brne	.-6      	; 0x5302 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x43e>
    5308:	31 97       	sbiw	r30, 0x01	; 1
    530a:	af 01       	movw	r20, r30
    530c:	40 5d       	subi	r20, 0xD0	; 208
    530e:	5f 40       	sbci	r21, 0x0F	; 15
    5310:	21 e0       	ldi	r18, 0x01	; 1
    5312:	60 ed       	ldi	r22, 0xD0	; 208
    5314:	7f e0       	ldi	r23, 0x0F	; 15
    5316:	82 e6       	ldi	r24, 0x62	; 98
    5318:	9f e0       	ldi	r25, 0x0F	; 15
    531a:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
								
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    531e:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5320:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5322:	28 2f       	mov	r18, r24
    5324:	30 e0       	ldi	r19, 0x00	; 0
    5326:	e8 ad       	ldd	r30, Y+56	; 0x38
    5328:	f9 ad       	ldd	r31, Y+57	; 0x39
    532a:	e2 0f       	add	r30, r18
    532c:	f3 1f       	adc	r31, r19
    532e:	d9 01       	movw	r26, r18
    5330:	a7 5f       	subi	r26, 0xF7	; 247
    5332:	bb 4e       	sbci	r27, 0xEB	; 235
    5334:	41 81       	ldd	r20, Z+1	; 0x01
    5336:	2c 91       	ld	r18, X
    5338:	42 17       	cp	r20, r18
    533a:	11 f0       	breq	.+4      	; 0x5340 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x47c>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    533c:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    533e:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5340:	9f 5f       	subi	r25, 0xFF	; 255
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5342:	8f 5f       	subi	r24, 0xFF	; 255
    5344:	86 30       	cpi	r24, 0x06	; 6
    5346:	68 f3       	brcs	.-38     	; 0x5322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45e>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5348:	96 30       	cpi	r25, 0x06	; 6
    534a:	c9 f4       	brne	.+50     	; 0x537e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ba>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	f8 01       	movw	r30, r16
    5350:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5352:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    5356:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5358:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    535c:	90 e0       	ldi	r25, 0x00	; 0
    535e:	98 2f       	mov	r25, r24
    5360:	88 27       	eor	r24, r24
    5362:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5366:	83 2b       	or	r24, r19
    5368:	91 87       	std	Z+9, r25	; 0x09
    536a:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    536c:	22 23       	and	r18, r18
    536e:	e9 f0       	breq	.+58     	; 0x53aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4e6>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5370:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5374:	81 30       	cpi	r24, 0x01	; 1
    5376:	d9 f4       	brne	.+54     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    5378:	61 e5       	ldi	r22, 0x51	; 81
    537a:	77 e0       	ldi	r23, 0x07	; 7
    537c:	06 c0       	rjmp	.+12     	; 0x538a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    537e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5382:	81 30       	cpi	r24, 0x01	; 1
    5384:	a1 f4       	brne	.+40     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    5386:	60 e3       	ldi	r22, 0x30	; 48
    5388:	77 e0       	ldi	r23, 0x07	; 7
    538a:	86 ec       	ldi	r24, 0xC6	; 198
    538c:	94 e1       	ldi	r25, 0x14	; 20
    538e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5392:	86 ec       	ldi	r24, 0xC6	; 198
    5394:	94 e1       	ldi	r25, 0x14	; 20
    5396:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    539a:	09 c0       	rjmp	.+18     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    539c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    53a0:	81 30       	cpi	r24, 0x01	; 1
    53a2:	29 f4       	brne	.+10     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    53a4:	69 e0       	ldi	r22, 0x09	; 9
    53a6:	77 e0       	ldi	r23, 0x07	; 7
    53a8:	f0 cf       	rjmp	.-32     	; 0x538a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    53aa:	e3 e0       	ldi	r30, 0x03	; 3
    53ac:	8e 2e       	mov	r8, r30
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    53ae:	68 ee       	ldi	r22, 0xE8	; 232
    53b0:	73 e0       	ldi	r23, 0x03	; 3
    53b2:	80 e0       	ldi	r24, 0x00	; 0
    53b4:	90 e0       	ldi	r25, 0x00	; 0
    53b6:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    53ba:	f3 e0       	ldi	r31, 0x03	; 3
    53bc:	8f 12       	cpse	r8, r31
    53be:	18 cf       	rjmp	.-464    	; 0x51f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32c>
    53c0:	ed ce       	rjmp	.-550    	; 0x519c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2d8>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    53c2:	2b a9       	ldd	r18, Y+51	; 0x33
    53c4:	23 30       	cpi	r18, 0x03	; 3
    53c6:	11 f4       	brne	.+4      	; 0x53cc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x508>
    53c8:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    53cc:	25 30       	cpi	r18, 0x05	; 5
    53ce:	09 f0       	breq	.+2      	; 0x53d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x50e>
    53d0:	45 c0       	rjmp	.+138    	; 0x545c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
    53d2:	7e e0       	ldi	r23, 0x0E	; 14
    53d4:	f7 2e       	mov	r15, r23
    53d6:	00 e0       	ldi	r16, 0x00	; 0
    53d8:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    53da:	f5 01       	movw	r30, r10
    53dc:	e0 0f       	add	r30, r16
    53de:	f1 1f       	adc	r31, r17
    53e0:	e1 81       	ldd	r30, Z+1	; 0x01
    53e2:	e3 31       	cpi	r30, 0x13	; 19
    53e4:	68 f0       	brcs	.+26     	; 0x5400 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x53c>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    53e6:	f0 e0       	ldi	r31, 0x00	; 0
    53e8:	e7 5c       	subi	r30, 0xC7	; 199
    53ea:	fb 4e       	sbci	r31, 0xEB	; 235
    53ec:	61 e0       	ldi	r22, 0x01	; 1
    53ee:	80 81       	ld	r24, Z
    53f0:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
						_kDELAY_MS(200);
    53f4:	68 ec       	ldi	r22, 0xC8	; 200
    53f6:	70 e0       	ldi	r23, 0x00	; 0
    53f8:	80 e0       	ldi	r24, 0x00	; 0
    53fa:	90 e0       	ldi	r25, 0x00	; 0
    53fc:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5400:	0f 5f       	subi	r16, 0xFF	; 255
    5402:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5404:	05 30       	cpi	r16, 0x05	; 5
    5406:	11 05       	cpc	r17, r1
    5408:	41 f7       	brne	.-48     	; 0x53da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x516>
    540a:	fa 94       	dec	r15
    540c:	36 e0       	ldi	r19, 0x06	; 6
    540e:	a3 0e       	add	r10, r19
    5410:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    5412:	f1 10       	cpse	r15, r1
    5414:	e0 cf       	rjmp	.-64     	; 0x53d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x512>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    5416:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
    541a:	88 36       	cpi	r24, 0x68	; 104
    541c:	11 f0       	breq	.+4      	; 0x5422 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x55e>
    541e:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    5422:	0e e3       	ldi	r16, 0x3E	; 62
    5424:	1e e0       	ldi	r17, 0x0E	; 14
    5426:	63 e4       	ldi	r22, 0x43	; 67
    5428:	e6 2e       	mov	r14, r22
    542a:	6e e0       	ldi	r22, 0x0E	; 14
    542c:	f6 2e       	mov	r15, r22
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    542e:	d8 01       	movw	r26, r16
    5430:	ed 91       	ld	r30, X+
    5432:	8d 01       	movw	r16, r26
    5434:	e3 31       	cpi	r30, 0x13	; 19
    5436:	68 f0       	brcs	.+26     	; 0x5452 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x58e>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5438:	f0 e0       	ldi	r31, 0x00	; 0
    543a:	e7 5c       	subi	r30, 0xC7	; 199
    543c:	fb 4e       	sbci	r31, 0xEB	; 235
    543e:	61 e0       	ldi	r22, 0x01	; 1
    5440:	80 81       	ld	r24, Z
    5442:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
						_kDELAY_MS(200);
    5446:	68 ec       	ldi	r22, 0xC8	; 200
    5448:	70 e0       	ldi	r23, 0x00	; 0
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5452:	e0 16       	cp	r14, r16
    5454:	f1 06       	cpc	r15, r17
    5456:	59 f7       	brne	.-42     	; 0x542e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56a>
    5458:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
	
	
	
	
	
	if(on_off == _kON)
    545c:	bb a9       	ldd	r27, Y+51	; 0x33
    545e:	b1 30       	cpi	r27, 0x01	; 1
    5460:	09 f0       	breq	.+2      	; 0x5464 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5a0>
    5462:	49 c1       	rjmp	.+658    	; 0x56f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x832>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5464:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5468:	81 30       	cpi	r24, 0x01	; 1
    546a:	51 f4       	brne	.+20     	; 0x5480 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5bc>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    546c:	6e ed       	ldi	r22, 0xDE	; 222
    546e:	76 e0       	ldi	r23, 0x06	; 6
    5470:	86 ec       	ldi	r24, 0xC6	; 198
    5472:	94 e1       	ldi	r25, 0x14	; 20
    5474:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5478:	86 ec       	ldi	r24, 0xC6	; 198
    547a:	94 e1       	ldi	r25, 0x14	; 20
    547c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5480:	05 e1       	ldi	r16, 0x15	; 21
    5482:	1c e0       	ldi	r17, 0x0C	; 12
    5484:	44 e0       	ldi	r20, 0x04	; 4
    5486:	a4 2e       	mov	r10, r20
    5488:	b1 2c       	mov	r11, r1
    548a:	e1 2c       	mov	r14, r1
    548c:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    548e:	5d e0       	ldi	r21, 0x0D	; 13
    5490:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5492:	f8 01       	movw	r30, r16
    5494:	82 85       	ldd	r24, Z+10	; 0x0a
    5496:	88 23       	and	r24, r24
    5498:	01 f1       	breq	.+64     	; 0x54da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x616>
    549a:	91 2c       	mov	r9, r1
    549c:	40 e0       	ldi	r20, 0x00	; 0
    549e:	35 c0       	rjmp	.+106    	; 0x550a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x646>
    54a0:	ae 01       	movw	r20, r28
    54a2:	45 5d       	subi	r20, 0xD5	; 213
    54a4:	5f 4f       	sbci	r21, 0xFF	; 255
    54a6:	1a 01       	movw	r2, r20
			{
				for(k=0;valve_number_list[k]!=0;k++)
    54a8:	dd 24       	eor	r13, r13
    54aa:	d3 94       	inc	r13
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    54ac:	c7 01       	movw	r24, r14
    54ae:	01 96       	adiw	r24, 0x01	; 1
    54b0:	9d ab       	std	Y+53, r25	; 0x35
    54b2:	8c ab       	std	Y+52, r24	; 0x34
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    54b4:	8e 9c       	mul	r8, r14
    54b6:	c0 01       	movw	r24, r0
    54b8:	8f 9c       	mul	r8, r15
    54ba:	90 0d       	add	r25, r0
    54bc:	11 24       	eor	r1, r1
    54be:	dc 01       	movw	r26, r24
    54c0:	ab 5e       	subi	r26, 0xEB	; 235
    54c2:	b3 4f       	sbci	r27, 0xF3	; 243
    54c4:	bf ab       	std	Y+55, r27	; 0x37
    54c6:	ae ab       	std	Y+54, r26	; 0x36
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    54c8:	f1 01       	movw	r30, r2
    54ca:	81 91       	ld	r24, Z+
    54cc:	1f 01       	movw	r2, r30
    54ce:	89 21       	and	r24, r9
    54d0:	41 f5       	brne	.+80     	; 0x5522 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x65e>
    54d2:	d3 94       	inc	r13
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    54d4:	f4 e0       	ldi	r31, 0x04	; 4
    54d6:	df 12       	cpse	r13, r31
    54d8:	f7 cf       	rjmp	.-18     	; 0x54c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x604>
    54da:	ff ef       	ldi	r31, 0xFF	; 255
    54dc:	ef 1a       	sub	r14, r31
    54de:	ff 0a       	sbc	r15, r31
    54e0:	03 5f       	subi	r16, 0xF3	; 243
    54e2:	1f 4f       	sbci	r17, 0xFF	; 255
    54e4:	23 e0       	ldi	r18, 0x03	; 3
    54e6:	a2 0e       	add	r10, r18
    54e8:	b1 1c       	adc	r11, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    54ea:	36 e0       	ldi	r19, 0x06	; 6
    54ec:	e3 16       	cp	r14, r19
    54ee:	f1 04       	cpc	r15, r1
    54f0:	81 f6       	brne	.-96     	; 0x5492 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ce>
    54f2:	05 c1       	rjmp	.+522    	; 0x56fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    54f4:	28 17       	cp	r18, r24
    54f6:	39 07       	cpc	r19, r25
    54f8:	11 f4       	brne	.+4      	; 0x54fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x63a>
						{
							total_valve_number |= hex_array[j];
    54fa:	50 81       	ld	r21, Z
    54fc:	95 2a       	or	r9, r21
    54fe:	01 96       	adiw	r24, 0x01	; 1
    5500:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    5502:	a8 16       	cp	r10, r24
    5504:	b9 06       	cpc	r11, r25
    5506:	b1 f7       	brne	.-20     	; 0x54f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5508:	4f 5f       	subi	r20, 0xFF	; 255
    550a:	f2 01       	movw	r30, r4
    550c:	e4 0f       	add	r30, r20
    550e:	f1 1d       	adc	r31, r1
    5510:	20 81       	ld	r18, Z
    5512:	22 23       	and	r18, r18
    5514:	29 f2       	breq	.-118    	; 0x54a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5dc>
    5516:	c5 01       	movw	r24, r10
    5518:	03 97       	sbiw	r24, 0x03	; 3
    551a:	fe 01       	movw	r30, r28
    551c:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    551e:	30 e0       	ldi	r19, 0x00	; 0
    5520:	e9 cf       	rjmp	.-46     	; 0x54f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
    5522:	c1 2c       	mov	r12, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    5524:	c3 94       	inc	r12
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5526:	a5 ef       	ldi	r26, 0xF5	; 245
    5528:	b3 e1       	ldi	r27, 0x13	; 19
    552a:	e4 e1       	ldi	r30, 0x14	; 20
    552c:	1d 92       	st	X+, r1
    552e:	ea 95       	dec	r30
    5530:	e9 f7       	brne	.-6      	; 0x552c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x668>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    5532:	d8 01       	movw	r26, r16
    5534:	11 96       	adiw	r26, 0x01	; 1
    5536:	8c 91       	ld	r24, X
    5538:	11 97       	sbiw	r26, 0x01	; 1
    553a:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    553e:	12 96       	adiw	r26, 0x02	; 2
    5540:	8c 91       	ld	r24, X
    5542:	12 97       	sbiw	r26, 0x02	; 2
    5544:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5548:	13 96       	adiw	r26, 0x03	; 3
    554a:	8c 91       	ld	r24, X
    554c:	13 97       	sbiw	r26, 0x03	; 3
    554e:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    5552:	14 96       	adiw	r26, 0x04	; 4
    5554:	8c 91       	ld	r24, X
    5556:	14 97       	sbiw	r26, 0x04	; 4
    5558:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    555c:	15 96       	adiw	r26, 0x05	; 5
    555e:	8c 91       	ld	r24, X
    5560:	15 97       	sbiw	r26, 0x05	; 5
    5562:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5566:	16 96       	adiw	r26, 0x06	; 6
    5568:	8c 91       	ld	r24, X
    556a:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    556e:	b2 e0       	ldi	r27, 0x02	; 2
    5570:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5574:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5578:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    557c:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5580:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5584:	81 30       	cpi	r24, 0x01	; 1
    5586:	39 f5       	brne	.+78     	; 0x55d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x712>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    5588:	6a eb       	ldi	r22, 0xBA	; 186
    558a:	76 e0       	ldi	r23, 0x06	; 6
    558c:	86 ec       	ldi	r24, 0xC6	; 198
    558e:	94 e1       	ldi	r25, 0x14	; 20
    5590:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5594:	4a e0       	ldi	r20, 0x0A	; 10
    5596:	50 e0       	ldi	r21, 0x00	; 0
    5598:	6c a9       	ldd	r22, Y+52	; 0x34
    559a:	7d a9       	ldd	r23, Y+53	; 0x35
    559c:	86 ec       	ldi	r24, 0xC6	; 198
    559e:	94 e1       	ldi	r25, 0x14	; 20
    55a0:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    55a4:	86 ec       	ldi	r24, 0xC6	; 198
    55a6:	94 e1       	ldi	r25, 0x14	; 20
    55a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    55ac:	65 ea       	ldi	r22, 0xA5	; 165
    55ae:	76 e0       	ldi	r23, 0x06	; 6
    55b0:	86 ec       	ldi	r24, 0xC6	; 198
    55b2:	94 e1       	ldi	r25, 0x14	; 20
    55b4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    55b8:	46 e0       	ldi	r20, 0x06	; 6
    55ba:	50 e0       	ldi	r21, 0x00	; 0
    55bc:	65 ef       	ldi	r22, 0xF5	; 245
    55be:	73 e1       	ldi	r23, 0x13	; 19
    55c0:	86 ec       	ldi	r24, 0xC6	; 198
    55c2:	94 e1       	ldi	r25, 0x14	; 20
    55c4:	0d d9       	rcall	.-3558   	; 0x47e0 <_ZN5Print5writeEPKcj>
								Serial.println();
    55c6:	86 ec       	ldi	r24, 0xC6	; 198
    55c8:	94 e1       	ldi	r25, 0x14	; 20
    55ca:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    55ce:	86 ec       	ldi	r24, 0xC6	; 198
    55d0:	94 e1       	ldi	r25, 0x14	; 20
    55d2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    55d6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    55da:	8c e0       	ldi	r24, 0x0C	; 12
    55dc:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
							
							if(Subscribed_data_check())
    55e0:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    55e4:	88 23       	and	r24, r24
    55e6:	a1 f0       	breq	.+40     	; 0x5610 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
							{
								if(Seperate_Out_Sub_Data())
    55e8:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    55ec:	88 23       	and	r24, r24
    55ee:	81 f0       	breq	.+32     	; 0x5610 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    55f0:	e0 ed       	ldi	r30, 0xD0	; 208
    55f2:	ff e0       	ldi	r31, 0x0F	; 15
    55f4:	01 90       	ld	r0, Z+
    55f6:	00 20       	and	r0, r0
    55f8:	e9 f7       	brne	.-6      	; 0x55f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x730>
    55fa:	31 97       	sbiw	r30, 0x01	; 1
    55fc:	af 01       	movw	r20, r30
    55fe:	40 5d       	subi	r20, 0xD0	; 208
    5600:	5f 40       	sbci	r21, 0x0F	; 15
    5602:	21 e0       	ldi	r18, 0x01	; 1
    5604:	60 ed       	ldi	r22, 0xD0	; 208
    5606:	7f e0       	ldi	r23, 0x0F	; 15
    5608:	82 e6       	ldi	r24, 0x62	; 98
    560a:	9f e0       	ldi	r25, 0x0F	; 15
    560c:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5610:	88 eb       	ldi	r24, 0xB8	; 184
    5612:	9b e0       	ldi	r25, 0x0B	; 11
    5614:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    5618:	88 23       	and	r24, r24
    561a:	09 f4       	brne	.+2      	; 0x561e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75a>
    561c:	59 c0       	rjmp	.+178    	; 0x56d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x80c>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    561e:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    5622:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    5626:	88 23       	and	r24, r24
    5628:	a1 f0       	breq	.+40     	; 0x5652 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
								{
									if(Seperate_Out_Sub_Data())
    562a:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    562e:	88 23       	and	r24, r24
    5630:	81 f0       	breq	.+32     	; 0x5652 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5632:	e0 ed       	ldi	r30, 0xD0	; 208
    5634:	ff e0       	ldi	r31, 0x0F	; 15
    5636:	01 90       	ld	r0, Z+
    5638:	00 20       	and	r0, r0
    563a:	e9 f7       	brne	.-6      	; 0x5636 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x772>
    563c:	31 97       	sbiw	r30, 0x01	; 1
    563e:	af 01       	movw	r20, r30
    5640:	40 5d       	subi	r20, 0xD0	; 208
    5642:	5f 40       	sbci	r21, 0x0F	; 15
    5644:	21 e0       	ldi	r18, 0x01	; 1
    5646:	60 ed       	ldi	r22, 0xD0	; 208
    5648:	7f e0       	ldi	r23, 0x0F	; 15
    564a:	82 e6       	ldi	r24, 0x62	; 98
    564c:	9f e0       	ldi	r25, 0x0F	; 15
    564e:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5652:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5654:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5656:	28 2f       	mov	r18, r24
    5658:	30 e0       	ldi	r19, 0x00	; 0
    565a:	ee a9       	ldd	r30, Y+54	; 0x36
    565c:	ff a9       	ldd	r31, Y+55	; 0x37
    565e:	e2 0f       	add	r30, r18
    5660:	f3 1f       	adc	r31, r19
    5662:	d9 01       	movw	r26, r18
    5664:	a7 5f       	subi	r26, 0xF7	; 247
    5666:	bb 4e       	sbci	r27, 0xEB	; 235
    5668:	41 81       	ldd	r20, Z+1	; 0x01
    566a:	2c 91       	ld	r18, X
    566c:	42 17       	cp	r20, r18
    566e:	11 f0       	breq	.+4      	; 0x5674 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7b0>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    5670:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5672:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5674:	9f 5f       	subi	r25, 0xFF	; 255
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5676:	8f 5f       	subi	r24, 0xFF	; 255
    5678:	86 30       	cpi	r24, 0x06	; 6
    567a:	68 f3       	brcs	.-38     	; 0x5656 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x792>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    567c:	96 30       	cpi	r25, 0x06	; 6
    567e:	c9 f4       	brne	.+50     	; 0x56b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7ee>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5680:	81 e0       	ldi	r24, 0x01	; 1
    5682:	f8 01       	movw	r30, r16
    5684:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5686:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    568a:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    568c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5690:	90 e0       	ldi	r25, 0x00	; 0
    5692:	98 2f       	mov	r25, r24
    5694:	88 27       	eor	r24, r24
    5696:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    569a:	83 2b       	or	r24, r19
    569c:	91 87       	std	Z+9, r25	; 0x09
    569e:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    56a0:	22 23       	and	r18, r18
    56a2:	e9 f0       	breq	.+58     	; 0x56de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81a>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    56a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56a8:	81 30       	cpi	r24, 0x01	; 1
    56aa:	d9 f4       	brne	.+54     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    56ac:	6f e7       	ldi	r22, 0x7F	; 127
    56ae:	76 e0       	ldi	r23, 0x06	; 6
    56b0:	06 c0       	rjmp	.+12     	; 0x56be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    56b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56b6:	81 30       	cpi	r24, 0x01	; 1
    56b8:	a1 f4       	brne	.+40     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    56ba:	6d e5       	ldi	r22, 0x5D	; 93
    56bc:	76 e0       	ldi	r23, 0x06	; 6
    56be:	86 ec       	ldi	r24, 0xC6	; 198
    56c0:	94 e1       	ldi	r25, 0x14	; 20
    56c2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    56c6:	86 ec       	ldi	r24, 0xC6	; 198
    56c8:	94 e1       	ldi	r25, 0x14	; 20
    56ca:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    56ce:	09 c0       	rjmp	.+18     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    56d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56d4:	81 30       	cpi	r24, 0x01	; 1
    56d6:	29 f4       	brne	.+10     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    56d8:	6f e2       	ldi	r22, 0x2F	; 47
    56da:	76 e0       	ldi	r23, 0x06	; 6
    56dc:	f0 cf       	rjmp	.-32     	; 0x56be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    56de:	23 e0       	ldi	r18, 0x03	; 3
    56e0:	c2 2e       	mov	r12, r18
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    56e2:	68 ee       	ldi	r22, 0xE8	; 232
    56e4:	73 e0       	ldi	r23, 0x03	; 3
    56e6:	80 e0       	ldi	r24, 0x00	; 0
    56e8:	90 e0       	ldi	r25, 0x00	; 0
    56ea:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    56ee:	f3 e0       	ldi	r31, 0x03	; 3
    56f0:	cf 12       	cpse	r12, r31
    56f2:	18 cf       	rjmp	.-464    	; 0x5524 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x660>
    56f4:	ee ce       	rjmp	.-548    	; 0x54d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x60e>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    56f6:	2b a9       	ldd	r18, Y+51	; 0x33
    56f8:	22 30       	cpi	r18, 0x02	; 2
    56fa:	08 f0       	brcs	.+2      	; 0x56fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
    56fc:	18 c7       	rjmp	.+3632   	; 0x652e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166a>
    56fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    5702:	3e e0       	ldi	r19, 0x0E	; 14
    5704:	37 15       	cp	r19, r7
    5706:	08 f4       	brcc	.+2      	; 0x570a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x846>
    5708:	b4 c3       	rjmp	.+1896   	; 0x5e72 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfae>
    570a:	46 e0       	ldi	r20, 0x06	; 6
    570c:	74 9e       	mul	r7, r20
    570e:	80 01       	movw	r16, r0
    5710:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5712:	81 30       	cpi	r24, 0x01	; 1
    5714:	d9 f5       	brne	.+118    	; 0x578c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8c8>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5716:	61 e2       	ldi	r22, 0x21	; 33
    5718:	76 e0       	ldi	r23, 0x06	; 6
    571a:	86 ec       	ldi	r24, 0xC6	; 198
    571c:	94 e1       	ldi	r25, 0x14	; 20
    571e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5722:	86 ec       	ldi	r24, 0xC6	; 198
    5724:	94 e1       	ldi	r25, 0x14	; 20
    5726:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    572a:	e1 2c       	mov	r14, r1
    572c:	f1 2c       	mov	r15, r1
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    572e:	c7 2c       	mov	r12, r7
    5730:	d1 2c       	mov	r13, r1
    5732:	51 e0       	ldi	r21, 0x01	; 1
    5734:	c5 1a       	sub	r12, r21
    5736:	d1 08       	sbc	r13, r1
    5738:	f7 01       	movw	r30, r14
    573a:	e0 0f       	add	r30, r16
    573c:	f1 1f       	adc	r31, r17
    573e:	e7 5b       	subi	r30, 0xB7	; 183
    5740:	f2 4f       	sbci	r31, 0xF2	; 242
    5742:	4a e0       	ldi	r20, 0x0A	; 10
    5744:	50 e0       	ldi	r21, 0x00	; 0
    5746:	60 81       	ld	r22, Z
    5748:	86 ec       	ldi	r24, 0xC6	; 198
    574a:	94 e1       	ldi	r25, 0x14	; 20
    574c:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    5750:	6f e1       	ldi	r22, 0x1F	; 31
    5752:	76 e0       	ldi	r23, 0x06	; 6
    5754:	86 ec       	ldi	r24, 0xC6	; 198
    5756:	94 e1       	ldi	r25, 0x14	; 20
    5758:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    575c:	8f ef       	ldi	r24, 0xFF	; 255
    575e:	e8 1a       	sub	r14, r24
    5760:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5762:	95 e0       	ldi	r25, 0x05	; 5
    5764:	e9 16       	cp	r14, r25
    5766:	f1 04       	cpc	r15, r1
    5768:	39 f7       	brne	.-50     	; 0x5738 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x874>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    576a:	64 e0       	ldi	r22, 0x04	; 4
    576c:	76 e0       	ldi	r23, 0x06	; 6
    576e:	86 ec       	ldi	r24, 0xC6	; 198
    5770:	94 e1       	ldi	r25, 0x14	; 20
    5772:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5776:	4a e0       	ldi	r20, 0x0A	; 10
    5778:	50 e0       	ldi	r21, 0x00	; 0
    577a:	b6 01       	movw	r22, r12
    577c:	86 ec       	ldi	r24, 0xC6	; 198
    577e:	94 e1       	ldi	r25, 0x14	; 20
    5780:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5784:	86 ec       	ldi	r24, 0xC6	; 198
    5786:	94 e1       	ldi	r25, 0x14	; 20
    5788:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    578c:	07 5b       	subi	r16, 0xB7	; 183
    578e:	12 4f       	sbci	r17, 0xF2	; 242
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    5790:	b5 e0       	ldi	r27, 0x05	; 5
    5792:	2b 2e       	mov	r2, r27
    5794:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5796:	e7 2c       	mov	r14, r7
    5798:	f1 2c       	mov	r15, r1
    579a:	a1 e0       	ldi	r26, 0x01	; 1
    579c:	ea 1a       	sub	r14, r26
    579e:	f1 08       	sbc	r15, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    57a0:	9b a9       	ldd	r25, Y+51	; 0x33
    57a2:	b1 e0       	ldi	r27, 0x01	; 1
    57a4:	9b 27       	eor	r25, r27
    57a6:	91 70       	andi	r25, 0x01	; 1
    57a8:	9e ab       	std	Y+54, r25	; 0x36
								if(Subscribed_data_check())
								{
									if(Seperate_Out_Sub_Data())
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    57aa:	90 ed       	ldi	r25, 0xD0	; 208
    57ac:	a9 2e       	mov	r10, r25
    57ae:	9f e0       	ldi	r25, 0x0F	; 15
    57b0:	b9 2e       	mov	r11, r25
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    57b2:	eb a9       	ldd	r30, Y+51	; 0x33
    57b4:	e1 11       	cpse	r30, r1
    57b6:	1f c0       	rjmp	.+62     	; 0x57f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    57b8:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    57bc:	72 16       	cp	r7, r18
    57be:	c9 f0       	breq	.+50     	; 0x57f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x92e>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    57c0:	22 23       	and	r18, r18
    57c2:	c9 f0       	breq	.+50     	; 0x57f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    57c4:	d8 01       	movw	r26, r16
    57c6:	9c 91       	ld	r25, X
    57c8:	b6 e0       	ldi	r27, 0x06	; 6
    57ca:	2b 9f       	mul	r18, r27
    57cc:	90 01       	movw	r18, r0
    57ce:	11 24       	eor	r1, r1
    57d0:	40 e0       	ldi	r20, 0x00	; 0
    57d2:	50 e0       	ldi	r21, 0x00	; 0
    57d4:	80 e0       	ldi	r24, 0x00	; 0
    57d6:	fa 01       	movw	r30, r20
    57d8:	e2 0f       	add	r30, r18
    57da:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    57dc:	e7 5b       	subi	r30, 0xB7	; 183
    57de:	f2 4f       	sbci	r31, 0xF2	; 242
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    57e0:	60 81       	ld	r22, Z
    57e2:	96 13       	cpse	r25, r22
    57e4:	01 c0       	rjmp	.+2      	; 0x57e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x924>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    57e6:	81 e0       	ldi	r24, 0x01	; 1
    57e8:	4f 5f       	subi	r20, 0xFF	; 255
    57ea:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    57ec:	45 30       	cpi	r20, 0x05	; 5
    57ee:	51 05       	cpc	r21, r1
    57f0:	91 f7       	brne	.-28     	; 0x57d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x912>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    57f2:	81 11       	cpse	r24, r1
    57f4:	2e c3       	rjmp	.+1628   	; 0x5e52 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf8e>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    57f6:	f8 01       	movw	r30, r16
    57f8:	d0 80       	ld	r13, Z
    57fa:	8f ef       	ldi	r24, 0xFF	; 255
    57fc:	8d 0d       	add	r24, r13
    57fe:	82 31       	cpi	r24, 0x12	; 18
    5800:	08 f0       	brcs	.+2      	; 0x5804 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x940>
    5802:	fb c2       	rjmp	.+1526   	; 0x5dfa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf36>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5804:	f3 e0       	ldi	r31, 0x03	; 3
    5806:	fd 15       	cp	r31, r13
    5808:	a8 f4       	brcc	.+42     	; 0x5834 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x970>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    580a:	8d 2d       	mov	r24, r13
    580c:	63 e0       	ldi	r22, 0x03	; 3
    580e:	0e 94 85 eb 	call	0x1d70a	; 0x1d70a <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5812:	6b ea       	ldi	r22, 0xAB	; 171
    5814:	d6 9e       	mul	r13, r22
    5816:	61 2d       	mov	r22, r1
    5818:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    581a:	99 23       	and	r25, r25
    581c:	31 f0       	breq	.+12     	; 0x582a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x966>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    581e:	66 95       	lsr	r22
    5820:	cc 24       	eor	r12, r12
    5822:	c3 94       	inc	r12
    5824:	c6 0e       	add	r12, r22
    5826:	d9 2e       	mov	r13, r25
    5828:	07 c0       	rjmp	.+14     	; 0x5838 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    582a:	c6 2e       	mov	r12, r22
    582c:	c6 94       	lsr	r12
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    582e:	a3 e0       	ldi	r26, 0x03	; 3
    5830:	da 2e       	mov	r13, r26
    5832:	02 c0       	rjmp	.+4      	; 0x5838 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    5834:	cc 24       	eor	r12, r12
    5836:	c3 94       	inc	r12
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5838:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    583c:	81 30       	cpi	r24, 0x01	; 1
    583e:	89 f4       	brne	.+34     	; 0x5862 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x99e>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5840:	60 ef       	ldi	r22, 0xF0	; 240
    5842:	75 e0       	ldi	r23, 0x05	; 5
    5844:	86 ec       	ldi	r24, 0xC6	; 198
    5846:	94 e1       	ldi	r25, 0x14	; 20
    5848:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    584c:	4a e0       	ldi	r20, 0x0A	; 10
    584e:	50 e0       	ldi	r21, 0x00	; 0
    5850:	6c 2d       	mov	r22, r12
    5852:	86 ec       	ldi	r24, 0xC6	; 198
    5854:	94 e1       	ldi	r25, 0x14	; 20
    5856:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    585a:	86 ec       	ldi	r24, 0xC6	; 198
    585c:	94 e1       	ldi	r25, 0x14	; 20
    585e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5862:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
    5866:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5868:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    586c:	84 e1       	ldi	r24, 0x14	; 20
    586e:	e5 ef       	ldi	r30, 0xF5	; 245
    5870:	f3 e1       	ldi	r31, 0x13	; 19
    5872:	df 01       	movw	r26, r30
    5874:	1d 92       	st	X+, r1
    5876:	8a 95       	dec	r24
    5878:	e9 f7       	brne	.-6      	; 0x5874 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b0>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    587a:	6c 2d       	mov	r22, r12
    587c:	70 e0       	ldi	r23, 0x00	; 0
    587e:	61 50       	subi	r22, 0x01	; 1
    5880:	71 09       	sbc	r23, r1
    5882:	b7 e0       	ldi	r27, 0x07	; 7
    5884:	b6 9f       	mul	r27, r22
    5886:	c0 01       	movw	r24, r0
    5888:	b7 9f       	mul	r27, r23
    588a:	90 0d       	add	r25, r0
    588c:	11 24       	eor	r1, r1
    588e:	82 55       	subi	r24, 0x52	; 82
    5890:	9c 4e       	sbci	r25, 0xEC	; 236
    5892:	fc 01       	movw	r30, r24
    5894:	ec 58       	subi	r30, 0x8C	; 140
    5896:	ff 4f       	sbci	r31, 0xFF	; 255
    5898:	20 81       	ld	r18, Z
    589a:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    589e:	31 96       	adiw	r30, 0x01	; 1
    58a0:	20 81       	ld	r18, Z
    58a2:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    58a6:	31 96       	adiw	r30, 0x01	; 1
    58a8:	20 81       	ld	r18, Z
    58aa:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    58ae:	31 96       	adiw	r30, 0x01	; 1
    58b0:	20 81       	ld	r18, Z
    58b2:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    58b6:	31 96       	adiw	r30, 0x01	; 1
    58b8:	20 81       	ld	r18, Z
    58ba:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    58be:	31 96       	adiw	r30, 0x01	; 1
    58c0:	20 81       	ld	r18, Z
    58c2:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    58c6:	22 e0       	ldi	r18, 0x02	; 2
    58c8:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    58cc:	eb a9       	ldd	r30, Y+51	; 0x33
    58ce:	e0 93 fc 13 	sts	0x13FC, r30	; 0x8013fc <_sRuble_Parameters+0x4e>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    58d2:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    58d6:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    58da:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    58de:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    58e2:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
    58e6:	40 e0       	ldi	r20, 0x00	; 0
    58e8:	50 e0       	ldi	r21, 0x00	; 0
    58ea:	94 2e       	mov	r9, r20
    58ec:	c1 2c       	mov	r12, r1
    58ee:	d1 2c       	mov	r13, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    58f0:	fd e0       	ldi	r31, 0x0D	; 13
    58f2:	f4 9f       	mul	r31, r20
    58f4:	b0 01       	movw	r22, r0
    58f6:	f5 9f       	mul	r31, r21
    58f8:	70 0d       	add	r23, r0
    58fa:	11 24       	eor	r1, r1
    58fc:	6b 5e       	subi	r22, 0xEB	; 235
    58fe:	73 4f       	sbci	r23, 0xF3	; 243
    5900:	2d 2d       	mov	r18, r13
    5902:	30 e0       	ldi	r19, 0x00	; 0
    5904:	fb 01       	movw	r30, r22
    5906:	e2 0f       	add	r30, r18
    5908:	f3 1f       	adc	r31, r19
    590a:	28 0f       	add	r18, r24
    590c:	39 1f       	adc	r19, r25
    590e:	d9 01       	movw	r26, r18
    5910:	ac 58       	subi	r26, 0x8C	; 140
    5912:	bf 4f       	sbci	r27, 0xFF	; 255
    5914:	31 81       	ldd	r19, Z+1	; 0x01
    5916:	2c 91       	ld	r18, X
    5918:	32 17       	cp	r19, r18
    591a:	19 f0       	breq	.+6      	; 0x5922 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa5e>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    591c:	c1 2c       	mov	r12, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    591e:	f6 e0       	ldi	r31, 0x06	; 6
    5920:	df 2e       	mov	r13, r31
										id_len = _kRESET;
									}
									id_len++;
    5922:	c3 94       	inc	r12
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5924:	d3 94       	inc	r13
    5926:	25 e0       	ldi	r18, 0x05	; 5
    5928:	2d 15       	cp	r18, r13
    592a:	50 f7       	brcc	.-44     	; 0x5900 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    592c:	36 e0       	ldi	r19, 0x06	; 6
    592e:	c3 16       	cp	r12, r19
    5930:	31 f0       	breq	.+12     	; 0x593e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7a>
    5932:	4f 5f       	subi	r20, 0xFF	; 255
    5934:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    5936:	46 30       	cpi	r20, 0x06	; 6
    5938:	51 05       	cpc	r21, r1
    593a:	b9 f6       	brne	.-82     	; 0x58ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa26>
    593c:	01 c0       	rjmp	.+2      	; 0x5940 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7c>
    593e:	69 2c       	mov	r6, r9
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5940:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5944:	81 30       	cpi	r24, 0x01	; 1
    5946:	89 f4       	brne	.+34     	; 0x596a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xaa6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5948:	6a ed       	ldi	r22, 0xDA	; 218
    594a:	75 e0       	ldi	r23, 0x05	; 5
    594c:	86 ec       	ldi	r24, 0xC6	; 198
    594e:	94 e1       	ldi	r25, 0x14	; 20
    5950:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5954:	4a e0       	ldi	r20, 0x0A	; 10
    5956:	50 e0       	ldi	r21, 0x00	; 0
    5958:	66 2d       	mov	r22, r6
    595a:	86 ec       	ldi	r24, 0xC6	; 198
    595c:	94 e1       	ldi	r25, 0x14	; 20
    595e:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    5962:	86 ec       	ldi	r24, 0xC6	; 198
    5964:	94 e1       	ldi	r25, 0x14	; 20
    5966:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    596a:	4d e0       	ldi	r20, 0x0D	; 13
    596c:	64 9e       	mul	r6, r20
    596e:	40 01       	movw	r8, r0
    5970:	11 24       	eor	r1, r1
    5972:	31 2c       	mov	r3, r1
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5974:	5d e0       	ldi	r21, 0x0D	; 13
    5976:	56 9d       	mul	r21, r6
    5978:	c0 01       	movw	r24, r0
    597a:	11 24       	eor	r1, r1
    597c:	9c 01       	movw	r18, r24
    597e:	2b 5e       	subi	r18, 0xEB	; 235
    5980:	33 4f       	sbci	r19, 0xF3	; 243
    5982:	29 01       	movw	r4, r18
    5984:	ab e0       	ldi	r26, 0x0B	; 11
    5986:	4a 0e       	add	r4, r26
    5988:	51 1c       	adc	r5, r1
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    598a:	f9 01       	movw	r30, r18
    598c:	38 96       	adiw	r30, 0x08	; 8
    598e:	fd ab       	std	Y+53, r31	; 0x35
    5990:	ec ab       	std	Y+52, r30	; 0x34
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
											Serial.println();
											_kSERIAL_MON_CLEAR();
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5992:	9c 01       	movw	r18, r24
    5994:	2a 5e       	subi	r18, 0xEA	; 234
    5996:	33 4f       	sbci	r19, 0xF3	; 243
    5998:	69 01       	movw	r12, r18
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
							{
								if(Subscribed_data_check())
    599a:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    599e:	88 23       	and	r24, r24
    59a0:	99 f0       	breq	.+38     	; 0x59c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
								{
									if(Seperate_Out_Sub_Data())
    59a2:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    59a6:	88 23       	and	r24, r24
    59a8:	79 f0       	breq	.+30     	; 0x59c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    59aa:	f5 01       	movw	r30, r10
    59ac:	01 90       	ld	r0, Z+
    59ae:	00 20       	and	r0, r0
    59b0:	e9 f7       	brne	.-6      	; 0x59ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xae8>
    59b2:	31 97       	sbiw	r30, 0x01	; 1
    59b4:	af 01       	movw	r20, r30
    59b6:	40 5d       	subi	r20, 0xD0	; 208
    59b8:	5f 40       	sbci	r21, 0x0F	; 15
    59ba:	21 e0       	ldi	r18, 0x01	; 1
    59bc:	60 ed       	ldi	r22, 0xD0	; 208
    59be:	7f e0       	ldi	r23, 0x0F	; 15
    59c0:	82 e6       	ldi	r24, 0x62	; 98
    59c2:	9f e0       	ldi	r25, 0x0F	; 15
    59c4:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								data_send_counter++;
    59c8:	33 94       	inc	r3
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    59ca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    59ce:	81 30       	cpi	r24, 0x01	; 1
    59d0:	51 f4       	brne	.+20     	; 0x59e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb22>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    59d2:	66 eb       	ldi	r22, 0xB6	; 182
    59d4:	75 e0       	ldi	r23, 0x05	; 5
    59d6:	86 ec       	ldi	r24, 0xC6	; 198
    59d8:	94 e1       	ldi	r25, 0x14	; 20
    59da:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    59de:	86 ec       	ldi	r24, 0xC6	; 198
    59e0:	94 e1       	ldi	r25, 0x14	; 20
    59e2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    59e6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    59ea:	8c e0       	ldi	r24, 0x0C	; 12
    59ec:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    59f0:	88 eb       	ldi	r24, 0xB8	; 184
    59f2:	9b e0       	ldi	r25, 0x0B	; 11
    59f4:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    59f8:	88 23       	and	r24, r24
    59fa:	09 f4       	brne	.+2      	; 0x59fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb3a>
    59fc:	9a c1       	rjmp	.+820    	; 0x5d32 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe6e>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    59fe:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
    5a02:	88 23       	and	r24, r24
    5a04:	09 f4       	brne	.+2      	; 0x5a08 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb44>
    5a06:	3b c1       	rjmp	.+630    	; 0x5c7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdba>
									{
										if(Subscribed_data_check())
    5a08:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    5a0c:	88 23       	and	r24, r24
    5a0e:	99 f0       	breq	.+38     	; 0x5a36 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
										{
											if(Seperate_Out_Sub_Data())
    5a10:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    5a14:	88 23       	and	r24, r24
    5a16:	79 f0       	breq	.+30     	; 0x5a36 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
											{
												//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
												Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5a18:	f5 01       	movw	r30, r10
    5a1a:	01 90       	ld	r0, Z+
    5a1c:	00 20       	and	r0, r0
    5a1e:	e9 f7       	brne	.-6      	; 0x5a1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb56>
    5a20:	31 97       	sbiw	r30, 0x01	; 1
    5a22:	af 01       	movw	r20, r30
    5a24:	40 5d       	subi	r20, 0xD0	; 208
    5a26:	5f 40       	sbci	r21, 0x0F	; 15
    5a28:	21 e0       	ldi	r18, 0x01	; 1
    5a2a:	60 ed       	ldi	r22, 0xD0	; 208
    5a2c:	7f e0       	ldi	r23, 0x0F	; 15
    5a2e:	82 e6       	ldi	r24, 0x62	; 98
    5a30:	9f e0       	ldi	r25, 0x0F	; 15
    5a32:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
											}
										}
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5a3a:	81 30       	cpi	r24, 0x01	; 1
    5a3c:	59 f5       	brne	.+86     	; 0x5a94 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd0>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5a3e:	60 ea       	ldi	r22, 0xA0	; 160
    5a40:	75 e0       	ldi	r23, 0x05	; 5
    5a42:	86 ec       	ldi	r24, 0xC6	; 198
    5a44:	94 e1       	ldi	r25, 0x14	; 20
    5a46:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5a4a:	4a e0       	ldi	r20, 0x0A	; 10
    5a4c:	50 e0       	ldi	r21, 0x00	; 0
    5a4e:	69 e0       	ldi	r22, 0x09	; 9
    5a50:	74 e1       	ldi	r23, 0x14	; 20
    5a52:	86 ec       	ldi	r24, 0xC6	; 198
    5a54:	94 e1       	ldi	r25, 0x14	; 20
    5a56:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
											Serial.println();
    5a5a:	86 ec       	ldi	r24, 0xC6	; 198
    5a5c:	94 e1       	ldi	r25, 0x14	; 20
    5a5e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a62:	86 ec       	ldi	r24, 0xC6	; 198
    5a64:	94 e1       	ldi	r25, 0x14	; 20
    5a66:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5a6a:	62 e8       	ldi	r22, 0x82	; 130
    5a6c:	75 e0       	ldi	r23, 0x05	; 5
    5a6e:	86 ec       	ldi	r24, 0xC6	; 198
    5a70:	94 e1       	ldi	r25, 0x14	; 20
    5a72:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5a76:	47 e0       	ldi	r20, 0x07	; 7
    5a78:	50 e0       	ldi	r21, 0x00	; 0
    5a7a:	b6 01       	movw	r22, r12
    5a7c:	86 ec       	ldi	r24, 0xC6	; 198
    5a7e:	94 e1       	ldi	r25, 0x14	; 20
    5a80:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
											Serial.println();
    5a84:	86 ec       	ldi	r24, 0xC6	; 198
    5a86:	94 e1       	ldi	r25, 0x14	; 20
    5a88:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a8c:	86 ec       	ldi	r24, 0xC6	; 198
    5a8e:	94 e1       	ldi	r25, 0x14	; 20
    5a90:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5a94:	a9 e0       	ldi	r26, 0x09	; 9
    5a96:	b4 e1       	ldi	r27, 0x14	; 20
    5a98:	80 e0       	ldi	r24, 0x00	; 0
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    5a9c:	2d 91       	ld	r18, X+
    5a9e:	f4 01       	movw	r30, r8
    5aa0:	e8 0f       	add	r30, r24
    5aa2:	f9 1f       	adc	r31, r25
    5aa4:	eb 5e       	subi	r30, 0xEB	; 235
    5aa6:	f3 4f       	sbci	r31, 0xF3	; 243
    5aa8:	31 81       	ldd	r19, Z+1	; 0x01
    5aaa:	32 17       	cp	r19, r18
    5aac:	09 f4       	brne	.+2      	; 0x5ab0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbec>
    5aae:	7c c0       	rjmp	.+248    	; 0x5ba8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce4>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ab0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5ab4:	81 30       	cpi	r24, 0x01	; 1
    5ab6:	51 f4       	brne	.+20     	; 0x5acc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc08>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5ab8:	67 e5       	ldi	r22, 0x57	; 87
    5aba:	75 e0       	ldi	r23, 0x05	; 5
    5abc:	86 ec       	ldi	r24, 0xC6	; 198
    5abe:	94 e1       	ldi	r25, 0x14	; 20
    5ac0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    5ac4:	86 ec       	ldi	r24, 0xC6	; 198
    5ac6:	94 e1       	ldi	r25, 0x14	; 20
    5ac8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5acc:	32 e0       	ldi	r19, 0x02	; 2
    5ace:	33 16       	cp	r3, r19
    5ad0:	b9 f0       	breq	.+46     	; 0x5b00 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc3c>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5ad2:	e1 e0       	ldi	r30, 0x01	; 1
    5ad4:	d2 01       	movw	r26, r4
    5ad6:	ec 93       	st	X, r30
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5ad8:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5adc:	90 e0       	ldi	r25, 0x00	; 0
    5ade:	98 2f       	mov	r25, r24
    5ae0:	88 27       	eor	r24, r24
    5ae2:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5ae6:	82 2b       	or	r24, r18
    5ae8:	ac a9       	ldd	r26, Y+52	; 0x34
    5aea:	bd a9       	ldd	r27, Y+53	; 0x35
    5aec:	8d 93       	st	X+, r24
    5aee:	9c 93       	st	X, r25
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    5af0:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    5af4:	bb a9       	ldd	r27, Y+51	; 0x33
    5af6:	b8 13       	cpse	r27, r24
    5af8:	5d c0       	rjmp	.+186    	; 0x5bb4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcf0>
												return 0;
											}
										}
										else
										{
											data_send_counter = 3;
    5afa:	73 e0       	ldi	r23, 0x03	; 3
    5afc:	37 2e       	mov	r3, r23
    5afe:	73 c1       	rjmp	.+742    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
													_kSERIAL_MON_CLEAR();
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b00:	86 e0       	ldi	r24, 0x06	; 6
    5b02:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    5b06:	84 e6       	ldi	r24, 0x64	; 100
    5b08:	90 e0       	ldi	r25, 0x00	; 0
    5b0a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5b0e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b12:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5b16:	81 30       	cpi	r24, 0x01	; 1
    5b18:	31 f4       	brne	.+12     	; 0x5b26 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc62>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    5b1a:	6a e3       	ldi	r22, 0x3A	; 58
    5b1c:	75 e0       	ldi	r23, 0x05	; 5
    5b1e:	86 ec       	ldi	r24, 0xC6	; 198
    5b20:	94 e1       	ldi	r25, 0x14	; 20
    5b22:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5b26:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5b2a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5b2e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5b32:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5b36:	a0 62       	ori	r26, 0x20	; 32
    5b38:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5b3c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5b40:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5b44:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5b48:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5b4c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5b50:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5b54:	82 60       	ori	r24, 0x02	; 2
    5b56:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5b5a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5b5e:	86 e0       	ldi	r24, 0x06	; 6
    5b60:	8e 9d       	mul	r24, r14
    5b62:	80 01       	movw	r16, r0
    5b64:	8f 9d       	mul	r24, r15
    5b66:	10 0d       	add	r17, r0
    5b68:	11 24       	eor	r1, r1
    5b6a:	e1 2c       	mov	r14, r1
    5b6c:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b6e:	f8 01       	movw	r30, r16
    5b70:	ee 0d       	add	r30, r14
    5b72:	ff 1d       	adc	r31, r15
    5b74:	e2 5b       	subi	r30, 0xB2	; 178
    5b76:	f2 4f       	sbci	r31, 0xF2	; 242
    5b78:	e1 81       	ldd	r30, Z+1	; 0x01
    5b7a:	e3 31       	cpi	r30, 0x13	; 19
    5b7c:	68 f0       	brcs	.+26     	; 0x5b98 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcd4>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b7e:	f0 e0       	ldi	r31, 0x00	; 0
    5b80:	e7 5c       	subi	r30, 0xC7	; 199
    5b82:	fb 4e       	sbci	r31, 0xEB	; 235
    5b84:	61 e0       	ldi	r22, 0x01	; 1
    5b86:	80 81       	ld	r24, Z
    5b88:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
															_kDELAY_MS(200);
    5b8c:	68 ec       	ldi	r22, 0xC8	; 200
    5b8e:	70 e0       	ldi	r23, 0x00	; 0
    5b90:	80 e0       	ldi	r24, 0x00	; 0
    5b92:	90 e0       	ldi	r25, 0x00	; 0
    5b94:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5b98:	ef ef       	ldi	r30, 0xFF	; 255
    5b9a:	ee 1a       	sub	r14, r30
    5b9c:	fe 0a       	sbc	r15, r30
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b9e:	f5 e0       	ldi	r31, 0x05	; 5
    5ba0:	ef 16       	cp	r14, r31
    5ba2:	f1 04       	cpc	r15, r1
    5ba4:	21 f7       	brne	.-56     	; 0x5b6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcaa>
    5ba6:	72 c4       	rjmp	.+2276   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    5ba8:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    5baa:	86 30       	cpi	r24, 0x06	; 6
    5bac:	91 05       	cpc	r25, r1
    5bae:	09 f0       	breq	.+2      	; 0x5bb2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcee>
    5bb0:	75 cf       	rjmp	.-278    	; 0x5a9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd8>
    5bb2:	8f cf       	rjmp	.-226    	; 0x5ad2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc0e>
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5bb4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5bb8:	81 30       	cpi	r24, 0x01	; 1
    5bba:	51 f4       	brne	.+20     	; 0x5bd0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd0c>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    5bbc:	67 e2       	ldi	r22, 0x27	; 39
    5bbe:	75 e0       	ldi	r23, 0x05	; 5
    5bc0:	86 ec       	ldi	r24, 0xC6	; 198
    5bc2:	94 e1       	ldi	r25, 0x14	; 20
    5bc4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5bc8:	86 ec       	ldi	r24, 0xC6	; 198
    5bca:	94 e1       	ldi	r25, 0x14	; 20
    5bcc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5bd0:	22 e0       	ldi	r18, 0x02	; 2
    5bd2:	32 12       	cpse	r3, r18
    5bd4:	08 c1       	rjmp	.+528    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5bd6:	86 e0       	ldi	r24, 0x06	; 6
    5bd8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5bdc:	84 e6       	ldi	r24, 0x64	; 100
    5bde:	90 e0       	ldi	r25, 0x00	; 0
    5be0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5be4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5be8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5bec:	81 30       	cpi	r24, 0x01	; 1
    5bee:	31 f4       	brne	.+12     	; 0x5bfc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd38>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5bf0:	6a e0       	ldi	r22, 0x0A	; 10
    5bf2:	75 e0       	ldi	r23, 0x05	; 5
    5bf4:	86 ec       	ldi	r24, 0xC6	; 198
    5bf6:	94 e1       	ldi	r25, 0x14	; 20
    5bf8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5bfc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5c00:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5c04:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5c08:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5c0c:	a0 62       	ori	r26, 0x20	; 32
    5c0e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5c12:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5c16:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5c1a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5c1e:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5c22:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c26:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c2a:	82 60       	ori	r24, 0x02	; 2
    5c2c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c30:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c34:	86 e0       	ldi	r24, 0x06	; 6
    5c36:	8e 9d       	mul	r24, r14
    5c38:	80 01       	movw	r16, r0
    5c3a:	8f 9d       	mul	r24, r15
    5c3c:	10 0d       	add	r17, r0
    5c3e:	11 24       	eor	r1, r1
    5c40:	e1 2c       	mov	r14, r1
    5c42:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5c44:	f8 01       	movw	r30, r16
    5c46:	ee 0d       	add	r30, r14
    5c48:	ff 1d       	adc	r31, r15
    5c4a:	e2 5b       	subi	r30, 0xB2	; 178
    5c4c:	f2 4f       	sbci	r31, 0xF2	; 242
    5c4e:	e1 81       	ldd	r30, Z+1	; 0x01
    5c50:	e3 31       	cpi	r30, 0x13	; 19
    5c52:	68 f0       	brcs	.+26     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdaa>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5c54:	f0 e0       	ldi	r31, 0x00	; 0
    5c56:	e7 5c       	subi	r30, 0xC7	; 199
    5c58:	fb 4e       	sbci	r31, 0xEB	; 235
    5c5a:	61 e0       	ldi	r22, 0x01	; 1
    5c5c:	80 81       	ld	r24, Z
    5c5e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
														_kDELAY_MS(200);
    5c62:	68 ec       	ldi	r22, 0xC8	; 200
    5c64:	70 e0       	ldi	r23, 0x00	; 0
    5c66:	80 e0       	ldi	r24, 0x00	; 0
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5c6e:	3f ef       	ldi	r19, 0xFF	; 255
    5c70:	e3 1a       	sub	r14, r19
    5c72:	f3 0a       	sbc	r15, r19
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5c74:	45 e0       	ldi	r20, 0x05	; 5
    5c76:	e4 16       	cp	r14, r20
    5c78:	f1 04       	cpc	r15, r1
    5c7a:	21 f7       	brne	.-56     	; 0x5c44 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd80>
    5c7c:	07 c4       	rjmp	.+2062   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5c82:	81 30       	cpi	r24, 0x01	; 1
    5c84:	51 f4       	brne	.+20     	; 0x5c9a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdd6>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5c86:	6f ec       	ldi	r22, 0xCF	; 207
    5c88:	74 e0       	ldi	r23, 0x04	; 4
    5c8a:	86 ec       	ldi	r24, 0xC6	; 198
    5c8c:	94 e1       	ldi	r25, 0x14	; 20
    5c8e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5c92:	86 ec       	ldi	r24, 0xC6	; 198
    5c94:	94 e1       	ldi	r25, 0x14	; 20
    5c96:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    5c9a:	52 e0       	ldi	r21, 0x02	; 2
    5c9c:	35 12       	cpse	r3, r21
    5c9e:	a3 c0       	rjmp	.+326    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5ca0:	26 e0       	ldi	r18, 0x06	; 6
    5ca2:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5ca6:	84 e6       	ldi	r24, 0x64	; 100
    5ca8:	90 e0       	ldi	r25, 0x00	; 0
    5caa:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5cae:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5cb2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5cb6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5cba:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5cbe:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5cc2:	a0 62       	ori	r26, 0x20	; 32
    5cc4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5cc8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5ccc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5cd0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5cd4:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5cd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5cdc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5ce0:	82 60       	ori	r24, 0x02	; 2
    5ce2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5ce6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5cea:	2e 9d       	mul	r18, r14
    5cec:	80 01       	movw	r16, r0
    5cee:	2f 9d       	mul	r18, r15
    5cf0:	10 0d       	add	r17, r0
    5cf2:	11 24       	eor	r1, r1
    5cf4:	e1 2c       	mov	r14, r1
    5cf6:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5cf8:	f8 01       	movw	r30, r16
    5cfa:	ee 0d       	add	r30, r14
    5cfc:	ff 1d       	adc	r31, r15
    5cfe:	e2 5b       	subi	r30, 0xB2	; 178
    5d00:	f2 4f       	sbci	r31, 0xF2	; 242
    5d02:	e1 81       	ldd	r30, Z+1	; 0x01
    5d04:	e3 31       	cpi	r30, 0x13	; 19
    5d06:	68 f0       	brcs	.+26     	; 0x5d22 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe5e>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5d08:	f0 e0       	ldi	r31, 0x00	; 0
    5d0a:	e7 5c       	subi	r30, 0xC7	; 199
    5d0c:	fb 4e       	sbci	r31, 0xEB	; 235
    5d0e:	61 e0       	ldi	r22, 0x01	; 1
    5d10:	80 81       	ld	r24, Z
    5d12:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
													_kDELAY_MS(200);
    5d16:	68 ec       	ldi	r22, 0xC8	; 200
    5d18:	70 e0       	ldi	r23, 0x00	; 0
    5d1a:	80 e0       	ldi	r24, 0x00	; 0
    5d1c:	90 e0       	ldi	r25, 0x00	; 0
    5d1e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5d22:	8f ef       	ldi	r24, 0xFF	; 255
    5d24:	e8 1a       	sub	r14, r24
    5d26:	f8 0a       	sbc	r15, r24
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5d28:	95 e0       	ldi	r25, 0x05	; 5
    5d2a:	e9 16       	cp	r14, r25
    5d2c:	f1 04       	cpc	r15, r1
    5d2e:	21 f7       	brne	.-56     	; 0x5cf8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe34>
    5d30:	ad c3       	rjmp	.+1882   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5d36:	81 30       	cpi	r24, 0x01	; 1
    5d38:	51 f4       	brne	.+20     	; 0x5d4e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe8a>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5d3a:	64 e9       	ldi	r22, 0x94	; 148
    5d3c:	74 e0       	ldi	r23, 0x04	; 4
    5d3e:	86 ec       	ldi	r24, 0xC6	; 198
    5d40:	94 e1       	ldi	r25, 0x14	; 20
    5d42:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5d46:	86 ec       	ldi	r24, 0xC6	; 198
    5d48:	94 e1       	ldi	r25, 0x14	; 20
    5d4a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5d4e:	a2 e0       	ldi	r26, 0x02	; 2
    5d50:	3a 12       	cpse	r3, r26
    5d52:	49 c0       	rjmp	.+146    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5d54:	26 e0       	ldi	r18, 0x06	; 6
    5d56:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5d5a:	84 e6       	ldi	r24, 0x64	; 100
    5d5c:	90 e0       	ldi	r25, 0x00	; 0
    5d5e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5d62:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5d66:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5d6a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5d6e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5d72:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5d76:	a0 62       	ori	r26, 0x20	; 32
    5d78:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5d7c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5d80:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5d84:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5d88:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5d8c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d90:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d94:	82 60       	ori	r24, 0x02	; 2
    5d96:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d9a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d9e:	2e 9d       	mul	r18, r14
    5da0:	80 01       	movw	r16, r0
    5da2:	2f 9d       	mul	r18, r15
    5da4:	10 0d       	add	r17, r0
    5da6:	11 24       	eor	r1, r1
    5da8:	e1 2c       	mov	r14, r1
    5daa:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5dac:	f8 01       	movw	r30, r16
    5dae:	ee 0d       	add	r30, r14
    5db0:	ff 1d       	adc	r31, r15
    5db2:	e2 5b       	subi	r30, 0xB2	; 178
    5db4:	f2 4f       	sbci	r31, 0xF2	; 242
    5db6:	e1 81       	ldd	r30, Z+1	; 0x01
    5db8:	e3 31       	cpi	r30, 0x13	; 19
    5dba:	68 f0       	brcs	.+26     	; 0x5dd6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf12>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5dbc:	f0 e0       	ldi	r31, 0x00	; 0
    5dbe:	e7 5c       	subi	r30, 0xC7	; 199
    5dc0:	fb 4e       	sbci	r31, 0xEB	; 235
    5dc2:	61 e0       	ldi	r22, 0x01	; 1
    5dc4:	80 81       	ld	r24, Z
    5dc6:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
												_kDELAY_MS(200);
    5dca:	68 ec       	ldi	r22, 0xC8	; 200
    5dcc:	70 e0       	ldi	r23, 0x00	; 0
    5dce:	80 e0       	ldi	r24, 0x00	; 0
    5dd0:	90 e0       	ldi	r25, 0x00	; 0
    5dd2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5dd6:	bf ef       	ldi	r27, 0xFF	; 255
    5dd8:	eb 1a       	sub	r14, r27
    5dda:	fb 0a       	sbc	r15, r27
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5ddc:	e5 e0       	ldi	r30, 0x05	; 5
    5dde:	ee 16       	cp	r14, r30
    5de0:	f1 04       	cpc	r15, r1
    5de2:	21 f7       	brne	.-56     	; 0x5dac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xee8>
    5de4:	53 c3       	rjmp	.+1702   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5de6:	68 ee       	ldi	r22, 0xE8	; 232
    5de8:	73 e0       	ldi	r23, 0x03	; 3
    5dea:	80 e0       	ldi	r24, 0x00	; 0
    5dec:	90 e0       	ldi	r25, 0x00	; 0
    5dee:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
								_kSERIAL_MON_CLEAR();
							}
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5df2:	f3 e0       	ldi	r31, 0x03	; 3
    5df4:	3f 12       	cpse	r3, r31
    5df6:	d1 cd       	rjmp	.-1118   	; 0x599a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xad6>
    5df8:	2e c0       	rjmp	.+92     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5dfa:	8d ee       	ldi	r24, 0xED	; 237
    5dfc:	8d 0d       	add	r24, r13
    5dfe:	81 35       	cpi	r24, 0x51	; 81
    5e00:	78 f4       	brcc	.+30     	; 0x5e20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf5c>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5e02:	ed 2d       	mov	r30, r13
    5e04:	f0 e0       	ldi	r31, 0x00	; 0
    5e06:	e7 5c       	subi	r30, 0xC7	; 199
    5e08:	fb 4e       	sbci	r31, 0xEB	; 235
    5e0a:	6e a9       	ldd	r22, Y+54	; 0x36
    5e0c:	80 81       	ld	r24, Z
    5e0e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
							_kDELAY_MS(200);
    5e12:	68 ec       	ldi	r22, 0xC8	; 200
    5e14:	70 e0       	ldi	r23, 0x00	; 0
    5e16:	80 e0       	ldi	r24, 0x00	; 0
    5e18:	90 e0       	ldi	r25, 0x00	; 0
    5e1a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    5e1e:	1b c0       	rjmp	.+54     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5e20:	25 e6       	ldi	r18, 0x65	; 101
    5e22:	d2 12       	cpse	r13, r18
    5e24:	18 c0       	rjmp	.+48     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5e26:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
							{
								if(on_off == _kON)
    5e2a:	3b a9       	ldd	r19, Y+51	; 0x33
    5e2c:	31 30       	cpi	r19, 0x01	; 1
    5e2e:	29 f4       	brne	.+10     	; 0x5e3a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf76>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5e30:	88 23       	and	r24, r24
    5e32:	89 f0       	breq	.+34     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5e34:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    5e38:	05 c0       	rjmp	.+10     	; 0x5e44 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf80>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5e3a:	88 23       	and	r24, r24
    5e3c:	61 f0       	breq	.+24     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5e3e:	82 e0       	ldi	r24, 0x02	; 2
    5e40:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5e44:	6b e7       	ldi	r22, 0x7B	; 123
    5e46:	74 e1       	ldi	r23, 0x14	; 20
    5e48:	88 ea       	ldi	r24, 0xA8	; 168
    5e4a:	9c e0       	ldi	r25, 0x0C	; 12
    5e4c:	0e 94 10 24 	call	0x4820	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5e50:	02 c0       	rjmp	.+4      	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5e52:	81 e0       	ldi	r24, 0x01	; 1
    5e54:	01 c0       	rjmp	.+2      	; 0x5e58 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf94>
    5e56:	80 e0       	ldi	r24, 0x00	; 0
    5e58:	2a 94       	dec	r2
    5e5a:	0f 5f       	subi	r16, 0xFF	; 255
    5e5c:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5e5e:	21 10       	cpse	r2, r1
    5e60:	a8 cc       	rjmp	.-1712   	; 0x57b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8ee>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5e66:	81 30       	cpi	r24, 0x01	; 1
    5e68:	09 f0       	breq	.+2      	; 0x5e6c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa8>
    5e6a:	62 c3       	rjmp	.+1732   	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5e6c:	65 e7       	ldi	r22, 0x75	; 117
    5e6e:	74 e0       	ldi	r23, 0x04	; 4
    5e70:	55 c3       	rjmp	.+1706   	; 0x651c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1658>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e72:	81 30       	cpi	r24, 0x01	; 1
    5e74:	51 f4       	brne	.+20     	; 0x5e8a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfc6>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5e76:	67 e6       	ldi	r22, 0x67	; 103
    5e78:	74 e0       	ldi	r23, 0x04	; 4
    5e7a:	86 ec       	ldi	r24, 0xC6	; 198
    5e7c:	94 e1       	ldi	r25, 0x14	; 20
    5e7e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5e82:	86 ec       	ldi	r24, 0xC6	; 198
    5e84:	94 e1       	ldi	r25, 0x14	; 20
    5e86:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5e8a:	4b e1       	ldi	r20, 0x1B	; 27
    5e8c:	74 9e       	mul	r7, r20
    5e8e:	50 01       	movw	r10, r0
    5e90:	11 24       	eor	r1, r1
    5e92:	e1 2c       	mov	r14, r1
    5e94:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5e96:	07 2d       	mov	r16, r7
    5e98:	10 e0       	ldi	r17, 0x00	; 0
    5e9a:	68 01       	movw	r12, r16
    5e9c:	55 e6       	ldi	r21, 0x65	; 101
    5e9e:	c5 1a       	sub	r12, r21
    5ea0:	d1 08       	sbc	r13, r1
    5ea2:	f7 01       	movw	r30, r14
    5ea4:	ea 0d       	add	r30, r10
    5ea6:	fb 1d       	adc	r31, r11
    5ea8:	ea 5b       	subi	r30, 0xBA	; 186
    5eaa:	fc 4f       	sbci	r31, 0xFC	; 252
    5eac:	4a e0       	ldi	r20, 0x0A	; 10
    5eae:	50 e0       	ldi	r21, 0x00	; 0
    5eb0:	60 81       	ld	r22, Z
    5eb2:	86 ec       	ldi	r24, 0xC6	; 198
    5eb4:	94 e1       	ldi	r25, 0x14	; 20
    5eb6:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5eba:	65 e6       	ldi	r22, 0x65	; 101
    5ebc:	74 e0       	ldi	r23, 0x04	; 4
    5ebe:	86 ec       	ldi	r24, 0xC6	; 198
    5ec0:	94 e1       	ldi	r25, 0x14	; 20
    5ec2:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5ec6:	86 ec       	ldi	r24, 0xC6	; 198
    5ec8:	94 e1       	ldi	r25, 0x14	; 20
    5eca:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5ece:	8f ef       	ldi	r24, 0xFF	; 255
    5ed0:	e8 1a       	sub	r14, r24
    5ed2:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5ed4:	95 e0       	ldi	r25, 0x05	; 5
    5ed6:	e9 16       	cp	r14, r25
    5ed8:	f1 04       	cpc	r15, r1
    5eda:	19 f7       	brne	.-58     	; 0x5ea2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfde>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5edc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5ee0:	81 30       	cpi	r24, 0x01	; 1
    5ee2:	99 f4       	brne	.+38     	; 0x5f0a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1046>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5ee4:	6f e4       	ldi	r22, 0x4F	; 79
    5ee6:	74 e0       	ldi	r23, 0x04	; 4
    5ee8:	86 ec       	ldi	r24, 0xC6	; 198
    5eea:	94 e1       	ldi	r25, 0x14	; 20
    5eec:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5ef0:	b8 01       	movw	r22, r16
    5ef2:	61 50       	subi	r22, 0x01	; 1
    5ef4:	71 09       	sbc	r23, r1
    5ef6:	4a e0       	ldi	r20, 0x0A	; 10
    5ef8:	50 e0       	ldi	r21, 0x00	; 0
    5efa:	86 ec       	ldi	r24, 0xC6	; 198
    5efc:	94 e1       	ldi	r25, 0x14	; 20
    5efe:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5f02:	86 ec       	ldi	r24, 0xC6	; 198
    5f04:	94 e1       	ldi	r25, 0x14	; 20
    5f06:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    5f0a:	8b e1       	ldi	r24, 0x1B	; 27
    5f0c:	8c 9d       	mul	r24, r12
    5f0e:	80 01       	movw	r16, r0
    5f10:	8d 9d       	mul	r24, r13
    5f12:	10 0d       	add	r17, r0
    5f14:	11 24       	eor	r1, r1
    5f16:	08 51       	subi	r16, 0x18	; 24
    5f18:	12 4f       	sbci	r17, 0xF2	; 242
    5f1a:	a6 e0       	ldi	r26, 0x06	; 6
    5f1c:	7a 9e       	mul	r7, r26
    5f1e:	50 01       	movw	r10, r0
    5f20:	11 24       	eor	r1, r1
    5f22:	e1 2c       	mov	r14, r1
    5f24:	f1 2c       	mov	r15, r1
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5f26:	52 e0       	ldi	r21, 0x02	; 2
    5f28:	d5 2e       	mov	r13, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5f2a:	cc 24       	eor	r12, r12
    5f2c:	c3 94       	inc	r12
    5f2e:	8b a9       	ldd	r24, Y+51	; 0x33
    5f30:	8c 25       	eor	r24, r12
    5f32:	81 70       	andi	r24, 0x01	; 1
    5f34:	88 af       	std	Y+56, r24	; 0x38
							if(Subscribed_data_check())
							{
								if(Seperate_Out_Sub_Data())
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5f36:	60 ed       	ldi	r22, 0xD0	; 208
    5f38:	26 2e       	mov	r2, r22
    5f3a:	6f e0       	ldi	r22, 0x0F	; 15
    5f3c:	36 2e       	mov	r3, r22
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5f3e:	f8 01       	movw	r30, r16
    5f40:	ee 0d       	add	r30, r14
    5f42:	ff 1d       	adc	r31, r15
    5f44:	85 80       	ldd	r8, Z+5	; 0x05
    5f46:	8f ef       	ldi	r24, 0xFF	; 255
    5f48:	88 0d       	add	r24, r8
    5f4a:	82 31       	cpi	r24, 0x12	; 18
    5f4c:	08 f0       	brcs	.+2      	; 0x5f50 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x108c>
    5f4e:	aa c2       	rjmp	.+1364   	; 0x64a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15e0>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5f50:	b3 e0       	ldi	r27, 0x03	; 3
    5f52:	b8 15       	cp	r27, r8
    5f54:	90 f4       	brcc	.+36     	; 0x5f7a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b6>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5f56:	8b ea       	ldi	r24, 0xAB	; 171
    5f58:	88 9e       	mul	r8, r24
    5f5a:	91 2c       	mov	r9, r1
    5f5c:	11 24       	eor	r1, r1
    5f5e:	89 2d       	mov	r24, r9
    5f60:	86 95       	lsr	r24
    5f62:	98 2f       	mov	r25, r24
    5f64:	99 0f       	add	r25, r25
    5f66:	89 0f       	add	r24, r25
    5f68:	88 1a       	sub	r8, r24
    5f6a:	96 94       	lsr	r9
    5f6c:	88 20       	and	r8, r8
    5f6e:	11 f0       	breq	.+4      	; 0x5f74 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b0>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5f70:	93 94       	inc	r9
    5f72:	05 c0       	rjmp	.+10     	; 0x5f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5f74:	43 e0       	ldi	r20, 0x03	; 3
    5f76:	84 2e       	mov	r8, r20
    5f78:	02 c0       	rjmp	.+4      	; 0x5f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5f7a:	99 24       	eor	r9, r9
    5f7c:	93 94       	inc	r9
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5f82:	81 30       	cpi	r24, 0x01	; 1
    5f84:	89 f4       	brne	.+34     	; 0x5fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10e4>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5f86:	6b e3       	ldi	r22, 0x3B	; 59
    5f88:	74 e0       	ldi	r23, 0x04	; 4
    5f8a:	86 ec       	ldi	r24, 0xC6	; 198
    5f8c:	94 e1       	ldi	r25, 0x14	; 20
    5f8e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5f92:	4a e0       	ldi	r20, 0x0A	; 10
    5f94:	50 e0       	ldi	r21, 0x00	; 0
    5f96:	69 2d       	mov	r22, r9
    5f98:	86 ec       	ldi	r24, 0xC6	; 198
    5f9a:	94 e1       	ldi	r25, 0x14	; 20
    5f9c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5fa0:	86 ec       	ldi	r24, 0xC6	; 198
    5fa2:	94 e1       	ldi	r25, 0x14	; 20
    5fa4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5fa8:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
    5fac:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5fae:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5fb2:	84 e1       	ldi	r24, 0x14	; 20
    5fb4:	e5 ef       	ldi	r30, 0xF5	; 245
    5fb6:	f3 e1       	ldi	r31, 0x13	; 19
    5fb8:	11 92       	st	Z+, r1
    5fba:	8a 95       	dec	r24
    5fbc:	e9 f7       	brne	.-6      	; 0x5fb8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10f4>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5fbe:	29 2d       	mov	r18, r9
    5fc0:	30 e0       	ldi	r19, 0x00	; 0
    5fc2:	21 50       	subi	r18, 0x01	; 1
    5fc4:	31 09       	sbc	r19, r1
    5fc6:	f7 e0       	ldi	r31, 0x07	; 7
    5fc8:	f2 9f       	mul	r31, r18
    5fca:	c0 01       	movw	r24, r0
    5fcc:	f3 9f       	mul	r31, r19
    5fce:	90 0d       	add	r25, r0
    5fd0:	11 24       	eor	r1, r1
    5fd2:	82 55       	subi	r24, 0x52	; 82
    5fd4:	9c 4e       	sbci	r25, 0xEC	; 236
    5fd6:	fc 01       	movw	r30, r24
    5fd8:	ec 58       	subi	r30, 0x8C	; 140
    5fda:	ff 4f       	sbci	r31, 0xFF	; 255
    5fdc:	20 81       	ld	r18, Z
    5fde:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5fe2:	31 96       	adiw	r30, 0x01	; 1
    5fe4:	20 81       	ld	r18, Z
    5fe6:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5fea:	31 96       	adiw	r30, 0x01	; 1
    5fec:	20 81       	ld	r18, Z
    5fee:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5ff2:	31 96       	adiw	r30, 0x01	; 1
    5ff4:	20 81       	ld	r18, Z
    5ff6:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5ffa:	31 96       	adiw	r30, 0x01	; 1
    5ffc:	20 81       	ld	r18, Z
    5ffe:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    6002:	31 96       	adiw	r30, 0x01	; 1
    6004:	20 81       	ld	r18, Z
    6006:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    600a:	d0 92 fb 13 	sts	0x13FB, r13	; 0x8013fb <_sRuble_Parameters+0x4d>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    600e:	2b a9       	ldd	r18, Y+51	; 0x33
    6010:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0x4e>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    6014:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    6018:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    601c:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    6020:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    6024:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    6028:	40 e0       	ldi	r20, 0x00	; 0
    602a:	50 e0       	ldi	r21, 0x00	; 0
    602c:	74 2e       	mov	r7, r20
    602e:	81 2c       	mov	r8, r1
    6030:	91 2c       	mov	r9, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    6032:	3d e0       	ldi	r19, 0x0D	; 13
    6034:	34 9f       	mul	r19, r20
    6036:	b0 01       	movw	r22, r0
    6038:	35 9f       	mul	r19, r21
    603a:	70 0d       	add	r23, r0
    603c:	11 24       	eor	r1, r1
    603e:	6b 5e       	subi	r22, 0xEB	; 235
    6040:	73 4f       	sbci	r23, 0xF3	; 243
    6042:	29 2d       	mov	r18, r9
    6044:	30 e0       	ldi	r19, 0x00	; 0
    6046:	fb 01       	movw	r30, r22
    6048:	e2 0f       	add	r30, r18
    604a:	f3 1f       	adc	r31, r19
    604c:	28 0f       	add	r18, r24
    604e:	39 1f       	adc	r19, r25
    6050:	d9 01       	movw	r26, r18
    6052:	ac 58       	subi	r26, 0x8C	; 140
    6054:	bf 4f       	sbci	r27, 0xFF	; 255
    6056:	21 81       	ldd	r18, Z+1	; 0x01
    6058:	3c 91       	ld	r19, X
    605a:	23 17       	cp	r18, r19
    605c:	19 f0       	breq	.+6      	; 0x6064 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11a0>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    605e:	81 2c       	mov	r8, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    6060:	36 e0       	ldi	r19, 0x06	; 6
    6062:	93 2e       	mov	r9, r19
									id_len = _kRESET;
								}
								id_len++;
    6064:	83 94       	inc	r8
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    6066:	93 94       	inc	r9
    6068:	a5 e0       	ldi	r26, 0x05	; 5
    606a:	a9 15       	cp	r26, r9
    606c:	50 f7       	brcc	.-44     	; 0x6042 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x117e>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    606e:	b6 e0       	ldi	r27, 0x06	; 6
    6070:	8b 16       	cp	r8, r27
    6072:	31 f0       	breq	.+12     	; 0x6080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11bc>
    6074:	4f 5f       	subi	r20, 0xFF	; 255
    6076:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    6078:	46 30       	cpi	r20, 0x06	; 6
    607a:	51 05       	cpc	r21, r1
    607c:	b9 f6       	brne	.-82     	; 0x602c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1168>
    607e:	01 c0       	rjmp	.+2      	; 0x6082 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11be>
    6080:	67 2c       	mov	r6, r7
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6082:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6086:	81 30       	cpi	r24, 0x01	; 1
    6088:	89 f4       	brne	.+34     	; 0x60ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11e8>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    608a:	65 e2       	ldi	r22, 0x25	; 37
    608c:	74 e0       	ldi	r23, 0x04	; 4
    608e:	86 ec       	ldi	r24, 0xC6	; 198
    6090:	94 e1       	ldi	r25, 0x14	; 20
    6092:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    6096:	4a e0       	ldi	r20, 0x0A	; 10
    6098:	50 e0       	ldi	r21, 0x00	; 0
    609a:	66 2d       	mov	r22, r6
    609c:	86 ec       	ldi	r24, 0xC6	; 198
    609e:	94 e1       	ldi	r25, 0x14	; 20
    60a0:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    60a4:	86 ec       	ldi	r24, 0xC6	; 198
    60a6:	94 e1       	ldi	r25, 0x14	; 20
    60a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    60ac:	ed e0       	ldi	r30, 0x0D	; 13
    60ae:	6e 9e       	mul	r6, r30
    60b0:	20 01       	movw	r4, r0
    60b2:	11 24       	eor	r1, r1
    60b4:	71 2c       	mov	r7, r1
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    60b6:	fd e0       	ldi	r31, 0x0D	; 13
    60b8:	f6 9d       	mul	r31, r6
    60ba:	c0 01       	movw	r24, r0
    60bc:	11 24       	eor	r1, r1
    60be:	9c 01       	movw	r18, r24
    60c0:	2b 5e       	subi	r18, 0xEB	; 235
    60c2:	33 4f       	sbci	r19, 0xF3	; 243
    60c4:	a9 01       	movw	r20, r18
    60c6:	45 5f       	subi	r20, 0xF5	; 245
    60c8:	5f 4f       	sbci	r21, 0xFF	; 255
    60ca:	5d ab       	std	Y+53, r21	; 0x35
    60cc:	4c ab       	std	Y+52, r20	; 0x34
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    60ce:	d9 01       	movw	r26, r18
    60d0:	18 96       	adiw	r26, 0x08	; 8
    60d2:	bf ab       	std	Y+55, r27	; 0x37
    60d4:	ae ab       	std	Y+54, r26	; 0x36
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    60d6:	fc 01       	movw	r30, r24
    60d8:	ea 5e       	subi	r30, 0xEA	; 234
    60da:	f3 4f       	sbci	r31, 0xF3	; 243
    60dc:	4f 01       	movw	r8, r30
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							if(Subscribed_data_check())
    60de:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    60e2:	88 23       	and	r24, r24
    60e4:	99 f0       	breq	.+38     	; 0x610c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
							{
								if(Seperate_Out_Sub_Data())
    60e6:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    60ea:	88 23       	and	r24, r24
    60ec:	79 f0       	breq	.+30     	; 0x610c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    60ee:	f1 01       	movw	r30, r2
    60f0:	01 90       	ld	r0, Z+
    60f2:	00 20       	and	r0, r0
    60f4:	e9 f7       	brne	.-6      	; 0x60f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x122c>
    60f6:	31 97       	sbiw	r30, 0x01	; 1
    60f8:	af 01       	movw	r20, r30
    60fa:	40 5d       	subi	r20, 0xD0	; 208
    60fc:	5f 40       	sbci	r21, 0x0F	; 15
    60fe:	21 e0       	ldi	r18, 0x01	; 1
    6100:	60 ed       	ldi	r22, 0xD0	; 208
    6102:	7f e0       	ldi	r23, 0x0F	; 15
    6104:	82 e6       	ldi	r24, 0x62	; 98
    6106:	9f e0       	ldi	r25, 0x0F	; 15
    6108:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							data_send_counter++;
    610c:	73 94       	inc	r7
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    610e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6112:	81 30       	cpi	r24, 0x01	; 1
    6114:	51 f4       	brne	.+20     	; 0x612a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1266>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    6116:	61 e0       	ldi	r22, 0x01	; 1
    6118:	74 e0       	ldi	r23, 0x04	; 4
    611a:	86 ec       	ldi	r24, 0xC6	; 198
    611c:	94 e1       	ldi	r25, 0x14	; 20
    611e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6122:	86 ec       	ldi	r24, 0xC6	; 198
    6124:	94 e1       	ldi	r25, 0x14	; 20
    6126:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    612a:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    612e:	8c e0       	ldi	r24, 0x0C	; 12
    6130:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    6134:	88 eb       	ldi	r24, 0xB8	; 184
    6136:	9b e0       	ldi	r25, 0x0B	; 11
    6138:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    613c:	88 23       	and	r24, r24
    613e:	09 f4       	brne	.+2      	; 0x6142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x127e>
    6140:	6f c1       	rjmp	.+734    	; 0x6420 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x155c>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    6142:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
    6146:	88 23       	and	r24, r24
    6148:	09 f4       	brne	.+2      	; 0x614c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1288>
    614a:	17 c1       	rjmp	.+558    	; 0x637a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14b6>
								{
									if(Subscribed_data_check())
    614c:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    6150:	88 23       	and	r24, r24
    6152:	99 f0       	breq	.+38     	; 0x617a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
									{
										if(Seperate_Out_Sub_Data())
    6154:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    6158:	88 23       	and	r24, r24
    615a:	79 f0       	breq	.+30     	; 0x617a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
										{
											//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
											Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    615c:	f1 01       	movw	r30, r2
    615e:	01 90       	ld	r0, Z+
    6160:	00 20       	and	r0, r0
    6162:	e9 f7       	brne	.-6      	; 0x615e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x129a>
    6164:	31 97       	sbiw	r30, 0x01	; 1
    6166:	af 01       	movw	r20, r30
    6168:	40 5d       	subi	r20, 0xD0	; 208
    616a:	5f 40       	sbci	r21, 0x0F	; 15
    616c:	21 e0       	ldi	r18, 0x01	; 1
    616e:	60 ed       	ldi	r22, 0xD0	; 208
    6170:	7f e0       	ldi	r23, 0x0F	; 15
    6172:	82 e6       	ldi	r24, 0x62	; 98
    6174:	9f e0       	ldi	r25, 0x0F	; 15
    6176:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
										}
									}
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    617a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    617e:	81 30       	cpi	r24, 0x01	; 1
    6180:	59 f5       	brne	.+86     	; 0x61d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1314>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    6182:	6b ee       	ldi	r22, 0xEB	; 235
    6184:	73 e0       	ldi	r23, 0x03	; 3
    6186:	86 ec       	ldi	r24, 0xC6	; 198
    6188:	94 e1       	ldi	r25, 0x14	; 20
    618a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    618e:	4a e0       	ldi	r20, 0x0A	; 10
    6190:	50 e0       	ldi	r21, 0x00	; 0
    6192:	69 e0       	ldi	r22, 0x09	; 9
    6194:	74 e1       	ldi	r23, 0x14	; 20
    6196:	86 ec       	ldi	r24, 0xC6	; 198
    6198:	94 e1       	ldi	r25, 0x14	; 20
    619a:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
										Serial.println();
    619e:	86 ec       	ldi	r24, 0xC6	; 198
    61a0:	94 e1       	ldi	r25, 0x14	; 20
    61a2:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    61a6:	86 ec       	ldi	r24, 0xC6	; 198
    61a8:	94 e1       	ldi	r25, 0x14	; 20
    61aa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    61ae:	6d ec       	ldi	r22, 0xCD	; 205
    61b0:	73 e0       	ldi	r23, 0x03	; 3
    61b2:	86 ec       	ldi	r24, 0xC6	; 198
    61b4:	94 e1       	ldi	r25, 0x14	; 20
    61b6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    61ba:	47 e0       	ldi	r20, 0x07	; 7
    61bc:	50 e0       	ldi	r21, 0x00	; 0
    61be:	b4 01       	movw	r22, r8
    61c0:	86 ec       	ldi	r24, 0xC6	; 198
    61c2:	94 e1       	ldi	r25, 0x14	; 20
    61c4:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
										Serial.println();
    61c8:	86 ec       	ldi	r24, 0xC6	; 198
    61ca:	94 e1       	ldi	r25, 0x14	; 20
    61cc:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    61d0:	86 ec       	ldi	r24, 0xC6	; 198
    61d2:	94 e1       	ldi	r25, 0x14	; 20
    61d4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    61d8:	a9 e0       	ldi	r26, 0x09	; 9
    61da:	b4 e1       	ldi	r27, 0x14	; 20
    61dc:	80 e0       	ldi	r24, 0x00	; 0
    61de:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    61e0:	2d 91       	ld	r18, X+
    61e2:	f2 01       	movw	r30, r4
    61e4:	e8 0f       	add	r30, r24
    61e6:	f9 1f       	adc	r31, r25
    61e8:	eb 5e       	subi	r30, 0xEB	; 235
    61ea:	f3 4f       	sbci	r31, 0xF3	; 243
    61ec:	31 81       	ldd	r19, Z+1	; 0x01
    61ee:	32 17       	cp	r19, r18
    61f0:	09 f4       	brne	.+2      	; 0x61f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1330>
    61f2:	6a c0       	rjmp	.+212    	; 0x62c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1404>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    61f4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    61f8:	81 30       	cpi	r24, 0x01	; 1
    61fa:	51 f4       	brne	.+20     	; 0x6210 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x134c>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    61fc:	62 ea       	ldi	r22, 0xA2	; 162
    61fe:	73 e0       	ldi	r23, 0x03	; 3
    6200:	86 ec       	ldi	r24, 0xC6	; 198
    6202:	94 e1       	ldi	r25, 0x14	; 20
    6204:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    6208:	86 ec       	ldi	r24, 0xC6	; 198
    620a:	94 e1       	ldi	r25, 0x14	; 20
    620c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    6210:	f2 e0       	ldi	r31, 0x02	; 2
    6212:	7f 16       	cp	r7, r31
    6214:	b9 f0       	breq	.+46     	; 0x6244 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1380>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    6216:	ac a9       	ldd	r26, Y+52	; 0x34
    6218:	bd a9       	ldd	r27, Y+53	; 0x35
    621a:	cc 92       	st	X, r12
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    621c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    6220:	90 e0       	ldi	r25, 0x00	; 0
    6222:	98 2f       	mov	r25, r24
    6224:	88 27       	eor	r24, r24
    6226:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    622a:	82 2b       	or	r24, r18
    622c:	ee a9       	ldd	r30, Y+54	; 0x36
    622e:	ff a9       	ldd	r31, Y+55	; 0x37
    6230:	91 83       	std	Z+1, r25	; 0x01
    6232:	80 83       	st	Z, r24
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    6234:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    6238:	fb a9       	ldd	r31, Y+51	; 0x33
    623a:	f8 13       	cpse	r31, r24
    623c:	4b c0       	rjmp	.+150    	; 0x62d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1410>
											return 0;
										}
									}
									else
									{
										data_send_counter = 3;
    623e:	83 e0       	ldi	r24, 0x03	; 3
    6240:	78 2e       	mov	r7, r24
    6242:	26 c1       	rjmp	.+588    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
												_kSERIAL_MON_CLEAR();
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6244:	86 e0       	ldi	r24, 0x06	; 6
    6246:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    624a:	84 e6       	ldi	r24, 0x64	; 100
    624c:	90 e0       	ldi	r25, 0x00	; 0
    624e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    6252:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6256:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    625a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    625e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6262:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6266:	a0 62       	ori	r26, 0x20	; 32
    6268:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    626c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6270:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6274:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    6278:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    627c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6280:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6284:	82 60       	ori	r24, 0x02	; 2
    6286:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    628a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    628e:	e1 2c       	mov	r14, r1
    6290:	f1 2c       	mov	r15, r1
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6292:	f8 01       	movw	r30, r16
    6294:	ee 0d       	add	r30, r14
    6296:	ff 1d       	adc	r31, r15
    6298:	e5 81       	ldd	r30, Z+5	; 0x05
    629a:	e3 31       	cpi	r30, 0x13	; 19
    629c:	68 f0       	brcs	.+26     	; 0x62b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13f4>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    629e:	f0 e0       	ldi	r31, 0x00	; 0
    62a0:	e7 5c       	subi	r30, 0xC7	; 199
    62a2:	fb 4e       	sbci	r31, 0xEB	; 235
    62a4:	61 e0       	ldi	r22, 0x01	; 1
    62a6:	80 81       	ld	r24, Z
    62a8:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
														_kDELAY_MS(200);
    62ac:	68 ec       	ldi	r22, 0xC8	; 200
    62ae:	70 e0       	ldi	r23, 0x00	; 0
    62b0:	80 e0       	ldi	r24, 0x00	; 0
    62b2:	90 e0       	ldi	r25, 0x00	; 0
    62b4:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    62b8:	2f ef       	ldi	r18, 0xFF	; 255
    62ba:	e2 1a       	sub	r14, r18
    62bc:	f2 0a       	sbc	r15, r18
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    62be:	35 e0       	ldi	r19, 0x05	; 5
    62c0:	e3 16       	cp	r14, r19
    62c2:	f1 04       	cpc	r15, r1
    62c4:	31 f7       	brne	.-52     	; 0x6292 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13ce>
    62c6:	e2 c0       	rjmp	.+452    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    62c8:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    62ca:	86 30       	cpi	r24, 0x06	; 6
    62cc:	91 05       	cpc	r25, r1
    62ce:	09 f0       	breq	.+2      	; 0x62d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x140e>
    62d0:	87 cf       	rjmp	.-242    	; 0x61e0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x131c>
    62d2:	a1 cf       	rjmp	.-190    	; 0x6216 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1352>
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    62d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    62d8:	81 30       	cpi	r24, 0x01	; 1
    62da:	51 f4       	brne	.+20     	; 0x62f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x142c>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    62dc:	6f e8       	ldi	r22, 0x8F	; 143
    62de:	73 e0       	ldi	r23, 0x03	; 3
    62e0:	86 ec       	ldi	r24, 0xC6	; 198
    62e2:	94 e1       	ldi	r25, 0x14	; 20
    62e4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    62e8:	86 ec       	ldi	r24, 0xC6	; 198
    62ea:	94 e1       	ldi	r25, 0x14	; 20
    62ec:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    62f0:	42 e0       	ldi	r20, 0x02	; 2
    62f2:	74 12       	cpse	r7, r20
    62f4:	cd c0       	rjmp	.+410    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    62f6:	86 e0       	ldi	r24, 0x06	; 6
    62f8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    62fc:	84 e6       	ldi	r24, 0x64	; 100
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    6304:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6308:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    630c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    6310:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6314:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6318:	a0 62       	ori	r26, 0x20	; 32
    631a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    631e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6322:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6326:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    632a:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    632e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6332:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6336:	82 60       	ori	r24, 0x02	; 2
    6338:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    633c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    6340:	e1 2c       	mov	r14, r1
    6342:	f1 2c       	mov	r15, r1
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6344:	f8 01       	movw	r30, r16
    6346:	ee 0d       	add	r30, r14
    6348:	ff 1d       	adc	r31, r15
    634a:	e5 81       	ldd	r30, Z+5	; 0x05
    634c:	e3 31       	cpi	r30, 0x13	; 19
    634e:	68 f0       	brcs	.+26     	; 0x636a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14a6>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6350:	f0 e0       	ldi	r31, 0x00	; 0
    6352:	e7 5c       	subi	r30, 0xC7	; 199
    6354:	fb 4e       	sbci	r31, 0xEB	; 235
    6356:	61 e0       	ldi	r22, 0x01	; 1
    6358:	80 81       	ld	r24, Z
    635a:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
													_kDELAY_MS(200);
    635e:	68 ec       	ldi	r22, 0xC8	; 200
    6360:	70 e0       	ldi	r23, 0x00	; 0
    6362:	80 e0       	ldi	r24, 0x00	; 0
    6364:	90 e0       	ldi	r25, 0x00	; 0
    6366:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    636a:	5f ef       	ldi	r21, 0xFF	; 255
    636c:	e5 1a       	sub	r14, r21
    636e:	f5 0a       	sbc	r15, r21
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6370:	85 e0       	ldi	r24, 0x05	; 5
    6372:	e8 16       	cp	r14, r24
    6374:	f1 04       	cpc	r15, r1
    6376:	31 f7       	brne	.-52     	; 0x6344 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1480>
    6378:	89 c0       	rjmp	.+274    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    637a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    637e:	81 30       	cpi	r24, 0x01	; 1
    6380:	51 f4       	brne	.+20     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14d2>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    6382:	64 e5       	ldi	r22, 0x54	; 84
    6384:	73 e0       	ldi	r23, 0x03	; 3
    6386:	86 ec       	ldi	r24, 0xC6	; 198
    6388:	94 e1       	ldi	r25, 0x14	; 20
    638a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    638e:	86 ec       	ldi	r24, 0xC6	; 198
    6390:	94 e1       	ldi	r25, 0x14	; 20
    6392:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    6396:	92 e0       	ldi	r25, 0x02	; 2
    6398:	79 12       	cpse	r7, r25
    639a:	7a c0       	rjmp	.+244    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    639c:	86 e0       	ldi	r24, 0x06	; 6
    639e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    63a2:	84 e6       	ldi	r24, 0x64	; 100
    63a4:	90 e0       	ldi	r25, 0x00	; 0
    63a6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    63aa:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    63ae:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    63b2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    63b6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    63ba:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    63be:	a0 62       	ori	r26, 0x20	; 32
    63c0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    63c4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    63c8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    63cc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    63d0:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    63d4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    63d8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    63dc:	82 60       	ori	r24, 0x02	; 2
    63de:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    63e2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    63e6:	e1 2c       	mov	r14, r1
    63e8:	f1 2c       	mov	r15, r1
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    63ea:	f8 01       	movw	r30, r16
    63ec:	ee 0d       	add	r30, r14
    63ee:	ff 1d       	adc	r31, r15
    63f0:	e5 81       	ldd	r30, Z+5	; 0x05
    63f2:	e3 31       	cpi	r30, 0x13	; 19
    63f4:	68 f0       	brcs	.+26     	; 0x6410 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x154c>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    63f6:	f0 e0       	ldi	r31, 0x00	; 0
    63f8:	e7 5c       	subi	r30, 0xC7	; 199
    63fa:	fb 4e       	sbci	r31, 0xEB	; 235
    63fc:	61 e0       	ldi	r22, 0x01	; 1
    63fe:	80 81       	ld	r24, Z
    6400:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
												_kDELAY_MS(200);
    6404:	68 ec       	ldi	r22, 0xC8	; 200
    6406:	70 e0       	ldi	r23, 0x00	; 0
    6408:	80 e0       	ldi	r24, 0x00	; 0
    640a:	90 e0       	ldi	r25, 0x00	; 0
    640c:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    6410:	af ef       	ldi	r26, 0xFF	; 255
    6412:	ea 1a       	sub	r14, r26
    6414:	fa 0a       	sbc	r15, r26
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6416:	b5 e0       	ldi	r27, 0x05	; 5
    6418:	eb 16       	cp	r14, r27
    641a:	f1 04       	cpc	r15, r1
    641c:	31 f7       	brne	.-52     	; 0x63ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
    641e:	36 c0       	rjmp	.+108    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6420:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6424:	81 30       	cpi	r24, 0x01	; 1
    6426:	51 f4       	brne	.+20     	; 0x643c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1578>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    6428:	69 e1       	ldi	r22, 0x19	; 25
    642a:	73 e0       	ldi	r23, 0x03	; 3
    642c:	86 ec       	ldi	r24, 0xC6	; 198
    642e:	94 e1       	ldi	r25, 0x14	; 20
    6430:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6434:	86 ec       	ldi	r24, 0xC6	; 198
    6436:	94 e1       	ldi	r25, 0x14	; 20
    6438:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    643c:	e2 e0       	ldi	r30, 0x02	; 2
    643e:	7e 12       	cpse	r7, r30
    6440:	27 c0       	rjmp	.+78     	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    6442:	84 e6       	ldi	r24, 0x64	; 100
    6444:	90 e0       	ldi	r25, 0x00	; 0
    6446:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    644a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    644e:	86 e0       	ldi	r24, 0x06	; 6
    6450:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6454:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    6458:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    645c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6460:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6464:	a0 62       	ori	r26, 0x20	; 32
    6466:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    646a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    646e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6472:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    6476:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    647a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    647e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6482:	82 60       	ori	r24, 0x02	; 2
    6484:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    6488:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    648c:	80 e0       	ldi	r24, 0x00	; 0
    648e:	51 c0       	rjmp	.+162    	; 0x6532 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
								}
							}
							_kDELAY_MS(1000);
    6490:	68 ee       	ldi	r22, 0xE8	; 232
    6492:	73 e0       	ldi	r23, 0x03	; 3
    6494:	80 e0       	ldi	r24, 0x00	; 0
    6496:	90 e0       	ldi	r25, 0x00	; 0
    6498:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
							_kSERIAL_MON_CLEAR();
						}
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    649c:	f3 e0       	ldi	r31, 0x03	; 3
    649e:	7f 12       	cpse	r7, r31
    64a0:	1e ce       	rjmp	.-964    	; 0x60de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x121a>
    64a2:	2e c0       	rjmp	.+92     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    64a4:	22 e1       	ldi	r18, 0x12	; 18
    64a6:	28 15       	cp	r18, r8
    64a8:	78 f4       	brcc	.+30     	; 0x64c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1604>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    64aa:	e8 2d       	mov	r30, r8
    64ac:	f0 e0       	ldi	r31, 0x00	; 0
    64ae:	e7 5c       	subi	r30, 0xC7	; 199
    64b0:	fb 4e       	sbci	r31, 0xEB	; 235
    64b2:	68 ad       	ldd	r22, Y+56	; 0x38
    64b4:	80 81       	ld	r24, Z
    64b6:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
						_kDELAY_MS(200);
    64ba:	68 ec       	ldi	r22, 0xC8	; 200
    64bc:	70 e0       	ldi	r23, 0x00	; 0
    64be:	80 e0       	ldi	r24, 0x00	; 0
    64c0:	90 e0       	ldi	r25, 0x00	; 0
    64c2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    64c6:	1c c0       	rjmp	.+56     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    64c8:	f5 01       	movw	r30, r10
    64ca:	ee 0d       	add	r30, r14
    64cc:	ff 1d       	adc	r31, r15
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    64ce:	e7 5b       	subi	r30, 0xB7	; 183
    64d0:	f2 4f       	sbci	r31, 0xF2	; 242
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    64d2:	80 81       	ld	r24, Z
    64d4:	85 36       	cpi	r24, 0x65	; 101
    64d6:	a1 f4       	brne	.+40     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    64d8:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
						{
							if(on_off == _kON)
    64dc:	3b a9       	ldd	r19, Y+51	; 0x33
    64de:	31 30       	cpi	r19, 0x01	; 1
    64e0:	29 f4       	brne	.+10     	; 0x64ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1628>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    64e2:	88 23       	and	r24, r24
    64e4:	69 f0       	breq	.+26     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    64e6:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    64ea:	04 c0       	rjmp	.+8      	; 0x64f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1630>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    64ec:	88 23       	and	r24, r24
    64ee:	41 f0       	breq	.+16     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    64f0:	d0 92 7b 14 	sts	0x147B, r13	; 0x80147b <_sRuble_Parameters+0xcd>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    64f4:	6b e7       	ldi	r22, 0x7B	; 123
    64f6:	74 e1       	ldi	r23, 0x14	; 20
    64f8:	88 ea       	ldi	r24, 0xA8	; 168
    64fa:	9c e0       	ldi	r25, 0x0C	; 12
    64fc:	0e 94 10 24 	call	0x4820	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    6500:	4f ef       	ldi	r20, 0xFF	; 255
    6502:	e4 1a       	sub	r14, r20
    6504:	f4 0a       	sbc	r15, r20
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    6506:	55 e0       	ldi	r21, 0x05	; 5
    6508:	e5 16       	cp	r14, r21
    650a:	f1 04       	cpc	r15, r1
    650c:	09 f0       	breq	.+2      	; 0x6510 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x164c>
    650e:	17 cd       	rjmp	.-1490   	; 0x5f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x107a>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6510:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6514:	81 30       	cpi	r24, 0x01	; 1
    6516:	61 f4       	brne	.+24     	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    6518:	6a ef       	ldi	r22, 0xFA	; 250
    651a:	72 e0       	ldi	r23, 0x02	; 2
    651c:	86 ec       	ldi	r24, 0xC6	; 198
    651e:	94 e1       	ldi	r25, 0x14	; 20
    6520:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6524:	86 ec       	ldi	r24, 0xC6	; 198
    6526:	94 e1       	ldi	r25, 0x14	; 20
    6528:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    652c:	01 c0       	rjmp	.+2      	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				return 1;
			}
			
		}break;
	}
}
    652e:	01 c0       	rjmp	.+2      	; 0x6532 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    6530:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    6532:	e9 96       	adiw	r28, 0x39	; 57
    6534:	0f b6       	in	r0, 0x3f	; 63
    6536:	f8 94       	cli
    6538:	de bf       	out	0x3e, r29	; 62
    653a:	0f be       	out	0x3f, r0	; 63
    653c:	cd bf       	out	0x3d, r28	; 61
    653e:	df 91       	pop	r29
    6540:	cf 91       	pop	r28
    6542:	1f 91       	pop	r17
    6544:	0f 91       	pop	r16
    6546:	ff 90       	pop	r15
    6548:	ef 90       	pop	r14
    654a:	df 90       	pop	r13
    654c:	cf 90       	pop	r12
    654e:	bf 90       	pop	r11
    6550:	af 90       	pop	r10
    6552:	9f 90       	pop	r9
    6554:	8f 90       	pop	r8
    6556:	7f 90       	pop	r7
    6558:	6f 90       	pop	r6
    655a:	5f 90       	pop	r5
    655c:	4f 90       	pop	r4
    655e:	3f 90       	pop	r3
    6560:	2f 90       	pop	r2
    6562:	08 95       	ret

00006564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    6564:	ff 92       	push	r15
    6566:	0f 93       	push	r16
    6568:	1f 93       	push	r17
    656a:	cf 93       	push	r28
    656c:	df 93       	push	r29
    656e:	0e e1       	ldi	r16, 0x1E	; 30
    6570:	19 e0       	ldi	r17, 0x09	; 9
    6572:	ca e1       	ldi	r28, 0x1A	; 26
    6574:	d5 e0       	ldi	r29, 0x05	; 5
    6576:	f8 01       	movw	r30, r16
    6578:	f1 90       	ld	r15, Z+
    657a:	8f 01       	movw	r16, r30
    657c:	ce 01       	movw	r24, r28
    657e:	0e 94 14 f1 	call	0x1e228	; 0x1e228 <eeprom_read_byte>
    6582:	f8 16       	cp	r15, r24
    6584:	21 f0       	breq	.+8      	; 0x658e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    6586:	6f 2d       	mov	r22, r15
    6588:	ce 01       	movw	r24, r28
    658a:	0e 94 1c f1 	call	0x1e238	; 0x1e238 <eeprom_write_byte>
    658e:	21 96       	adiw	r28, 0x01	; 1
    6590:	c0 3f       	cpi	r28, 0xF0	; 240
    6592:	f7 e0       	ldi	r31, 0x07	; 7
    6594:	df 07       	cpc	r29, r31
    6596:	79 f7       	brne	.-34     	; 0x6576 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    6598:	8e e1       	ldi	r24, 0x1E	; 30
    659a:	99 e0       	ldi	r25, 0x09	; 9
    659c:	df 91       	pop	r29
    659e:	cf 91       	pop	r28
    65a0:	1f 91       	pop	r17
    65a2:	0f 91       	pop	r16
    65a4:	ff 90       	pop	r15
    65a6:	08 95       	ret

000065a8 <_Z24Return_Previous_Day_Datev>:
    65a8:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    65ac:	20 91 f3 13 	lds	r18, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    65b0:	42 2f       	mov	r20, r18
    65b2:	50 e0       	ldi	r21, 0x00	; 0
    65b4:	fa 01       	movw	r30, r20
    65b6:	31 97       	sbiw	r30, 0x01	; 1
    65b8:	ec 30       	cpi	r30, 0x0C	; 12
    65ba:	f1 05       	cpc	r31, r1
    65bc:	08 f0       	brcs	.+2      	; 0x65c0 <_Z24Return_Previous_Day_Datev+0x18>
    65be:	52 c0       	rjmp	.+164    	; 0x6664 <_Z24Return_Previous_Day_Datev+0xbc>
    65c0:	88 27       	eor	r24, r24
    65c2:	ee 58       	subi	r30, 0x8E	; 142
    65c4:	ff 4f       	sbci	r31, 0xFF	; 255
    65c6:	8f 4f       	sbci	r24, 0xFF	; 255
    65c8:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
    65cc:	91 30       	cpi	r25, 0x01	; 1
    65ce:	89 f5       	brne	.+98     	; 0x6632 <_Z24Return_Previous_Day_Datev+0x8a>
    65d0:	fa 01       	movw	r30, r20
    65d2:	31 97       	sbiw	r30, 0x01	; 1
    65d4:	eb 30       	cpi	r30, 0x0B	; 11
    65d6:	f1 05       	cpc	r31, r1
    65d8:	58 f4       	brcc	.+22     	; 0x65f0 <_Z24Return_Previous_Day_Datev+0x48>
    65da:	88 27       	eor	r24, r24
    65dc:	e2 58       	subi	r30, 0x82	; 130
    65de:	ff 4f       	sbci	r31, 0xFF	; 255
    65e0:	8f 4f       	sbci	r24, 0xFF	; 255
    65e2:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
    65e6:	8c e0       	ldi	r24, 0x0C	; 12
    65e8:	01 c0       	rjmp	.+2      	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65ea:	81 e0       	ldi	r24, 0x01	; 1
    65ec:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    65f0:	8f e1       	ldi	r24, 0x1F	; 31
    65f2:	08 95       	ret
    65f4:	83 e0       	ldi	r24, 0x03	; 3
    65f6:	fa cf       	rjmp	.-12     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65f8:	85 e0       	ldi	r24, 0x05	; 5
    65fa:	f8 cf       	rjmp	.-16     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65fc:	87 e0       	ldi	r24, 0x07	; 7
    65fe:	f6 cf       	rjmp	.-20     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6600:	88 e0       	ldi	r24, 0x08	; 8
    6602:	f4 cf       	rjmp	.-24     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6604:	8a e0       	ldi	r24, 0x0A	; 10
    6606:	f2 cf       	rjmp	.-28     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6608:	91 30       	cpi	r25, 0x01	; 1
    660a:	99 f4       	brne	.+38     	; 0x6632 <_Z24Return_Previous_Day_Datev+0x8a>
    660c:	27 30       	cpi	r18, 0x07	; 7
    660e:	59 f0       	breq	.+22     	; 0x6626 <_Z24Return_Previous_Day_Datev+0x7e>
    6610:	20 f4       	brcc	.+8      	; 0x661a <_Z24Return_Previous_Day_Datev+0x72>
    6612:	25 30       	cpi	r18, 0x05	; 5
    6614:	41 f5       	brne	.+80     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6616:	84 e0       	ldi	r24, 0x04	; 4
    6618:	09 c0       	rjmp	.+18     	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    661a:	2a 30       	cpi	r18, 0x0A	; 10
    661c:	31 f0       	breq	.+12     	; 0x662a <_Z24Return_Previous_Day_Datev+0x82>
    661e:	2c 30       	cpi	r18, 0x0C	; 12
    6620:	11 f5       	brne	.+68     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6622:	8b e0       	ldi	r24, 0x0B	; 11
    6624:	03 c0       	rjmp	.+6      	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    6626:	86 e0       	ldi	r24, 0x06	; 6
    6628:	01 c0       	rjmp	.+2      	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    662a:	89 e0       	ldi	r24, 0x09	; 9
    662c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6630:	1a c0       	rjmp	.+52     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6632:	20 93 2b 09 	sts	0x092B, r18	; 0x80092b <_sSchedules+0xd>
    6636:	13 c0       	rjmp	.+38     	; 0x665e <_Z24Return_Previous_Day_Datev+0xb6>
    6638:	91 30       	cpi	r25, 0x01	; 1
    663a:	71 f4       	brne	.+28     	; 0x6658 <_Z24Return_Previous_Day_Datev+0xb0>
    663c:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    6640:	83 70       	andi	r24, 0x03	; 3
    6642:	29 f0       	breq	.+10     	; 0x664e <_Z24Return_Previous_Day_Datev+0xa6>
    6644:	82 e0       	ldi	r24, 0x02	; 2
    6646:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    664a:	8c e1       	ldi	r24, 0x1C	; 28
    664c:	08 95       	ret
    664e:	82 e0       	ldi	r24, 0x02	; 2
    6650:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6654:	8d e1       	ldi	r24, 0x1D	; 29
    6656:	08 95       	ret
    6658:	83 e0       	ldi	r24, 0x03	; 3
    665a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    665e:	8f ef       	ldi	r24, 0xFF	; 255
    6660:	89 0f       	add	r24, r25
    6662:	08 95       	ret
    6664:	08 95       	ret
    6666:	8e e1       	ldi	r24, 0x1E	; 30
    6668:	08 95       	ret

0000666a <_Z15Delete_Scheduleh>:
    666a:	88 23       	and	r24, r24
    666c:	a9 f1       	breq	.+106    	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    666e:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    6672:	33 23       	and	r19, r19
    6674:	89 f1       	breq	.+98     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    6676:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    667a:	83 13       	cpse	r24, r19
    667c:	2d c0       	rjmp	.+90     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    667e:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
    6682:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
    6686:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    668a:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
    668e:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    6692:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    6696:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    669a:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    669e:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    66a2:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
    66a6:	23 30       	cpi	r18, 0x03	; 3
    66a8:	51 f0       	breq	.+20     	; 0x66be <_Z15Delete_Scheduleh+0x54>
    66aa:	e2 2f       	mov	r30, r18
    66ac:	f0 e0       	ldi	r31, 0x00	; 0
    66ae:	ee 0f       	add	r30, r30
    66b0:	ff 1f       	adc	r31, r31
    66b2:	ee 57       	subi	r30, 0x7E	; 126
    66b4:	f4 4f       	sbci	r31, 0xF4	; 244
    66b6:	11 82       	std	Z+1, r1	; 0x01
    66b8:	10 82       	st	Z, r1
    66ba:	2f 5f       	subi	r18, 0xFF	; 255
    66bc:	f4 cf       	rjmp	.-24     	; 0x66a6 <_Z15Delete_Scheduleh+0x3c>
    66be:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    66c2:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    66c6:	93 30       	cpi	r25, 0x03	; 3
    66c8:	39 f0       	breq	.+14     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    66ca:	e9 2f       	mov	r30, r25
    66cc:	f0 e0       	ldi	r31, 0x00	; 0
    66ce:	e2 58       	subi	r30, 0x82	; 130
    66d0:	f4 4f       	sbci	r31, 0xF4	; 244
    66d2:	10 82       	st	Z, r1
    66d4:	9f 5f       	subi	r25, 0xFF	; 255
    66d6:	f7 cf       	rjmp	.-18     	; 0x66c6 <_Z15Delete_Scheduleh+0x5c>
    66d8:	08 95       	ret

000066da <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    66da:	ff 92       	push	r15
    66dc:	0f 93       	push	r16
    66de:	1f 93       	push	r17
    66e0:	cf 93       	push	r28
    66e2:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    66e4:	f0 90 f4 13 	lds	r15, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Irrigating_Date == 0)
    66e8:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    66ec:	81 11       	cpse	r24, r1
    66ee:	20 c0       	rjmp	.+64     	; 0x6730 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    66f0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    66f4:	81 30       	cpi	r24, 0x01	; 1
    66f6:	51 f4       	brne	.+20     	; 0x670c <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    66f8:	63 e8       	ldi	r22, 0x83	; 131
    66fa:	7d e1       	ldi	r23, 0x1D	; 29
    66fc:	86 ec       	ldi	r24, 0xC6	; 198
    66fe:	94 e1       	ldi	r25, 0x14	; 20
    6700:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    6704:	86 ec       	ldi	r24, 0xC6	; 198
    6706:	94 e1       	ldi	r25, 0x14	; 20
    6708:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    670c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    6710:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6714:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    6718:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    671c:	00 91 28 09 	lds	r16, 0x0928	; 0x800928 <_sSchedules+0xa>
    6720:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    6724:	10 e0       	ldi	r17, 0x00	; 0
    6726:	90 e0       	ldi	r25, 0x00	; 0
    6728:	01 96       	adiw	r24, 0x01	; 1
    672a:	08 1b       	sub	r16, r24
    672c:	19 0b       	sbc	r17, r25
    672e:	13 c0       	rjmp	.+38     	; 0x6756 <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    6730:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    6734:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    6738:	10 e0       	ldi	r17, 0x00	; 0
    673a:	90 e0       	ldi	r25, 0x00	; 0
    673c:	01 96       	adiw	r24, 0x01	; 1
    673e:	08 1b       	sub	r16, r24
    6740:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    6742:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    6746:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    674a:	91 11       	cpse	r25, r1
    674c:	02 c0       	rjmp	.+4      	; 0x6752 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    674e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6752:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6756:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    675a:	81 30       	cpi	r24, 0x01	; 1
    675c:	89 f4       	brne	.+34     	; 0x6780 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    675e:	66 e7       	ldi	r22, 0x76	; 118
    6760:	7d e1       	ldi	r23, 0x1D	; 29
    6762:	86 ec       	ldi	r24, 0xC6	; 198
    6764:	94 e1       	ldi	r25, 0x14	; 20
    6766:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    676a:	4a e0       	ldi	r20, 0x0A	; 10
    676c:	50 e0       	ldi	r21, 0x00	; 0
    676e:	b8 01       	movw	r22, r16
    6770:	86 ec       	ldi	r24, 0xC6	; 198
    6772:	94 e1       	ldi	r25, 0x14	; 20
    6774:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    6778:	86 ec       	ldi	r24, 0xC6	; 198
    677a:	94 e1       	ldi	r25, 0x14	; 20
    677c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    6780:	10 16       	cp	r1, r16
    6782:	11 06       	cpc	r1, r17
    6784:	24 f4       	brge	.+8      	; 0x678e <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    6786:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    6788:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    678c:	71 c0       	rjmp	.+226    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    678e:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6792:	8e 2f       	mov	r24, r30
    6794:	90 e0       	ldi	r25, 0x00	; 0
    6796:	fc 01       	movw	r30, r24
    6798:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    679a:	01 15       	cp	r16, r1
    679c:	11 05       	cpc	r17, r1
    679e:	49 f5       	brne	.+82     	; 0x67f2 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    67a0:	ec 30       	cpi	r30, 0x0C	; 12
    67a2:	f1 05       	cpc	r31, r1
    67a4:	08 f0       	brcs	.+2      	; 0x67a8 <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    67a6:	64 c0       	rjmp	.+200    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    67a8:	88 27       	eor	r24, r24
    67aa:	e7 57       	subi	r30, 0x77	; 119
    67ac:	ff 4f       	sbci	r31, 0xFF	; 255
    67ae:	8f 4f       	sbci	r24, 0xFF	; 255
    67b0:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    67b4:	cc e0       	ldi	r28, 0x0C	; 12
    67b6:	18 c0       	rjmp	.+48     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    67b8:	c1 e0       	ldi	r28, 0x01	; 1
    67ba:	16 c0       	rjmp	.+44     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    67bc:	8f 2d       	mov	r24, r15
    67be:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    67c0:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    67c2:	09 f0       	breq	.+2      	; 0x67c6 <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    67c4:	54 c0       	rjmp	.+168    	; 0x686e <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    67c6:	dd e1       	ldi	r29, 0x1D	; 29
    67c8:	53 c0       	rjmp	.+166    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    67ca:	c3 e0       	ldi	r28, 0x03	; 3
    67cc:	0d c0       	rjmp	.+26     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    67ce:	c4 e0       	ldi	r28, 0x04	; 4
    67d0:	0e c0       	rjmp	.+28     	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    67d2:	c5 e0       	ldi	r28, 0x05	; 5
    67d4:	09 c0       	rjmp	.+18     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    67d6:	c6 e0       	ldi	r28, 0x06	; 6
    67d8:	0a c0       	rjmp	.+20     	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    67da:	c7 e0       	ldi	r28, 0x07	; 7
    67dc:	05 c0       	rjmp	.+10     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    67de:	c8 e0       	ldi	r28, 0x08	; 8
    67e0:	03 c0       	rjmp	.+6      	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    67e2:	c9 e0       	ldi	r28, 0x09	; 9
    67e4:	04 c0       	rjmp	.+8      	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    67e6:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    67e8:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    67ea:	42 c0       	rjmp	.+132    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    67ec:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    67ee:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    67f0:	3f c0       	rjmp	.+126    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    67f2:	ec 30       	cpi	r30, 0x0C	; 12
    67f4:	f1 05       	cpc	r31, r1
    67f6:	e0 f5       	brcc	.+120    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    67f8:	88 27       	eor	r24, r24
    67fa:	eb 56       	subi	r30, 0x6B	; 107
    67fc:	ff 4f       	sbci	r31, 0xFF	; 255
    67fe:	8f 4f       	sbci	r24, 0xFF	; 255
    6800:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    6804:	df e1       	ldi	r29, 0x1F	; 31
    6806:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    6808:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    680a:	32 c0       	rjmp	.+100    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    680c:	df e1       	ldi	r29, 0x1F	; 31
    680e:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    6810:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    6812:	2e c0       	rjmp	.+92     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    6814:	8f 2d       	mov	r24, r15
    6816:	83 70       	andi	r24, 0x03	; 3
    6818:	11 f0       	breq	.+4      	; 0x681e <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    681a:	dc e1       	ldi	r29, 0x1C	; 28
    681c:	01 c0       	rjmp	.+2      	; 0x6820 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    681e:	dd e1       	ldi	r29, 0x1D	; 29
    6820:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    6822:	c2 e0       	ldi	r28, 0x02	; 2
    6824:	25 c0       	rjmp	.+74     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    6826:	df e1       	ldi	r29, 0x1F	; 31
    6828:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    682a:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    682c:	21 c0       	rjmp	.+66     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    682e:	de e1       	ldi	r29, 0x1E	; 30
    6830:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    6832:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    6834:	1d c0       	rjmp	.+58     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    6836:	df e1       	ldi	r29, 0x1F	; 31
    6838:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    683a:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    683c:	19 c0       	rjmp	.+50     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    683e:	de e1       	ldi	r29, 0x1E	; 30
    6840:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    6842:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    6844:	15 c0       	rjmp	.+42     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    6846:	df e1       	ldi	r29, 0x1F	; 31
    6848:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    684a:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    684c:	11 c0       	rjmp	.+34     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    684e:	df e1       	ldi	r29, 0x1F	; 31
    6850:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    6852:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    6854:	0d c0       	rjmp	.+26     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    6856:	de e1       	ldi	r29, 0x1E	; 30
    6858:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    685a:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    685c:	09 c0       	rjmp	.+18     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    685e:	df e1       	ldi	r29, 0x1F	; 31
    6860:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    6862:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    6864:	05 c0       	rjmp	.+10     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    6866:	de e1       	ldi	r29, 0x1E	; 30
    6868:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    686a:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    686c:	01 c0       	rjmp	.+2      	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    686e:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6870:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6874:	81 30       	cpi	r24, 0x01	; 1
    6876:	51 f4       	brne	.+20     	; 0x688c <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    6878:	6d e5       	ldi	r22, 0x5D	; 93
    687a:	7d e1       	ldi	r23, 0x1D	; 29
    687c:	86 ec       	ldi	r24, 0xC6	; 198
    687e:	94 e1       	ldi	r25, 0x14	; 20
    6880:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6884:	86 ec       	ldi	r24, 0xC6	; 198
    6886:	94 e1       	ldi	r25, 0x14	; 20
    6888:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    688c:	d0 93 ec 0b 	sts	0x0BEC, r29	; 0x800bec <_sSchedules+0x2ce>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6890:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6894:	81 30       	cpi	r24, 0x01	; 1
    6896:	91 f4       	brne	.+36     	; 0x68bc <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    6898:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    689c:	4a e0       	ldi	r20, 0x0A	; 10
    689e:	50 e0       	ldi	r21, 0x00	; 0
    68a0:	86 ec       	ldi	r24, 0xC6	; 198
    68a2:	94 e1       	ldi	r25, 0x14	; 20
    68a4:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    68a8:	63 e4       	ldi	r22, 0x43	; 67
    68aa:	7d e1       	ldi	r23, 0x1D	; 29
    68ac:	86 ec       	ldi	r24, 0xC6	; 198
    68ae:	94 e1       	ldi	r25, 0x14	; 20
    68b0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    68b4:	86 ec       	ldi	r24, 0xC6	; 198
    68b6:	94 e1       	ldi	r25, 0x14	; 20
    68b8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    68bc:	c0 93 ed 0b 	sts	0x0BED, r28	; 0x800bed <_sSchedules+0x2cf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    68c0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    68c4:	81 30       	cpi	r24, 0x01	; 1
    68c6:	61 f4       	brne	.+24     	; 0x68e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    68c8:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    68cc:	4a e0       	ldi	r20, 0x0A	; 10
    68ce:	50 e0       	ldi	r21, 0x00	; 0
    68d0:	86 ec       	ldi	r24, 0xC6	; 198
    68d2:	94 e1       	ldi	r25, 0x14	; 20
    68d4:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    68d8:	86 ec       	ldi	r24, 0xC6	; 198
    68da:	94 e1       	ldi	r25, 0x14	; 20
    68dc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
}
    68e0:	df 91       	pop	r29
    68e2:	cf 91       	pop	r28
    68e4:	1f 91       	pop	r17
    68e6:	0f 91       	pop	r16
    68e8:	ff 90       	pop	r15
    68ea:	08 95       	ret

000068ec <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    68ec:	bf 92       	push	r11
    68ee:	cf 92       	push	r12
    68f0:	df 92       	push	r13
    68f2:	ef 92       	push	r14
    68f4:	ff 92       	push	r15
    68f6:	0f 93       	push	r16
    68f8:	1f 93       	push	r17
    68fa:	cf 93       	push	r28
    68fc:	df 93       	push	r29
    68fe:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    6900:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
	month = _sRuble_Parameters.Update_Local_Date[1];
    6904:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6908:	b0 90 f4 13 	lds	r11, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    690c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6910:	81 30       	cpi	r24, 0x01	; 1
    6912:	09 f0       	breq	.+2      	; 0x6916 <_Z22Day_In_Bet_Schedullingh+0x2a>
    6914:	5a c0       	rjmp	.+180    	; 0x69ca <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    6916:	6b e3       	ldi	r22, 0x3B	; 59
    6918:	7d e1       	ldi	r23, 0x1D	; 29
    691a:	86 ec       	ldi	r24, 0xC6	; 198
    691c:	94 e1       	ldi	r25, 0x14	; 20
    691e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    6922:	4a e0       	ldi	r20, 0x0A	; 10
    6924:	50 e0       	ldi	r21, 0x00	; 0
    6926:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    692a:	86 ec       	ldi	r24, 0xC6	; 198
    692c:	94 e1       	ldi	r25, 0x14	; 20
    692e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6932:	86 ec       	ldi	r24, 0xC6	; 198
    6934:	94 e1       	ldi	r25, 0x14	; 20
    6936:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    693a:	62 e3       	ldi	r22, 0x32	; 50
    693c:	7d e1       	ldi	r23, 0x1D	; 29
    693e:	86 ec       	ldi	r24, 0xC6	; 198
    6940:	94 e1       	ldi	r25, 0x14	; 20
    6942:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    6946:	4a e0       	ldi	r20, 0x0A	; 10
    6948:	50 e0       	ldi	r21, 0x00	; 0
    694a:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    694e:	86 ec       	ldi	r24, 0xC6	; 198
    6950:	94 e1       	ldi	r25, 0x14	; 20
    6952:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6956:	86 ec       	ldi	r24, 0xC6	; 198
    6958:	94 e1       	ldi	r25, 0x14	; 20
    695a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    695e:	6a e2       	ldi	r22, 0x2A	; 42
    6960:	7d e1       	ldi	r23, 0x1D	; 29
    6962:	86 ec       	ldi	r24, 0xC6	; 198
    6964:	94 e1       	ldi	r25, 0x14	; 20
    6966:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    696a:	4a e0       	ldi	r20, 0x0A	; 10
    696c:	50 e0       	ldi	r21, 0x00	; 0
    696e:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    6972:	86 ec       	ldi	r24, 0xC6	; 198
    6974:	94 e1       	ldi	r25, 0x14	; 20
    6976:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    697a:	86 ec       	ldi	r24, 0xC6	; 198
    697c:	94 e1       	ldi	r25, 0x14	; 20
    697e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    6982:	67 e1       	ldi	r22, 0x17	; 23
    6984:	7d e1       	ldi	r23, 0x1D	; 29
    6986:	86 ec       	ldi	r24, 0xC6	; 198
    6988:	94 e1       	ldi	r25, 0x14	; 20
    698a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    698e:	60 91 28 09 	lds	r22, 0x0928	; 0x800928 <_sSchedules+0xa>
    6992:	4a e0       	ldi	r20, 0x0A	; 10
    6994:	50 e0       	ldi	r21, 0x00	; 0
    6996:	86 ec       	ldi	r24, 0xC6	; 198
    6998:	94 e1       	ldi	r25, 0x14	; 20
    699a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    699e:	86 ec       	ldi	r24, 0xC6	; 198
    69a0:	94 e1       	ldi	r25, 0x14	; 20
    69a2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    69a6:	63 e0       	ldi	r22, 0x03	; 3
    69a8:	7d e1       	ldi	r23, 0x1D	; 29
    69aa:	86 ec       	ldi	r24, 0xC6	; 198
    69ac:	94 e1       	ldi	r25, 0x14	; 20
    69ae:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    69b2:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <_sSchedules+0xb>
    69b6:	4a e0       	ldi	r20, 0x0A	; 10
    69b8:	50 e0       	ldi	r21, 0x00	; 0
    69ba:	86 ec       	ldi	r24, 0xC6	; 198
    69bc:	94 e1       	ldi	r25, 0x14	; 20
    69be:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    69c2:	86 ec       	ldi	r24, 0xC6	; 198
    69c4:	94 e1       	ldi	r25, 0x14	; 20
    69c6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    69ca:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    69ce:	cc 24       	eor	r12, r12
    69d0:	c3 94       	inc	r12
    69d2:	ce 0c       	add	r12, r14
    69d4:	d1 2c       	mov	r13, r1
    69d6:	10 e0       	ldi	r17, 0x00	; 0
    69d8:	96 01       	movw	r18, r12
    69da:	28 0f       	add	r18, r24
    69dc:	31 1d       	adc	r19, r1
    69de:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    69e2:	02 17       	cp	r16, r18
    69e4:	13 07       	cpc	r17, r19
    69e6:	0c f4       	brge	.+2      	; 0x69ea <_Z22Day_In_Bet_Schedullingh+0xfe>
    69e8:	44 c0       	rjmp	.+136    	; 0x6a72 <_Z22Day_In_Bet_Schedullingh+0x186>
    69ea:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    69ee:	d8 13       	cpse	r29, r24
    69f0:	40 c0       	rjmp	.+128    	; 0x6a72 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    69f2:	91 30       	cpi	r25, 0x01	; 1
    69f4:	d9 f5       	brne	.+118    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    69f6:	66 ef       	ldi	r22, 0xF6	; 246
    69f8:	7c e1       	ldi	r23, 0x1C	; 28
    69fa:	1f c0       	rjmp	.+62     	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    69fc:	91 30       	cpi	r25, 0x01	; 1
    69fe:	51 f4       	brne	.+20     	; 0x6a14 <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a00:	69 ee       	ldi	r22, 0xE9	; 233
    6a02:	7c e1       	ldi	r23, 0x1C	; 28
    6a04:	86 ec       	ldi	r24, 0xC6	; 198
    6a06:	94 e1       	ldi	r25, 0x14	; 20
    6a08:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a0c:	86 ec       	ldi	r24, 0xC6	; 198
    6a0e:	94 e1       	ldi	r25, 0x14	; 20
    6a10:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a14:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6a18:	d1 30       	cpi	r29, 0x01	; 1
    6a1a:	41 f5       	brne	.+80     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a1c:	8f e1       	ldi	r24, 0x1F	; 31
    6a1e:	89 1b       	sub	r24, r25
    6a20:	98 01       	movw	r18, r16
    6a22:	28 0f       	add	r18, r24
    6a24:	31 1d       	adc	r19, r1
    6a26:	2c 15       	cp	r18, r12
    6a28:	3d 05       	cpc	r19, r13
    6a2a:	0c f4       	brge	.+2      	; 0x6a2e <_Z22Day_In_Bet_Schedullingh+0x142>
    6a2c:	bb c1       	rjmp	.+886    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6a32:	81 30       	cpi	r24, 0x01	; 1
    6a34:	d9 f4       	brne	.+54     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a36:	6c ed       	ldi	r22, 0xDC	; 220
    6a38:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6a3a:	86 ec       	ldi	r24, 0xC6	; 198
    6a3c:	94 e1       	ldi	r25, 0x14	; 20
    6a3e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6a42:	86 ec       	ldi	r24, 0xC6	; 198
    6a44:	94 e1       	ldi	r25, 0x14	; 20
    6a46:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    6a4a:	10 c0       	rjmp	.+32     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a4c:	91 30       	cpi	r25, 0x01	; 1
    6a4e:	51 f4       	brne	.+20     	; 0x6a64 <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a50:	6f ec       	ldi	r22, 0xCF	; 207
    6a52:	7c e1       	ldi	r23, 0x1C	; 28
    6a54:	86 ec       	ldi	r24, 0xC6	; 198
    6a56:	94 e1       	ldi	r25, 0x14	; 20
    6a58:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a5c:	86 ec       	ldi	r24, 0xC6	; 198
    6a5e:	94 e1       	ldi	r25, 0x14	; 20
    6a60:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a64:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6a68:	d2 30       	cpi	r29, 0x02	; 2
    6a6a:	c1 f0       	breq	.+48     	; 0x6a9c <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    6a6c:	c2 e0       	ldi	r28, 0x02	; 2
    6a6e:	8c 2f       	mov	r24, r28
    6a70:	a9 c3       	rjmp	.+1874   	; 0x71c4 <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6a72:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a76:	d8 17       	cp	r29, r24
    6a78:	09 f4       	brne	.+2      	; 0x6a7c <_Z22Day_In_Bet_Schedullingh+0x190>
    6a7a:	9b c1       	rjmp	.+822    	; 0x6db2 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    6a7c:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a80:	4c 2f       	mov	r20, r28
    6a82:	50 e0       	ldi	r21, 0x00	; 0
    6a84:	fa 01       	movw	r30, r20
    6a86:	31 97       	sbiw	r30, 0x01	; 1
    6a88:	ec 30       	cpi	r30, 0x0C	; 12
    6a8a:	f1 05       	cpc	r31, r1
    6a8c:	08 f0       	brcs	.+2      	; 0x6a90 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    6a8e:	8a c1       	rjmp	.+788    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6a90:	88 27       	eor	r24, r24
    6a92:	ef 55       	subi	r30, 0x5F	; 95
    6a94:	ff 4f       	sbci	r31, 0xFF	; 255
    6a96:	8f 4f       	sbci	r24, 0xFF	; 255
    6a98:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a9c:	8f e1       	ldi	r24, 0x1F	; 31
    6a9e:	89 1b       	sub	r24, r25
    6aa0:	98 01       	movw	r18, r16
    6aa2:	28 0f       	add	r18, r24
    6aa4:	31 1d       	adc	r19, r1
    6aa6:	2c 15       	cp	r18, r12
    6aa8:	3d 05       	cpc	r19, r13
    6aaa:	0c f4       	brge	.+2      	; 0x6aae <_Z22Day_In_Bet_Schedullingh+0x1c2>
    6aac:	7b c1       	rjmp	.+758    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ab2:	81 30       	cpi	r24, 0x01	; 1
    6ab4:	d9 f6       	brne	.-74     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ab6:	62 ec       	ldi	r22, 0xC2	; 194
    6ab8:	7c e1       	ldi	r23, 0x1C	; 28
    6aba:	bf cf       	rjmp	.-130    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6abc:	91 30       	cpi	r25, 0x01	; 1
    6abe:	51 f4       	brne	.+20     	; 0x6ad4 <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ac0:	65 eb       	ldi	r22, 0xB5	; 181
    6ac2:	7c e1       	ldi	r23, 0x1C	; 28
    6ac4:	86 ec       	ldi	r24, 0xC6	; 198
    6ac6:	94 e1       	ldi	r25, 0x14	; 20
    6ac8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6acc:	86 ec       	ldi	r24, 0xC6	; 198
    6ace:	94 e1       	ldi	r25, 0x14	; 20
    6ad0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ad4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6ad8:	d4 30       	cpi	r29, 0x04	; 4
    6ada:	41 f6       	brne	.-112    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6adc:	8f e1       	ldi	r24, 0x1F	; 31
    6ade:	89 1b       	sub	r24, r25
    6ae0:	98 01       	movw	r18, r16
    6ae2:	28 0f       	add	r18, r24
    6ae4:	31 1d       	adc	r19, r1
    6ae6:	2c 15       	cp	r18, r12
    6ae8:	3d 05       	cpc	r19, r13
    6aea:	0c f4       	brge	.+2      	; 0x6aee <_Z22Day_In_Bet_Schedullingh+0x202>
    6aec:	5b c1       	rjmp	.+694    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6af2:	81 30       	cpi	r24, 0x01	; 1
    6af4:	09 f0       	breq	.+2      	; 0x6af8 <_Z22Day_In_Bet_Schedullingh+0x20c>
    6af6:	ba cf       	rjmp	.-140    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6af8:	68 ea       	ldi	r22, 0xA8	; 168
    6afa:	7c e1       	ldi	r23, 0x1C	; 28
    6afc:	9e cf       	rjmp	.-196    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6afe:	91 30       	cpi	r25, 0x01	; 1
    6b00:	51 f4       	brne	.+20     	; 0x6b16 <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b02:	6b e9       	ldi	r22, 0x9B	; 155
    6b04:	7c e1       	ldi	r23, 0x1C	; 28
    6b06:	86 ec       	ldi	r24, 0xC6	; 198
    6b08:	94 e1       	ldi	r25, 0x14	; 20
    6b0a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b0e:	86 ec       	ldi	r24, 0xC6	; 198
    6b10:	94 e1       	ldi	r25, 0x14	; 20
    6b12:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b16:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6b1a:	d6 30       	cpi	r29, 0x06	; 6
    6b1c:	09 f0       	breq	.+2      	; 0x6b20 <_Z22Day_In_Bet_Schedullingh+0x234>
    6b1e:	a6 cf       	rjmp	.-180    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b20:	8f e1       	ldi	r24, 0x1F	; 31
    6b22:	89 1b       	sub	r24, r25
    6b24:	98 01       	movw	r18, r16
    6b26:	28 0f       	add	r18, r24
    6b28:	31 1d       	adc	r19, r1
    6b2a:	2c 15       	cp	r18, r12
    6b2c:	3d 05       	cpc	r19, r13
    6b2e:	0c f4       	brge	.+2      	; 0x6b32 <_Z22Day_In_Bet_Schedullingh+0x246>
    6b30:	39 c1       	rjmp	.+626    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b36:	81 30       	cpi	r24, 0x01	; 1
    6b38:	09 f0       	breq	.+2      	; 0x6b3c <_Z22Day_In_Bet_Schedullingh+0x250>
    6b3a:	98 cf       	rjmp	.-208    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b3c:	6e e8       	ldi	r22, 0x8E	; 142
    6b3e:	7c e1       	ldi	r23, 0x1C	; 28
    6b40:	7c cf       	rjmp	.-264    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b42:	91 30       	cpi	r25, 0x01	; 1
    6b44:	51 f4       	brne	.+20     	; 0x6b5a <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b46:	61 e8       	ldi	r22, 0x81	; 129
    6b48:	7c e1       	ldi	r23, 0x1C	; 28
    6b4a:	86 ec       	ldi	r24, 0xC6	; 198
    6b4c:	94 e1       	ldi	r25, 0x14	; 20
    6b4e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b52:	86 ec       	ldi	r24, 0xC6	; 198
    6b54:	94 e1       	ldi	r25, 0x14	; 20
    6b56:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b5a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6b5e:	d8 30       	cpi	r29, 0x08	; 8
    6b60:	09 f0       	breq	.+2      	; 0x6b64 <_Z22Day_In_Bet_Schedullingh+0x278>
    6b62:	84 cf       	rjmp	.-248    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b64:	8f e1       	ldi	r24, 0x1F	; 31
    6b66:	89 1b       	sub	r24, r25
    6b68:	98 01       	movw	r18, r16
    6b6a:	28 0f       	add	r18, r24
    6b6c:	31 1d       	adc	r19, r1
    6b6e:	2c 15       	cp	r18, r12
    6b70:	3d 05       	cpc	r19, r13
    6b72:	0c f4       	brge	.+2      	; 0x6b76 <_Z22Day_In_Bet_Schedullingh+0x28a>
    6b74:	17 c1       	rjmp	.+558    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b76:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b7a:	81 30       	cpi	r24, 0x01	; 1
    6b7c:	09 f0       	breq	.+2      	; 0x6b80 <_Z22Day_In_Bet_Schedullingh+0x294>
    6b7e:	76 cf       	rjmp	.-276    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b80:	64 e7       	ldi	r22, 0x74	; 116
    6b82:	7c e1       	ldi	r23, 0x1C	; 28
    6b84:	5a cf       	rjmp	.-332    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b86:	91 30       	cpi	r25, 0x01	; 1
    6b88:	51 f4       	brne	.+20     	; 0x6b9e <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b8a:	67 e6       	ldi	r22, 0x67	; 103
    6b8c:	7c e1       	ldi	r23, 0x1C	; 28
    6b8e:	86 ec       	ldi	r24, 0xC6	; 198
    6b90:	94 e1       	ldi	r25, 0x14	; 20
    6b92:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b96:	86 ec       	ldi	r24, 0xC6	; 198
    6b98:	94 e1       	ldi	r25, 0x14	; 20
    6b9a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b9e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6ba2:	d9 30       	cpi	r29, 0x09	; 9
    6ba4:	09 f0       	breq	.+2      	; 0x6ba8 <_Z22Day_In_Bet_Schedullingh+0x2bc>
    6ba6:	62 cf       	rjmp	.-316    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ba8:	8f e1       	ldi	r24, 0x1F	; 31
    6baa:	89 1b       	sub	r24, r25
    6bac:	98 01       	movw	r18, r16
    6bae:	28 0f       	add	r18, r24
    6bb0:	31 1d       	adc	r19, r1
    6bb2:	2c 15       	cp	r18, r12
    6bb4:	3d 05       	cpc	r19, r13
    6bb6:	0c f4       	brge	.+2      	; 0x6bba <_Z22Day_In_Bet_Schedullingh+0x2ce>
    6bb8:	f5 c0       	rjmp	.+490    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bba:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6bbe:	81 30       	cpi	r24, 0x01	; 1
    6bc0:	09 f0       	breq	.+2      	; 0x6bc4 <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6bc2:	54 cf       	rjmp	.-344    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6bc4:	6a e5       	ldi	r22, 0x5A	; 90
    6bc6:	7c e1       	ldi	r23, 0x1C	; 28
    6bc8:	38 cf       	rjmp	.-400    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bca:	91 30       	cpi	r25, 0x01	; 1
    6bcc:	51 f4       	brne	.+20     	; 0x6be2 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6bce:	6d e4       	ldi	r22, 0x4D	; 77
    6bd0:	7c e1       	ldi	r23, 0x1C	; 28
    6bd2:	86 ec       	ldi	r24, 0xC6	; 198
    6bd4:	94 e1       	ldi	r25, 0x14	; 20
    6bd6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6bda:	86 ec       	ldi	r24, 0xC6	; 198
    6bdc:	94 e1       	ldi	r25, 0x14	; 20
    6bde:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6be2:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6be6:	db 30       	cpi	r29, 0x0B	; 11
    6be8:	09 f0       	breq	.+2      	; 0x6bec <_Z22Day_In_Bet_Schedullingh+0x300>
    6bea:	40 cf       	rjmp	.-384    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6bec:	8f e1       	ldi	r24, 0x1F	; 31
    6bee:	89 1b       	sub	r24, r25
    6bf0:	98 01       	movw	r18, r16
    6bf2:	28 0f       	add	r18, r24
    6bf4:	31 1d       	adc	r19, r1
    6bf6:	2c 15       	cp	r18, r12
    6bf8:	3d 05       	cpc	r19, r13
    6bfa:	0c f4       	brge	.+2      	; 0x6bfe <_Z22Day_In_Bet_Schedullingh+0x312>
    6bfc:	d3 c0       	rjmp	.+422    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bfe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c02:	81 30       	cpi	r24, 0x01	; 1
    6c04:	09 f0       	breq	.+2      	; 0x6c08 <_Z22Day_In_Bet_Schedullingh+0x31c>
    6c06:	32 cf       	rjmp	.-412    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c08:	60 e4       	ldi	r22, 0x40	; 64
    6c0a:	7c e1       	ldi	r23, 0x1C	; 28
    6c0c:	16 cf       	rjmp	.-468    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6c0e:	8b 2d       	mov	r24, r11
    6c10:	83 70       	andi	r24, 0x03	; 3
    6c12:	11 f1       	breq	.+68     	; 0x6c58 <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c14:	91 30       	cpi	r25, 0x01	; 1
    6c16:	51 f4       	brne	.+20     	; 0x6c2c <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6c18:	63 e3       	ldi	r22, 0x33	; 51
    6c1a:	7c e1       	ldi	r23, 0x1C	; 28
    6c1c:	86 ec       	ldi	r24, 0xC6	; 198
    6c1e:	94 e1       	ldi	r25, 0x14	; 20
    6c20:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6c24:	86 ec       	ldi	r24, 0xC6	; 198
    6c26:	94 e1       	ldi	r25, 0x14	; 20
    6c28:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6c2c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6c30:	d3 30       	cpi	r29, 0x03	; 3
    6c32:	09 f0       	breq	.+2      	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x34a>
    6c34:	b7 c0       	rjmp	.+366    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6c36:	8c e1       	ldi	r24, 0x1C	; 28
    6c38:	89 1b       	sub	r24, r25
    6c3a:	98 01       	movw	r18, r16
    6c3c:	28 0f       	add	r18, r24
    6c3e:	31 1d       	adc	r19, r1
    6c40:	2c 15       	cp	r18, r12
    6c42:	3d 05       	cpc	r19, r13
    6c44:	0c f4       	brge	.+2      	; 0x6c48 <_Z22Day_In_Bet_Schedullingh+0x35c>
    6c46:	ae c0       	rjmp	.+348    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c48:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c4c:	81 30       	cpi	r24, 0x01	; 1
    6c4e:	09 f0       	breq	.+2      	; 0x6c52 <_Z22Day_In_Bet_Schedullingh+0x366>
    6c50:	0d cf       	rjmp	.-486    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6c52:	66 e2       	ldi	r22, 0x26	; 38
    6c54:	7c e1       	ldi	r23, 0x1C	; 28
    6c56:	cc c0       	rjmp	.+408    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c58:	91 30       	cpi	r25, 0x01	; 1
    6c5a:	51 f4       	brne	.+20     	; 0x6c70 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6c5c:	69 e1       	ldi	r22, 0x19	; 25
    6c5e:	7c e1       	ldi	r23, 0x1C	; 28
    6c60:	86 ec       	ldi	r24, 0xC6	; 198
    6c62:	94 e1       	ldi	r25, 0x14	; 20
    6c64:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6c68:	86 ec       	ldi	r24, 0xC6	; 198
    6c6a:	94 e1       	ldi	r25, 0x14	; 20
    6c6c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6c70:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6c74:	d3 30       	cpi	r29, 0x03	; 3
    6c76:	09 f0       	breq	.+2      	; 0x6c7a <_Z22Day_In_Bet_Schedullingh+0x38e>
    6c78:	f9 ce       	rjmp	.-526    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6c7a:	8d e1       	ldi	r24, 0x1D	; 29
    6c7c:	89 1b       	sub	r24, r25
    6c7e:	98 01       	movw	r18, r16
    6c80:	28 0f       	add	r18, r24
    6c82:	31 1d       	adc	r19, r1
    6c84:	2c 15       	cp	r18, r12
    6c86:	3d 05       	cpc	r19, r13
    6c88:	0c f4       	brge	.+2      	; 0x6c8c <_Z22Day_In_Bet_Schedullingh+0x3a0>
    6c8a:	8c c0       	rjmp	.+280    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c8c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c90:	81 30       	cpi	r24, 0x01	; 1
    6c92:	09 f0       	breq	.+2      	; 0x6c96 <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6c94:	eb ce       	rjmp	.-554    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6c96:	6c e0       	ldi	r22, 0x0C	; 12
    6c98:	7c e1       	ldi	r23, 0x1C	; 28
    6c9a:	aa c0       	rjmp	.+340    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c9c:	91 30       	cpi	r25, 0x01	; 1
    6c9e:	51 f4       	brne	.+20     	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ca0:	6f ef       	ldi	r22, 0xFF	; 255
    6ca2:	7b e1       	ldi	r23, 0x1B	; 27
    6ca4:	86 ec       	ldi	r24, 0xC6	; 198
    6ca6:	94 e1       	ldi	r25, 0x14	; 20
    6ca8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cac:	86 ec       	ldi	r24, 0xC6	; 198
    6cae:	94 e1       	ldi	r25, 0x14	; 20
    6cb0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6cb4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6cb8:	d5 30       	cpi	r29, 0x05	; 5
    6cba:	09 f0       	breq	.+2      	; 0x6cbe <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6cbc:	73 c0       	rjmp	.+230    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6cbe:	8e e1       	ldi	r24, 0x1E	; 30
    6cc0:	89 1b       	sub	r24, r25
    6cc2:	98 01       	movw	r18, r16
    6cc4:	28 0f       	add	r18, r24
    6cc6:	31 1d       	adc	r19, r1
    6cc8:	2c 15       	cp	r18, r12
    6cca:	3d 05       	cpc	r19, r13
    6ccc:	0c f4       	brge	.+2      	; 0x6cd0 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6cce:	6a c0       	rjmp	.+212    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cd0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6cd4:	81 30       	cpi	r24, 0x01	; 1
    6cd6:	09 f0       	breq	.+2      	; 0x6cda <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6cd8:	c9 ce       	rjmp	.-622    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6cda:	62 ef       	ldi	r22, 0xF2	; 242
    6cdc:	7b e1       	ldi	r23, 0x1B	; 27
    6cde:	ad ce       	rjmp	.-678    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ce0:	91 30       	cpi	r25, 0x01	; 1
    6ce2:	51 f4       	brne	.+20     	; 0x6cf8 <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ce4:	65 ee       	ldi	r22, 0xE5	; 229
    6ce6:	7b e1       	ldi	r23, 0x1B	; 27
    6ce8:	86 ec       	ldi	r24, 0xC6	; 198
    6cea:	94 e1       	ldi	r25, 0x14	; 20
    6cec:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cf0:	86 ec       	ldi	r24, 0xC6	; 198
    6cf2:	94 e1       	ldi	r25, 0x14	; 20
    6cf4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6cf8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6cfc:	d7 30       	cpi	r29, 0x07	; 7
    6cfe:	09 f0       	breq	.+2      	; 0x6d02 <_Z22Day_In_Bet_Schedullingh+0x416>
    6d00:	51 c0       	rjmp	.+162    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d02:	8e e1       	ldi	r24, 0x1E	; 30
    6d04:	89 1b       	sub	r24, r25
    6d06:	98 01       	movw	r18, r16
    6d08:	28 0f       	add	r18, r24
    6d0a:	31 1d       	adc	r19, r1
    6d0c:	2c 15       	cp	r18, r12
    6d0e:	3d 05       	cpc	r19, r13
    6d10:	0c f4       	brge	.+2      	; 0x6d14 <_Z22Day_In_Bet_Schedullingh+0x428>
    6d12:	48 c0       	rjmp	.+144    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d14:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d18:	81 30       	cpi	r24, 0x01	; 1
    6d1a:	09 f0       	breq	.+2      	; 0x6d1e <_Z22Day_In_Bet_Schedullingh+0x432>
    6d1c:	a7 ce       	rjmp	.-690    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d1e:	68 ed       	ldi	r22, 0xD8	; 216
    6d20:	7b e1       	ldi	r23, 0x1B	; 27
    6d22:	8b ce       	rjmp	.-746    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d24:	91 30       	cpi	r25, 0x01	; 1
    6d26:	51 f4       	brne	.+20     	; 0x6d3c <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6d28:	6b ec       	ldi	r22, 0xCB	; 203
    6d2a:	7b e1       	ldi	r23, 0x1B	; 27
    6d2c:	86 ec       	ldi	r24, 0xC6	; 198
    6d2e:	94 e1       	ldi	r25, 0x14	; 20
    6d30:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d34:	86 ec       	ldi	r24, 0xC6	; 198
    6d36:	94 e1       	ldi	r25, 0x14	; 20
    6d38:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6d3c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6d40:	da 30       	cpi	r29, 0x0A	; 10
    6d42:	81 f5       	brne	.+96     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d44:	8e e1       	ldi	r24, 0x1E	; 30
    6d46:	89 1b       	sub	r24, r25
    6d48:	98 01       	movw	r18, r16
    6d4a:	28 0f       	add	r18, r24
    6d4c:	31 1d       	adc	r19, r1
    6d4e:	2c 15       	cp	r18, r12
    6d50:	3d 05       	cpc	r19, r13
    6d52:	44 f1       	brlt	.+80     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d54:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d58:	81 30       	cpi	r24, 0x01	; 1
    6d5a:	09 f0       	breq	.+2      	; 0x6d5e <_Z22Day_In_Bet_Schedullingh+0x472>
    6d5c:	87 ce       	rjmp	.-754    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d5e:	6e eb       	ldi	r22, 0xBE	; 190
    6d60:	7b e1       	ldi	r23, 0x1B	; 27
    6d62:	6b ce       	rjmp	.-810    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d64:	91 30       	cpi	r25, 0x01	; 1
    6d66:	51 f4       	brne	.+20     	; 0x6d7c <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6d68:	61 eb       	ldi	r22, 0xB1	; 177
    6d6a:	7b e1       	ldi	r23, 0x1B	; 27
    6d6c:	86 ec       	ldi	r24, 0xC6	; 198
    6d6e:	94 e1       	ldi	r25, 0x14	; 20
    6d70:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d74:	86 ec       	ldi	r24, 0xC6	; 198
    6d76:	94 e1       	ldi	r25, 0x14	; 20
    6d78:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6d7c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6d80:	dc 30       	cpi	r29, 0x0C	; 12
    6d82:	81 f4       	brne	.+32     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d84:	8e e1       	ldi	r24, 0x1E	; 30
    6d86:	89 1b       	sub	r24, r25
    6d88:	98 01       	movw	r18, r16
    6d8a:	28 0f       	add	r18, r24
    6d8c:	31 1d       	adc	r19, r1
    6d8e:	2c 15       	cp	r18, r12
    6d90:	3d 05       	cpc	r19, r13
    6d92:	44 f0       	brlt	.+16     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d94:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d98:	81 30       	cpi	r24, 0x01	; 1
    6d9a:	09 f0       	breq	.+2      	; 0x6d9e <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6d9c:	67 ce       	rjmp	.-818    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d9e:	64 ea       	ldi	r22, 0xA4	; 164
    6da0:	7b e1       	ldi	r23, 0x1B	; 27
    6da2:	4b ce       	rjmp	.-874    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6da4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6da8:	81 30       	cpi	r24, 0x01	; 1
    6daa:	79 f4       	brne	.+30     	; 0x6dca <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6dac:	66 e9       	ldi	r22, 0x96	; 150
    6dae:	7b e1       	ldi	r23, 0x1B	; 27
    6db0:	04 c0       	rjmp	.+8      	; 0x6dba <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6db2:	91 30       	cpi	r25, 0x01	; 1
    6db4:	51 f4       	brne	.+20     	; 0x6dca <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6db6:	68 e8       	ldi	r22, 0x88	; 136
    6db8:	7b e1       	ldi	r23, 0x1B	; 27
    6dba:	86 ec       	ldi	r24, 0xC6	; 198
    6dbc:	94 e1       	ldi	r25, 0x14	; 20
    6dbe:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6dc2:	86 ec       	ldi	r24, 0xC6	; 198
    6dc4:	94 e1       	ldi	r25, 0x14	; 20
    6dc6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6dca:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6dce:	f1 2c       	mov	r15, r1
    6dd0:	97 01       	movw	r18, r14
    6dd2:	28 0f       	add	r18, r24
    6dd4:	31 1d       	adc	r19, r1
    6dd6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6dda:	02 17       	cp	r16, r18
    6ddc:	13 07       	cpc	r17, r19
    6dde:	1c f1       	brlt	.+70     	; 0x6e26 <_Z22Day_In_Bet_Schedullingh+0x53a>
    6de0:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6de4:	d8 13       	cpse	r29, r24
    6de6:	1f c0       	rjmp	.+62     	; 0x6e26 <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6de8:	c1 30       	cpi	r28, 0x01	; 1
    6dea:	d9 f4       	brne	.+54     	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6dec:	6b e7       	ldi	r22, 0x7B	; 123
    6dee:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6df0:	86 ec       	ldi	r24, 0xC6	; 198
    6df2:	94 e1       	ldi	r25, 0x14	; 20
    6df4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6df8:	86 ec       	ldi	r24, 0xC6	; 198
    6dfa:	94 e1       	ldi	r25, 0x14	; 20
    6dfc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    6e00:	36 ce       	rjmp	.-916    	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e02:	c1 30       	cpi	r28, 0x01	; 1
    6e04:	51 f4       	brne	.+20     	; 0x6e1a <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e06:	6e e6       	ldi	r22, 0x6E	; 110
    6e08:	7b e1       	ldi	r23, 0x1B	; 27
    6e0a:	86 ec       	ldi	r24, 0xC6	; 198
    6e0c:	94 e1       	ldi	r25, 0x14	; 20
    6e0e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e12:	86 ec       	ldi	r24, 0xC6	; 198
    6e14:	94 e1       	ldi	r25, 0x14	; 20
    6e16:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e1a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6e1e:	d1 30       	cpi	r29, 0x01	; 1
    6e20:	b9 f0       	breq	.+46     	; 0x6e50 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6e22:	c1 e0       	ldi	r28, 0x01	; 1
    6e24:	24 ce       	rjmp	.-952    	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6e26:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6e2a:	d8 17       	cp	r29, r24
    6e2c:	09 f4       	brne	.+2      	; 0x6e30 <_Z22Day_In_Bet_Schedullingh+0x544>
    6e2e:	ba c1       	rjmp	.+884    	; 0x71a4 <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6e30:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6e34:	8e 2f       	mov	r24, r30
    6e36:	90 e0       	ldi	r25, 0x00	; 0
    6e38:	fc 01       	movw	r30, r24
    6e3a:	31 97       	sbiw	r30, 0x01	; 1
    6e3c:	ec 30       	cpi	r30, 0x0C	; 12
    6e3e:	f1 05       	cpc	r31, r1
    6e40:	08 f0       	brcs	.+2      	; 0x6e44 <_Z22Day_In_Bet_Schedullingh+0x558>
    6e42:	a1 c1       	rjmp	.+834    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
    6e44:	88 27       	eor	r24, r24
    6e46:	e3 55       	subi	r30, 0x53	; 83
    6e48:	ff 4f       	sbci	r31, 0xFF	; 255
    6e4a:	8f 4f       	sbci	r24, 0xFF	; 255
    6e4c:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e50:	8f e1       	ldi	r24, 0x1F	; 31
    6e52:	89 1b       	sub	r24, r25
    6e54:	08 0f       	add	r16, r24
    6e56:	11 1d       	adc	r17, r1
    6e58:	0e 15       	cp	r16, r14
    6e5a:	1f 05       	cpc	r17, r15
    6e5c:	0c f4       	brge	.+2      	; 0x6e60 <_Z22Day_In_Bet_Schedullingh+0x574>
    6e5e:	93 c1       	rjmp	.+806    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e60:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6e64:	c1 30       	cpi	r28, 0x01	; 1
    6e66:	e9 f6       	brne	.-70     	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e68:	61 e6       	ldi	r22, 0x61	; 97
    6e6a:	7b e1       	ldi	r23, 0x1B	; 27
    6e6c:	c1 cf       	rjmp	.-126    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e6e:	c1 30       	cpi	r28, 0x01	; 1
    6e70:	51 f4       	brne	.+20     	; 0x6e86 <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e72:	64 e5       	ldi	r22, 0x54	; 84
    6e74:	7b e1       	ldi	r23, 0x1B	; 27
    6e76:	86 ec       	ldi	r24, 0xC6	; 198
    6e78:	94 e1       	ldi	r25, 0x14	; 20
    6e7a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e7e:	86 ec       	ldi	r24, 0xC6	; 198
    6e80:	94 e1       	ldi	r25, 0x14	; 20
    6e82:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e86:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6e8a:	d2 30       	cpi	r29, 0x02	; 2
    6e8c:	51 f6       	brne	.-108    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e8e:	8f e1       	ldi	r24, 0x1F	; 31
    6e90:	89 1b       	sub	r24, r25
    6e92:	08 0f       	add	r16, r24
    6e94:	11 1d       	adc	r17, r1
    6e96:	0e 15       	cp	r16, r14
    6e98:	1f 05       	cpc	r17, r15
    6e9a:	0c f4       	brge	.+2      	; 0x6e9e <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6e9c:	74 c1       	rjmp	.+744    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e9e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ea2:	c1 30       	cpi	r28, 0x01	; 1
    6ea4:	09 f0       	breq	.+2      	; 0x6ea8 <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6ea6:	bd cf       	rjmp	.-134    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ea8:	67 e4       	ldi	r22, 0x47	; 71
    6eaa:	7b e1       	ldi	r23, 0x1B	; 27
    6eac:	a1 cf       	rjmp	.-190    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6eae:	c1 30       	cpi	r28, 0x01	; 1
    6eb0:	51 f4       	brne	.+20     	; 0x6ec6 <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6eb2:	6a e3       	ldi	r22, 0x3A	; 58
    6eb4:	7b e1       	ldi	r23, 0x1B	; 27
    6eb6:	86 ec       	ldi	r24, 0xC6	; 198
    6eb8:	94 e1       	ldi	r25, 0x14	; 20
    6eba:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ebe:	86 ec       	ldi	r24, 0xC6	; 198
    6ec0:	94 e1       	ldi	r25, 0x14	; 20
    6ec2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ec6:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6eca:	d4 30       	cpi	r29, 0x04	; 4
    6ecc:	09 f0       	breq	.+2      	; 0x6ed0 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6ece:	a9 cf       	rjmp	.-174    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ed0:	8f e1       	ldi	r24, 0x1F	; 31
    6ed2:	89 1b       	sub	r24, r25
    6ed4:	08 0f       	add	r16, r24
    6ed6:	11 1d       	adc	r17, r1
    6ed8:	0e 15       	cp	r16, r14
    6eda:	1f 05       	cpc	r17, r15
    6edc:	0c f4       	brge	.+2      	; 0x6ee0 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6ede:	53 c1       	rjmp	.+678    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ee0:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ee4:	c1 30       	cpi	r28, 0x01	; 1
    6ee6:	09 f0       	breq	.+2      	; 0x6eea <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6ee8:	9c cf       	rjmp	.-200    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6eea:	6d e2       	ldi	r22, 0x2D	; 45
    6eec:	7b e1       	ldi	r23, 0x1B	; 27
    6eee:	80 cf       	rjmp	.-256    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ef0:	c1 30       	cpi	r28, 0x01	; 1
    6ef2:	51 f4       	brne	.+20     	; 0x6f08 <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ef4:	60 e2       	ldi	r22, 0x20	; 32
    6ef6:	7b e1       	ldi	r23, 0x1B	; 27
    6ef8:	86 ec       	ldi	r24, 0xC6	; 198
    6efa:	94 e1       	ldi	r25, 0x14	; 20
    6efc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f00:	86 ec       	ldi	r24, 0xC6	; 198
    6f02:	94 e1       	ldi	r25, 0x14	; 20
    6f04:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f08:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6f0c:	d6 30       	cpi	r29, 0x06	; 6
    6f0e:	09 f0       	breq	.+2      	; 0x6f12 <_Z22Day_In_Bet_Schedullingh+0x626>
    6f10:	88 cf       	rjmp	.-240    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f12:	8f e1       	ldi	r24, 0x1F	; 31
    6f14:	89 1b       	sub	r24, r25
    6f16:	08 0f       	add	r16, r24
    6f18:	11 1d       	adc	r17, r1
    6f1a:	0e 15       	cp	r16, r14
    6f1c:	1f 05       	cpc	r17, r15
    6f1e:	0c f4       	brge	.+2      	; 0x6f22 <_Z22Day_In_Bet_Schedullingh+0x636>
    6f20:	32 c1       	rjmp	.+612    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f22:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f26:	c1 30       	cpi	r28, 0x01	; 1
    6f28:	09 f0       	breq	.+2      	; 0x6f2c <_Z22Day_In_Bet_Schedullingh+0x640>
    6f2a:	7b cf       	rjmp	.-266    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f2c:	63 e1       	ldi	r22, 0x13	; 19
    6f2e:	7b e1       	ldi	r23, 0x1B	; 27
    6f30:	5f cf       	rjmp	.-322    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f32:	c1 30       	cpi	r28, 0x01	; 1
    6f34:	51 f4       	brne	.+20     	; 0x6f4a <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f36:	66 e0       	ldi	r22, 0x06	; 6
    6f38:	7b e1       	ldi	r23, 0x1B	; 27
    6f3a:	86 ec       	ldi	r24, 0xC6	; 198
    6f3c:	94 e1       	ldi	r25, 0x14	; 20
    6f3e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f42:	86 ec       	ldi	r24, 0xC6	; 198
    6f44:	94 e1       	ldi	r25, 0x14	; 20
    6f46:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f4a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6f4e:	d8 30       	cpi	r29, 0x08	; 8
    6f50:	09 f0       	breq	.+2      	; 0x6f54 <_Z22Day_In_Bet_Schedullingh+0x668>
    6f52:	67 cf       	rjmp	.-306    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f54:	8f e1       	ldi	r24, 0x1F	; 31
    6f56:	89 1b       	sub	r24, r25
    6f58:	08 0f       	add	r16, r24
    6f5a:	11 1d       	adc	r17, r1
    6f5c:	0e 15       	cp	r16, r14
    6f5e:	1f 05       	cpc	r17, r15
    6f60:	0c f4       	brge	.+2      	; 0x6f64 <_Z22Day_In_Bet_Schedullingh+0x678>
    6f62:	11 c1       	rjmp	.+546    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f64:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f68:	c1 30       	cpi	r28, 0x01	; 1
    6f6a:	09 f0       	breq	.+2      	; 0x6f6e <_Z22Day_In_Bet_Schedullingh+0x682>
    6f6c:	5a cf       	rjmp	.-332    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f6e:	69 ef       	ldi	r22, 0xF9	; 249
    6f70:	7a e1       	ldi	r23, 0x1A	; 26
    6f72:	3e cf       	rjmp	.-388    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f74:	c1 30       	cpi	r28, 0x01	; 1
    6f76:	51 f4       	brne	.+20     	; 0x6f8c <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f78:	6c ee       	ldi	r22, 0xEC	; 236
    6f7a:	7a e1       	ldi	r23, 0x1A	; 26
    6f7c:	86 ec       	ldi	r24, 0xC6	; 198
    6f7e:	94 e1       	ldi	r25, 0x14	; 20
    6f80:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f84:	86 ec       	ldi	r24, 0xC6	; 198
    6f86:	94 e1       	ldi	r25, 0x14	; 20
    6f88:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f8c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6f90:	d9 30       	cpi	r29, 0x09	; 9
    6f92:	09 f0       	breq	.+2      	; 0x6f96 <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6f94:	46 cf       	rjmp	.-372    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f96:	8f e1       	ldi	r24, 0x1F	; 31
    6f98:	89 1b       	sub	r24, r25
    6f9a:	08 0f       	add	r16, r24
    6f9c:	11 1d       	adc	r17, r1
    6f9e:	0e 15       	cp	r16, r14
    6fa0:	1f 05       	cpc	r17, r15
    6fa2:	0c f4       	brge	.+2      	; 0x6fa6 <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6fa4:	f0 c0       	rjmp	.+480    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fa6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6faa:	c1 30       	cpi	r28, 0x01	; 1
    6fac:	09 f0       	breq	.+2      	; 0x6fb0 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6fae:	39 cf       	rjmp	.-398    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6fb0:	6f ed       	ldi	r22, 0xDF	; 223
    6fb2:	7a e1       	ldi	r23, 0x1A	; 26
    6fb4:	1d cf       	rjmp	.-454    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fb6:	c1 30       	cpi	r28, 0x01	; 1
    6fb8:	51 f4       	brne	.+20     	; 0x6fce <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6fba:	62 ed       	ldi	r22, 0xD2	; 210
    6fbc:	7a e1       	ldi	r23, 0x1A	; 26
    6fbe:	86 ec       	ldi	r24, 0xC6	; 198
    6fc0:	94 e1       	ldi	r25, 0x14	; 20
    6fc2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6fc6:	86 ec       	ldi	r24, 0xC6	; 198
    6fc8:	94 e1       	ldi	r25, 0x14	; 20
    6fca:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6fce:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6fd2:	db 30       	cpi	r29, 0x0B	; 11
    6fd4:	09 f0       	breq	.+2      	; 0x6fd8 <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6fd6:	25 cf       	rjmp	.-438    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6fd8:	8f e1       	ldi	r24, 0x1F	; 31
    6fda:	89 1b       	sub	r24, r25
    6fdc:	08 0f       	add	r16, r24
    6fde:	11 1d       	adc	r17, r1
    6fe0:	0e 15       	cp	r16, r14
    6fe2:	1f 05       	cpc	r17, r15
    6fe4:	0c f4       	brge	.+2      	; 0x6fe8 <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6fe6:	cf c0       	rjmp	.+414    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fe8:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6fec:	c1 30       	cpi	r28, 0x01	; 1
    6fee:	09 f0       	breq	.+2      	; 0x6ff2 <_Z22Day_In_Bet_Schedullingh+0x706>
    6ff0:	18 cf       	rjmp	.-464    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ff2:	65 ec       	ldi	r22, 0xC5	; 197
    6ff4:	7a e1       	ldi	r23, 0x1A	; 26
    6ff6:	fc ce       	rjmp	.-520    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6ff8:	8b 2d       	mov	r24, r11
    6ffa:	83 70       	andi	r24, 0x03	; 3
    6ffc:	09 f1       	breq	.+66     	; 0x7040 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ffe:	c1 30       	cpi	r28, 0x01	; 1
    7000:	51 f4       	brne	.+20     	; 0x7016 <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    7002:	68 eb       	ldi	r22, 0xB8	; 184
    7004:	7a e1       	ldi	r23, 0x1A	; 26
    7006:	86 ec       	ldi	r24, 0xC6	; 198
    7008:	94 e1       	ldi	r25, 0x14	; 20
    700a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    700e:	86 ec       	ldi	r24, 0xC6	; 198
    7010:	94 e1       	ldi	r25, 0x14	; 20
    7012:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    7016:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    701a:	d3 30       	cpi	r29, 0x03	; 3
    701c:	09 f0       	breq	.+2      	; 0x7020 <_Z22Day_In_Bet_Schedullingh+0x734>
    701e:	01 cf       	rjmp	.-510    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    7020:	8c e1       	ldi	r24, 0x1C	; 28
    7022:	89 1b       	sub	r24, r25
    7024:	08 0f       	add	r16, r24
    7026:	11 1d       	adc	r17, r1
    7028:	0e 15       	cp	r16, r14
    702a:	1f 05       	cpc	r17, r15
    702c:	0c f4       	brge	.+2      	; 0x7030 <_Z22Day_In_Bet_Schedullingh+0x744>
    702e:	ab c0       	rjmp	.+342    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    7030:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7034:	c1 30       	cpi	r28, 0x01	; 1
    7036:	09 f0       	breq	.+2      	; 0x703a <_Z22Day_In_Bet_Schedullingh+0x74e>
    7038:	f4 ce       	rjmp	.-536    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    703a:	6b ea       	ldi	r22, 0xAB	; 171
    703c:	7a e1       	ldi	r23, 0x1A	; 26
    703e:	d8 ce       	rjmp	.-592    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7040:	c1 30       	cpi	r28, 0x01	; 1
    7042:	51 f4       	brne	.+20     	; 0x7058 <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    7044:	6e e9       	ldi	r22, 0x9E	; 158
    7046:	7a e1       	ldi	r23, 0x1A	; 26
    7048:	86 ec       	ldi	r24, 0xC6	; 198
    704a:	94 e1       	ldi	r25, 0x14	; 20
    704c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    7050:	86 ec       	ldi	r24, 0xC6	; 198
    7052:	94 e1       	ldi	r25, 0x14	; 20
    7054:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    7058:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    705c:	d3 30       	cpi	r29, 0x03	; 3
    705e:	09 f0       	breq	.+2      	; 0x7062 <_Z22Day_In_Bet_Schedullingh+0x776>
    7060:	e0 ce       	rjmp	.-576    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    7062:	8d e1       	ldi	r24, 0x1D	; 29
    7064:	89 1b       	sub	r24, r25
    7066:	08 0f       	add	r16, r24
    7068:	11 1d       	adc	r17, r1
    706a:	0e 15       	cp	r16, r14
    706c:	1f 05       	cpc	r17, r15
    706e:	0c f4       	brge	.+2      	; 0x7072 <_Z22Day_In_Bet_Schedullingh+0x786>
    7070:	8a c0       	rjmp	.+276    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    7072:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7076:	c1 30       	cpi	r28, 0x01	; 1
    7078:	09 f0       	breq	.+2      	; 0x707c <_Z22Day_In_Bet_Schedullingh+0x790>
    707a:	d3 ce       	rjmp	.-602    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    707c:	61 e9       	ldi	r22, 0x91	; 145
    707e:	7a e1       	ldi	r23, 0x1A	; 26
    7080:	b7 ce       	rjmp	.-658    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7082:	c1 30       	cpi	r28, 0x01	; 1
    7084:	51 f4       	brne	.+20     	; 0x709a <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    7086:	64 e8       	ldi	r22, 0x84	; 132
    7088:	7a e1       	ldi	r23, 0x1A	; 26
    708a:	86 ec       	ldi	r24, 0xC6	; 198
    708c:	94 e1       	ldi	r25, 0x14	; 20
    708e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7092:	86 ec       	ldi	r24, 0xC6	; 198
    7094:	94 e1       	ldi	r25, 0x14	; 20
    7096:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    709a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    709e:	d5 30       	cpi	r29, 0x05	; 5
    70a0:	09 f0       	breq	.+2      	; 0x70a4 <_Z22Day_In_Bet_Schedullingh+0x7b8>
    70a2:	bf ce       	rjmp	.-642    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    70a4:	8e e1       	ldi	r24, 0x1E	; 30
    70a6:	89 1b       	sub	r24, r25
    70a8:	08 0f       	add	r16, r24
    70aa:	11 1d       	adc	r17, r1
    70ac:	0e 15       	cp	r16, r14
    70ae:	1f 05       	cpc	r17, r15
    70b0:	0c f4       	brge	.+2      	; 0x70b4 <_Z22Day_In_Bet_Schedullingh+0x7c8>
    70b2:	69 c0       	rjmp	.+210    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    70b4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    70b8:	c1 30       	cpi	r28, 0x01	; 1
    70ba:	09 f0       	breq	.+2      	; 0x70be <_Z22Day_In_Bet_Schedullingh+0x7d2>
    70bc:	b2 ce       	rjmp	.-668    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    70be:	67 e7       	ldi	r22, 0x77	; 119
    70c0:	7a e1       	ldi	r23, 0x1A	; 26
    70c2:	96 ce       	rjmp	.-724    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    70c4:	c1 30       	cpi	r28, 0x01	; 1
    70c6:	51 f4       	brne	.+20     	; 0x70dc <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    70c8:	6a e6       	ldi	r22, 0x6A	; 106
    70ca:	7a e1       	ldi	r23, 0x1A	; 26
    70cc:	86 ec       	ldi	r24, 0xC6	; 198
    70ce:	94 e1       	ldi	r25, 0x14	; 20
    70d0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    70d4:	86 ec       	ldi	r24, 0xC6	; 198
    70d6:	94 e1       	ldi	r25, 0x14	; 20
    70d8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    70dc:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    70e0:	d7 30       	cpi	r29, 0x07	; 7
    70e2:	09 f0       	breq	.+2      	; 0x70e6 <_Z22Day_In_Bet_Schedullingh+0x7fa>
    70e4:	9e ce       	rjmp	.-708    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    70e6:	8e e1       	ldi	r24, 0x1E	; 30
    70e8:	89 1b       	sub	r24, r25
    70ea:	08 0f       	add	r16, r24
    70ec:	11 1d       	adc	r17, r1
    70ee:	0e 15       	cp	r16, r14
    70f0:	1f 05       	cpc	r17, r15
    70f2:	0c f4       	brge	.+2      	; 0x70f6 <_Z22Day_In_Bet_Schedullingh+0x80a>
    70f4:	48 c0       	rjmp	.+144    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    70f6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    70fa:	c1 30       	cpi	r28, 0x01	; 1
    70fc:	09 f0       	breq	.+2      	; 0x7100 <_Z22Day_In_Bet_Schedullingh+0x814>
    70fe:	91 ce       	rjmp	.-734    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7100:	6d e5       	ldi	r22, 0x5D	; 93
    7102:	7a e1       	ldi	r23, 0x1A	; 26
    7104:	75 ce       	rjmp	.-790    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7106:	c1 30       	cpi	r28, 0x01	; 1
    7108:	51 f4       	brne	.+20     	; 0x711e <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    710a:	60 e5       	ldi	r22, 0x50	; 80
    710c:	7a e1       	ldi	r23, 0x1A	; 26
    710e:	86 ec       	ldi	r24, 0xC6	; 198
    7110:	94 e1       	ldi	r25, 0x14	; 20
    7112:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7116:	86 ec       	ldi	r24, 0xC6	; 198
    7118:	94 e1       	ldi	r25, 0x14	; 20
    711a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    711e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    7122:	da 30       	cpi	r29, 0x0A	; 10
    7124:	09 f0       	breq	.+2      	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x83c>
    7126:	7d ce       	rjmp	.-774    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7128:	8e e1       	ldi	r24, 0x1E	; 30
    712a:	89 1b       	sub	r24, r25
    712c:	08 0f       	add	r16, r24
    712e:	11 1d       	adc	r17, r1
    7130:	0e 15       	cp	r16, r14
    7132:	1f 05       	cpc	r17, r15
    7134:	44 f1       	brlt	.+80     	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7136:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    713a:	c1 30       	cpi	r28, 0x01	; 1
    713c:	09 f0       	breq	.+2      	; 0x7140 <_Z22Day_In_Bet_Schedullingh+0x854>
    713e:	71 ce       	rjmp	.-798    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7140:	63 e4       	ldi	r22, 0x43	; 67
    7142:	7a e1       	ldi	r23, 0x1A	; 26
    7144:	55 ce       	rjmp	.-854    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7146:	c1 30       	cpi	r28, 0x01	; 1
    7148:	51 f4       	brne	.+20     	; 0x715e <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    714a:	66 e3       	ldi	r22, 0x36	; 54
    714c:	7a e1       	ldi	r23, 0x1A	; 26
    714e:	86 ec       	ldi	r24, 0xC6	; 198
    7150:	94 e1       	ldi	r25, 0x14	; 20
    7152:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7156:	86 ec       	ldi	r24, 0xC6	; 198
    7158:	94 e1       	ldi	r25, 0x14	; 20
    715a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    715e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    7162:	dc 30       	cpi	r29, 0x0C	; 12
    7164:	09 f0       	breq	.+2      	; 0x7168 <_Z22Day_In_Bet_Schedullingh+0x87c>
    7166:	5d ce       	rjmp	.-838    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7168:	8e e1       	ldi	r24, 0x1E	; 30
    716a:	89 1b       	sub	r24, r25
    716c:	08 0f       	add	r16, r24
    716e:	11 1d       	adc	r17, r1
    7170:	0e 15       	cp	r16, r14
    7172:	1f 05       	cpc	r17, r15
    7174:	44 f0       	brlt	.+16     	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7176:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    717a:	c1 30       	cpi	r28, 0x01	; 1
    717c:	09 f0       	breq	.+2      	; 0x7180 <_Z22Day_In_Bet_Schedullingh+0x894>
    717e:	51 ce       	rjmp	.-862    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7180:	69 e2       	ldi	r22, 0x29	; 41
    7182:	7a e1       	ldi	r23, 0x1A	; 26
    7184:	35 ce       	rjmp	.-918    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7186:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    718a:	81 30       	cpi	r24, 0x01	; 1
    718c:	c1 f4       	brne	.+48     	; 0x71be <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    718e:	6b e1       	ldi	r22, 0x1B	; 27
    7190:	7a e1       	ldi	r23, 0x1A	; 26
    7192:	86 ec       	ldi	r24, 0xC6	; 198
    7194:	94 e1       	ldi	r25, 0x14	; 20
    7196:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    719a:	86 ec       	ldi	r24, 0xC6	; 198
    719c:	94 e1       	ldi	r25, 0x14	; 20
    719e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    71a2:	0d c0       	rjmp	.+26     	; 0x71be <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    71a4:	c1 30       	cpi	r28, 0x01	; 1
    71a6:	61 f4       	brne	.+24     	; 0x71c0 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    71a8:	6d e0       	ldi	r22, 0x0D	; 13
    71aa:	7a e1       	ldi	r23, 0x1A	; 26
    71ac:	86 ec       	ldi	r24, 0xC6	; 198
    71ae:	94 e1       	ldi	r25, 0x14	; 20
    71b0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    71b4:	86 ec       	ldi	r24, 0xC6	; 198
    71b6:	94 e1       	ldi	r25, 0x14	; 20
    71b8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    71bc:	01 c0       	rjmp	.+2      	; 0x71c0 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    71be:	02 c0       	rjmp	.+4      	; 0x71c4 <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    71c0:	c0 e0       	ldi	r28, 0x00	; 0
    71c2:	55 cc       	rjmp	.-1878   	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    71c4:	df 91       	pop	r29
    71c6:	cf 91       	pop	r28
    71c8:	1f 91       	pop	r17
    71ca:	0f 91       	pop	r16
    71cc:	ff 90       	pop	r15
    71ce:	ef 90       	pop	r14
    71d0:	df 90       	pop	r13
    71d2:	cf 90       	pop	r12
    71d4:	bf 90       	pop	r11
    71d6:	08 95       	ret

000071d8 <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    71d8:	7f 92       	push	r7
    71da:	8f 92       	push	r8
    71dc:	9f 92       	push	r9
    71de:	af 92       	push	r10
    71e0:	bf 92       	push	r11
    71e2:	cf 92       	push	r12
    71e4:	df 92       	push	r13
    71e6:	ef 92       	push	r14
    71e8:	ff 92       	push	r15
    71ea:	0f 93       	push	r16
    71ec:	1f 93       	push	r17
    71ee:	cf 93       	push	r28
    71f0:	df 93       	push	r29
    71f2:	c8 2e       	mov	r12, r24
    71f4:	f6 2e       	mov	r15, r22
    71f6:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    71f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    71fc:	81 30       	cpi	r24, 0x01	; 1
    71fe:	69 f4       	brne	.+26     	; 0x721a <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    7200:	6a ef       	ldi	r22, 0xFA	; 250
    7202:	79 e1       	ldi	r23, 0x19	; 25
    7204:	86 ec       	ldi	r24, 0xC6	; 198
    7206:	94 e1       	ldi	r25, 0x14	; 20
    7208:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    720c:	4a e0       	ldi	r20, 0x0A	; 10
    720e:	50 e0       	ldi	r21, 0x00	; 0
    7210:	6c 2d       	mov	r22, r12
    7212:	86 ec       	ldi	r24, 0xC6	; 198
    7214:	94 e1       	ldi	r25, 0x14	; 20
    7216:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    721a:	e0 90 f4 13 	lds	r14, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Started_Date != 0)
    721e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    7222:	88 23       	and	r24, r24
    7224:	71 f0       	breq	.+28     	; 0x7242 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    7226:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    722a:	81 30       	cpi	r24, 0x01	; 1
    722c:	29 f4       	brne	.+10     	; 0x7238 <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    722e:	00 91 2a 09 	lds	r16, 0x092A	; 0x80092a <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    7232:	d0 91 2b 09 	lds	r29, 0x092B	; 0x80092b <_sSchedules+0xd>
    7236:	09 c0       	rjmp	.+18     	; 0x724a <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    7238:	00 91 ee 0b 	lds	r16, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    723c:	d0 91 ef 0b 	lds	r29, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    7240:	04 c0       	rjmp	.+8      	; 0x724a <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    7242:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
		month = _sRuble_Parameters.Update_Local_Date[1];
    7246:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    724a:	aa 24       	eor	r10, r10
    724c:	a3 94       	inc	r10
    724e:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7250:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7254:	81 30       	cpi	r24, 0x01	; 1
    7256:	09 f0       	breq	.+2      	; 0x725a <_Z22Day_In_Bet_Schedullinghhh+0x82>
    7258:	71 c0       	rjmp	.+226    	; 0x733c <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    725a:	62 ef       	ldi	r22, 0xF2	; 242
    725c:	79 e1       	ldi	r23, 0x19	; 25
    725e:	86 ec       	ldi	r24, 0xC6	; 198
    7260:	94 e1       	ldi	r25, 0x14	; 20
    7262:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    7266:	4a e0       	ldi	r20, 0x0A	; 10
    7268:	50 e0       	ldi	r21, 0x00	; 0
    726a:	60 2f       	mov	r22, r16
    726c:	86 ec       	ldi	r24, 0xC6	; 198
    726e:	94 e1       	ldi	r25, 0x14	; 20
    7270:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7274:	86 ec       	ldi	r24, 0xC6	; 198
    7276:	94 e1       	ldi	r25, 0x14	; 20
    7278:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    727c:	69 ee       	ldi	r22, 0xE9	; 233
    727e:	79 e1       	ldi	r23, 0x19	; 25
    7280:	86 ec       	ldi	r24, 0xC6	; 198
    7282:	94 e1       	ldi	r25, 0x14	; 20
    7284:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    7288:	4a e0       	ldi	r20, 0x0A	; 10
    728a:	50 e0       	ldi	r21, 0x00	; 0
    728c:	6d 2f       	mov	r22, r29
    728e:	86 ec       	ldi	r24, 0xC6	; 198
    7290:	94 e1       	ldi	r25, 0x14	; 20
    7292:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7296:	86 ec       	ldi	r24, 0xC6	; 198
    7298:	94 e1       	ldi	r25, 0x14	; 20
    729a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    729e:	61 ee       	ldi	r22, 0xE1	; 225
    72a0:	79 e1       	ldi	r23, 0x19	; 25
    72a2:	86 ec       	ldi	r24, 0xC6	; 198
    72a4:	94 e1       	ldi	r25, 0x14	; 20
    72a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    72aa:	4a e0       	ldi	r20, 0x0A	; 10
    72ac:	50 e0       	ldi	r21, 0x00	; 0
    72ae:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    72b2:	86 ec       	ldi	r24, 0xC6	; 198
    72b4:	94 e1       	ldi	r25, 0x14	; 20
    72b6:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72ba:	86 ec       	ldi	r24, 0xC6	; 198
    72bc:	94 e1       	ldi	r25, 0x14	; 20
    72be:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    72c2:	65 ed       	ldi	r22, 0xD5	; 213
    72c4:	79 e1       	ldi	r23, 0x19	; 25
    72c6:	86 ec       	ldi	r24, 0xC6	; 198
    72c8:	94 e1       	ldi	r25, 0x14	; 20
    72ca:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    72ce:	4a e0       	ldi	r20, 0x0A	; 10
    72d0:	50 e0       	ldi	r21, 0x00	; 0
    72d2:	6f 2d       	mov	r22, r15
    72d4:	86 ec       	ldi	r24, 0xC6	; 198
    72d6:	94 e1       	ldi	r25, 0x14	; 20
    72d8:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72dc:	86 ec       	ldi	r24, 0xC6	; 198
    72de:	94 e1       	ldi	r25, 0x14	; 20
    72e0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    72e4:	67 ec       	ldi	r22, 0xC7	; 199
    72e6:	79 e1       	ldi	r23, 0x19	; 25
    72e8:	86 ec       	ldi	r24, 0xC6	; 198
    72ea:	94 e1       	ldi	r25, 0x14	; 20
    72ec:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    72f0:	4a e0       	ldi	r20, 0x0A	; 10
    72f2:	50 e0       	ldi	r21, 0x00	; 0
    72f4:	67 2d       	mov	r22, r7
    72f6:	86 ec       	ldi	r24, 0xC6	; 198
    72f8:	94 e1       	ldi	r25, 0x14	; 20
    72fa:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72fe:	86 ec       	ldi	r24, 0xC6	; 198
    7300:	94 e1       	ldi	r25, 0x14	; 20
    7302:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    7306:	64 eb       	ldi	r22, 0xB4	; 180
    7308:	79 e1       	ldi	r23, 0x19	; 25
    730a:	86 ec       	ldi	r24, 0xC6	; 198
    730c:	94 e1       	ldi	r25, 0x14	; 20
    730e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7312:	86 ec       	ldi	r24, 0xC6	; 198
    7314:	94 e1       	ldi	r25, 0x14	; 20
    7316:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    731a:	6f e9       	ldi	r22, 0x9F	; 159
    731c:	79 e1       	ldi	r23, 0x19	; 25
    731e:	86 ec       	ldi	r24, 0xC6	; 198
    7320:	94 e1       	ldi	r25, 0x14	; 20
    7322:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7326:	4a e0       	ldi	r20, 0x0A	; 10
    7328:	50 e0       	ldi	r21, 0x00	; 0
    732a:	6a 2d       	mov	r22, r10
    732c:	86 ec       	ldi	r24, 0xC6	; 198
    732e:	94 e1       	ldi	r25, 0x14	; 20
    7330:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7334:	86 ec       	ldi	r24, 0xC6	; 198
    7336:	94 e1       	ldi	r25, 0x14	; 20
    7338:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    733c:	8f 2c       	mov	r8, r15
    733e:	91 2c       	mov	r9, r1
    7340:	b1 2c       	mov	r11, r1
    7342:	10 e0       	ldi	r17, 0x00	; 0
    7344:	94 01       	movw	r18, r8
    7346:	2a 0d       	add	r18, r10
    7348:	3b 1d       	adc	r19, r11
    734a:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    734e:	02 17       	cp	r16, r18
    7350:	13 07       	cpc	r17, r19
    7352:	44 f0       	brlt	.+16     	; 0x7364 <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    7354:	d7 11       	cpse	r29, r7
    7356:	09 c0       	rjmp	.+18     	; 0x736a <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7358:	91 30       	cpi	r25, 0x01	; 1
    735a:	09 f0       	breq	.+2      	; 0x735e <_Z22Day_In_Bet_Schedullinghhh+0x186>
    735c:	be c3       	rjmp	.+1916   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    735e:	62 e9       	ldi	r22, 0x92	; 146
    7360:	79 e1       	ldi	r23, 0x19	; 25
    7362:	30 c0       	rjmp	.+96     	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    7364:	d7 15       	cp	r29, r7
    7366:	09 f4       	brne	.+2      	; 0x736a <_Z22Day_In_Bet_Schedullinghhh+0x192>
    7368:	be c1       	rjmp	.+892    	; 0x76e6 <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    736a:	47 2d       	mov	r20, r7
    736c:	50 e0       	ldi	r21, 0x00	; 0
    736e:	fa 01       	movw	r30, r20
    7370:	31 97       	sbiw	r30, 0x01	; 1
    7372:	ec 30       	cpi	r30, 0x0C	; 12
    7374:	f1 05       	cpc	r31, r1
    7376:	08 f0       	brcs	.+2      	; 0x737a <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    7378:	af c1       	rjmp	.+862    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
    737a:	88 27       	eor	r24, r24
    737c:	e7 54       	subi	r30, 0x47	; 71
    737e:	ff 4f       	sbci	r31, 0xFF	; 255
    7380:	8f 4f       	sbci	r24, 0xFF	; 255
    7382:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7386:	91 30       	cpi	r25, 0x01	; 1
    7388:	51 f4       	brne	.+20     	; 0x739e <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    738a:	65 e8       	ldi	r22, 0x85	; 133
    738c:	79 e1       	ldi	r23, 0x19	; 25
    738e:	86 ec       	ldi	r24, 0xC6	; 198
    7390:	94 e1       	ldi	r25, 0x14	; 20
    7392:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7396:	86 ec       	ldi	r24, 0xC6	; 198
    7398:	94 e1       	ldi	r25, 0x14	; 20
    739a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    739e:	d1 30       	cpi	r29, 0x01	; 1
    73a0:	09 f0       	breq	.+2      	; 0x73a4 <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    73a2:	9b c3       	rjmp	.+1846   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73a4:	8f e1       	ldi	r24, 0x1F	; 31
    73a6:	8f 19       	sub	r24, r15
    73a8:	98 01       	movw	r18, r16
    73aa:	28 0f       	add	r18, r24
    73ac:	31 1d       	adc	r19, r1
    73ae:	2a 15       	cp	r18, r10
    73b0:	3b 05       	cpc	r19, r11
    73b2:	0c f4       	brge	.+2      	; 0x73b6 <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    73b4:	91 c1       	rjmp	.+802    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    73ba:	81 30       	cpi	r24, 0x01	; 1
    73bc:	09 f0       	breq	.+2      	; 0x73c0 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    73be:	8d c3       	rjmp	.+1818   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73c0:	68 e7       	ldi	r22, 0x78	; 120
    73c2:	79 e1       	ldi	r23, 0x19	; 25
    73c4:	86 ec       	ldi	r24, 0xC6	; 198
    73c6:	94 e1       	ldi	r25, 0x14	; 20
    73c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    73cc:	86 ec       	ldi	r24, 0xC6	; 198
    73ce:	94 e1       	ldi	r25, 0x14	; 20
    73d0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    73d4:	82 c3       	rjmp	.+1796   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73d6:	91 30       	cpi	r25, 0x01	; 1
    73d8:	51 f4       	brne	.+20     	; 0x73ee <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    73da:	6b e6       	ldi	r22, 0x6B	; 107
    73dc:	79 e1       	ldi	r23, 0x19	; 25
    73de:	86 ec       	ldi	r24, 0xC6	; 198
    73e0:	94 e1       	ldi	r25, 0x14	; 20
    73e2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73e6:	86 ec       	ldi	r24, 0xC6	; 198
    73e8:	94 e1       	ldi	r25, 0x14	; 20
    73ea:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    73ee:	d2 30       	cpi	r29, 0x02	; 2
    73f0:	09 f0       	breq	.+2      	; 0x73f4 <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    73f2:	73 c3       	rjmp	.+1766   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73f4:	8f e1       	ldi	r24, 0x1F	; 31
    73f6:	8f 19       	sub	r24, r15
    73f8:	98 01       	movw	r18, r16
    73fa:	28 0f       	add	r18, r24
    73fc:	31 1d       	adc	r19, r1
    73fe:	2a 15       	cp	r18, r10
    7400:	3b 05       	cpc	r19, r11
    7402:	0c f4       	brge	.+2      	; 0x7406 <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    7404:	69 c1       	rjmp	.+722    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7406:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    740a:	81 30       	cpi	r24, 0x01	; 1
    740c:	09 f0       	breq	.+2      	; 0x7410 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    740e:	65 c3       	rjmp	.+1738   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7410:	6e e5       	ldi	r22, 0x5E	; 94
    7412:	79 e1       	ldi	r23, 0x19	; 25
    7414:	d7 cf       	rjmp	.-82     	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7416:	91 30       	cpi	r25, 0x01	; 1
    7418:	51 f4       	brne	.+20     	; 0x742e <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    741a:	61 e5       	ldi	r22, 0x51	; 81
    741c:	79 e1       	ldi	r23, 0x19	; 25
    741e:	86 ec       	ldi	r24, 0xC6	; 198
    7420:	94 e1       	ldi	r25, 0x14	; 20
    7422:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7426:	86 ec       	ldi	r24, 0xC6	; 198
    7428:	94 e1       	ldi	r25, 0x14	; 20
    742a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    742e:	d4 30       	cpi	r29, 0x04	; 4
    7430:	09 f0       	breq	.+2      	; 0x7434 <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    7432:	53 c3       	rjmp	.+1702   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7434:	8f e1       	ldi	r24, 0x1F	; 31
    7436:	8f 19       	sub	r24, r15
    7438:	98 01       	movw	r18, r16
    743a:	28 0f       	add	r18, r24
    743c:	31 1d       	adc	r19, r1
    743e:	2a 15       	cp	r18, r10
    7440:	3b 05       	cpc	r19, r11
    7442:	0c f4       	brge	.+2      	; 0x7446 <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    7444:	49 c1       	rjmp	.+658    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7446:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    744a:	81 30       	cpi	r24, 0x01	; 1
    744c:	09 f0       	breq	.+2      	; 0x7450 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    744e:	45 c3       	rjmp	.+1674   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7450:	64 e4       	ldi	r22, 0x44	; 68
    7452:	79 e1       	ldi	r23, 0x19	; 25
    7454:	b7 cf       	rjmp	.-146    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7456:	91 30       	cpi	r25, 0x01	; 1
    7458:	51 f4       	brne	.+20     	; 0x746e <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    745a:	67 e3       	ldi	r22, 0x37	; 55
    745c:	79 e1       	ldi	r23, 0x19	; 25
    745e:	86 ec       	ldi	r24, 0xC6	; 198
    7460:	94 e1       	ldi	r25, 0x14	; 20
    7462:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7466:	86 ec       	ldi	r24, 0xC6	; 198
    7468:	94 e1       	ldi	r25, 0x14	; 20
    746a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    746e:	d6 30       	cpi	r29, 0x06	; 6
    7470:	09 f0       	breq	.+2      	; 0x7474 <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    7472:	33 c3       	rjmp	.+1638   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7474:	8f e1       	ldi	r24, 0x1F	; 31
    7476:	8f 19       	sub	r24, r15
    7478:	98 01       	movw	r18, r16
    747a:	28 0f       	add	r18, r24
    747c:	31 1d       	adc	r19, r1
    747e:	2a 15       	cp	r18, r10
    7480:	3b 05       	cpc	r19, r11
    7482:	0c f4       	brge	.+2      	; 0x7486 <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    7484:	29 c1       	rjmp	.+594    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7486:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    748a:	81 30       	cpi	r24, 0x01	; 1
    748c:	09 f0       	breq	.+2      	; 0x7490 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    748e:	25 c3       	rjmp	.+1610   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7490:	6a e2       	ldi	r22, 0x2A	; 42
    7492:	79 e1       	ldi	r23, 0x19	; 25
    7494:	97 cf       	rjmp	.-210    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7496:	91 30       	cpi	r25, 0x01	; 1
    7498:	51 f4       	brne	.+20     	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    749a:	6d e1       	ldi	r22, 0x1D	; 29
    749c:	79 e1       	ldi	r23, 0x19	; 25
    749e:	86 ec       	ldi	r24, 0xC6	; 198
    74a0:	94 e1       	ldi	r25, 0x14	; 20
    74a2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74a6:	86 ec       	ldi	r24, 0xC6	; 198
    74a8:	94 e1       	ldi	r25, 0x14	; 20
    74aa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    74ae:	d8 30       	cpi	r29, 0x08	; 8
    74b0:	09 f0       	breq	.+2      	; 0x74b4 <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    74b2:	13 c3       	rjmp	.+1574   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    74b4:	8f e1       	ldi	r24, 0x1F	; 31
    74b6:	8f 19       	sub	r24, r15
    74b8:	98 01       	movw	r18, r16
    74ba:	28 0f       	add	r18, r24
    74bc:	31 1d       	adc	r19, r1
    74be:	2a 15       	cp	r18, r10
    74c0:	3b 05       	cpc	r19, r11
    74c2:	0c f4       	brge	.+2      	; 0x74c6 <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    74c4:	09 c1       	rjmp	.+530    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    74c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    74ca:	81 30       	cpi	r24, 0x01	; 1
    74cc:	09 f0       	breq	.+2      	; 0x74d0 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    74ce:	05 c3       	rjmp	.+1546   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    74d0:	60 e1       	ldi	r22, 0x10	; 16
    74d2:	79 e1       	ldi	r23, 0x19	; 25
    74d4:	77 cf       	rjmp	.-274    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74d6:	91 30       	cpi	r25, 0x01	; 1
    74d8:	51 f4       	brne	.+20     	; 0x74ee <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    74da:	63 e0       	ldi	r22, 0x03	; 3
    74dc:	79 e1       	ldi	r23, 0x19	; 25
    74de:	86 ec       	ldi	r24, 0xC6	; 198
    74e0:	94 e1       	ldi	r25, 0x14	; 20
    74e2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74e6:	86 ec       	ldi	r24, 0xC6	; 198
    74e8:	94 e1       	ldi	r25, 0x14	; 20
    74ea:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    74ee:	d9 30       	cpi	r29, 0x09	; 9
    74f0:	09 f0       	breq	.+2      	; 0x74f4 <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    74f2:	f3 c2       	rjmp	.+1510   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    74f4:	8f e1       	ldi	r24, 0x1F	; 31
    74f6:	8f 19       	sub	r24, r15
    74f8:	98 01       	movw	r18, r16
    74fa:	28 0f       	add	r18, r24
    74fc:	31 1d       	adc	r19, r1
    74fe:	2a 15       	cp	r18, r10
    7500:	3b 05       	cpc	r19, r11
    7502:	0c f4       	brge	.+2      	; 0x7506 <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    7504:	e9 c0       	rjmp	.+466    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7506:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    750a:	81 30       	cpi	r24, 0x01	; 1
    750c:	09 f0       	breq	.+2      	; 0x7510 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    750e:	e5 c2       	rjmp	.+1482   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7510:	66 ef       	ldi	r22, 0xF6	; 246
    7512:	78 e1       	ldi	r23, 0x18	; 24
    7514:	57 cf       	rjmp	.-338    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7516:	91 30       	cpi	r25, 0x01	; 1
    7518:	51 f4       	brne	.+20     	; 0x752e <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    751a:	69 ee       	ldi	r22, 0xE9	; 233
    751c:	78 e1       	ldi	r23, 0x18	; 24
    751e:	86 ec       	ldi	r24, 0xC6	; 198
    7520:	94 e1       	ldi	r25, 0x14	; 20
    7522:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7526:	86 ec       	ldi	r24, 0xC6	; 198
    7528:	94 e1       	ldi	r25, 0x14	; 20
    752a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    752e:	db 30       	cpi	r29, 0x0B	; 11
    7530:	09 f0       	breq	.+2      	; 0x7534 <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    7532:	d3 c2       	rjmp	.+1446   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7534:	8f e1       	ldi	r24, 0x1F	; 31
    7536:	8f 19       	sub	r24, r15
    7538:	98 01       	movw	r18, r16
    753a:	28 0f       	add	r18, r24
    753c:	31 1d       	adc	r19, r1
    753e:	2a 15       	cp	r18, r10
    7540:	3b 05       	cpc	r19, r11
    7542:	0c f4       	brge	.+2      	; 0x7546 <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    7544:	c9 c0       	rjmp	.+402    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7546:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    754a:	81 30       	cpi	r24, 0x01	; 1
    754c:	09 f0       	breq	.+2      	; 0x7550 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    754e:	c5 c2       	rjmp	.+1418   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7550:	6c ed       	ldi	r22, 0xDC	; 220
    7552:	78 e1       	ldi	r23, 0x18	; 24
    7554:	37 cf       	rjmp	.-402    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    7556:	8e 2d       	mov	r24, r14
    7558:	83 70       	andi	r24, 0x03	; 3
    755a:	01 f1       	breq	.+64     	; 0x759c <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    755c:	91 30       	cpi	r25, 0x01	; 1
    755e:	51 f4       	brne	.+20     	; 0x7574 <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    7560:	6f ec       	ldi	r22, 0xCF	; 207
    7562:	78 e1       	ldi	r23, 0x18	; 24
    7564:	86 ec       	ldi	r24, 0xC6	; 198
    7566:	94 e1       	ldi	r25, 0x14	; 20
    7568:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    756c:	86 ec       	ldi	r24, 0xC6	; 198
    756e:	94 e1       	ldi	r25, 0x14	; 20
    7570:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7574:	d3 30       	cpi	r29, 0x03	; 3
    7576:	09 f0       	breq	.+2      	; 0x757a <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    7578:	b0 c2       	rjmp	.+1376   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    757a:	8c e1       	ldi	r24, 0x1C	; 28
    757c:	8f 19       	sub	r24, r15
    757e:	98 01       	movw	r18, r16
    7580:	28 0f       	add	r18, r24
    7582:	31 1d       	adc	r19, r1
    7584:	2a 15       	cp	r18, r10
    7586:	3b 05       	cpc	r19, r11
    7588:	0c f4       	brge	.+2      	; 0x758c <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    758a:	a6 c0       	rjmp	.+332    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    758c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7590:	81 30       	cpi	r24, 0x01	; 1
    7592:	09 f0       	breq	.+2      	; 0x7596 <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    7594:	a2 c2       	rjmp	.+1348   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    7596:	62 ec       	ldi	r22, 0xC2	; 194
    7598:	78 e1       	ldi	r23, 0x18	; 24
    759a:	14 cf       	rjmp	.-472    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    759c:	91 30       	cpi	r25, 0x01	; 1
    759e:	51 f4       	brne	.+20     	; 0x75b4 <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    75a0:	65 eb       	ldi	r22, 0xB5	; 181
    75a2:	78 e1       	ldi	r23, 0x18	; 24
    75a4:	86 ec       	ldi	r24, 0xC6	; 198
    75a6:	94 e1       	ldi	r25, 0x14	; 20
    75a8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    75ac:	86 ec       	ldi	r24, 0xC6	; 198
    75ae:	94 e1       	ldi	r25, 0x14	; 20
    75b0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    75b4:	d3 30       	cpi	r29, 0x03	; 3
    75b6:	09 f0       	breq	.+2      	; 0x75ba <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    75b8:	90 c2       	rjmp	.+1312   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    75ba:	8d e1       	ldi	r24, 0x1D	; 29
    75bc:	8f 19       	sub	r24, r15
    75be:	98 01       	movw	r18, r16
    75c0:	28 0f       	add	r18, r24
    75c2:	31 1d       	adc	r19, r1
    75c4:	2a 15       	cp	r18, r10
    75c6:	3b 05       	cpc	r19, r11
    75c8:	0c f4       	brge	.+2      	; 0x75cc <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    75ca:	86 c0       	rjmp	.+268    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    75cc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    75d0:	81 30       	cpi	r24, 0x01	; 1
    75d2:	09 f0       	breq	.+2      	; 0x75d6 <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    75d4:	82 c2       	rjmp	.+1284   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    75d6:	68 ea       	ldi	r22, 0xA8	; 168
    75d8:	78 e1       	ldi	r23, 0x18	; 24
    75da:	f4 ce       	rjmp	.-536    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75dc:	91 30       	cpi	r25, 0x01	; 1
    75de:	51 f4       	brne	.+20     	; 0x75f4 <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    75e0:	6b e9       	ldi	r22, 0x9B	; 155
    75e2:	78 e1       	ldi	r23, 0x18	; 24
    75e4:	86 ec       	ldi	r24, 0xC6	; 198
    75e6:	94 e1       	ldi	r25, 0x14	; 20
    75e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75ec:	86 ec       	ldi	r24, 0xC6	; 198
    75ee:	94 e1       	ldi	r25, 0x14	; 20
    75f0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    75f4:	d5 30       	cpi	r29, 0x05	; 5
    75f6:	09 f0       	breq	.+2      	; 0x75fa <_Z22Day_In_Bet_Schedullinghhh+0x422>
    75f8:	70 c2       	rjmp	.+1248   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    75fa:	8e e1       	ldi	r24, 0x1E	; 30
    75fc:	8f 19       	sub	r24, r15
    75fe:	98 01       	movw	r18, r16
    7600:	28 0f       	add	r18, r24
    7602:	31 1d       	adc	r19, r1
    7604:	2a 15       	cp	r18, r10
    7606:	3b 05       	cpc	r19, r11
    7608:	0c f4       	brge	.+2      	; 0x760c <_Z22Day_In_Bet_Schedullinghhh+0x434>
    760a:	66 c0       	rjmp	.+204    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    760c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7610:	81 30       	cpi	r24, 0x01	; 1
    7612:	09 f0       	breq	.+2      	; 0x7616 <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    7614:	62 c2       	rjmp	.+1220   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7616:	6e e8       	ldi	r22, 0x8E	; 142
    7618:	78 e1       	ldi	r23, 0x18	; 24
    761a:	d4 ce       	rjmp	.-600    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    761c:	91 30       	cpi	r25, 0x01	; 1
    761e:	51 f4       	brne	.+20     	; 0x7634 <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7620:	61 e8       	ldi	r22, 0x81	; 129
    7622:	78 e1       	ldi	r23, 0x18	; 24
    7624:	86 ec       	ldi	r24, 0xC6	; 198
    7626:	94 e1       	ldi	r25, 0x14	; 20
    7628:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    762c:	86 ec       	ldi	r24, 0xC6	; 198
    762e:	94 e1       	ldi	r25, 0x14	; 20
    7630:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    7634:	d7 30       	cpi	r29, 0x07	; 7
    7636:	09 f0       	breq	.+2      	; 0x763a <_Z22Day_In_Bet_Schedullinghhh+0x462>
    7638:	50 c2       	rjmp	.+1184   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    763a:	8e e1       	ldi	r24, 0x1E	; 30
    763c:	8f 19       	sub	r24, r15
    763e:	98 01       	movw	r18, r16
    7640:	28 0f       	add	r18, r24
    7642:	31 1d       	adc	r19, r1
    7644:	2a 15       	cp	r18, r10
    7646:	3b 05       	cpc	r19, r11
    7648:	0c f4       	brge	.+2      	; 0x764c <_Z22Day_In_Bet_Schedullinghhh+0x474>
    764a:	46 c0       	rjmp	.+140    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    764c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7650:	81 30       	cpi	r24, 0x01	; 1
    7652:	09 f0       	breq	.+2      	; 0x7656 <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    7654:	42 c2       	rjmp	.+1156   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7656:	64 e7       	ldi	r22, 0x74	; 116
    7658:	78 e1       	ldi	r23, 0x18	; 24
    765a:	b4 ce       	rjmp	.-664    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    765c:	91 30       	cpi	r25, 0x01	; 1
    765e:	51 f4       	brne	.+20     	; 0x7674 <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7660:	67 e6       	ldi	r22, 0x67	; 103
    7662:	78 e1       	ldi	r23, 0x18	; 24
    7664:	86 ec       	ldi	r24, 0xC6	; 198
    7666:	94 e1       	ldi	r25, 0x14	; 20
    7668:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    766c:	86 ec       	ldi	r24, 0xC6	; 198
    766e:	94 e1       	ldi	r25, 0x14	; 20
    7670:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7674:	da 30       	cpi	r29, 0x0A	; 10
    7676:	09 f0       	breq	.+2      	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    7678:	30 c2       	rjmp	.+1120   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    767a:	8e e1       	ldi	r24, 0x1E	; 30
    767c:	8f 19       	sub	r24, r15
    767e:	98 01       	movw	r18, r16
    7680:	28 0f       	add	r18, r24
    7682:	31 1d       	adc	r19, r1
    7684:	2a 15       	cp	r18, r10
    7686:	3b 05       	cpc	r19, r11
    7688:	3c f1       	brlt	.+78     	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    768a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    768e:	81 30       	cpi	r24, 0x01	; 1
    7690:	09 f0       	breq	.+2      	; 0x7694 <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7692:	23 c2       	rjmp	.+1094   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7694:	6a e5       	ldi	r22, 0x5A	; 90
    7696:	78 e1       	ldi	r23, 0x18	; 24
    7698:	95 ce       	rjmp	.-726    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    769a:	91 30       	cpi	r25, 0x01	; 1
    769c:	51 f4       	brne	.+20     	; 0x76b2 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    769e:	6d e4       	ldi	r22, 0x4D	; 77
    76a0:	78 e1       	ldi	r23, 0x18	; 24
    76a2:	86 ec       	ldi	r24, 0xC6	; 198
    76a4:	94 e1       	ldi	r25, 0x14	; 20
    76a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    76aa:	86 ec       	ldi	r24, 0xC6	; 198
    76ac:	94 e1       	ldi	r25, 0x14	; 20
    76ae:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    76b2:	dc 30       	cpi	r29, 0x0C	; 12
    76b4:	09 f0       	breq	.+2      	; 0x76b8 <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    76b6:	11 c2       	rjmp	.+1058   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    76b8:	8e e1       	ldi	r24, 0x1E	; 30
    76ba:	8f 19       	sub	r24, r15
    76bc:	98 01       	movw	r18, r16
    76be:	28 0f       	add	r18, r24
    76c0:	31 1d       	adc	r19, r1
    76c2:	2a 15       	cp	r18, r10
    76c4:	3b 05       	cpc	r19, r11
    76c6:	44 f0       	brlt	.+16     	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76cc:	81 30       	cpi	r24, 0x01	; 1
    76ce:	09 f0       	breq	.+2      	; 0x76d2 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    76d0:	04 c2       	rjmp	.+1032   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    76d2:	60 e4       	ldi	r22, 0x40	; 64
    76d4:	78 e1       	ldi	r23, 0x18	; 24
    76d6:	76 ce       	rjmp	.-788    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    76d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76dc:	81 30       	cpi	r24, 0x01	; 1
    76de:	21 f5       	brne	.+72     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    76e0:	62 e3       	ldi	r22, 0x32	; 50
    76e2:	78 e1       	ldi	r23, 0x18	; 24
    76e4:	04 c0       	rjmp	.+8      	; 0x76ee <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    76e6:	91 30       	cpi	r25, 0x01	; 1
    76e8:	f9 f4       	brne	.+62     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    76ea:	64 e2       	ldi	r22, 0x24	; 36
    76ec:	78 e1       	ldi	r23, 0x18	; 24
    76ee:	86 ec       	ldi	r24, 0xC6	; 198
    76f0:	94 e1       	ldi	r25, 0x14	; 20
    76f2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    76f6:	86 ec       	ldi	r24, 0xC6	; 198
    76f8:	94 e1       	ldi	r25, 0x14	; 20
    76fa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
	//printf("\n");
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    76fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7702:	81 30       	cpi	r24, 0x01	; 1
    7704:	89 f4       	brne	.+34     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    7706:	6e e0       	ldi	r22, 0x0E	; 14
    7708:	78 e1       	ldi	r23, 0x18	; 24
    770a:	86 ec       	ldi	r24, 0xC6	; 198
    770c:	94 e1       	ldi	r25, 0x14	; 20
    770e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7712:	4a e0       	ldi	r20, 0x0A	; 10
    7714:	50 e0       	ldi	r21, 0x00	; 0
    7716:	6c 2d       	mov	r22, r12
    7718:	86 ec       	ldi	r24, 0xC6	; 198
    771a:	94 e1       	ldi	r25, 0x14	; 20
    771c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7720:	86 ec       	ldi	r24, 0xC6	; 198
    7722:	94 e1       	ldi	r25, 0x14	; 20
    7724:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    7728:	d1 2c       	mov	r13, r1
    772a:	8c 0c       	add	r8, r12
    772c:	9d 1c       	adc	r9, r13
    772e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7732:	08 15       	cp	r16, r8
    7734:	19 05       	cpc	r17, r9
    7736:	4c f0       	brlt	.+18     	; 0x774a <_Z22Day_In_Bet_Schedullinghhh+0x572>
    7738:	d7 11       	cpse	r29, r7
    773a:	0a c0       	rjmp	.+20     	; 0x7750 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    773c:	c1 30       	cpi	r28, 0x01	; 1
    773e:	11 f0       	breq	.+4      	; 0x7744 <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 1;
    7740:	c1 e0       	ldi	r28, 0x01	; 1
    7742:	ce c1       	rjmp	.+924    	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    7744:	6f ef       	ldi	r22, 0xFF	; 255
    7746:	77 e1       	ldi	r23, 0x17	; 23
    7748:	84 c1       	rjmp	.+776    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    774a:	d7 15       	cp	r29, r7
    774c:	09 f4       	brne	.+2      	; 0x7750 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    774e:	b7 c1       	rjmp	.+878    	; 0x7abe <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    7750:	47 2d       	mov	r20, r7
    7752:	50 e0       	ldi	r21, 0x00	; 0
    7754:	fa 01       	movw	r30, r20
    7756:	31 97       	sbiw	r30, 0x01	; 1
    7758:	ec 30       	cpi	r30, 0x0C	; 12
    775a:	f1 05       	cpc	r31, r1
    775c:	08 f0       	brcs	.+2      	; 0x7760 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    775e:	a0 c1       	rjmp	.+832    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    7760:	88 27       	eor	r24, r24
    7762:	eb 53       	subi	r30, 0x3B	; 59
    7764:	ff 4f       	sbci	r31, 0xFF	; 255
    7766:	8f 4f       	sbci	r24, 0xFF	; 255
    7768:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    776c:	c1 30       	cpi	r28, 0x01	; 1
    776e:	51 f4       	brne	.+20     	; 0x7784 <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7770:	60 ef       	ldi	r22, 0xF0	; 240
    7772:	77 e1       	ldi	r23, 0x17	; 23
    7774:	86 ec       	ldi	r24, 0xC6	; 198
    7776:	94 e1       	ldi	r25, 0x14	; 20
    7778:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    777c:	86 ec       	ldi	r24, 0xC6	; 198
    777e:	94 e1       	ldi	r25, 0x14	; 20
    7780:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7784:	d1 30       	cpi	r29, 0x01	; 1
    7786:	e1 f6       	brne	.-72     	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7788:	8f e1       	ldi	r24, 0x1F	; 31
    778a:	8f 19       	sub	r24, r15
    778c:	08 0f       	add	r16, r24
    778e:	11 1d       	adc	r17, r1
    7790:	0c 15       	cp	r16, r12
    7792:	1d 05       	cpc	r17, r13
    7794:	0c f4       	brge	.+2      	; 0x7798 <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    7796:	84 c1       	rjmp	.+776    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7798:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    779c:	c1 30       	cpi	r28, 0x01	; 1
    779e:	81 f6       	brne	.-96     	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77a0:	61 ee       	ldi	r22, 0xE1	; 225
    77a2:	77 e1       	ldi	r23, 0x17	; 23
    77a4:	56 c1       	rjmp	.+684    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77a6:	c1 30       	cpi	r28, 0x01	; 1
    77a8:	51 f4       	brne	.+20     	; 0x77be <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    77aa:	62 ed       	ldi	r22, 0xD2	; 210
    77ac:	77 e1       	ldi	r23, 0x17	; 23
    77ae:	86 ec       	ldi	r24, 0xC6	; 198
    77b0:	94 e1       	ldi	r25, 0x14	; 20
    77b2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77b6:	86 ec       	ldi	r24, 0xC6	; 198
    77b8:	94 e1       	ldi	r25, 0x14	; 20
    77ba:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    77be:	d2 30       	cpi	r29, 0x02	; 2
    77c0:	09 f0       	breq	.+2      	; 0x77c4 <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    77c2:	be cf       	rjmp	.-132    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77c4:	8f e1       	ldi	r24, 0x1F	; 31
    77c6:	8f 19       	sub	r24, r15
    77c8:	08 0f       	add	r16, r24
    77ca:	11 1d       	adc	r17, r1
    77cc:	0c 15       	cp	r16, r12
    77ce:	1d 05       	cpc	r17, r13
    77d0:	0c f4       	brge	.+2      	; 0x77d4 <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    77d2:	66 c1       	rjmp	.+716    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77d4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    77d8:	c1 30       	cpi	r28, 0x01	; 1
    77da:	09 f0       	breq	.+2      	; 0x77de <_Z22Day_In_Bet_Schedullinghhh+0x606>
    77dc:	b1 cf       	rjmp	.-158    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77de:	63 ec       	ldi	r22, 0xC3	; 195
    77e0:	77 e1       	ldi	r23, 0x17	; 23
    77e2:	37 c1       	rjmp	.+622    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77e4:	c1 30       	cpi	r28, 0x01	; 1
    77e6:	51 f4       	brne	.+20     	; 0x77fc <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    77e8:	64 eb       	ldi	r22, 0xB4	; 180
    77ea:	77 e1       	ldi	r23, 0x17	; 23
    77ec:	86 ec       	ldi	r24, 0xC6	; 198
    77ee:	94 e1       	ldi	r25, 0x14	; 20
    77f0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77f4:	86 ec       	ldi	r24, 0xC6	; 198
    77f6:	94 e1       	ldi	r25, 0x14	; 20
    77f8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    77fc:	d4 30       	cpi	r29, 0x04	; 4
    77fe:	09 f0       	breq	.+2      	; 0x7802 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    7800:	9f cf       	rjmp	.-194    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7802:	8f e1       	ldi	r24, 0x1F	; 31
    7804:	8f 19       	sub	r24, r15
    7806:	08 0f       	add	r16, r24
    7808:	11 1d       	adc	r17, r1
    780a:	0c 15       	cp	r16, r12
    780c:	1d 05       	cpc	r17, r13
    780e:	0c f4       	brge	.+2      	; 0x7812 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    7810:	47 c1       	rjmp	.+654    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7812:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7816:	c1 30       	cpi	r28, 0x01	; 1
    7818:	09 f0       	breq	.+2      	; 0x781c <_Z22Day_In_Bet_Schedullinghhh+0x644>
    781a:	92 cf       	rjmp	.-220    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    781c:	65 ea       	ldi	r22, 0xA5	; 165
    781e:	77 e1       	ldi	r23, 0x17	; 23
    7820:	18 c1       	rjmp	.+560    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7822:	c1 30       	cpi	r28, 0x01	; 1
    7824:	51 f4       	brne	.+20     	; 0x783a <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7826:	66 e9       	ldi	r22, 0x96	; 150
    7828:	77 e1       	ldi	r23, 0x17	; 23
    782a:	86 ec       	ldi	r24, 0xC6	; 198
    782c:	94 e1       	ldi	r25, 0x14	; 20
    782e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7832:	86 ec       	ldi	r24, 0xC6	; 198
    7834:	94 e1       	ldi	r25, 0x14	; 20
    7836:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    783a:	d6 30       	cpi	r29, 0x06	; 6
    783c:	09 f0       	breq	.+2      	; 0x7840 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    783e:	80 cf       	rjmp	.-256    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7840:	8f e1       	ldi	r24, 0x1F	; 31
    7842:	8f 19       	sub	r24, r15
    7844:	08 0f       	add	r16, r24
    7846:	11 1d       	adc	r17, r1
    7848:	0c 15       	cp	r16, r12
    784a:	1d 05       	cpc	r17, r13
    784c:	0c f4       	brge	.+2      	; 0x7850 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    784e:	28 c1       	rjmp	.+592    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7850:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7854:	c1 30       	cpi	r28, 0x01	; 1
    7856:	09 f0       	breq	.+2      	; 0x785a <_Z22Day_In_Bet_Schedullinghhh+0x682>
    7858:	73 cf       	rjmp	.-282    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    785a:	67 e8       	ldi	r22, 0x87	; 135
    785c:	77 e1       	ldi	r23, 0x17	; 23
    785e:	f9 c0       	rjmp	.+498    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7860:	c1 30       	cpi	r28, 0x01	; 1
    7862:	51 f4       	brne	.+20     	; 0x7878 <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7864:	68 e7       	ldi	r22, 0x78	; 120
    7866:	77 e1       	ldi	r23, 0x17	; 23
    7868:	86 ec       	ldi	r24, 0xC6	; 198
    786a:	94 e1       	ldi	r25, 0x14	; 20
    786c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7870:	86 ec       	ldi	r24, 0xC6	; 198
    7872:	94 e1       	ldi	r25, 0x14	; 20
    7874:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    7878:	d8 30       	cpi	r29, 0x08	; 8
    787a:	09 f0       	breq	.+2      	; 0x787e <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    787c:	61 cf       	rjmp	.-318    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    787e:	8f e1       	ldi	r24, 0x1F	; 31
    7880:	8f 19       	sub	r24, r15
    7882:	08 0f       	add	r16, r24
    7884:	11 1d       	adc	r17, r1
    7886:	0c 15       	cp	r16, r12
    7888:	1d 05       	cpc	r17, r13
    788a:	0c f4       	brge	.+2      	; 0x788e <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    788c:	09 c1       	rjmp	.+530    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    788e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7892:	c1 30       	cpi	r28, 0x01	; 1
    7894:	09 f0       	breq	.+2      	; 0x7898 <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    7896:	54 cf       	rjmp	.-344    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7898:	69 e6       	ldi	r22, 0x69	; 105
    789a:	77 e1       	ldi	r23, 0x17	; 23
    789c:	da c0       	rjmp	.+436    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    789e:	c1 30       	cpi	r28, 0x01	; 1
    78a0:	51 f4       	brne	.+20     	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    78a2:	6a e5       	ldi	r22, 0x5A	; 90
    78a4:	77 e1       	ldi	r23, 0x17	; 23
    78a6:	86 ec       	ldi	r24, 0xC6	; 198
    78a8:	94 e1       	ldi	r25, 0x14	; 20
    78aa:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    78ae:	86 ec       	ldi	r24, 0xC6	; 198
    78b0:	94 e1       	ldi	r25, 0x14	; 20
    78b2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    78b6:	d9 30       	cpi	r29, 0x09	; 9
    78b8:	09 f0       	breq	.+2      	; 0x78bc <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    78ba:	42 cf       	rjmp	.-380    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    78bc:	8f e1       	ldi	r24, 0x1F	; 31
    78be:	8f 19       	sub	r24, r15
    78c0:	08 0f       	add	r16, r24
    78c2:	11 1d       	adc	r17, r1
    78c4:	0c 15       	cp	r16, r12
    78c6:	1d 05       	cpc	r17, r13
    78c8:	0c f4       	brge	.+2      	; 0x78cc <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    78ca:	ea c0       	rjmp	.+468    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    78cc:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    78d0:	c1 30       	cpi	r28, 0x01	; 1
    78d2:	09 f0       	breq	.+2      	; 0x78d6 <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    78d4:	35 cf       	rjmp	.-406    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    78d6:	6b e4       	ldi	r22, 0x4B	; 75
    78d8:	77 e1       	ldi	r23, 0x17	; 23
    78da:	bb c0       	rjmp	.+374    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    78dc:	c1 30       	cpi	r28, 0x01	; 1
    78de:	51 f4       	brne	.+20     	; 0x78f4 <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    78e0:	6c e3       	ldi	r22, 0x3C	; 60
    78e2:	77 e1       	ldi	r23, 0x17	; 23
    78e4:	86 ec       	ldi	r24, 0xC6	; 198
    78e6:	94 e1       	ldi	r25, 0x14	; 20
    78e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    78ec:	86 ec       	ldi	r24, 0xC6	; 198
    78ee:	94 e1       	ldi	r25, 0x14	; 20
    78f0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    78f4:	db 30       	cpi	r29, 0x0B	; 11
    78f6:	09 f0       	breq	.+2      	; 0x78fa <_Z22Day_In_Bet_Schedullinghhh+0x722>
    78f8:	23 cf       	rjmp	.-442    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    78fa:	8f e1       	ldi	r24, 0x1F	; 31
    78fc:	8f 19       	sub	r24, r15
    78fe:	08 0f       	add	r16, r24
    7900:	11 1d       	adc	r17, r1
    7902:	0c 15       	cp	r16, r12
    7904:	1d 05       	cpc	r17, r13
    7906:	0c f4       	brge	.+2      	; 0x790a <_Z22Day_In_Bet_Schedullinghhh+0x732>
    7908:	cb c0       	rjmp	.+406    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    790a:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    790e:	c1 30       	cpi	r28, 0x01	; 1
    7910:	09 f0       	breq	.+2      	; 0x7914 <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    7912:	16 cf       	rjmp	.-468    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7914:	6d e2       	ldi	r22, 0x2D	; 45
    7916:	77 e1       	ldi	r23, 0x17	; 23
    7918:	9c c0       	rjmp	.+312    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    791a:	8e 2d       	mov	r24, r14
    791c:	83 70       	andi	r24, 0x03	; 3
    791e:	f9 f0       	breq	.+62     	; 0x795e <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7920:	c1 30       	cpi	r28, 0x01	; 1
    7922:	51 f4       	brne	.+20     	; 0x7938 <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    7924:	6e e1       	ldi	r22, 0x1E	; 30
    7926:	77 e1       	ldi	r23, 0x17	; 23
    7928:	86 ec       	ldi	r24, 0xC6	; 198
    792a:	94 e1       	ldi	r25, 0x14	; 20
    792c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7930:	86 ec       	ldi	r24, 0xC6	; 198
    7932:	94 e1       	ldi	r25, 0x14	; 20
    7934:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7938:	d3 30       	cpi	r29, 0x03	; 3
    793a:	09 f0       	breq	.+2      	; 0x793e <_Z22Day_In_Bet_Schedullinghhh+0x766>
    793c:	01 cf       	rjmp	.-510    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    793e:	8c e1       	ldi	r24, 0x1C	; 28
    7940:	8f 19       	sub	r24, r15
    7942:	08 0f       	add	r16, r24
    7944:	11 1d       	adc	r17, r1
    7946:	0c 15       	cp	r16, r12
    7948:	1d 05       	cpc	r17, r13
    794a:	0c f4       	brge	.+2      	; 0x794e <_Z22Day_In_Bet_Schedullinghhh+0x776>
    794c:	a9 c0       	rjmp	.+338    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    794e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7952:	c1 30       	cpi	r28, 0x01	; 1
    7954:	09 f0       	breq	.+2      	; 0x7958 <_Z22Day_In_Bet_Schedullinghhh+0x780>
    7956:	f4 ce       	rjmp	.-536    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    7958:	6f e0       	ldi	r22, 0x0F	; 15
    795a:	77 e1       	ldi	r23, 0x17	; 23
    795c:	7a c0       	rjmp	.+244    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    795e:	c1 30       	cpi	r28, 0x01	; 1
    7960:	51 f4       	brne	.+20     	; 0x7976 <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    7962:	60 e0       	ldi	r22, 0x00	; 0
    7964:	77 e1       	ldi	r23, 0x17	; 23
    7966:	86 ec       	ldi	r24, 0xC6	; 198
    7968:	94 e1       	ldi	r25, 0x14	; 20
    796a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    796e:	86 ec       	ldi	r24, 0xC6	; 198
    7970:	94 e1       	ldi	r25, 0x14	; 20
    7972:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7976:	d3 30       	cpi	r29, 0x03	; 3
    7978:	09 f0       	breq	.+2      	; 0x797c <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    797a:	e2 ce       	rjmp	.-572    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    797c:	8d e1       	ldi	r24, 0x1D	; 29
    797e:	8f 19       	sub	r24, r15
    7980:	08 0f       	add	r16, r24
    7982:	11 1d       	adc	r17, r1
    7984:	0c 15       	cp	r16, r12
    7986:	1d 05       	cpc	r17, r13
    7988:	0c f4       	brge	.+2      	; 0x798c <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    798a:	8a c0       	rjmp	.+276    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    798c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7990:	c1 30       	cpi	r28, 0x01	; 1
    7992:	09 f0       	breq	.+2      	; 0x7996 <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    7994:	d5 ce       	rjmp	.-598    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    7996:	61 ef       	ldi	r22, 0xF1	; 241
    7998:	76 e1       	ldi	r23, 0x16	; 22
    799a:	5b c0       	rjmp	.+182    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    799c:	c1 30       	cpi	r28, 0x01	; 1
    799e:	51 f4       	brne	.+20     	; 0x79b4 <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    79a0:	62 ee       	ldi	r22, 0xE2	; 226
    79a2:	76 e1       	ldi	r23, 0x16	; 22
    79a4:	86 ec       	ldi	r24, 0xC6	; 198
    79a6:	94 e1       	ldi	r25, 0x14	; 20
    79a8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    79ac:	86 ec       	ldi	r24, 0xC6	; 198
    79ae:	94 e1       	ldi	r25, 0x14	; 20
    79b0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    79b4:	d5 30       	cpi	r29, 0x05	; 5
    79b6:	09 f0       	breq	.+2      	; 0x79ba <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    79b8:	c3 ce       	rjmp	.-634    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    79ba:	8e e1       	ldi	r24, 0x1E	; 30
    79bc:	8f 19       	sub	r24, r15
    79be:	08 0f       	add	r16, r24
    79c0:	11 1d       	adc	r17, r1
    79c2:	0c 15       	cp	r16, r12
    79c4:	1d 05       	cpc	r17, r13
    79c6:	0c f4       	brge	.+2      	; 0x79ca <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    79c8:	6b c0       	rjmp	.+214    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    79ca:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    79ce:	c1 30       	cpi	r28, 0x01	; 1
    79d0:	09 f0       	breq	.+2      	; 0x79d4 <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    79d2:	b6 ce       	rjmp	.-660    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    79d4:	63 ed       	ldi	r22, 0xD3	; 211
    79d6:	76 e1       	ldi	r23, 0x16	; 22
    79d8:	3c c0       	rjmp	.+120    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    79da:	c1 30       	cpi	r28, 0x01	; 1
    79dc:	51 f4       	brne	.+20     	; 0x79f2 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    79de:	66 ec       	ldi	r22, 0xC6	; 198
    79e0:	76 e1       	ldi	r23, 0x16	; 22
    79e2:	86 ec       	ldi	r24, 0xC6	; 198
    79e4:	94 e1       	ldi	r25, 0x14	; 20
    79e6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    79ea:	86 ec       	ldi	r24, 0xC6	; 198
    79ec:	94 e1       	ldi	r25, 0x14	; 20
    79ee:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    79f2:	d7 30       	cpi	r29, 0x07	; 7
    79f4:	09 f0       	breq	.+2      	; 0x79f8 <_Z22Day_In_Bet_Schedullinghhh+0x820>
    79f6:	a4 ce       	rjmp	.-696    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    79f8:	8e e1       	ldi	r24, 0x1E	; 30
    79fa:	8f 19       	sub	r24, r15
    79fc:	08 0f       	add	r16, r24
    79fe:	11 1d       	adc	r17, r1
    7a00:	0c 15       	cp	r16, r12
    7a02:	1d 05       	cpc	r17, r13
    7a04:	0c f4       	brge	.+2      	; 0x7a08 <_Z22Day_In_Bet_Schedullinghhh+0x830>
    7a06:	4c c0       	rjmp	.+152    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a08:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a0c:	c1 30       	cpi	r28, 0x01	; 1
    7a0e:	09 f0       	breq	.+2      	; 0x7a12 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    7a10:	97 ce       	rjmp	.-722    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a12:	67 eb       	ldi	r22, 0xB7	; 183
    7a14:	76 e1       	ldi	r23, 0x16	; 22
    7a16:	1d c0       	rjmp	.+58     	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a18:	c1 30       	cpi	r28, 0x01	; 1
    7a1a:	51 f4       	brne	.+20     	; 0x7a30 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7a1c:	6a ea       	ldi	r22, 0xAA	; 170
    7a1e:	76 e1       	ldi	r23, 0x16	; 22
    7a20:	86 ec       	ldi	r24, 0xC6	; 198
    7a22:	94 e1       	ldi	r25, 0x14	; 20
    7a24:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7a28:	86 ec       	ldi	r24, 0xC6	; 198
    7a2a:	94 e1       	ldi	r25, 0x14	; 20
    7a2c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7a30:	da 30       	cpi	r29, 0x0A	; 10
    7a32:	09 f0       	breq	.+2      	; 0x7a36 <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    7a34:	85 ce       	rjmp	.-758    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7a36:	8e e1       	ldi	r24, 0x1E	; 30
    7a38:	8f 19       	sub	r24, r15
    7a3a:	08 0f       	add	r16, r24
    7a3c:	11 1d       	adc	r17, r1
    7a3e:	0c 15       	cp	r16, r12
    7a40:	1d 05       	cpc	r17, r13
    7a42:	74 f1       	brlt	.+92     	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a44:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a48:	c1 30       	cpi	r28, 0x01	; 1
    7a4a:	09 f0       	breq	.+2      	; 0x7a4e <_Z22Day_In_Bet_Schedullinghhh+0x876>
    7a4c:	79 ce       	rjmp	.-782    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a4e:	6b e9       	ldi	r22, 0x9B	; 155
    7a50:	76 e1       	ldi	r23, 0x16	; 22
    7a52:	86 ec       	ldi	r24, 0xC6	; 198
    7a54:	94 e1       	ldi	r25, 0x14	; 20
    7a56:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    7a5a:	86 ec       	ldi	r24, 0xC6	; 198
    7a5c:	94 e1       	ldi	r25, 0x14	; 20
    7a5e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    7a62:	3e c0       	rjmp	.+124    	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a64:	c1 30       	cpi	r28, 0x01	; 1
    7a66:	51 f4       	brne	.+20     	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7a68:	6c e8       	ldi	r22, 0x8C	; 140
    7a6a:	76 e1       	ldi	r23, 0x16	; 22
    7a6c:	86 ec       	ldi	r24, 0xC6	; 198
    7a6e:	94 e1       	ldi	r25, 0x14	; 20
    7a70:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7a74:	86 ec       	ldi	r24, 0xC6	; 198
    7a76:	94 e1       	ldi	r25, 0x14	; 20
    7a78:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7a7c:	dc 30       	cpi	r29, 0x0C	; 12
    7a7e:	09 f0       	breq	.+2      	; 0x7a82 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    7a80:	5f ce       	rjmp	.-834    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7a82:	8e e1       	ldi	r24, 0x1E	; 30
    7a84:	8f 19       	sub	r24, r15
    7a86:	08 0f       	add	r16, r24
    7a88:	11 1d       	adc	r17, r1
    7a8a:	0c 15       	cp	r16, r12
    7a8c:	1d 05       	cpc	r17, r13
    7a8e:	44 f0       	brlt	.+16     	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a90:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a94:	c1 30       	cpi	r28, 0x01	; 1
    7a96:	09 f0       	breq	.+2      	; 0x7a9a <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    7a98:	53 ce       	rjmp	.-858    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a9a:	6d e7       	ldi	r22, 0x7D	; 125
    7a9c:	76 e1       	ldi	r23, 0x16	; 22
    7a9e:	d9 cf       	rjmp	.-78     	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7aa0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7aa4:	81 30       	cpi	r24, 0x01	; 1
    7aa6:	c1 f4       	brne	.+48     	; 0x7ad8 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    7aa8:	6d e6       	ldi	r22, 0x6D	; 109
    7aaa:	76 e1       	ldi	r23, 0x16	; 22
    7aac:	86 ec       	ldi	r24, 0xC6	; 198
    7aae:	94 e1       	ldi	r25, 0x14	; 20
    7ab0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7ab4:	86 ec       	ldi	r24, 0xC6	; 198
    7ab6:	94 e1       	ldi	r25, 0x14	; 20
    7ab8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    7abc:	0d c0       	rjmp	.+26     	; 0x7ad8 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7abe:	c1 30       	cpi	r28, 0x01	; 1
    7ac0:	71 f4       	brne	.+28     	; 0x7ade <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7ac2:	6d e5       	ldi	r22, 0x5D	; 93
    7ac4:	76 e1       	ldi	r23, 0x16	; 22
    7ac6:	86 ec       	ldi	r24, 0xC6	; 198
    7ac8:	94 e1       	ldi	r25, 0x14	; 20
    7aca:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7ace:	86 ec       	ldi	r24, 0xC6	; 198
    7ad0:	94 e1       	ldi	r25, 0x14	; 20
    7ad2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    7ad6:	03 c0       	rjmp	.+6      	; 0x7ade <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}	
    7ad8:	04 c0       	rjmp	.+8      	; 0x7ae2 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    7ada:	c2 e0       	ldi	r28, 0x02	; 2
    7adc:	01 c0       	rjmp	.+2      	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			//printf("deny 4");
			return 0;
    7ade:	c0 e0       	ldi	r28, 0x00	; 0
    7ae0:	8c 2f       	mov	r24, r28
		}
		
	}
	
}	
    7ae2:	df 91       	pop	r29
    7ae4:	cf 91       	pop	r28
    7ae6:	1f 91       	pop	r17
    7ae8:	0f 91       	pop	r16
    7aea:	ff 90       	pop	r15
    7aec:	ef 90       	pop	r14
    7aee:	df 90       	pop	r13
    7af0:	cf 90       	pop	r12
    7af2:	bf 90       	pop	r11
    7af4:	af 90       	pop	r10
    7af6:	9f 90       	pop	r9
    7af8:	8f 90       	pop	r8
    7afa:	7f 90       	pop	r7
    7afc:	08 95       	ret

00007afe <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    7afe:	8f 92       	push	r8
    7b00:	9f 92       	push	r9
    7b02:	af 92       	push	r10
    7b04:	bf 92       	push	r11
    7b06:	cf 92       	push	r12
    7b08:	df 92       	push	r13
    7b0a:	ef 92       	push	r14
    7b0c:	ff 92       	push	r15
    7b0e:	0f 93       	push	r16
    7b10:	1f 93       	push	r17
    7b12:	cf 93       	push	r28
    7b14:	df 93       	push	r29
    7b16:	cd b7       	in	r28, 0x3d	; 61
    7b18:	de b7       	in	r29, 0x3e	; 62
    7b1a:	aa 97       	sbiw	r28, 0x2a	; 42
    7b1c:	0f b6       	in	r0, 0x3f	; 63
    7b1e:	f8 94       	cli
    7b20:	de bf       	out	0x3e, r29	; 62
    7b22:	0f be       	out	0x3f, r0	; 63
    7b24:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    7b26:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    7b2a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    7b2e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    7b32:	9e 01       	movw	r18, r28
    7b34:	2f 5f       	subi	r18, 0xFF	; 255
    7b36:	3f 4f       	sbci	r19, 0xFF	; 255
    7b38:	69 01       	movw	r12, r18
    7b3a:	ce 01       	movw	r24, r28
    7b3c:	8b 96       	adiw	r24, 0x2b	; 43
    7b3e:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    7b40:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
    7b42:	e8 17       	cp	r30, r24
    7b44:	f9 07       	cpc	r31, r25
    7b46:	e1 f7       	brne	.-8      	; 0x7b40 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    7b48:	20 e0       	ldi	r18, 0x00	; 0
    7b4a:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    7b4c:	21 15       	cp	r18, r1
    7b4e:	31 05       	cpc	r19, r1
    7b50:	39 f4       	brne	.+14     	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    7b52:	89 81       	ldd	r24, Y+1	; 0x01
    7b54:	81 11       	cpse	r24, r1
    7b56:	1a c0       	rjmp	.+52     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7b58:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <_sSchedules+0x7a>
    7b5c:	89 83       	std	Y+1, r24	; 0x01
    7b5e:	16 c0       	rjmp	.+44     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    7b60:	f6 01       	movw	r30, r12
    7b62:	80 e0       	ldi	r24, 0x00	; 0
    7b64:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    7b66:	d9 01       	movw	r26, r18
    7b68:	a8 56       	subi	r26, 0x68	; 104
    7b6a:	b6 4f       	sbci	r27, 0xF6	; 246
    7b6c:	41 91       	ld	r20, Z+
    7b6e:	5c 91       	ld	r21, X
    7b70:	45 17       	cp	r20, r21
    7b72:	61 f0       	breq	.+24     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    7b74:	41 11       	cpse	r20, r1
    7b76:	06 c0       	rjmp	.+12     	; 0x7b84 <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7b78:	4c 91       	ld	r20, X
    7b7a:	f6 01       	movw	r30, r12
    7b7c:	e8 0f       	add	r30, r24
    7b7e:	f9 1f       	adc	r31, r25
    7b80:	40 83       	st	Z, r20
					break;
    7b82:	04 c0       	rjmp	.+8      	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
    7b84:	01 96       	adiw	r24, 0x01	; 1
    7b86:	8a 32       	cpi	r24, 0x2A	; 42
    7b88:	91 05       	cpc	r25, r1
    7b8a:	81 f7       	brne	.-32     	; 0x7b6c <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
    7b8c:	2f 5f       	subi	r18, 0xFF	; 255
    7b8e:	3f 4f       	sbci	r19, 0xFF	; 255
    7b90:	2a 32       	cpi	r18, 0x2A	; 42
    7b92:	31 05       	cpc	r19, r1
    7b94:	d9 f6       	brne	.-74     	; 0x7b4c <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7b96:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7b9a:	81 30       	cpi	r24, 0x01	; 1
    7b9c:	51 f4       	brne	.+20     	; 0x7bb2 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    7b9e:	68 e3       	ldi	r22, 0x38	; 56
    7ba0:	7f e0       	ldi	r23, 0x0F	; 15
    7ba2:	86 ec       	ldi	r24, 0xC6	; 198
    7ba4:	94 e1       	ldi	r25, 0x14	; 20
    7ba6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7baa:	86 ec       	ldi	r24, 0xC6	; 198
    7bac:	94 e1       	ldi	r25, 0x14	; 20
    7bae:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7bb2:	8b e1       	ldi	r24, 0x1B	; 27
    7bb4:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7bb6:	92 e0       	ldi	r25, 0x02	; 2
    7bb8:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7bba:	25 e0       	ldi	r18, 0x05	; 5
    7bbc:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7bbe:	f6 01       	movw	r30, r12
    7bc0:	f1 90       	ld	r15, Z+
    7bc2:	6f 01       	movw	r12, r30
    7bc4:	ff 20       	and	r15, r15
    7bc6:	09 f4       	brne	.+2      	; 0x7bca <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    7bc8:	4c c0       	rjmp	.+152    	; 0x7c62 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    7bca:	4a e0       	ldi	r20, 0x0A	; 10
    7bcc:	50 e0       	ldi	r21, 0x00	; 0
    7bce:	6f 2d       	mov	r22, r15
    7bd0:	86 ec       	ldi	r24, 0xC6	; 198
    7bd2:	94 e1       	ldi	r25, 0x14	; 20
    7bd4:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7bd8:	0f 2d       	mov	r16, r15
    7bda:	10 e0       	ldi	r17, 0x00	; 0
    7bdc:	05 56       	subi	r16, 0x65	; 101
    7bde:	11 09       	sbc	r17, r1
    7be0:	e0 9e       	mul	r14, r16
    7be2:	c0 01       	movw	r24, r0
    7be4:	e1 9e       	mul	r14, r17
    7be6:	90 0d       	add	r25, r0
    7be8:	11 24       	eor	r1, r1
    7bea:	9c 01       	movw	r18, r24
    7bec:	28 51       	subi	r18, 0x18	; 24
    7bee:	32 4f       	sbci	r19, 0xF2	; 242
    7bf0:	59 01       	movw	r10, r18
    7bf2:	f9 01       	movw	r30, r18
    7bf4:	80 81       	ld	r24, Z
    7bf6:	81 11       	cpse	r24, r1
    7bf8:	e2 cf       	rjmp	.-60     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    7bfa:	6b e9       	ldi	r22, 0x9B	; 155
    7bfc:	6f 0d       	add	r22, r15
    7bfe:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7c02:	88 23       	and	r24, r24
    7c04:	e1 f2       	breq	.-72     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				//_kSERAIL_MON_WRITE("tank number list with tank number array : ");
				//_kSERIAL_MON_PRINT_NUM(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7c06:	f5 01       	movw	r30, r10
    7c08:	82 81       	ldd	r24, Z+2	; 0x02
    7c0a:	85 30       	cpi	r24, 0x05	; 5
    7c0c:	c1 f2       	breq	.-80     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7c0e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7c12:	81 30       	cpi	r24, 0x01	; 1
    7c14:	89 f4       	brne	.+34     	; 0x7c38 <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    7c16:	69 e1       	ldi	r22, 0x19	; 25
    7c18:	7f e0       	ldi	r23, 0x0F	; 15
    7c1a:	86 ec       	ldi	r24, 0xC6	; 198
    7c1c:	94 e1       	ldi	r25, 0x14	; 20
    7c1e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    7c22:	4a e0       	ldi	r20, 0x0A	; 10
    7c24:	50 e0       	ldi	r21, 0x00	; 0
    7c26:	b8 01       	movw	r22, r16
    7c28:	86 ec       	ldi	r24, 0xC6	; 198
    7c2a:	94 e1       	ldi	r25, 0x14	; 20
    7c2c:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    7c30:	86 ec       	ldi	r24, 0xC6	; 198
    7c32:	94 e1       	ldi	r25, 0x14	; 20
    7c34:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7c38:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7c3c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7c40:	90 62       	ori	r25, 0x20	; 32
    7c42:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7c46:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    7c4a:	f0 92 72 14 	sts	0x1472, r15	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7c4e:	e0 9e       	mul	r14, r16
    7c50:	f0 01       	movw	r30, r0
    7c52:	e1 9e       	mul	r14, r17
    7c54:	f0 0d       	add	r31, r0
    7c56:	11 24       	eor	r1, r1
    7c58:	e8 51       	subi	r30, 0x18	; 24
    7c5a:	f2 4f       	sbci	r31, 0xF2	; 242
    7c5c:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7c5e:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7c60:	ae cf       	rjmp	.-164    	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			}
			//return 1;
		}
	}
	
}
    7c62:	aa 96       	adiw	r28, 0x2a	; 42
    7c64:	0f b6       	in	r0, 0x3f	; 63
    7c66:	f8 94       	cli
    7c68:	de bf       	out	0x3e, r29	; 62
    7c6a:	0f be       	out	0x3f, r0	; 63
    7c6c:	cd bf       	out	0x3d, r28	; 61
    7c6e:	df 91       	pop	r29
    7c70:	cf 91       	pop	r28
    7c72:	1f 91       	pop	r17
    7c74:	0f 91       	pop	r16
    7c76:	ff 90       	pop	r15
    7c78:	ef 90       	pop	r14
    7c7a:	df 90       	pop	r13
    7c7c:	cf 90       	pop	r12
    7c7e:	bf 90       	pop	r11
    7c80:	af 90       	pop	r10
    7c82:	9f 90       	pop	r9
    7c84:	8f 90       	pop	r8
    7c86:	08 95       	ret

00007c88 <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    7c88:	cf 92       	push	r12
    7c8a:	df 92       	push	r13
    7c8c:	ef 92       	push	r14
    7c8e:	ff 92       	push	r15
    7c90:	0f 93       	push	r16
    7c92:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7c94:	90 91 04 0e 	lds	r25, 0x0E04	; 0x800e04 <_sExtra_Plot+0x1c>
    7c98:	96 36       	cpi	r25, 0x66	; 102
    7c9a:	09 f0       	breq	.+2      	; 0x7c9e <_Z17Blower_Monitoringh+0x16>
    7c9c:	49 c0       	rjmp	.+146    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7c9e:	90 91 03 0e 	lds	r25, 0x0E03	; 0x800e03 <_sExtra_Plot+0x1b>
    7ca2:	91 11       	cpse	r25, r1
    7ca4:	45 c0       	rjmp	.+138    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7ca6:	83 30       	cpi	r24, 0x03	; 3
    7ca8:	09 f0       	breq	.+2      	; 0x7cac <_Z17Blower_Monitoringh+0x24>
    7caa:	42 c0       	rjmp	.+132    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7cac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7cb0:	81 30       	cpi	r24, 0x01	; 1
    7cb2:	51 f4       	brne	.+20     	; 0x7cc8 <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7cb4:	66 e0       	ldi	r22, 0x06	; 6
    7cb6:	7f e0       	ldi	r23, 0x0F	; 15
    7cb8:	86 ec       	ldi	r24, 0xC6	; 198
    7cba:	94 e1       	ldi	r25, 0x14	; 20
    7cbc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7cc0:	86 ec       	ldi	r24, 0xC6	; 198
    7cc2:	94 e1       	ldi	r25, 0x14	; 20
    7cc4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7cc8:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
				_sSchedules.Blower_On_Retry = _kRESET;
    7ccc:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
				_sSchedules.Blower_On_Time = _kRESET;
    7cd0:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7cd4:	61 e0       	ldi	r22, 0x01	; 1
    7cd6:	80 e0       	ldi	r24, 0x00	; 0
    7cd8:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7cdc:	88 23       	and	r24, r24
    7cde:	21 f1       	breq	.+72     	; 0x7d28 <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7ce0:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    7ce4:	85 30       	cpi	r24, 0x05	; 5
    7ce6:	01 f1       	breq	.+64     	; 0x7d28 <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7ce8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7cec:	81 30       	cpi	r24, 0x01	; 1
    7cee:	51 f4       	brne	.+20     	; 0x7d04 <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7cf0:	63 ef       	ldi	r22, 0xF3	; 243
    7cf2:	7e e0       	ldi	r23, 0x0E	; 14
    7cf4:	86 ec       	ldi	r24, 0xC6	; 198
    7cf6:	94 e1       	ldi	r25, 0x14	; 20
    7cf8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7cfc:	86 ec       	ldi	r24, 0xC6	; 198
    7cfe:	94 e1       	ldi	r25, 0x14	; 20
    7d00:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7d04:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7d08:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7d0c:	90 62       	ori	r25, 0x20	; 32
    7d0e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7d12:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7d16:	81 e0       	ldi	r24, 0x01	; 1
    7d18:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7d1c:	82 e0       	ldi	r24, 0x02	; 2
    7d1e:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7d22:	85 e0       	ldi	r24, 0x05	; 5
    7d24:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7d28:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7d2c:	81 e0       	ldi	r24, 0x01	; 1
    7d2e:	d5 c1       	rjmp	.+938    	; 0x80da <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7d30:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d34:	90 e0       	ldi	r25, 0x00	; 0
    7d36:	01 97       	sbiw	r24, 0x01	; 1
    7d38:	fc 01       	movw	r30, r24
    7d3a:	ee 0f       	add	r30, r30
    7d3c:	ff 1f       	adc	r31, r31
    7d3e:	e8 0f       	add	r30, r24
    7d40:	f9 1f       	adc	r31, r25
    7d42:	ee 0f       	add	r30, r30
    7d44:	ff 1f       	adc	r31, r31
    7d46:	ed 53       	subi	r30, 0x3D	; 61
    7d48:	f6 4f       	sbci	r31, 0xF6	; 246
    7d4a:	20 81       	ld	r18, Z
    7d4c:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7d4e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d52:	90 e0       	ldi	r25, 0x00	; 0
    7d54:	01 97       	sbiw	r24, 0x01	; 1
    7d56:	fc 01       	movw	r30, r24
    7d58:	ee 0f       	add	r30, r30
    7d5a:	ff 1f       	adc	r31, r31
    7d5c:	e8 0f       	add	r30, r24
    7d5e:	f9 1f       	adc	r31, r25
    7d60:	ee 0f       	add	r30, r30
    7d62:	ff 1f       	adc	r31, r31
    7d64:	e7 5e       	subi	r30, 0xE7	; 231
    7d66:	f5 4f       	sbci	r31, 0xF5	; 245
    7d68:	40 81       	ld	r20, Z
    7d6a:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7d6c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d70:	90 e0       	ldi	r25, 0x00	; 0
    7d72:	01 97       	sbiw	r24, 0x01	; 1
    7d74:	fc 01       	movw	r30, r24
    7d76:	ee 0f       	add	r30, r30
    7d78:	ff 1f       	adc	r31, r31
    7d7a:	8e 0f       	add	r24, r30
    7d7c:	9f 1f       	adc	r25, r31
    7d7e:	fc 01       	movw	r30, r24
    7d80:	e1 59       	subi	r30, 0x91	; 145
    7d82:	f5 4f       	sbci	r31, 0xF5	; 245
    7d84:	80 81       	ld	r24, Z
    7d86:	81 30       	cpi	r24, 0x01	; 1
    7d88:	29 f4       	brne	.+10     	; 0x7d94 <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7d8a:	42 0f       	add	r20, r18
    7d8c:	53 1f       	adc	r21, r19
    7d8e:	60 e0       	ldi	r22, 0x00	; 0
    7d90:	70 e0       	ldi	r23, 0x00	; 0
    7d92:	03 c0       	rjmp	.+6      	; 0x7d9a <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7d94:	40 e0       	ldi	r20, 0x00	; 0
    7d96:	50 e0       	ldi	r21, 0x00	; 0
    7d98:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7d9a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d9e:	90 e0       	ldi	r25, 0x00	; 0
    7da0:	01 97       	sbiw	r24, 0x01	; 1
    7da2:	fc 01       	movw	r30, r24
    7da4:	ee 0f       	add	r30, r30
    7da6:	ff 1f       	adc	r31, r31
    7da8:	e8 0f       	add	r30, r24
    7daa:	f9 1f       	adc	r31, r25
    7dac:	ee 0f       	add	r30, r30
    7dae:	ff 1f       	adc	r31, r31
    7db0:	eb 53       	subi	r30, 0x3B	; 59
    7db2:	f6 4f       	sbci	r31, 0xF6	; 246
    7db4:	20 81       	ld	r18, Z
    7db6:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7db8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7dbc:	90 e0       	ldi	r25, 0x00	; 0
    7dbe:	01 97       	sbiw	r24, 0x01	; 1
    7dc0:	fc 01       	movw	r30, r24
    7dc2:	ee 0f       	add	r30, r30
    7dc4:	ff 1f       	adc	r31, r31
    7dc6:	e8 0f       	add	r30, r24
    7dc8:	f9 1f       	adc	r31, r25
    7dca:	ee 0f       	add	r30, r30
    7dcc:	ff 1f       	adc	r31, r31
    7dce:	e5 5e       	subi	r30, 0xE5	; 229
    7dd0:	f5 4f       	sbci	r31, 0xF5	; 245
    7dd2:	c0 80       	ld	r12, Z
    7dd4:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7dd6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7dda:	90 e0       	ldi	r25, 0x00	; 0
    7ddc:	01 97       	sbiw	r24, 0x01	; 1
    7dde:	fc 01       	movw	r30, r24
    7de0:	ee 0f       	add	r30, r30
    7de2:	ff 1f       	adc	r31, r31
    7de4:	8e 0f       	add	r24, r30
    7de6:	9f 1f       	adc	r25, r31
    7de8:	fc 01       	movw	r30, r24
    7dea:	e0 59       	subi	r30, 0x90	; 144
    7dec:	f5 4f       	sbci	r31, 0xF5	; 245
    7dee:	80 81       	ld	r24, Z
    7df0:	81 30       	cpi	r24, 0x01	; 1
    7df2:	29 f4       	brne	.+10     	; 0x7dfe <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7df4:	c2 0e       	add	r12, r18
    7df6:	d3 1e       	adc	r13, r19
    7df8:	e1 2c       	mov	r14, r1
    7dfa:	f1 2c       	mov	r15, r1
    7dfc:	03 c0       	rjmp	.+6      	; 0x7e04 <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7dfe:	c1 2c       	mov	r12, r1
    7e00:	d1 2c       	mov	r13, r1
    7e02:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7e04:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e08:	90 e0       	ldi	r25, 0x00	; 0
    7e0a:	01 97       	sbiw	r24, 0x01	; 1
    7e0c:	fc 01       	movw	r30, r24
    7e0e:	ee 0f       	add	r30, r30
    7e10:	ff 1f       	adc	r31, r31
    7e12:	e8 0f       	add	r30, r24
    7e14:	f9 1f       	adc	r31, r25
    7e16:	ee 0f       	add	r30, r30
    7e18:	ff 1f       	adc	r31, r31
    7e1a:	e9 53       	subi	r30, 0x39	; 57
    7e1c:	f6 4f       	sbci	r31, 0xF6	; 246
    7e1e:	20 81       	ld	r18, Z
    7e20:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7e22:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e26:	90 e0       	ldi	r25, 0x00	; 0
    7e28:	01 97       	sbiw	r24, 0x01	; 1
    7e2a:	fc 01       	movw	r30, r24
    7e2c:	ee 0f       	add	r30, r30
    7e2e:	ff 1f       	adc	r31, r31
    7e30:	e8 0f       	add	r30, r24
    7e32:	f9 1f       	adc	r31, r25
    7e34:	ee 0f       	add	r30, r30
    7e36:	ff 1f       	adc	r31, r31
    7e38:	e3 5e       	subi	r30, 0xE3	; 227
    7e3a:	f5 4f       	sbci	r31, 0xF5	; 245
    7e3c:	00 81       	ld	r16, Z
    7e3e:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7e40:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e44:	90 e0       	ldi	r25, 0x00	; 0
    7e46:	01 97       	sbiw	r24, 0x01	; 1
    7e48:	fc 01       	movw	r30, r24
    7e4a:	ee 0f       	add	r30, r30
    7e4c:	ff 1f       	adc	r31, r31
    7e4e:	8e 0f       	add	r24, r30
    7e50:	9f 1f       	adc	r25, r31
    7e52:	fc 01       	movw	r30, r24
    7e54:	ef 58       	subi	r30, 0x8F	; 143
    7e56:	f5 4f       	sbci	r31, 0xF5	; 245
    7e58:	80 81       	ld	r24, Z
    7e5a:	81 30       	cpi	r24, 0x01	; 1
    7e5c:	29 f4       	brne	.+10     	; 0x7e68 <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7e5e:	02 0f       	add	r16, r18
    7e60:	13 1f       	adc	r17, r19
    7e62:	20 e0       	ldi	r18, 0x00	; 0
    7e64:	30 e0       	ldi	r19, 0x00	; 0
    7e66:	03 c0       	rjmp	.+6      	; 0x7e6e <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7e68:	00 e0       	ldi	r16, 0x00	; 0
    7e6a:	10 e0       	ldi	r17, 0x00	; 0
    7e6c:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7e6e:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    7e72:	81 11       	cpse	r24, r1
    7e74:	06 c0       	rjmp	.+12     	; 0x7e82 <_Z17Blower_Monitoringh+0x1fa>
    7e76:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    7e7a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    7e7e:	89 2b       	or	r24, r25
    7e80:	11 f0       	breq	.+4      	; 0x7e86 <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7e82:	80 e0       	ldi	r24, 0x00	; 0
    7e84:	2a c1       	rjmp	.+596    	; 0x80da <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7e86:	80 91 8b 0b 	lds	r24, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    7e8a:	81 30       	cpi	r24, 0x01	; 1
    7e8c:	89 f1       	breq	.+98     	; 0x7ef0 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7e8e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e92:	90 e0       	ldi	r25, 0x00	; 0
    7e94:	01 97       	sbiw	r24, 0x01	; 1
    7e96:	fc 01       	movw	r30, r24
    7e98:	ee 0f       	add	r30, r30
    7e9a:	ff 1f       	adc	r31, r31
    7e9c:	8e 0f       	add	r24, r30
    7e9e:	9f 1f       	adc	r25, r31
    7ea0:	fc 01       	movw	r30, r24
    7ea2:	e1 59       	subi	r30, 0x91	; 145
    7ea4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ea6:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7ea8:	81 30       	cpi	r24, 0x01	; 1
    7eaa:	09 f4       	brne	.+2      	; 0x7eae <_Z17Blower_Monitoringh+0x226>
    7eac:	cf c0       	rjmp	.+414    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7eae:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7eb2:	90 e0       	ldi	r25, 0x00	; 0
    7eb4:	01 97       	sbiw	r24, 0x01	; 1
    7eb6:	fc 01       	movw	r30, r24
    7eb8:	ee 0f       	add	r30, r30
    7eba:	ff 1f       	adc	r31, r31
    7ebc:	8e 0f       	add	r24, r30
    7ebe:	9f 1f       	adc	r25, r31
    7ec0:	fc 01       	movw	r30, r24
    7ec2:	e0 59       	subi	r30, 0x90	; 144
    7ec4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ec6:	80 81       	ld	r24, Z
    7ec8:	81 30       	cpi	r24, 0x01	; 1
    7eca:	09 f4       	brne	.+2      	; 0x7ece <_Z17Blower_Monitoringh+0x246>
    7ecc:	bf c0       	rjmp	.+382    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7ece:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7ed2:	90 e0       	ldi	r25, 0x00	; 0
    7ed4:	01 97       	sbiw	r24, 0x01	; 1
    7ed6:	fc 01       	movw	r30, r24
    7ed8:	ee 0f       	add	r30, r30
    7eda:	ff 1f       	adc	r31, r31
    7edc:	8e 0f       	add	r24, r30
    7ede:	9f 1f       	adc	r25, r31
    7ee0:	fc 01       	movw	r30, r24
    7ee2:	ef 58       	subi	r30, 0x8F	; 143
    7ee4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ee6:	80 81       	ld	r24, Z
    7ee8:	81 30       	cpi	r24, 0x01	; 1
    7eea:	09 f0       	breq	.+2      	; 0x7eee <_Z17Blower_Monitoringh+0x266>
    7eec:	ae c0       	rjmp	.+348    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7eee:	ae c0       	rjmp	.+348    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7ef0:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    7ef4:	88 23       	and	r24, r24
    7ef6:	21 f1       	breq	.+72     	; 0x7f40 <_Z17Blower_Monitoringh+0x2b8>
    7ef8:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7efc:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f00:	a0 e0       	ldi	r26, 0x00	; 0
    7f02:	b0 e0       	ldi	r27, 0x00	; 0
    7f04:	84 17       	cp	r24, r20
    7f06:	95 07       	cpc	r25, r21
    7f08:	a6 07       	cpc	r26, r22
    7f0a:	b7 07       	cpc	r27, r23
    7f0c:	08 f4       	brcc	.+2      	; 0x7f10 <_Z17Blower_Monitoringh+0x288>
    7f0e:	9d c0       	rjmp	.+314    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7f10:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7f14:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f18:	a0 e0       	ldi	r26, 0x00	; 0
    7f1a:	b0 e0       	ldi	r27, 0x00	; 0
    7f1c:	8c 15       	cp	r24, r12
    7f1e:	9d 05       	cpc	r25, r13
    7f20:	ae 05       	cpc	r26, r14
    7f22:	bf 05       	cpc	r27, r15
    7f24:	08 f4       	brcc	.+2      	; 0x7f28 <_Z17Blower_Monitoringh+0x2a0>
    7f26:	91 c0       	rjmp	.+290    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7f28:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7f2c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f30:	a0 e0       	ldi	r26, 0x00	; 0
    7f32:	b0 e0       	ldi	r27, 0x00	; 0
    7f34:	80 17       	cp	r24, r16
    7f36:	91 07       	cpc	r25, r17
    7f38:	a2 07       	cpc	r26, r18
    7f3a:	b3 07       	cpc	r27, r19
    7f3c:	08 f4       	brcc	.+2      	; 0x7f40 <_Z17Blower_Monitoringh+0x2b8>
    7f3e:	85 c0       	rjmp	.+266    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7f40:	20 e0       	ldi	r18, 0x00	; 0
    7f42:	30 e0       	ldi	r19, 0x00	; 0
    7f44:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7f46:	5b e1       	ldi	r21, 0x1B	; 27
    7f48:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f4c:	90 e0       	ldi	r25, 0x00	; 0
    7f4e:	01 97       	sbiw	r24, 0x01	; 1
    7f50:	fc 01       	movw	r30, r24
    7f52:	ee 0f       	add	r30, r30
    7f54:	ff 1f       	adc	r31, r31
    7f56:	e8 0f       	add	r30, r24
    7f58:	f9 1f       	adc	r31, r25
    7f5a:	e2 0f       	add	r30, r18
    7f5c:	f3 1f       	adc	r31, r19
    7f5e:	e8 56       	subi	r30, 0x68	; 104
    7f60:	f6 4f       	sbci	r31, 0xF6	; 246
    7f62:	80 81       	ld	r24, Z
    7f64:	90 e0       	ldi	r25, 0x00	; 0
    7f66:	85 56       	subi	r24, 0x65	; 101
    7f68:	91 09       	sbc	r25, r1
    7f6a:	58 9f       	mul	r21, r24
    7f6c:	f0 01       	movw	r30, r0
    7f6e:	59 9f       	mul	r21, r25
    7f70:	f0 0d       	add	r31, r0
    7f72:	11 24       	eor	r1, r1
    7f74:	e8 51       	subi	r30, 0x18	; 24
    7f76:	f2 4f       	sbci	r31, 0xF2	; 242
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7f78:	81 81       	ldd	r24, Z+1	; 0x01
    7f7a:	88 23       	and	r24, r24
    7f7c:	b9 f1       	breq	.+110    	; 0x7fec <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7f7e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f82:	90 e0       	ldi	r25, 0x00	; 0
    7f84:	01 97       	sbiw	r24, 0x01	; 1
    7f86:	fc 01       	movw	r30, r24
    7f88:	ee 0f       	add	r30, r30
    7f8a:	ff 1f       	adc	r31, r31
    7f8c:	e8 0f       	add	r30, r24
    7f8e:	f9 1f       	adc	r31, r25
    7f90:	e2 0f       	add	r30, r18
    7f92:	f3 1f       	adc	r31, r19
    7f94:	e8 56       	subi	r30, 0x68	; 104
    7f96:	f6 4f       	sbci	r31, 0xF6	; 246
    7f98:	80 81       	ld	r24, Z
    7f9a:	90 e0       	ldi	r25, 0x00	; 0
    7f9c:	85 56       	subi	r24, 0x65	; 101
    7f9e:	91 09       	sbc	r25, r1
    7fa0:	58 9f       	mul	r21, r24
    7fa2:	f0 01       	movw	r30, r0
    7fa4:	59 9f       	mul	r21, r25
    7fa6:	f0 0d       	add	r31, r0
    7fa8:	11 24       	eor	r1, r1
    7faa:	e8 51       	subi	r30, 0x18	; 24
    7fac:	f2 4f       	sbci	r31, 0xF2	; 242
    7fae:	81 81       	ldd	r24, Z+1	; 0x01
    7fb0:	85 36       	cpi	r24, 0x65	; 101
    7fb2:	e0 f0       	brcs	.+56     	; 0x7fec <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7fb4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7fb8:	90 e0       	ldi	r25, 0x00	; 0
    7fba:	01 97       	sbiw	r24, 0x01	; 1
    7fbc:	fc 01       	movw	r30, r24
    7fbe:	ee 0f       	add	r30, r30
    7fc0:	ff 1f       	adc	r31, r31
    7fc2:	e8 0f       	add	r30, r24
    7fc4:	f9 1f       	adc	r31, r25
    7fc6:	e2 0f       	add	r30, r18
    7fc8:	f3 1f       	adc	r31, r19
    7fca:	e8 56       	subi	r30, 0x68	; 104
    7fcc:	f6 4f       	sbci	r31, 0xF6	; 246
    7fce:	80 81       	ld	r24, Z
    7fd0:	90 e0       	ldi	r25, 0x00	; 0
    7fd2:	85 56       	subi	r24, 0x65	; 101
    7fd4:	91 09       	sbc	r25, r1
    7fd6:	58 9f       	mul	r21, r24
    7fd8:	f0 01       	movw	r30, r0
    7fda:	59 9f       	mul	r21, r25
    7fdc:	f0 0d       	add	r31, r0
    7fde:	11 24       	eor	r1, r1
    7fe0:	e8 51       	subi	r30, 0x18	; 24
    7fe2:	f2 4f       	sbci	r31, 0xF2	; 242
    7fe4:	82 81       	ldd	r24, Z+2	; 0x02
    7fe6:	84 30       	cpi	r24, 0x04	; 4
    7fe8:	09 f4       	brne	.+2      	; 0x7fec <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7fea:	41 e0       	ldi	r20, 0x01	; 1
    7fec:	2f 5f       	subi	r18, 0xFF	; 255
    7fee:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7ff0:	23 30       	cpi	r18, 0x03	; 3
    7ff2:	31 05       	cpc	r19, r1
    7ff4:	09 f0       	breq	.+2      	; 0x7ff8 <_Z17Blower_Monitoringh+0x370>
    7ff6:	a8 cf       	rjmp	.-176    	; 0x7f48 <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7ff8:	44 23       	and	r20, r20
    7ffa:	19 f0       	breq	.+6      	; 0x8002 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7ffc:	88 e0       	ldi	r24, 0x08	; 8
    7ffe:	97 e0       	ldi	r25, 0x07	; 7
    8000:	02 c0       	rjmp	.+4      	; 0x8006 <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    8002:	80 e1       	ldi	r24, 0x10	; 16
    8004:	9e e0       	ldi	r25, 0x0E	; 14
    8006:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    800a:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    800e:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    8012:	61 e0       	ldi	r22, 0x01	; 1
    8014:	80 e0       	ldi	r24, 0x00	; 0
    8016:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    801a:	88 23       	and	r24, r24
    801c:	b1 f0       	breq	.+44     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    801e:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    8022:	85 30       	cpi	r24, 0x05	; 5
    8024:	91 f0       	breq	.+36     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    8026:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    802a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    802e:	90 62       	ori	r25, 0x20	; 32
    8030:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    8034:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    8038:	81 e0       	ldi	r24, 0x01	; 1
    803a:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    803e:	82 e0       	ldi	r24, 0x02	; 2
    8040:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    8044:	85 e0       	ldi	r24, 0x05	; 5
    8046:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    804a:	47 c0       	rjmp	.+142    	; 0x80da <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    804c:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    8050:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    8054:	89 2b       	or	r24, r25
    8056:	c9 f7       	brne	.-14     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    8058:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    805c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8060:	a0 e0       	ldi	r26, 0x00	; 0
    8062:	b0 e0       	ldi	r27, 0x00	; 0
    8064:	84 17       	cp	r24, r20
    8066:	95 07       	cpc	r25, r21
    8068:	a6 07       	cpc	r26, r22
    806a:	b7 07       	cpc	r27, r23
    806c:	b0 f0       	brcs	.+44     	; 0x809a <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    806e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8072:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8076:	a0 e0       	ldi	r26, 0x00	; 0
    8078:	b0 e0       	ldi	r27, 0x00	; 0
    807a:	8c 15       	cp	r24, r12
    807c:	9d 05       	cpc	r25, r13
    807e:	ae 05       	cpc	r26, r14
    8080:	bf 05       	cpc	r27, r15
    8082:	58 f0       	brcs	.+22     	; 0x809a <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8084:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8088:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    808c:	a0 e0       	ldi	r26, 0x00	; 0
    808e:	b0 e0       	ldi	r27, 0x00	; 0
    8090:	80 17       	cp	r24, r16
    8092:	91 07       	cpc	r25, r17
    8094:	a2 07       	cpc	r26, r18
    8096:	b3 07       	cpc	r27, r19
    8098:	c0 f6       	brcc	.-80     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    809a:	61 e0       	ldi	r22, 0x01	; 1
    809c:	81 e0       	ldi	r24, 0x01	; 1
    809e:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    80a2:	88 23       	and	r24, r24
    80a4:	b1 f0       	breq	.+44     	; 0x80d2 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    80a6:	21 e0       	ldi	r18, 0x01	; 1
    80a8:	20 93 8b 0b 	sts	0x0B8B, r18	; 0x800b8b <_sSchedules+0x26d>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    80ac:	8a e5       	ldi	r24, 0x5A	; 90
    80ae:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    80b2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    80b6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    80ba:	90 62       	ori	r25, 0x20	; 32
    80bc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    80c0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    80c4:	20 93 72 14 	sts	0x1472, r18	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    80c8:	82 e0       	ldi	r24, 0x02	; 2
    80ca:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    80ce:	84 e0       	ldi	r24, 0x04	; 4
    80d0:	ba cf       	rjmp	.-140    	; 0x8046 <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    80d2:	84 eb       	ldi	r24, 0xB4	; 180
    80d4:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    80d8:	b8 cf       	rjmp	.-144    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    80da:	1f 91       	pop	r17
    80dc:	0f 91       	pop	r16
    80de:	ff 90       	pop	r15
    80e0:	ef 90       	pop	r14
    80e2:	df 90       	pop	r13
    80e4:	cf 90       	pop	r12
    80e6:	08 95       	ret

000080e8 <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    80e8:	ef 92       	push	r14
    80ea:	ff 92       	push	r15
    80ec:	0f 93       	push	r16
    80ee:	1f 93       	push	r17
    80f0:	cf 93       	push	r28
    80f2:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    80f4:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    80f8:	81 11       	cpse	r24, r1
    80fa:	ca c0       	rjmp	.+404    	; 0x8290 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    80fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8100:	81 30       	cpi	r24, 0x01	; 1
    8102:	51 f4       	brne	.+20     	; 0x8118 <_Z18Edited_In_Schedulev+0x30>
		{
			_kSERAIL_MON_WRITE("my 14");
    8104:	6d ee       	ldi	r22, 0xED	; 237
    8106:	7e e0       	ldi	r23, 0x0E	; 14
    8108:	86 ec       	ldi	r24, 0xC6	; 198
    810a:	94 e1       	ldi	r25, 0x14	; 20
    810c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8110:	86 ec       	ldi	r24, 0xC6	; 198
    8112:	94 e1       	ldi	r25, 0x14	; 20
    8114:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8118:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    811c:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8120:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8124:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8128:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    812c:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8130:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8134:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8138:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    813c:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8140:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8144:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8148:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    814c:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8150:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8154:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8158:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    815c:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8160:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8164:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8168:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    816c:	80 91 f2 0b 	lds	r24, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
    8170:	81 30       	cpi	r24, 0x01	; 1
    8172:	21 f0       	breq	.+8      	; 0x817c <_Z18Edited_In_Schedulev+0x94>
		{
			Return_Calculated_Previous_Day_Date(1);
    8174:	81 e0       	ldi	r24, 0x01	; 1
    8176:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    817a:	18 c0       	rjmp	.+48     	; 0x81ac <_Z18Edited_In_Schedulev+0xc4>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    817c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8180:	80 93 ec 0b 	sts	0x0BEC, r24	; 0x800bec <_sSchedules+0x2ce>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    8184:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    8188:	80 93 ed 0b 	sts	0x0BED, r24	; 0x800bed <_sSchedules+0x2cf>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    818c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8190:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    8194:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8198:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    819c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81a0:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    81a4:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    81a8:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    81ac:	00 e0       	ldi	r16, 0x00	; 0
    81ae:	10 e0       	ldi	r17, 0x00	; 0
    81b0:	e1 2c       	mov	r14, r1
    81b2:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    81b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    81b8:	e7 01       	movw	r28, r14
    81ba:	c2 5e       	subi	r28, 0xE2	; 226
    81bc:	d6 4f       	sbci	r29, 0xF6	; 246
    81be:	81 30       	cpi	r24, 0x01	; 1
    81c0:	01 f5       	brne	.+64     	; 0x8202 <_Z18Edited_In_Schedulev+0x11a>
			{
				Serial.println(F("Running list date "));
    81c2:	6a ed       	ldi	r22, 0xDA	; 218
    81c4:	7e e0       	ldi	r23, 0x0E	; 14
    81c6:	86 ec       	ldi	r24, 0xC6	; 198
    81c8:	94 e1       	ldi	r25, 0x14	; 20
    81ca:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    81ce:	fe 01       	movw	r30, r28
    81d0:	e5 5a       	subi	r30, 0xA5	; 165
    81d2:	ff 4f       	sbci	r31, 0xFF	; 255
    81d4:	60 81       	ld	r22, Z
    81d6:	4a e0       	ldi	r20, 0x0A	; 10
    81d8:	50 e0       	ldi	r21, 0x00	; 0
    81da:	86 ec       	ldi	r24, 0xC6	; 198
    81dc:	94 e1       	ldi	r25, 0x14	; 20
    81de:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    81e2:	66 ec       	ldi	r22, 0xC6	; 198
    81e4:	7e e0       	ldi	r23, 0x0E	; 14
    81e6:	86 ec       	ldi	r24, 0xC6	; 198
    81e8:	94 e1       	ldi	r25, 0x14	; 20
    81ea:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    81ee:	fe 01       	movw	r30, r28
    81f0:	e6 59       	subi	r30, 0x96	; 150
    81f2:	ff 4f       	sbci	r31, 0xFF	; 255
    81f4:	60 81       	ld	r22, Z
    81f6:	4a e0       	ldi	r20, 0x0A	; 10
    81f8:	50 e0       	ldi	r21, 0x00	; 0
    81fa:	86 ec       	ldi	r24, 0xC6	; 198
    81fc:	94 e1       	ldi	r25, 0x14	; 20
    81fe:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
			}
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8202:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8206:	fe 01       	movw	r30, r28
    8208:	e5 5a       	subi	r30, 0xA5	; 165
    820a:	ff 4f       	sbci	r31, 0xFF	; 255
    820c:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    820e:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8212:	c6 59       	subi	r28, 0x96	; 150
    8214:	df 4f       	sbci	r29, 0xFF	; 255
    8216:	88 83       	st	Y, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8218:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    821c:	90 e0       	ldi	r25, 0x00	; 0
    821e:	f8 01       	movw	r30, r16
    8220:	ee 0f       	add	r30, r30
    8222:	ff 1f       	adc	r31, r31
    8224:	e5 5e       	subi	r30, 0xE5	; 229
    8226:	f4 4f       	sbci	r31, 0xF4	; 244
    8228:	91 83       	std	Z+1, r25	; 0x01
    822a:	80 83       	st	Z, r24
    822c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8230:	90 e0       	ldi	r25, 0x00	; 0
    8232:	f8 01       	movw	r30, r16
    8234:	ee 0f       	add	r30, r30
    8236:	ff 1f       	adc	r31, r31
    8238:	e3 5e       	subi	r30, 0xE3	; 227
    823a:	f4 4f       	sbci	r31, 0xF4	; 244
    823c:	91 83       	std	Z+1, r25	; 0x01
    823e:	80 83       	st	Z, r24
    8240:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8244:	90 e0       	ldi	r25, 0x00	; 0
    8246:	f8 01       	movw	r30, r16
    8248:	ee 0f       	add	r30, r30
    824a:	ff 1f       	adc	r31, r31
    824c:	e1 5e       	subi	r30, 0xE1	; 225
    824e:	f4 4f       	sbci	r31, 0xF4	; 244
    8250:	91 83       	std	Z+1, r25	; 0x01
    8252:	80 83       	st	Z, r24
    8254:	2f ef       	ldi	r18, 0xFF	; 255
    8256:	e2 1a       	sub	r14, r18
    8258:	f2 0a       	sbc	r15, r18
    825a:	0d 5f       	subi	r16, 0xFD	; 253
    825c:	1f 4f       	sbci	r17, 0xFF	; 255
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    825e:	8e e0       	ldi	r24, 0x0E	; 14
    8260:	e8 16       	cp	r14, r24
    8262:	f1 04       	cpc	r15, r1
    8264:	09 f0       	breq	.+2      	; 0x8268 <_Z18Edited_In_Schedulev+0x180>
    8266:	a6 cf       	rjmp	.-180    	; 0x81b4 <_Z18Edited_In_Schedulev+0xcc>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8268:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    826c:	81 30       	cpi	r24, 0x01	; 1
    826e:	31 f4       	brne	.+12     	; 0x827c <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8270:	61 e8       	ldi	r22, 0x81	; 129
    8272:	7e e0       	ldi	r23, 0x0E	; 14
    8274:	86 ec       	ldi	r24, 0xC6	; 198
    8276:	94 e1       	ldi	r25, 0x14	; 20
    8278:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    827c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8280:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8284:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8288:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		return 1;
    828c:	81 e0       	ldi	r24, 0x01	; 1
    828e:	c0 c4       	rjmp	.+2432   	; 0x8c10 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8290:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8294:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8298:	89 2b       	or	r24, r25
    829a:	09 f0       	breq	.+2      	; 0x829e <_Z18Edited_In_Schedulev+0x1b6>
    829c:	18 c4       	rjmp	.+2096   	; 0x8ace <_Z18Edited_In_Schedulev+0x9e6>
    829e:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    82a2:	88 23       	and	r24, r24
    82a4:	09 f4       	brne	.+2      	; 0x82a8 <_Z18Edited_In_Schedulev+0x1c0>
    82a6:	13 c4       	rjmp	.+2086   	; 0x8ace <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    82a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82ac:	81 30       	cpi	r24, 0x01	; 1
    82ae:	31 f4       	brne	.+12     	; 0x82bc <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    82b0:	6c e7       	ldi	r22, 0x7C	; 124
    82b2:	7e e0       	ldi	r23, 0x0E	; 14
    82b4:	86 ec       	ldi	r24, 0xC6	; 198
    82b6:	94 e1       	ldi	r25, 0x14	; 20
    82b8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    82bc:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    82c0:	88 23       	and	r24, r24
    82c2:	09 f4       	brne	.+2      	; 0x82c6 <_Z18Edited_In_Schedulev+0x1de>
    82c4:	8f c4       	rjmp	.+2334   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    82c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82ca:	81 30       	cpi	r24, 0x01	; 1
    82cc:	31 f4       	brne	.+12     	; 0x82da <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    82ce:	67 e7       	ldi	r22, 0x77	; 119
    82d0:	7e e0       	ldi	r23, 0x0E	; 14
    82d2:	86 ec       	ldi	r24, 0xC6	; 198
    82d4:	94 e1       	ldi	r25, 0x14	; 20
    82d6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    82da:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
    82de:	88 23       	and	r24, r24
    82e0:	09 f4       	brne	.+2      	; 0x82e4 <_Z18Edited_In_Schedulev+0x1fc>
    82e2:	80 c4       	rjmp	.+2304   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    82e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82e8:	81 30       	cpi	r24, 0x01	; 1
    82ea:	51 f5       	brne	.+84     	; 0x8340 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    82ec:	62 e7       	ldi	r22, 0x72	; 114
    82ee:	7e e0       	ldi	r23, 0x0E	; 14
    82f0:	86 ec       	ldi	r24, 0xC6	; 198
    82f2:	94 e1       	ldi	r25, 0x14	; 20
    82f4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    82f8:	6f e5       	ldi	r22, 0x5F	; 95
    82fa:	7e e0       	ldi	r23, 0x0E	; 14
    82fc:	86 ec       	ldi	r24, 0xC6	; 198
    82fe:	94 e1       	ldi	r25, 0x14	; 20
    8300:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8304:	86 ec       	ldi	r24, 0xC6	; 198
    8306:	94 e1       	ldi	r25, 0x14	; 20
    8308:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    830c:	60 91 e6 0b 	lds	r22, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8310:	4a e0       	ldi	r20, 0x0A	; 10
    8312:	50 e0       	ldi	r21, 0x00	; 0
    8314:	86 ec       	ldi	r24, 0xC6	; 198
    8316:	94 e1       	ldi	r25, 0x14	; 20
    8318:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    831c:	6c e4       	ldi	r22, 0x4C	; 76
    831e:	7e e0       	ldi	r23, 0x0E	; 14
    8320:	86 ec       	ldi	r24, 0xC6	; 198
    8322:	94 e1       	ldi	r25, 0x14	; 20
    8324:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8328:	86 ec       	ldi	r24, 0xC6	; 198
    832a:	94 e1       	ldi	r25, 0x14	; 20
    832c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    8330:	60 91 d8 0b 	lds	r22, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8334:	4a e0       	ldi	r20, 0x0A	; 10
    8336:	50 e0       	ldi	r21, 0x00	; 0
    8338:	86 ec       	ldi	r24, 0xC6	; 198
    833a:	94 e1       	ldi	r25, 0x14	; 20
    833c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    8340:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8344:	90 91 d8 0b 	lds	r25, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8348:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    834c:	29 13       	cpse	r18, r25
    834e:	1f c1       	rjmp	.+574    	; 0x858e <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8350:	81 30       	cpi	r24, 0x01	; 1
    8352:	51 f4       	brne	.+20     	; 0x8368 <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    8354:	67 e4       	ldi	r22, 0x47	; 71
    8356:	7e e0       	ldi	r23, 0x0E	; 14
    8358:	86 ec       	ldi	r24, 0xC6	; 198
    835a:	94 e1       	ldi	r25, 0x14	; 20
    835c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8360:	86 ec       	ldi	r24, 0xC6	; 198
    8362:	94 e1       	ldi	r25, 0x14	; 20
    8364:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8368:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    836c:	f0 e0       	ldi	r31, 0x00	; 0
    836e:	e7 59       	subi	r30, 0x97	; 151
    8370:	f6 4f       	sbci	r31, 0xF6	; 246
    8372:	90 81       	ld	r25, Z
    8374:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    8378:	98 13       	cpse	r25, r24
    837a:	04 c0       	rjmp	.+8      	; 0x8384 <_Z18Edited_In_Schedulev+0x29c>
    837c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8380:	81 11       	cpse	r24, r1
    8382:	41 c0       	rjmp	.+130    	; 0x8406 <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8384:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8388:	81 30       	cpi	r24, 0x01	; 1
    838a:	51 f4       	brne	.+20     	; 0x83a0 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    838c:	62 e4       	ldi	r22, 0x42	; 66
    838e:	7e e0       	ldi	r23, 0x0E	; 14
    8390:	86 ec       	ldi	r24, 0xC6	; 198
    8392:	94 e1       	ldi	r25, 0x14	; 20
    8394:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8398:	86 ec       	ldi	r24, 0xC6	; 198
    839a:	94 e1       	ldi	r25, 0x14	; 20
    839c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    83a0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    83a4:	88 23       	and	r24, r24
    83a6:	09 f4       	brne	.+2      	; 0x83aa <_Z18Edited_In_Schedulev+0x2c2>
    83a8:	2a c4       	rjmp	.+2132   	; 0x8bfe <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    83aa:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    83ae:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    83b2:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    83b6:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    83ba:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    83be:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    83c2:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    83c6:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    83ca:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    83ce:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    83d2:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    83d6:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    83da:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    83de:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    83e2:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    83e6:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    83ea:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    83ee:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    83f2:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    83f6:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    83fa:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    83fe:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8402:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    8406:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    840a:	82 30       	cpi	r24, 0x02	; 2
    840c:	08 f4       	brcc	.+2      	; 0x8410 <_Z18Edited_In_Schedulev+0x328>
    840e:	82 c0       	rjmp	.+260    	; 0x8514 <_Z18Edited_In_Schedulev+0x42c>
    8410:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8412:	84 2f       	mov	r24, r20
    8414:	90 e0       	ldi	r25, 0x00	; 0
    8416:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    841a:	30 e0       	ldi	r19, 0x00	; 0
    841c:	21 50       	subi	r18, 0x01	; 1
    841e:	31 09       	sbc	r19, r1
    8420:	82 17       	cp	r24, r18
    8422:	93 07       	cpc	r25, r19
    8424:	84 f5       	brge	.+96     	; 0x8486 <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8426:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    842a:	82 5e       	subi	r24, 0xE2	; 226
    842c:	96 4f       	sbci	r25, 0xF6	; 246
    842e:	fc 01       	movw	r30, r24
    8430:	e5 5a       	subi	r30, 0xA5	; 165
    8432:	ff 4f       	sbci	r31, 0xFF	; 255
    8434:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8436:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    843a:	3f 96       	adiw	r30, 0x0f	; 15
    843c:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    843e:	23 e0       	ldi	r18, 0x03	; 3
    8440:	42 9f       	mul	r20, r18
    8442:	c0 01       	movw	r24, r0
    8444:	11 24       	eor	r1, r1
    8446:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    844a:	30 e0       	ldi	r19, 0x00	; 0
    844c:	fc 01       	movw	r30, r24
    844e:	ee 0f       	add	r30, r30
    8450:	ff 1f       	adc	r31, r31
    8452:	e5 5e       	subi	r30, 0xE5	; 229
    8454:	f4 4f       	sbci	r31, 0xF4	; 244
    8456:	31 83       	std	Z+1, r19	; 0x01
    8458:	20 83       	st	Z, r18
    845a:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    845e:	30 e0       	ldi	r19, 0x00	; 0
    8460:	fc 01       	movw	r30, r24
    8462:	ee 0f       	add	r30, r30
    8464:	ff 1f       	adc	r31, r31
    8466:	e3 5e       	subi	r30, 0xE3	; 227
    8468:	f4 4f       	sbci	r31, 0xF4	; 244
    846a:	31 83       	std	Z+1, r19	; 0x01
    846c:	20 83       	st	Z, r18
    846e:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8472:	30 e0       	ldi	r19, 0x00	; 0
    8474:	88 0f       	add	r24, r24
    8476:	99 1f       	adc	r25, r25
    8478:	fc 01       	movw	r30, r24
    847a:	e1 5e       	subi	r30, 0xE1	; 225
    847c:	f4 4f       	sbci	r31, 0xF4	; 244
    847e:	31 83       	std	Z+1, r19	; 0x01
    8480:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8482:	4f 5f       	subi	r20, 0xFF	; 255
    8484:	c6 cf       	rjmp	.-116    	; 0x8412 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8486:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    848a:	81 50       	subi	r24, 0x01	; 1
    848c:	8f 30       	cpi	r24, 0x0F	; 15
    848e:	90 f5       	brcc	.+100    	; 0x84f4 <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8490:	28 2f       	mov	r18, r24
    8492:	30 e0       	ldi	r19, 0x00	; 0
    8494:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8498:	22 5e       	subi	r18, 0xE2	; 226
    849a:	36 4f       	sbci	r19, 0xF6	; 246
    849c:	f9 01       	movw	r30, r18
    849e:	e5 5a       	subi	r30, 0xA5	; 165
    84a0:	ff 4f       	sbci	r31, 0xFF	; 255
    84a2:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    84a4:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    84a8:	3f 96       	adiw	r30, 0x0f	; 15
    84aa:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    84ac:	93 e0       	ldi	r25, 0x03	; 3
    84ae:	89 9f       	mul	r24, r25
    84b0:	90 01       	movw	r18, r0
    84b2:	11 24       	eor	r1, r1
    84b4:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84b8:	50 e0       	ldi	r21, 0x00	; 0
    84ba:	f9 01       	movw	r30, r18
    84bc:	ee 0f       	add	r30, r30
    84be:	ff 1f       	adc	r31, r31
    84c0:	e5 5e       	subi	r30, 0xE5	; 229
    84c2:	f4 4f       	sbci	r31, 0xF4	; 244
    84c4:	51 83       	std	Z+1, r21	; 0x01
    84c6:	40 83       	st	Z, r20
    84c8:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84cc:	50 e0       	ldi	r21, 0x00	; 0
    84ce:	f9 01       	movw	r30, r18
    84d0:	ee 0f       	add	r30, r30
    84d2:	ff 1f       	adc	r31, r31
    84d4:	e3 5e       	subi	r30, 0xE3	; 227
    84d6:	f4 4f       	sbci	r31, 0xF4	; 244
    84d8:	51 83       	std	Z+1, r21	; 0x01
    84da:	40 83       	st	Z, r20
    84dc:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84e0:	50 e0       	ldi	r21, 0x00	; 0
    84e2:	22 0f       	add	r18, r18
    84e4:	33 1f       	adc	r19, r19
    84e6:	f9 01       	movw	r30, r18
    84e8:	e1 5e       	subi	r30, 0xE1	; 225
    84ea:	f4 4f       	sbci	r31, 0xF4	; 244
    84ec:	51 83       	std	Z+1, r21	; 0x01
    84ee:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    84f0:	8f 5f       	subi	r24, 0xFF	; 255
    84f2:	cc cf       	rjmp	.-104    	; 0x848c <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    84f4:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    84f8:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    84fc:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8500:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8504:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8508:	81 30       	cpi	r24, 0x01	; 1
    850a:	09 f0       	breq	.+2      	; 0x850e <_Z18Edited_In_Schedulev+0x426>
    850c:	6b c3       	rjmp	.+1750   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    850e:	60 e1       	ldi	r22, 0x10	; 16
    8510:	7e e0       	ldi	r23, 0x0E	; 14
    8512:	45 c1       	rjmp	.+650    	; 0x879e <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    8514:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8518:	81 30       	cpi	r24, 0x01	; 1
    851a:	09 f0       	breq	.+2      	; 0x851e <_Z18Edited_In_Schedulev+0x436>
    851c:	63 c3       	rjmp	.+1734   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    851e:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8522:	80 e0       	ldi	r24, 0x00	; 0
    8524:	90 e0       	ldi	r25, 0x00	; 0
    8526:	20 e0       	ldi	r18, 0x00	; 0
    8528:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    852a:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    852e:	a9 01       	movw	r20, r18
    8530:	42 5e       	subi	r20, 0xE2	; 226
    8532:	56 4f       	sbci	r21, 0xF6	; 246
    8534:	fa 01       	movw	r30, r20
    8536:	e5 5a       	subi	r30, 0xA5	; 165
    8538:	ff 4f       	sbci	r31, 0xFF	; 255
    853a:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    853c:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8540:	3f 96       	adiw	r30, 0x0f	; 15
    8542:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8544:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8548:	50 e0       	ldi	r21, 0x00	; 0
    854a:	fc 01       	movw	r30, r24
    854c:	ee 0f       	add	r30, r30
    854e:	ff 1f       	adc	r31, r31
    8550:	e5 5e       	subi	r30, 0xE5	; 229
    8552:	f4 4f       	sbci	r31, 0xF4	; 244
    8554:	51 83       	std	Z+1, r21	; 0x01
    8556:	40 83       	st	Z, r20
    8558:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    855c:	50 e0       	ldi	r21, 0x00	; 0
    855e:	fc 01       	movw	r30, r24
    8560:	ee 0f       	add	r30, r30
    8562:	ff 1f       	adc	r31, r31
    8564:	e3 5e       	subi	r30, 0xE3	; 227
    8566:	f4 4f       	sbci	r31, 0xF4	; 244
    8568:	51 83       	std	Z+1, r21	; 0x01
    856a:	40 83       	st	Z, r20
    856c:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8570:	50 e0       	ldi	r21, 0x00	; 0
    8572:	fc 01       	movw	r30, r24
    8574:	ee 0f       	add	r30, r30
    8576:	ff 1f       	adc	r31, r31
    8578:	e1 5e       	subi	r30, 0xE1	; 225
    857a:	f4 4f       	sbci	r31, 0xF4	; 244
    857c:	51 83       	std	Z+1, r21	; 0x01
    857e:	40 83       	st	Z, r20
    8580:	2f 5f       	subi	r18, 0xFF	; 255
    8582:	3f 4f       	sbci	r19, 0xFF	; 255
    8584:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8586:	2f 30       	cpi	r18, 0x0F	; 15
    8588:	31 05       	cpc	r19, r1
    858a:	79 f6       	brne	.-98     	; 0x852a <_Z18Edited_In_Schedulev+0x442>
    858c:	23 c3       	rjmp	.+1606   	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    858e:	81 30       	cpi	r24, 0x01	; 1
    8590:	51 f4       	brne	.+20     	; 0x85a6 <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8592:	6b e0       	ldi	r22, 0x0B	; 11
    8594:	7e e0       	ldi	r23, 0x0E	; 14
    8596:	86 ec       	ldi	r24, 0xC6	; 198
    8598:	94 e1       	ldi	r25, 0x14	; 20
    859a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    859e:	86 ec       	ldi	r24, 0xC6	; 198
    85a0:	94 e1       	ldi	r25, 0x14	; 20
    85a2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    85a6:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85aa:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    85ae:	98 17       	cp	r25, r24
    85b0:	08 f0       	brcs	.+2      	; 0x85b4 <_Z18Edited_In_Schedulev+0x4cc>
    85b2:	43 c1       	rjmp	.+646    	; 0x883a <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    85b8:	81 30       	cpi	r24, 0x01	; 1
    85ba:	51 f4       	brne	.+20     	; 0x85d0 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    85bc:	66 e0       	ldi	r22, 0x06	; 6
    85be:	7e e0       	ldi	r23, 0x0E	; 14
    85c0:	86 ec       	ldi	r24, 0xC6	; 198
    85c2:	94 e1       	ldi	r25, 0x14	; 20
    85c4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85c8:	86 ec       	ldi	r24, 0xC6	; 198
    85ca:	94 e1       	ldi	r25, 0x14	; 20
    85cc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    85d0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85d4:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    85dc:	81 30       	cpi	r24, 0x01	; 1
    85de:	51 f4       	brne	.+20     	; 0x85f4 <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    85e0:	6f ef       	ldi	r22, 0xFF	; 255
    85e2:	7d e0       	ldi	r23, 0x0D	; 13
    85e4:	86 ec       	ldi	r24, 0xC6	; 198
    85e6:	94 e1       	ldi	r25, 0x14	; 20
    85e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85ec:	86 ec       	ldi	r24, 0xC6	; 198
    85ee:	94 e1       	ldi	r25, 0x14	; 20
    85f0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    85f4:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    85f8:	f0 e0       	ldi	r31, 0x00	; 0
    85fa:	e7 59       	subi	r30, 0x97	; 151
    85fc:	f6 4f       	sbci	r31, 0xF6	; 246
    85fe:	90 81       	ld	r25, Z
    8600:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8604:	98 13       	cpse	r25, r24
    8606:	04 c0       	rjmp	.+8      	; 0x8610 <_Z18Edited_In_Schedulev+0x528>
    8608:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    860c:	81 11       	cpse	r24, r1
    860e:	41 c0       	rjmp	.+130    	; 0x8692 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8610:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8614:	81 30       	cpi	r24, 0x01	; 1
    8616:	51 f4       	brne	.+20     	; 0x862c <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    8618:	68 ef       	ldi	r22, 0xF8	; 248
    861a:	7d e0       	ldi	r23, 0x0D	; 13
    861c:	86 ec       	ldi	r24, 0xC6	; 198
    861e:	94 e1       	ldi	r25, 0x14	; 20
    8620:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8624:	86 ec       	ldi	r24, 0xC6	; 198
    8626:	94 e1       	ldi	r25, 0x14	; 20
    8628:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    862c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8630:	88 23       	and	r24, r24
    8632:	09 f4       	brne	.+2      	; 0x8636 <_Z18Edited_In_Schedulev+0x54e>
    8634:	e7 c2       	rjmp	.+1486   	; 0x8c04 <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    8636:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    863a:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    863e:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8642:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8646:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    864a:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    864e:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8652:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8656:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    865a:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    865e:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8662:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8666:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    866a:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    866e:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8672:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8676:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    867a:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    867e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8682:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    8686:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    868a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    868e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8692:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8696:	82 30       	cpi	r24, 0x02	; 2
    8698:	08 f4       	brcc	.+2      	; 0x869c <_Z18Edited_In_Schedulev+0x5b4>
    869a:	92 c0       	rjmp	.+292    	; 0x87c0 <_Z18Edited_In_Schedulev+0x6d8>
    869c:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    869e:	84 2f       	mov	r24, r20
    86a0:	90 e0       	ldi	r25, 0x00	; 0
    86a2:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    86a6:	30 e0       	ldi	r19, 0x00	; 0
    86a8:	21 50       	subi	r18, 0x01	; 1
    86aa:	31 09       	sbc	r19, r1
    86ac:	82 17       	cp	r24, r18
    86ae:	93 07       	cpc	r25, r19
    86b0:	84 f5       	brge	.+96     	; 0x8712 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    86b2:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86b6:	82 5e       	subi	r24, 0xE2	; 226
    86b8:	96 4f       	sbci	r25, 0xF6	; 246
    86ba:	fc 01       	movw	r30, r24
    86bc:	e5 5a       	subi	r30, 0xA5	; 165
    86be:	ff 4f       	sbci	r31, 0xFF	; 255
    86c0:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    86c2:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    86c6:	3f 96       	adiw	r30, 0x0f	; 15
    86c8:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    86ca:	23 e0       	ldi	r18, 0x03	; 3
    86cc:	42 9f       	mul	r20, r18
    86ce:	c0 01       	movw	r24, r0
    86d0:	11 24       	eor	r1, r1
    86d2:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86d6:	30 e0       	ldi	r19, 0x00	; 0
    86d8:	fc 01       	movw	r30, r24
    86da:	ee 0f       	add	r30, r30
    86dc:	ff 1f       	adc	r31, r31
    86de:	e5 5e       	subi	r30, 0xE5	; 229
    86e0:	f4 4f       	sbci	r31, 0xF4	; 244
    86e2:	31 83       	std	Z+1, r19	; 0x01
    86e4:	20 83       	st	Z, r18
    86e6:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86ea:	30 e0       	ldi	r19, 0x00	; 0
    86ec:	fc 01       	movw	r30, r24
    86ee:	ee 0f       	add	r30, r30
    86f0:	ff 1f       	adc	r31, r31
    86f2:	e3 5e       	subi	r30, 0xE3	; 227
    86f4:	f4 4f       	sbci	r31, 0xF4	; 244
    86f6:	31 83       	std	Z+1, r19	; 0x01
    86f8:	20 83       	st	Z, r18
    86fa:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86fe:	30 e0       	ldi	r19, 0x00	; 0
    8700:	88 0f       	add	r24, r24
    8702:	99 1f       	adc	r25, r25
    8704:	fc 01       	movw	r30, r24
    8706:	e1 5e       	subi	r30, 0xE1	; 225
    8708:	f4 4f       	sbci	r31, 0xF4	; 244
    870a:	31 83       	std	Z+1, r19	; 0x01
    870c:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    870e:	4f 5f       	subi	r20, 0xFF	; 255
    8710:	c6 cf       	rjmp	.-116    	; 0x869e <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8712:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8716:	81 50       	subi	r24, 0x01	; 1
    8718:	8f 30       	cpi	r24, 0x0F	; 15
    871a:	90 f5       	brcc	.+100    	; 0x8780 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    871c:	28 2f       	mov	r18, r24
    871e:	30 e0       	ldi	r19, 0x00	; 0
    8720:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8724:	22 5e       	subi	r18, 0xE2	; 226
    8726:	36 4f       	sbci	r19, 0xF6	; 246
    8728:	f9 01       	movw	r30, r18
    872a:	e5 5a       	subi	r30, 0xA5	; 165
    872c:	ff 4f       	sbci	r31, 0xFF	; 255
    872e:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8730:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    8734:	3f 96       	adiw	r30, 0x0f	; 15
    8736:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    8738:	93 e0       	ldi	r25, 0x03	; 3
    873a:	89 9f       	mul	r24, r25
    873c:	90 01       	movw	r18, r0
    873e:	11 24       	eor	r1, r1
    8740:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8744:	50 e0       	ldi	r21, 0x00	; 0
    8746:	f9 01       	movw	r30, r18
    8748:	ee 0f       	add	r30, r30
    874a:	ff 1f       	adc	r31, r31
    874c:	e5 5e       	subi	r30, 0xE5	; 229
    874e:	f4 4f       	sbci	r31, 0xF4	; 244
    8750:	51 83       	std	Z+1, r21	; 0x01
    8752:	40 83       	st	Z, r20
    8754:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8758:	50 e0       	ldi	r21, 0x00	; 0
    875a:	f9 01       	movw	r30, r18
    875c:	ee 0f       	add	r30, r30
    875e:	ff 1f       	adc	r31, r31
    8760:	e3 5e       	subi	r30, 0xE3	; 227
    8762:	f4 4f       	sbci	r31, 0xF4	; 244
    8764:	51 83       	std	Z+1, r21	; 0x01
    8766:	40 83       	st	Z, r20
    8768:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    876c:	50 e0       	ldi	r21, 0x00	; 0
    876e:	22 0f       	add	r18, r18
    8770:	33 1f       	adc	r19, r19
    8772:	f9 01       	movw	r30, r18
    8774:	e1 5e       	subi	r30, 0xE1	; 225
    8776:	f4 4f       	sbci	r31, 0xF4	; 244
    8778:	51 83       	std	Z+1, r21	; 0x01
    877a:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    877c:	8f 5f       	subi	r24, 0xFF	; 255
    877e:	cc cf       	rjmp	.-104    	; 0x8718 <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8780:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8784:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8788:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    878c:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8790:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8794:	81 30       	cpi	r24, 0x01	; 1
    8796:	09 f0       	breq	.+2      	; 0x879a <_Z18Edited_In_Schedulev+0x6b2>
    8798:	25 c2       	rjmp	.+1098   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    879a:	66 ec       	ldi	r22, 0xC6	; 198
    879c:	7d e0       	ldi	r23, 0x0D	; 13
    879e:	86 ec       	ldi	r24, 0xC6	; 198
    87a0:	94 e1       	ldi	r25, 0x14	; 20
    87a2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    87a6:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    87aa:	4a e0       	ldi	r20, 0x0A	; 10
    87ac:	50 e0       	ldi	r21, 0x00	; 0
    87ae:	86 ec       	ldi	r24, 0xC6	; 198
    87b0:	94 e1       	ldi	r25, 0x14	; 20
    87b2:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    87b6:	86 ec       	ldi	r24, 0xC6	; 198
    87b8:	94 e1       	ldi	r25, 0x14	; 20
    87ba:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    87be:	12 c2       	rjmp	.+1060   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    87c0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    87c4:	81 30       	cpi	r24, 0x01	; 1
    87c6:	09 f0       	breq	.+2      	; 0x87ca <_Z18Edited_In_Schedulev+0x6e2>
    87c8:	0d c2       	rjmp	.+1050   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    87ca:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    87ce:	80 e0       	ldi	r24, 0x00	; 0
    87d0:	90 e0       	ldi	r25, 0x00	; 0
    87d2:	20 e0       	ldi	r18, 0x00	; 0
    87d4:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    87d6:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87da:	a9 01       	movw	r20, r18
    87dc:	42 5e       	subi	r20, 0xE2	; 226
    87de:	56 4f       	sbci	r21, 0xF6	; 246
    87e0:	fa 01       	movw	r30, r20
    87e2:	e5 5a       	subi	r30, 0xA5	; 165
    87e4:	ff 4f       	sbci	r31, 0xFF	; 255
    87e6:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    87e8:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    87ec:	3f 96       	adiw	r30, 0x0f	; 15
    87ee:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    87f0:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87f4:	50 e0       	ldi	r21, 0x00	; 0
    87f6:	fc 01       	movw	r30, r24
    87f8:	ee 0f       	add	r30, r30
    87fa:	ff 1f       	adc	r31, r31
    87fc:	e5 5e       	subi	r30, 0xE5	; 229
    87fe:	f4 4f       	sbci	r31, 0xF4	; 244
    8800:	51 83       	std	Z+1, r21	; 0x01
    8802:	40 83       	st	Z, r20
    8804:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8808:	50 e0       	ldi	r21, 0x00	; 0
    880a:	fc 01       	movw	r30, r24
    880c:	ee 0f       	add	r30, r30
    880e:	ff 1f       	adc	r31, r31
    8810:	e3 5e       	subi	r30, 0xE3	; 227
    8812:	f4 4f       	sbci	r31, 0xF4	; 244
    8814:	51 83       	std	Z+1, r21	; 0x01
    8816:	40 83       	st	Z, r20
    8818:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    881c:	50 e0       	ldi	r21, 0x00	; 0
    881e:	fc 01       	movw	r30, r24
    8820:	ee 0f       	add	r30, r30
    8822:	ff 1f       	adc	r31, r31
    8824:	e1 5e       	subi	r30, 0xE1	; 225
    8826:	f4 4f       	sbci	r31, 0xF4	; 244
    8828:	51 83       	std	Z+1, r21	; 0x01
    882a:	40 83       	st	Z, r20
    882c:	2f 5f       	subi	r18, 0xFF	; 255
    882e:	3f 4f       	sbci	r19, 0xFF	; 255
    8830:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8832:	2f 30       	cpi	r18, 0x0F	; 15
    8834:	31 05       	cpc	r19, r1
    8836:	79 f6       	brne	.-98     	; 0x87d6 <_Z18Edited_In_Schedulev+0x6ee>
    8838:	cd c1       	rjmp	.+922    	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    883a:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    883e:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8842:	89 17       	cp	r24, r25
    8844:	08 f0       	brcs	.+2      	; 0x8848 <_Z18Edited_In_Schedulev+0x760>
    8846:	ce c1       	rjmp	.+924    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8848:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    884c:	81 30       	cpi	r24, 0x01	; 1
    884e:	51 f4       	brne	.+20     	; 0x8864 <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    8850:	61 ec       	ldi	r22, 0xC1	; 193
    8852:	7d e0       	ldi	r23, 0x0D	; 13
    8854:	86 ec       	ldi	r24, 0xC6	; 198
    8856:	94 e1       	ldi	r25, 0x14	; 20
    8858:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    885c:	86 ec       	ldi	r24, 0xC6	; 198
    885e:	94 e1       	ldi	r25, 0x14	; 20
    8860:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8864:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8868:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    886c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8870:	81 30       	cpi	r24, 0x01	; 1
    8872:	51 f4       	brne	.+20     	; 0x8888 <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    8874:	6c eb       	ldi	r22, 0xBC	; 188
    8876:	7d e0       	ldi	r23, 0x0D	; 13
    8878:	86 ec       	ldi	r24, 0xC6	; 198
    887a:	94 e1       	ldi	r25, 0x14	; 20
    887c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8880:	86 ec       	ldi	r24, 0xC6	; 198
    8882:	94 e1       	ldi	r25, 0x14	; 20
    8884:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8888:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    888c:	f0 e0       	ldi	r31, 0x00	; 0
    888e:	e7 59       	subi	r30, 0x97	; 151
    8890:	f6 4f       	sbci	r31, 0xF6	; 246
    8892:	90 81       	ld	r25, Z
    8894:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8898:	98 13       	cpse	r25, r24
    889a:	04 c0       	rjmp	.+8      	; 0x88a4 <_Z18Edited_In_Schedulev+0x7bc>
    889c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88a0:	81 11       	cpse	r24, r1
    88a2:	41 c0       	rjmp	.+130    	; 0x8926 <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    88a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    88a8:	81 30       	cpi	r24, 0x01	; 1
    88aa:	51 f4       	brne	.+20     	; 0x88c0 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    88ac:	67 eb       	ldi	r22, 0xB7	; 183
    88ae:	7d e0       	ldi	r23, 0x0D	; 13
    88b0:	86 ec       	ldi	r24, 0xC6	; 198
    88b2:	94 e1       	ldi	r25, 0x14	; 20
    88b4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    88b8:	86 ec       	ldi	r24, 0xC6	; 198
    88ba:	94 e1       	ldi	r25, 0x14	; 20
    88bc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    88c0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88c4:	88 23       	and	r24, r24
    88c6:	09 f4       	brne	.+2      	; 0x88ca <_Z18Edited_In_Schedulev+0x7e2>
    88c8:	a0 c1       	rjmp	.+832    	; 0x8c0a <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    88ca:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    88ce:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    88d2:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    88d6:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    88da:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    88de:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    88e2:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    88e6:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    88ea:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    88ee:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    88f2:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    88f6:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    88fa:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    88fe:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8902:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8906:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    890a:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    890e:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8912:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8916:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    891a:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    891e:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8922:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8926:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    892a:	82 30       	cpi	r24, 0x02	; 2
    892c:	08 f4       	brcc	.+2      	; 0x8930 <_Z18Edited_In_Schedulev+0x848>
    892e:	92 c0       	rjmp	.+292    	; 0x8a54 <_Z18Edited_In_Schedulev+0x96c>
    8930:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8932:	84 2f       	mov	r24, r20
    8934:	90 e0       	ldi	r25, 0x00	; 0
    8936:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    893a:	30 e0       	ldi	r19, 0x00	; 0
    893c:	21 50       	subi	r18, 0x01	; 1
    893e:	31 09       	sbc	r19, r1
    8940:	82 17       	cp	r24, r18
    8942:	93 07       	cpc	r25, r19
    8944:	84 f5       	brge	.+96     	; 0x89a6 <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8946:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    894a:	82 5e       	subi	r24, 0xE2	; 226
    894c:	96 4f       	sbci	r25, 0xF6	; 246
    894e:	fc 01       	movw	r30, r24
    8950:	e5 5a       	subi	r30, 0xA5	; 165
    8952:	ff 4f       	sbci	r31, 0xFF	; 255
    8954:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8956:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    895a:	3f 96       	adiw	r30, 0x0f	; 15
    895c:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    895e:	23 e0       	ldi	r18, 0x03	; 3
    8960:	42 9f       	mul	r20, r18
    8962:	c0 01       	movw	r24, r0
    8964:	11 24       	eor	r1, r1
    8966:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    896a:	30 e0       	ldi	r19, 0x00	; 0
    896c:	fc 01       	movw	r30, r24
    896e:	ee 0f       	add	r30, r30
    8970:	ff 1f       	adc	r31, r31
    8972:	e5 5e       	subi	r30, 0xE5	; 229
    8974:	f4 4f       	sbci	r31, 0xF4	; 244
    8976:	31 83       	std	Z+1, r19	; 0x01
    8978:	20 83       	st	Z, r18
    897a:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    897e:	30 e0       	ldi	r19, 0x00	; 0
    8980:	fc 01       	movw	r30, r24
    8982:	ee 0f       	add	r30, r30
    8984:	ff 1f       	adc	r31, r31
    8986:	e3 5e       	subi	r30, 0xE3	; 227
    8988:	f4 4f       	sbci	r31, 0xF4	; 244
    898a:	31 83       	std	Z+1, r19	; 0x01
    898c:	20 83       	st	Z, r18
    898e:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8992:	30 e0       	ldi	r19, 0x00	; 0
    8994:	88 0f       	add	r24, r24
    8996:	99 1f       	adc	r25, r25
    8998:	fc 01       	movw	r30, r24
    899a:	e1 5e       	subi	r30, 0xE1	; 225
    899c:	f4 4f       	sbci	r31, 0xF4	; 244
    899e:	31 83       	std	Z+1, r19	; 0x01
    89a0:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    89a2:	4f 5f       	subi	r20, 0xFF	; 255
    89a4:	c6 cf       	rjmp	.-116    	; 0x8932 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    89a6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    89aa:	81 50       	subi	r24, 0x01	; 1
    89ac:	8f 30       	cpi	r24, 0x0F	; 15
    89ae:	90 f5       	brcc	.+100    	; 0x8a14 <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    89b0:	28 2f       	mov	r18, r24
    89b2:	30 e0       	ldi	r19, 0x00	; 0
    89b4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    89b8:	22 5e       	subi	r18, 0xE2	; 226
    89ba:	36 4f       	sbci	r19, 0xF6	; 246
    89bc:	f9 01       	movw	r30, r18
    89be:	e5 5a       	subi	r30, 0xA5	; 165
    89c0:	ff 4f       	sbci	r31, 0xFF	; 255
    89c2:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    89c4:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    89c8:	3f 96       	adiw	r30, 0x0f	; 15
    89ca:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    89cc:	93 e0       	ldi	r25, 0x03	; 3
    89ce:	89 9f       	mul	r24, r25
    89d0:	90 01       	movw	r18, r0
    89d2:	11 24       	eor	r1, r1
    89d4:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    89d8:	50 e0       	ldi	r21, 0x00	; 0
    89da:	f9 01       	movw	r30, r18
    89dc:	ee 0f       	add	r30, r30
    89de:	ff 1f       	adc	r31, r31
    89e0:	e5 5e       	subi	r30, 0xE5	; 229
    89e2:	f4 4f       	sbci	r31, 0xF4	; 244
    89e4:	51 83       	std	Z+1, r21	; 0x01
    89e6:	40 83       	st	Z, r20
    89e8:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    89ec:	50 e0       	ldi	r21, 0x00	; 0
    89ee:	f9 01       	movw	r30, r18
    89f0:	ee 0f       	add	r30, r30
    89f2:	ff 1f       	adc	r31, r31
    89f4:	e3 5e       	subi	r30, 0xE3	; 227
    89f6:	f4 4f       	sbci	r31, 0xF4	; 244
    89f8:	51 83       	std	Z+1, r21	; 0x01
    89fa:	40 83       	st	Z, r20
    89fc:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8a00:	50 e0       	ldi	r21, 0x00	; 0
    8a02:	22 0f       	add	r18, r18
    8a04:	33 1f       	adc	r19, r19
    8a06:	f9 01       	movw	r30, r18
    8a08:	e1 5e       	subi	r30, 0xE1	; 225
    8a0a:	f4 4f       	sbci	r31, 0xF4	; 244
    8a0c:	51 83       	std	Z+1, r21	; 0x01
    8a0e:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8a10:	8f 5f       	subi	r24, 0xFF	; 255
    8a12:	cc cf       	rjmp	.-104    	; 0x89ac <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8a14:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8a18:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8a1c:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8a20:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8a28:	81 30       	cpi	r24, 0x01	; 1
    8a2a:	09 f0       	breq	.+2      	; 0x8a2e <_Z18Edited_In_Schedulev+0x946>
    8a2c:	db c0       	rjmp	.+438    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    8a2e:	65 e8       	ldi	r22, 0x85	; 133
    8a30:	7d e0       	ldi	r23, 0x0D	; 13
    8a32:	86 ec       	ldi	r24, 0xC6	; 198
    8a34:	94 e1       	ldi	r25, 0x14	; 20
    8a36:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8a3a:	86 ec       	ldi	r24, 0xC6	; 198
    8a3c:	94 e1       	ldi	r25, 0x14	; 20
    8a3e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8a42:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8a46:	4a e0       	ldi	r20, 0x0A	; 10
    8a48:	50 e0       	ldi	r21, 0x00	; 0
    8a4a:	86 ec       	ldi	r24, 0xC6	; 198
    8a4c:	94 e1       	ldi	r25, 0x14	; 20
    8a4e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    8a52:	c8 c0       	rjmp	.+400    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8a54:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8a58:	81 30       	cpi	r24, 0x01	; 1
    8a5a:	09 f0       	breq	.+2      	; 0x8a5e <_Z18Edited_In_Schedulev+0x976>
    8a5c:	c3 c0       	rjmp	.+390    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    8a5e:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8a62:	80 e0       	ldi	r24, 0x00	; 0
    8a64:	90 e0       	ldi	r25, 0x00	; 0
    8a66:	20 e0       	ldi	r18, 0x00	; 0
    8a68:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8a6a:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a6e:	a9 01       	movw	r20, r18
    8a70:	42 5e       	subi	r20, 0xE2	; 226
    8a72:	56 4f       	sbci	r21, 0xF6	; 246
    8a74:	fa 01       	movw	r30, r20
    8a76:	e5 5a       	subi	r30, 0xA5	; 165
    8a78:	ff 4f       	sbci	r31, 0xFF	; 255
    8a7a:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8a7c:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8a80:	3f 96       	adiw	r30, 0x0f	; 15
    8a82:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8a84:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a88:	50 e0       	ldi	r21, 0x00	; 0
    8a8a:	fc 01       	movw	r30, r24
    8a8c:	ee 0f       	add	r30, r30
    8a8e:	ff 1f       	adc	r31, r31
    8a90:	e5 5e       	subi	r30, 0xE5	; 229
    8a92:	f4 4f       	sbci	r31, 0xF4	; 244
    8a94:	51 83       	std	Z+1, r21	; 0x01
    8a96:	40 83       	st	Z, r20
    8a98:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a9c:	50 e0       	ldi	r21, 0x00	; 0
    8a9e:	fc 01       	movw	r30, r24
    8aa0:	ee 0f       	add	r30, r30
    8aa2:	ff 1f       	adc	r31, r31
    8aa4:	e3 5e       	subi	r30, 0xE3	; 227
    8aa6:	f4 4f       	sbci	r31, 0xF4	; 244
    8aa8:	51 83       	std	Z+1, r21	; 0x01
    8aaa:	40 83       	st	Z, r20
    8aac:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8ab0:	50 e0       	ldi	r21, 0x00	; 0
    8ab2:	fc 01       	movw	r30, r24
    8ab4:	ee 0f       	add	r30, r30
    8ab6:	ff 1f       	adc	r31, r31
    8ab8:	e1 5e       	subi	r30, 0xE1	; 225
    8aba:	f4 4f       	sbci	r31, 0xF4	; 244
    8abc:	51 83       	std	Z+1, r21	; 0x01
    8abe:	40 83       	st	Z, r20
    8ac0:	2f 5f       	subi	r18, 0xFF	; 255
    8ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    8ac4:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8ac6:	2f 30       	cpi	r18, 0x0F	; 15
    8ac8:	31 05       	cpc	r19, r1
    8aca:	79 f6       	brne	.-98     	; 0x8a6a <_Z18Edited_In_Schedulev+0x982>
    8acc:	83 c0       	rjmp	.+262    	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8ace:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8ad2:	81 11       	cpse	r24, r1
    8ad4:	88 c0       	rjmp	.+272    	; 0x8be6 <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8ad6:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8ada:	88 23       	and	r24, r24
    8adc:	09 f4       	brne	.+2      	; 0x8ae0 <_Z18Edited_In_Schedulev+0x9f8>
    8ade:	83 c0       	rjmp	.+262    	; 0x8be6 <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ae0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8ae4:	81 30       	cpi	r24, 0x01	; 1
    8ae6:	51 f4       	brne	.+20     	; 0x8afc <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    8ae8:	6f e7       	ldi	r22, 0x7F	; 127
    8aea:	7d e0       	ldi	r23, 0x0D	; 13
    8aec:	86 ec       	ldi	r24, 0xC6	; 198
    8aee:	94 e1       	ldi	r25, 0x14	; 20
    8af0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8af4:	86 ec       	ldi	r24, 0xC6	; 198
    8af6:	94 e1       	ldi	r25, 0x14	; 20
    8af8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8afc:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8b00:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8b04:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8b08:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8b0c:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8b10:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8b14:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8b18:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8b1c:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8b20:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8b24:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8b28:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8b2c:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8b30:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8b34:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8b38:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8b3c:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8b40:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8b44:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8b48:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8b4c:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    8b50:	81 e0       	ldi	r24, 0x01	; 1
    8b52:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8b56:	80 e0       	ldi	r24, 0x00	; 0
    8b58:	90 e0       	ldi	r25, 0x00	; 0
    8b5a:	20 e0       	ldi	r18, 0x00	; 0
    8b5c:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8b5e:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b62:	a9 01       	movw	r20, r18
    8b64:	42 5e       	subi	r20, 0xE2	; 226
    8b66:	56 4f       	sbci	r21, 0xF6	; 246
    8b68:	fa 01       	movw	r30, r20
    8b6a:	e5 5a       	subi	r30, 0xA5	; 165
    8b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    8b6e:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8b70:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8b74:	3f 96       	adiw	r30, 0x0f	; 15
    8b76:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8b78:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b7c:	50 e0       	ldi	r21, 0x00	; 0
    8b7e:	fc 01       	movw	r30, r24
    8b80:	ee 0f       	add	r30, r30
    8b82:	ff 1f       	adc	r31, r31
    8b84:	e5 5e       	subi	r30, 0xE5	; 229
    8b86:	f4 4f       	sbci	r31, 0xF4	; 244
    8b88:	51 83       	std	Z+1, r21	; 0x01
    8b8a:	40 83       	st	Z, r20
    8b8c:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b90:	50 e0       	ldi	r21, 0x00	; 0
    8b92:	fc 01       	movw	r30, r24
    8b94:	ee 0f       	add	r30, r30
    8b96:	ff 1f       	adc	r31, r31
    8b98:	e3 5e       	subi	r30, 0xE3	; 227
    8b9a:	f4 4f       	sbci	r31, 0xF4	; 244
    8b9c:	51 83       	std	Z+1, r21	; 0x01
    8b9e:	40 83       	st	Z, r20
    8ba0:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8ba4:	50 e0       	ldi	r21, 0x00	; 0
    8ba6:	fc 01       	movw	r30, r24
    8ba8:	ee 0f       	add	r30, r30
    8baa:	ff 1f       	adc	r31, r31
    8bac:	e1 5e       	subi	r30, 0xE1	; 225
    8bae:	f4 4f       	sbci	r31, 0xF4	; 244
    8bb0:	51 83       	std	Z+1, r21	; 0x01
    8bb2:	40 83       	st	Z, r20
    8bb4:	2f 5f       	subi	r18, 0xFF	; 255
    8bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    8bb8:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8bba:	2e 30       	cpi	r18, 0x0E	; 14
    8bbc:	31 05       	cpc	r19, r1
    8bbe:	79 f6       	brne	.-98     	; 0x8b5e <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bc0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8bc4:	81 30       	cpi	r24, 0x01	; 1
    8bc6:	31 f4       	brne	.+12     	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8bc8:	6a e3       	ldi	r22, 0x3A	; 58
    8bca:	7d e0       	ldi	r23, 0x0D	; 13
    8bcc:	86 ec       	ldi	r24, 0xC6	; 198
    8bce:	94 e1       	ldi	r25, 0x14	; 20
    8bd0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8bd4:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8bd8:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8bdc:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8be0:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8be4:	15 c0       	rjmp	.+42     	; 0x8c10 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8be6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8bea:	81 11       	cpse	r24, r1
    8bec:	fb cf       	rjmp	.-10     	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
    8bee:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8bf2:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8bf6:	89 2b       	or	r24, r25
    8bf8:	09 f4       	brne	.+2      	; 0x8bfc <_Z18Edited_In_Schedulev+0xb14>
    8bfa:	72 cf       	rjmp	.-284    	; 0x8ae0 <_Z18Edited_In_Schedulev+0x9f8>
    8bfc:	f3 cf       	rjmp	.-26     	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8bfe:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c02:	d7 cb       	rjmp	.-2130   	; 0x83b2 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8c04:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c08:	1a cd       	rjmp	.-1484   	; 0x863e <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8c0a:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c0e:	61 ce       	rjmp	.-830    	; 0x88d2 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8c10:	df 91       	pop	r29
    8c12:	cf 91       	pop	r28
    8c14:	1f 91       	pop	r17
    8c16:	0f 91       	pop	r16
    8c18:	ff 90       	pop	r15
    8c1a:	ef 90       	pop	r14
    8c1c:	08 95       	ret

00008c1e <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    8c1e:	1f 93       	push	r17
    8c20:	cf 93       	push	r28
    8c22:	df 93       	push	r29
    8c24:	c8 2f       	mov	r28, r24
    8c26:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c28:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8c2c:	81 30       	cpi	r24, 0x01	; 1
    8c2e:	89 f4       	brne	.+34     	; 0x8c52 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    8c30:	6f e7       	ldi	r22, 0x7F	; 127
    8c32:	7c e0       	ldi	r23, 0x0C	; 12
    8c34:	86 ec       	ldi	r24, 0xC6	; 198
    8c36:	94 e1       	ldi	r25, 0x14	; 20
    8c38:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8c3c:	4a e0       	ldi	r20, 0x0A	; 10
    8c3e:	50 e0       	ldi	r21, 0x00	; 0
    8c40:	6c 2f       	mov	r22, r28
    8c42:	86 ec       	ldi	r24, 0xC6	; 198
    8c44:	94 e1       	ldi	r25, 0x14	; 20
    8c46:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c4a:	86 ec       	ldi	r24, 0xC6	; 198
    8c4c:	94 e1       	ldi	r25, 0x14	; 20
    8c4e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    8c52:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8c56:	c8 0f       	add	r28, r24
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    8c58:	d0 91 f4 13 	lds	r29, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c5c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8c60:	81 30       	cpi	r24, 0x01	; 1
    8c62:	19 f5       	brne	.+70     	; 0x8caa <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    8c64:	6e e6       	ldi	r22, 0x6E	; 110
    8c66:	7c e0       	ldi	r23, 0x0C	; 12
    8c68:	86 ec       	ldi	r24, 0xC6	; 198
    8c6a:	94 e1       	ldi	r25, 0x14	; 20
    8c6c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8c70:	4a e0       	ldi	r20, 0x0A	; 10
    8c72:	50 e0       	ldi	r21, 0x00	; 0
    8c74:	6c 2f       	mov	r22, r28
    8c76:	86 ec       	ldi	r24, 0xC6	; 198
    8c78:	94 e1       	ldi	r25, 0x14	; 20
    8c7a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c7e:	86 ec       	ldi	r24, 0xC6	; 198
    8c80:	94 e1       	ldi	r25, 0x14	; 20
    8c82:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    8c86:	6b e4       	ldi	r22, 0x4B	; 75
    8c88:	7c e0       	ldi	r23, 0x0C	; 12
    8c8a:	86 ec       	ldi	r24, 0xC6	; 198
    8c8c:	94 e1       	ldi	r25, 0x14	; 20
    8c8e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8c92:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8c96:	4a e0       	ldi	r20, 0x0A	; 10
    8c98:	50 e0       	ldi	r21, 0x00	; 0
    8c9a:	86 ec       	ldi	r24, 0xC6	; 198
    8c9c:	94 e1       	ldi	r25, 0x14	; 20
    8c9e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8ca2:	86 ec       	ldi	r24, 0xC6	; 198
    8ca4:	94 e1       	ldi	r25, 0x14	; 20
    8ca6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8caa:	81 2f       	mov	r24, r17
    8cac:	90 e0       	ldi	r25, 0x00	; 0
    8cae:	fc 01       	movw	r30, r24
    8cb0:	31 97       	sbiw	r30, 0x01	; 1
    8cb2:	ec 30       	cpi	r30, 0x0C	; 12
    8cb4:	f1 05       	cpc	r31, r1
    8cb6:	08 f0       	brcs	.+2      	; 0x8cba <_Z18Next_Day_Calculatehh+0x9c>
    8cb8:	56 c0       	rjmp	.+172    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8cba:	88 27       	eor	r24, r24
    8cbc:	ef 52       	subi	r30, 0x2F	; 47
    8cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    8cc0:	8f 4f       	sbci	r24, 0xFF	; 255
    8cc2:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
    8cc6:	8d 2f       	mov	r24, r29
    8cc8:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8cca:	61 f0       	breq	.+24     	; 0x8ce4 <_Z18Next_Day_Calculatehh+0xc6>
			{
				if(date > 28)
    8ccc:	cd 31       	cpi	r28, 0x1D	; 29
    8cce:	08 f0       	brcs	.+2      	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
    8cd0:	4a c0       	rjmp	.+148    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
					
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
    8cd2:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8cd6:	8c 17       	cp	r24, r28
    8cd8:	08 f4       	brcc	.+2      	; 0x8cdc <_Z18Next_Day_Calculatehh+0xbe>
    8cda:	45 c0       	rjmp	.+138    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8cdc:	c8 13       	cpse	r28, r24
    8cde:	0b c0       	rjmp	.+22     	; 0x8cf6 <_Z18Next_Day_Calculatehh+0xd8>
					{
						return 1;
    8ce0:	81 e0       	ldi	r24, 0x01	; 1
    8ce2:	42 c0       	rjmp	.+132    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
					}
				}
			}
			else
			{
				if(date > 29)
    8ce4:	ce 31       	cpi	r28, 0x1E	; 30
    8ce6:	08 f0       	brcs	.+2      	; 0x8cea <_Z18Next_Day_Calculatehh+0xcc>
    8ce8:	3f c0       	rjmp	.+126    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8cea:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8cee:	9c 17       	cp	r25, r28
    8cf0:	d8 f1       	brcs	.+118    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8cf2:	c9 17       	cp	r28, r25
    8cf4:	a9 f3       	breq	.-22     	; 0x8ce0 <_Z18Next_Day_Calculatehh+0xc2>
					{
						return 1;
					}
					else
					{
						return 2;
    8cf6:	82 e0       	ldi	r24, 0x02	; 2
    8cf8:	37 c0       	rjmp	.+110    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
			
		}break;
		
		case _eMARCH:
		{
			if(date > 31)
    8cfa:	c0 32       	cpi	r28, 0x20	; 32
    8cfc:	a0 f5       	brcc	.+104    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8cfe:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d02:	8c 17       	cp	r24, r28
    8d04:	80 f1       	brcs	.+96     	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d06:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8d0a:	81 30       	cpi	r24, 0x01	; 1
    8d0c:	19 f5       	brne	.+70     	; 0x8d54 <_Z18Next_Day_Calculatehh+0x136>
					{
						_kSERAIL_MON_WRITE("Required date : ");
    8d0e:	6a e3       	ldi	r22, 0x3A	; 58
    8d10:	7c e0       	ldi	r23, 0x0C	; 12
    8d12:	86 ec       	ldi	r24, 0xC6	; 198
    8d14:	94 e1       	ldi	r25, 0x14	; 20
    8d16:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(date);
    8d1a:	4a e0       	ldi	r20, 0x0A	; 10
    8d1c:	50 e0       	ldi	r21, 0x00	; 0
    8d1e:	6c 2f       	mov	r22, r28
    8d20:	86 ec       	ldi	r24, 0xC6	; 198
    8d22:	94 e1       	ldi	r25, 0x14	; 20
    8d24:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8d28:	86 ec       	ldi	r24, 0xC6	; 198
    8d2a:	94 e1       	ldi	r25, 0x14	; 20
    8d2c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						
						_kSERAIL_MON_WRITE("Current date : ");
    8d30:	6a e2       	ldi	r22, 0x2A	; 42
    8d32:	7c e0       	ldi	r23, 0x0C	; 12
    8d34:	86 ec       	ldi	r24, 0xC6	; 198
    8d36:	94 e1       	ldi	r25, 0x14	; 20
    8d38:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    8d3c:	4a e0       	ldi	r20, 0x0A	; 10
    8d3e:	50 e0       	ldi	r21, 0x00	; 0
    8d40:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d44:	86 ec       	ldi	r24, 0xC6	; 198
    8d46:	94 e1       	ldi	r25, 0x14	; 20
    8d48:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8d4c:	86 ec       	ldi	r24, 0xC6	; 198
    8d4e:	94 e1       	ldi	r25, 0x14	; 20
    8d50:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8d54:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d58:	c1 cf       	rjmp	.-126    	; 0x8cdc <_Z18Next_Day_Calculatehh+0xbe>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8d5a:	cf 31       	cpi	r28, 0x1F	; 31
    8d5c:	20 f4       	brcc	.+8      	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8d5e:	b9 cf       	rjmp	.-142    	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8d60:	c0 32       	cpi	r28, 0x20	; 32
    8d62:	08 f4       	brcc	.+2      	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8d64:	b6 cf       	rjmp	.-148    	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
	}
	
	return 0;
    8d66:	80 e0       	ldi	r24, 0x00	; 0
	
}
    8d68:	df 91       	pop	r29
    8d6a:	cf 91       	pop	r28
    8d6c:	1f 91       	pop	r17
    8d6e:	08 95       	ret

00008d70 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8d70:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8d72:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    8d76:	81 30       	cpi	r24, 0x01	; 1
    8d78:	09 f4       	brne	.+2      	; 0x8d7c <_Z22Do_Not_Repeat_Schedulev+0xc>
    8d7a:	4b c0       	rjmp	.+150    	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8d7c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d80:	88 23       	and	r24, r24
    8d82:	09 f4       	brne	.+2      	; 0x8d86 <_Z22Do_Not_Repeat_Schedulev+0x16>
    8d84:	46 c0       	rjmp	.+140    	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8d86:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d8a:	81 30       	cpi	r24, 0x01	; 1
    8d8c:	29 f4       	brne	.+10     	; 0x8d98 <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8d8e:	60 91 2b 09 	lds	r22, 0x092B	; 0x80092b <_sSchedules+0xd>
    8d92:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8d96:	04 c0       	rjmp	.+8      	; 0x8da0 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8d98:	60 91 ef 0b 	lds	r22, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8d9c:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8da0:	3e df       	rcall	.-388    	; 0x8c1e <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8da2:	81 30       	cpi	r24, 0x01	; 1
    8da4:	09 f0       	breq	.+2      	; 0x8da8 <_Z22Do_Not_Repeat_Schedulev+0x38>
    8da6:	53 c0       	rjmp	.+166    	; 0x8e4e <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8da8:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8dac:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8db0:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8db4:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8db8:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    8dbc:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    8dc0:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    8dc4:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    8dc8:	48 17       	cp	r20, r24
    8dca:	59 07       	cpc	r21, r25
    8dcc:	6a 07       	cpc	r22, r26
    8dce:	7b 07       	cpc	r23, r27
    8dd0:	00 f5       	brcc	.+64     	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8dd2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8dd6:	81 30       	cpi	r24, 0x01	; 1
    8dd8:	f1 f4       	brne	.+60     	; 0x8e16 <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8dda:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8dde:	81 30       	cpi	r24, 0x01	; 1
    8de0:	51 f4       	brne	.+20     	; 0x8df6 <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8de2:	62 e0       	ldi	r22, 0x02	; 2
    8de4:	7d e0       	ldi	r23, 0x0D	; 13
    8de6:	86 ec       	ldi	r24, 0xC6	; 198
    8de8:	94 e1       	ldi	r25, 0x14	; 20
    8dea:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8dee:	86 ec       	ldi	r24, 0xC6	; 198
    8df0:	94 e1       	ldi	r25, 0x14	; 20
    8df2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8df6:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    8dfa:	f0 e0       	ldi	r31, 0x00	; 0
    8dfc:	ee 0f       	add	r30, r30
    8dfe:	ff 1f       	adc	r31, r31
    8e00:	e4 5e       	subi	r30, 0xE4	; 228
    8e02:	f6 4f       	sbci	r31, 0xF6	; 246
    8e04:	87 8d       	ldd	r24, Z+31	; 0x1f
    8e06:	90 a1       	ldd	r25, Z+32	; 0x20
    8e08:	01 96       	adiw	r24, 0x01	; 1
    8e0a:	90 93 27 09 	sts	0x0927, r25	; 0x800927 <_sSchedules+0x9>
    8e0e:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <_sSchedules+0x8>
						return 0;
    8e12:	c0 e0       	ldi	r28, 0x00	; 0
    8e14:	3f c0       	rjmp	.+126    	; 0x8e94 <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8e16:	80 e0       	ldi	r24, 0x00	; 0
    8e18:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8e1a:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8e1e:	9c 01       	movw	r18, r24
    8e20:	22 5e       	subi	r18, 0xE2	; 226
    8e22:	36 4f       	sbci	r19, 0xF6	; 246
    8e24:	f9 01       	movw	r30, r18
    8e26:	e5 5a       	subi	r30, 0xA5	; 165
    8e28:	ff 4f       	sbci	r31, 0xFF	; 255
    8e2a:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8e2c:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8e30:	3f 96       	adiw	r30, 0x0f	; 15
    8e32:	40 83       	st	Z, r20
    8e34:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8e36:	8f 30       	cpi	r24, 0x0F	; 15
    8e38:	91 05       	cpc	r25, r1
    8e3a:	79 f7       	brne	.-34     	; 0x8e1a <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e3c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e40:	c1 30       	cpi	r28, 0x01	; 1
    8e42:	11 f0       	breq	.+4      	; 0x8e48 <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8e44:	c1 e0       	ldi	r28, 0x01	; 1
    8e46:	26 c0       	rjmp	.+76     	; 0x8e94 <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8e48:	68 ec       	ldi	r22, 0xC8	; 200
    8e4a:	7c e0       	ldi	r23, 0x0C	; 12
    8e4c:	1b c0       	rjmp	.+54     	; 0x8e84 <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8e4e:	82 30       	cpi	r24, 0x02	; 2
    8e50:	01 f7       	brne	.-64     	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8e52:	80 e0       	ldi	r24, 0x00	; 0
    8e54:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8e56:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8e5a:	9c 01       	movw	r18, r24
    8e5c:	22 5e       	subi	r18, 0xE2	; 226
    8e5e:	36 4f       	sbci	r19, 0xF6	; 246
    8e60:	f9 01       	movw	r30, r18
    8e62:	e5 5a       	subi	r30, 0xA5	; 165
    8e64:	ff 4f       	sbci	r31, 0xFF	; 255
    8e66:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8e68:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8e6c:	3f 96       	adiw	r30, 0x0f	; 15
    8e6e:	40 83       	st	Z, r20
    8e70:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8e72:	8f 30       	cpi	r24, 0x0F	; 15
    8e74:	91 05       	cpc	r25, r1
    8e76:	79 f7       	brne	.-34     	; 0x8e56 <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e78:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e7c:	c1 30       	cpi	r28, 0x01	; 1
    8e7e:	11 f7       	brne	.-60     	; 0x8e44 <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8e80:	60 e9       	ldi	r22, 0x90	; 144
    8e82:	7c e0       	ldi	r23, 0x0C	; 12
    8e84:	86 ec       	ldi	r24, 0xC6	; 198
    8e86:	94 e1       	ldi	r25, 0x14	; 20
    8e88:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e8c:	86 ec       	ldi	r24, 0xC6	; 198
    8e8e:	94 e1       	ldi	r25, 0x14	; 20
    8e90:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8e94:	8c 2f       	mov	r24, r28
    8e96:	cf 91       	pop	r28
    8e98:	08 95       	ret

00008e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8e9a:	cf 93       	push	r28
    8e9c:	df 93       	push	r29
    8e9e:	c8 2f       	mov	r28, r24
    8ea0:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8ea2:	81 e0       	ldi	r24, 0x01	; 1
    8ea4:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8ea8:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8eac:	91 11       	cpse	r25, r1
    8eae:	06 c0       	rjmp	.+12     	; 0x8ebc <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8eb0:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8eb4:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8eb8:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8ebc:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    8ec0:	88 23       	and	r24, r24
    8ec2:	29 f0       	breq	.+10     	; 0x8ece <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8ec4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8ec8:	81 30       	cpi	r24, 0x01	; 1
    8eca:	09 f0       	breq	.+2      	; 0x8ece <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8ecc:	79 c1       	rjmp	.+754    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8ece:	81 e0       	ldi	r24, 0x01	; 1
    8ed0:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8ed4:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8ed8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8edc:	91 30       	cpi	r25, 0x01	; 1
    8ede:	91 f4       	brne	.+36     	; 0x8f04 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8ee0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8ee4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8ee8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8eec:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8ef0:	43 34       	cpi	r20, 0x43	; 67
    8ef2:	51 45       	sbci	r21, 0x51	; 81
    8ef4:	61 40       	sbci	r22, 0x01	; 1
    8ef6:	71 05       	cpc	r23, r1
    8ef8:	08 f0       	brcs	.+2      	; 0x8efc <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8efa:	56 c0       	rjmp	.+172    	; 0x8fa8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8efc:	c1 30       	cpi	r28, 0x01	; 1
    8efe:	09 f0       	breq	.+2      	; 0x8f02 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8f00:	53 c0       	rjmp	.+166    	; 0x8fa8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8f02:	6f c0       	rjmp	.+222    	; 0x8fe2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8f04:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8f08:	91 30       	cpi	r25, 0x01	; 1
    8f0a:	d1 f5       	brne	.+116    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8f0c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    8f10:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    8f14:	23 2b       	or	r18, r19
    8f16:	a1 f5       	brne	.+104    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8f18:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f1c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f20:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f24:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f28:	48 35       	cpi	r20, 0x58	; 88
    8f2a:	52 40       	sbci	r21, 0x02	; 2
    8f2c:	61 05       	cpc	r22, r1
    8f2e:	71 05       	cpc	r23, r1
    8f30:	08 f4       	brcc	.+2      	; 0x8f34 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8f32:	d5 c0       	rjmp	.+426    	; 0x90de <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8f34:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f38:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f3c:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f40:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f44:	4c 32       	cpi	r20, 0x2C	; 44
    8f46:	51 40       	sbci	r21, 0x01	; 1
    8f48:	61 05       	cpc	r22, r1
    8f4a:	71 05       	cpc	r23, r1
    8f4c:	08 f0       	brcs	.+2      	; 0x8f50 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8f4e:	e0 c0       	rjmp	.+448    	; 0x9110 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8f50:	47 e1       	ldi	r20, 0x17	; 23
    8f52:	50 e5       	ldi	r21, 0x50	; 80
    8f54:	61 e0       	ldi	r22, 0x01	; 1
    8f56:	70 e0       	ldi	r23, 0x00	; 0
    8f58:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    8f5c:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    8f60:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    8f64:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f68:	81 30       	cpi	r24, 0x01	; 1
    8f6a:	51 f4       	brne	.+20     	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8f6c:	63 e7       	ldi	r22, 0x73	; 115
    8f6e:	7b e0       	ldi	r23, 0x0B	; 11
    8f70:	86 ec       	ldi	r24, 0xC6	; 198
    8f72:	94 e1       	ldi	r25, 0x14	; 20
    8f74:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f78:	86 ec       	ldi	r24, 0xC6	; 198
    8f7a:	94 e1       	ldi	r25, 0x14	; 20
    8f7c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8f80:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f84:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f88:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f8c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8f94:	43 34       	cpi	r20, 0x43	; 67
    8f96:	51 45       	sbci	r21, 0x51	; 81
    8f98:	61 40       	sbci	r22, 0x01	; 1
    8f9a:	71 05       	cpc	r23, r1
    8f9c:	08 f0       	brcs	.+2      	; 0x8fa0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8f9e:	63 c0       	rjmp	.+198    	; 0x9066 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8fa0:	c1 30       	cpi	r28, 0x01	; 1
    8fa2:	09 f0       	breq	.+2      	; 0x8fa6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8fa4:	60 c0       	rjmp	.+192    	; 0x9066 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8fa6:	34 c0       	rjmp	.+104    	; 0x9010 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fa8:	81 30       	cpi	r24, 0x01	; 1
    8faa:	51 f4       	brne	.+20     	; 0x8fc0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8fac:	69 e9       	ldi	r22, 0x99	; 153
    8fae:	7b e0       	ldi	r23, 0x0B	; 11
    8fb0:	86 ec       	ldi	r24, 0xC6	; 198
    8fb2:	94 e1       	ldi	r25, 0x14	; 20
    8fb4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8fb8:	86 ec       	ldi	r24, 0xC6	; 198
    8fba:	94 e1       	ldi	r25, 0x14	; 20
    8fbc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8fc0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8fc4:	81 30       	cpi	r24, 0x01	; 1
    8fc6:	09 f0       	breq	.+2      	; 0x8fca <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8fc8:	fb c0       	rjmp	.+502    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8fca:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8fce:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8fd2:	89 2b       	or	r24, r25
    8fd4:	09 f0       	breq	.+2      	; 0x8fd8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8fd6:	f4 c0       	rjmp	.+488    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8fd8:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <_Z24Return_Previous_Day_Datev>
    8fdc:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8fe0:	7b c0       	rjmp	.+246    	; 0x90d8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fe2:	81 30       	cpi	r24, 0x01	; 1
    8fe4:	51 f4       	brne	.+20     	; 0x8ffa <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8fe6:	6d ed       	ldi	r22, 0xDD	; 221
    8fe8:	7b e0       	ldi	r23, 0x0B	; 11
    8fea:	86 ec       	ldi	r24, 0xC6	; 198
    8fec:	94 e1       	ldi	r25, 0x14	; 20
    8fee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8ff2:	86 ec       	ldi	r24, 0xC6	; 198
    8ff4:	94 e1       	ldi	r25, 0x14	; 20
    8ff6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8ffa:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8ffe:	81 30       	cpi	r24, 0x01	; 1
    9000:	f1 f4       	brne	.+60     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    9002:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9006:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    900a:	89 2b       	or	r24, r25
    900c:	09 f1       	breq	.+66     	; 0x9050 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    900e:	17 c0       	rjmp	.+46     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9010:	81 30       	cpi	r24, 0x01	; 1
    9012:	81 f4       	brne	.+32     	; 0x9034 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    9014:	61 e5       	ldi	r22, 0x51	; 81
    9016:	7b e0       	ldi	r23, 0x0B	; 11
    9018:	86 ec       	ldi	r24, 0xC6	; 198
    901a:	94 e1       	ldi	r25, 0x14	; 20
    901c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    9020:	64 e0       	ldi	r22, 0x04	; 4
    9022:	7b e0       	ldi	r23, 0x0B	; 11
    9024:	86 ec       	ldi	r24, 0xC6	; 198
    9026:	94 e1       	ldi	r25, 0x14	; 20
    9028:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    902c:	86 ec       	ldi	r24, 0xC6	; 198
    902e:	94 e1       	ldi	r25, 0x14	; 20
    9030:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    9034:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9038:	81 30       	cpi	r24, 0x01	; 1
    903a:	09 f4       	brne	.+2      	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    903c:	8a c0       	rjmp	.+276    	; 0x9152 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    903e:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <_sSchedules+0xc>
    9042:	4a e0       	ldi	r20, 0x0A	; 10
    9044:	50 e0       	ldi	r21, 0x00	; 0
    9046:	86 ec       	ldi	r24, 0xC6	; 198
    9048:	94 e1       	ldi	r25, 0x14	; 20
    904a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    904e:	b8 c0       	rjmp	.+368    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    9050:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9054:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9058:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    905c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    9060:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    9064:	ec cf       	rjmp	.-40     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9066:	81 30       	cpi	r24, 0x01	; 1
    9068:	51 f4       	brne	.+20     	; 0x907e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    906a:	61 e7       	ldi	r22, 0x71	; 113
    906c:	7a e0       	ldi	r23, 0x0A	; 10
    906e:	86 ec       	ldi	r24, 0xC6	; 198
    9070:	94 e1       	ldi	r25, 0x14	; 20
    9072:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9076:	86 ec       	ldi	r24, 0xC6	; 198
    9078:	94 e1       	ldi	r25, 0x14	; 20
    907a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    907e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9082:	81 30       	cpi	r24, 0x01	; 1
    9084:	09 f0       	breq	.+2      	; 0x9088 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    9086:	9c c0       	rjmp	.+312    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    9088:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    908c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9090:	89 2b       	or	r24, r25
    9092:	09 f0       	breq	.+2      	; 0x9096 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    9094:	95 c0       	rjmp	.+298    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    9096:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
				{
					if(check_days == 2)
    909a:	d2 30       	cpi	r29, 0x02	; 2
    909c:	09 f0       	breq	.+2      	; 0x90a0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    909e:	7f c0       	rjmp	.+254    	; 0x919e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90a0:	81 30       	cpi	r24, 0x01	; 1
    90a2:	51 f4       	brne	.+20     	; 0x90b8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    90a4:	62 e2       	ldi	r22, 0x22	; 34
    90a6:	7a e0       	ldi	r23, 0x0A	; 10
    90a8:	86 ec       	ldi	r24, 0xC6	; 198
    90aa:	94 e1       	ldi	r25, 0x14	; 20
    90ac:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    90b0:	86 ec       	ldi	r24, 0xC6	; 198
    90b2:	94 e1       	ldi	r25, 0x14	; 20
    90b4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    90b8:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    90bc:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    90c0:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    90c4:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    90c8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    90cc:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    90d0:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    90d4:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    90d8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    90dc:	71 c0       	rjmp	.+226    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    90de:	81 30       	cpi	r24, 0x01	; 1
    90e0:	51 f4       	brne	.+20     	; 0x90f6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    90e2:	65 e8       	ldi	r22, 0x85	; 133
    90e4:	7b e0       	ldi	r23, 0x0B	; 11
    90e6:	86 ec       	ldi	r24, 0xC6	; 198
    90e8:	94 e1       	ldi	r25, 0x14	; 20
    90ea:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    90ee:	86 ec       	ldi	r24, 0xC6	; 198
    90f0:	94 e1       	ldi	r25, 0x14	; 20
    90f2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    90f6:	88 e5       	ldi	r24, 0x58	; 88
    90f8:	92 e0       	ldi	r25, 0x02	; 2
    90fa:	a0 e0       	ldi	r26, 0x00	; 0
    90fc:	b0 e0       	ldi	r27, 0x00	; 0
    90fe:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    9102:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    9106:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    910a:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
    910e:	0c c0       	rjmp	.+24     	; 0x9128 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9110:	81 30       	cpi	r24, 0x01	; 1
    9112:	51 f4       	brne	.+20     	; 0x9128 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    9114:	61 e6       	ldi	r22, 0x61	; 97
    9116:	7b e0       	ldi	r23, 0x0B	; 11
    9118:	86 ec       	ldi	r24, 0xC6	; 198
    911a:	94 e1       	ldi	r25, 0x14	; 20
    911c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9120:	86 ec       	ldi	r24, 0xC6	; 198
    9122:	94 e1       	ldi	r25, 0x14	; 20
    9124:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    9128:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    912c:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    9130:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    9134:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9138:	8c 52       	subi	r24, 0x2C	; 44
    913a:	91 40       	sbci	r25, 0x01	; 1
    913c:	a1 09       	sbc	r26, r1
    913e:	b1 09       	sbc	r27, r1
    9140:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    9144:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    9148:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    914c:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
    9150:	17 cf       	rjmp	.-466    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    9152:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9156:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    915a:	89 2b       	or	r24, r25
    915c:	09 f0       	breq	.+2      	; 0x9160 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    915e:	6f cf       	rjmp	.-290    	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9160:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9164:	81 30       	cpi	r24, 0x01	; 1
    9166:	51 f4       	brne	.+20     	; 0x917c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    9168:	65 eb       	ldi	r22, 0xB5	; 181
    916a:	7a e0       	ldi	r23, 0x0A	; 10
    916c:	86 ec       	ldi	r24, 0xC6	; 198
    916e:	94 e1       	ldi	r25, 0x14	; 20
    9170:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9174:	86 ec       	ldi	r24, 0xC6	; 198
    9176:	94 e1       	ldi	r25, 0x14	; 20
    9178:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    917c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9180:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9184:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    9188:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    918c:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    9190:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    9194:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    9198:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
    919c:	61 cf       	rjmp	.-318    	; 0x9060 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    919e:	81 30       	cpi	r24, 0x01	; 1
    91a0:	51 f4       	brne	.+20     	; 0x91b6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    91a2:	6c ed       	ldi	r22, 0xDC	; 220
    91a4:	79 e0       	ldi	r23, 0x09	; 9
    91a6:	86 ec       	ldi	r24, 0xC6	; 198
    91a8:	94 e1       	ldi	r25, 0x14	; 20
    91aa:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    91ae:	86 ec       	ldi	r24, 0xC6	; 198
    91b0:	94 e1       	ldi	r25, 0x14	; 20
    91b2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    91b6:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <_Z24Return_Previous_Day_Datev>
    91ba:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    91be:	84 cf       	rjmp	.-248    	; 0x90c8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    91c0:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    91c4:	80 e0       	ldi	r24, 0x00	; 0
    91c6:	df 91       	pop	r29
    91c8:	cf 91       	pop	r28
    91ca:	08 95       	ret

000091cc <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    91cc:	0f 93       	push	r16
    91ce:	1f 93       	push	r17
    91d0:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    91d2:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    91d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    91da:	91 30       	cpi	r25, 0x01	; 1
    91dc:	09 f0       	breq	.+2      	; 0x91e0 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    91de:	51 c0       	rjmp	.+162    	; 0x9282 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    91e0:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    91e4:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    91e8:	29 13       	cpse	r18, r25
    91ea:	17 c0       	rjmp	.+46     	; 0x921a <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    91ec:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    91f0:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    91f4:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    91f8:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    91fc:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    9200:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    9204:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    9208:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    920c:	48 17       	cp	r20, r24
    920e:	59 07       	cpc	r21, r25
    9210:	6a 07       	cpc	r22, r26
    9212:	7b 07       	cpc	r23, r27
    9214:	08 f4       	brcc	.+2      	; 0x9218 <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    9216:	7f c0       	rjmp	.+254    	; 0x9316 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    9218:	f9 c0       	rjmp	.+498    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    921a:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    921e:	92 30       	cpi	r25, 0x02	; 2
    9220:	09 f0       	breq	.+2      	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    9222:	f6 c0       	rjmp	.+492    	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9224:	81 30       	cpi	r24, 0x01	; 1
    9226:	51 f4       	brne	.+20     	; 0x923c <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    9228:	60 ed       	ldi	r22, 0xD0	; 208
    922a:	79 e0       	ldi	r23, 0x09	; 9
    922c:	86 ec       	ldi	r24, 0xC6	; 198
    922e:	94 e1       	ldi	r25, 0x14	; 20
    9230:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9234:	86 ec       	ldi	r24, 0xC6	; 198
    9236:	94 e1       	ldi	r25, 0x14	; 20
    9238:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    923c:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    9240:	0e 94 76 34 	call	0x68ec	; 0x68ec <_Z22Day_In_Bet_Schedullingh>
    9244:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    9246:	82 30       	cpi	r24, 0x02	; 2
    9248:	41 f4       	brne	.+16     	; 0x925a <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    924a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    924e:	81 30       	cpi	r24, 0x01	; 1
    9250:	09 f0       	breq	.+2      	; 0x9254 <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    9252:	b2 c0       	rjmp	.+356    	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    9254:	64 ec       	ldi	r22, 0xC4	; 196
    9256:	79 e0       	ldi	r23, 0x09	; 9
    9258:	a7 c0       	rjmp	.+334    	; 0x93a8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    925a:	81 30       	cpi	r24, 0x01	; 1
    925c:	09 f0       	breq	.+2      	; 0x9260 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    925e:	d6 c0       	rjmp	.+428    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9260:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    9264:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    9268:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    926c:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9270:	83 34       	cpi	r24, 0x43	; 67
    9272:	91 45       	sbci	r25, 0x51	; 81
    9274:	a1 40       	sbci	r26, 0x01	; 1
    9276:	b1 05       	cpc	r27, r1
    9278:	08 f0       	brcs	.+2      	; 0x927c <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    927a:	c8 c0       	rjmp	.+400    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    927c:	c0 93 3c 09 	sts	0x093C, r28	; 0x80093c <_sSchedules+0x1e>
    9280:	9e c0       	rjmp	.+316    	; 0x93be <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9282:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <_sSchedules+0x1b>
    9286:	90 91 6a 14 	lds	r25, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    928a:	21 11       	cpse	r18, r1
    928c:	1a c0       	rjmp	.+52     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    928e:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9292:	21 11       	cpse	r18, r1
    9294:	16 c0       	rjmp	.+44     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9296:	91 30       	cpi	r25, 0x01	; 1
    9298:	a1 f4       	brne	.+40     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    929a:	20 91 da 0b 	lds	r18, 0x0BDA	; 0x800bda <_sSchedules+0x2bc>
    929e:	30 91 db 0b 	lds	r19, 0x0BDB	; 0x800bdb <_sSchedules+0x2bd>
    92a2:	23 2b       	or	r18, r19
    92a4:	89 f4       	brne	.+34     	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    92a6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    92aa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    92ae:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    92b2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    92b6:	45 2b       	or	r20, r21
    92b8:	46 2b       	or	r20, r22
    92ba:	47 2b       	or	r20, r23
    92bc:	09 f4       	brne	.+2      	; 0x92c0 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    92be:	bf c0       	rjmp	.+382    	; 0x943e <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    92c0:	03 c0       	rjmp	.+6      	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    92c2:	91 30       	cpi	r25, 0x01	; 1
    92c4:	09 f0       	breq	.+2      	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    92c6:	96 c0       	rjmp	.+300    	; 0x93f4 <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    92c8:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    92cc:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    92d0:	29 13       	cpse	r18, r25
    92d2:	2a c0       	rjmp	.+84     	; 0x9328 <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    92d4:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    92d8:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    92dc:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    92e0:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    92e4:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    92e8:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    92ec:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    92f0:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    92f4:	04 17       	cp	r16, r20
    92f6:	15 07       	cpc	r17, r21
    92f8:	26 07       	cpc	r18, r22
    92fa:	37 07       	cpc	r19, r23
    92fc:	78 f4       	brcc	.+30     	; 0x931c <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    92fe:	81 30       	cpi	r24, 0x01	; 1
    9300:	51 f4       	brne	.+20     	; 0x9316 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    9302:	60 ea       	ldi	r22, 0xA0	; 160
    9304:	79 e0       	ldi	r23, 0x09	; 9
    9306:	86 ec       	ldi	r24, 0xC6	; 198
    9308:	94 e1       	ldi	r25, 0x14	; 20
    930a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    930e:	86 ec       	ldi	r24, 0xC6	; 198
    9310:	94 e1       	ldi	r25, 0x14	; 20
    9312:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    9316:	10 92 d7 0b 	sts	0x0BD7, r1	; 0x800bd7 <_sSchedules+0x2b9>
    931a:	7a c0       	rjmp	.+244    	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    931c:	81 30       	cpi	r24, 0x01	; 1
    931e:	09 f0       	breq	.+2      	; 0x9322 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    9320:	93 c0       	rjmp	.+294    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    9322:	6c e8       	ldi	r22, 0x8C	; 140
    9324:	79 e0       	ldi	r23, 0x09	; 9
    9326:	6a c0       	rjmp	.+212    	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9328:	81 30       	cpi	r24, 0x01	; 1
    932a:	51 f4       	brne	.+20     	; 0x9340 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    932c:	6e e7       	ldi	r22, 0x7E	; 126
    932e:	79 e0       	ldi	r23, 0x09	; 9
    9330:	86 ec       	ldi	r24, 0xC6	; 198
    9332:	94 e1       	ldi	r25, 0x14	; 20
    9334:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9338:	86 ec       	ldi	r24, 0xC6	; 198
    933a:	94 e1       	ldi	r25, 0x14	; 20
    933c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    9340:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    9344:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9348:	92 30       	cpi	r25, 0x02	; 2
    934a:	09 f0       	breq	.+2      	; 0x934e <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    934c:	46 c0       	rjmp	.+140    	; 0x93da <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    934e:	81 30       	cpi	r24, 0x01	; 1
    9350:	51 f4       	brne	.+20     	; 0x9366 <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    9352:	60 e7       	ldi	r22, 0x70	; 112
    9354:	79 e0       	ldi	r23, 0x09	; 9
    9356:	86 ec       	ldi	r24, 0xC6	; 198
    9358:	94 e1       	ldi	r25, 0x14	; 20
    935a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    935e:	86 ec       	ldi	r24, 0xC6	; 198
    9360:	94 e1       	ldi	r25, 0x14	; 20
    9362:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    9366:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    936a:	0e 94 76 34 	call	0x68ec	; 0x68ec <_Z22Day_In_Bet_Schedullingh>
    936e:	c8 2f       	mov	r28, r24
    9370:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
							
						if(check_true_condition == 2)
    9374:	c2 30       	cpi	r28, 0x02	; 2
    9376:	29 f4       	brne	.+10     	; 0x9382 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9378:	81 30       	cpi	r24, 0x01	; 1
    937a:	f1 f4       	brne	.+60     	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    937c:	62 e6       	ldi	r22, 0x62	; 98
    937e:	79 e0       	ldi	r23, 0x09	; 9
    9380:	13 c0       	rjmp	.+38     	; 0x93a8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    9382:	c1 30       	cpi	r28, 0x01	; 1
    9384:	29 f5       	brne	.+74     	; 0x93d0 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9386:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    938a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    938e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9392:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9396:	43 34       	cpi	r20, 0x43	; 67
    9398:	51 45       	sbci	r21, 0x51	; 81
    939a:	61 40       	sbci	r22, 0x01	; 1
    939c:	71 05       	cpc	r23, r1
    939e:	90 f4       	brcc	.+36     	; 0x93c4 <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    93a0:	81 30       	cpi	r24, 0x01	; 1
    93a2:	51 f4       	brne	.+20     	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    93a4:	64 e5       	ldi	r22, 0x54	; 84
    93a6:	79 e0       	ldi	r23, 0x09	; 9
    93a8:	86 ec       	ldi	r24, 0xC6	; 198
    93aa:	94 e1       	ldi	r25, 0x14	; 20
    93ac:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    93b0:	86 ec       	ldi	r24, 0xC6	; 198
    93b2:	94 e1       	ldi	r25, 0x14	; 20
    93b4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    93b8:	81 e0       	ldi	r24, 0x01	; 1
    93ba:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    93be:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    93c2:	27 c0       	rjmp	.+78     	; 0x9412 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    93c4:	81 30       	cpi	r24, 0x01	; 1
    93c6:	09 f0       	breq	.+2      	; 0x93ca <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    93c8:	3f c0       	rjmp	.+126    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    93ca:	64 e4       	ldi	r22, 0x44	; 68
    93cc:	79 e0       	ldi	r23, 0x09	; 9
    93ce:	16 c0       	rjmp	.+44     	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    93d0:	81 30       	cpi	r24, 0x01	; 1
    93d2:	d1 f5       	brne	.+116    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    93d4:	64 e3       	ldi	r22, 0x34	; 52
    93d6:	79 e0       	ldi	r23, 0x09	; 9
    93d8:	11 c0       	rjmp	.+34     	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    93da:	81 30       	cpi	r24, 0x01	; 1
    93dc:	b9 f5       	brne	.+110    	; 0x944c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    93de:	64 e2       	ldi	r22, 0x24	; 36
    93e0:	79 e0       	ldi	r23, 0x09	; 9
    93e2:	86 ec       	ldi	r24, 0xC6	; 198
    93e4:	94 e1       	ldi	r25, 0x14	; 20
    93e6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    93ea:	86 ec       	ldi	r24, 0xC6	; 198
    93ec:	94 e1       	ldi	r25, 0x14	; 20
    93ee:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    93f2:	0e c0       	rjmp	.+28     	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    93f4:	81 30       	cpi	r24, 0x01	; 1
    93f6:	41 f5       	brne	.+80     	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    93f8:	60 e1       	ldi	r22, 0x10	; 16
    93fa:	79 e0       	ldi	r23, 0x09	; 9
    93fc:	86 ec       	ldi	r24, 0xC6	; 198
    93fe:	94 e1       	ldi	r25, 0x14	; 20
    9400:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9404:	86 ec       	ldi	r24, 0xC6	; 198
    9406:	94 e1       	ldi	r25, 0x14	; 20
    9408:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    940c:	c0 e0       	ldi	r28, 0x00	; 0
    940e:	01 c0       	rjmp	.+2      	; 0x9412 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    9410:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9412:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9416:	81 30       	cpi	r24, 0x01	; 1
    9418:	d1 f4       	brne	.+52     	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    941a:	6b ef       	ldi	r22, 0xFB	; 251
    941c:	78 e0       	ldi	r23, 0x08	; 8
    941e:	86 ec       	ldi	r24, 0xC6	; 198
    9420:	94 e1       	ldi	r25, 0x14	; 20
    9422:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    9426:	4a e0       	ldi	r20, 0x0A	; 10
    9428:	50 e0       	ldi	r21, 0x00	; 0
    942a:	6c 2f       	mov	r22, r28
    942c:	86 ec       	ldi	r24, 0xC6	; 198
    942e:	94 e1       	ldi	r25, 0x14	; 20
    9430:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    9434:	86 ec       	ldi	r24, 0xC6	; 198
    9436:	94 e1       	ldi	r25, 0x14	; 20
    9438:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    943c:	08 c0       	rjmp	.+16     	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    943e:	81 30       	cpi	r24, 0x01	; 1
    9440:	29 f4       	brne	.+10     	; 0x944c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    9442:	64 eb       	ldi	r22, 0xB4	; 180
    9444:	79 e0       	ldi	r23, 0x09	; 9
    9446:	cd cf       	rjmp	.-102    	; 0x93e2 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    9448:	c0 e0       	ldi	r28, 0x00	; 0
    944a:	01 c0       	rjmp	.+2      	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    944c:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    944e:	8c 2f       	mov	r24, r28
    9450:	cf 91       	pop	r28
    9452:	1f 91       	pop	r17
    9454:	0f 91       	pop	r16
    9456:	08 95       	ret

00009458 <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    9458:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    945c:	81 11       	cpse	r24, r1
    945e:	2a c0       	rjmp	.+84     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    9460:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    9464:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9468:	81 30       	cpi	r24, 0x01	; 1
    946a:	21 f5       	brne	.+72     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
    946c:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9470:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9474:	89 2b       	or	r24, r25
    9476:	f1 f4       	brne	.+60     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9478:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    947c:	81 30       	cpi	r24, 0x01	; 1
    947e:	51 f4       	brne	.+20     	; 0x9494 <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    9480:	6a ee       	ldi	r22, 0xEA	; 234
    9482:	78 e0       	ldi	r23, 0x08	; 8
    9484:	86 ec       	ldi	r24, 0xC6	; 198
    9486:	94 e1       	ldi	r25, 0x14	; 20
    9488:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    948c:	86 ec       	ldi	r24, 0xC6	; 198
    948e:	94 e1       	ldi	r25, 0x14	; 20
    9490:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    9494:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    9498:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    949c:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    94a0:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    94a4:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    94a8:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    94ac:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    94b0:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    94b4:	80 e0       	ldi	r24, 0x00	; 0
    94b6:	08 95       	ret

000094b8 <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    94b8:	2f 92       	push	r2
    94ba:	3f 92       	push	r3
    94bc:	4f 92       	push	r4
    94be:	5f 92       	push	r5
    94c0:	6f 92       	push	r6
    94c2:	7f 92       	push	r7
    94c4:	8f 92       	push	r8
    94c6:	9f 92       	push	r9
    94c8:	af 92       	push	r10
    94ca:	bf 92       	push	r11
    94cc:	cf 92       	push	r12
    94ce:	df 92       	push	r13
    94d0:	ef 92       	push	r14
    94d2:	ff 92       	push	r15
    94d4:	0f 93       	push	r16
    94d6:	1f 93       	push	r17
    94d8:	cf 93       	push	r28
    94da:	df 93       	push	r29
    94dc:	00 d0       	rcall	.+0      	; 0x94de <_Z17Doser_Pump_On_Offh+0x26>
    94de:	1f 92       	push	r1
    94e0:	cd b7       	in	r28, 0x3d	; 61
    94e2:	de b7       	in	r29, 0x3e	; 62
    94e4:	18 2f       	mov	r17, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    94e6:	80 91 e9 0d 	lds	r24, 0x0DE9	; 0x800de9 <_sExtra_Plot+0x1>
    94ea:	84 36       	cpi	r24, 0x64	; 100
    94ec:	08 f4       	brcc	.+2      	; 0x94f0 <_Z17Doser_Pump_On_Offh+0x38>
    94ee:	77 c3       	rjmp	.+1774   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    94f0:	11 30       	cpi	r17, 0x01	; 1
    94f2:	29 f4       	brne	.+10     	; 0x94fe <_Z17Doser_Pump_On_Offh+0x46>
    94f4:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    94f8:	84 30       	cpi	r24, 0x04	; 4
    94fa:	c1 f4       	brne	.+48     	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
    94fc:	70 c3       	rjmp	.+1760   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    94fe:	11 11       	cpse	r17, r1
    9500:	12 c0       	rjmp	.+36     	; 0x9526 <_Z17Doser_Pump_On_Offh+0x6e>
    9502:	80 e0       	ldi	r24, 0x00	; 0
    9504:	90 e0       	ldi	r25, 0x00	; 0
    9506:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    9508:	fc 01       	movw	r30, r24
    950a:	e2 58       	subi	r30, 0x82	; 130
    950c:	f4 4f       	sbci	r31, 0xF4	; 244
    950e:	30 81       	ld	r19, Z
    9510:	31 30       	cpi	r19, 0x01	; 1
    9512:	09 f4       	brne	.+2      	; 0x9516 <_Z17Doser_Pump_On_Offh+0x5e>
			{
				number_of_running_tanks++;
    9514:	2f 5f       	subi	r18, 0xFF	; 255
    9516:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    9518:	83 30       	cpi	r24, 0x03	; 3
    951a:	91 05       	cpc	r25, r1
    951c:	a9 f7       	brne	.-22     	; 0x9508 <_Z17Doser_Pump_On_Offh+0x50>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    951e:	22 30       	cpi	r18, 0x02	; 2
    9520:	08 f0       	brcs	.+2      	; 0x9524 <_Z17Doser_Pump_On_Offh+0x6c>
    9522:	5d c3       	rjmp	.+1722   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
    9524:	03 c0       	rjmp	.+6      	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    9526:	13 30       	cpi	r17, 0x03	; 3
    9528:	09 f4       	brne	.+2      	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
	{
		on_off = _kOFF;
    952a:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    952c:	80 91 e8 0d 	lds	r24, 0x0DE8	; 0x800de8 <_sExtra_Plot>
    9530:	81 11       	cpse	r24, r1
    9532:	55 c3       	rjmp	.+1706   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9534:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9538:	81 30       	cpi	r24, 0x01	; 1
    953a:	41 f5       	brne	.+80     	; 0x958c <_Z17Doser_Pump_On_Offh+0xd4>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    953c:	60 ea       	ldi	r22, 0xA0	; 160
    953e:	70 e1       	ldi	r23, 0x10	; 16
    9540:	86 ec       	ldi	r24, 0xC6	; 198
    9542:	94 e1       	ldi	r25, 0x14	; 20
    9544:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9548:	86 ec       	ldi	r24, 0xC6	; 198
    954a:	94 e1       	ldi	r25, 0x14	; 20
    954c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    9550:	2d ee       	ldi	r18, 0xED	; 237
    9552:	3d e0       	ldi	r19, 0x0D	; 13
    9554:	3a 83       	std	Y+2, r19	; 0x02
    9556:	29 83       	std	Y+1, r18	; 0x01
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    9558:	a9 81       	ldd	r26, Y+1	; 0x01
    955a:	ba 81       	ldd	r27, Y+2	; 0x02
    955c:	6d 91       	ld	r22, X+
    955e:	ba 83       	std	Y+2, r27	; 0x02
    9560:	a9 83       	std	Y+1, r26	; 0x01
    9562:	4a e0       	ldi	r20, 0x0A	; 10
    9564:	50 e0       	ldi	r21, 0x00	; 0
    9566:	86 ec       	ldi	r24, 0xC6	; 198
    9568:	94 e1       	ldi	r25, 0x14	; 20
    956a:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    956e:	6e e9       	ldi	r22, 0x9E	; 158
    9570:	70 e1       	ldi	r23, 0x10	; 16
    9572:	86 ec       	ldi	r24, 0xC6	; 198
    9574:	94 e1       	ldi	r25, 0x14	; 20
    9576:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    957a:	86 ec       	ldi	r24, 0xC6	; 198
    957c:	94 e1       	ldi	r25, 0x14	; 20
    957e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9582:	e9 81       	ldd	r30, Y+1	; 0x01
    9584:	fa 81       	ldd	r31, Y+2	; 0x02
    9586:	e2 5f       	subi	r30, 0xF2	; 242
    9588:	fd 40       	sbci	r31, 0x0D	; 13
    958a:	31 f7       	brne	.-52     	; 0x9558 <_Z17Doser_Pump_On_Offh+0xa0>
    958c:	4d ee       	ldi	r20, 0xED	; 237
    958e:	5d e0       	ldi	r21, 0x0D	; 13
    9590:	5c 83       	std	Y+4, r21	; 0x04
    9592:	4b 83       	std	Y+3, r20	; 0x03
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    9594:	7a 01       	movw	r14, r20
    9596:	00 e0       	ldi	r16, 0x00	; 0
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9598:	99 24       	eor	r9, r9
    959a:	93 94       	inc	r9
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    959c:	57 e0       	ldi	r21, 0x07	; 7
    959e:	c5 2e       	mov	r12, r21
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    95a0:	6d e0       	ldi	r22, 0x0D	; 13
    95a2:	d6 2e       	mov	r13, r22
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    95a4:	70 ed       	ldi	r23, 0xD0	; 208
    95a6:	47 2e       	mov	r4, r23
    95a8:	7f e0       	ldi	r23, 0x0F	; 15
    95aa:	57 2e       	mov	r5, r23
    95ac:	5a c1       	rjmp	.+692    	; 0x9862 <_Z17Doser_Pump_On_Offh+0x3aa>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95ae:	b3 e0       	ldi	r27, 0x03	; 3
    95b0:	b8 15       	cp	r27, r8
    95b2:	08 f0       	brcs	.+2      	; 0x95b6 <_Z17Doser_Pump_On_Offh+0xfe>
    95b4:	64 c1       	rjmp	.+712    	; 0x987e <_Z17Doser_Pump_On_Offh+0x3c6>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95b6:	88 2d       	mov	r24, r8
    95b8:	63 e0       	ldi	r22, 0x03	; 3
    95ba:	0e 94 85 eb 	call	0x1d70a	; 0x1d70a <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    95be:	2b ea       	ldi	r18, 0xAB	; 171
    95c0:	82 9e       	mul	r8, r18
    95c2:	21 2d       	mov	r18, r1
    95c4:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95c6:	99 23       	and	r25, r25
    95c8:	09 f4       	brne	.+2      	; 0x95cc <_Z17Doser_Pump_On_Offh+0x114>
    95ca:	54 c1       	rjmp	.+680    	; 0x9874 <_Z17Doser_Pump_On_Offh+0x3bc>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    95cc:	26 95       	lsr	r18
    95ce:	77 24       	eor	r7, r7
    95d0:	73 94       	inc	r7
    95d2:	72 0e       	add	r7, r18
    95d4:	89 2e       	mov	r8, r25
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    95d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    95da:	81 30       	cpi	r24, 0x01	; 1
    95dc:	89 f4       	brne	.+34     	; 0x9600 <_Z17Doser_Pump_On_Offh+0x148>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    95de:	6a e8       	ldi	r22, 0x8A	; 138
    95e0:	70 e1       	ldi	r23, 0x10	; 16
    95e2:	86 ec       	ldi	r24, 0xC6	; 198
    95e4:	94 e1       	ldi	r25, 0x14	; 20
    95e6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    95ea:	4a e0       	ldi	r20, 0x0A	; 10
    95ec:	50 e0       	ldi	r21, 0x00	; 0
    95ee:	67 2d       	mov	r22, r7
    95f0:	86 ec       	ldi	r24, 0xC6	; 198
    95f2:	94 e1       	ldi	r25, 0x14	; 20
    95f4:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    95f8:	86 ec       	ldi	r24, 0xC6	; 198
    95fa:	94 e1       	ldi	r25, 0x14	; 20
    95fc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9600:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
    9604:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9606:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    960a:	e5 ef       	ldi	r30, 0xF5	; 245
    960c:	f3 e1       	ldi	r31, 0x13	; 19
    960e:	24 e1       	ldi	r18, 0x14	; 20
    9610:	11 92       	st	Z+, r1
    9612:	2a 95       	dec	r18
    9614:	e9 f7       	brne	.-6      	; 0x9610 <_Z17Doser_Pump_On_Offh+0x158>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9616:	27 2d       	mov	r18, r7
    9618:	30 e0       	ldi	r19, 0x00	; 0
    961a:	21 50       	subi	r18, 0x01	; 1
    961c:	31 09       	sbc	r19, r1
    961e:	c2 9e       	mul	r12, r18
    9620:	c0 01       	movw	r24, r0
    9622:	c3 9e       	mul	r12, r19
    9624:	90 0d       	add	r25, r0
    9626:	11 24       	eor	r1, r1
    9628:	82 55       	subi	r24, 0x52	; 82
    962a:	9c 4e       	sbci	r25, 0xEC	; 236
    962c:	fc 01       	movw	r30, r24
    962e:	ec 58       	subi	r30, 0x8C	; 140
    9630:	ff 4f       	sbci	r31, 0xFF	; 255
    9632:	20 81       	ld	r18, Z
    9634:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9638:	31 96       	adiw	r30, 0x01	; 1
    963a:	20 81       	ld	r18, Z
    963c:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9640:	31 96       	adiw	r30, 0x01	; 1
    9642:	20 81       	ld	r18, Z
    9644:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9648:	31 96       	adiw	r30, 0x01	; 1
    964a:	20 81       	ld	r18, Z
    964c:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9650:	31 96       	adiw	r30, 0x01	; 1
    9652:	20 81       	ld	r18, Z
    9654:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9658:	31 96       	adiw	r30, 0x01	; 1
    965a:	20 81       	ld	r18, Z
    965c:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9660:	32 e0       	ldi	r19, 0x02	; 2
    9662:	30 93 fb 13 	sts	0x13FB, r19	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9666:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    966a:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    966e:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9672:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9676:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    967a:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    967e:	40 e0       	ldi	r20, 0x00	; 0
    9680:	50 e0       	ldi	r21, 0x00	; 0
    9682:	64 2e       	mov	r6, r20
    9684:	71 2c       	mov	r7, r1
    9686:	81 2c       	mov	r8, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9688:	d4 9e       	mul	r13, r20
    968a:	b0 01       	movw	r22, r0
    968c:	d5 9e       	mul	r13, r21
    968e:	70 0d       	add	r23, r0
    9690:	11 24       	eor	r1, r1
    9692:	6b 5e       	subi	r22, 0xEB	; 235
    9694:	73 4f       	sbci	r23, 0xF3	; 243
    9696:	28 2d       	mov	r18, r8
    9698:	30 e0       	ldi	r19, 0x00	; 0
    969a:	fb 01       	movw	r30, r22
    969c:	e2 0f       	add	r30, r18
    969e:	f3 1f       	adc	r31, r19
    96a0:	28 0f       	add	r18, r24
    96a2:	39 1f       	adc	r19, r25
    96a4:	d9 01       	movw	r26, r18
    96a6:	ac 58       	subi	r26, 0x8C	; 140
    96a8:	bf 4f       	sbci	r27, 0xFF	; 255
    96aa:	31 81       	ldd	r19, Z+1	; 0x01
    96ac:	2c 91       	ld	r18, X
    96ae:	32 17       	cp	r19, r18
    96b0:	19 f0       	breq	.+6      	; 0x96b8 <_Z17Doser_Pump_On_Offh+0x200>
					{
						compare_id = _kVALVE_ID_LEN;
    96b2:	36 e0       	ldi	r19, 0x06	; 6
    96b4:	83 2e       	mov	r8, r19
						id_len = _kRESET;
    96b6:	71 2c       	mov	r7, r1
					}
					id_len++;
    96b8:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    96ba:	83 94       	inc	r8
    96bc:	a5 e0       	ldi	r26, 0x05	; 5
    96be:	a8 15       	cp	r26, r8
    96c0:	50 f7       	brcc	.-44     	; 0x9696 <_Z17Doser_Pump_On_Offh+0x1de>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    96c2:	b6 e0       	ldi	r27, 0x06	; 6
    96c4:	7b 16       	cp	r7, r27
    96c6:	09 f4       	brne	.+2      	; 0x96ca <_Z17Doser_Pump_On_Offh+0x212>
    96c8:	dd c0       	rjmp	.+442    	; 0x9884 <_Z17Doser_Pump_On_Offh+0x3cc>
    96ca:	4f 5f       	subi	r20, 0xFF	; 255
    96cc:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    96ce:	46 30       	cpi	r20, 0x06	; 6
    96d0:	51 05       	cpc	r21, r1
    96d2:	b9 f6       	brne	.-82     	; 0x9682 <_Z17Doser_Pump_On_Offh+0x1ca>
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    96d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    96d8:	81 30       	cpi	r24, 0x01	; 1
    96da:	89 f4       	brne	.+34     	; 0x96fe <_Z17Doser_Pump_On_Offh+0x246>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    96dc:	64 e7       	ldi	r22, 0x74	; 116
    96de:	70 e1       	ldi	r23, 0x10	; 16
    96e0:	86 ec       	ldi	r24, 0xC6	; 198
    96e2:	94 e1       	ldi	r25, 0x14	; 20
    96e4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    96e8:	4a e0       	ldi	r20, 0x0A	; 10
    96ea:	50 e0       	ldi	r21, 0x00	; 0
    96ec:	60 2f       	mov	r22, r16
    96ee:	86 ec       	ldi	r24, 0xC6	; 198
    96f0:	94 e1       	ldi	r25, 0x14	; 20
    96f2:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    96f6:	86 ec       	ldi	r24, 0xC6	; 198
    96f8:	94 e1       	ldi	r25, 0x14	; 20
    96fa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    96fe:	ed e0       	ldi	r30, 0x0D	; 13
    9700:	0e 9f       	mul	r16, r30
    9702:	50 01       	movw	r10, r0
    9704:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9706:	81 2c       	mov	r8, r1
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9708:	d0 9e       	mul	r13, r16
    970a:	c0 01       	movw	r24, r0
    970c:	11 24       	eor	r1, r1
    970e:	9c 01       	movw	r18, r24
    9710:	2b 5e       	subi	r18, 0xEB	; 235
    9712:	33 4f       	sbci	r19, 0xF3	; 243
    9714:	a9 01       	movw	r20, r18
    9716:	45 5f       	subi	r20, 0xF5	; 245
    9718:	5f 4f       	sbci	r21, 0xFF	; 255
    971a:	5a 83       	std	Y+2, r21	; 0x02
    971c:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    971e:	19 01       	movw	r2, r18
    9720:	58 e0       	ldi	r21, 0x08	; 8
    9722:	25 0e       	add	r2, r21
    9724:	31 1c       	adc	r3, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9726:	dc 01       	movw	r26, r24
    9728:	aa 5e       	subi	r26, 0xEA	; 234
    972a:	b3 4f       	sbci	r27, 0xF3	; 243
    972c:	3d 01       	movw	r6, r26
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    972e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    9732:	81 11       	cpse	r24, r1
    9734:	a9 c0       	rjmp	.+338    	; 0x9888 <_Z17Doser_Pump_On_Offh+0x3d0>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9736:	83 94       	inc	r8
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9738:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    973c:	81 30       	cpi	r24, 0x01	; 1
    973e:	51 f4       	brne	.+20     	; 0x9754 <_Z17Doser_Pump_On_Offh+0x29c>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9740:	60 e5       	ldi	r22, 0x50	; 80
    9742:	70 e1       	ldi	r23, 0x10	; 16
    9744:	86 ec       	ldi	r24, 0xC6	; 198
    9746:	94 e1       	ldi	r25, 0x14	; 20
    9748:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    974c:	86 ec       	ldi	r24, 0xC6	; 198
    974e:	94 e1       	ldi	r25, 0x14	; 20
    9750:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    9754:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9758:	8c e0       	ldi	r24, 0x0C	; 12
    975a:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    975e:	88 eb       	ldi	r24, 0xB8	; 184
    9760:	9b e0       	ldi	r25, 0x0B	; 11
    9762:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    9766:	88 23       	and	r24, r24
    9768:	09 f4       	brne	.+2      	; 0x976c <_Z17Doser_Pump_On_Offh+0x2b4>
    976a:	9e c1       	rjmp	.+828    	; 0x9aa8 <_Z17Doser_Pump_On_Offh+0x5f0>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    976c:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
    9770:	88 23       	and	r24, r24
    9772:	09 f4       	brne	.+2      	; 0x9776 <_Z17Doser_Pump_On_Offh+0x2be>
    9774:	49 c1       	rjmp	.+658    	; 0x9a08 <_Z17Doser_Pump_On_Offh+0x550>
					{
						
						if(Subscribed_data_check())
    9776:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    977a:	81 11       	cpse	r24, r1
    977c:	9a c0       	rjmp	.+308    	; 0x98b2 <_Z17Doser_Pump_On_Offh+0x3fa>
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
							}
						}
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    977e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9782:	81 30       	cpi	r24, 0x01	; 1
    9784:	59 f5       	brne	.+86     	; 0x97dc <_Z17Doser_Pump_On_Offh+0x324>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9786:	6a e3       	ldi	r22, 0x3A	; 58
    9788:	70 e1       	ldi	r23, 0x10	; 16
    978a:	86 ec       	ldi	r24, 0xC6	; 198
    978c:	94 e1       	ldi	r25, 0x14	; 20
    978e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    9792:	4a e0       	ldi	r20, 0x0A	; 10
    9794:	50 e0       	ldi	r21, 0x00	; 0
    9796:	69 e0       	ldi	r22, 0x09	; 9
    9798:	74 e1       	ldi	r23, 0x14	; 20
    979a:	86 ec       	ldi	r24, 0xC6	; 198
    979c:	94 e1       	ldi	r25, 0x14	; 20
    979e:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    97a2:	86 ec       	ldi	r24, 0xC6	; 198
    97a4:	94 e1       	ldi	r25, 0x14	; 20
    97a6:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    97aa:	86 ec       	ldi	r24, 0xC6	; 198
    97ac:	94 e1       	ldi	r25, 0x14	; 20
    97ae:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    97b2:	6c e1       	ldi	r22, 0x1C	; 28
    97b4:	70 e1       	ldi	r23, 0x10	; 16
    97b6:	86 ec       	ldi	r24, 0xC6	; 198
    97b8:	94 e1       	ldi	r25, 0x14	; 20
    97ba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    97be:	47 e0       	ldi	r20, 0x07	; 7
    97c0:	50 e0       	ldi	r21, 0x00	; 0
    97c2:	b3 01       	movw	r22, r6
    97c4:	86 ec       	ldi	r24, 0xC6	; 198
    97c6:	94 e1       	ldi	r25, 0x14	; 20
    97c8:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
							Serial.println();
    97cc:	86 ec       	ldi	r24, 0xC6	; 198
    97ce:	94 e1       	ldi	r25, 0x14	; 20
    97d0:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    97d4:	86 ec       	ldi	r24, 0xC6	; 198
    97d6:	94 e1       	ldi	r25, 0x14	; 20
    97d8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    97dc:	a9 e0       	ldi	r26, 0x09	; 9
    97de:	b4 e1       	ldi	r27, 0x14	; 20
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    97e0:	80 e0       	ldi	r24, 0x00	; 0
    97e2:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    97e4:	2d 91       	ld	r18, X+
    97e6:	f5 01       	movw	r30, r10
    97e8:	e8 0f       	add	r30, r24
    97ea:	f9 1f       	adc	r31, r25
    97ec:	eb 5e       	subi	r30, 0xEB	; 235
    97ee:	f3 4f       	sbci	r31, 0xF3	; 243
    97f0:	31 81       	ldd	r19, Z+1	; 0x01
    97f2:	32 17       	cp	r19, r18
    97f4:	09 f4       	brne	.+2      	; 0x97f8 <_Z17Doser_Pump_On_Offh+0x340>
    97f6:	b2 c0       	rjmp	.+356    	; 0x995c <_Z17Doser_Pump_On_Offh+0x4a4>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    97f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    97fc:	81 30       	cpi	r24, 0x01	; 1
    97fe:	51 f4       	brne	.+20     	; 0x9814 <_Z17Doser_Pump_On_Offh+0x35c>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9800:	61 ef       	ldi	r22, 0xF1	; 241
    9802:	7f e0       	ldi	r23, 0x0F	; 15
    9804:	86 ec       	ldi	r24, 0xC6	; 198
    9806:	94 e1       	ldi	r25, 0x14	; 20
    9808:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    980c:	86 ec       	ldi	r24, 0xC6	; 198
    980e:	94 e1       	ldi	r25, 0x14	; 20
    9810:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9814:	b2 e0       	ldi	r27, 0x02	; 2
    9816:	8b 16       	cp	r8, r27
    9818:	09 f4       	brne	.+2      	; 0x981c <_Z17Doser_Pump_On_Offh+0x364>
    981a:	60 c0       	rjmp	.+192    	; 0x98dc <_Z17Doser_Pump_On_Offh+0x424>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    981c:	e9 81       	ldd	r30, Y+1	; 0x01
    981e:	fa 81       	ldd	r31, Y+2	; 0x02
    9820:	90 82       	st	Z, r9
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9822:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    9826:	90 e0       	ldi	r25, 0x00	; 0
    9828:	98 2f       	mov	r25, r24
    982a:	88 27       	eor	r24, r24
    982c:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    9830:	82 2b       	or	r24, r18
    9832:	d1 01       	movw	r26, r2
    9834:	8d 93       	st	X+, r24
    9836:	9c 93       	st	X, r25
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9838:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    983c:	18 13       	cpse	r17, r24
    983e:	94 c0       	rjmp	.+296    	; 0x9968 <_Z17Doser_Pump_On_Offh+0x4b0>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9840:	83 e0       	ldi	r24, 0x03	; 3
    9842:	88 2e       	mov	r8, r24
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9844:	68 ee       	ldi	r22, 0xE8	; 232
    9846:	73 e0       	ldi	r23, 0x03	; 3
    9848:	80 e0       	ldi	r24, 0x00	; 0
    984a:	90 e0       	ldi	r25, 0x00	; 0
    984c:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9850:	33 e0       	ldi	r19, 0x03	; 3
    9852:	83 12       	cpse	r8, r19
    9854:	6c cf       	rjmp	.-296    	; 0x972e <_Z17Doser_Pump_On_Offh+0x276>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9856:	52 ef       	ldi	r21, 0xF2	; 242
    9858:	e5 16       	cp	r14, r21
    985a:	5d e0       	ldi	r21, 0x0D	; 13
    985c:	f5 06       	cpc	r15, r21
    985e:	09 f4       	brne	.+2      	; 0x9862 <_Z17Doser_Pump_On_Offh+0x3aa>
    9860:	89 c1       	rjmp	.+786    	; 0x9b74 <_Z17Doser_Pump_On_Offh+0x6bc>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    9862:	d7 01       	movw	r26, r14
    9864:	8d 90       	ld	r8, X+
    9866:	7d 01       	movw	r14, r26
    9868:	8f ef       	ldi	r24, 0xFF	; 255
    986a:	88 0d       	add	r24, r8
    986c:	82 31       	cpi	r24, 0x12	; 18
    986e:	08 f0       	brcs	.+2      	; 0x9872 <_Z17Doser_Pump_On_Offh+0x3ba>
    9870:	6b c1       	rjmp	.+726    	; 0x9b48 <_Z17Doser_Pump_On_Offh+0x690>
    9872:	9d ce       	rjmp	.-710    	; 0x95ae <_Z17Doser_Pump_On_Offh+0xf6>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9874:	72 2e       	mov	r7, r18
    9876:	76 94       	lsr	r7
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9878:	43 e0       	ldi	r20, 0x03	; 3
    987a:	84 2e       	mov	r8, r20
    987c:	ac ce       	rjmp	.-680    	; 0x95d6 <_Z17Doser_Pump_On_Offh+0x11e>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    987e:	77 24       	eor	r7, r7
    9880:	73 94       	inc	r7
    9882:	a9 ce       	rjmp	.-686    	; 0x95d6 <_Z17Doser_Pump_On_Offh+0x11e>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9884:	06 2d       	mov	r16, r6
    9886:	26 cf       	rjmp	.-436    	; 0x96d4 <_Z17Doser_Pump_On_Offh+0x21c>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    9888:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    988c:	88 23       	and	r24, r24
    988e:	09 f4       	brne	.+2      	; 0x9892 <_Z17Doser_Pump_On_Offh+0x3da>
    9890:	52 cf       	rjmp	.-348    	; 0x9736 <_Z17Doser_Pump_On_Offh+0x27e>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9892:	f2 01       	movw	r30, r4
    9894:	01 90       	ld	r0, Z+
    9896:	00 20       	and	r0, r0
    9898:	e9 f7       	brne	.-6      	; 0x9894 <_Z17Doser_Pump_On_Offh+0x3dc>
    989a:	31 97       	sbiw	r30, 0x01	; 1
    989c:	af 01       	movw	r20, r30
    989e:	40 5d       	subi	r20, 0xD0	; 208
    98a0:	5f 40       	sbci	r21, 0x0F	; 15
    98a2:	21 e0       	ldi	r18, 0x01	; 1
    98a4:	60 ed       	ldi	r22, 0xD0	; 208
    98a6:	7f e0       	ldi	r23, 0x0F	; 15
    98a8:	82 e6       	ldi	r24, 0x62	; 98
    98aa:	9f e0       	ldi	r25, 0x0F	; 15
    98ac:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
    98b0:	42 cf       	rjmp	.-380    	; 0x9736 <_Z17Doser_Pump_On_Offh+0x27e>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    98b2:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    98b6:	88 23       	and	r24, r24
    98b8:	09 f4       	brne	.+2      	; 0x98bc <_Z17Doser_Pump_On_Offh+0x404>
    98ba:	61 cf       	rjmp	.-318    	; 0x977e <_Z17Doser_Pump_On_Offh+0x2c6>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    98bc:	f2 01       	movw	r30, r4
    98be:	01 90       	ld	r0, Z+
    98c0:	00 20       	and	r0, r0
    98c2:	e9 f7       	brne	.-6      	; 0x98be <_Z17Doser_Pump_On_Offh+0x406>
    98c4:	31 97       	sbiw	r30, 0x01	; 1
    98c6:	af 01       	movw	r20, r30
    98c8:	40 5d       	subi	r20, 0xD0	; 208
    98ca:	5f 40       	sbci	r21, 0x0F	; 15
    98cc:	21 e0       	ldi	r18, 0x01	; 1
    98ce:	60 ed       	ldi	r22, 0xD0	; 208
    98d0:	7f e0       	ldi	r23, 0x0F	; 15
    98d2:	82 e6       	ldi	r24, 0x62	; 98
    98d4:	9f e0       	ldi	r25, 0x0F	; 15
    98d6:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
    98da:	51 cf       	rjmp	.-350    	; 0x977e <_Z17Doser_Pump_On_Offh+0x2c6>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    98dc:	86 e0       	ldi	r24, 0x06	; 6
    98de:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    98e2:	84 e6       	ldi	r24, 0x64	; 100
    98e4:	90 e0       	ldi	r25, 0x00	; 0
    98e6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    98ea:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    98ee:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    98f2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    98f6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    98fa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    98fe:	a0 62       	ori	r26, 0x20	; 32
    9900:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9904:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9908:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    990c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    9910:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9914:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9918:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    991c:	82 60       	ori	r24, 0x02	; 2
    991e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9922:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9926:	ab 81       	ldd	r26, Y+3	; 0x03
    9928:	bc 81       	ldd	r27, Y+4	; 0x04
    992a:	ed 91       	ld	r30, X+
    992c:	bc 83       	std	Y+4, r27	; 0x04
    992e:	ab 83       	std	Y+3, r26	; 0x03
    9930:	e3 31       	cpi	r30, 0x13	; 19
    9932:	68 f0       	brcs	.+26     	; 0x994e <_Z17Doser_Pump_On_Offh+0x496>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9934:	f0 e0       	ldi	r31, 0x00	; 0
    9936:	e7 5c       	subi	r30, 0xC7	; 199
    9938:	fb 4e       	sbci	r31, 0xEB	; 235
    993a:	61 e0       	ldi	r22, 0x01	; 1
    993c:	80 81       	ld	r24, Z
    993e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
											_kDELAY_MS(200);
    9942:	68 ec       	ldi	r22, 0xC8	; 200
    9944:	70 e0       	ldi	r23, 0x00	; 0
    9946:	80 e0       	ldi	r24, 0x00	; 0
    9948:	90 e0       	ldi	r25, 0x00	; 0
    994a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    994e:	eb 81       	ldd	r30, Y+3	; 0x03
    9950:	fc 81       	ldd	r31, Y+4	; 0x04
    9952:	e2 5f       	subi	r30, 0xF2	; 242
    9954:	fd 40       	sbci	r31, 0x0D	; 13
    9956:	39 f7       	brne	.-50     	; 0x9926 <_Z17Doser_Pump_On_Offh+0x46e>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    9958:	80 e0       	ldi	r24, 0x00	; 0
    995a:	42 c1       	rjmp	.+644    	; 0x9be0 <_Z17Doser_Pump_On_Offh+0x728>
    995c:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    995e:	86 30       	cpi	r24, 0x06	; 6
    9960:	91 05       	cpc	r25, r1
    9962:	09 f0       	breq	.+2      	; 0x9966 <_Z17Doser_Pump_On_Offh+0x4ae>
    9964:	3f cf       	rjmp	.-386    	; 0x97e4 <_Z17Doser_Pump_On_Offh+0x32c>
    9966:	5a cf       	rjmp	.-332    	; 0x981c <_Z17Doser_Pump_On_Offh+0x364>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9968:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    996c:	81 30       	cpi	r24, 0x01	; 1
    996e:	51 f4       	brne	.+20     	; 0x9984 <_Z17Doser_Pump_On_Offh+0x4cc>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9970:	6e ed       	ldi	r22, 0xDE	; 222
    9972:	7f e0       	ldi	r23, 0x0F	; 15
    9974:	86 ec       	ldi	r24, 0xC6	; 198
    9976:	94 e1       	ldi	r25, 0x14	; 20
    9978:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    997c:	86 ec       	ldi	r24, 0xC6	; 198
    997e:	94 e1       	ldi	r25, 0x14	; 20
    9980:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9984:	32 e0       	ldi	r19, 0x02	; 2
    9986:	83 12       	cpse	r8, r19
    9988:	5d cf       	rjmp	.-326    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    998a:	86 e0       	ldi	r24, 0x06	; 6
    998c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9990:	84 e6       	ldi	r24, 0x64	; 100
    9992:	90 e0       	ldi	r25, 0x00	; 0
    9994:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9998:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    999c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    99a0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    99a4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    99a8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    99ac:	a0 62       	ori	r26, 0x20	; 32
    99ae:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    99b2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    99b6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    99ba:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    99be:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    99c2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    99c6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    99ca:	82 60       	ori	r24, 0x02	; 2
    99cc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    99d0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    99d4:	ab 81       	ldd	r26, Y+3	; 0x03
    99d6:	bc 81       	ldd	r27, Y+4	; 0x04
    99d8:	ed 91       	ld	r30, X+
    99da:	bc 83       	std	Y+4, r27	; 0x04
    99dc:	ab 83       	std	Y+3, r26	; 0x03
    99de:	e3 31       	cpi	r30, 0x13	; 19
    99e0:	68 f0       	brcs	.+26     	; 0x99fc <_Z17Doser_Pump_On_Offh+0x544>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    99e2:	f0 e0       	ldi	r31, 0x00	; 0
    99e4:	e7 5c       	subi	r30, 0xC7	; 199
    99e6:	fb 4e       	sbci	r31, 0xEB	; 235
    99e8:	61 e0       	ldi	r22, 0x01	; 1
    99ea:	80 81       	ld	r24, Z
    99ec:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
										_kDELAY_MS(200);
    99f0:	68 ec       	ldi	r22, 0xC8	; 200
    99f2:	70 e0       	ldi	r23, 0x00	; 0
    99f4:	80 e0       	ldi	r24, 0x00	; 0
    99f6:	90 e0       	ldi	r25, 0x00	; 0
    99f8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    99fc:	eb 81       	ldd	r30, Y+3	; 0x03
    99fe:	fc 81       	ldd	r31, Y+4	; 0x04
    9a00:	e2 5f       	subi	r30, 0xF2	; 242
    9a02:	fd 40       	sbci	r31, 0x0D	; 13
    9a04:	39 f7       	brne	.-50     	; 0x99d4 <_Z17Doser_Pump_On_Offh+0x51c>
    9a06:	a8 cf       	rjmp	.-176    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9a08:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9a0c:	81 30       	cpi	r24, 0x01	; 1
    9a0e:	51 f4       	brne	.+20     	; 0x9a24 <_Z17Doser_Pump_On_Offh+0x56c>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    9a10:	63 ea       	ldi	r22, 0xA3	; 163
    9a12:	7f e0       	ldi	r23, 0x0F	; 15
    9a14:	86 ec       	ldi	r24, 0xC6	; 198
    9a16:	94 e1       	ldi	r25, 0x14	; 20
    9a18:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9a1c:	86 ec       	ldi	r24, 0xC6	; 198
    9a1e:	94 e1       	ldi	r25, 0x14	; 20
    9a20:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    9a24:	32 e0       	ldi	r19, 0x02	; 2
    9a26:	83 12       	cpse	r8, r19
    9a28:	0d cf       	rjmp	.-486    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9a2a:	86 e0       	ldi	r24, 0x06	; 6
    9a2c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    9a30:	84 e6       	ldi	r24, 0x64	; 100
    9a32:	90 e0       	ldi	r25, 0x00	; 0
    9a34:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9a38:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9a3c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9a40:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9a44:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    9a48:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    9a4c:	a0 62       	ori	r26, 0x20	; 32
    9a4e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9a52:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9a56:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    9a5a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9a5e:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9a62:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9a66:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a6a:	82 60       	ori	r24, 0x02	; 2
    9a6c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a70:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a74:	ab 81       	ldd	r26, Y+3	; 0x03
    9a76:	bc 81       	ldd	r27, Y+4	; 0x04
    9a78:	ed 91       	ld	r30, X+
    9a7a:	bc 83       	std	Y+4, r27	; 0x04
    9a7c:	ab 83       	std	Y+3, r26	; 0x03
    9a7e:	e3 31       	cpi	r30, 0x13	; 19
    9a80:	68 f0       	brcs	.+26     	; 0x9a9c <_Z17Doser_Pump_On_Offh+0x5e4>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9a82:	f0 e0       	ldi	r31, 0x00	; 0
    9a84:	e7 5c       	subi	r30, 0xC7	; 199
    9a86:	fb 4e       	sbci	r31, 0xEB	; 235
    9a88:	61 e0       	ldi	r22, 0x01	; 1
    9a8a:	80 81       	ld	r24, Z
    9a8c:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
									_kDELAY_MS(200);
    9a90:	68 ec       	ldi	r22, 0xC8	; 200
    9a92:	70 e0       	ldi	r23, 0x00	; 0
    9a94:	80 e0       	ldi	r24, 0x00	; 0
    9a96:	90 e0       	ldi	r25, 0x00	; 0
    9a98:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9a9c:	eb 81       	ldd	r30, Y+3	; 0x03
    9a9e:	fc 81       	ldd	r31, Y+4	; 0x04
    9aa0:	e2 5f       	subi	r30, 0xF2	; 242
    9aa2:	fd 40       	sbci	r31, 0x0D	; 13
    9aa4:	39 f7       	brne	.-50     	; 0x9a74 <_Z17Doser_Pump_On_Offh+0x5bc>
    9aa6:	58 cf       	rjmp	.-336    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9aa8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9aac:	81 30       	cpi	r24, 0x01	; 1
    9aae:	51 f4       	brne	.+20     	; 0x9ac4 <_Z17Doser_Pump_On_Offh+0x60c>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    9ab0:	68 e6       	ldi	r22, 0x68	; 104
    9ab2:	7f e0       	ldi	r23, 0x0F	; 15
    9ab4:	86 ec       	ldi	r24, 0xC6	; 198
    9ab6:	94 e1       	ldi	r25, 0x14	; 20
    9ab8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9abc:	86 ec       	ldi	r24, 0xC6	; 198
    9abe:	94 e1       	ldi	r25, 0x14	; 20
    9ac0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9ac4:	32 e0       	ldi	r19, 0x02	; 2
    9ac6:	83 12       	cpse	r8, r19
    9ac8:	bd ce       	rjmp	.-646    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9aca:	86 e0       	ldi	r24, 0x06	; 6
    9acc:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    9ad0:	84 e6       	ldi	r24, 0x64	; 100
    9ad2:	90 e0       	ldi	r25, 0x00	; 0
    9ad4:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9ad8:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9adc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9ae0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9ae4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    9ae8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    9aec:	a0 62       	ori	r26, 0x20	; 32
    9aee:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9af2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9af6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    9afa:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    9afe:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9b02:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9b06:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b0a:	82 60       	ori	r24, 0x02	; 2
    9b0c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b10:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b14:	ab 81       	ldd	r26, Y+3	; 0x03
    9b16:	bc 81       	ldd	r27, Y+4	; 0x04
    9b18:	ed 91       	ld	r30, X+
    9b1a:	bc 83       	std	Y+4, r27	; 0x04
    9b1c:	ab 83       	std	Y+3, r26	; 0x03
    9b1e:	e3 31       	cpi	r30, 0x13	; 19
    9b20:	68 f0       	brcs	.+26     	; 0x9b3c <_Z17Doser_Pump_On_Offh+0x684>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9b22:	f0 e0       	ldi	r31, 0x00	; 0
    9b24:	e7 5c       	subi	r30, 0xC7	; 199
    9b26:	fb 4e       	sbci	r31, 0xEB	; 235
    9b28:	61 e0       	ldi	r22, 0x01	; 1
    9b2a:	80 81       	ld	r24, Z
    9b2c:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
								_kDELAY_MS(200);
    9b30:	68 ec       	ldi	r22, 0xC8	; 200
    9b32:	70 e0       	ldi	r23, 0x00	; 0
    9b34:	80 e0       	ldi	r24, 0x00	; 0
    9b36:	90 e0       	ldi	r25, 0x00	; 0
    9b38:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9b3c:	eb 81       	ldd	r30, Y+3	; 0x03
    9b3e:	fc 81       	ldd	r31, Y+4	; 0x04
    9b40:	e2 5f       	subi	r30, 0xF2	; 242
    9b42:	fd 40       	sbci	r31, 0x0D	; 13
    9b44:	39 f7       	brne	.-50     	; 0x9b14 <_Z17Doser_Pump_On_Offh+0x65c>
    9b46:	08 cf       	rjmp	.-496    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b48:	42 e1       	ldi	r20, 0x12	; 18
    9b4a:	48 15       	cp	r20, r8
    9b4c:	08 f0       	brcs	.+2      	; 0x9b50 <_Z17Doser_Pump_On_Offh+0x698>
    9b4e:	83 ce       	rjmp	.-762    	; 0x9856 <_Z17Doser_Pump_On_Offh+0x39e>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9b50:	61 e0       	ldi	r22, 0x01	; 1
    9b52:	11 11       	cpse	r17, r1
    9b54:	60 e0       	ldi	r22, 0x00	; 0
    9b56:	28 2d       	mov	r18, r8
    9b58:	30 e0       	ldi	r19, 0x00	; 0
    9b5a:	f9 01       	movw	r30, r18
    9b5c:	e7 5c       	subi	r30, 0xC7	; 199
    9b5e:	fb 4e       	sbci	r31, 0xEB	; 235
    9b60:	80 81       	ld	r24, Z
    9b62:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
			_kDELAY_MS(200);
    9b66:	68 ec       	ldi	r22, 0xC8	; 200
    9b68:	70 e0       	ldi	r23, 0x00	; 0
    9b6a:	80 e0       	ldi	r24, 0x00	; 0
    9b6c:	90 e0       	ldi	r25, 0x00	; 0
    9b6e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    9b72:	71 ce       	rjmp	.-798    	; 0x9856 <_Z17Doser_Pump_On_Offh+0x39e>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b74:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9b78:	81 30       	cpi	r24, 0x01	; 1
    9b7a:	51 f4       	brne	.+20     	; 0x9b90 <_Z17Doser_Pump_On_Offh+0x6d8>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9b7c:	69 e4       	ldi	r22, 0x49	; 73
    9b7e:	7f e0       	ldi	r23, 0x0F	; 15
    9b80:	86 ec       	ldi	r24, 0xC6	; 198
    9b82:	94 e1       	ldi	r25, 0x14	; 20
    9b84:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9b88:	86 ec       	ldi	r24, 0xC6	; 198
    9b8a:	94 e1       	ldi	r25, 0x14	; 20
    9b8c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    9b90:	11 11       	cpse	r17, r1
    9b92:	14 c0       	rjmp	.+40     	; 0x9bbc <_Z17Doser_Pump_On_Offh+0x704>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    9b94:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    9b98:	85 30       	cpi	r24, 0x05	; 5
    9b9a:	09 f1       	breq	.+66     	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9b9c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9ba0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9ba4:	90 62       	ori	r25, 0x20	; 32
    9ba6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9baa:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9bae:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9bb2:	82 e0       	ldi	r24, 0x02	; 2
    9bb4:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    9bb8:	85 e0       	ldi	r24, 0x05	; 5
    9bba:	0f c0       	rjmp	.+30     	; 0x9bda <_Z17Doser_Pump_On_Offh+0x722>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9bbc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9bc0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9bc4:	90 62       	ori	r25, 0x20	; 32
    9bc6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9bca:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9bce:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9bd2:	82 e0       	ldi	r24, 0x02	; 2
    9bd4:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    9bd8:	84 e0       	ldi	r24, 0x04	; 4
    9bda:	80 93 ea 0d 	sts	0x0DEA, r24	; 0x800dea <_sExtra_Plot+0x2>
	}
	
	return 1;
    9bde:	81 e0       	ldi	r24, 0x01	; 1
}
    9be0:	0f 90       	pop	r0
    9be2:	0f 90       	pop	r0
    9be4:	0f 90       	pop	r0
    9be6:	0f 90       	pop	r0
    9be8:	df 91       	pop	r29
    9bea:	cf 91       	pop	r28
    9bec:	1f 91       	pop	r17
    9bee:	0f 91       	pop	r16
    9bf0:	ff 90       	pop	r15
    9bf2:	ef 90       	pop	r14
    9bf4:	df 90       	pop	r13
    9bf6:	cf 90       	pop	r12
    9bf8:	bf 90       	pop	r11
    9bfa:	af 90       	pop	r10
    9bfc:	9f 90       	pop	r9
    9bfe:	8f 90       	pop	r8
    9c00:	7f 90       	pop	r7
    9c02:	6f 90       	pop	r6
    9c04:	5f 90       	pop	r5
    9c06:	4f 90       	pop	r4
    9c08:	3f 90       	pop	r3
    9c0a:	2f 90       	pop	r2
    9c0c:	08 95       	ret

00009c0e <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    9c0e:	2f 92       	push	r2
    9c10:	3f 92       	push	r3
    9c12:	4f 92       	push	r4
    9c14:	5f 92       	push	r5
    9c16:	6f 92       	push	r6
    9c18:	7f 92       	push	r7
    9c1a:	8f 92       	push	r8
    9c1c:	9f 92       	push	r9
    9c1e:	af 92       	push	r10
    9c20:	bf 92       	push	r11
    9c22:	cf 92       	push	r12
    9c24:	df 92       	push	r13
    9c26:	ef 92       	push	r14
    9c28:	ff 92       	push	r15
    9c2a:	0f 93       	push	r16
    9c2c:	1f 93       	push	r17
    9c2e:	cf 93       	push	r28
    9c30:	df 93       	push	r29
    9c32:	00 d0       	rcall	.+0      	; 0x9c34 <_Z22Fertilizer_Tank_On_Offhh+0x26>
    9c34:	00 d0       	rcall	.+0      	; 0x9c36 <_Z22Fertilizer_Tank_On_Offhh+0x28>
    9c36:	cd b7       	in	r28, 0x3d	; 61
    9c38:	de b7       	in	r29, 0x3e	; 62
    9c3a:	f8 2e       	mov	r15, r24
    9c3c:	b6 2e       	mov	r11, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    9c3e:	28 2f       	mov	r18, r24
    9c40:	30 e0       	ldi	r19, 0x00	; 0
    9c42:	22 5e       	subi	r18, 0xE2	; 226
    9c44:	36 4f       	sbci	r19, 0xF6	; 246
    9c46:	3e 83       	std	Y+6, r19	; 0x06
    9c48:	2d 83       	std	Y+5, r18	; 0x05
    9c4a:	89 01       	movw	r16, r18
    9c4c:	06 58       	subi	r16, 0x86	; 134
    9c4e:	1f 4f       	sbci	r17, 0xFF	; 255
    9c50:	f8 01       	movw	r30, r16
    9c52:	80 81       	ld	r24, Z
    9c54:	84 36       	cpi	r24, 0x64	; 100
    9c56:	60 f4       	brcc	.+24     	; 0x9c70 <_Z22Fertilizer_Tank_On_Offhh+0x62>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c58:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9c5c:	81 30       	cpi	r24, 0x01	; 1
    9c5e:	09 f0       	breq	.+2      	; 0x9c62 <_Z22Fertilizer_Tank_On_Offhh+0x54>
    9c60:	46 c2       	rjmp	.+1164   	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    9c62:	62 ea       	ldi	r22, 0xA2	; 162
    9c64:	72 e1       	ldi	r23, 0x12	; 18
    9c66:	86 ec       	ldi	r24, 0xC6	; 198
    9c68:	94 e1       	ldi	r25, 0x14	; 20
    9c6a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    9c6e:	3b c2       	rjmp	.+1142   	; 0xa0e6 <_Z22Fertilizer_Tank_On_Offhh+0x4d8>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    9c70:	f8 01       	movw	r30, r16
    9c72:	80 81       	ld	r24, Z
    9c74:	90 e0       	ldi	r25, 0x00	; 0
    9c76:	85 56       	subi	r24, 0x65	; 101
    9c78:	91 09       	sbc	r25, r1
    9c7a:	2b e1       	ldi	r18, 0x1B	; 27
    9c7c:	28 9f       	mul	r18, r24
    9c7e:	f0 01       	movw	r30, r0
    9c80:	29 9f       	mul	r18, r25
    9c82:	f0 0d       	add	r31, r0
    9c84:	11 24       	eor	r1, r1
    9c86:	e8 51       	subi	r30, 0x18	; 24
    9c88:	f2 4f       	sbci	r31, 0xF2	; 242
    9c8a:	80 81       	ld	r24, Z
    9c8c:	81 11       	cpse	r24, r1
    9c8e:	2f c2       	rjmp	.+1118   	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9c94:	81 30       	cpi	r24, 0x01	; 1
    9c96:	91 f0       	breq	.+36     	; 0x9cbc <_Z22Fertilizer_Tank_On_Offhh+0xae>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    9c98:	e1 2c       	mov	r14, r1
    9c9a:	f1 2c       	mov	r15, r1
    9c9c:	10 e0       	ldi	r17, 0x00	; 0
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9c9e:	cd 80       	ldd	r12, Y+5	; 0x05
    9ca0:	de 80       	ldd	r13, Y+6	; 0x06
    9ca2:	fa e7       	ldi	r31, 0x7A	; 122
    9ca4:	cf 0e       	add	r12, r31
    9ca6:	d1 1c       	adc	r13, r1
    9ca8:	0b e1       	ldi	r16, 0x1B	; 27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9caa:	b7 e0       	ldi	r27, 0x07	; 7
    9cac:	9b 2e       	mov	r9, r27
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9cae:	8d e0       	ldi	r24, 0x0D	; 13
    9cb0:	a8 2e       	mov	r10, r24
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9cb2:	90 ed       	ldi	r25, 0xD0	; 208
    9cb4:	29 2e       	mov	r2, r25
    9cb6:	9f e0       	ldi	r25, 0x0F	; 15
    9cb8:	39 2e       	mov	r3, r25
    9cba:	c2 c1       	rjmp	.+900    	; 0xa040 <_Z22Fertilizer_Tank_On_Offhh+0x432>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    9cbc:	68 e8       	ldi	r22, 0x88	; 136
    9cbe:	72 e1       	ldi	r23, 0x12	; 18
    9cc0:	86 ec       	ldi	r24, 0xC6	; 198
    9cc2:	94 e1       	ldi	r25, 0x14	; 20
    9cc4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9cc8:	86 ec       	ldi	r24, 0xC6	; 198
    9cca:	94 e1       	ldi	r25, 0x14	; 20
    9ccc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    9cd0:	4a e0       	ldi	r20, 0x0A	; 10
    9cd2:	50 e0       	ldi	r21, 0x00	; 0
    9cd4:	6f 2d       	mov	r22, r15
    9cd6:	86 ec       	ldi	r24, 0xC6	; 198
    9cd8:	94 e1       	ldi	r25, 0x14	; 20
    9cda:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    9cde:	86 ec       	ldi	r24, 0xC6	; 198
    9ce0:	94 e1       	ldi	r25, 0x14	; 20
    9ce2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    9ce6:	6a e6       	ldi	r22, 0x6A	; 106
    9ce8:	72 e1       	ldi	r23, 0x12	; 18
    9cea:	86 ec       	ldi	r24, 0xC6	; 198
    9cec:	94 e1       	ldi	r25, 0x14	; 20
    9cee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9cf2:	86 ec       	ldi	r24, 0xC6	; 198
    9cf4:	94 e1       	ldi	r25, 0x14	; 20
    9cf6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    9cfa:	e1 2c       	mov	r14, r1
    9cfc:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    9cfe:	ab e1       	ldi	r26, 0x1B	; 27
    9d00:	da 2e       	mov	r13, r26
    9d02:	f8 01       	movw	r30, r16
    9d04:	80 81       	ld	r24, Z
    9d06:	90 e0       	ldi	r25, 0x00	; 0
    9d08:	85 56       	subi	r24, 0x65	; 101
    9d0a:	91 09       	sbc	r25, r1
    9d0c:	d8 9e       	mul	r13, r24
    9d0e:	f0 01       	movw	r30, r0
    9d10:	d9 9e       	mul	r13, r25
    9d12:	f0 0d       	add	r31, r0
    9d14:	11 24       	eor	r1, r1
    9d16:	e8 51       	subi	r30, 0x18	; 24
    9d18:	f2 4f       	sbci	r31, 0xF2	; 242
    9d1a:	ee 0d       	add	r30, r14
    9d1c:	ff 1d       	adc	r31, r15
    9d1e:	4a e0       	ldi	r20, 0x0A	; 10
    9d20:	50 e0       	ldi	r21, 0x00	; 0
    9d22:	65 81       	ldd	r22, Z+5	; 0x05
    9d24:	86 ec       	ldi	r24, 0xC6	; 198
    9d26:	94 e1       	ldi	r25, 0x14	; 20
    9d28:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9d2c:	68 e6       	ldi	r22, 0x68	; 104
    9d2e:	72 e1       	ldi	r23, 0x12	; 18
    9d30:	86 ec       	ldi	r24, 0xC6	; 198
    9d32:	94 e1       	ldi	r25, 0x14	; 20
    9d34:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    9d38:	ff ef       	ldi	r31, 0xFF	; 255
    9d3a:	ef 1a       	sub	r14, r31
    9d3c:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9d3e:	25 e0       	ldi	r18, 0x05	; 5
    9d40:	e2 16       	cp	r14, r18
    9d42:	f1 04       	cpc	r15, r1
    9d44:	f1 f6       	brne	.-68     	; 0x9d02 <_Z22Fertilizer_Tank_On_Offhh+0xf4>
    9d46:	a8 cf       	rjmp	.-176    	; 0x9c98 <_Z22Fertilizer_Tank_On_Offhh+0x8a>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9d48:	f6 01       	movw	r30, r12
    9d4a:	80 81       	ld	r24, Z
    9d4c:	90 e0       	ldi	r25, 0x00	; 0
    9d4e:	85 56       	subi	r24, 0x65	; 101
    9d50:	91 09       	sbc	r25, r1
    9d52:	08 9f       	mul	r16, r24
    9d54:	f0 01       	movw	r30, r0
    9d56:	09 9f       	mul	r16, r25
    9d58:	f0 0d       	add	r31, r0
    9d5a:	11 24       	eor	r1, r1
    9d5c:	e8 51       	subi	r30, 0x18	; 24
    9d5e:	f2 4f       	sbci	r31, 0xF2	; 242
    9d60:	ee 0d       	add	r30, r14
    9d62:	ff 1d       	adc	r31, r15
    9d64:	85 81       	ldd	r24, Z+5	; 0x05
    9d66:	88 23       	and	r24, r24
    9d68:	09 f4       	brne	.+2      	; 0x9d6c <_Z22Fertilizer_Tank_On_Offhh+0x15e>
    9d6a:	c3 c1       	rjmp	.+902    	; 0xa0f2 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    9d6c:	f6 01       	movw	r30, r12
    9d6e:	80 81       	ld	r24, Z
    9d70:	90 e0       	ldi	r25, 0x00	; 0
    9d72:	85 56       	subi	r24, 0x65	; 101
    9d74:	91 09       	sbc	r25, r1
    9d76:	08 9f       	mul	r16, r24
    9d78:	f0 01       	movw	r30, r0
    9d7a:	09 9f       	mul	r16, r25
    9d7c:	f0 0d       	add	r31, r0
    9d7e:	11 24       	eor	r1, r1
    9d80:	e8 51       	subi	r30, 0x18	; 24
    9d82:	f2 4f       	sbci	r31, 0xF2	; 242
    9d84:	ee 0d       	add	r30, r14
    9d86:	ff 1d       	adc	r31, r15
    9d88:	85 80       	ldd	r8, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d8a:	f3 e0       	ldi	r31, 0x03	; 3
    9d8c:	f8 15       	cp	r31, r8
    9d8e:	08 f0       	brcs	.+2      	; 0x9d92 <_Z22Fertilizer_Tank_On_Offhh+0x184>
    9d90:	63 c2       	rjmp	.+1222   	; 0xa258 <_Z22Fertilizer_Tank_On_Offhh+0x64a>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d92:	6b ea       	ldi	r22, 0xAB	; 171
    9d94:	86 9e       	mul	r8, r22
    9d96:	71 2c       	mov	r7, r1
    9d98:	11 24       	eor	r1, r1
    9d9a:	87 2d       	mov	r24, r7
    9d9c:	86 95       	lsr	r24
    9d9e:	98 2f       	mov	r25, r24
    9da0:	99 0f       	add	r25, r25
    9da2:	89 0f       	add	r24, r25
    9da4:	88 1a       	sub	r8, r24
    9da6:	67 2d       	mov	r22, r7
    9da8:	66 95       	lsr	r22
    9daa:	88 20       	and	r8, r8
    9dac:	09 f4       	brne	.+2      	; 0x9db0 <_Z22Fertilizer_Tank_On_Offhh+0x1a2>
    9dae:	50 c2       	rjmp	.+1184   	; 0xa250 <_Z22Fertilizer_Tank_On_Offhh+0x642>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9db0:	77 24       	eor	r7, r7
    9db2:	73 94       	inc	r7
    9db4:	76 0e       	add	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9db6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9dba:	81 30       	cpi	r24, 0x01	; 1
    9dbc:	89 f4       	brne	.+34     	; 0x9de0 <_Z22Fertilizer_Tank_On_Offhh+0x1d2>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9dbe:	64 e5       	ldi	r22, 0x54	; 84
    9dc0:	72 e1       	ldi	r23, 0x12	; 18
    9dc2:	86 ec       	ldi	r24, 0xC6	; 198
    9dc4:	94 e1       	ldi	r25, 0x14	; 20
    9dc6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9dca:	4a e0       	ldi	r20, 0x0A	; 10
    9dcc:	50 e0       	ldi	r21, 0x00	; 0
    9dce:	67 2d       	mov	r22, r7
    9dd0:	86 ec       	ldi	r24, 0xC6	; 198
    9dd2:	94 e1       	ldi	r25, 0x14	; 20
    9dd4:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9dd8:	86 ec       	ldi	r24, 0xC6	; 198
    9dda:	94 e1       	ldi	r25, 0x14	; 20
    9ddc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9de0:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
    9de4:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9de6:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9dea:	84 e1       	ldi	r24, 0x14	; 20
    9dec:	e5 ef       	ldi	r30, 0xF5	; 245
    9dee:	f3 e1       	ldi	r31, 0x13	; 19
    9df0:	11 92       	st	Z+, r1
    9df2:	8a 95       	dec	r24
    9df4:	e9 f7       	brne	.-6      	; 0x9df0 <_Z22Fertilizer_Tank_On_Offhh+0x1e2>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9df6:	67 2d       	mov	r22, r7
    9df8:	70 e0       	ldi	r23, 0x00	; 0
    9dfa:	61 50       	subi	r22, 0x01	; 1
    9dfc:	71 09       	sbc	r23, r1
    9dfe:	96 9e       	mul	r9, r22
    9e00:	c0 01       	movw	r24, r0
    9e02:	97 9e       	mul	r9, r23
    9e04:	90 0d       	add	r25, r0
    9e06:	11 24       	eor	r1, r1
    9e08:	82 55       	subi	r24, 0x52	; 82
    9e0a:	9c 4e       	sbci	r25, 0xEC	; 236
    9e0c:	fc 01       	movw	r30, r24
    9e0e:	ec 58       	subi	r30, 0x8C	; 140
    9e10:	ff 4f       	sbci	r31, 0xFF	; 255
    9e12:	20 81       	ld	r18, Z
    9e14:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9e18:	31 96       	adiw	r30, 0x01	; 1
    9e1a:	20 81       	ld	r18, Z
    9e1c:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9e20:	31 96       	adiw	r30, 0x01	; 1
    9e22:	20 81       	ld	r18, Z
    9e24:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9e28:	31 96       	adiw	r30, 0x01	; 1
    9e2a:	20 81       	ld	r18, Z
    9e2c:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9e30:	31 96       	adiw	r30, 0x01	; 1
    9e32:	20 81       	ld	r18, Z
    9e34:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9e38:	31 96       	adiw	r30, 0x01	; 1
    9e3a:	20 81       	ld	r18, Z
    9e3c:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9e40:	22 e0       	ldi	r18, 0x02	; 2
    9e42:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9e46:	b0 92 fc 13 	sts	0x13FC, r11	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9e4a:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    9e4e:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9e52:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9e56:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9e5a:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    9e5e:	40 e0       	ldi	r20, 0x00	; 0
    9e60:	50 e0       	ldi	r21, 0x00	; 0
    9e62:	64 2e       	mov	r6, r20
    9e64:	81 2c       	mov	r8, r1
    9e66:	71 2c       	mov	r7, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9e68:	a4 9e       	mul	r10, r20
    9e6a:	b0 01       	movw	r22, r0
    9e6c:	a5 9e       	mul	r10, r21
    9e6e:	70 0d       	add	r23, r0
    9e70:	11 24       	eor	r1, r1
    9e72:	6b 5e       	subi	r22, 0xEB	; 235
    9e74:	73 4f       	sbci	r23, 0xF3	; 243
    9e76:	28 2d       	mov	r18, r8
    9e78:	30 e0       	ldi	r19, 0x00	; 0
    9e7a:	fb 01       	movw	r30, r22
    9e7c:	e2 0f       	add	r30, r18
    9e7e:	f3 1f       	adc	r31, r19
    9e80:	28 0f       	add	r18, r24
    9e82:	39 1f       	adc	r19, r25
    9e84:	d9 01       	movw	r26, r18
    9e86:	ac 58       	subi	r26, 0x8C	; 140
    9e88:	bf 4f       	sbci	r27, 0xFF	; 255
    9e8a:	31 81       	ldd	r19, Z+1	; 0x01
    9e8c:	2c 91       	ld	r18, X
    9e8e:	32 17       	cp	r19, r18
    9e90:	19 f0       	breq	.+6      	; 0x9e98 <_Z22Fertilizer_Tank_On_Offhh+0x28a>
					{
						compare_id = _kVALVE_ID_LEN;
    9e92:	e6 e0       	ldi	r30, 0x06	; 6
    9e94:	8e 2e       	mov	r8, r30
						id_len = _kRESET;
    9e96:	71 2c       	mov	r7, r1
					}
					id_len++;
    9e98:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9e9a:	83 94       	inc	r8
    9e9c:	f5 e0       	ldi	r31, 0x05	; 5
    9e9e:	f8 15       	cp	r31, r8
    9ea0:	50 f7       	brcc	.-44     	; 0x9e76 <_Z22Fertilizer_Tank_On_Offhh+0x268>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9ea2:	26 e0       	ldi	r18, 0x06	; 6
    9ea4:	72 16       	cp	r7, r18
    9ea6:	09 f4       	brne	.+2      	; 0x9eaa <_Z22Fertilizer_Tank_On_Offhh+0x29c>
    9ea8:	da c1       	rjmp	.+948    	; 0xa25e <_Z22Fertilizer_Tank_On_Offhh+0x650>
    9eaa:	4f 5f       	subi	r20, 0xFF	; 255
    9eac:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9eae:	46 30       	cpi	r20, 0x06	; 6
    9eb0:	51 05       	cpc	r21, r1
    9eb2:	b9 f6       	brne	.-82     	; 0x9e62 <_Z22Fertilizer_Tank_On_Offhh+0x254>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9eb4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9eb8:	81 30       	cpi	r24, 0x01	; 1
    9eba:	89 f4       	brne	.+34     	; 0x9ede <_Z22Fertilizer_Tank_On_Offhh+0x2d0>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9ebc:	6e e3       	ldi	r22, 0x3E	; 62
    9ebe:	72 e1       	ldi	r23, 0x12	; 18
    9ec0:	86 ec       	ldi	r24, 0xC6	; 198
    9ec2:	94 e1       	ldi	r25, 0x14	; 20
    9ec4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9ec8:	4a e0       	ldi	r20, 0x0A	; 10
    9eca:	50 e0       	ldi	r21, 0x00	; 0
    9ecc:	61 2f       	mov	r22, r17
    9ece:	86 ec       	ldi	r24, 0xC6	; 198
    9ed0:	94 e1       	ldi	r25, 0x14	; 20
    9ed2:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9ed6:	86 ec       	ldi	r24, 0xC6	; 198
    9ed8:	94 e1       	ldi	r25, 0x14	; 20
    9eda:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    9ede:	3d e0       	ldi	r19, 0x0D	; 13
    9ee0:	13 9f       	mul	r17, r19
    9ee2:	20 01       	movw	r4, r0
    9ee4:	11 24       	eor	r1, r1
    9ee6:	81 2c       	mov	r8, r1
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9ee8:	a1 9e       	mul	r10, r17
    9eea:	c0 01       	movw	r24, r0
    9eec:	11 24       	eor	r1, r1
    9eee:	9c 01       	movw	r18, r24
    9ef0:	2b 5e       	subi	r18, 0xEB	; 235
    9ef2:	33 4f       	sbci	r19, 0xF3	; 243
    9ef4:	a9 01       	movw	r20, r18
    9ef6:	45 5f       	subi	r20, 0xF5	; 245
    9ef8:	5f 4f       	sbci	r21, 0xFF	; 255
    9efa:	5a 83       	std	Y+2, r21	; 0x02
    9efc:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9efe:	f9 01       	movw	r30, r18
    9f00:	38 96       	adiw	r30, 0x08	; 8
    9f02:	fc 83       	std	Y+4, r31	; 0x04
    9f04:	eb 83       	std	Y+3, r30	; 0x03
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9f06:	9c 01       	movw	r18, r24
    9f08:	2a 5e       	subi	r18, 0xEA	; 234
    9f0a:	33 4f       	sbci	r19, 0xF3	; 243
    9f0c:	39 01       	movw	r6, r18
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    9f0e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    9f12:	81 11       	cpse	r24, r1
    9f14:	a6 c1       	rjmp	.+844    	; 0xa262 <_Z22Fertilizer_Tank_On_Offhh+0x654>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9f16:	83 94       	inc	r8
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9f18:	6a e1       	ldi	r22, 0x1A	; 26
    9f1a:	72 e1       	ldi	r23, 0x12	; 18
    9f1c:	86 ec       	ldi	r24, 0xC6	; 198
    9f1e:	94 e1       	ldi	r25, 0x14	; 20
    9f20:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9f24:	86 ec       	ldi	r24, 0xC6	; 198
    9f26:	94 e1       	ldi	r25, 0x14	; 20
    9f28:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9f2c:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9f30:	8c e0       	ldi	r24, 0x0C	; 12
    9f32:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9f36:	88 eb       	ldi	r24, 0xB8	; 184
    9f38:	9b e0       	ldi	r25, 0x0B	; 11
    9f3a:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
    9f3e:	88 23       	and	r24, r24
    9f40:	09 f4       	brne	.+2      	; 0x9f44 <_Z22Fertilizer_Tank_On_Offhh+0x336>
    9f42:	0e c3       	rjmp	.+1564   	; 0xa560 <_Z22Fertilizer_Tank_On_Offhh+0x952>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9f44:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
    9f48:	88 23       	and	r24, r24
    9f4a:	09 f4       	brne	.+2      	; 0x9f4e <_Z22Fertilizer_Tank_On_Offhh+0x340>
    9f4c:	94 c2       	rjmp	.+1320   	; 0xa476 <_Z22Fertilizer_Tank_On_Offhh+0x868>
					{
						
						if(Subscribed_data_check())
    9f4e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
    9f52:	81 11       	cpse	r24, r1
    9f54:	9b c1       	rjmp	.+822    	; 0xa28c <_Z22Fertilizer_Tank_On_Offhh+0x67e>
							}
						}
						
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9f5a:	81 30       	cpi	r24, 0x01	; 1
    9f5c:	59 f5       	brne	.+86     	; 0x9fb4 <_Z22Fertilizer_Tank_On_Offhh+0x3a6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9f5e:	64 e0       	ldi	r22, 0x04	; 4
    9f60:	72 e1       	ldi	r23, 0x12	; 18
    9f62:	86 ec       	ldi	r24, 0xC6	; 198
    9f64:	94 e1       	ldi	r25, 0x14	; 20
    9f66:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    9f6a:	4a e0       	ldi	r20, 0x0A	; 10
    9f6c:	50 e0       	ldi	r21, 0x00	; 0
    9f6e:	69 e0       	ldi	r22, 0x09	; 9
    9f70:	74 e1       	ldi	r23, 0x14	; 20
    9f72:	86 ec       	ldi	r24, 0xC6	; 198
    9f74:	94 e1       	ldi	r25, 0x14	; 20
    9f76:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9f7a:	86 ec       	ldi	r24, 0xC6	; 198
    9f7c:	94 e1       	ldi	r25, 0x14	; 20
    9f7e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9f82:	86 ec       	ldi	r24, 0xC6	; 198
    9f84:	94 e1       	ldi	r25, 0x14	; 20
    9f86:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9f8a:	66 ee       	ldi	r22, 0xE6	; 230
    9f8c:	71 e1       	ldi	r23, 0x11	; 17
    9f8e:	86 ec       	ldi	r24, 0xC6	; 198
    9f90:	94 e1       	ldi	r25, 0x14	; 20
    9f92:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9f96:	47 e0       	ldi	r20, 0x07	; 7
    9f98:	50 e0       	ldi	r21, 0x00	; 0
    9f9a:	b3 01       	movw	r22, r6
    9f9c:	86 ec       	ldi	r24, 0xC6	; 198
    9f9e:	94 e1       	ldi	r25, 0x14	; 20
    9fa0:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
							Serial.println();
    9fa4:	86 ec       	ldi	r24, 0xC6	; 198
    9fa6:	94 e1       	ldi	r25, 0x14	; 20
    9fa8:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9fac:	86 ec       	ldi	r24, 0xC6	; 198
    9fae:	94 e1       	ldi	r25, 0x14	; 20
    9fb0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    9fb4:	a9 e0       	ldi	r26, 0x09	; 9
    9fb6:	b4 e1       	ldi	r27, 0x14	; 20
    9fb8:	80 e0       	ldi	r24, 0x00	; 0
    9fba:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9fbc:	2d 91       	ld	r18, X+
    9fbe:	f2 01       	movw	r30, r4
    9fc0:	e8 0f       	add	r30, r24
    9fc2:	f9 1f       	adc	r31, r25
    9fc4:	eb 5e       	subi	r30, 0xEB	; 235
    9fc6:	f3 4f       	sbci	r31, 0xF3	; 243
    9fc8:	31 81       	ldd	r19, Z+1	; 0x01
    9fca:	32 17       	cp	r19, r18
    9fcc:	09 f4       	brne	.+2      	; 0x9fd0 <_Z22Fertilizer_Tank_On_Offhh+0x3c2>
    9fce:	d8 c1       	rjmp	.+944    	; 0xa380 <_Z22Fertilizer_Tank_On_Offhh+0x772>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9fd0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9fd4:	81 30       	cpi	r24, 0x01	; 1
    9fd6:	51 f4       	brne	.+20     	; 0x9fec <_Z22Fertilizer_Tank_On_Offhh+0x3de>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9fd8:	6b eb       	ldi	r22, 0xBB	; 187
    9fda:	71 e1       	ldi	r23, 0x11	; 17
    9fdc:	86 ec       	ldi	r24, 0xC6	; 198
    9fde:	94 e1       	ldi	r25, 0x14	; 20
    9fe0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9fe4:	86 ec       	ldi	r24, 0xC6	; 198
    9fe6:	94 e1       	ldi	r25, 0x14	; 20
    9fe8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9fec:	32 e0       	ldi	r19, 0x02	; 2
    9fee:	83 16       	cp	r8, r19
    9ff0:	09 f4       	brne	.+2      	; 0x9ff4 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
    9ff2:	61 c1       	rjmp	.+706    	; 0xa2b6 <_Z22Fertilizer_Tank_On_Offhh+0x6a8>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9ff4:	21 e0       	ldi	r18, 0x01	; 1
    9ff6:	e9 81       	ldd	r30, Y+1	; 0x01
    9ff8:	fa 81       	ldd	r31, Y+2	; 0x02
    9ffa:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9ffc:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    a000:	90 e0       	ldi	r25, 0x00	; 0
    a002:	98 2f       	mov	r25, r24
    a004:	88 27       	eor	r24, r24
    a006:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    a00a:	82 2b       	or	r24, r18
    a00c:	eb 81       	ldd	r30, Y+3	; 0x03
    a00e:	fc 81       	ldd	r31, Y+4	; 0x04
    a010:	91 83       	std	Z+1, r25	; 0x01
    a012:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    a014:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    a018:	b8 12       	cpse	r11, r24
    a01a:	b8 c1       	rjmp	.+880    	; 0xa38c <_Z22Fertilizer_Tank_On_Offhh+0x77e>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    a01c:	43 e0       	ldi	r20, 0x03	; 3
    a01e:	84 2e       	mov	r8, r20
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    a020:	68 ee       	ldi	r22, 0xE8	; 232
    a022:	73 e0       	ldi	r23, 0x03	; 3
    a024:	80 e0       	ldi	r24, 0x00	; 0
    a026:	90 e0       	ldi	r25, 0x00	; 0
    a028:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    a02c:	f3 e0       	ldi	r31, 0x03	; 3
    a02e:	8f 12       	cpse	r8, r31
    a030:	6e cf       	rjmp	.-292    	; 0x9f0e <_Z22Fertilizer_Tank_On_Offhh+0x300>
    a032:	ff ef       	ldi	r31, 0xFF	; 255
    a034:	ef 1a       	sub	r14, r31
    a036:	ff 0a       	sbc	r15, r31
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    a038:	25 e0       	ldi	r18, 0x05	; 5
    a03a:	e2 16       	cp	r14, r18
    a03c:	f1 04       	cpc	r15, r1
    a03e:	99 f0       	breq	.+38     	; 0xa066 <_Z22Fertilizer_Tank_On_Offhh+0x458>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    a040:	f6 01       	movw	r30, r12
    a042:	80 81       	ld	r24, Z
    a044:	90 e0       	ldi	r25, 0x00	; 0
    a046:	85 56       	subi	r24, 0x65	; 101
    a048:	91 09       	sbc	r25, r1
    a04a:	08 9f       	mul	r16, r24
    a04c:	f0 01       	movw	r30, r0
    a04e:	09 9f       	mul	r16, r25
    a050:	f0 0d       	add	r31, r0
    a052:	11 24       	eor	r1, r1
    a054:	e8 51       	subi	r30, 0x18	; 24
    a056:	f2 4f       	sbci	r31, 0xF2	; 242
    a058:	ee 0d       	add	r30, r14
    a05a:	ff 1d       	adc	r31, r15
    a05c:	85 81       	ldd	r24, Z+5	; 0x05
    a05e:	83 31       	cpi	r24, 0x13	; 19
    a060:	08 f0       	brcs	.+2      	; 0xa064 <_Z22Fertilizer_Tank_On_Offhh+0x456>
    a062:	47 c0       	rjmp	.+142    	; 0xa0f2 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
    a064:	71 ce       	rjmp	.-798    	; 0x9d48 <_Z22Fertilizer_Tank_On_Offhh+0x13a>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    a066:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a06a:	81 30       	cpi	r24, 0x01	; 1
    a06c:	51 f4       	brne	.+20     	; 0xa082 <_Z22Fertilizer_Tank_On_Offhh+0x474>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    a06e:	63 e1       	ldi	r22, 0x13	; 19
    a070:	71 e1       	ldi	r23, 0x11	; 17
    a072:	86 ec       	ldi	r24, 0xC6	; 198
    a074:	94 e1       	ldi	r25, 0x14	; 20
    a076:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    a07a:	86 ec       	ldi	r24, 0xC6	; 198
    a07c:	94 e1       	ldi	r25, 0x14	; 20
    a07e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    a082:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    a086:	b1 10       	cpse	r11, r1
    a088:	a7 c0       	rjmp	.+334    	; 0xa1d8 <_Z22Fertilizer_Tank_On_Offhh+0x5ca>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    a08a:	0d 81       	ldd	r16, Y+5	; 0x05
    a08c:	1e 81       	ldd	r17, Y+6	; 0x06
    a08e:	06 58       	subi	r16, 0x86	; 134
    a090:	1f 4f       	sbci	r17, 0xFF	; 255
    a092:	f8 01       	movw	r30, r16
    a094:	80 81       	ld	r24, Z
    a096:	90 e0       	ldi	r25, 0x00	; 0
    a098:	85 56       	subi	r24, 0x65	; 101
    a09a:	91 09       	sbc	r25, r1
    a09c:	3b e1       	ldi	r19, 0x1B	; 27
    a09e:	38 9f       	mul	r19, r24
    a0a0:	f0 01       	movw	r30, r0
    a0a2:	39 9f       	mul	r19, r25
    a0a4:	f0 0d       	add	r31, r0
    a0a6:	11 24       	eor	r1, r1
    a0a8:	e8 51       	subi	r30, 0x18	; 24
    a0aa:	f2 4f       	sbci	r31, 0xF2	; 242
    a0ac:	82 81       	ldd	r24, Z+2	; 0x02
    a0ae:	85 30       	cpi	r24, 0x05	; 5
    a0b0:	09 f0       	breq	.+2      	; 0xa0b4 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
    a0b2:	50 c0       	rjmp	.+160    	; 0xa154 <_Z22Fertilizer_Tank_On_Offhh+0x546>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a0b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a0b8:	81 30       	cpi	r24, 0x01	; 1
    a0ba:	c9 f4       	brne	.+50     	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    a0bc:	65 ed       	ldi	r22, 0xD5	; 213
    a0be:	70 e1       	ldi	r23, 0x10	; 16
    a0c0:	86 ec       	ldi	r24, 0xC6	; 198
    a0c2:	94 e1       	ldi	r25, 0x14	; 20
    a0c4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a0c8:	2d 81       	ldd	r18, Y+5	; 0x05
    a0ca:	3e 81       	ldd	r19, Y+6	; 0x06
    a0cc:	26 58       	subi	r18, 0x86	; 134
    a0ce:	3f 4f       	sbci	r19, 0xFF	; 255
    a0d0:	f9 01       	movw	r30, r18
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a0d2:	60 81       	ld	r22, Z
    a0d4:	70 e0       	ldi	r23, 0x00	; 0
    a0d6:	65 56       	subi	r22, 0x65	; 101
    a0d8:	71 09       	sbc	r23, r1
    a0da:	4a e0       	ldi	r20, 0x0A	; 10
    a0dc:	50 e0       	ldi	r21, 0x00	; 0
    a0de:	86 ec       	ldi	r24, 0xC6	; 198
    a0e0:	94 e1       	ldi	r25, 0x14	; 20
    a0e2:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    a0e6:	86 ec       	ldi	r24, 0xC6	; 198
    a0e8:	94 e1       	ldi	r25, 0x14	; 20
    a0ea:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    a0ee:	81 e0       	ldi	r24, 0x01	; 1
    a0f0:	ac c2       	rjmp	.+1368   	; 0xa64a <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a0f2:	f6 01       	movw	r30, r12
    a0f4:	80 81       	ld	r24, Z
    a0f6:	90 e0       	ldi	r25, 0x00	; 0
    a0f8:	85 56       	subi	r24, 0x65	; 101
    a0fa:	91 09       	sbc	r25, r1
    a0fc:	08 9f       	mul	r16, r24
    a0fe:	f0 01       	movw	r30, r0
    a100:	09 9f       	mul	r16, r25
    a102:	f0 0d       	add	r31, r0
    a104:	11 24       	eor	r1, r1
    a106:	e8 51       	subi	r30, 0x18	; 24
    a108:	f2 4f       	sbci	r31, 0xF2	; 242
    a10a:	ee 0d       	add	r30, r14
    a10c:	ff 1d       	adc	r31, r15
    a10e:	85 81       	ldd	r24, Z+5	; 0x05
    a110:	83 31       	cpi	r24, 0x13	; 19
    a112:	08 f4       	brcc	.+2      	; 0xa116 <_Z22Fertilizer_Tank_On_Offhh+0x508>
    a114:	8e cf       	rjmp	.-228    	; 0xa032 <_Z22Fertilizer_Tank_On_Offhh+0x424>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    a116:	f6 01       	movw	r30, r12
    a118:	80 81       	ld	r24, Z
    a11a:	61 e0       	ldi	r22, 0x01	; 1
    a11c:	b1 10       	cpse	r11, r1
    a11e:	60 e0       	ldi	r22, 0x00	; 0
    a120:	90 e0       	ldi	r25, 0x00	; 0
    a122:	85 56       	subi	r24, 0x65	; 101
    a124:	91 09       	sbc	r25, r1
    a126:	08 9f       	mul	r16, r24
    a128:	f0 01       	movw	r30, r0
    a12a:	09 9f       	mul	r16, r25
    a12c:	f0 0d       	add	r31, r0
    a12e:	11 24       	eor	r1, r1
    a130:	e8 51       	subi	r30, 0x18	; 24
    a132:	f2 4f       	sbci	r31, 0xF2	; 242
    a134:	ee 0d       	add	r30, r14
    a136:	ff 1d       	adc	r31, r15
    a138:	e5 81       	ldd	r30, Z+5	; 0x05
    a13a:	f0 e0       	ldi	r31, 0x00	; 0
    a13c:	e7 5c       	subi	r30, 0xC7	; 199
    a13e:	fb 4e       	sbci	r31, 0xEB	; 235
    a140:	80 81       	ld	r24, Z
    a142:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
			_kDELAY_MS(200);
    a146:	68 ec       	ldi	r22, 0xC8	; 200
    a148:	70 e0       	ldi	r23, 0x00	; 0
    a14a:	80 e0       	ldi	r24, 0x00	; 0
    a14c:	90 e0       	ldi	r25, 0x00	; 0
    a14e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    a152:	6f cf       	rjmp	.-290    	; 0xa032 <_Z22Fertilizer_Tank_On_Offhh+0x424>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a154:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a158:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a15c:	90 62       	ori	r25, 0x20	; 32
    a15e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a162:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a166:	f8 01       	movw	r30, r16
    a168:	80 81       	ld	r24, Z
    a16a:	85 56       	subi	r24, 0x65	; 101
    a16c:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a170:	80 81       	ld	r24, Z
    a172:	90 e0       	ldi	r25, 0x00	; 0
    a174:	85 56       	subi	r24, 0x65	; 101
    a176:	91 09       	sbc	r25, r1
    a178:	38 9f       	mul	r19, r24
    a17a:	f0 01       	movw	r30, r0
    a17c:	39 9f       	mul	r19, r25
    a17e:	f0 0d       	add	r31, r0
    a180:	11 24       	eor	r1, r1
    a182:	e8 51       	subi	r30, 0x18	; 24
    a184:	f2 4f       	sbci	r31, 0xF2	; 242
    a186:	82 e0       	ldi	r24, 0x02	; 2
    a188:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    a18a:	f8 01       	movw	r30, r16
    a18c:	80 81       	ld	r24, Z
    a18e:	90 e0       	ldi	r25, 0x00	; 0
    a190:	85 56       	subi	r24, 0x65	; 101
    a192:	91 09       	sbc	r25, r1
    a194:	38 9f       	mul	r19, r24
    a196:	f0 01       	movw	r30, r0
    a198:	39 9f       	mul	r19, r25
    a19a:	f0 0d       	add	r31, r0
    a19c:	11 24       	eor	r1, r1
    a19e:	e8 51       	subi	r30, 0x18	; 24
    a1a0:	f2 4f       	sbci	r31, 0xF2	; 242
    a1a2:	85 e0       	ldi	r24, 0x05	; 5
    a1a4:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a1a6:	21 30       	cpi	r18, 0x01	; 1
    a1a8:	09 f0       	breq	.+2      	; 0xa1ac <_Z22Fertilizer_Tank_On_Offhh+0x59e>
    a1aa:	a1 cf       	rjmp	.-190    	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    a1ac:	64 ef       	ldi	r22, 0xF4	; 244
    a1ae:	70 e1       	ldi	r23, 0x10	; 16
    a1b0:	86 ec       	ldi	r24, 0xC6	; 198
    a1b2:	94 e1       	ldi	r25, 0x14	; 20
    a1b4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a1b8:	f8 01       	movw	r30, r16
    a1ba:	60 81       	ld	r22, Z
    a1bc:	70 e0       	ldi	r23, 0x00	; 0
    a1be:	65 56       	subi	r22, 0x65	; 101
    a1c0:	71 09       	sbc	r23, r1
    a1c2:	4a e0       	ldi	r20, 0x0A	; 10
    a1c4:	50 e0       	ldi	r21, 0x00	; 0
    a1c6:	86 ec       	ldi	r24, 0xC6	; 198
    a1c8:	94 e1       	ldi	r25, 0x14	; 20
    a1ca:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    a1ce:	86 ec       	ldi	r24, 0xC6	; 198
    a1d0:	94 e1       	ldi	r25, 0x14	; 20
    a1d2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    a1d6:	6e cf       	rjmp	.-292    	; 0xa0b4 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a1d8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a1dc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a1e0:	90 62       	ori	r25, 0x20	; 32
    a1e2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a1e6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a1ea:	4d 81       	ldd	r20, Y+5	; 0x05
    a1ec:	5e 81       	ldd	r21, Y+6	; 0x06
    a1ee:	46 58       	subi	r20, 0x86	; 134
    a1f0:	5f 4f       	sbci	r21, 0xFF	; 255
    a1f2:	5a 83       	std	Y+2, r21	; 0x02
    a1f4:	49 83       	std	Y+1, r20	; 0x01
    a1f6:	fa 01       	movw	r30, r20
    a1f8:	80 81       	ld	r24, Z
    a1fa:	85 56       	subi	r24, 0x65	; 101
    a1fc:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a200:	80 81       	ld	r24, Z
    a202:	90 e0       	ldi	r25, 0x00	; 0
    a204:	85 56       	subi	r24, 0x65	; 101
    a206:	91 09       	sbc	r25, r1
    a208:	3b e1       	ldi	r19, 0x1B	; 27
    a20a:	38 9f       	mul	r19, r24
    a20c:	f0 01       	movw	r30, r0
    a20e:	39 9f       	mul	r19, r25
    a210:	f0 0d       	add	r31, r0
    a212:	11 24       	eor	r1, r1
    a214:	e8 51       	subi	r30, 0x18	; 24
    a216:	f2 4f       	sbci	r31, 0xF2	; 242
    a218:	82 e0       	ldi	r24, 0x02	; 2
    a21a:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    a21c:	fa 01       	movw	r30, r20
    a21e:	80 81       	ld	r24, Z
    a220:	90 e0       	ldi	r25, 0x00	; 0
    a222:	85 56       	subi	r24, 0x65	; 101
    a224:	91 09       	sbc	r25, r1
    a226:	38 9f       	mul	r19, r24
    a228:	f0 01       	movw	r30, r0
    a22a:	39 9f       	mul	r19, r25
    a22c:	f0 0d       	add	r31, r0
    a22e:	11 24       	eor	r1, r1
    a230:	e8 51       	subi	r30, 0x18	; 24
    a232:	f2 4f       	sbci	r31, 0xF2	; 242
    a234:	84 e0       	ldi	r24, 0x04	; 4
    a236:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a238:	21 30       	cpi	r18, 0x01	; 1
    a23a:	09 f0       	breq	.+2      	; 0xa23e <_Z22Fertilizer_Tank_On_Offhh+0x630>
    a23c:	58 cf       	rjmp	.-336    	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    a23e:	69 eb       	ldi	r22, 0xB9	; 185
    a240:	70 e1       	ldi	r23, 0x10	; 16
    a242:	86 ec       	ldi	r24, 0xC6	; 198
    a244:	94 e1       	ldi	r25, 0x14	; 20
    a246:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a24a:	e9 81       	ldd	r30, Y+1	; 0x01
    a24c:	fa 81       	ldd	r31, Y+2	; 0x02
    a24e:	41 cf       	rjmp	.-382    	; 0xa0d2 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a250:	76 2e       	mov	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a252:	f3 e0       	ldi	r31, 0x03	; 3
    a254:	8f 2e       	mov	r8, r31
    a256:	af cd       	rjmp	.-1186   	; 0x9db6 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    a258:	77 24       	eor	r7, r7
    a25a:	73 94       	inc	r7
    a25c:	ac cd       	rjmp	.-1192   	; 0x9db6 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
    a25e:	16 2d       	mov	r17, r6
    a260:	29 ce       	rjmp	.-942    	; 0x9eb4 <_Z22Fertilizer_Tank_On_Offhh+0x2a6>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    a262:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    a266:	88 23       	and	r24, r24
    a268:	09 f4       	brne	.+2      	; 0xa26c <_Z22Fertilizer_Tank_On_Offhh+0x65e>
    a26a:	55 ce       	rjmp	.-854    	; 0x9f16 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a26c:	f1 01       	movw	r30, r2
    a26e:	01 90       	ld	r0, Z+
    a270:	00 20       	and	r0, r0
    a272:	e9 f7       	brne	.-6      	; 0xa26e <_Z22Fertilizer_Tank_On_Offhh+0x660>
    a274:	31 97       	sbiw	r30, 0x01	; 1
    a276:	af 01       	movw	r20, r30
    a278:	40 5d       	subi	r20, 0xD0	; 208
    a27a:	5f 40       	sbci	r21, 0x0F	; 15
    a27c:	21 e0       	ldi	r18, 0x01	; 1
    a27e:	60 ed       	ldi	r22, 0xD0	; 208
    a280:	7f e0       	ldi	r23, 0x0F	; 15
    a282:	82 e6       	ldi	r24, 0x62	; 98
    a284:	9f e0       	ldi	r25, 0x0F	; 15
    a286:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
    a28a:	45 ce       	rjmp	.-886    	; 0x9f16 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    a28c:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    a290:	88 23       	and	r24, r24
    a292:	09 f4       	brne	.+2      	; 0xa296 <_Z22Fertilizer_Tank_On_Offhh+0x688>
    a294:	60 ce       	rjmp	.-832    	; 0x9f56 <_Z22Fertilizer_Tank_On_Offhh+0x348>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a296:	f1 01       	movw	r30, r2
    a298:	01 90       	ld	r0, Z+
    a29a:	00 20       	and	r0, r0
    a29c:	e9 f7       	brne	.-6      	; 0xa298 <_Z22Fertilizer_Tank_On_Offhh+0x68a>
    a29e:	31 97       	sbiw	r30, 0x01	; 1
    a2a0:	af 01       	movw	r20, r30
    a2a2:	40 5d       	subi	r20, 0xD0	; 208
    a2a4:	5f 40       	sbci	r21, 0x0F	; 15
    a2a6:	21 e0       	ldi	r18, 0x01	; 1
    a2a8:	60 ed       	ldi	r22, 0xD0	; 208
    a2aa:	7f e0       	ldi	r23, 0x0F	; 15
    a2ac:	82 e6       	ldi	r24, 0x62	; 98
    a2ae:	9f e0       	ldi	r25, 0x0F	; 15
    a2b0:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
    a2b4:	50 ce       	rjmp	.-864    	; 0x9f56 <_Z22Fertilizer_Tank_On_Offhh+0x348>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a2b6:	86 e0       	ldi	r24, 0x06	; 6
    a2b8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    a2bc:	84 e6       	ldi	r24, 0x64	; 100
    a2be:	90 e0       	ldi	r25, 0x00	; 0
    a2c0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a2c4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a2c8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a2cc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a2d0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a2d4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a2d8:	a0 62       	ori	r26, 0x20	; 32
    a2da:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a2de:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a2e2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a2e6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    a2ea:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a2ee:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a2f2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a2f6:	82 60       	ori	r24, 0x02	; 2
    a2f8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a2fc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a300:	00 e0       	ldi	r16, 0x00	; 0
    a302:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a304:	2d 81       	ldd	r18, Y+5	; 0x05
    a306:	3e 81       	ldd	r19, Y+6	; 0x06
    a308:	26 58       	subi	r18, 0x86	; 134
    a30a:	3f 4f       	sbci	r19, 0xFF	; 255
    a30c:	3a 83       	std	Y+2, r19	; 0x02
    a30e:	29 83       	std	Y+1, r18	; 0x01
    a310:	3b e1       	ldi	r19, 0x1B	; 27
    a312:	f3 2e       	mov	r15, r19
    a314:	e9 81       	ldd	r30, Y+1	; 0x01
    a316:	fa 81       	ldd	r31, Y+2	; 0x02
    a318:	80 81       	ld	r24, Z
    a31a:	90 e0       	ldi	r25, 0x00	; 0
    a31c:	85 56       	subi	r24, 0x65	; 101
    a31e:	91 09       	sbc	r25, r1
    a320:	f8 9e       	mul	r15, r24
    a322:	f0 01       	movw	r30, r0
    a324:	f9 9e       	mul	r15, r25
    a326:	f0 0d       	add	r31, r0
    a328:	11 24       	eor	r1, r1
    a32a:	e8 51       	subi	r30, 0x18	; 24
    a32c:	f2 4f       	sbci	r31, 0xF2	; 242
    a32e:	e0 0f       	add	r30, r16
    a330:	f1 1f       	adc	r31, r17
    a332:	85 81       	ldd	r24, Z+5	; 0x05
    a334:	83 31       	cpi	r24, 0x13	; 19
    a336:	e8 f0       	brcs	.+58     	; 0xa372 <_Z22Fertilizer_Tank_On_Offhh+0x764>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a338:	e9 81       	ldd	r30, Y+1	; 0x01
    a33a:	fa 81       	ldd	r31, Y+2	; 0x02
    a33c:	80 81       	ld	r24, Z
    a33e:	90 e0       	ldi	r25, 0x00	; 0
    a340:	85 56       	subi	r24, 0x65	; 101
    a342:	91 09       	sbc	r25, r1
    a344:	f8 9e       	mul	r15, r24
    a346:	f0 01       	movw	r30, r0
    a348:	f9 9e       	mul	r15, r25
    a34a:	f0 0d       	add	r31, r0
    a34c:	11 24       	eor	r1, r1
    a34e:	e8 51       	subi	r30, 0x18	; 24
    a350:	f2 4f       	sbci	r31, 0xF2	; 242
    a352:	e0 0f       	add	r30, r16
    a354:	f1 1f       	adc	r31, r17
    a356:	e5 81       	ldd	r30, Z+5	; 0x05
    a358:	f0 e0       	ldi	r31, 0x00	; 0
    a35a:	e7 5c       	subi	r30, 0xC7	; 199
    a35c:	fb 4e       	sbci	r31, 0xEB	; 235
    a35e:	61 e0       	ldi	r22, 0x01	; 1
    a360:	80 81       	ld	r24, Z
    a362:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
											_kDELAY_MS(200);
    a366:	68 ec       	ldi	r22, 0xC8	; 200
    a368:	70 e0       	ldi	r23, 0x00	; 0
    a36a:	80 e0       	ldi	r24, 0x00	; 0
    a36c:	90 e0       	ldi	r25, 0x00	; 0
    a36e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a372:	0f 5f       	subi	r16, 0xFF	; 255
    a374:	1f 4f       	sbci	r17, 0xFF	; 255
    a376:	05 30       	cpi	r16, 0x05	; 5
    a378:	11 05       	cpc	r17, r1
    a37a:	61 f6       	brne	.-104    	; 0xa314 <_Z22Fertilizer_Tank_On_Offhh+0x706>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    a37c:	80 e0       	ldi	r24, 0x00	; 0
    a37e:	65 c1       	rjmp	.+714    	; 0xa64a <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
    a380:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    a382:	86 30       	cpi	r24, 0x06	; 6
    a384:	91 05       	cpc	r25, r1
    a386:	09 f0       	breq	.+2      	; 0xa38a <_Z22Fertilizer_Tank_On_Offhh+0x77c>
    a388:	19 ce       	rjmp	.-974    	; 0x9fbc <_Z22Fertilizer_Tank_On_Offhh+0x3ae>
    a38a:	34 ce       	rjmp	.-920    	; 0x9ff4 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a38c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a390:	81 30       	cpi	r24, 0x01	; 1
    a392:	51 f4       	brne	.+20     	; 0xa3a8 <_Z22Fertilizer_Tank_On_Offhh+0x79a>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    a394:	68 ea       	ldi	r22, 0xA8	; 168
    a396:	71 e1       	ldi	r23, 0x11	; 17
    a398:	86 ec       	ldi	r24, 0xC6	; 198
    a39a:	94 e1       	ldi	r25, 0x14	; 20
    a39c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a3a0:	86 ec       	ldi	r24, 0xC6	; 198
    a3a2:	94 e1       	ldi	r25, 0x14	; 20
    a3a4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a3a8:	f2 e0       	ldi	r31, 0x02	; 2
    a3aa:	8f 12       	cpse	r8, r31
    a3ac:	39 ce       	rjmp	.-910    	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a3ae:	86 e0       	ldi	r24, 0x06	; 6
    a3b0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    a3b4:	84 e6       	ldi	r24, 0x64	; 100
    a3b6:	90 e0       	ldi	r25, 0x00	; 0
    a3b8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a3bc:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a3c0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a3c4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a3c8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a3cc:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a3d0:	a0 62       	ori	r26, 0x20	; 32
    a3d2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a3d6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a3da:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a3de:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    a3e2:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a3e6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a3ea:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a3ee:	82 60       	ori	r24, 0x02	; 2
    a3f0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a3f4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a3f8:	00 e0       	ldi	r16, 0x00	; 0
    a3fa:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a3fc:	2d 81       	ldd	r18, Y+5	; 0x05
    a3fe:	3e 81       	ldd	r19, Y+6	; 0x06
    a400:	26 58       	subi	r18, 0x86	; 134
    a402:	3f 4f       	sbci	r19, 0xFF	; 255
    a404:	3a 83       	std	Y+2, r19	; 0x02
    a406:	29 83       	std	Y+1, r18	; 0x01
    a408:	2b e1       	ldi	r18, 0x1B	; 27
    a40a:	f2 2e       	mov	r15, r18
    a40c:	e9 81       	ldd	r30, Y+1	; 0x01
    a40e:	fa 81       	ldd	r31, Y+2	; 0x02
    a410:	80 81       	ld	r24, Z
    a412:	90 e0       	ldi	r25, 0x00	; 0
    a414:	85 56       	subi	r24, 0x65	; 101
    a416:	91 09       	sbc	r25, r1
    a418:	f8 9e       	mul	r15, r24
    a41a:	f0 01       	movw	r30, r0
    a41c:	f9 9e       	mul	r15, r25
    a41e:	f0 0d       	add	r31, r0
    a420:	11 24       	eor	r1, r1
    a422:	e8 51       	subi	r30, 0x18	; 24
    a424:	f2 4f       	sbci	r31, 0xF2	; 242
    a426:	e0 0f       	add	r30, r16
    a428:	f1 1f       	adc	r31, r17
    a42a:	85 81       	ldd	r24, Z+5	; 0x05
    a42c:	83 31       	cpi	r24, 0x13	; 19
    a42e:	e8 f0       	brcs	.+58     	; 0xa46a <_Z22Fertilizer_Tank_On_Offhh+0x85c>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a430:	e9 81       	ldd	r30, Y+1	; 0x01
    a432:	fa 81       	ldd	r31, Y+2	; 0x02
    a434:	80 81       	ld	r24, Z
    a436:	90 e0       	ldi	r25, 0x00	; 0
    a438:	85 56       	subi	r24, 0x65	; 101
    a43a:	91 09       	sbc	r25, r1
    a43c:	f8 9e       	mul	r15, r24
    a43e:	f0 01       	movw	r30, r0
    a440:	f9 9e       	mul	r15, r25
    a442:	f0 0d       	add	r31, r0
    a444:	11 24       	eor	r1, r1
    a446:	e8 51       	subi	r30, 0x18	; 24
    a448:	f2 4f       	sbci	r31, 0xF2	; 242
    a44a:	e0 0f       	add	r30, r16
    a44c:	f1 1f       	adc	r31, r17
    a44e:	e5 81       	ldd	r30, Z+5	; 0x05
    a450:	f0 e0       	ldi	r31, 0x00	; 0
    a452:	e7 5c       	subi	r30, 0xC7	; 199
    a454:	fb 4e       	sbci	r31, 0xEB	; 235
    a456:	61 e0       	ldi	r22, 0x01	; 1
    a458:	80 81       	ld	r24, Z
    a45a:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
										_kDELAY_MS(200);
    a45e:	68 ec       	ldi	r22, 0xC8	; 200
    a460:	70 e0       	ldi	r23, 0x00	; 0
    a462:	80 e0       	ldi	r24, 0x00	; 0
    a464:	90 e0       	ldi	r25, 0x00	; 0
    a466:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a46a:	0f 5f       	subi	r16, 0xFF	; 255
    a46c:	1f 4f       	sbci	r17, 0xFF	; 255
    a46e:	05 30       	cpi	r16, 0x05	; 5
    a470:	11 05       	cpc	r17, r1
    a472:	61 f6       	brne	.-104    	; 0xa40c <_Z22Fertilizer_Tank_On_Offhh+0x7fe>
    a474:	83 cf       	rjmp	.-250    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a476:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a47a:	81 30       	cpi	r24, 0x01	; 1
    a47c:	51 f4       	brne	.+20     	; 0xa492 <_Z22Fertilizer_Tank_On_Offhh+0x884>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a47e:	6d e6       	ldi	r22, 0x6D	; 109
    a480:	71 e1       	ldi	r23, 0x11	; 17
    a482:	86 ec       	ldi	r24, 0xC6	; 198
    a484:	94 e1       	ldi	r25, 0x14	; 20
    a486:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a48a:	86 ec       	ldi	r24, 0xC6	; 198
    a48c:	94 e1       	ldi	r25, 0x14	; 20
    a48e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    a492:	f2 e0       	ldi	r31, 0x02	; 2
    a494:	8f 12       	cpse	r8, r31
    a496:	c4 cd       	rjmp	.-1144   	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a498:	86 e0       	ldi	r24, 0x06	; 6
    a49a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a49e:	84 e6       	ldi	r24, 0x64	; 100
    a4a0:	90 e0       	ldi	r25, 0x00	; 0
    a4a2:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a4a6:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a4aa:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a4ae:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a4b2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a4b6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a4ba:	a0 62       	ori	r26, 0x20	; 32
    a4bc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a4c0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a4c4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a4c8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a4cc:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a4d0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a4d4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a4d8:	82 60       	ori	r24, 0x02	; 2
    a4da:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a4de:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a4e2:	00 e0       	ldi	r16, 0x00	; 0
    a4e4:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a4e6:	2d 81       	ldd	r18, Y+5	; 0x05
    a4e8:	3e 81       	ldd	r19, Y+6	; 0x06
    a4ea:	26 58       	subi	r18, 0x86	; 134
    a4ec:	3f 4f       	sbci	r19, 0xFF	; 255
    a4ee:	3a 83       	std	Y+2, r19	; 0x02
    a4f0:	29 83       	std	Y+1, r18	; 0x01
    a4f2:	9b e1       	ldi	r25, 0x1B	; 27
    a4f4:	f9 2e       	mov	r15, r25
    a4f6:	e9 81       	ldd	r30, Y+1	; 0x01
    a4f8:	fa 81       	ldd	r31, Y+2	; 0x02
    a4fa:	80 81       	ld	r24, Z
    a4fc:	90 e0       	ldi	r25, 0x00	; 0
    a4fe:	85 56       	subi	r24, 0x65	; 101
    a500:	91 09       	sbc	r25, r1
    a502:	f8 9e       	mul	r15, r24
    a504:	f0 01       	movw	r30, r0
    a506:	f9 9e       	mul	r15, r25
    a508:	f0 0d       	add	r31, r0
    a50a:	11 24       	eor	r1, r1
    a50c:	e8 51       	subi	r30, 0x18	; 24
    a50e:	f2 4f       	sbci	r31, 0xF2	; 242
    a510:	e0 0f       	add	r30, r16
    a512:	f1 1f       	adc	r31, r17
    a514:	85 81       	ldd	r24, Z+5	; 0x05
    a516:	83 31       	cpi	r24, 0x13	; 19
    a518:	e8 f0       	brcs	.+58     	; 0xa554 <_Z22Fertilizer_Tank_On_Offhh+0x946>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a51a:	e9 81       	ldd	r30, Y+1	; 0x01
    a51c:	fa 81       	ldd	r31, Y+2	; 0x02
    a51e:	80 81       	ld	r24, Z
    a520:	90 e0       	ldi	r25, 0x00	; 0
    a522:	85 56       	subi	r24, 0x65	; 101
    a524:	91 09       	sbc	r25, r1
    a526:	f8 9e       	mul	r15, r24
    a528:	f0 01       	movw	r30, r0
    a52a:	f9 9e       	mul	r15, r25
    a52c:	f0 0d       	add	r31, r0
    a52e:	11 24       	eor	r1, r1
    a530:	e8 51       	subi	r30, 0x18	; 24
    a532:	f2 4f       	sbci	r31, 0xF2	; 242
    a534:	e0 0f       	add	r30, r16
    a536:	f1 1f       	adc	r31, r17
    a538:	e5 81       	ldd	r30, Z+5	; 0x05
    a53a:	f0 e0       	ldi	r31, 0x00	; 0
    a53c:	e7 5c       	subi	r30, 0xC7	; 199
    a53e:	fb 4e       	sbci	r31, 0xEB	; 235
    a540:	61 e0       	ldi	r22, 0x01	; 1
    a542:	80 81       	ld	r24, Z
    a544:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
									_kDELAY_MS(200);
    a548:	68 ec       	ldi	r22, 0xC8	; 200
    a54a:	70 e0       	ldi	r23, 0x00	; 0
    a54c:	80 e0       	ldi	r24, 0x00	; 0
    a54e:	90 e0       	ldi	r25, 0x00	; 0
    a550:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a554:	0f 5f       	subi	r16, 0xFF	; 255
    a556:	1f 4f       	sbci	r17, 0xFF	; 255
    a558:	05 30       	cpi	r16, 0x05	; 5
    a55a:	11 05       	cpc	r17, r1
    a55c:	61 f6       	brne	.-104    	; 0xa4f6 <_Z22Fertilizer_Tank_On_Offhh+0x8e8>
    a55e:	0e cf       	rjmp	.-484    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a560:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a564:	81 30       	cpi	r24, 0x01	; 1
    a566:	51 f4       	brne	.+20     	; 0xa57c <_Z22Fertilizer_Tank_On_Offhh+0x96e>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a568:	62 e3       	ldi	r22, 0x32	; 50
    a56a:	71 e1       	ldi	r23, 0x11	; 17
    a56c:	86 ec       	ldi	r24, 0xC6	; 198
    a56e:	94 e1       	ldi	r25, 0x14	; 20
    a570:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a574:	86 ec       	ldi	r24, 0xC6	; 198
    a576:	94 e1       	ldi	r25, 0x14	; 20
    a578:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a57c:	f2 e0       	ldi	r31, 0x02	; 2
    a57e:	8f 12       	cpse	r8, r31
    a580:	4f cd       	rjmp	.-1378   	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a582:	86 e0       	ldi	r24, 0x06	; 6
    a584:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a588:	84 e6       	ldi	r24, 0x64	; 100
    a58a:	90 e0       	ldi	r25, 0x00	; 0
    a58c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a590:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a594:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a598:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a59c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a5a0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a5a4:	a0 62       	ori	r26, 0x20	; 32
    a5a6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a5aa:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a5ae:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a5b2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a5b6:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a5ba:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a5be:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a5c2:	82 60       	ori	r24, 0x02	; 2
    a5c4:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a5c8:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a5cc:	00 e0       	ldi	r16, 0x00	; 0
    a5ce:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a5d0:	2d 81       	ldd	r18, Y+5	; 0x05
    a5d2:	3e 81       	ldd	r19, Y+6	; 0x06
    a5d4:	26 58       	subi	r18, 0x86	; 134
    a5d6:	3f 4f       	sbci	r19, 0xFF	; 255
    a5d8:	3a 83       	std	Y+2, r19	; 0x02
    a5da:	29 83       	std	Y+1, r18	; 0x01
    a5dc:	8b e1       	ldi	r24, 0x1B	; 27
    a5de:	f8 2e       	mov	r15, r24
    a5e0:	e9 81       	ldd	r30, Y+1	; 0x01
    a5e2:	fa 81       	ldd	r31, Y+2	; 0x02
    a5e4:	80 81       	ld	r24, Z
    a5e6:	90 e0       	ldi	r25, 0x00	; 0
    a5e8:	85 56       	subi	r24, 0x65	; 101
    a5ea:	91 09       	sbc	r25, r1
    a5ec:	f8 9e       	mul	r15, r24
    a5ee:	f0 01       	movw	r30, r0
    a5f0:	f9 9e       	mul	r15, r25
    a5f2:	f0 0d       	add	r31, r0
    a5f4:	11 24       	eor	r1, r1
    a5f6:	e8 51       	subi	r30, 0x18	; 24
    a5f8:	f2 4f       	sbci	r31, 0xF2	; 242
    a5fa:	e0 0f       	add	r30, r16
    a5fc:	f1 1f       	adc	r31, r17
    a5fe:	85 81       	ldd	r24, Z+5	; 0x05
    a600:	83 31       	cpi	r24, 0x13	; 19
    a602:	e8 f0       	brcs	.+58     	; 0xa63e <_Z22Fertilizer_Tank_On_Offhh+0xa30>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a604:	e9 81       	ldd	r30, Y+1	; 0x01
    a606:	fa 81       	ldd	r31, Y+2	; 0x02
    a608:	80 81       	ld	r24, Z
    a60a:	90 e0       	ldi	r25, 0x00	; 0
    a60c:	85 56       	subi	r24, 0x65	; 101
    a60e:	91 09       	sbc	r25, r1
    a610:	f8 9e       	mul	r15, r24
    a612:	f0 01       	movw	r30, r0
    a614:	f9 9e       	mul	r15, r25
    a616:	f0 0d       	add	r31, r0
    a618:	11 24       	eor	r1, r1
    a61a:	e8 51       	subi	r30, 0x18	; 24
    a61c:	f2 4f       	sbci	r31, 0xF2	; 242
    a61e:	e0 0f       	add	r30, r16
    a620:	f1 1f       	adc	r31, r17
    a622:	e5 81       	ldd	r30, Z+5	; 0x05
    a624:	f0 e0       	ldi	r31, 0x00	; 0
    a626:	e7 5c       	subi	r30, 0xC7	; 199
    a628:	fb 4e       	sbci	r31, 0xEB	; 235
    a62a:	61 e0       	ldi	r22, 0x01	; 1
    a62c:	80 81       	ld	r24, Z
    a62e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
								_kDELAY_MS(200);
    a632:	68 ec       	ldi	r22, 0xC8	; 200
    a634:	70 e0       	ldi	r23, 0x00	; 0
    a636:	80 e0       	ldi	r24, 0x00	; 0
    a638:	90 e0       	ldi	r25, 0x00	; 0
    a63a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a63e:	0f 5f       	subi	r16, 0xFF	; 255
    a640:	1f 4f       	sbci	r17, 0xFF	; 255
    a642:	05 30       	cpi	r16, 0x05	; 5
    a644:	11 05       	cpc	r17, r1
    a646:	61 f6       	brne	.-104    	; 0xa5e0 <_Z22Fertilizer_Tank_On_Offhh+0x9d2>
    a648:	99 ce       	rjmp	.-718    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a64a:	26 96       	adiw	r28, 0x06	; 6
    a64c:	0f b6       	in	r0, 0x3f	; 63
    a64e:	f8 94       	cli
    a650:	de bf       	out	0x3e, r29	; 62
    a652:	0f be       	out	0x3f, r0	; 63
    a654:	cd bf       	out	0x3d, r28	; 61
    a656:	df 91       	pop	r29
    a658:	cf 91       	pop	r28
    a65a:	1f 91       	pop	r17
    a65c:	0f 91       	pop	r16
    a65e:	ff 90       	pop	r15
    a660:	ef 90       	pop	r14
    a662:	df 90       	pop	r13
    a664:	cf 90       	pop	r12
    a666:	bf 90       	pop	r11
    a668:	af 90       	pop	r10
    a66a:	9f 90       	pop	r9
    a66c:	8f 90       	pop	r8
    a66e:	7f 90       	pop	r7
    a670:	6f 90       	pop	r6
    a672:	5f 90       	pop	r5
    a674:	4f 90       	pop	r4
    a676:	3f 90       	pop	r3
    a678:	2f 90       	pop	r2
    a67a:	08 95       	ret

0000a67c <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a67c:	af 92       	push	r10
    a67e:	bf 92       	push	r11
    a680:	df 92       	push	r13
    a682:	ef 92       	push	r14
    a684:	ff 92       	push	r15
    a686:	0f 93       	push	r16
    a688:	1f 93       	push	r17
    a68a:	cf 93       	push	r28
    a68c:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a68e:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    a692:	81 30       	cpi	r24, 0x01	; 1
    a694:	29 f5       	brne	.+74     	; 0xa6e0 <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a696:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a69a:	81 30       	cpi	r24, 0x01	; 1
    a69c:	31 f4       	brne	.+12     	; 0xa6aa <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a69e:	6d ee       	ldi	r22, 0xED	; 237
    a6a0:	72 e1       	ldi	r23, 0x12	; 18
    a6a2:	86 ec       	ldi	r24, 0xC6	; 198
    a6a4:	94 e1       	ldi	r25, 0x14	; 20
    a6a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a6aa:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    a6ae:	84 30       	cpi	r24, 0x04	; 4
    a6b0:	09 f0       	breq	.+2      	; 0xa6b4 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a6b2:	46 c1       	rjmp	.+652    	; 0xa940 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a6b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a6b8:	81 30       	cpi	r24, 0x01	; 1
    a6ba:	31 f4       	brne	.+12     	; 0xa6c8 <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a6bc:	6d ec       	ldi	r22, 0xCD	; 205
    a6be:	72 e1       	ldi	r23, 0x12	; 18
    a6c0:	86 ec       	ldi	r24, 0xC6	; 198
    a6c2:	94 e1       	ldi	r25, 0x14	; 20
    a6c4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a6c8:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a6ca:	df 91       	pop	r29
    a6cc:	cf 91       	pop	r28
    a6ce:	1f 91       	pop	r17
    a6d0:	0f 91       	pop	r16
    a6d2:	ff 90       	pop	r15
    a6d4:	ef 90       	pop	r14
    a6d6:	df 90       	pop	r13
    a6d8:	bf 90       	pop	r11
    a6da:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a6dc:	0c 94 5c 4a 	jmp	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
    a6e0:	c0 e0       	ldi	r28, 0x00	; 0
    a6e2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a6e4:	3b e1       	ldi	r19, 0x1B	; 27
    a6e6:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a6e8:	48 e7       	ldi	r20, 0x78	; 120
    a6ea:	d4 2e       	mov	r13, r20
    a6ec:	ec 2e       	mov	r14, r28
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a6ee:	8e 01       	movw	r16, r28
    a6f0:	02 5e       	subi	r16, 0xE2	; 226
    a6f2:	16 4f       	sbci	r17, 0xF6	; 246
    a6f4:	f8 01       	movw	r30, r16
    a6f6:	ed 5a       	subi	r30, 0xAD	; 173
    a6f8:	fd 4f       	sbci	r31, 0xFD	; 253
    a6fa:	80 81       	ld	r24, Z
    a6fc:	81 11       	cpse	r24, r1
    a6fe:	7a c0       	rjmp	.+244    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a700:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a704:	90 e0       	ldi	r25, 0x00	; 0
    a706:	01 97       	sbiw	r24, 0x01	; 1
    a708:	fc 01       	movw	r30, r24
    a70a:	ee 0f       	add	r30, r30
    a70c:	ff 1f       	adc	r31, r31
    a70e:	e8 0f       	add	r30, r24
    a710:	f9 1f       	adc	r31, r25
    a712:	ec 0f       	add	r30, r28
    a714:	fd 1f       	adc	r31, r29
    a716:	e1 59       	subi	r30, 0x91	; 145
    a718:	f5 4f       	sbci	r31, 0xF5	; 245
    a71a:	80 81       	ld	r24, Z
    a71c:	81 30       	cpi	r24, 0x01	; 1
    a71e:	09 f0       	breq	.+2      	; 0xa722 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a720:	69 c0       	rjmp	.+210    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a722:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a726:	90 e0       	ldi	r25, 0x00	; 0
    a728:	01 97       	sbiw	r24, 0x01	; 1
    a72a:	fc 01       	movw	r30, r24
    a72c:	ee 0f       	add	r30, r30
    a72e:	ff 1f       	adc	r31, r31
    a730:	e8 0f       	add	r30, r24
    a732:	f9 1f       	adc	r31, r25
    a734:	ec 0f       	add	r30, r28
    a736:	fd 1f       	adc	r31, r29
    a738:	e8 56       	subi	r30, 0x68	; 104
    a73a:	f6 4f       	sbci	r31, 0xF6	; 246
    a73c:	80 81       	ld	r24, Z
    a73e:	90 e0       	ldi	r25, 0x00	; 0
    a740:	85 56       	subi	r24, 0x65	; 101
    a742:	91 09       	sbc	r25, r1
    a744:	f8 9e       	mul	r15, r24
    a746:	f0 01       	movw	r30, r0
    a748:	f9 9e       	mul	r15, r25
    a74a:	f0 0d       	add	r31, r0
    a74c:	11 24       	eor	r1, r1
    a74e:	e8 51       	subi	r30, 0x18	; 24
    a750:	f2 4f       	sbci	r31, 0xF2	; 242
    a752:	81 81       	ldd	r24, Z+1	; 0x01
    a754:	88 23       	and	r24, r24
    a756:	09 f4       	brne	.+2      	; 0xa75a <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a758:	4d c0       	rjmp	.+154    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a75a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a75e:	90 e0       	ldi	r25, 0x00	; 0
    a760:	01 97       	sbiw	r24, 0x01	; 1
    a762:	fc 01       	movw	r30, r24
    a764:	ee 0f       	add	r30, r30
    a766:	ff 1f       	adc	r31, r31
    a768:	e8 0f       	add	r30, r24
    a76a:	f9 1f       	adc	r31, r25
    a76c:	ec 0f       	add	r30, r28
    a76e:	fd 1f       	adc	r31, r29
    a770:	e8 56       	subi	r30, 0x68	; 104
    a772:	f6 4f       	sbci	r31, 0xF6	; 246
    a774:	80 81       	ld	r24, Z
    a776:	90 e0       	ldi	r25, 0x00	; 0
    a778:	85 56       	subi	r24, 0x65	; 101
    a77a:	91 09       	sbc	r25, r1
    a77c:	f8 9e       	mul	r15, r24
    a77e:	f0 01       	movw	r30, r0
    a780:	f9 9e       	mul	r15, r25
    a782:	f0 0d       	add	r31, r0
    a784:	11 24       	eor	r1, r1
    a786:	e8 51       	subi	r30, 0x18	; 24
    a788:	f2 4f       	sbci	r31, 0xF2	; 242
    a78a:	81 81       	ldd	r24, Z+1	; 0x01
    a78c:	85 36       	cpi	r24, 0x65	; 101
    a78e:	90 f1       	brcs	.+100    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a790:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a794:	90 e0       	ldi	r25, 0x00	; 0
    a796:	01 97       	sbiw	r24, 0x01	; 1
    a798:	fc 01       	movw	r30, r24
    a79a:	ee 0f       	add	r30, r30
    a79c:	ff 1f       	adc	r31, r31
    a79e:	e8 0f       	add	r30, r24
    a7a0:	f9 1f       	adc	r31, r25
    a7a2:	ec 0f       	add	r30, r28
    a7a4:	fd 1f       	adc	r31, r29
    a7a6:	e8 56       	subi	r30, 0x68	; 104
    a7a8:	f6 4f       	sbci	r31, 0xF6	; 246
    a7aa:	80 81       	ld	r24, Z
    a7ac:	90 e0       	ldi	r25, 0x00	; 0
    a7ae:	85 56       	subi	r24, 0x65	; 101
    a7b0:	91 09       	sbc	r25, r1
    a7b2:	f8 9e       	mul	r15, r24
    a7b4:	f0 01       	movw	r30, r0
    a7b6:	f9 9e       	mul	r15, r25
    a7b8:	f0 0d       	add	r31, r0
    a7ba:	11 24       	eor	r1, r1
    a7bc:	e8 51       	subi	r30, 0x18	; 24
    a7be:	f2 4f       	sbci	r31, 0xF2	; 242
    a7c0:	80 81       	ld	r24, Z
    a7c2:	81 11       	cpse	r24, r1
    a7c4:	17 c0       	rjmp	.+46     	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a7c6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a7ca:	90 e0       	ldi	r25, 0x00	; 0
    a7cc:	01 97       	sbiw	r24, 0x01	; 1
    a7ce:	fc 01       	movw	r30, r24
    a7d0:	ee 0f       	add	r30, r30
    a7d2:	ff 1f       	adc	r31, r31
    a7d4:	e8 0f       	add	r30, r24
    a7d6:	f9 1f       	adc	r31, r25
    a7d8:	ec 0f       	add	r30, r28
    a7da:	fd 1f       	adc	r31, r29
    a7dc:	ee 0f       	add	r30, r30
    a7de:	ff 1f       	adc	r31, r31
    a7e0:	e5 5e       	subi	r30, 0xE5	; 229
    a7e2:	f4 4f       	sbci	r31, 0xF4	; 244
    a7e4:	20 81       	ld	r18, Z
    a7e6:	31 81       	ldd	r19, Z+1	; 0x01
    a7e8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a7ec:	90 e0       	ldi	r25, 0x00	; 0
    a7ee:	28 17       	cp	r18, r24
    a7f0:	39 07       	cpc	r19, r25
    a7f2:	31 f4       	brne	.+12     	; 0xa800 <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a7f4:	21 96       	adiw	r28, 0x01	; 1
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
		}
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a7f6:	c3 30       	cpi	r28, 0x03	; 3
    a7f8:	d1 05       	cpc	r29, r1
    a7fa:	09 f0       	breq	.+2      	; 0xa7fe <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a7fc:	77 cf       	rjmp	.-274    	; 0xa6ec <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a7fe:	a0 c0       	rjmp	.+320    	; 0xa940 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a800:	58 01       	movw	r10, r16
    a802:	80 ea       	ldi	r24, 0xA0	; 160
    a804:	a8 1a       	sub	r10, r24
    a806:	8d ef       	ldi	r24, 0xFD	; 253
    a808:	b8 0a       	sbc	r11, r24
    a80a:	f5 01       	movw	r30, r10
    a80c:	80 81       	ld	r24, Z
    a80e:	81 30       	cpi	r24, 0x01	; 1
    a810:	09 f0       	breq	.+2      	; 0xa814 <_Z26Fertilizer_Tank_Monitoringv+0x198>
    a812:	45 c0       	rjmp	.+138    	; 0xa89e <_Z26Fertilizer_Tank_Monitoringv+0x222>
							{
								Doser_Pump_On_Off(_kON);
    a814:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a818:	8e 01       	movw	r16, r28
    a81a:	00 0f       	add	r16, r16
    a81c:	11 1f       	adc	r17, r17
    a81e:	0e 57       	subi	r16, 0x7E	; 126
    a820:	14 4f       	sbci	r17, 0xF4	; 244
    a822:	f8 01       	movw	r30, r16
    a824:	20 81       	ld	r18, Z
    a826:	31 81       	ldd	r19, Z+1	; 0x01
    a828:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a82c:	90 e0       	ldi	r25, 0x00	; 0
    a82e:	01 97       	sbiw	r24, 0x01	; 1
    a830:	fc 01       	movw	r30, r24
    a832:	ee 0f       	add	r30, r30
    a834:	ff 1f       	adc	r31, r31
    a836:	e8 0f       	add	r30, r24
    a838:	f9 1f       	adc	r31, r25
    a83a:	ec 0f       	add	r30, r28
    a83c:	fd 1f       	adc	r31, r29
    a83e:	ee 0f       	add	r30, r30
    a840:	ff 1f       	adc	r31, r31
    a842:	e7 5e       	subi	r30, 0xE7	; 231
    a844:	f5 4f       	sbci	r31, 0xF5	; 245
    a846:	80 81       	ld	r24, Z
    a848:	91 81       	ldd	r25, Z+1	; 0x01
    a84a:	82 17       	cp	r24, r18
    a84c:	93 07       	cpc	r25, r19
    a84e:	90 f6       	brcc	.-92     	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a850:	80 e0       	ldi	r24, 0x00	; 0
    a852:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a856:	f8 01       	movw	r30, r16
    a858:	11 82       	std	Z+1, r1	; 0x01
    a85a:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a85c:	f5 01       	movw	r30, r10
    a85e:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a860:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a864:	90 e0       	ldi	r25, 0x00	; 0
    a866:	01 97       	sbiw	r24, 0x01	; 1
    a868:	fc 01       	movw	r30, r24
    a86a:	ee 0f       	add	r30, r30
    a86c:	ff 1f       	adc	r31, r31
    a86e:	e8 0f       	add	r30, r24
    a870:	f9 1f       	adc	r31, r25
    a872:	ec 0f       	add	r30, r28
    a874:	fd 1f       	adc	r31, r29
    a876:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a87a:	90 e0       	ldi	r25, 0x00	; 0
    a87c:	ee 0f       	add	r30, r30
    a87e:	ff 1f       	adc	r31, r31
    a880:	e5 5e       	subi	r30, 0xE5	; 229
    a882:	f4 4f       	sbci	r31, 0xF4	; 244
    a884:	91 83       	std	Z+1, r25	; 0x01
    a886:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a888:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a88c:	90 e0       	ldi	r25, 0x00	; 0
    a88e:	01 97       	sbiw	r24, 0x01	; 1
    a890:	98 2f       	mov	r25, r24
    a892:	99 0f       	add	r25, r25
    a894:	89 0f       	add	r24, r25
    a896:	60 e0       	ldi	r22, 0x00	; 0
    a898:	8e 0d       	add	r24, r14
    a89a:	b9 d9       	rcall	.-3214   	; 0x9c0e <_Z22Fertilizer_Tank_On_Offhh>
    a89c:	ab cf       	rjmp	.-170    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a89e:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    a8a2:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    a8a6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8aa:	90 e0       	ldi	r25, 0x00	; 0
    a8ac:	01 97       	sbiw	r24, 0x01	; 1
    a8ae:	fc 01       	movw	r30, r24
    a8b0:	ee 0f       	add	r30, r30
    a8b2:	ff 1f       	adc	r31, r31
    a8b4:	e8 0f       	add	r30, r24
    a8b6:	f9 1f       	adc	r31, r25
    a8b8:	ec 0f       	add	r30, r28
    a8ba:	fd 1f       	adc	r31, r29
    a8bc:	ee 0f       	add	r30, r30
    a8be:	ff 1f       	adc	r31, r31
    a8c0:	ed 53       	subi	r30, 0x3D	; 61
    a8c2:	f6 4f       	sbci	r31, 0xF6	; 246
    a8c4:	80 81       	ld	r24, Z
    a8c6:	91 81       	ldd	r25, Z+1	; 0x01
    a8c8:	82 17       	cp	r24, r18
    a8ca:	93 07       	cpc	r25, r19
    a8cc:	08 f0       	brcs	.+2      	; 0xa8d0 <_Z26Fertilizer_Tank_Monitoringv+0x254>
    a8ce:	92 cf       	rjmp	.-220    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a8d0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8d4:	90 e0       	ldi	r25, 0x00	; 0
    a8d6:	01 97       	sbiw	r24, 0x01	; 1
    a8d8:	fc 01       	movw	r30, r24
    a8da:	ee 0f       	add	r30, r30
    a8dc:	ff 1f       	adc	r31, r31
    a8de:	e8 0f       	add	r30, r24
    a8e0:	f9 1f       	adc	r31, r25
    a8e2:	ec 0f       	add	r30, r28
    a8e4:	fd 1f       	adc	r31, r29
    a8e6:	ee 0f       	add	r30, r30
    a8e8:	ff 1f       	adc	r31, r31
    a8ea:	e5 5e       	subi	r30, 0xE5	; 229
    a8ec:	f4 4f       	sbci	r31, 0xF4	; 244
    a8ee:	20 81       	ld	r18, Z
    a8f0:	31 81       	ldd	r19, Z+1	; 0x01
    a8f2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a8f6:	90 e0       	ldi	r25, 0x00	; 0
    a8f8:	28 17       	cp	r18, r24
    a8fa:	39 07       	cpc	r19, r25
    a8fc:	09 f4       	brne	.+2      	; 0xa900 <_Z26Fertilizer_Tank_Monitoringv+0x284>
    a8fe:	7a cf       	rjmp	.-268    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a900:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a904:	90 e0       	ldi	r25, 0x00	; 0
    a906:	01 97       	sbiw	r24, 0x01	; 1
    a908:	98 2f       	mov	r25, r24
    a90a:	99 0f       	add	r25, r25
    a90c:	89 0f       	add	r24, r25
    a90e:	61 e0       	ldi	r22, 0x01	; 1
    a910:	8e 0d       	add	r24, r14
    a912:	7d d9       	rcall	.-3334   	; 0x9c0e <_Z22Fertilizer_Tank_On_Offhh>
    a914:	88 23       	and	r24, r24
    a916:	79 f0       	breq	.+30     	; 0xa936 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a918:	10 92 ef 0c 	sts	0x0CEF, r1	; 0x800cef <_gWait_Blower_Time+0x1>
    a91c:	10 92 ee 0c 	sts	0x0CEE, r1	; 0x800cee <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a920:	81 e0       	ldi	r24, 0x01	; 1
    a922:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a926:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a928:	88 23       	and	r24, r24
    a92a:	31 f0       	breq	.+12     	; 0xa938 <_Z26Fertilizer_Tank_Monitoringv+0x2bc>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a92c:	e0 5a       	subi	r30, 0xA0	; 160
    a92e:	fd 4f       	sbci	r31, 0xFD	; 253
    a930:	81 e0       	ldi	r24, 0x01	; 1
    a932:	80 83       	st	Z, r24
    a934:	5f cf       	rjmp	.-322    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a936:	f8 01       	movw	r30, r16
    a938:	ed 5a       	subi	r30, 0xAD	; 173
    a93a:	fd 4f       	sbci	r31, 0xFD	; 253
    a93c:	d0 82       	st	Z, r13
    a93e:	5a cf       	rjmp	.-332    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a940:	df 91       	pop	r29
    a942:	cf 91       	pop	r28
    a944:	1f 91       	pop	r17
    a946:	0f 91       	pop	r16
    a948:	ff 90       	pop	r15
    a94a:	ef 90       	pop	r14
    a94c:	df 90       	pop	r13
    a94e:	bf 90       	pop	r11
    a950:	af 90       	pop	r10
    a952:	08 95       	ret

0000a954 <_Z20Schedules_Monitoringv>:
	
}	
	
	
void Schedules_Monitoring(void)
{
    a954:	0f 93       	push	r16
    a956:	1f 93       	push	r17
    a958:	cf 93       	push	r28
    a95a:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a95c:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a960:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a964:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a968:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a96c:	82 30       	cpi	r24, 0x02	; 2
    a96e:	90 f4       	brcc	.+36     	; 0xa994 <_Z20Schedules_Monitoringv+0x40>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a970:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a974:	81 30       	cpi	r24, 0x01	; 1
    a976:	91 f4       	brne	.+36     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a978:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <_sSchedules+0x1>
    a97c:	91 11       	cpse	r25, r1
    a97e:	0e c0       	rjmp	.+28     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a980:	90 91 e5 0b 	lds	r25, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a984:	91 30       	cpi	r25, 0x01	; 1
    a986:	51 f0       	breq	.+20     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
    a988:	90 91 f4 13 	lds	r25, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a98c:	96 34       	cpi	r25, 0x46	; 70
    a98e:	09 f0       	breq	.+2      	; 0xa992 <_Z20Schedules_Monitoringv+0x3e>
    a990:	a7 c0       	rjmp	.+334    	; 0xaae0 <_Z20Schedules_Monitoringv+0x18c>
    a992:	04 c0       	rjmp	.+8      	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a994:	81 e0       	ldi	r24, 0x01	; 1
    a996:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
		}break;
	}
	
}					
    a99a:	77 c7       	rjmp	.+3822   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a99c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a9a0:	88 23       	and	r24, r24
    a9a2:	21 f0       	breq	.+8      	; 0xa9ac <_Z20Schedules_Monitoringv+0x58>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a9a4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    a9a8:	81 11       	cpse	r24, r1
    a9aa:	07 c0       	rjmp	.+14     	; 0xa9ba <_Z20Schedules_Monitoringv+0x66>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a9ac:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a9b0:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a9b4:	89 2b       	or	r24, r25
    a9b6:	09 f4       	brne	.+2      	; 0xa9ba <_Z20Schedules_Monitoringv+0x66>
    a9b8:	67 c0       	rjmp	.+206    	; 0xaa88 <_Z20Schedules_Monitoringv+0x134>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a9ba:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    a9be:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a9c0:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a9c8:	81 30       	cpi	r24, 0x01	; 1
    a9ca:	51 f4       	brne	.+20     	; 0xa9e0 <_Z20Schedules_Monitoringv+0x8c>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a9cc:	6a e4       	ldi	r22, 0x4A	; 74
    a9ce:	73 e1       	ldi	r23, 0x13	; 19
    a9d0:	86 ec       	ldi	r24, 0xC6	; 198
    a9d2:	94 e1       	ldi	r25, 0x14	; 20
    a9d4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a9d8:	86 ec       	ldi	r24, 0xC6	; 198
    a9da:	94 e1       	ldi	r25, 0x14	; 20
    a9dc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a9e0:	80 91 e5 0b 	lds	r24, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a9e4:	81 11       	cpse	r24, r1
    a9e6:	0f c7       	rjmp	.+3614   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
    a9e8:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a9ec:	81 30       	cpi	r24, 0x01	; 1
    a9ee:	09 f4       	brne	.+2      	; 0xa9f2 <_Z20Schedules_Monitoringv+0x9e>
    a9f0:	0a c7       	rjmp	.+3604   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
    a9f2:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a9f6:	86 34       	cpi	r24, 0x46	; 70
    a9f8:	09 f4       	brne	.+2      	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
    a9fa:	05 c7       	rjmp	.+3594   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a9fc:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    aa00:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    aa04:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aa08:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    aa0c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    aa10:	81 11       	cpse	r24, r1
    aa12:	d9 c6       	rjmp	.+3506   	; 0xb7c6 <_Z20Schedules_Monitoringv+0xe72>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
						if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    aa14:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
    aa18:	81 11       	cpse	r24, r1
    aa1a:	03 c0       	rjmp	.+6      	; 0xaa22 <_Z20Schedules_Monitoringv+0xce>
						{
							_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    aa1c:	84 e0       	ldi	r24, 0x04	; 4
    aa1e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
						}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    aa22:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    aa26:	81 30       	cpi	r24, 0x01	; 1
    aa28:	e1 f4       	brne	.+56     	; 0xaa62 <_Z20Schedules_Monitoringv+0x10e>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    aa2a:	69 e1       	ldi	r22, 0x19	; 25
    aa2c:	73 e1       	ldi	r23, 0x13	; 19
    aa2e:	86 ec       	ldi	r24, 0xC6	; 198
    aa30:	94 e1       	ldi	r25, 0x14	; 20
    aa32:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    aa36:	86 ec       	ldi	r24, 0xC6	; 198
    aa38:	94 e1       	ldi	r25, 0x14	; 20
    aa3a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    aa3e:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    aa42:	4a e0       	ldi	r20, 0x0A	; 10
    aa44:	50 e0       	ldi	r21, 0x00	; 0
    aa46:	86 ec       	ldi	r24, 0xC6	; 198
    aa48:	94 e1       	ldi	r25, 0x14	; 20
    aa4a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    aa4e:	6b e0       	ldi	r22, 0x0B	; 11
    aa50:	73 e1       	ldi	r23, 0x13	; 19
    aa52:	86 ec       	ldi	r24, 0xC6	; 198
    aa54:	94 e1       	ldi	r25, 0x14	; 20
    aa56:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    aa5a:	86 ec       	ldi	r24, 0xC6	; 198
    aa5c:	94 e1       	ldi	r25, 0x14	; 20
    aa5e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa62:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa66:	81 e0       	ldi	r24, 0x01	; 1
    aa68:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa6c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					
					_sSchedules.Schedule_Are_Started = _kRESET;
    aa70:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aa74:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    aa78:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    aa7c:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aa80:	89 13       	cpse	r24, r25
    aa82:	b8 c6       	rjmp	.+3440   	; 0xb7f4 <_Z20Schedules_Monitoringv+0xea0>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aa84:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    aa88:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    aa8c:	88 23       	and	r24, r24
    aa8e:	b9 f0       	breq	.+46     	; 0xaabe <_Z20Schedules_Monitoringv+0x16a>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    aa90:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa94:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa98:	81 e0       	ldi	r24, 0x01	; 1
    aa9a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa9e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    aaa2:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aaa6:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    aaaa:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    aaae:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    aab2:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aab6:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
				
				
				
					Edited_In_Schedule();
    aaba:	0e 94 74 40 	call	0x80e8	; 0x80e8 <_Z18Edited_In_Schedulev>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aabe:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aac2:	88 23       	and	r24, r24
    aac4:	09 f4       	brne	.+2      	; 0xaac8 <_Z20Schedules_Monitoringv+0x174>
    aac6:	e1 c6       	rjmp	.+3522   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aac8:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aacc:	85 30       	cpi	r24, 0x05	; 5
    aace:	09 f0       	breq	.+2      	; 0xaad2 <_Z20Schedules_Monitoringv+0x17e>
    aad0:	dc c6       	rjmp	.+3512   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
				{
					Stop_Irrigation();
    aad2:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    aad6:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
    aada:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
    aade:	d5 c6       	rjmp	.+3498   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aae0:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aae4:	95 30       	cpi	r25, 0x05	; 5
    aae6:	09 f0       	breq	.+2      	; 0xaaea <_Z20Schedules_Monitoringv+0x196>
    aae8:	42 c0       	rjmp	.+132    	; 0xab6e <_Z20Schedules_Monitoringv+0x21a>
				{
					mode_change = _kSET;
    aaea:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    aaee:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
    aaf2:	81 30       	cpi	r24, 0x01	; 1
    aaf4:	61 f4       	brne	.+24     	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    aaf6:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    aafa:	81 30       	cpi	r24, 0x01	; 1
    aafc:	41 f0       	breq	.+16     	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    aafe:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    ab02:	81 11       	cpse	r24, r1
    ab04:	04 c0       	rjmp	.+8      	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
						{
							flush_running_status = _kRESET;
    ab06:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ab0a:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    ab0e:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    ab12:	81 30       	cpi	r24, 0x01	; 1
    ab14:	79 f4       	brne	.+30     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
					{
						irrigation_Start_Set = _kRESET;
    ab16:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    ab1a:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    ab1e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ab22:	89 17       	cp	r24, r25
    ab24:	39 f0       	breq	.+14     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ab26:	88 23       	and	r24, r24
    ab28:	29 f0       	breq	.+10     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ab2a:	60 e0       	ldi	r22, 0x00	; 0
    ab2c:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ab30:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    ab34:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    ab38:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    ab3c:	89 2b       	or	r24, r25
    ab3e:	41 f4       	brne	.+16     	; 0xab50 <_Z20Schedules_Monitoringv+0x1fc>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    ab40:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    ab44:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <_sSchedules+0x6>
    ab48:	81 30       	cpi	r24, 0x01	; 1
    ab4a:	09 f0       	breq	.+2      	; 0xab4e <_Z20Schedules_Monitoringv+0x1fa>
    ab4c:	ea c0       	rjmp	.+468    	; 0xad22 <_Z20Schedules_Monitoringv+0x3ce>
    ab4e:	60 c0       	rjmp	.+192    	; 0xac10 <_Z20Schedules_Monitoringv+0x2bc>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    ab50:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    ab54:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    ab58:	0a 97       	sbiw	r24, 0x0a	; 10
    ab5a:	08 f0       	brcs	.+2      	; 0xab5e <_Z20Schedules_Monitoringv+0x20a>
    ab5c:	96 c6       	rjmp	.+3372   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    ab5e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab62:	88 23       	and	r24, r24
    ab64:	09 f4       	brne	.+2      	; 0xab68 <_Z20Schedules_Monitoringv+0x214>
    ab66:	91 c6       	rjmp	.+3362   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    ab68:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
    ab6c:	8e c6       	rjmp	.+3356   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    ab6e:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
    ab72:	88 23       	and	r24, r24
    ab74:	09 f4       	brne	.+2      	; 0xab78 <_Z20Schedules_Monitoringv+0x224>
    ab76:	89 c6       	rjmp	.+3346   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					{
						mode_change = _kRESET;
    ab78:	10 92 1d 09 	sts	0x091D, r1	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    ab7c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab80:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    ab82:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    ab86:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ab8a:	88 23       	and	r24, r24
    ab8c:	89 f1       	breq	.+98     	; 0xabf0 <_Z20Schedules_Monitoringv+0x29c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ab92:	81 30       	cpi	r24, 0x01	; 1
    ab94:	51 f4       	brne	.+20     	; 0xabaa <_Z20Schedules_Monitoringv+0x256>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    ab96:	62 e6       	ldi	r22, 0x62	; 98
    ab98:	73 e1       	ldi	r23, 0x13	; 19
    ab9a:	86 ec       	ldi	r24, 0xC6	; 198
    ab9c:	94 e1       	ldi	r25, 0x14	; 20
    ab9e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    aba2:	86 ec       	ldi	r24, 0xC6	; 198
    aba4:	94 e1       	ldi	r25, 0x14	; 20
    aba6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    abaa:	83 e0       	ldi	r24, 0x03	; 3
    abac:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    abb0:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    abb4:	83 e0       	ldi	r24, 0x03	; 3
    abb6:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    abba:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
    abbe:	81 11       	cpse	r24, r1
    abc0:	11 c0       	rjmp	.+34     	; 0xabe4 <_Z20Schedules_Monitoringv+0x290>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    abc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    abc6:	81 30       	cpi	r24, 0x01	; 1
    abc8:	51 f4       	brne	.+20     	; 0xabde <_Z20Schedules_Monitoringv+0x28a>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    abca:	66 e5       	ldi	r22, 0x56	; 86
    abcc:	73 e1       	ldi	r23, 0x13	; 19
    abce:	86 ec       	ldi	r24, 0xC6	; 198
    abd0:	94 e1       	ldi	r25, 0x14	; 20
    abd2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    abd6:	86 ec       	ldi	r24, 0xC6	; 198
    abd8:	94 e1       	ldi	r25, 0x14	; 20
    abda:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    abde:	84 e0       	ldi	r24, 0x04	; 4
    abe0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    abe4:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    abe8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    abec:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    abf0:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    abf4:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    abf8:	89 17       	cp	r24, r25
    abfa:	09 f4       	brne	.+2      	; 0xabfe <_Z20Schedules_Monitoringv+0x2aa>
    abfc:	46 c6       	rjmp	.+3212   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    abfe:	88 23       	and	r24, r24
    ac00:	09 f4       	brne	.+2      	; 0xac04 <_Z20Schedules_Monitoringv+0x2b0>
    ac02:	43 c6       	rjmp	.+3206   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ac04:	60 e0       	ldi	r22, 0x00	; 0
    ac06:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ac0a:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    ac0e:	3d c6       	rjmp	.+3194   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    ac10:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac14:	f0 e0       	ldi	r31, 0x00	; 0
    ac16:	e9 57       	subi	r30, 0x79	; 121
    ac18:	f6 4f       	sbci	r31, 0xF6	; 246
    ac1a:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    ac1c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac20:	f0 e0       	ldi	r31, 0x00	; 0
    ac22:	e8 58       	subi	r30, 0x88	; 136
    ac24:	f6 4f       	sbci	r31, 0xF6	; 246
    ac26:	60 81       	ld	r22, Z
    ac28:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    ac2c:	0e 94 ec 38 	call	0x71d8	; 0x71d8 <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    ac30:	81 50       	subi	r24, 0x01	; 1
    ac32:	82 30       	cpi	r24, 0x02	; 2
    ac34:	08 f4       	brcc	.+2      	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
    ac36:	8d c1       	rjmp	.+794    	; 0xaf52 <_Z20Schedules_Monitoringv+0x5fe>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kNUMBER_OF_SCHEDULES+1) /* when reach to the last scheduler */
    ac38:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac3c:	80 31       	cpi	r24, 0x10	; 16
    ac3e:	90 f1       	brcs	.+100    	; 0xaca4 <_Z20Schedules_Monitoringv+0x350>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac40:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac44:	81 30       	cpi	r24, 0x01	; 1
    ac46:	31 f4       	brne	.+12     	; 0xac54 <_Z20Schedules_Monitoringv+0x300>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    ac48:	63 ec       	ldi	r22, 0xC3	; 195
    ac4a:	74 e1       	ldi	r23, 0x14	; 20
    ac4c:	86 ec       	ldi	r24, 0xC6	; 198
    ac4e:	94 e1       	ldi	r25, 0x14	; 20
    ac50:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    ac54:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    ac58:	81 e0       	ldi	r24, 0x01	; 1
    ac5a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    ac5e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    ac62:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    ac66:	81 30       	cpi	r24, 0x01	; 1
    ac68:	61 f4       	brne	.+24     	; 0xac82 <_Z20Schedules_Monitoringv+0x32e>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac6a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac6e:	81 30       	cpi	r24, 0x01	; 1
    ac70:	31 f4       	brne	.+12     	; 0xac7e <_Z20Schedules_Monitoringv+0x32a>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    ac72:	67 eb       	ldi	r22, 0xB7	; 183
    ac74:	74 e1       	ldi	r23, 0x14	; 20
    ac76:	86 ec       	ldi	r24, 0xC6	; 198
    ac78:	94 e1       	ldi	r25, 0x14	; 20
    ac7a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    ac7e:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    ac82:	82 e0       	ldi	r24, 0x02	; 2
    ac84:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    ac88:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ac8c:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    ac90:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    ac94:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    ac98:	df 91       	pop	r29
    ac9a:	cf 91       	pop	r28
    ac9c:	1f 91       	pop	r17
    ac9e:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aca0:	0c 94 b2 32 	jmp	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    aca4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    aca8:	8f 5f       	subi	r24, 0xFF	; 255
    acaa:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    acae:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    acb2:	81 30       	cpi	r24, 0x01	; 1
    acb4:	09 f0       	breq	.+2      	; 0xacb8 <_Z20Schedules_Monitoringv+0x364>
    acb6:	e9 c5       	rjmp	.+3026   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    acb8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    acbc:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    acc0:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    acc4:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    acc8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    accc:	81 30       	cpi	r24, 0x01	; 1
    acce:	91 f4       	brne	.+36     	; 0xacf4 <_Z20Schedules_Monitoringv+0x3a0>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    acd0:	65 e8       	ldi	r22, 0x85	; 133
    acd2:	74 e1       	ldi	r23, 0x14	; 20
    acd4:	86 ec       	ldi	r24, 0xC6	; 198
    acd6:	94 e1       	ldi	r25, 0x14	; 20
    acd8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    acdc:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ace0:	4a e0       	ldi	r20, 0x0A	; 10
    ace2:	50 e0       	ldi	r21, 0x00	; 0
    ace4:	86 ec       	ldi	r24, 0xC6	; 198
    ace6:	94 e1       	ldi	r25, 0x14	; 20
    ace8:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    acec:	86 ec       	ldi	r24, 0xC6	; 198
    acee:	94 e1       	ldi	r25, 0x14	; 20
    acf0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    acf4:	81 e0       	ldi	r24, 0x01	; 1
    acf6:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    acfa:	81 e0       	ldi	r24, 0x01	; 1
    acfc:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    acfe:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    ad02:	9c 01       	movw	r18, r24
    ad04:	22 5e       	subi	r18, 0xE2	; 226
    ad06:	36 4f       	sbci	r19, 0xF6	; 246
    ad08:	f9 01       	movw	r30, r18
    ad0a:	e5 5a       	subi	r30, 0xA5	; 165
    ad0c:	ff 4f       	sbci	r31, 0xFF	; 255
    ad0e:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    ad10:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    ad14:	3f 96       	adiw	r30, 0x0f	; 15
    ad16:	40 83       	st	Z, r20
    ad18:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    ad1a:	8e 30       	cpi	r24, 0x0E	; 14
    ad1c:	91 05       	cpc	r25, r1
    ad1e:	79 f7       	brne	.-34     	; 0xacfe <_Z20Schedules_Monitoringv+0x3aa>
    ad20:	b4 c5       	rjmp	.+2920   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    ad22:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    ad26:	81 30       	cpi	r24, 0x01	; 1
    ad28:	b1 f5       	brne	.+108    	; 0xad96 <_Z20Schedules_Monitoringv+0x442>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    ad2a:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ad2e:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ad32:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    ad36:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    ad3a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ad3e:	4c 32       	cpi	r20, 0x2C	; 44
    ad40:	51 40       	sbci	r21, 0x01	; 1
    ad42:	61 05       	cpc	r22, r1
    ad44:	71 05       	cpc	r23, r1
    ad46:	d0 f4       	brcc	.+52     	; 0xad7c <_Z20Schedules_Monitoringv+0x428>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    ad48:	47 e1       	ldi	r20, 0x17	; 23
    ad4a:	50 e5       	ldi	r21, 0x50	; 80
    ad4c:	61 e0       	ldi	r22, 0x01	; 1
    ad4e:	70 e0       	ldi	r23, 0x00	; 0
    ad50:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    ad54:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    ad58:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    ad5c:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad60:	81 30       	cpi	r24, 0x01	; 1
    ad62:	09 f0       	breq	.+2      	; 0xad66 <_Z20Schedules_Monitoringv+0x412>
    ad64:	47 c0       	rjmp	.+142    	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    ad66:	67 e7       	ldi	r22, 0x77	; 119
    ad68:	74 e1       	ldi	r23, 0x14	; 20
    ad6a:	86 ec       	ldi	r24, 0xC6	; 198
    ad6c:	94 e1       	ldi	r25, 0x14	; 20
    ad6e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad72:	86 ec       	ldi	r24, 0xC6	; 198
    ad74:	94 e1       	ldi	r25, 0x14	; 20
    ad76:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    ad7a:	3c c0       	rjmp	.+120    	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad7c:	81 30       	cpi	r24, 0x01	; 1
    ad7e:	31 f5       	brne	.+76     	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    ad80:	69 e6       	ldi	r22, 0x69	; 105
    ad82:	74 e1       	ldi	r23, 0x14	; 20
    ad84:	86 ec       	ldi	r24, 0xC6	; 198
    ad86:	94 e1       	ldi	r25, 0x14	; 20
    ad88:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad8c:	86 ec       	ldi	r24, 0xC6	; 198
    ad8e:	94 e1       	ldi	r25, 0x14	; 20
    ad90:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    ad94:	1b c0       	rjmp	.+54     	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad96:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ad9a:	81 11       	cpse	r24, r1
    ad9c:	4e c3       	rjmp	.+1692   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad9e:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    ada2:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    ada6:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    adaa:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    adae:	89 2b       	or	r24, r25
    adb0:	8a 2b       	or	r24, r26
    adb2:	8b 2b       	or	r24, r27
    adb4:	09 f0       	breq	.+2      	; 0xadb8 <_Z20Schedules_Monitoringv+0x464>
    adb6:	41 c3       	rjmp	.+1666   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    adb8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    adbc:	81 11       	cpse	r24, r1
    adbe:	3d c3       	rjmp	.+1658   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    adc0:	80 91 6a 14 	lds	r24, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
    adc4:	81 30       	cpi	r24, 0x01	; 1
    adc6:	09 f0       	breq	.+2      	; 0xadca <_Z20Schedules_Monitoringv+0x476>
    adc8:	38 c3       	rjmp	.+1648   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
    adca:	20 c3       	rjmp	.+1600   	; 0xb40c <_Z20Schedules_Monitoringv+0xab8>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    adcc:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    add0:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    add4:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    add8:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    addc:	8c 52       	subi	r24, 0x2C	; 44
    adde:	91 40       	sbci	r25, 0x01	; 1
    ade0:	a1 09       	sbc	r26, r1
    ade2:	b1 09       	sbc	r27, r1
    ade4:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    ade8:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    adec:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    adf0:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    adf4:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    adf8:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    adfc:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ae00:	89 17       	cp	r24, r25
    ae02:	59 f0       	breq	.+22     	; 0xae1a <_Z20Schedules_Monitoringv+0x4c6>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ae04:	88 23       	and	r24, r24
    ae06:	49 f0       	breq	.+18     	; 0xae1a <_Z20Schedules_Monitoringv+0x4c6>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ae08:	60 e0       	ldi	r22, 0x00	; 0
    ae0a:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    ae0e:	86 ec       	ldi	r24, 0xC6	; 198
    ae10:	94 e1       	ldi	r25, 0x14	; 20
    ae12:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ae16:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    ae1a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ae1e:	88 23       	and	r24, r24
    ae20:	09 f4       	brne	.+2      	; 0xae24 <_Z20Schedules_Monitoringv+0x4d0>
    ae22:	43 c0       	rjmp	.+134    	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ae28:	81 30       	cpi	r24, 0x01	; 1
    ae2a:	51 f4       	brne	.+20     	; 0xae40 <_Z20Schedules_Monitoringv+0x4ec>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    ae2c:	62 e3       	ldi	r22, 0x32	; 50
    ae2e:	74 e1       	ldi	r23, 0x14	; 20
    ae30:	86 ec       	ldi	r24, 0xC6	; 198
    ae32:	94 e1       	ldi	r25, 0x14	; 20
    ae34:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    ae38:	86 ec       	ldi	r24, 0xC6	; 198
    ae3a:	94 e1       	ldi	r25, 0x14	; 20
    ae3c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    ae40:	80 91 56 0e 	lds	r24, 0x0E56	; 0x800e56 <_sExtra_Plot+0x6e>
    ae44:	84 30       	cpi	r24, 0x04	; 4
    ae46:	89 f1       	breq	.+98     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    ae48:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    ae4c:	81 30       	cpi	r24, 0x01	; 1
    ae4e:	69 f1       	breq	.+90     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    ae50:	80 91 54 0e 	lds	r24, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    ae54:	81 11       	cpse	r24, r1
    ae56:	29 c0       	rjmp	.+82     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ae58:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
    ae5c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ae60:	81 11       	cpse	r24, r1
    ae62:	13 c0       	rjmp	.+38     	; 0xae8a <_Z20Schedules_Monitoringv+0x536>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae64:	91 30       	cpi	r25, 0x01	; 1
    ae66:	51 f4       	brne	.+20     	; 0xae7c <_Z20Schedules_Monitoringv+0x528>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    ae68:	6b e0       	ldi	r22, 0x0B	; 11
    ae6a:	74 e1       	ldi	r23, 0x14	; 20
    ae6c:	86 ec       	ldi	r24, 0xC6	; 198
    ae6e:	94 e1       	ldi	r25, 0x14	; 20
    ae70:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae74:	86 ec       	ldi	r24, 0xC6	; 198
    ae76:	94 e1       	ldi	r25, 0x14	; 20
    ae78:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ae7c:	88 e5       	ldi	r24, 0x58	; 88
    ae7e:	92 e0       	ldi	r25, 0x02	; 2
    ae80:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ae84:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    ae88:	0c c0       	rjmp	.+24     	; 0xaea2 <_Z20Schedules_Monitoringv+0x54e>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae8a:	91 30       	cpi	r25, 0x01	; 1
    ae8c:	51 f4       	brne	.+20     	; 0xaea2 <_Z20Schedules_Monitoringv+0x54e>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    ae8e:	6e ef       	ldi	r22, 0xFE	; 254
    ae90:	73 e1       	ldi	r23, 0x13	; 19
    ae92:	86 ec       	ldi	r24, 0xC6	; 198
    ae94:	94 e1       	ldi	r25, 0x14	; 20
    ae96:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae9a:	86 ec       	ldi	r24, 0xC6	; 198
    ae9c:	94 e1       	ldi	r25, 0x14	; 20
    ae9e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    aea2:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aea6:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    aeaa:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aeae:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aeb2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    aeb6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    aeba:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    aebe:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    aec2:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    aec6:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aeca:	48 17       	cp	r20, r24
    aecc:	59 07       	cpc	r21, r25
    aece:	6a 07       	cpc	r22, r26
    aed0:	7b 07       	cpc	r23, r27
    aed2:	80 f4       	brcc	.+32     	; 0xaef4 <_Z20Schedules_Monitoringv+0x5a0>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    aed4:	0e 94 e6 48 	call	0x91cc	; 0x91cc <_Z30Compare_Trigger_And_Reset_Timev>
    aed8:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aeda:	81 11       	cpse	r24, r1
    aedc:	ce c2       	rjmp	.+1436   	; 0xb47a <_Z20Schedules_Monitoringv+0xb26>
    aede:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aee2:	81 30       	cpi	r24, 0x01	; 1
    aee4:	09 f0       	breq	.+2      	; 0xaee8 <_Z20Schedules_Monitoringv+0x594>
    aee6:	d1 c4       	rjmp	.+2466   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aee8:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aeec:	81 30       	cpi	r24, 0x01	; 1
    aeee:	09 f0       	breq	.+2      	; 0xaef2 <_Z20Schedules_Monitoringv+0x59e>
    aef0:	cc c4       	rjmp	.+2456   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aef2:	c3 c2       	rjmp	.+1414   	; 0xb47a <_Z20Schedules_Monitoringv+0xb26>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    aef4:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aef8:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aefc:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    af00:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    af04:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    af08:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    af0c:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    af10:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    af14:	48 17       	cp	r20, r24
    af16:	59 07       	cpc	r21, r25
    af18:	6a 07       	cpc	r22, r26
    af1a:	7b 07       	cpc	r23, r27
    af1c:	08 f4       	brcc	.+2      	; 0xaf20 <_Z20Schedules_Monitoringv+0x5cc>
    af1e:	b5 c4       	rjmp	.+2410   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    af20:	0e 94 e6 48 	call	0x91cc	; 0x91cc <_Z30Compare_Trigger_And_Reset_Timev>
    af24:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    af26:	81 11       	cpse	r24, r1
    af28:	ed c2       	rjmp	.+1498   	; 0xb504 <_Z20Schedules_Monitoringv+0xbb0>
    af2a:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    af2e:	81 30       	cpi	r24, 0x01	; 1
    af30:	29 f4       	brne	.+10     	; 0xaf3c <_Z20Schedules_Monitoringv+0x5e8>
    af32:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    af36:	81 30       	cpi	r24, 0x01	; 1
    af38:	09 f4       	brne	.+2      	; 0xaf3c <_Z20Schedules_Monitoringv+0x5e8>
    af3a:	e4 c2       	rjmp	.+1480   	; 0xb504 <_Z20Schedules_Monitoringv+0xbb0>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    af3c:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    af40:	81 30       	cpi	r24, 0x01	; 1
    af42:	09 f0       	breq	.+2      	; 0xaf46 <_Z20Schedules_Monitoringv+0x5f2>
    af44:	a2 c4       	rjmp	.+2372   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    af46:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    af4a:	81 30       	cpi	r24, 0x01	; 1
    af4c:	09 f0       	breq	.+2      	; 0xaf50 <_Z20Schedules_Monitoringv+0x5fc>
    af4e:	9d c4       	rjmp	.+2362   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    af50:	36 c3       	rjmp	.+1644   	; 0xb5be <_Z20Schedules_Monitoringv+0xc6a>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    af52:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af56:	f0 e0       	ldi	r31, 0x00	; 0
    af58:	e3 5e       	subi	r30, 0xE3	; 227
    af5a:	f6 4f       	sbci	r31, 0xF6	; 246
    af5c:	15 ad       	ldd	r17, Z+61	; 0x3d
    af5e:	11 30       	cpi	r17, 0x01	; 1
    af60:	09 f0       	breq	.+2      	; 0xaf64 <_Z20Schedules_Monitoringv+0x610>
    af62:	6a ce       	rjmp	.-812    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    af64:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af68:	f0 e0       	ldi	r31, 0x00	; 0
    af6a:	e7 59       	subi	r30, 0x97	; 151
    af6c:	f6 4f       	sbci	r31, 0xF6	; 246
    af6e:	80 81       	ld	r24, Z
    af70:	90 e0       	ldi	r25, 0x00	; 0
    af72:	01 97       	sbiw	r24, 0x01	; 1
    af74:	26 e0       	ldi	r18, 0x06	; 6
    af76:	28 9f       	mul	r18, r24
    af78:	f0 01       	movw	r30, r0
    af7a:	29 9f       	mul	r18, r25
    af7c:	f0 0d       	add	r31, r0
    af7e:	11 24       	eor	r1, r1
    af80:	e2 5b       	subi	r30, 0xB2	; 178
    af82:	f2 4f       	sbci	r31, 0xF2	; 242
    af84:	80 81       	ld	r24, Z
    af86:	88 23       	and	r24, r24
    af88:	09 f4       	brne	.+2      	; 0xaf8c <_Z20Schedules_Monitoringv+0x638>
    af8a:	56 ce       	rjmp	.-852    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    af8c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af90:	f0 e0       	ldi	r31, 0x00	; 0
    af92:	e7 59       	subi	r30, 0x97	; 151
    af94:	f6 4f       	sbci	r31, 0xF6	; 246
    af96:	80 81       	ld	r24, Z
    af98:	90 e0       	ldi	r25, 0x00	; 0
    af9a:	01 97       	sbiw	r24, 0x01	; 1
    af9c:	28 9f       	mul	r18, r24
    af9e:	f0 01       	movw	r30, r0
    afa0:	29 9f       	mul	r18, r25
    afa2:	f0 0d       	add	r31, r0
    afa4:	11 24       	eor	r1, r1
    afa6:	e2 5b       	subi	r30, 0xB2	; 178
    afa8:	f2 4f       	sbci	r31, 0xF2	; 242
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    afaa:	80 81       	ld	r24, Z
    afac:	8f 30       	cpi	r24, 0x0F	; 15
    afae:	08 f0       	brcs	.+2      	; 0xafb2 <_Z20Schedules_Monitoringv+0x65e>
    afb0:	43 ce       	rjmp	.-890    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    afb2:	0e 94 b8 46 	call	0x8d70	; 0x8d70 <_Z22Do_Not_Repeat_Schedulev>
    afb6:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    afb8:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <_sSchedules+0x79>
    afbc:	81 30       	cpi	r24, 0x01	; 1
    afbe:	09 f0       	breq	.+2      	; 0xafc2 <_Z20Schedules_Monitoringv+0x66e>
    afc0:	41 c1       	rjmp	.+642    	; 0xb244 <_Z20Schedules_Monitoringv+0x8f0>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    afc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    afc6:	81 30       	cpi	r24, 0x01	; 1
    afc8:	89 f5       	brne	.+98     	; 0xb02c <_Z20Schedules_Monitoringv+0x6d8>
									{
										Serial.println("Running time in sec");
    afca:	6f ee       	ldi	r22, 0xEF	; 239
    afcc:	72 e0       	ldi	r23, 0x02	; 2
    afce:	86 ec       	ldi	r24, 0xC6	; 198
    afd0:	94 e1       	ldi	r25, 0x14	; 20
    afd2:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    afd6:	60 91 26 09 	lds	r22, 0x0926	; 0x800926 <_sSchedules+0x8>
    afda:	70 91 27 09 	lds	r23, 0x0927	; 0x800927 <_sSchedules+0x9>
    afde:	4a e0       	ldi	r20, 0x0A	; 10
    afe0:	50 e0       	ldi	r21, 0x00	; 0
    afe2:	86 ec       	ldi	r24, 0xC6	; 198
    afe4:	94 e1       	ldi	r25, 0x14	; 20
    afe6:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
										Serial.println();
    afea:	86 ec       	ldi	r24, 0xC6	; 198
    afec:	94 e1       	ldi	r25, 0x14	; 20
    afee:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    aff2:	86 ec       	ldi	r24, 0xC6	; 198
    aff4:	94 e1       	ldi	r25, 0x14	; 20
    aff6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    affa:	63 e0       	ldi	r22, 0x03	; 3
    affc:	73 e0       	ldi	r23, 0x03	; 3
    affe:	86 ec       	ldi	r24, 0xC6	; 198
    b000:	94 e1       	ldi	r25, 0x14	; 20
    b002:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    b006:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    b00a:	70 e0       	ldi	r23, 0x00	; 0
    b00c:	61 50       	subi	r22, 0x01	; 1
    b00e:	71 09       	sbc	r23, r1
    b010:	4a e0       	ldi	r20, 0x0A	; 10
    b012:	50 e0       	ldi	r21, 0x00	; 0
    b014:	86 ec       	ldi	r24, 0xC6	; 198
    b016:	94 e1       	ldi	r25, 0x14	; 20
    b018:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    b01c:	86 ec       	ldi	r24, 0xC6	; 198
    b01e:	94 e1       	ldi	r25, 0x14	; 20
    b020:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    b024:	86 ec       	ldi	r24, 0xC6	; 198
    b026:	94 e1       	ldi	r25, 0x14	; 20
    b028:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    b02c:	27 db       	rcall	.-2482   	; 0xa67c <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    b02e:	81 e0       	ldi	r24, 0x01	; 1
    b030:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    b034:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    b038:	8b 35       	cpi	r24, 0x5B	; 91
    b03a:	98 f4       	brcc	.+38     	; 0xb062 <_Z20Schedules_Monitoringv+0x70e>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    b03c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    b040:	84 32       	cpi	r24, 0x24	; 36
    b042:	98 f0       	brcs	.+38     	; 0xb06a <_Z20Schedules_Monitoringv+0x716>
    b044:	80 e0       	ldi	r24, 0x00	; 0
    b046:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    b048:	fc 01       	movw	r30, r24
    b04a:	e2 58       	subi	r30, 0x82	; 130
    b04c:	f4 4f       	sbci	r31, 0xF4	; 244
    b04e:	20 81       	ld	r18, Z
    b050:	21 30       	cpi	r18, 0x01	; 1
    b052:	09 f4       	brne	.+2      	; 0xb056 <_Z20Schedules_Monitoringv+0x702>
												{
													number_of_running_tanks++;
    b054:	cf 5f       	subi	r28, 0xFF	; 255
    b056:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    b058:	83 30       	cpi	r24, 0x03	; 3
    b05a:	91 05       	cpc	r25, r1
    b05c:	a9 f7       	brne	.-22     	; 0xb048 <_Z20Schedules_Monitoringv+0x6f4>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    b05e:	cc 23       	and	r28, r28
    b060:	21 f0       	breq	.+8      	; 0xb06a <_Z20Schedules_Monitoringv+0x716>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    b062:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b066:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    b06a:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    b06e:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    b072:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b076:	f0 e0       	ldi	r31, 0x00	; 0
    b078:	ee 0f       	add	r30, r30
    b07a:	ff 1f       	adc	r31, r31
    b07c:	e4 5e       	subi	r30, 0xE4	; 228
    b07e:	f6 4f       	sbci	r31, 0xF6	; 246
    b080:	87 8d       	ldd	r24, Z+31	; 0x1f
    b082:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    b084:	82 17       	cp	r24, r18
    b086:	93 07       	cpc	r25, r19
    b088:	18 f0       	brcs	.+6      	; 0xb090 <_Z20Schedules_Monitoringv+0x73c>
    b08a:	dd 23       	and	r29, r29
    b08c:	09 f4       	brne	.+2      	; 0xb090 <_Z20Schedules_Monitoringv+0x73c>
    b08e:	5f c0       	rjmp	.+190    	; 0xb14e <_Z20Schedules_Monitoringv+0x7fa>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b090:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b094:	f0 e0       	ldi	r31, 0x00	; 0
    b096:	e7 59       	subi	r30, 0x97	; 151
    b098:	f6 4f       	sbci	r31, 0xF6	; 246
    b09a:	80 81       	ld	r24, Z
    b09c:	80 93 7a 14 	sts	0x147A, r24	; 0x80147a <_sRuble_Parameters+0xcc>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b0a0:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										Serial.println("time over");
    b0a4:	64 e1       	ldi	r22, 0x14	; 20
    b0a6:	73 e0       	ldi	r23, 0x03	; 3
    b0a8:	86 ec       	ldi	r24, 0xC6	; 198
    b0aa:	94 e1       	ldi	r25, 0x14	; 20
    b0ac:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b0b0:	83 e0       	ldi	r24, 0x03	; 3
    b0b2:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b0b6:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b0ba:	83 e0       	ldi	r24, 0x03	; 3
    b0bc:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    b0c0:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    b0c4:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    b0c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
										if(Check_for_no_repeat != 1)
    b0cc:	d1 30       	cpi	r29, 0x01	; 1
    b0ce:	09 f4       	brne	.+2      	; 0xb0d2 <_Z20Schedules_Monitoringv+0x77e>
    b0d0:	27 c1       	rjmp	.+590    	; 0xb320 <_Z20Schedules_Monitoringv+0x9cc>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b0d2:	81 30       	cpi	r24, 0x01	; 1
    b0d4:	51 f4       	brne	.+20     	; 0xb0ea <_Z20Schedules_Monitoringv+0x796>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    b0d6:	6a e2       	ldi	r22, 0x2A	; 42
    b0d8:	76 e1       	ldi	r23, 0x16	; 22
    b0da:	86 ec       	ldi	r24, 0xC6	; 198
    b0dc:	94 e1       	ldi	r25, 0x14	; 20
    b0de:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b0e2:	86 ec       	ldi	r24, 0xC6	; 198
    b0e4:	94 e1       	ldi	r25, 0x14	; 20
    b0e6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    b0ea:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0ee:	f0 e0       	ldi	r31, 0x00	; 0
    b0f0:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b0f4:	e8 58       	subi	r30, 0x88	; 136
    b0f6:	f6 4f       	sbci	r31, 0xF6	; 246
    b0f8:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    b0fa:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0fe:	f0 e0       	ldi	r31, 0x00	; 0
    b100:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b104:	e9 57       	subi	r30, 0x79	; 121
    b106:	f6 4f       	sbci	r31, 0xF6	; 246
    b108:	80 83       	st	Z, r24
    b10a:	20 e0       	ldi	r18, 0x00	; 0
    b10c:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    b10e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b112:	90 e0       	ldi	r25, 0x00	; 0
    b114:	01 97       	sbiw	r24, 0x01	; 1
    b116:	fc 01       	movw	r30, r24
    b118:	ee 0f       	add	r30, r30
    b11a:	ff 1f       	adc	r31, r31
    b11c:	e8 0f       	add	r30, r24
    b11e:	f9 1f       	adc	r31, r25
    b120:	e2 0f       	add	r30, r18
    b122:	f3 1f       	adc	r31, r19
    b124:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b128:	90 e0       	ldi	r25, 0x00	; 0
    b12a:	ee 0f       	add	r30, r30
    b12c:	ff 1f       	adc	r31, r31
    b12e:	e5 5e       	subi	r30, 0xE5	; 229
    b130:	f4 4f       	sbci	r31, 0xF4	; 244
    b132:	91 83       	std	Z+1, r25	; 0x01
    b134:	80 83       	st	Z, r24
    b136:	2f 5f       	subi	r18, 0xFF	; 255
    b138:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    b13a:	23 30       	cpi	r18, 0x03	; 3
    b13c:	31 05       	cpc	r19, r1
    b13e:	39 f7       	brne	.-50     	; 0xb10e <_Z20Schedules_Monitoringv+0x7ba>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    b140:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b144:	81 30       	cpi	r24, 0x01	; 1
    b146:	09 f4       	brne	.+2      	; 0xb14a <_Z20Schedules_Monitoringv+0x7f6>
    b148:	2c c1       	rjmp	.+600    	; 0xb3a2 <_Z20Schedules_Monitoringv+0xa4e>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b14a:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    b14e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b152:	88 23       	and	r24, r24
    b154:	09 f4       	brne	.+2      	; 0xb158 <_Z20Schedules_Monitoringv+0x804>
    b156:	40 c0       	rjmp	.+128    	; 0xb1d8 <_Z20Schedules_Monitoringv+0x884>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b158:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
    b15c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b160:	81 11       	cpse	r24, r1
    b162:	05 c0       	rjmp	.+10     	; 0xb16e <_Z20Schedules_Monitoringv+0x81a>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b164:	91 30       	cpi	r25, 0x01	; 1
    b166:	79 f4       	brne	.+30     	; 0xb186 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    b168:	65 e6       	ldi	r22, 0x65	; 101
    b16a:	75 e1       	ldi	r23, 0x15	; 21
    b16c:	04 c0       	rjmp	.+8      	; 0xb176 <_Z20Schedules_Monitoringv+0x822>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b16e:	91 30       	cpi	r25, 0x01	; 1
    b170:	51 f4       	brne	.+20     	; 0xb186 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    b172:	67 e4       	ldi	r22, 0x47	; 71
    b174:	75 e1       	ldi	r23, 0x15	; 21
    b176:	86 ec       	ldi	r24, 0xC6	; 198
    b178:	94 e1       	ldi	r25, 0x14	; 20
    b17a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b17e:	86 ec       	ldi	r24, 0xC6	; 198
    b180:	94 e1       	ldi	r25, 0x14	; 20
    b182:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    b186:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b18a:	88 23       	and	r24, r24
    b18c:	89 f0       	breq	.+34     	; 0xb1b0 <_Z20Schedules_Monitoringv+0x85c>
											{
												if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b18e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b192:	81 30       	cpi	r24, 0x01	; 1
    b194:	39 f4       	brne	.+14     	; 0xb1a4 <_Z20Schedules_Monitoringv+0x850>
    b196:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b19a:	81 30       	cpi	r24, 0x01	; 1
    b19c:	19 f4       	brne	.+6      	; 0xb1a4 <_Z20Schedules_Monitoringv+0x850>
												{
													_sSchedules.Scheduler_Retry_Timer = 4*60;
    b19e:	80 ef       	ldi	r24, 0xF0	; 240
    b1a0:	90 e0       	ldi	r25, 0x00	; 0
    b1a2:	02 c0       	rjmp	.+4      	; 0xb1a8 <_Z20Schedules_Monitoringv+0x854>
												}
												else
												{
													_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b1a4:	88 e5       	ldi	r24, 0x58	; 88
    b1a6:	92 e0       	ldi	r25, 0x02	; 2
    b1a8:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b1ac:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1b0:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b1b4:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b1b8:	83 e0       	ldi	r24, 0x03	; 3
    b1ba:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b1be:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b1c2:	83 e0       	ldi	r24, 0x03	; 3
    b1c4:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b1c8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1cc:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    b1d0:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b1d4:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    b1d8:	80 91 ab 14 	lds	r24, 0x14AB	; 0x8014ab <_sRuble_Parameters+0xfd>
    b1dc:	81 11       	cpse	r24, r1
    b1de:	55 c3       	rjmp	.+1706   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b1e0:	0e 94 d4 c1 	call	0x183a8	; 0x183a8 <_Z15Stop_Irrigationv>
    b1e4:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b1e8:	81 11       	cpse	r24, r1
    b1ea:	05 c0       	rjmp	.+10     	; 0xb1f6 <_Z20Schedules_Monitoringv+0x8a2>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1ec:	91 30       	cpi	r25, 0x01	; 1
    b1ee:	79 f4       	brne	.+30     	; 0xb20e <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    b1f0:	69 e2       	ldi	r22, 0x29	; 41
    b1f2:	75 e1       	ldi	r23, 0x15	; 21
    b1f4:	04 c0       	rjmp	.+8      	; 0xb1fe <_Z20Schedules_Monitoringv+0x8aa>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1f6:	91 30       	cpi	r25, 0x01	; 1
    b1f8:	51 f4       	brne	.+20     	; 0xb20e <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    b1fa:	60 e0       	ldi	r22, 0x00	; 0
    b1fc:	75 e1       	ldi	r23, 0x15	; 21
    b1fe:	86 ec       	ldi	r24, 0xC6	; 198
    b200:	94 e1       	ldi	r25, 0x14	; 20
    b202:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b206:	86 ec       	ldi	r24, 0xC6	; 198
    b208:	94 e1       	ldi	r25, 0x14	; 20
    b20a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b20e:	88 e5       	ldi	r24, 0x58	; 88
    b210:	92 e0       	ldi	r25, 0x02	; 2
    b212:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b216:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b21a:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b21e:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b222:	83 e0       	ldi	r24, 0x03	; 3
    b224:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b228:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b22c:	83 e0       	ldi	r24, 0x03	; 3
    b22e:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b232:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b236:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    b23a:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b23e:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
    b242:	23 c3       	rjmp	.+1606   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b244:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b248:	f0 e0       	ldi	r31, 0x00	; 0
    b24a:	e7 59       	subi	r30, 0x97	; 151
    b24c:	f6 4f       	sbci	r31, 0xF6	; 246
    b24e:	80 81       	ld	r24, Z
    b250:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    b254:	0e 94 90 c5 	call	0x18b20	; 0x18b20 <_Z16Start_Irrigationv>
    b258:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b25c:	81 11       	cpse	r24, r1
    b25e:	22 c0       	rjmp	.+68     	; 0xb2a4 <_Z20Schedules_Monitoringv+0x950>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b260:	91 30       	cpi	r25, 0x01	; 1
    b262:	51 f4       	brne	.+20     	; 0xb278 <_Z20Schedules_Monitoringv+0x924>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    b264:	6a ed       	ldi	r22, 0xDA	; 218
    b266:	74 e1       	ldi	r23, 0x14	; 20
    b268:	86 ec       	ldi	r24, 0xC6	; 198
    b26a:	94 e1       	ldi	r25, 0x14	; 20
    b26c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b270:	86 ec       	ldi	r24, 0xC6	; 198
    b272:	94 e1       	ldi	r25, 0x14	; 20
    b274:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b278:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    b27c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b280:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b284:	81 30       	cpi	r24, 0x01	; 1
    b286:	39 f4       	brne	.+14     	; 0xb296 <_Z20Schedules_Monitoringv+0x942>
    b288:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b28c:	81 30       	cpi	r24, 0x01	; 1
    b28e:	19 f4       	brne	.+6      	; 0xb296 <_Z20Schedules_Monitoringv+0x942>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    b290:	80 ef       	ldi	r24, 0xF0	; 240
    b292:	90 e0       	ldi	r25, 0x00	; 0
    b294:	02 c0       	rjmp	.+4      	; 0xb29a <_Z20Schedules_Monitoringv+0x946>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b296:	88 e5       	ldi	r24, 0x58	; 88
    b298:	92 e0       	ldi	r25, 0x02	; 2
    b29a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b29e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    b2a2:	fa cc       	rjmp	.-1548   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    b2a4:	10 93 1b 09 	sts	0x091B, r17	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2a8:	91 30       	cpi	r25, 0x01	; 1
    b2aa:	51 f4       	brne	.+20     	; 0xb2c0 <_Z20Schedules_Monitoringv+0x96c>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    b2ac:	6f ec       	ldi	r22, 0xCF	; 207
    b2ae:	74 e1       	ldi	r23, 0x14	; 20
    b2b0:	86 ec       	ldi	r24, 0xC6	; 198
    b2b2:	94 e1       	ldi	r25, 0x14	; 20
    b2b4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b2b8:	86 ec       	ldi	r24, 0xC6	; 198
    b2ba:	94 e1       	ldi	r25, 0x14	; 20
    b2bc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    b2c0:	81 e0       	ldi	r24, 0x01	; 1
    b2c2:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    b2c6:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b2ca:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b2ce:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b2d2:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b2d6:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    b2da:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b2de:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b2e2:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b2e6:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b2ea:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b2ee:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b2f2:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b2f6:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b2fa:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b2fe:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b302:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b306:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b30a:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b30e:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b312:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b316:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
										}
																					
										Set_Trigger_Time();								
    b31a:	0e 94 2c 4a 	call	0x9458	; 0x9458 <_Z16Set_Trigger_Timev>
    b31e:	bc cc       	rjmp	.-1672   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b320:	81 30       	cpi	r24, 0x01	; 1
    b322:	51 f4       	brne	.+20     	; 0xb338 <_Z20Schedules_Monitoringv+0x9e4>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    b324:	66 ef       	ldi	r22, 0xF6	; 246
    b326:	75 e1       	ldi	r23, 0x15	; 21
    b328:	86 ec       	ldi	r24, 0xC6	; 198
    b32a:	94 e1       	ldi	r25, 0x14	; 20
    b32c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b330:	86 ec       	ldi	r24, 0xC6	; 198
    b332:	94 e1       	ldi	r25, 0x14	; 20
    b334:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b338:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b33c:	81 30       	cpi	r24, 0x01	; 1
    b33e:	51 f4       	brne	.+20     	; 0xb354 <_Z20Schedules_Monitoringv+0xa00>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    b340:	60 ec       	ldi	r22, 0xC0	; 192
    b342:	75 e1       	ldi	r23, 0x15	; 21
    b344:	86 ec       	ldi	r24, 0xC6	; 198
    b346:	94 e1       	ldi	r25, 0x14	; 20
    b348:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b34c:	86 ec       	ldi	r24, 0xC6	; 198
    b34e:	94 e1       	ldi	r25, 0x14	; 20
    b350:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    b354:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    b358:	81 e0       	ldi	r24, 0x01	; 1
    b35a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    b35e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    b362:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    b366:	81 30       	cpi	r24, 0x01	; 1
    b368:	81 f4       	brne	.+32     	; 0xb38a <_Z20Schedules_Monitoringv+0xa36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b36a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b36e:	81 30       	cpi	r24, 0x01	; 1
    b370:	51 f4       	brne	.+20     	; 0xb386 <_Z20Schedules_Monitoringv+0xa32>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    b372:	64 eb       	ldi	r22, 0xB4	; 180
    b374:	75 e1       	ldi	r23, 0x15	; 21
    b376:	86 ec       	ldi	r24, 0xC6	; 198
    b378:	94 e1       	ldi	r25, 0x14	; 20
    b37a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b37e:	86 ec       	ldi	r24, 0xC6	; 198
    b380:	94 e1       	ldi	r25, 0x14	; 20
    b382:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    b386:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    b38a:	82 e0       	ldi	r24, 0x02	; 2
    b38c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    b390:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b394:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    b398:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    b39c:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
    b3a0:	cf ce       	rjmp	.-610    	; 0xb140 <_Z20Schedules_Monitoringv+0x7ec>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    b3a2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b3a6:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    b3aa:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b3ae:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b3b6:	81 30       	cpi	r24, 0x01	; 1
    b3b8:	91 f4       	brne	.+36     	; 0xb3de <_Z20Schedules_Monitoringv+0xa8a>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    b3ba:	62 e8       	ldi	r22, 0x82	; 130
    b3bc:	75 e1       	ldi	r23, 0x15	; 21
    b3be:	86 ec       	ldi	r24, 0xC6	; 198
    b3c0:	94 e1       	ldi	r25, 0x14	; 20
    b3c2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    b3c6:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b3ca:	4a e0       	ldi	r20, 0x0A	; 10
    b3cc:	50 e0       	ldi	r21, 0x00	; 0
    b3ce:	86 ec       	ldi	r24, 0xC6	; 198
    b3d0:	94 e1       	ldi	r25, 0x14	; 20
    b3d2:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    b3d6:	86 ec       	ldi	r24, 0xC6	; 198
    b3d8:	94 e1       	ldi	r25, 0x14	; 20
    b3da:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    b3de:	81 e0       	ldi	r24, 0x01	; 1
    b3e0:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    b3e4:	81 e0       	ldi	r24, 0x01	; 1
    b3e6:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    b3e8:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    b3ec:	9c 01       	movw	r18, r24
    b3ee:	22 5e       	subi	r18, 0xE2	; 226
    b3f0:	36 4f       	sbci	r19, 0xF6	; 246
    b3f2:	f9 01       	movw	r30, r18
    b3f4:	e5 5a       	subi	r30, 0xA5	; 165
    b3f6:	ff 4f       	sbci	r31, 0xFF	; 255
    b3f8:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    b3fa:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    b3fe:	3f 96       	adiw	r30, 0x0f	; 15
    b400:	40 83       	st	Z, r20
    b402:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    b404:	8e 30       	cpi	r24, 0x0E	; 14
    b406:	91 05       	cpc	r25, r1
    b408:	79 f7       	brne	.-34     	; 0xb3e8 <_Z20Schedules_Monitoringv+0xa94>
    b40a:	9f ce       	rjmp	.-706    	; 0xb14a <_Z20Schedules_Monitoringv+0x7f6>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b40c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b410:	81 30       	cpi	r24, 0x01	; 1
    b412:	51 f4       	brne	.+20     	; 0xb428 <_Z20Schedules_Monitoringv+0xad4>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    b414:	69 e5       	ldi	r22, 0x59	; 89
    b416:	74 e1       	ldi	r23, 0x14	; 20
    b418:	86 ec       	ldi	r24, 0xC6	; 198
    b41a:	94 e1       	ldi	r25, 0x14	; 20
    b41c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b420:	86 ec       	ldi	r24, 0xC6	; 198
    b422:	94 e1       	ldi	r25, 0x14	; 20
    b424:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    b428:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
    b42c:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
    b430:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
    b434:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
    b438:	dd cc       	rjmp	.-1606   	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    b43a:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b43e:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b442:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b446:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b44a:	89 2b       	or	r24, r25
    b44c:	8a 2b       	or	r24, r26
    b44e:	8b 2b       	or	r24, r27
    b450:	09 f4       	brne	.+2      	; 0xb454 <_Z20Schedules_Monitoringv+0xb00>
    b452:	d0 cc       	rjmp	.-1632   	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    b454:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b458:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b45c:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b460:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b464:	8c 32       	cpi	r24, 0x2C	; 44
    b466:	91 40       	sbci	r25, 0x01	; 1
    b468:	a1 05       	cpc	r26, r1
    b46a:	b1 05       	cpc	r27, r1
    b46c:	08 f0       	brcs	.+2      	; 0xb470 <_Z20Schedules_Monitoringv+0xb1c>
    b46e:	ae cc       	rjmp	.-1700   	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    b470:	87 e1       	ldi	r24, 0x17	; 23
    b472:	90 e5       	ldi	r25, 0x50	; 80
    b474:	a1 e0       	ldi	r26, 0x01	; 1
    b476:	b0 e0       	ldi	r27, 0x00	; 0
    b478:	b5 cc       	rjmp	.-1686   	; 0xade4 <_Z20Schedules_Monitoringv+0x490>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b47a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b47e:	81 30       	cpi	r24, 0x01	; 1
    b480:	51 f4       	brne	.+20     	; 0xb496 <_Z20Schedules_Monitoringv+0xb42>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b482:	62 ef       	ldi	r22, 0xF2	; 242
    b484:	73 e1       	ldi	r23, 0x13	; 19
    b486:	86 ec       	ldi	r24, 0xC6	; 198
    b488:	94 e1       	ldi	r25, 0x14	; 20
    b48a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b48e:	86 ec       	ldi	r24, 0xC6	; 198
    b490:	94 e1       	ldi	r25, 0x14	; 20
    b492:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b496:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b49a:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b49e:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b4a2:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b4a6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b4aa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b4ae:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b4b2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b4b6:	84 17       	cp	r24, r20
    b4b8:	95 07       	cpc	r25, r21
    b4ba:	a6 07       	cpc	r26, r22
    b4bc:	b7 07       	cpc	r27, r23
    b4be:	08 f4       	brcc	.+2      	; 0xb4c2 <_Z20Schedules_Monitoringv+0xb6e>
    b4c0:	e4 c1       	rjmp	.+968    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b4c2:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b4c6:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b4ca:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b4ce:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b4d2:	84 17       	cp	r24, r20
    b4d4:	95 07       	cpc	r25, r21
    b4d6:	a6 07       	cpc	r26, r22
    b4d8:	b7 07       	cpc	r27, r23
    b4da:	08 f0       	brcs	.+2      	; 0xb4de <_Z20Schedules_Monitoringv+0xb8a>
    b4dc:	d6 c1       	rjmp	.+940    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b4e2:	81 30       	cpi	r24, 0x01	; 1
    b4e4:	51 f4       	brne	.+20     	; 0xb4fa <_Z20Schedules_Monitoringv+0xba6>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b4e6:	66 ee       	ldi	r22, 0xE6	; 230
    b4e8:	73 e1       	ldi	r23, 0x13	; 19
    b4ea:	86 ec       	ldi	r24, 0xC6	; 198
    b4ec:	94 e1       	ldi	r25, 0x14	; 20
    b4ee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b4f2:	86 ec       	ldi	r24, 0xC6	; 198
    b4f4:	94 e1       	ldi	r25, 0x14	; 20
    b4f6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b4fa:	6c 2f       	mov	r22, r28
    b4fc:	81 e0       	ldi	r24, 0x01	; 1
    b4fe:	0e 94 4d 47 	call	0x8e9a	; 0x8e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b502:	ca cb       	rjmp	.-2156   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b504:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b508:	81 30       	cpi	r24, 0x01	; 1
    b50a:	51 f4       	brne	.+20     	; 0xb520 <_Z20Schedules_Monitoringv+0xbcc>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b50c:	6a ed       	ldi	r22, 0xDA	; 218
    b50e:	73 e1       	ldi	r23, 0x13	; 19
    b510:	86 ec       	ldi	r24, 0xC6	; 198
    b512:	94 e1       	ldi	r25, 0x14	; 20
    b514:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b518:	86 ec       	ldi	r24, 0xC6	; 198
    b51a:	94 e1       	ldi	r25, 0x14	; 20
    b51c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b520:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b524:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b528:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b52c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b530:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b534:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b538:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b53c:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b540:	84 17       	cp	r24, r20
    b542:	95 07       	cpc	r25, r21
    b544:	a6 07       	cpc	r26, r22
    b546:	b7 07       	cpc	r27, r23
    b548:	68 f0       	brcs	.+26     	; 0xb564 <_Z20Schedules_Monitoringv+0xc10>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b54a:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b54e:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b552:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b556:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b55a:	48 17       	cp	r20, r24
    b55c:	59 07       	cpc	r21, r25
    b55e:	6a 07       	cpc	r22, r26
    b560:	7b 07       	cpc	r23, r27
    b562:	e8 f0       	brcs	.+58     	; 0xb59e <_Z20Schedules_Monitoringv+0xc4a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b564:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b568:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b56c:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b570:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b574:	48 17       	cp	r20, r24
    b576:	59 07       	cpc	r21, r25
    b578:	6a 07       	cpc	r22, r26
    b57a:	7b 07       	cpc	r23, r27
    b57c:	08 f4       	brcc	.+2      	; 0xb580 <_Z20Schedules_Monitoringv+0xc2c>
    b57e:	85 c1       	rjmp	.+778    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b580:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b584:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b588:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b58c:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b590:	84 17       	cp	r24, r20
    b592:	95 07       	cpc	r25, r21
    b594:	a6 07       	cpc	r26, r22
    b596:	b7 07       	cpc	r27, r23
    b598:	08 f4       	brcc	.+2      	; 0xb59c <_Z20Schedules_Monitoringv+0xc48>
    b59a:	78 c0       	rjmp	.+240    	; 0xb68c <_Z20Schedules_Monitoringv+0xd38>
    b59c:	76 c1       	rjmp	.+748    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b59e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5a2:	81 30       	cpi	r24, 0x01	; 1
    b5a4:	51 f4       	brne	.+20     	; 0xb5ba <_Z20Schedules_Monitoringv+0xc66>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b5a6:	6e ec       	ldi	r22, 0xCE	; 206
    b5a8:	73 e1       	ldi	r23, 0x13	; 19
    b5aa:	86 ec       	ldi	r24, 0xC6	; 198
    b5ac:	94 e1       	ldi	r25, 0x14	; 20
    b5ae:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b5b2:	86 ec       	ldi	r24, 0xC6	; 198
    b5b4:	94 e1       	ldi	r25, 0x14	; 20
    b5b6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b5ba:	6c 2f       	mov	r22, r28
    b5bc:	65 c0       	rjmp	.+202    	; 0xb688 <_Z20Schedules_Monitoringv+0xd34>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b5be:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5c2:	81 30       	cpi	r24, 0x01	; 1
    b5c4:	51 f4       	brne	.+20     	; 0xb5da <_Z20Schedules_Monitoringv+0xc86>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b5c6:	66 eb       	ldi	r22, 0xB6	; 182
    b5c8:	73 e1       	ldi	r23, 0x13	; 19
    b5ca:	86 ec       	ldi	r24, 0xC6	; 198
    b5cc:	94 e1       	ldi	r25, 0x14	; 20
    b5ce:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b5d2:	86 ec       	ldi	r24, 0xC6	; 198
    b5d4:	94 e1       	ldi	r25, 0x14	; 20
    b5d6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b5da:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    b5de:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    b5e2:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    b5e6:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    b5ea:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b5ee:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b5f2:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b5f6:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b5fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5fe:	04 17       	cp	r16, r20
    b600:	15 07       	cpc	r17, r21
    b602:	26 07       	cpc	r18, r22
    b604:	37 07       	cpc	r19, r23
    b606:	08 f4       	brcc	.+2      	; 0xb60a <_Z20Schedules_Monitoringv+0xcb6>
    b608:	57 c0       	rjmp	.+174    	; 0xb6b8 <_Z20Schedules_Monitoringv+0xd64>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b60a:	81 30       	cpi	r24, 0x01	; 1
    b60c:	51 f4       	brne	.+20     	; 0xb622 <_Z20Schedules_Monitoringv+0xcce>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b60e:	6a ea       	ldi	r22, 0xAA	; 170
    b610:	73 e1       	ldi	r23, 0x13	; 19
    b612:	86 ec       	ldi	r24, 0xC6	; 198
    b614:	94 e1       	ldi	r25, 0x14	; 20
    b616:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b61a:	86 ec       	ldi	r24, 0xC6	; 198
    b61c:	94 e1       	ldi	r25, 0x14	; 20
    b61e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b622:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b626:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b62a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b62e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b632:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b636:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b63a:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b63e:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b642:	84 17       	cp	r24, r20
    b644:	95 07       	cpc	r25, r21
    b646:	a6 07       	cpc	r26, r22
    b648:	b7 07       	cpc	r27, r23
    b64a:	08 f4       	brcc	.+2      	; 0xb64e <_Z20Schedules_Monitoringv+0xcfa>
    b64c:	65 c0       	rjmp	.+202    	; 0xb718 <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b64e:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b652:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b656:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b65a:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b65e:	48 17       	cp	r20, r24
    b660:	59 07       	cpc	r21, r25
    b662:	6a 07       	cpc	r22, r26
    b664:	7b 07       	cpc	r23, r27
    b666:	08 f0       	brcs	.+2      	; 0xb66a <_Z20Schedules_Monitoringv+0xd16>
    b668:	57 c0       	rjmp	.+174    	; 0xb718 <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b66a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b66e:	81 30       	cpi	r24, 0x01	; 1
    b670:	51 f4       	brne	.+20     	; 0xb686 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b672:	6e e9       	ldi	r22, 0x9E	; 158
    b674:	73 e1       	ldi	r23, 0x13	; 19
    b676:	86 ec       	ldi	r24, 0xC6	; 198
    b678:	94 e1       	ldi	r25, 0x14	; 20
    b67a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b67e:	86 ec       	ldi	r24, 0xC6	; 198
    b680:	94 e1       	ldi	r25, 0x14	; 20
    b682:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b686:	60 e0       	ldi	r22, 0x00	; 0
    b688:	81 e0       	ldi	r24, 0x01	; 1
    b68a:	10 c0       	rjmp	.+32     	; 0xb6ac <_Z20Schedules_Monitoringv+0xd58>
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b68c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b690:	81 30       	cpi	r24, 0x01	; 1
    b692:	51 f4       	brne	.+20     	; 0xb6a8 <_Z20Schedules_Monitoringv+0xd54>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b694:	62 ec       	ldi	r22, 0xC2	; 194
    b696:	73 e1       	ldi	r23, 0x13	; 19
    b698:	86 ec       	ldi	r24, 0xC6	; 198
    b69a:	94 e1       	ldi	r25, 0x14	; 20
    b69c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b6a0:	86 ec       	ldi	r24, 0xC6	; 198
    b6a2:	94 e1       	ldi	r25, 0x14	; 20
    b6a4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6a8:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6aa:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b6ac:	df 91       	pop	r29
    b6ae:	cf 91       	pop	r28
    b6b0:	1f 91       	pop	r17
    b6b2:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6b4:	0c 94 4d 47 	jmp	0x8e9a	; 0x8e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6b8:	81 30       	cpi	r24, 0x01	; 1
    b6ba:	51 f4       	brne	.+20     	; 0xb6d0 <_Z20Schedules_Monitoringv+0xd7c>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b6bc:	66 e8       	ldi	r22, 0x86	; 134
    b6be:	73 e1       	ldi	r23, 0x13	; 19
    b6c0:	86 ec       	ldi	r24, 0xC6	; 198
    b6c2:	94 e1       	ldi	r25, 0x14	; 20
    b6c4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b6c8:	86 ec       	ldi	r24, 0xC6	; 198
    b6ca:	94 e1       	ldi	r25, 0x14	; 20
    b6cc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b6d0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b6d4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b6d8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b6dc:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b6e0:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b6e4:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b6e8:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b6ec:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b6f0:	84 17       	cp	r24, r20
    b6f2:	95 07       	cpc	r25, r21
    b6f4:	a6 07       	cpc	r26, r22
    b6f6:	b7 07       	cpc	r27, r23
    b6f8:	08 f4       	brcc	.+2      	; 0xb6fc <_Z20Schedules_Monitoringv+0xda8>
    b6fa:	42 c0       	rjmp	.+132    	; 0xb780 <_Z20Schedules_Monitoringv+0xe2c>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b6fc:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b700:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b704:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b708:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b70c:	48 17       	cp	r20, r24
    b70e:	59 07       	cpc	r21, r25
    b710:	6a 07       	cpc	r22, r26
    b712:	7b 07       	cpc	r23, r27
    b714:	68 f1       	brcs	.+90     	; 0xb770 <_Z20Schedules_Monitoringv+0xe1c>
    b716:	34 c0       	rjmp	.+104    	; 0xb780 <_Z20Schedules_Monitoringv+0xe2c>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b718:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b71c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b720:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b724:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b728:	48 17       	cp	r20, r24
    b72a:	59 07       	cpc	r21, r25
    b72c:	6a 07       	cpc	r22, r26
    b72e:	7b 07       	cpc	r23, r27
    b730:	08 f4       	brcc	.+2      	; 0xb734 <_Z20Schedules_Monitoringv+0xde0>
    b732:	ab c0       	rjmp	.+342    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b734:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b738:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b73c:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b740:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b744:	84 17       	cp	r24, r20
    b746:	95 07       	cpc	r25, r21
    b748:	a6 07       	cpc	r26, r22
    b74a:	b7 07       	cpc	r27, r23
    b74c:	08 f0       	brcs	.+2      	; 0xb750 <_Z20Schedules_Monitoringv+0xdfc>
    b74e:	9d c0       	rjmp	.+314    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b750:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b754:	81 30       	cpi	r24, 0x01	; 1
    b756:	51 f4       	brne	.+20     	; 0xb76c <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b758:	62 e9       	ldi	r22, 0x92	; 146
    b75a:	73 e1       	ldi	r23, 0x13	; 19
    b75c:	86 ec       	ldi	r24, 0xC6	; 198
    b75e:	94 e1       	ldi	r25, 0x14	; 20
    b760:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b764:	86 ec       	ldi	r24, 0xC6	; 198
    b766:	94 e1       	ldi	r25, 0x14	; 20
    b768:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b76c:	60 e0       	ldi	r22, 0x00	; 0
    b76e:	9d cf       	rjmp	.-198    	; 0xb6aa <_Z20Schedules_Monitoringv+0xd56>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b770:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b774:	81 30       	cpi	r24, 0x01	; 1
    b776:	09 f0       	breq	.+2      	; 0xb77a <_Z20Schedules_Monitoringv+0xe26>
    b778:	86 cf       	rjmp	.-244    	; 0xb686 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b77a:	6a e7       	ldi	r22, 0x7A	; 122
    b77c:	73 e1       	ldi	r23, 0x13	; 19
    b77e:	7b cf       	rjmp	.-266    	; 0xb676 <_Z20Schedules_Monitoringv+0xd22>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b780:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b784:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b788:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b78c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b790:	48 17       	cp	r20, r24
    b792:	59 07       	cpc	r21, r25
    b794:	6a 07       	cpc	r22, r26
    b796:	7b 07       	cpc	r23, r27
    b798:	08 f4       	brcc	.+2      	; 0xb79c <_Z20Schedules_Monitoringv+0xe48>
    b79a:	77 c0       	rjmp	.+238    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b79c:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b7a0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b7a4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b7a8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b7ac:	84 17       	cp	r24, r20
    b7ae:	95 07       	cpc	r25, r21
    b7b0:	a6 07       	cpc	r26, r22
    b7b2:	b7 07       	cpc	r27, r23
    b7b4:	08 f0       	brcs	.+2      	; 0xb7b8 <_Z20Schedules_Monitoringv+0xe64>
    b7b6:	69 c0       	rjmp	.+210    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b7bc:	81 30       	cpi	r24, 0x01	; 1
    b7be:	b1 f6       	brne	.-84     	; 0xb76c <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b7c0:	6e e6       	ldi	r22, 0x6E	; 110
    b7c2:	73 e1       	ldi	r23, 0x13	; 19
    b7c4:	cb cf       	rjmp	.-106    	; 0xb75c <_Z20Schedules_Monitoringv+0xe08>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b7ca:	81 30       	cpi	r24, 0x01	; 1
    b7cc:	51 f4       	brne	.+20     	; 0xb7e2 <_Z20Schedules_Monitoringv+0xe8e>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b7ce:	62 e3       	ldi	r22, 0x32	; 50
    b7d0:	73 e1       	ldi	r23, 0x13	; 19
    b7d2:	86 ec       	ldi	r24, 0xC6	; 198
    b7d4:	94 e1       	ldi	r25, 0x14	; 20
    b7d6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b7da:	86 ec       	ldi	r24, 0xC6	; 198
    b7dc:	94 e1       	ldi	r25, 0x14	; 20
    b7de:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b7e2:	83 e0       	ldi	r24, 0x03	; 3
    b7e4:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b7e8:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b7ec:	83 e0       	ldi	r24, 0x03	; 3
    b7ee:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
    b7f2:	10 c9       	rjmp	.-3552   	; 0xaa14 <_Z20Schedules_Monitoringv+0xc0>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b7f4:	88 23       	and	r24, r24
    b7f6:	09 f4       	brne	.+2      	; 0xb7fa <_Z20Schedules_Monitoringv+0xea6>
    b7f8:	45 c9       	rjmp	.-3446   	; 0xaa84 <_Z20Schedules_Monitoringv+0x130>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b7fa:	60 e0       	ldi	r22, 0x00	; 0
    b7fc:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b800:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    b804:	3f c9       	rjmp	.-3458   	; 0xaa84 <_Z20Schedules_Monitoringv+0x130>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b806:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b80a:	88 23       	and	r24, r24
    b80c:	b1 f1       	breq	.+108    	; 0xb87a <_Z20Schedules_Monitoringv+0xf26>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b80e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b812:	81 30       	cpi	r24, 0x01	; 1
    b814:	51 f4       	brne	.+20     	; 0xb82a <_Z20Schedules_Monitoringv+0xed6>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b816:	6e e3       	ldi	r22, 0x3E	; 62
    b818:	73 e1       	ldi	r23, 0x13	; 19
    b81a:	86 ec       	ldi	r24, 0xC6	; 198
    b81c:	94 e1       	ldi	r25, 0x14	; 20
    b81e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b822:	86 ec       	ldi	r24, 0xC6	; 198
    b824:	94 e1       	ldi	r25, 0x14	; 20
    b826:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b82a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b82e:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b832:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b836:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b83a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b83e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b842:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b846:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b84a:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b84e:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b852:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b856:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b85a:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b85e:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b862:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b866:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b86a:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b86e:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b872:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b876:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b87a:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    b87e:	81 30       	cpi	r24, 0x01	; 1
    b880:	09 f0       	breq	.+2      	; 0xb884 <_Z20Schedules_Monitoringv+0xf30>
    b882:	bc c8       	rjmp	.-3720   	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
						{
							Edited_In_Schedule();
    b884:	0e 94 74 40 	call	0x80e8	; 0x80e8 <_Z18Edited_In_Schedulev>
    b888:	b9 c8       	rjmp	.-3726   	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b88a:	df 91       	pop	r29
    b88c:	cf 91       	pop	r28
    b88e:	1f 91       	pop	r17
    b890:	0f 91       	pop	r16
    b892:	08 95       	ret

0000b894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b894:	cf 93       	push	r28
    b896:	df 93       	push	r29
    b898:	1f 92       	push	r1
    b89a:	1f 92       	push	r1
    b89c:	cd b7       	in	r28, 0x3d	; 61
    b89e:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b8a0:	60 91 7c 14 	lds	r22, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    b8a4:	8d ea       	ldi	r24, 0xAD	; 173
    b8a6:	9c e0       	ldi	r25, 0x0C	; 12
    b8a8:	9a 83       	std	Y+2, r25	; 0x02
    b8aa:	89 83       	std	Y+1, r24	; 0x01
    b8ac:	ce 01       	movw	r24, r28
    b8ae:	01 96       	adiw	r24, 0x01	; 1
    b8b0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
        return t;
    }
    b8b4:	8c e7       	ldi	r24, 0x7C	; 124
    b8b6:	94 e1       	ldi	r25, 0x14	; 20
    b8b8:	0f 90       	pop	r0
    b8ba:	0f 90       	pop	r0
    b8bc:	df 91       	pop	r29
    b8be:	cf 91       	pop	r28
    b8c0:	08 95       	ret

0000b8c2 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b8c2:	cf 92       	push	r12
    b8c4:	df 92       	push	r13
    b8c6:	ef 92       	push	r14
    b8c8:	ff 92       	push	r15
    b8ca:	0f 93       	push	r16
    b8cc:	1f 93       	push	r17
    b8ce:	cf 93       	push	r28
    b8d0:	df 93       	push	r29
    b8d2:	1f 92       	push	r1
    b8d4:	1f 92       	push	r1
    b8d6:	cd b7       	in	r28, 0x3d	; 61
    b8d8:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b8da:	94 e1       	ldi	r25, 0x14	; 20
    b8dc:	89 9f       	mul	r24, r25
    b8de:	90 01       	movw	r18, r0
    b8e0:	11 24       	eor	r1, r1
    b8e2:	69 01       	movw	r12, r18
    b8e4:	e6 e3       	ldi	r30, 0x36	; 54
    b8e6:	ce 1a       	sub	r12, r30
    b8e8:	ec ef       	ldi	r30, 0xFC	; 252
    b8ea:	de 0a       	sbc	r13, r30
    b8ec:	fd e0       	ldi	r31, 0x0D	; 13
    b8ee:	8f 9f       	mul	r24, r31
    b8f0:	80 01       	movw	r16, r0
    b8f2:	11 24       	eor	r1, r1
    b8f4:	0b 5e       	subi	r16, 0xEB	; 235
    b8f6:	13 4f       	sbci	r17, 0xF3	; 243
    b8f8:	79 01       	movw	r14, r18
    b8fa:	89 e2       	ldi	r24, 0x29	; 41
    b8fc:	e8 1a       	sub	r14, r24
    b8fe:	8c ef       	ldi	r24, 0xFC	; 252
    b900:	f8 0a       	sbc	r15, r24
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b902:	f8 01       	movw	r30, r16
    b904:	61 91       	ld	r22, Z+
    b906:	8f 01       	movw	r16, r30
    b908:	da 82       	std	Y+2, r13	; 0x02
    b90a:	c9 82       	std	Y+1, r12	; 0x01
    b90c:	ce 01       	movw	r24, r28
    b90e:	01 96       	adiw	r24, 0x01	; 1
    b910:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    b914:	ff ef       	ldi	r31, 0xFF	; 255
    b916:	cf 1a       	sub	r12, r31
    b918:	df 0a       	sbc	r13, r31
    b91a:	ce 14       	cp	r12, r14
    b91c:	df 04       	cpc	r13, r15
    b91e:	89 f7       	brne	.-30     	; 0xb902 <_Z16Euro_Data_EEPROMh+0x40>
	return;
}
    b920:	0f 90       	pop	r0
    b922:	0f 90       	pop	r0
    b924:	df 91       	pop	r29
    b926:	cf 91       	pop	r28
    b928:	1f 91       	pop	r17
    b92a:	0f 91       	pop	r16
    b92c:	ff 90       	pop	r15
    b92e:	ef 90       	pop	r14
    b930:	df 90       	pop	r13
    b932:	cf 90       	pop	r12
    b934:	08 95       	ret

0000b936 <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b936:	cf 92       	push	r12
    b938:	df 92       	push	r13
    b93a:	ef 92       	push	r14
    b93c:	ff 92       	push	r15
    b93e:	0f 93       	push	r16
    b940:	1f 93       	push	r17
    b942:	cf 93       	push	r28
    b944:	df 93       	push	r29
    b946:	1f 92       	push	r1
    b948:	1f 92       	push	r1
    b94a:	cd b7       	in	r28, 0x3d	; 61
    b94c:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b94e:	94 e1       	ldi	r25, 0x14	; 20
    b950:	89 9f       	mul	r24, r25
    b952:	90 01       	movw	r18, r0
    b954:	11 24       	eor	r1, r1
    b956:	69 01       	movw	r12, r18
    b958:	e2 e5       	ldi	r30, 0x52	; 82
    b95a:	ce 1a       	sub	r12, r30
    b95c:	e3 ef       	ldi	r30, 0xF3	; 243
    b95e:	de 0a       	sbc	r13, r30
    b960:	fb e0       	ldi	r31, 0x0B	; 11
    b962:	8f 9f       	mul	r24, r31
    b964:	80 01       	movw	r16, r0
    b966:	11 24       	eor	r1, r1
    b968:	0c 50       	subi	r16, 0x0C	; 12
    b96a:	14 4f       	sbci	r17, 0xF4	; 244
    b96c:	79 01       	movw	r14, r18
    b96e:	87 e4       	ldi	r24, 0x47	; 71
    b970:	e8 1a       	sub	r14, r24
    b972:	83 ef       	ldi	r24, 0xF3	; 243
    b974:	f8 0a       	sbc	r15, r24
    b976:	f8 01       	movw	r30, r16
    b978:	61 91       	ld	r22, Z+
    b97a:	8f 01       	movw	r16, r30
    b97c:	da 82       	std	Y+2, r13	; 0x02
    b97e:	c9 82       	std	Y+1, r12	; 0x01
    b980:	ce 01       	movw	r24, r28
    b982:	01 96       	adiw	r24, 0x01	; 1
    b984:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    b988:	ff ef       	ldi	r31, 0xFF	; 255
    b98a:	cf 1a       	sub	r12, r31
    b98c:	df 0a       	sbc	r13, r31
    b98e:	ce 14       	cp	r12, r14
    b990:	df 04       	cpc	r13, r15
    b992:	89 f7       	brne	.-30     	; 0xb976 <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b994:	0f 90       	pop	r0
    b996:	0f 90       	pop	r0
    b998:	df 91       	pop	r29
    b99a:	cf 91       	pop	r28
    b99c:	1f 91       	pop	r17
    b99e:	0f 91       	pop	r16
    b9a0:	ff 90       	pop	r15
    b9a2:	ef 90       	pop	r14
    b9a4:	df 90       	pop	r13
    b9a6:	cf 90       	pop	r12
    b9a8:	08 95       	ret

0000b9aa <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b9aa:	ef 92       	push	r14
    b9ac:	ff 92       	push	r15
    b9ae:	0f 93       	push	r16
    b9b0:	1f 93       	push	r17
    b9b2:	cf 93       	push	r28
    b9b4:	df 93       	push	r29
    b9b6:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b9b8:	81 e0       	ldi	r24, 0x01	; 1
    b9ba:	80 93 f4 0b 	sts	0x0BF4, r24	; 0x800bf4 <_sWireless_Pump_Param>
    b9be:	c0 e0       	ldi	r28, 0x00	; 0
    b9c0:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b9c2:	8d e0       	ldi	r24, 0x0D	; 13
    b9c4:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b9c6:	20 e0       	ldi	r18, 0x00	; 0
    b9c8:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b9ca:	8c 9f       	mul	r24, r28
    b9cc:	b0 01       	movw	r22, r0
    b9ce:	8d 9f       	mul	r24, r29
    b9d0:	70 0d       	add	r23, r0
    b9d2:	11 24       	eor	r1, r1
    b9d4:	6b 5e       	subi	r22, 0xEB	; 235
    b9d6:	73 4f       	sbci	r23, 0xF3	; 243
    b9d8:	49 2f       	mov	r20, r25
    b9da:	50 e0       	ldi	r21, 0x00	; 0
    b9dc:	df 01       	movw	r26, r30
    b9de:	a4 0f       	add	r26, r20
    b9e0:	b5 1f       	adc	r27, r21
    b9e2:	46 0f       	add	r20, r22
    b9e4:	57 1f       	adc	r21, r23
    b9e6:	1c 91       	ld	r17, X
    b9e8:	da 01       	movw	r26, r20
    b9ea:	11 96       	adiw	r26, 0x01	; 1
    b9ec:	3c 91       	ld	r19, X
    b9ee:	13 17       	cp	r17, r19
    b9f0:	11 f0       	breq	.+4      	; 0xb9f6 <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b9f2:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b9f4:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b9f6:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b9f8:	9f 5f       	subi	r25, 0xFF	; 255
    b9fa:	96 30       	cpi	r25, 0x06	; 6
    b9fc:	68 f3       	brcs	.-38     	; 0xb9d8 <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b9fe:	26 30       	cpi	r18, 0x06	; 6
    ba00:	09 f0       	breq	.+2      	; 0xba04 <_Z22Update_Euro_Valve_DataPh+0x5a>
    ba02:	b7 c2       	rjmp	.+1390   	; 0xbf72 <_Z22Update_Euro_Valve_DataPh+0x5c8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba04:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba08:	81 30       	cpi	r24, 0x01	; 1
    ba0a:	51 f4       	brne	.+20     	; 0xba20 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    ba0c:	67 e9       	ldi	r22, 0x97	; 151
    ba0e:	7f e1       	ldi	r23, 0x1F	; 31
    ba10:	86 ec       	ldi	r24, 0xC6	; 198
    ba12:	94 e1       	ldi	r25, 0x14	; 20
    ba14:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    ba18:	86 ec       	ldi	r24, 0xC6	; 198
    ba1a:	94 e1       	ldi	r25, 0x14	; 20
    ba1c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    ba20:	90 91 0f 14 	lds	r25, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    ba24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba28:	91 30       	cpi	r25, 0x01	; 1
    ba2a:	09 f0       	breq	.+2      	; 0xba2e <_Z22Update_Euro_Valve_DataPh+0x84>
    ba2c:	3e c1       	rjmp	.+636    	; 0xbcaa <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba2e:	81 30       	cpi	r24, 0x01	; 1
    ba30:	51 f4       	brne	.+20     	; 0xba46 <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    ba32:	6f e7       	ldi	r22, 0x7F	; 127
    ba34:	7f e1       	ldi	r23, 0x1F	; 31
    ba36:	86 ec       	ldi	r24, 0xC6	; 198
    ba38:	94 e1       	ldi	r25, 0x14	; 20
    ba3a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    ba3e:	86 ec       	ldi	r24, 0xC6	; 198
    ba40:	94 e1       	ldi	r25, 0x14	; 20
    ba42:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    ba46:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    ba4a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba4e:	99 23       	and	r25, r25
    ba50:	19 f0       	breq	.+6      	; 0xba58 <_Z22Update_Euro_Valve_DataPh+0xae>
    ba52:	91 30       	cpi	r25, 0x01	; 1
    ba54:	f1 f0       	breq	.+60     	; 0xba92 <_Z22Update_Euro_Valve_DataPh+0xe8>
    ba56:	64 c0       	rjmp	.+200    	; 0xbb20 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba58:	81 30       	cpi	r24, 0x01	; 1
    ba5a:	51 f4       	brne	.+20     	; 0xba70 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    ba5c:	63 e7       	ldi	r22, 0x73	; 115
    ba5e:	7f e1       	ldi	r23, 0x1F	; 31
    ba60:	86 ec       	ldi	r24, 0xC6	; 198
    ba62:	94 e1       	ldi	r25, 0x14	; 20
    ba64:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    ba68:	86 ec       	ldi	r24, 0xC6	; 198
    ba6a:	94 e1       	ldi	r25, 0x14	; 20
    ba6c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba70:	8d e0       	ldi	r24, 0x0D	; 13
    ba72:	8c 9f       	mul	r24, r28
    ba74:	f0 01       	movw	r30, r0
    ba76:	8d 9f       	mul	r24, r29
    ba78:	f0 0d       	add	r31, r0
    ba7a:	11 24       	eor	r1, r1
    ba7c:	eb 5e       	subi	r30, 0xEB	; 235
    ba7e:	f3 4f       	sbci	r31, 0xF3	; 243
    ba80:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    ba84:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    ba86:	81 e0       	ldi	r24, 0x01	; 1
    ba88:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    ba8a:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    ba8e:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    ba90:	55 c0       	rjmp	.+170    	; 0xbb3c <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba92:	2d e0       	ldi	r18, 0x0D	; 13
    ba94:	2c 9f       	mul	r18, r28
    ba96:	f0 01       	movw	r30, r0
    ba98:	2d 9f       	mul	r18, r29
    ba9a:	f0 0d       	add	r31, r0
    ba9c:	11 24       	eor	r1, r1
    ba9e:	eb 5e       	subi	r30, 0xEB	; 235
    baa0:	f3 4f       	sbci	r31, 0xF3	; 243
    baa2:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    baa4:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    baa6:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    baaa:	91 11       	cpse	r25, r1
    baac:	16 c0       	rjmp	.+44     	; 0xbada <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    baae:	81 30       	cpi	r24, 0x01	; 1
    bab0:	51 f4       	brne	.+20     	; 0xbac6 <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    bab2:	68 e5       	ldi	r22, 0x58	; 88
    bab4:	7f e1       	ldi	r23, 0x1F	; 31
    bab6:	86 ec       	ldi	r24, 0xC6	; 198
    bab8:	94 e1       	ldi	r25, 0x14	; 20
    baba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    babe:	86 ec       	ldi	r24, 0xC6	; 198
    bac0:	94 e1       	ldi	r25, 0x14	; 20
    bac2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bac6:	8d e0       	ldi	r24, 0x0D	; 13
    bac8:	8c 9f       	mul	r24, r28
    baca:	f0 01       	movw	r30, r0
    bacc:	8d 9f       	mul	r24, r29
    bace:	f0 0d       	add	r31, r0
    bad0:	11 24       	eor	r1, r1
    bad2:	eb 5e       	subi	r30, 0xEB	; 235
    bad4:	f3 4f       	sbci	r31, 0xF3	; 243
    bad6:	81 e0       	ldi	r24, 0x01	; 1
    bad8:	02 c0       	rjmp	.+4      	; 0xbade <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    bada:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    bade:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    bae0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bae4:	81 30       	cpi	r24, 0x01	; 1
    bae6:	51 f4       	brne	.+20     	; 0xbafc <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    bae8:	66 e4       	ldi	r22, 0x46	; 70
    baea:	7f e1       	ldi	r23, 0x1F	; 31
    baec:	86 ec       	ldi	r24, 0xC6	; 198
    baee:	94 e1       	ldi	r25, 0x14	; 20
    baf0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    baf4:	86 ec       	ldi	r24, 0xC6	; 198
    baf6:	94 e1       	ldi	r25, 0x14	; 20
    baf8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    bafc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    bb00:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    bb04:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    bb08:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    bb0c:	a4 60       	ori	r26, 0x04	; 4
    bb0e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    bb12:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    bb16:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    bb1a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						}break;
    bb1e:	0e c0       	rjmp	.+28     	; 0xbb3c <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb20:	81 30       	cpi	r24, 0x01	; 1
    bb22:	51 f4       	brne	.+20     	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    bb24:	65 e3       	ldi	r22, 0x35	; 53
    bb26:	7f e1       	ldi	r23, 0x1F	; 31
    bb28:	86 ec       	ldi	r24, 0xC6	; 198
    bb2a:	94 e1       	ldi	r25, 0x14	; 20
    bb2c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    bb30:	86 ec       	ldi	r24, 0xC6	; 198
    bb32:	94 e1       	ldi	r25, 0x14	; 20
    bb34:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    bb38:	80 e0       	ldi	r24, 0x00	; 0
    bb3a:	21 c2       	rjmp	.+1090   	; 0xbf7e <_Z22Update_Euro_Valve_DataPh+0x5d4>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    bb3c:	8d e0       	ldi	r24, 0x0D	; 13
    bb3e:	8c 9f       	mul	r24, r28
    bb40:	80 01       	movw	r16, r0
    bb42:	8d 9f       	mul	r24, r29
    bb44:	10 0d       	add	r17, r0
    bb46:	11 24       	eor	r1, r1
    bb48:	0b 5e       	subi	r16, 0xEB	; 235
    bb4a:	13 4f       	sbci	r17, 0xF3	; 243
    bb4c:	80 91 13 14 	lds	r24, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    bb50:	90 91 14 14 	lds	r25, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
    bb54:	98 27       	eor	r25, r24
    bb56:	89 27       	eor	r24, r25
    bb58:	98 27       	eor	r25, r24
    bb5a:	f8 01       	movw	r30, r16
    bb5c:	91 87       	std	Z+9, r25	; 0x09
    bb5e:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bb64:	81 30       	cpi	r24, 0x01	; 1
    bb66:	09 f0       	breq	.+2      	; 0xbb6a <_Z22Update_Euro_Valve_DataPh+0x1c0>
    bb68:	52 c0       	rjmp	.+164    	; 0xbc0e <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    bb6a:	6d e1       	ldi	r22, 0x1D	; 29
    bb6c:	7f e1       	ldi	r23, 0x1F	; 31
    bb6e:	86 ec       	ldi	r24, 0xC6	; 198
    bb70:	94 e1       	ldi	r25, 0x14	; 20
    bb72:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    bb76:	86 ec       	ldi	r24, 0xC6	; 198
    bb78:	94 e1       	ldi	r25, 0x14	; 20
    bb7a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    bb7e:	4a e0       	ldi	r20, 0x0A	; 10
    bb80:	50 e0       	ldi	r21, 0x00	; 0
    bb82:	d8 01       	movw	r26, r16
    bb84:	6c 91       	ld	r22, X
    bb86:	86 ec       	ldi	r24, 0xC6	; 198
    bb88:	94 e1       	ldi	r25, 0x14	; 20
    bb8a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bb8e:	86 ec       	ldi	r24, 0xC6	; 198
    bb90:	94 e1       	ldi	r25, 0x14	; 20
    bb92:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    bb96:	6c e0       	ldi	r22, 0x0C	; 12
    bb98:	7f e1       	ldi	r23, 0x1F	; 31
    bb9a:	86 ec       	ldi	r24, 0xC6	; 198
    bb9c:	94 e1       	ldi	r25, 0x14	; 20
    bb9e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    bba2:	f8 01       	movw	r30, r16
    bba4:	60 85       	ldd	r22, Z+8	; 0x08
    bba6:	71 85       	ldd	r23, Z+9	; 0x09
    bba8:	4a e0       	ldi	r20, 0x0A	; 10
    bbaa:	50 e0       	ldi	r21, 0x00	; 0
    bbac:	86 ec       	ldi	r24, 0xC6	; 198
    bbae:	94 e1       	ldi	r25, 0x14	; 20
    bbb0:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    bbb4:	86 ec       	ldi	r24, 0xC6	; 198
    bbb6:	94 e1       	ldi	r25, 0x14	; 20
    bbb8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    bbbc:	65 ef       	ldi	r22, 0xF5	; 245
    bbbe:	7e e1       	ldi	r23, 0x1E	; 30
    bbc0:	86 ec       	ldi	r24, 0xC6	; 198
    bbc2:	94 e1       	ldi	r25, 0x14	; 20
    bbc4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    bbc8:	86 ec       	ldi	r24, 0xC6	; 198
    bbca:	94 e1       	ldi	r25, 0x14	; 20
    bbcc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    bbd0:	4a e0       	ldi	r20, 0x0A	; 10
    bbd2:	50 e0       	ldi	r21, 0x00	; 0
    bbd4:	d8 01       	movw	r26, r16
    bbd6:	1b 96       	adiw	r26, 0x0b	; 11
    bbd8:	6c 91       	ld	r22, X
    bbda:	86 ec       	ldi	r24, 0xC6	; 198
    bbdc:	94 e1       	ldi	r25, 0x14	; 20
    bbde:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    bbe2:	66 ee       	ldi	r22, 0xE6	; 230
    bbe4:	7e e1       	ldi	r23, 0x1E	; 30
    bbe6:	86 ec       	ldi	r24, 0xC6	; 198
    bbe8:	94 e1       	ldi	r25, 0x14	; 20
    bbea:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    bbee:	86 ec       	ldi	r24, 0xC6	; 198
    bbf0:	94 e1       	ldi	r25, 0x14	; 20
    bbf2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    bbf6:	4a e0       	ldi	r20, 0x0A	; 10
    bbf8:	50 e0       	ldi	r21, 0x00	; 0
    bbfa:	f8 01       	movw	r30, r16
    bbfc:	62 85       	ldd	r22, Z+10	; 0x0a
    bbfe:	86 ec       	ldi	r24, 0xC6	; 198
    bc00:	94 e1       	ldi	r25, 0x14	; 20
    bc02:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bc06:	86 ec       	ldi	r24, 0xC6	; 198
    bc08:	94 e1       	ldi	r25, 0x14	; 20
    bc0a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bc0e:	84 e1       	ldi	r24, 0x14	; 20
    bc10:	e5 ef       	ldi	r30, 0xF5	; 245
    bc12:	f3 e1       	ldi	r31, 0x13	; 19
    bc14:	df 01       	movw	r26, r30
    bc16:	1d 92       	st	X+, r1
    bc18:	8a 95       	dec	r24
    bc1a:	e9 f7       	brne	.-6      	; 0xbc16 <_Z22Update_Euro_Valve_DataPh+0x26c>
    bc1c:	8f 01       	movw	r16, r30
    bc1e:	8d e0       	ldi	r24, 0x0D	; 13
    bc20:	8c 9f       	mul	r24, r28
    bc22:	a0 01       	movw	r20, r0
    bc24:	8d 9f       	mul	r24, r29
    bc26:	50 0d       	add	r21, r0
    bc28:	11 24       	eor	r1, r1
    bc2a:	df 01       	movw	r26, r30
    bc2c:	80 e0       	ldi	r24, 0x00	; 0
    bc2e:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    bc30:	fa 01       	movw	r30, r20
    bc32:	e8 0f       	add	r30, r24
    bc34:	f9 1f       	adc	r31, r25
    bc36:	eb 5e       	subi	r30, 0xEB	; 235
    bc38:	f3 4f       	sbci	r31, 0xF3	; 243
    bc3a:	21 81       	ldd	r18, Z+1	; 0x01
    bc3c:	2d 93       	st	X+, r18
    bc3e:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    bc40:	86 30       	cpi	r24, 0x06	; 6
    bc42:	91 05       	cpc	r25, r1
    bc44:	a9 f7       	brne	.-22     	; 0xbc30 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    bc46:	81 e0       	ldi	r24, 0x01	; 1
    bc48:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    bc4c:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    bc50:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    bc54:	8d e0       	ldi	r24, 0x0D	; 13
    bc56:	8c 9f       	mul	r24, r28
    bc58:	f0 01       	movw	r30, r0
    bc5a:	8d 9f       	mul	r24, r29
    bc5c:	f0 0d       	add	r31, r0
    bc5e:	11 24       	eor	r1, r1
    bc60:	eb 5e       	subi	r30, 0xEB	; 235
    bc62:	f3 4f       	sbci	r31, 0xF3	; 243
    bc64:	83 85       	ldd	r24, Z+11	; 0x0b
    bc66:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    bc6a:	f0 92 6e 14 	sts	0x146E, r15	; 0x80146e <_sRuble_Parameters+0xc0>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    bc6e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    bc72:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc76:	80 68       	ori	r24, 0x80	; 128
    bc78:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc7c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    bc80:	8f 2d       	mov	r24, r15
    bc82:	1f de       	rcall	.-962    	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    bc84:	40 91 1e 14 	lds	r20, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bc88:	ce 01       	movw	r24, r28
    bc8a:	88 0f       	add	r24, r24
    bc8c:	99 1f       	adc	r25, r25
    bc8e:	44 23       	and	r20, r20
    bc90:	09 f4       	brne	.+2      	; 0xbc94 <_Z22Update_Euro_Valve_DataPh+0x2ea>
    bc92:	94 c0       	rjmp	.+296    	; 0xbdbc <_Z22Update_Euro_Valve_DataPh+0x412>
    bc94:	9c 01       	movw	r18, r24
    bc96:	2c 0f       	add	r18, r28
    bc98:	3d 1f       	adc	r19, r29
    bc9a:	2f 5f       	subi	r18, 0xFF	; 255
    bc9c:	3f 4f       	sbci	r19, 0xFF	; 255
    bc9e:	b6 e0       	ldi	r27, 0x06	; 6
    bca0:	4b 9f       	mul	r20, r27
    bca2:	a0 01       	movw	r20, r0
    bca4:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bca6:	e3 e0       	ldi	r30, 0x03	; 3
    bca8:	1b c0       	rjmp	.+54     	; 0xbce0 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bcaa:	81 30       	cpi	r24, 0x01	; 1
    bcac:	09 f0       	breq	.+2      	; 0xbcb0 <_Z22Update_Euro_Valve_DataPh+0x306>
    bcae:	44 cf       	rjmp	.-376    	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    bcb0:	68 ec       	ldi	r22, 0xC8	; 200
    bcb2:	7e e1       	ldi	r23, 0x1E	; 30
    bcb4:	39 cf       	rjmp	.-398    	; 0xbb28 <_Z22Update_Euro_Valve_DataPh+0x17e>
    bcb6:	da 01       	movw	r26, r20
    bcb8:	a6 0f       	add	r26, r22
    bcba:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bcbc:	a7 5b       	subi	r26, 0xB7	; 183
    bcbe:	b2 4f       	sbci	r27, 0xF2	; 242
    bcc0:	ac 91       	ld	r26, X
    bcc2:	b0 e0       	ldi	r27, 0x00	; 0
    bcc4:	a2 17       	cp	r26, r18
    bcc6:	b3 07       	cpc	r27, r19
    bcc8:	71 f0       	breq	.+28     	; 0xbce6 <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bcca:	6f 5f       	subi	r22, 0xFF	; 255
    bccc:	7f 4f       	sbci	r23, 0xFF	; 255
    bcce:	65 30       	cpi	r22, 0x05	; 5
    bcd0:	71 05       	cpc	r23, r1
    bcd2:	89 f7       	brne	.-30     	; 0xbcb6 <_Z22Update_Euro_Valve_DataPh+0x30c>
    bcd4:	e1 50       	subi	r30, 0x01	; 1
    bcd6:	2f 5f       	subi	r18, 0xFF	; 255
    bcd8:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bcda:	ee 23       	and	r30, r30
    bcdc:	09 f4       	brne	.+2      	; 0xbce0 <_Z22Update_Euro_Valve_DataPh+0x336>
    bcde:	6e c0       	rjmp	.+220    	; 0xbdbc <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bce0:	60 e0       	ldi	r22, 0x00	; 0
    bce2:	70 e0       	ldi	r23, 0x00	; 0
    bce4:	e8 cf       	rjmp	.-48     	; 0xbcb6 <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bce6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bcea:	81 30       	cpi	r24, 0x01	; 1
    bcec:	51 f4       	brne	.+20     	; 0xbd02 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    bcee:	6c e9       	ldi	r22, 0x9C	; 156
    bcf0:	7e e1       	ldi	r23, 0x1E	; 30
    bcf2:	86 ec       	ldi	r24, 0xC6	; 198
    bcf4:	94 e1       	ldi	r25, 0x14	; 20
    bcf6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    bcfa:	86 ec       	ldi	r24, 0xC6	; 198
    bcfc:	94 e1       	ldi	r25, 0x14	; 20
    bcfe:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    bd02:	81 e0       	ldi	r24, 0x01	; 1
    bd04:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    bd08:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    bd0c:	81 11       	cpse	r24, r1
    bd0e:	13 c0       	rjmp	.+38     	; 0xbd36 <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bd10:	8a e0       	ldi	r24, 0x0A	; 10
    bd12:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    bd16:	01 97       	sbiw	r24, 0x01	; 1
    bd18:	21 f0       	breq	.+8      	; 0xbd22 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    bd1a:	61 e0       	ldi	r22, 0x01	; 1
    bd1c:	8a e0       	ldi	r24, 0x0A	; 10
    bd1e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bd22:	8b e0       	ldi	r24, 0x0B	; 11
    bd24:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    bd28:	01 97       	sbiw	r24, 0x01	; 1
    bd2a:	71 f1       	breq	.+92     	; 0xbd88 <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    bd2c:	61 e0       	ldi	r22, 0x01	; 1
    bd2e:	8b e0       	ldi	r24, 0x0B	; 11
    bd30:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    bd34:	29 c0       	rjmp	.+82     	; 0xbd88 <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    bd36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bd3a:	81 30       	cpi	r24, 0x01	; 1
    bd3c:	51 f4       	brne	.+20     	; 0xbd52 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    bd3e:	67 e7       	ldi	r22, 0x77	; 119
    bd40:	7e e1       	ldi	r23, 0x1E	; 30
    bd42:	86 ec       	ldi	r24, 0xC6	; 198
    bd44:	94 e1       	ldi	r25, 0x14	; 20
    bd46:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    bd4a:	86 ec       	ldi	r24, 0xC6	; 198
    bd4c:	94 e1       	ldi	r25, 0x14	; 20
    bd4e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bd52:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    bd56:	62 50       	subi	r22, 0x02	; 2
    bd58:	84 e0       	ldi	r24, 0x04	; 4
    bd5a:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
    bd5e:	81 11       	cpse	r24, r1
    bd60:	10 c0       	rjmp	.+32     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    bd62:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bd66:	81 11       	cpse	r24, r1
    bd68:	0c c0       	rjmp	.+24     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    bd6a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    bd6e:	81 30       	cpi	r24, 0x01	; 1
    bd70:	41 f0       	breq	.+16     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bd72:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    bd76:	81 30       	cpi	r24, 0x01	; 1
    bd78:	21 f0       	breq	.+8      	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    bd7a:	81 e0       	ldi	r24, 0x01	; 1
    bd7c:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    bd80:	02 c0       	rjmp	.+4      	; 0xbd86 <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    bd82:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bd86:	86 dd       	rcall	.-1268   	; 0xb894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bd88:	8d e0       	ldi	r24, 0x0D	; 13
    bd8a:	8c 9f       	mul	r24, r28
    bd8c:	f0 01       	movw	r30, r0
    bd8e:	8d 9f       	mul	r24, r29
    bd90:	f0 0d       	add	r31, r0
    bd92:	11 24       	eor	r1, r1
    bd94:	eb 5e       	subi	r30, 0xEB	; 235
    bd96:	f3 4f       	sbci	r31, 0xF3	; 243
    bd98:	91 e0       	ldi	r25, 0x01	; 1
    bd9a:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bd9c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    bda0:	84 e6       	ldi	r24, 0x64	; 100
    bda2:	90 e0       	ldi	r25, 0x00	; 0
    bda4:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    bda8:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bdac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bdb0:	81 30       	cpi	r24, 0x01	; 1
    bdb2:	09 f0       	breq	.+2      	; 0xbdb6 <_Z22Update_Euro_Valve_DataPh+0x40c>
    bdb4:	9b c0       	rjmp	.+310    	; 0xbeec <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    bdb6:	64 e6       	ldi	r22, 0x64	; 100
    bdb8:	7e e1       	ldi	r23, 0x1E	; 30
    bdba:	94 c0       	rjmp	.+296    	; 0xbee4 <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bdbc:	8c 0f       	add	r24, r28
    bdbe:	9d 1f       	adc	r25, r29
    bdc0:	e8 ee       	ldi	r30, 0xE8	; 232
    bdc2:	fd e0       	ldi	r31, 0x0D	; 13
    bdc4:	20 e0       	ldi	r18, 0x00	; 0
    bdc6:	30 e0       	ldi	r19, 0x00	; 0
    bdc8:	7c 01       	movw	r14, r24
    bdca:	44 e0       	ldi	r20, 0x04	; 4
    bdcc:	e4 0e       	add	r14, r20
    bdce:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    bdd0:	41 81       	ldd	r20, Z+1	; 0x01
    bdd2:	44 23       	and	r20, r20
    bdd4:	09 f4       	brne	.+2      	; 0xbdd8 <_Z22Update_Euro_Valve_DataPh+0x42e>
    bdd6:	a0 c0       	rjmp	.+320    	; 0xbf18 <_Z22Update_Euro_Valve_DataPh+0x56e>
    bdd8:	ac 01       	movw	r20, r24
    bdda:	4f 5f       	subi	r20, 0xFF	; 255
    bddc:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bdde:	60 e0       	ldi	r22, 0x00	; 0
    bde0:	70 e0       	ldi	r23, 0x00	; 0
    bde2:	df 01       	movw	r26, r30
    bde4:	a6 0f       	add	r26, r22
    bde6:	b7 1f       	adc	r27, r23
    bde8:	15 96       	adiw	r26, 0x05	; 5
    bdea:	ac 91       	ld	r26, X
    bdec:	b0 e0       	ldi	r27, 0x00	; 0
    bdee:	a4 17       	cp	r26, r20
    bdf0:	b5 07       	cpc	r27, r21
    bdf2:	09 f0       	breq	.+2      	; 0xbdf6 <_Z22Update_Euro_Valve_DataPh+0x44c>
    bdf4:	85 c0       	rjmp	.+266    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    bdf6:	a0 81       	ld	r26, Z
    bdf8:	a1 11       	cpse	r26, r1
    bdfa:	04 c0       	rjmp	.+8      	; 0xbe04 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bdfc:	a1 8d       	ldd	r26, Z+25	; 0x19
    bdfe:	a1 30       	cpi	r26, 0x01	; 1
    be00:	09 f0       	breq	.+2      	; 0xbe04 <_Z22Update_Euro_Valve_DataPh+0x45a>
    be02:	7e c0       	rjmp	.+252    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    be04:	23 30       	cpi	r18, 0x03	; 3
    be06:	31 05       	cpc	r19, r1
    be08:	09 f0       	breq	.+2      	; 0xbe0c <_Z22Update_Euro_Valve_DataPh+0x462>
    be0a:	7a c0       	rjmp	.+244    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    be0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    be10:	81 30       	cpi	r24, 0x01	; 1
    be12:	51 f4       	brne	.+20     	; 0xbe28 <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    be14:	60 e3       	ldi	r22, 0x30	; 48
    be16:	7e e1       	ldi	r23, 0x1E	; 30
    be18:	86 ec       	ldi	r24, 0xC6	; 198
    be1a:	94 e1       	ldi	r25, 0x14	; 20
    be1c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    be20:	86 ec       	ldi	r24, 0xC6	; 198
    be22:	94 e1       	ldi	r25, 0x14	; 20
    be24:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    be28:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    be2c:	81 11       	cpse	r24, r1
    be2e:	13 c0       	rjmp	.+38     	; 0xbe56 <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    be30:	8a e0       	ldi	r24, 0x0A	; 10
    be32:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    be36:	01 97       	sbiw	r24, 0x01	; 1
    be38:	21 f0       	breq	.+8      	; 0xbe42 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    be3a:	61 e0       	ldi	r22, 0x01	; 1
    be3c:	8a e0       	ldi	r24, 0x0A	; 10
    be3e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    be42:	8b e0       	ldi	r24, 0x0B	; 11
    be44:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    be48:	01 97       	sbiw	r24, 0x01	; 1
    be4a:	71 f1       	breq	.+92     	; 0xbea8 <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    be4c:	61 e0       	ldi	r22, 0x01	; 1
    be4e:	8b e0       	ldi	r24, 0x0B	; 11
    be50:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    be54:	29 c0       	rjmp	.+82     	; 0xbea8 <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    be56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    be5a:	81 30       	cpi	r24, 0x01	; 1
    be5c:	51 f4       	brne	.+20     	; 0xbe72 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    be5e:	6d e0       	ldi	r22, 0x0D	; 13
    be60:	7e e1       	ldi	r23, 0x1E	; 30
    be62:	86 ec       	ldi	r24, 0xC6	; 198
    be64:	94 e1       	ldi	r25, 0x14	; 20
    be66:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    be6a:	86 ec       	ldi	r24, 0xC6	; 198
    be6c:	94 e1       	ldi	r25, 0x14	; 20
    be6e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    be72:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    be76:	62 50       	subi	r22, 0x02	; 2
    be78:	84 e0       	ldi	r24, 0x04	; 4
    be7a:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
    be7e:	81 11       	cpse	r24, r1
    be80:	10 c0       	rjmp	.+32     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    be82:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    be86:	81 11       	cpse	r24, r1
    be88:	0c c0       	rjmp	.+24     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    be8a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    be8e:	81 30       	cpi	r24, 0x01	; 1
    be90:	41 f0       	breq	.+16     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    be92:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    be96:	81 30       	cpi	r24, 0x01	; 1
    be98:	21 f0       	breq	.+8      	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    be9a:	81 e0       	ldi	r24, 0x01	; 1
    be9c:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    bea0:	02 c0       	rjmp	.+4      	; 0xbea6 <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    bea2:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bea6:	f6 dc       	rcall	.-1556   	; 0xb894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    bea8:	10 92 3d 0e 	sts	0x0E3D, r1	; 0x800e3d <_sExtra_Plot+0x55>
    beac:	10 92 3c 0e 	sts	0x0E3C, r1	; 0x800e3c <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    beb0:	10 92 43 0e 	sts	0x0E43, r1	; 0x800e43 <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    beb4:	8d e0       	ldi	r24, 0x0D	; 13
    beb6:	8c 9f       	mul	r24, r28
    beb8:	f0 01       	movw	r30, r0
    beba:	8d 9f       	mul	r24, r29
    bebc:	f0 0d       	add	r31, r0
    bebe:	11 24       	eor	r1, r1
    bec0:	eb 5e       	subi	r30, 0xEB	; 235
    bec2:	f3 4f       	sbci	r31, 0xF3	; 243
    bec4:	91 e0       	ldi	r25, 0x01	; 1
    bec6:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bec8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    becc:	84 e6       	ldi	r24, 0x64	; 100
    bece:	90 e0       	ldi	r25, 0x00	; 0
    bed0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    bed4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bed8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bedc:	81 30       	cpi	r24, 0x01	; 1
    bede:	31 f4       	brne	.+12     	; 0xbeec <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    bee0:	67 ef       	ldi	r22, 0xF7	; 247
    bee2:	7d e1       	ldi	r23, 0x1D	; 29
    bee4:	86 ec       	ldi	r24, 0xC6	; 198
    bee6:	94 e1       	ldi	r25, 0x14	; 20
    bee8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    beec:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    bef0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    bef4:	82 60       	ori	r24, 0x02	; 2
    bef6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    befa:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    befe:	34 c0       	rjmp	.+104    	; 0xbf68 <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bf00:	6f 5f       	subi	r22, 0xFF	; 255
    bf02:	7f 4f       	sbci	r23, 0xFF	; 255
    bf04:	65 30       	cpi	r22, 0x05	; 5
    bf06:	71 05       	cpc	r23, r1
    bf08:	09 f0       	breq	.+2      	; 0xbf0c <_Z22Update_Euro_Valve_DataPh+0x562>
    bf0a:	6b cf       	rjmp	.-298    	; 0xbde2 <_Z22Update_Euro_Valve_DataPh+0x438>
    bf0c:	4f 5f       	subi	r20, 0xFF	; 255
    bf0e:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bf10:	4e 15       	cp	r20, r14
    bf12:	5f 05       	cpc	r21, r15
    bf14:	09 f0       	breq	.+2      	; 0xbf18 <_Z22Update_Euro_Valve_DataPh+0x56e>
    bf16:	63 cf       	rjmp	.-314    	; 0xbdde <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    bf18:	2f 5f       	subi	r18, 0xFF	; 255
    bf1a:	3f 4f       	sbci	r19, 0xFF	; 255
    bf1c:	7b 96       	adiw	r30, 0x1b	; 27
    bf1e:	2e 30       	cpi	r18, 0x0E	; 14
    bf20:	31 05       	cpc	r19, r1
    bf22:	09 f0       	breq	.+2      	; 0xbf26 <_Z22Update_Euro_Valve_DataPh+0x57c>
    bf24:	55 cf       	rjmp	.-342    	; 0xbdd0 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    bf26:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bf2a:	81 30       	cpi	r24, 0x01	; 1
    bf2c:	c9 f4       	brne	.+50     	; 0xbf60 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bf2e:	63 ee       	ldi	r22, 0xE3	; 227
    bf30:	7d e1       	ldi	r23, 0x1D	; 29
    bf32:	86 ec       	ldi	r24, 0xC6	; 198
    bf34:	94 e1       	ldi	r25, 0x14	; 20
    bf36:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bf3a:	86 ec       	ldi	r24, 0xC6	; 198
    bf3c:	94 e1       	ldi	r25, 0x14	; 20
    bf3e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    bf42:	ce ef       	ldi	r28, 0xFE	; 254
    bf44:	d3 e1       	ldi	r29, 0x13	; 19
					for(int k =0; k<count; k++)
    bf46:	c0 17       	cp	r28, r16
    bf48:	d1 07       	cpc	r29, r17
    bf4a:	51 f0       	breq	.+20     	; 0xbf60 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    bf4c:	d8 01       	movw	r26, r16
    bf4e:	6d 91       	ld	r22, X+
    bf50:	8d 01       	movw	r16, r26
    bf52:	4a e0       	ldi	r20, 0x0A	; 10
    bf54:	50 e0       	ldi	r21, 0x00	; 0
    bf56:	86 ec       	ldi	r24, 0xC6	; 198
    bf58:	94 e1       	ldi	r25, 0x14	; 20
    bf5a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bf5e:	f3 cf       	rjmp	.-26     	; 0xbf46 <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bf60:	86 ec       	ldi	r24, 0xC6	; 198
    bf62:	94 e1       	ldi	r25, 0x14	; 20
    bf64:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    bf68:	89 e0       	ldi	r24, 0x09	; 9
    bf6a:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    bf6e:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    bf70:	06 c0       	rjmp	.+12     	; 0xbf7e <_Z22Update_Euro_Valve_DataPh+0x5d4>
    bf72:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bf74:	c6 30       	cpi	r28, 0x06	; 6
    bf76:	d1 05       	cpc	r29, r1
    bf78:	09 f0       	breq	.+2      	; 0xbf7c <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bf7a:	24 cd       	rjmp	.-1464   	; 0xb9c4 <_Z22Update_Euro_Valve_DataPh+0x1a>
    bf7c:	dd cd       	rjmp	.-1094   	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bf7e:	df 91       	pop	r29
    bf80:	cf 91       	pop	r28
    bf82:	1f 91       	pop	r17
    bf84:	0f 91       	pop	r16
    bf86:	ff 90       	pop	r15
    bf88:	ef 90       	pop	r14
    bf8a:	08 95       	ret

0000bf8c <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf8c:	1f 93       	push	r17
    bf8e:	cf 93       	push	r28
    bf90:	df 93       	push	r29
    bf92:	dc 01       	movw	r26, r24
    bf94:	20 e0       	ldi	r18, 0x00	; 0
    bf96:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf98:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf9a:	40 e0       	ldi	r20, 0x00	; 0
    bf9c:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf9e:	82 9f       	mul	r24, r18
    bfa0:	f0 01       	movw	r30, r0
    bfa2:	83 9f       	mul	r24, r19
    bfa4:	f0 0d       	add	r31, r0
    bfa6:	11 24       	eor	r1, r1
    bfa8:	ec 50       	subi	r30, 0x0C	; 12
    bfaa:	f4 4f       	sbci	r31, 0xF4	; 244
    bfac:	69 2f       	mov	r22, r25
    bfae:	70 e0       	ldi	r23, 0x00	; 0
    bfb0:	ed 01       	movw	r28, r26
    bfb2:	c6 0f       	add	r28, r22
    bfb4:	d7 1f       	adc	r29, r23
    bfb6:	6e 0f       	add	r22, r30
    bfb8:	7f 1f       	adc	r23, r31
    bfba:	18 81       	ld	r17, Y
    bfbc:	eb 01       	movw	r28, r22
    bfbe:	59 81       	ldd	r21, Y+1	; 0x01
    bfc0:	15 17       	cp	r17, r21
    bfc2:	11 f0       	breq	.+4      	; 0xbfc8 <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bfc4:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bfc6:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bfc8:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bfca:	9f 5f       	subi	r25, 0xFF	; 255
    bfcc:	96 30       	cpi	r25, 0x06	; 6
    bfce:	70 f3       	brcs	.-36     	; 0xbfac <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bfd0:	46 30       	cpi	r20, 0x06	; 6
    bfd2:	09 f0       	breq	.+2      	; 0xbfd6 <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bfd4:	59 c0       	rjmp	.+178    	; 0xc088 <_Z25Update_Wireless_Pump_DataPh+0xfc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bfd6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bfda:	81 30       	cpi	r24, 0x01	; 1
    bfdc:	51 f4       	brne	.+20     	; 0xbff2 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bfde:	67 ec       	ldi	r22, 0xC7	; 199
    bfe0:	7d e1       	ldi	r23, 0x1D	; 29
    bfe2:	86 ec       	ldi	r24, 0xC6	; 198
    bfe4:	94 e1       	ldi	r25, 0x14	; 20
    bfe6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bfea:	86 ec       	ldi	r24, 0xC6	; 198
    bfec:	94 e1       	ldi	r25, 0x14	; 20
    bfee:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bff2:	c0 91 13 14 	lds	r28, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
			pump_number = pump_number-1;
    bff6:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bff8:	80 91 0f 14 	lds	r24, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    bffc:	82 30       	cpi	r24, 0x02	; 2
    bffe:	b9 f0       	breq	.+46     	; 0xc02e <_Z25Update_Wireless_Pump_DataPh+0xa2>
    c000:	83 30       	cpi	r24, 0x03	; 3
    c002:	01 f5       	brne	.+64     	; 0xc044 <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    c004:	8b e0       	ldi	r24, 0x0B	; 11
    c006:	c8 9f       	mul	r28, r24
    c008:	f0 01       	movw	r30, r0
    c00a:	11 24       	eor	r1, r1
    c00c:	ec 50       	subi	r30, 0x0C	; 12
    c00e:	f4 4f       	sbci	r31, 0xF4	; 244
    c010:	92 85       	ldd	r25, Z+10	; 0x0a
    c012:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    c016:	89 2b       	or	r24, r25
    c018:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    c01a:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    c01e:	90 91 12 14 	lds	r25, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    c022:	98 27       	eor	r25, r24
    c024:	89 27       	eor	r24, r25
    c026:	98 27       	eor	r25, r24
    c028:	91 87       	std	Z+9, r25	; 0x09
    c02a:	80 87       	std	Z+8, r24	; 0x08
				}break;
    c02c:	0b c0       	rjmp	.+22     	; 0xc044 <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    c02e:	db e0       	ldi	r29, 0x0B	; 11
    c030:	cd 9f       	mul	r28, r29
    c032:	f0 01       	movw	r30, r0
    c034:	11 24       	eor	r1, r1
    c036:	ec 50       	subi	r30, 0x0C	; 12
    c038:	f4 4f       	sbci	r31, 0xF4	; 244
    c03a:	92 85       	ldd	r25, Z+10	; 0x0a
    c03c:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    c040:	89 2b       	or	r24, r25
    c042:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    c044:	84 e1       	ldi	r24, 0x14	; 20
    c046:	e5 ef       	ldi	r30, 0xF5	; 245
    c048:	f3 e1       	ldi	r31, 0x13	; 19
    c04a:	df 01       	movw	r26, r30
    c04c:	1d 92       	st	X+, r1
    c04e:	8a 95       	dec	r24
    c050:	e9 f7       	brne	.-6      	; 0xc04c <_Z25Update_Wireless_Pump_DataPh+0xc0>
    c052:	df 01       	movw	r26, r30
    c054:	db e0       	ldi	r29, 0x0B	; 11
    c056:	cd 9f       	mul	r28, r29
    c058:	a0 01       	movw	r20, r0
    c05a:	11 24       	eor	r1, r1
    c05c:	80 e0       	ldi	r24, 0x00	; 0
    c05e:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    c060:	fc 01       	movw	r30, r24
    c062:	e4 0f       	add	r30, r20
    c064:	f5 1f       	adc	r31, r21
    c066:	ec 50       	subi	r30, 0x0C	; 12
    c068:	f4 4f       	sbci	r31, 0xF4	; 244
    c06a:	21 81       	ldd	r18, Z+1	; 0x01
    c06c:	2d 93       	st	X+, r18
    c06e:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    c070:	86 30       	cpi	r24, 0x06	; 6
    c072:	91 05       	cpc	r25, r1
    c074:	a9 f7       	brne	.-22     	; 0xc060 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    c076:	81 e0       	ldi	r24, 0x01	; 1
    c078:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			_kLORA_SEND_DATA(count);
    c07c:	87 e0       	ldi	r24, 0x07	; 7
    c07e:	f2 d7       	rcall	.+4068   	; 0xd064 <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    c080:	8c 2f       	mov	r24, r28
    c082:	59 dc       	rcall	.-1870   	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    c084:	81 e0       	ldi	r24, 0x01	; 1
    c086:	07 c0       	rjmp	.+14     	; 0xc096 <_Z25Update_Wireless_Pump_DataPh+0x10a>
    c088:	2f 5f       	subi	r18, 0xFF	; 255
    c08a:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    c08c:	23 30       	cpi	r18, 0x03	; 3
    c08e:	31 05       	cpc	r19, r1
    c090:	09 f0       	breq	.+2      	; 0xc094 <_Z25Update_Wireless_Pump_DataPh+0x108>
    c092:	83 cf       	rjmp	.-250    	; 0xbf9a <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    c094:	80 e0       	ldi	r24, 0x00	; 0
}
    c096:	df 91       	pop	r29
    c098:	cf 91       	pop	r28
    c09a:	1f 91       	pop	r17
    c09c:	08 95       	ret

0000c09e <_Z13Store_All_APNv>:
    c09e:	08 95       	ret

0000c0a0 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    c0a0:	cf 93       	push	r28
    c0a2:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    c0a4:	80 91 63 0c 	lds	r24, 0x0C63	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
    c0a8:	8f 5f       	subi	r24, 0xFF	; 255
    c0aa:	80 93 63 0c 	sts	0x0C63, r24	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    c0ae:	83 e8       	ldi	r24, 0x83	; 131
    c0b0:	96 e1       	ldi	r25, 0x16	; 22
    c0b2:	0e 94 3d d3 	call	0x1a67a	; 0x1a67a <_ZN14HardwareSerial9availableEv>
    c0b6:	89 2b       	or	r24, r25
    c0b8:	f1 f5       	brne	.+124    	; 0xc136 <_Z16Check_GSM_Signalv+0x96>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    c0ba:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    c0be:	82 30       	cpi	r24, 0x02	; 2
    c0c0:	c9 f4       	brne	.+50     	; 0xc0f4 <_Z16Check_GSM_Signalv+0x54>
	{
		Reading_Time = _kSET;
    c0c2:	81 e0       	ldi	r24, 0x01	; 1
    c0c4:	80 93 e1 0c 	sts	0x0CE1, r24	; 0x800ce1 <Reading_Time>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */	
    c0c8:	0e 94 2f 6b 	call	0xd65e	; 0xd65e <_Z18_kGSM_SIG_STRENGTHv>
    c0cc:	ec 01       	movw	r28, r24
		Reading_Time = _kRESET;	
    c0ce:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    c0d2:	4a e0       	ldi	r20, 0x0A	; 10
    c0d4:	50 e0       	ldi	r21, 0x00	; 0
    c0d6:	bc 01       	movw	r22, r24
    c0d8:	86 ec       	ldi	r24, 0xC6	; 198
    c0da:	94 e1       	ldi	r25, 0x14	; 20
    c0dc:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    c0e0:	c4 31       	cpi	r28, 0x14	; 20
    c0e2:	d1 05       	cpc	r29, r1
    c0e4:	4c f0       	brlt	.+18     	; 0xc0f8 <_Z16Check_GSM_Signalv+0x58>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c0e6:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c0ea:	88 7f       	andi	r24, 0xF8	; 248
    c0ec:	88 60       	ori	r24, 0x08	; 8
    c0ee:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    c0f2:	02 c0       	rjmp	.+4      	; 0xc0f8 <_Z16Check_GSM_Signalv+0x58>
		Reading_Time = _kRESET;	
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    c0f4:	c0 e0       	ldi	r28, 0x00	; 0
    c0f6:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    c0f8:	ce 01       	movw	r24, r28
    c0fa:	0e 97       	sbiw	r24, 0x0e	; 14
    c0fc:	06 97       	sbiw	r24, 0x06	; 6
    c0fe:	30 f4       	brcc	.+12     	; 0xc10c <_Z16Check_GSM_Signalv+0x6c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c100:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c104:	84 7f       	andi	r24, 0xF4	; 244
    c106:	84 60       	ori	r24, 0x04	; 4
    c108:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    c10c:	ce 01       	movw	r24, r28
    c10e:	06 97       	sbiw	r24, 0x06	; 6
    c110:	08 97       	sbiw	r24, 0x08	; 8
    c112:	28 f4       	brcc	.+10     	; 0xc11e <_Z16Check_GSM_Signalv+0x7e>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c114:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c118:	82 7f       	andi	r24, 0xF2	; 242
    c11a:	82 60       	ori	r24, 0x02	; 2
    c11c:	0a c0       	rjmp	.+20     	; 0xc132 <_Z16Check_GSM_Signalv+0x92>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    c11e:	c5 30       	cpi	r28, 0x05	; 5
    c120:	d1 05       	cpc	r29, r1
    c122:	1c f0       	brlt	.+6      	; 0xc12a <_Z16Check_GSM_Signalv+0x8a>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    c124:	c3 36       	cpi	r28, 0x63	; 99
    c126:	d1 05       	cpc	r29, r1
    c128:	34 f0       	brlt	.+12     	; 0xc136 <_Z16Check_GSM_Signalv+0x96>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    c12a:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c12e:	81 7f       	andi	r24, 0xF1	; 241
    c130:	81 60       	ori	r24, 0x01	; 1
    c132:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	
}
    c136:	df 91       	pop	r29
    c138:	cf 91       	pop	r28
    c13a:	08 95       	ret

0000c13c <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    c13c:	8f 92       	push	r8
    c13e:	9f 92       	push	r9
    c140:	af 92       	push	r10
    c142:	bf 92       	push	r11
    c144:	ef 92       	push	r14
    c146:	ff 92       	push	r15
    c148:	0f 93       	push	r16
    c14a:	1f 93       	push	r17
    c14c:	cf 93       	push	r28
    c14e:	df 93       	push	r29
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c150:	10 e0       	ldi	r17, 0x00	; 0
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c152:	84 ed       	ldi	r24, 0xD4	; 212
    c154:	e8 2e       	mov	r14, r24
    c156:	83 e0       	ldi	r24, 0x03	; 3
    c158:	f8 2e       	mov	r15, r24
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
	{
		if(count == 0)
    c15a:	11 11       	cpse	r17, r1
    c15c:	1f c0       	rjmp	.+62     	; 0xc19c <_Z14Get_Local_Timev+0x60>
		{
			Reset_Buffer();
    c15e:	5c d7       	rcall	.+3768   	; 0xd018 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZU=1"));
    c160:	68 ec       	ldi	r22, 0xC8	; 200
    c162:	70 e2       	ldi	r23, 0x20	; 32
    c164:	83 e8       	ldi	r24, 0x83	; 131
    c166:	96 e1       	ldi	r25, 0x16	; 22
    c168:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c16c:	02 e0       	ldi	r16, 0x02	; 2
    c16e:	28 eb       	ldi	r18, 0xB8	; 184
    c170:	3b e0       	ldi	r19, 0x0B	; 11
    c172:	40 e0       	ldi	r20, 0x00	; 0
    c174:	50 e0       	ldi	r21, 0x00	; 0
    c176:	6e e1       	ldi	r22, 0x1E	; 30
    c178:	73 e0       	ldi	r23, 0x03	; 3
    c17a:	80 e0       	ldi	r24, 0x00	; 0
    c17c:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c17e:	b1 d7       	rcall	.+3938   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    c180:	4b d7       	rcall	.+3734   	; 0xd018 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZR=1"));
    c182:	6e eb       	ldi	r22, 0xBE	; 190
    c184:	70 e2       	ldi	r23, 0x20	; 32
    c186:	83 e8       	ldi	r24, 0x83	; 131
    c188:	96 e1       	ldi	r25, 0x16	; 22
    c18a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK1",  NULL,3000,2);
    c18e:	28 eb       	ldi	r18, 0xB8	; 184
    c190:	3b e0       	ldi	r19, 0x0B	; 11
    c192:	40 e0       	ldi	r20, 0x00	; 0
    c194:	50 e0       	ldi	r21, 0x00	; 0
    c196:	61 e2       	ldi	r22, 0x21	; 33
    c198:	73 e0       	ldi	r23, 0x03	; 3
		}
		else
		{
			Reset_Buffer();
    c19a:	1e c0       	rjmp	.+60     	; 0xc1d8 <_Z14Get_Local_Timev+0x9c>
    c19c:	3d d7       	rcall	.+3706   	; 0xd018 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    c19e:	61 ea       	ldi	r22, 0xA1	; 161
    c1a0:	70 e2       	ldi	r23, 0x20	; 32
    c1a2:	83 e8       	ldi	r24, 0x83	; 131
    c1a4:	96 e1       	ldi	r25, 0x16	; 22
    c1a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,5000,2);
    c1aa:	02 e0       	ldi	r16, 0x02	; 2
    c1ac:	28 e8       	ldi	r18, 0x88	; 136
    c1ae:	33 e1       	ldi	r19, 0x13	; 19
    c1b0:	40 e0       	ldi	r20, 0x00	; 0
    c1b2:	50 e0       	ldi	r21, 0x00	; 0
    c1b4:	6e e1       	ldi	r22, 0x1E	; 30
    c1b6:	73 e0       	ldi	r23, 0x03	; 3
    c1b8:	80 e0       	ldi	r24, 0x00	; 0
    c1ba:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c1bc:	92 d7       	rcall	.+3876   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    c1be:	2c d7       	rcall	.+3672   	; 0xd018 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP"));
    c1c0:	69 e9       	ldi	r22, 0x99	; 153
    c1c2:	70 e2       	ldi	r23, 0x20	; 32
    c1c4:	83 e8       	ldi	r24, 0x83	; 131
    c1c6:	96 e1       	ldi	r25, 0x16	; 22
    c1c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    c1cc:	28 eb       	ldi	r18, 0xB8	; 184
    c1ce:	3b e0       	ldi	r19, 0x0B	; 11
    c1d0:	40 e0       	ldi	r20, 0x00	; 0
    c1d2:	50 e0       	ldi	r21, 0x00	; 0
    c1d4:	65 e2       	ldi	r22, 0x25	; 37
    c1d6:	73 e0       	ldi	r23, 0x03	; 3
    c1d8:	80 e0       	ldi	r24, 0x00	; 0
    c1da:	90 e0       	ldi	r25, 0x00	; 0
		}
		

		Reset_Buffer();
    c1dc:	82 d7       	rcall	.+3844   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    c1de:	1c d7       	rcall	.+3640   	; 0xd018 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CCLK?"));
    c1e0:	60 e9       	ldi	r22, 0x90	; 144
    c1e2:	70 e2       	ldi	r23, 0x20	; 32
    c1e4:	83 e8       	ldi	r24, 0x83	; 131
    c1e6:	96 e1       	ldi	r25, 0x16	; 22
    c1e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK", NULL,2000,2);
    c1ec:	02 e0       	ldi	r16, 0x02	; 2
    c1ee:	20 ed       	ldi	r18, 0xD0	; 208
    c1f0:	37 e0       	ldi	r19, 0x07	; 7
    c1f2:	40 e0       	ldi	r20, 0x00	; 0
    c1f4:	50 e0       	ldi	r21, 0x00	; 0
    c1f6:	6e e1       	ldi	r22, 0x1E	; 30
    c1f8:	73 e0       	ldi	r23, 0x03	; 3
    c1fa:	80 e0       	ldi	r24, 0x00	; 0
    c1fc:	90 e0       	ldi	r25, 0x00	; 0
    c1fe:	71 d7       	rcall	.+3810   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
    c200:	6e e2       	ldi	r22, 0x2E	; 46
    c202:	73 e0       	ldi	r23, 0x03	; 3
    c204:	80 ed       	ldi	r24, 0xD0	; 208
    c206:	9f e0       	ldi	r25, 0x0F	; 15
    c208:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c20c:	89 2b       	or	r24, r25
    c20e:	09 f4       	brne	.+2      	; 0xc212 <_Z14Get_Local_Timev+0xd6>
    c210:	0f c1       	rjmp	.+542    	; 0xc430 <_Z14Get_Local_Timev+0x2f4>
    c212:	80 e0       	ldi	r24, 0x00	; 0
    c214:	90 e0       	ldi	r25, 0x00	; 0
    c216:	c8 2f       	mov	r28, r24
		{
			for(i=0;i<20;i++)
			{
				if(_gPub_Buff[i] == '+' && _gPub_Buff[i+5] == ':')
    c218:	fc 01       	movw	r30, r24
    c21a:	e0 53       	subi	r30, 0x30	; 48
    c21c:	f0 4f       	sbci	r31, 0xF0	; 240
    c21e:	20 81       	ld	r18, Z
    c220:	2b 32       	cpi	r18, 0x2B	; 43
    c222:	31 f4       	brne	.+12     	; 0xc230 <_Z14Get_Local_Timev+0xf4>
    c224:	fc 01       	movw	r30, r24
    c226:	eb 52       	subi	r30, 0x2B	; 43
    c228:	f0 4f       	sbci	r31, 0xF0	; 240
    c22a:	20 81       	ld	r18, Z
    c22c:	2a 33       	cpi	r18, 0x3A	; 58
    c22e:	29 f0       	breq	.+10     	; 0xc23a <_Z14Get_Local_Timev+0xfe>
    c230:	01 96       	adiw	r24, 0x01	; 1
		_kSERIAL_AT.println(F("AT+CCLK?"));
		Send_AT_Command(NULL, "OK", NULL,2000,2);
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
		{
			for(i=0;i<20;i++)
    c232:	84 31       	cpi	r24, 0x14	; 20
    c234:	91 05       	cpc	r25, r1
    c236:	79 f7       	brne	.-34     	; 0xc216 <_Z14Get_Local_Timev+0xda>
    c238:	c4 e1       	ldi	r28, 0x14	; 20
		{
			return;
		}
		
		/*************************************************** UPDATE TIME AND DATE *********************************************/
		_sRuble_Parameters.Update_Local_Time[0] = ((_gPub_Buff[i+17]-0x30)*10) + (_gPub_Buff[i+18]-0x30);    /* hold hour */
    c23a:	d0 e0       	ldi	r29, 0x00	; 0
    c23c:	fe 01       	movw	r30, r28
    c23e:	ef 51       	subi	r30, 0x1F	; 31
    c240:	f0 4f       	sbci	r31, 0xF0	; 240
    c242:	20 81       	ld	r18, Z
    c244:	fe 01       	movw	r30, r28
    c246:	ee 51       	subi	r30, 0x1E	; 30
    c248:	f0 4f       	sbci	r31, 0xF0	; 240
    c24a:	90 81       	ld	r25, Z
    c24c:	22 0f       	add	r18, r18
    c24e:	20 56       	subi	r18, 0x60	; 96
    c250:	82 2f       	mov	r24, r18
    c252:	88 0f       	add	r24, r24
    c254:	88 0f       	add	r24, r24
    c256:	28 0f       	add	r18, r24
    c258:	90 53       	subi	r25, 0x30	; 48
    c25a:	82 2f       	mov	r24, r18
    c25c:	89 0f       	add	r24, r25
    c25e:	80 93 ef 13 	sts	0x13EF, r24	; 0x8013ef <_sRuble_Parameters+0x41>
		_sRuble_Parameters.Update_Local_Time[1] = ((_gPub_Buff[i+20]-0X30)*10) + (_gPub_Buff[i+21]-0X30);    /* hold minute */
    c262:	fe 01       	movw	r30, r28
    c264:	ec 51       	subi	r30, 0x1C	; 28
    c266:	f0 4f       	sbci	r31, 0xF0	; 240
    c268:	90 81       	ld	r25, Z
    c26a:	fe 01       	movw	r30, r28
    c26c:	eb 51       	subi	r30, 0x1B	; 27
    c26e:	f0 4f       	sbci	r31, 0xF0	; 240
    c270:	30 81       	ld	r19, Z
    c272:	99 0f       	add	r25, r25
    c274:	90 56       	subi	r25, 0x60	; 96
    c276:	29 2f       	mov	r18, r25
    c278:	22 0f       	add	r18, r18
    c27a:	22 0f       	add	r18, r18
    c27c:	29 0f       	add	r18, r25
    c27e:	30 53       	subi	r19, 0x30	; 48
    c280:	42 2f       	mov	r20, r18
    c282:	43 0f       	add	r20, r19
    c284:	40 93 f0 13 	sts	0x13F0, r20	; 0x8013f0 <_sRuble_Parameters+0x42>
		_sRuble_Parameters.Update_Local_Time[2] = ((_gPub_Buff[i+23]-0X30)*10) + (_gPub_Buff[i+24]-0X30);    /* hold second */
    c288:	fe 01       	movw	r30, r28
    c28a:	e9 51       	subi	r30, 0x19	; 25
    c28c:	f0 4f       	sbci	r31, 0xF0	; 240
    c28e:	90 81       	ld	r25, Z
    c290:	fe 01       	movw	r30, r28
    c292:	e8 51       	subi	r30, 0x18	; 24
    c294:	f0 4f       	sbci	r31, 0xF0	; 240
    c296:	20 81       	ld	r18, Z
    c298:	99 0f       	add	r25, r25
    c29a:	90 56       	subi	r25, 0x60	; 96
    c29c:	39 2f       	mov	r19, r25
    c29e:	33 0f       	add	r19, r19
    c2a0:	33 0f       	add	r19, r19
    c2a2:	93 0f       	add	r25, r19
    c2a4:	20 53       	subi	r18, 0x30	; 48
    c2a6:	59 2f       	mov	r21, r25
    c2a8:	52 0f       	add	r21, r18
    c2aa:	50 93 f1 13 	sts	0x13F1, r21	; 0x8013f1 <_sRuble_Parameters+0x43>
		
		_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    c2ae:	28 2f       	mov	r18, r24
    c2b0:	30 e0       	ldi	r19, 0x00	; 0
    c2b2:	a0 e1       	ldi	r26, 0x10	; 16
    c2b4:	be e0       	ldi	r27, 0x0E	; 14
    c2b6:	0e 94 fe eb 	call	0x1d7fc	; 0x1d7fc <__umulhisi3>
    c2ba:	4b 01       	movw	r8, r22
    c2bc:	5c 01       	movw	r10, r24
    c2be:	24 2f       	mov	r18, r20
    c2c0:	30 e0       	ldi	r19, 0x00	; 0
    c2c2:	ac e3       	ldi	r26, 0x3C	; 60
    c2c4:	b0 e0       	ldi	r27, 0x00	; 0
    c2c6:	0e 94 fe eb 	call	0x1d7fc	; 0x1d7fc <__umulhisi3>
    c2ca:	dc 01       	movw	r26, r24
    c2cc:	cb 01       	movw	r24, r22
    c2ce:	88 0d       	add	r24, r8
    c2d0:	99 1d       	adc	r25, r9
    c2d2:	aa 1d       	adc	r26, r10
    c2d4:	bb 1d       	adc	r27, r11
    c2d6:	85 0f       	add	r24, r21
    c2d8:	91 1d       	adc	r25, r1
    c2da:	a1 1d       	adc	r26, r1
    c2dc:	b1 1d       	adc	r27, r1
    c2de:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <_sRuble_Parameters+0x10>
    c2e2:	90 93 bf 13 	sts	0x13BF, r25	; 0x8013bf <_sRuble_Parameters+0x11>
    c2e6:	a0 93 c0 13 	sts	0x13C0, r26	; 0x8013c0 <_sRuble_Parameters+0x12>
    c2ea:	b0 93 c1 13 	sts	0x13C1, r27	; 0x8013c1 <_sRuble_Parameters+0x13>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c2ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c2f2:	81 30       	cpi	r24, 0x01	; 1
    c2f4:	91 f4       	brne	.+36     	; 0xc31a <_Z14Get_Local_Timev+0x1de>
		{
			Serial.println();
    c2f6:	86 ec       	ldi	r24, 0xC6	; 198
    c2f8:	94 e1       	ldi	r25, 0x14	; 20
    c2fa:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
			_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    c2fe:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    c302:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    c306:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    c30a:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    c30e:	2a e0       	ldi	r18, 0x0A	; 10
    c310:	30 e0       	ldi	r19, 0x00	; 0
    c312:	86 ec       	ldi	r24, 0xC6	; 198
    c314:	94 e1       	ldi	r25, 0x14	; 20
    c316:	0e 94 28 d6 	call	0x1ac50	; 0x1ac50 <_ZN5Print7printlnEmi>
		}
		
		_sRuble_Parameters.Update_Local_Date[2] = ((_gPub_Buff[i+8]-0X30)*10) +  (_gPub_Buff[i+9]-0X30);      /* hold date */
    c31a:	fe 01       	movw	r30, r28
    c31c:	e8 52       	subi	r30, 0x28	; 40
    c31e:	f0 4f       	sbci	r31, 0xF0	; 240
    c320:	80 81       	ld	r24, Z
    c322:	fe 01       	movw	r30, r28
    c324:	e7 52       	subi	r30, 0x27	; 39
    c326:	f0 4f       	sbci	r31, 0xF0	; 240
    c328:	90 81       	ld	r25, Z
    c32a:	88 0f       	add	r24, r24
    c32c:	80 56       	subi	r24, 0x60	; 96
    c32e:	28 2f       	mov	r18, r24
    c330:	22 0f       	add	r18, r18
    c332:	22 0f       	add	r18, r18
    c334:	82 0f       	add	r24, r18
    c336:	90 53       	subi	r25, 0x30	; 48
    c338:	89 0f       	add	r24, r25
    c33a:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0x46>
		_sRuble_Parameters.Update_Local_Date[1] = ((_gPub_Buff[i+11]-0X30)*10) + (_gPub_Buff[i+12]-0X30);     /* hold month */
    c33e:	fe 01       	movw	r30, r28
    c340:	e5 52       	subi	r30, 0x25	; 37
    c342:	f0 4f       	sbci	r31, 0xF0	; 240
    c344:	80 81       	ld	r24, Z
    c346:	fe 01       	movw	r30, r28
    c348:	e4 52       	subi	r30, 0x24	; 36
    c34a:	f0 4f       	sbci	r31, 0xF0	; 240
    c34c:	90 81       	ld	r25, Z
    c34e:	88 0f       	add	r24, r24
    c350:	80 56       	subi	r24, 0x60	; 96
    c352:	28 2f       	mov	r18, r24
    c354:	22 0f       	add	r18, r18
    c356:	22 0f       	add	r18, r18
    c358:	82 0f       	add	r24, r18
    c35a:	90 53       	subi	r25, 0x30	; 48
    c35c:	89 0f       	add	r24, r25
    c35e:	80 93 f3 13 	sts	0x13F3, r24	; 0x8013f3 <_sRuble_Parameters+0x45>
		_sRuble_Parameters.Update_Local_Date[0] = ((_gPub_Buff[i+14]-0X30)*10) + (_gPub_Buff[i+15]-0X30);
    c362:	fe 01       	movw	r30, r28
    c364:	e2 52       	subi	r30, 0x22	; 34
    c366:	f0 4f       	sbci	r31, 0xF0	; 240
    c368:	80 81       	ld	r24, Z
    c36a:	c1 52       	subi	r28, 0x21	; 33
    c36c:	d0 4f       	sbci	r29, 0xF0	; 240
    c36e:	98 81       	ld	r25, Y
    c370:	88 0f       	add	r24, r24
    c372:	80 56       	subi	r24, 0x60	; 96
    c374:	28 2f       	mov	r18, r24
    c376:	22 0f       	add	r18, r18
    c378:	22 0f       	add	r18, r18
    c37a:	82 0f       	add	r24, r18
    c37c:	90 53       	subi	r25, 0x30	; 48
    c37e:	89 0f       	add	r24, r25
    c380:	80 93 f2 13 	sts	0x13F2, r24	; 0x8013f2 <_sRuble_Parameters+0x44>
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c384:	e0 ed       	ldi	r30, 0xD0	; 208
    c386:	ff e0       	ldi	r31, 0x0F	; 15
    c388:	df 01       	movw	r26, r30
    c38a:	c7 01       	movw	r24, r14
    c38c:	1d 92       	st	X+, r1
    c38e:	01 97       	sbiw	r24, 0x01	; 1
    c390:	e9 f7       	brne	.-6      	; 0xc38c <_Z14Get_Local_Timev+0x250>
		
		_kSERAIL_MON_WRITE("my date : ");
    c392:	65 e8       	ldi	r22, 0x85	; 133
    c394:	70 e2       	ldi	r23, 0x20	; 32
    c396:	86 ec       	ldi	r24, 0xC6	; 198
    c398:	94 e1       	ldi	r25, 0x14	; 20
    c39a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    c39e:	4a e0       	ldi	r20, 0x0A	; 10
    c3a0:	50 e0       	ldi	r21, 0x00	; 0
    c3a2:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    c3a6:	86 ec       	ldi	r24, 0xC6	; 198
    c3a8:	94 e1       	ldi	r25, 0x14	; 20
    c3aa:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3ae:	86 ec       	ldi	r24, 0xC6	; 198
    c3b0:	94 e1       	ldi	r25, 0x14	; 20
    c3b2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    c3b6:	69 e7       	ldi	r22, 0x79	; 121
    c3b8:	70 e2       	ldi	r23, 0x20	; 32
    c3ba:	86 ec       	ldi	r24, 0xC6	; 198
    c3bc:	94 e1       	ldi	r25, 0x14	; 20
    c3be:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    c3c2:	4a e0       	ldi	r20, 0x0A	; 10
    c3c4:	50 e0       	ldi	r21, 0x00	; 0
    c3c6:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    c3ca:	86 ec       	ldi	r24, 0xC6	; 198
    c3cc:	94 e1       	ldi	r25, 0x14	; 20
    c3ce:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3d2:	86 ec       	ldi	r24, 0xC6	; 198
    c3d4:	94 e1       	ldi	r25, 0x14	; 20
    c3d6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    c3da:	6e e6       	ldi	r22, 0x6E	; 110
    c3dc:	70 e2       	ldi	r23, 0x20	; 32
    c3de:	86 ec       	ldi	r24, 0xC6	; 198
    c3e0:	94 e1       	ldi	r25, 0x14	; 20
    c3e2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    c3e6:	4a e0       	ldi	r20, 0x0A	; 10
    c3e8:	50 e0       	ldi	r21, 0x00	; 0
    c3ea:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c3ee:	86 ec       	ldi	r24, 0xC6	; 198
    c3f0:	94 e1       	ldi	r25, 0x14	; 20
    c3f2:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3f6:	86 ec       	ldi	r24, 0xC6	; 198
    c3f8:	94 e1       	ldi	r25, 0x14	; 20
    c3fa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		
		if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    c3fe:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    c402:	88 31       	cpi	r24, 0x18	; 24
    c404:	a8 f4       	brcc	.+42     	; 0xc430 <_Z14Get_Local_Timev+0x2f4>
    c406:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    c40a:	8c 33       	cpi	r24, 0x3C	; 60
    c40c:	88 f4       	brcc	.+34     	; 0xc430 <_Z14Get_Local_Timev+0x2f4>
    c40e:	80 91 f1 13 	lds	r24, 0x13F1	; 0x8013f1 <_sRuble_Parameters+0x43>
    c412:	8c 33       	cpi	r24, 0x3C	; 60
    c414:	68 f4       	brcc	.+26     	; 0xc430 <_Z14Get_Local_Timev+0x2f4>
		{
			return;
		}
		_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    c416:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    c41a:	81 60       	ori	r24, 0x01	; 1
    c41c:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
    c420:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c424:	86 34       	cpi	r24, 0x46	; 70
    c426:	21 f4       	brne	.+8      	; 0xc430 <_Z14Get_Local_Timev+0x2f4>

void Get_Local_Time(void)
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c428:	1f 5f       	subi	r17, 0xFF	; 255
    c42a:	12 30       	cpi	r17, 0x02	; 2
    c42c:	09 f0       	breq	.+2      	; 0xc430 <_Z14Get_Local_Timev+0x2f4>
    c42e:	95 ce       	rjmp	.-726    	; 0xc15a <_Z14Get_Local_Timev+0x1e>
		{
			return;
		}
	}
	
}
    c430:	df 91       	pop	r29
    c432:	cf 91       	pop	r28
    c434:	1f 91       	pop	r17
    c436:	0f 91       	pop	r16
    c438:	ff 90       	pop	r15
    c43a:	ef 90       	pop	r14
    c43c:	bf 90       	pop	r11
    c43e:	af 90       	pop	r10
    c440:	9f 90       	pop	r9
    c442:	8f 90       	pop	r8
    c444:	08 95       	ret

0000c446 <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    c446:	ff 92       	push	r15
    c448:	0f 93       	push	r16
    c44a:	1f 93       	push	r17
    c44c:	cf 93       	push	r28
    c44e:	df 93       	push	r29
    c450:	cd b7       	in	r28, 0x3d	; 61
    c452:	de b7       	in	r29, 0x3e	; 62
    c454:	c4 56       	subi	r28, 0x64	; 100
    c456:	d1 09       	sbc	r29, r1
    c458:	0f b6       	in	r0, 0x3f	; 63
    c45a:	f8 94       	cli
    c45c:	de bf       	out	0x3e, r29	; 62
    c45e:	0f be       	out	0x3f, r0	; 63
    c460:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    c462:	2b d7       	rcall	.+3670   	; 0xd2ba <_Z20Check_Gsm_Connectionv>
    c464:	f8 2e       	mov	r15, r24
    c466:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c46a:	ff 20       	and	r15, r15
    c46c:	09 f4       	brne	.+2      	; 0xc470 <_Z16Gsm_Gprs_Networkv+0x2a>
    c46e:	bf c0       	rjmp	.+382    	; 0xc5ee <_Z16Gsm_Gprs_Networkv+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c470:	81 30       	cpi	r24, 0x01	; 1
    c472:	51 f4       	brne	.+20     	; 0xc488 <_Z16Gsm_Gprs_Networkv+0x42>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    c474:	6e e4       	ldi	r22, 0x4E	; 78
    c476:	70 e2       	ldi	r23, 0x20	; 32
    c478:	86 ec       	ldi	r24, 0xC6	; 198
    c47a:	94 e1       	ldi	r25, 0x14	; 20
    c47c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c480:	86 ec       	ldi	r24, 0xC6	; 198
    c482:	94 e1       	ldi	r25, 0x14	; 20
    c484:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c488:	8e 01       	movw	r16, r28
    c48a:	0f 5f       	subi	r16, 0xFF	; 255
    c48c:	1f 4f       	sbci	r17, 0xFF	; 255
    c48e:	84 e6       	ldi	r24, 0x64	; 100
    c490:	f8 01       	movw	r30, r16
    c492:	11 92       	st	Z+, r1
    c494:	8a 95       	dec	r24
    c496:	e9 f7       	brne	.-6      	; 0xc492 <_Z16Gsm_Gprs_Networkv+0x4c>
		Get_Operator_Name(temp_data);
    c498:	c8 01       	movw	r24, r16
    c49a:	c1 d7       	rcall	.+3970   	; 0xd41e <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c49c:	64 e3       	ldi	r22, 0x34	; 52
    c49e:	73 e0       	ldi	r23, 0x03	; 3
    c4a0:	c8 01       	movw	r24, r16
    c4a2:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c4a6:	89 2b       	or	r24, r25
    c4a8:	39 f4       	brne	.+14     	; 0xc4b8 <_Z16Gsm_Gprs_Networkv+0x72>
    c4aa:	68 e3       	ldi	r22, 0x38	; 56
    c4ac:	73 e0       	ldi	r23, 0x03	; 3
    c4ae:	c8 01       	movw	r24, r16
    c4b0:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c4b4:	89 2b       	or	r24, r25
    c4b6:	49 f0       	breq	.+18     	; 0xc4ca <_Z16Gsm_Gprs_Networkv+0x84>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c4b8:	6e e3       	ldi	r22, 0x3E	; 62
    c4ba:	73 e0       	ldi	r23, 0x03	; 3
    c4bc:	85 ea       	ldi	r24, 0xA5	; 165
    c4be:	9d e0       	ldi	r25, 0x0D	; 13
    c4c0:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c4c4:	65 e4       	ldi	r22, 0x45	; 69
    c4c6:	70 e2       	ldi	r23, 0x20	; 32
    c4c8:	2d c0       	rjmp	.+90     	; 0xc524 <_Z16Gsm_Gprs_Networkv+0xde>
			_kSERIAL_MON_CLEAR();
			check_sim = 1;
		}
		
		else if (strstr(temp_data,"Air") != 0 || strstr(temp_data,"air") != 0)
    c4ca:	62 e4       	ldi	r22, 0x42	; 66
    c4cc:	73 e0       	ldi	r23, 0x03	; 3
    c4ce:	c8 01       	movw	r24, r16
    c4d0:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c4d4:	89 2b       	or	r24, r25
    c4d6:	39 f4       	brne	.+14     	; 0xc4e6 <_Z16Gsm_Gprs_Networkv+0xa0>
    c4d8:	66 e4       	ldi	r22, 0x46	; 70
    c4da:	73 e0       	ldi	r23, 0x03	; 3
    c4dc:	c8 01       	movw	r24, r16
    c4de:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c4e2:	89 2b       	or	r24, r25
    c4e4:	49 f0       	breq	.+18     	; 0xc4f8 <_Z16Gsm_Gprs_Networkv+0xb2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"airtelgprs.com");
    c4e6:	6a e4       	ldi	r22, 0x4A	; 74
    c4e8:	73 e0       	ldi	r23, 0x03	; 3
    c4ea:	85 ea       	ldi	r24, 0xA5	; 165
    c4ec:	9d e0       	ldi	r25, 0x0D	; 13
    c4ee:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
			_kSERAIL_MON_WRITE("Airtel");
    c4f2:	6e e3       	ldi	r22, 0x3E	; 62
    c4f4:	70 e2       	ldi	r23, 0x20	; 32
    c4f6:	26 c0       	rjmp	.+76     	; 0xc544 <_Z16Gsm_Gprs_Networkv+0xfe>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c4f8:	69 e5       	ldi	r22, 0x59	; 89
    c4fa:	73 e0       	ldi	r23, 0x03	; 3
    c4fc:	c8 01       	movw	r24, r16
    c4fe:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c502:	89 2b       	or	r24, r25
    c504:	39 f4       	brne	.+14     	; 0xc514 <_Z16Gsm_Gprs_Networkv+0xce>
    c506:	6d e5       	ldi	r22, 0x5D	; 93
    c508:	73 e0       	ldi	r23, 0x03	; 3
    c50a:	c8 01       	movw	r24, r16
    c50c:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    c510:	89 2b       	or	r24, r25
    c512:	b1 f0       	breq	.+44     	; 0xc540 <_Z16Gsm_Gprs_Networkv+0xfa>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c514:	61 e6       	ldi	r22, 0x61	; 97
    c516:	73 e0       	ldi	r23, 0x03	; 3
    c518:	85 ea       	ldi	r24, 0xA5	; 165
    c51a:	9d e0       	ldi	r25, 0x0D	; 13
    c51c:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c520:	6a e3       	ldi	r22, 0x3A	; 58
    c522:	70 e2       	ldi	r23, 0x20	; 32
    c524:	86 ec       	ldi	r24, 0xC6	; 198
    c526:	94 e1       	ldi	r25, 0x14	; 20
    c528:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c52c:	86 ec       	ldi	r24, 0xC6	; 198
    c52e:	94 e1       	ldi	r25, 0x14	; 20
    c530:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c534:	85 ea       	ldi	r24, 0xA5	; 165
    c536:	9d e0       	ldi	r25, 0x0D	; 13
    c538:	9f d7       	rcall	.+3902   	; 0xd478 <_Z12Gprs_ConnectPc>
    c53a:	81 11       	cpse	r24, r1
    c53c:	48 c0       	rjmp	.+144    	; 0xc5ce <_Z16Gsm_Gprs_Networkv+0x188>
    c53e:	0b c0       	rjmp	.+22     	; 0xc556 <_Z16Gsm_Gprs_Networkv+0x110>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c540:	62 e2       	ldi	r22, 0x22	; 34
    c542:	70 e2       	ldi	r23, 0x20	; 32
    c544:	86 ec       	ldi	r24, 0xC6	; 198
    c546:	94 e1       	ldi	r25, 0x14	; 20
    c548:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c54c:	86 ec       	ldi	r24, 0xC6	; 198
    c54e:	94 e1       	ldi	r25, 0x14	; 20
    c550:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    c554:	3c c0       	rjmp	.+120    	; 0xc5ce <_Z16Gsm_Gprs_Networkv+0x188>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c556:	6d e0       	ldi	r22, 0x0D	; 13
    c558:	70 e2       	ldi	r23, 0x20	; 32
    c55a:	86 ec       	ldi	r24, 0xC6	; 198
    c55c:	94 e1       	ldi	r25, 0x14	; 20
    c55e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c562:	86 ec       	ldi	r24, 0xC6	; 198
    c564:	94 e1       	ldi	r25, 0x14	; 20
    c566:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				Reset_Buffer();
    c56a:	56 d5       	rcall	.+2732   	; 0xd018 <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c56c:	61 e0       	ldi	r22, 0x01	; 1
    c56e:	70 e2       	ldi	r23, 0x20	; 32
    c570:	83 e8       	ldi	r24, 0x83	; 131
    c572:	96 e1       	ldi	r25, 0x16	; 22
    c574:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c578:	01 e0       	ldi	r16, 0x01	; 1
    c57a:	20 e1       	ldi	r18, 0x10	; 16
    c57c:	37 e2       	ldi	r19, 0x27	; 39
    c57e:	40 e0       	ldi	r20, 0x00	; 0
    c580:	50 e0       	ldi	r21, 0x00	; 0
    c582:	68 e6       	ldi	r22, 0x68	; 104
    c584:	73 e0       	ldi	r23, 0x03	; 3
    c586:	80 e0       	ldi	r24, 0x00	; 0
    c588:	90 e0       	ldi	r25, 0x00	; 0
    c58a:	ab d5       	rcall	.+2902   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
    c58c:	60 e1       	ldi	r22, 0x10	; 16
    c58e:	77 e2       	ldi	r23, 0x27	; 39
    c590:	80 e0       	ldi	r24, 0x00	; 0
    c592:	90 e0       	ldi	r25, 0x00	; 0
    c594:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c598:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c59c:	81 30       	cpi	r24, 0x01	; 1
    c59e:	31 f0       	breq	.+12     	; 0xc5ac <_Z16Gsm_Gprs_Networkv+0x166>
				{
					_kDELAY_MS(120000);
    c5a0:	60 ec       	ldi	r22, 0xC0	; 192
    c5a2:	74 ed       	ldi	r23, 0xD4	; 212
    c5a4:	81 e0       	ldi	r24, 0x01	; 1
    c5a6:	90 e0       	ldi	r25, 0x00	; 0
    c5a8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
				}
				Reset_Buffer();
    c5ac:	35 d5       	rcall	.+2666   	; 0xd018 <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
    c5ae:	6c ef       	ldi	r22, 0xFC	; 252
    c5b0:	7f e1       	ldi	r23, 0x1F	; 31
    c5b2:	83 e8       	ldi	r24, 0x83	; 131
    c5b4:	96 e1       	ldi	r25, 0x16	; 22
    c5b6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c5ba:	02 e0       	ldi	r16, 0x02	; 2
    c5bc:	28 eb       	ldi	r18, 0xB8	; 184
    c5be:	3b e0       	ldi	r19, 0x0B	; 11
    c5c0:	40 e0       	ldi	r20, 0x00	; 0
    c5c2:	50 e0       	ldi	r21, 0x00	; 0
    c5c4:	6e e1       	ldi	r22, 0x1E	; 30
    c5c6:	73 e0       	ldi	r23, 0x03	; 3
    c5c8:	80 e0       	ldi	r24, 0x00	; 0
    c5ca:	90 e0       	ldi	r25, 0x00	; 0
    c5cc:	8a d5       	rcall	.+2836   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c5ce:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c5d2:	81 30       	cpi	r24, 0x01	; 1
    c5d4:	09 f0       	breq	.+2      	; 0xc5d8 <_Z16Gsm_Gprs_Networkv+0x192>
    c5d6:	49 c0       	rjmp	.+146    	; 0xc66a <_Z16Gsm_Gprs_Networkv+0x224>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c5d8:	6c ed       	ldi	r22, 0xDC	; 220
    c5da:	7f e1       	ldi	r23, 0x1F	; 31
    c5dc:	86 ec       	ldi	r24, 0xC6	; 198
    c5de:	94 e1       	ldi	r25, 0x14	; 20
    c5e0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c5e4:	86 ec       	ldi	r24, 0xC6	; 198
    c5e6:	94 e1       	ldi	r25, 0x14	; 20
    c5e8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    c5ec:	3e c0       	rjmp	.+124    	; 0xc66a <_Z16Gsm_Gprs_Networkv+0x224>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c5ee:	81 30       	cpi	r24, 0x01	; 1
    c5f0:	51 f4       	brne	.+20     	; 0xc606 <_Z16Gsm_Gprs_Networkv+0x1c0>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c5f2:	6b eb       	ldi	r22, 0xBB	; 187
    c5f4:	7f e1       	ldi	r23, 0x1F	; 31
    c5f6:	86 ec       	ldi	r24, 0xC6	; 198
    c5f8:	94 e1       	ldi	r25, 0x14	; 20
    c5fa:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c5fe:	86 ec       	ldi	r24, 0xC6	; 198
    c600:	94 e1       	ldi	r25, 0x14	; 20
    c602:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		Reset_Buffer();
    c606:	08 d5       	rcall	.+2576   	; 0xd018 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c608:	6f ea       	ldi	r22, 0xAF	; 175
    c60a:	7f e1       	ldi	r23, 0x1F	; 31
    c60c:	83 e8       	ldi	r24, 0x83	; 131
    c60e:	96 e1       	ldi	r25, 0x16	; 22
    c610:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    c614:	01 e0       	ldi	r16, 0x01	; 1
    c616:	20 e1       	ldi	r18, 0x10	; 16
    c618:	37 e2       	ldi	r19, 0x27	; 39
    c61a:	40 e0       	ldi	r20, 0x00	; 0
    c61c:	50 e0       	ldi	r21, 0x00	; 0
    c61e:	6e e1       	ldi	r22, 0x1E	; 30
    c620:	73 e0       	ldi	r23, 0x03	; 3
    c622:	80 e0       	ldi	r24, 0x00	; 0
    c624:	90 e0       	ldi	r25, 0x00	; 0
    c626:	5d d5       	rcall	.+2746   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    c628:	60 e1       	ldi	r22, 0x10	; 16
    c62a:	77 e2       	ldi	r23, 0x27	; 39
    c62c:	80 e0       	ldi	r24, 0x00	; 0
    c62e:	90 e0       	ldi	r25, 0x00	; 0
    c630:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c634:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c638:	81 30       	cpi	r24, 0x01	; 1
		{
			_kDELAY_MS(120000);
    c63a:	31 f0       	breq	.+12     	; 0xc648 <_Z16Gsm_Gprs_Networkv+0x202>
    c63c:	60 ec       	ldi	r22, 0xC0	; 192
    c63e:	74 ed       	ldi	r23, 0xD4	; 212
    c640:	81 e0       	ldi	r24, 0x01	; 1
    c642:	90 e0       	ldi	r25, 0x00	; 0
    c644:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
		}
		Reset_Buffer();
    c648:	e7 d4       	rcall	.+2510   	; 0xd018 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    c64a:	6a ea       	ldi	r22, 0xAA	; 170
    c64c:	7f e1       	ldi	r23, 0x1F	; 31
    c64e:	83 e8       	ldi	r24, 0x83	; 131
    c650:	96 e1       	ldi	r25, 0x16	; 22
    c652:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c656:	02 e0       	ldi	r16, 0x02	; 2
    c658:	28 eb       	ldi	r18, 0xB8	; 184
    c65a:	3b e0       	ldi	r19, 0x0B	; 11
    c65c:	40 e0       	ldi	r20, 0x00	; 0
    c65e:	50 e0       	ldi	r21, 0x00	; 0
    c660:	6e e1       	ldi	r22, 0x1E	; 30
    c662:	73 e0       	ldi	r23, 0x03	; 3
    c664:	80 e0       	ldi	r24, 0x00	; 0
    c666:	90 e0       	ldi	r25, 0x00	; 0
    c668:	3c d5       	rcall	.+2680   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
	}
	
}
    c66a:	8f 2d       	mov	r24, r15
    c66c:	cc 59       	subi	r28, 0x9C	; 156
    c66e:	df 4f       	sbci	r29, 0xFF	; 255
    c670:	0f b6       	in	r0, 0x3f	; 63
    c672:	f8 94       	cli
    c674:	de bf       	out	0x3e, r29	; 62
    c676:	0f be       	out	0x3f, r0	; 63
    c678:	cd bf       	out	0x3d, r28	; 61
    c67a:	df 91       	pop	r29
    c67c:	cf 91       	pop	r28
    c67e:	1f 91       	pop	r17
    c680:	0f 91       	pop	r16
    c682:	ff 90       	pop	r15
    c684:	08 95       	ret

0000c686 <__vector_36>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c686:	1f 92       	push	r1
    c688:	0f 92       	push	r0
    c68a:	0f b6       	in	r0, 0x3f	; 63
    c68c:	0f 92       	push	r0
    c68e:	11 24       	eor	r1, r1
    c690:	0b b6       	in	r0, 0x3b	; 59
    c692:	0f 92       	push	r0
    c694:	2f 93       	push	r18
    c696:	3f 93       	push	r19
    c698:	8f 93       	push	r24
    c69a:	9f 93       	push	r25
    c69c:	ef 93       	push	r30
    c69e:	ff 93       	push	r31
    c6a0:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c6a4:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c6a8:	84 3d       	cpi	r24, 0xD4	; 212
    c6aa:	93 40       	sbci	r25, 0x03	; 3
    c6ac:	a0 f4       	brcc	.+40     	; 0xc6d6 <__vector_36+0x50>
    c6ae:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c6b2:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c6b6:	9c 01       	movw	r18, r24
    c6b8:	2f 5f       	subi	r18, 0xFF	; 255
    c6ba:	3f 4f       	sbci	r19, 0xFF	; 255
    c6bc:	30 93 7a 0c 	sts	0x0C7A, r19	; 0x800c7a <int_counter+0x1>
    c6c0:	20 93 79 0c 	sts	0x0C79, r18	; 0x800c79 <int_counter>
    c6c4:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    c6c8:	fc 01       	movw	r30, r24
    c6ca:	e0 53       	subi	r30, 0x30	; 48
    c6cc:	f0 4f       	sbci	r31, 0xF0	; 240
    c6ce:	20 83       	st	Z, r18
    c6d0:	81 e0       	ldi	r24, 0x01	; 1
    c6d2:	80 93 77 0c 	sts	0x0C77, r24	; 0x800c77 <rx_flag>
    c6d6:	ff 91       	pop	r31
    c6d8:	ef 91       	pop	r30
    c6da:	9f 91       	pop	r25
    c6dc:	8f 91       	pop	r24
    c6de:	3f 91       	pop	r19
    c6e0:	2f 91       	pop	r18
    c6e2:	0f 90       	pop	r0
    c6e4:	0b be       	out	0x3b, r0	; 59
    c6e6:	0f 90       	pop	r0
    c6e8:	0f be       	out	0x3f, r0	; 63
    c6ea:	0f 90       	pop	r0
    c6ec:	1f 90       	pop	r1
    c6ee:	18 95       	reti

0000c6f0 <__vector_12>:
    c6f0:	1f 92       	push	r1
    c6f2:	0f 92       	push	r0
    c6f4:	0f b6       	in	r0, 0x3f	; 63
    c6f6:	0f 92       	push	r0
    c6f8:	11 24       	eor	r1, r1
    c6fa:	0b b6       	in	r0, 0x3b	; 59
    c6fc:	0f 92       	push	r0
    c6fe:	2f 93       	push	r18
    c700:	8f 93       	push	r24
    c702:	9f 93       	push	r25
    c704:	ef 93       	push	r30
    c706:	ff 93       	push	r31
    c708:	e7 e0       	ldi	r30, 0x07	; 7
    c70a:	f1 e0       	ldi	r31, 0x01	; 1
    c70c:	80 81       	ld	r24, Z
    c70e:	80 64       	ori	r24, 0x40	; 64
    c710:	80 83       	st	Z, r24
    c712:	e8 e0       	ldi	r30, 0x08	; 8
    c714:	f1 e0       	ldi	r31, 0x01	; 1
    c716:	80 81       	ld	r24, Z
    c718:	8f 7b       	andi	r24, 0xBF	; 191
    c71a:	80 83       	st	Z, r24
    c71c:	2f ef       	ldi	r18, 0xFF	; 255
    c71e:	83 ed       	ldi	r24, 0xD3	; 211
    c720:	90 e3       	ldi	r25, 0x30	; 48
    c722:	21 50       	subi	r18, 0x01	; 1
    c724:	80 40       	sbci	r24, 0x00	; 0
    c726:	90 40       	sbci	r25, 0x00	; 0
    c728:	e1 f7       	brne	.-8      	; 0xc722 <__vector_12+0x32>
    c72a:	00 c0       	rjmp	.+0      	; 0xc72c <__vector_12+0x3c>
    c72c:	00 00       	nop
    c72e:	80 81       	ld	r24, Z
    c730:	80 64       	ori	r24, 0x40	; 64
    c732:	80 83       	st	Z, r24
    c734:	0f b6       	in	r0, 0x3f	; 63
    c736:	f8 94       	cli
    c738:	a8 95       	wdr
    c73a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c73e:	88 61       	ori	r24, 0x18	; 24
    c740:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c744:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c748:	0f be       	out	0x3f, r0	; 63
    c74a:	ff 91       	pop	r31
    c74c:	ef 91       	pop	r30
    c74e:	9f 91       	pop	r25
    c750:	8f 91       	pop	r24
    c752:	2f 91       	pop	r18
    c754:	0f 90       	pop	r0
    c756:	0b be       	out	0x3b, r0	; 59
    c758:	0f 90       	pop	r0
    c75a:	0f be       	out	0x3f, r0	; 63
    c75c:	0f 90       	pop	r0
    c75e:	1f 90       	pop	r1
    c760:	18 95       	reti

0000c762 <_Z20Timer1_Interrupt_Intv>:
    c762:	f8 94       	cli
    c764:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c768:	e1 e8       	ldi	r30, 0x81	; 129
    c76a:	f0 e0       	ldi	r31, 0x00	; 0
    c76c:	10 82       	st	Z, r1
    c76e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c772:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c776:	88 e0       	ldi	r24, 0x08	; 8
    c778:	9d e3       	ldi	r25, 0x3D	; 61
    c77a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c77e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c782:	80 81       	ld	r24, Z
    c784:	88 60       	ori	r24, 0x08	; 8
    c786:	80 83       	st	Z, r24
    c788:	80 81       	ld	r24, Z
    c78a:	85 60       	ori	r24, 0x05	; 5
    c78c:	80 83       	st	Z, r24
    c78e:	ef e6       	ldi	r30, 0x6F	; 111
    c790:	f0 e0       	ldi	r31, 0x00	; 0
    c792:	80 81       	ld	r24, Z
    c794:	82 60       	ori	r24, 0x02	; 2
    c796:	80 83       	st	Z, r24
    c798:	78 94       	sei
    c79a:	08 95       	ret

0000c79c <__vector_17>:
    c79c:	1f 92       	push	r1
    c79e:	0f 92       	push	r0
    c7a0:	0f b6       	in	r0, 0x3f	; 63
    c7a2:	0f 92       	push	r0
    c7a4:	11 24       	eor	r1, r1
    c7a6:	0b b6       	in	r0, 0x3b	; 59
    c7a8:	0f 92       	push	r0
    c7aa:	2f 93       	push	r18
    c7ac:	3f 93       	push	r19
    c7ae:	4f 93       	push	r20
    c7b0:	5f 93       	push	r21
    c7b2:	6f 93       	push	r22
    c7b4:	7f 93       	push	r23
    c7b6:	8f 93       	push	r24
    c7b8:	9f 93       	push	r25
    c7ba:	af 93       	push	r26
    c7bc:	bf 93       	push	r27
    c7be:	ef 93       	push	r30
    c7c0:	ff 93       	push	r31
    c7c2:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    c7c6:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    c7ca:	00 97       	sbiw	r24, 0x00	; 0
    c7cc:	29 f0       	breq	.+10     	; 0xc7d8 <__vector_17+0x3c>
    c7ce:	01 97       	sbiw	r24, 0x01	; 1
    c7d0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    c7d4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    c7d8:	81 e0       	ldi	r24, 0x01	; 1
    c7da:	90 e0       	ldi	r25, 0x00	; 0
    c7dc:	a0 e0       	ldi	r26, 0x00	; 0
    c7de:	b0 e0       	ldi	r27, 0x00	; 0
    c7e0:	80 93 cf 0c 	sts	0x0CCF, r24	; 0x800ccf <_g_1Sec_Time>
    c7e4:	90 93 d0 0c 	sts	0x0CD0, r25	; 0x800cd0 <_g_1Sec_Time+0x1>
    c7e8:	a0 93 d1 0c 	sts	0x0CD1, r26	; 0x800cd1 <_g_1Sec_Time+0x2>
    c7ec:	b0 93 d2 0c 	sts	0x0CD2, r27	; 0x800cd2 <_g_1Sec_Time+0x3>
    c7f0:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c7f4:	8e 33       	cpi	r24, 0x3E	; 62
    c7f6:	28 f4       	brcc	.+10     	; 0xc802 <__vector_17+0x66>
    c7f8:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c7fc:	8f 5f       	subi	r24, 0xFF	; 255
    c7fe:	80 93 e4 0c 	sts	0x0CE4, r24	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c802:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c806:	8b 34       	cpi	r24, 0x4B	; 75
    c808:	28 f4       	brcc	.+10     	; 0xc814 <__vector_17+0x78>
    c80a:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c80e:	8f 5f       	subi	r24, 0xFF	; 255
    c810:	80 93 e5 0c 	sts	0x0CE5, r24	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c814:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c818:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c81c:	01 96       	adiw	r24, 0x01	; 1
    c81e:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c822:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c826:	80 91 73 0c 	lds	r24, 0x0C73	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c82a:	8f 5f       	subi	r24, 0xFF	; 255
    c82c:	85 30       	cpi	r24, 0x05	; 5
    c82e:	18 f4       	brcc	.+6      	; 0xc836 <__vector_17+0x9a>
    c830:	80 93 73 0c 	sts	0x0C73, r24	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c834:	05 c0       	rjmp	.+10     	; 0xc840 <__vector_17+0xa4>
    c836:	10 92 73 0c 	sts	0x0C73, r1	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c83a:	81 e0       	ldi	r24, 0x01	; 1
    c83c:	80 93 6d 14 	sts	0x146D, r24	; 0x80146d <_sRuble_Parameters+0xbf>
    c840:	80 91 72 0c 	lds	r24, 0x0C72	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c844:	8f 5f       	subi	r24, 0xFF	; 255
    c846:	8a 30       	cpi	r24, 0x0A	; 10
    c848:	18 f4       	brcc	.+6      	; 0xc850 <__vector_17+0xb4>
    c84a:	80 93 72 0c 	sts	0x0C72, r24	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c84e:	08 c0       	rjmp	.+16     	; 0xc860 <__vector_17+0xc4>
    c850:	10 92 72 0c 	sts	0x0C72, r1	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c854:	81 e0       	ldi	r24, 0x01	; 1
    c856:	90 e0       	ldi	r25, 0x00	; 0
    c858:	90 93 cb 13 	sts	0x13CB, r25	; 0x8013cb <_sRuble_Parameters+0x1d>
    c85c:	80 93 ca 13 	sts	0x13CA, r24	; 0x8013ca <_sRuble_Parameters+0x1c>
    c860:	80 91 78 14 	lds	r24, 0x1478	; 0x801478 <_sRuble_Parameters+0xca>
    c864:	88 23       	and	r24, r24
    c866:	19 f0       	breq	.+6      	; 0xc86e <__vector_17+0xd2>
    c868:	81 50       	subi	r24, 0x01	; 1
    c86a:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
    c86e:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c872:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c876:	89 2b       	or	r24, r25
    c878:	49 f0       	breq	.+18     	; 0xc88c <__vector_17+0xf0>
    c87a:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c87e:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c882:	01 97       	sbiw	r24, 0x01	; 1
    c884:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    c888:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    c88c:	80 91 70 0c 	lds	r24, 0x0C70	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c890:	90 91 71 0c 	lds	r25, 0x0C71	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c894:	01 96       	adiw	r24, 0x01	; 1
    c896:	8d 32       	cpi	r24, 0x2D	; 45
    c898:	21 e0       	ldi	r18, 0x01	; 1
    c89a:	92 07       	cpc	r25, r18
    c89c:	28 f4       	brcc	.+10     	; 0xc8a8 <__vector_17+0x10c>
    c89e:	90 93 71 0c 	sts	0x0C71, r25	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c8a2:	80 93 70 0c 	sts	0x0C70, r24	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c8a6:	0d c0       	rjmp	.+26     	; 0xc8c2 <__vector_17+0x126>
    c8a8:	10 92 71 0c 	sts	0x0C71, r1	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c8ac:	10 92 70 0c 	sts	0x0C70, r1	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c8b0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    c8b4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    c8b8:	84 60       	ori	r24, 0x04	; 4
    c8ba:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    c8be:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    c8c2:	e8 ee       	ldi	r30, 0xE8	; 232
    c8c4:	fd e0       	ldi	r31, 0x0D	; 13
    c8c6:	22 e6       	ldi	r18, 0x62	; 98
    c8c8:	3f e0       	ldi	r19, 0x0F	; 15
    c8ca:	83 81       	ldd	r24, Z+3	; 0x03
    c8cc:	94 81       	ldd	r25, Z+4	; 0x04
    c8ce:	00 97       	sbiw	r24, 0x00	; 0
    c8d0:	19 f0       	breq	.+6      	; 0xc8d8 <__vector_17+0x13c>
    c8d2:	01 97       	sbiw	r24, 0x01	; 1
    c8d4:	94 83       	std	Z+4, r25	; 0x04
    c8d6:	83 83       	std	Z+3, r24	; 0x03
    c8d8:	7b 96       	adiw	r30, 0x1b	; 27
    c8da:	2e 17       	cp	r18, r30
    c8dc:	3f 07       	cpc	r19, r31
    c8de:	a9 f7       	brne	.-22     	; 0xc8ca <__vector_17+0x12e>
    c8e0:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    c8e4:	81 30       	cpi	r24, 0x01	; 1
    c8e6:	59 f4       	brne	.+22     	; 0xc8fe <__vector_17+0x162>
    c8e8:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c8ec:	88 23       	and	r24, r24
    c8ee:	09 f4       	brne	.+2      	; 0xc8f2 <__vector_17+0x156>
    c8f0:	75 c0       	rjmp	.+234    	; 0xc9dc <__vector_17+0x240>
    c8f2:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c8f6:	81 50       	subi	r24, 0x01	; 1
    c8f8:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    c8fc:	6f c0       	rjmp	.+222    	; 0xc9dc <__vector_17+0x240>
    c8fe:	20 91 a1 14 	lds	r18, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    c902:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
    c906:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
    c90a:	22 23       	and	r18, r18
    c90c:	e1 f1       	breq	.+120    	; 0xc986 <__vector_17+0x1ea>
    c90e:	20 91 97 09 	lds	r18, 0x0997	; 0x800997 <_sSchedules+0x79>
    c912:	21 30       	cpi	r18, 0x01	; 1
    c914:	79 f4       	brne	.+30     	; 0xc934 <__vector_17+0x198>
    c916:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    c91a:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    c91e:	2f 5f       	subi	r18, 0xFF	; 255
    c920:	3f 4f       	sbci	r19, 0xFF	; 255
    c922:	30 93 27 09 	sts	0x0927, r19	; 0x800927 <_sSchedules+0x9>
    c926:	20 93 26 09 	sts	0x0926, r18	; 0x800926 <_sSchedules+0x8>
    c92a:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    c92e:	2f 5f       	subi	r18, 0xFF	; 255
    c930:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <_sSchedules+0x2b8>
    c934:	20 91 a5 14 	lds	r18, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c938:	30 91 a6 14 	lds	r19, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c93c:	23 2b       	or	r18, r19
    c93e:	a1 f4       	brne	.+40     	; 0xc968 <__vector_17+0x1cc>
    c940:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    c944:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    c948:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    c94c:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    c950:	4f 5f       	subi	r20, 0xFF	; 255
    c952:	5f 4f       	sbci	r21, 0xFF	; 255
    c954:	6f 4f       	sbci	r22, 0xFF	; 255
    c956:	7f 4f       	sbci	r23, 0xFF	; 255
    c958:	40 93 9b 14 	sts	0x149B, r20	; 0x80149b <_sRuble_Parameters+0xed>
    c95c:	50 93 9c 14 	sts	0x149C, r21	; 0x80149c <_sRuble_Parameters+0xee>
    c960:	60 93 9d 14 	sts	0x149D, r22	; 0x80149d <_sRuble_Parameters+0xef>
    c964:	70 93 9e 14 	sts	0x149E, r23	; 0x80149e <_sRuble_Parameters+0xf0>
    c968:	00 97       	sbiw	r24, 0x00	; 0
    c96a:	79 f4       	brne	.+30     	; 0xc98a <__vector_17+0x1ee>
    c96c:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    c970:	30 91 c5 13 	lds	r19, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
    c974:	21 15       	cp	r18, r1
    c976:	31 05       	cpc	r19, r1
    c978:	69 f0       	breq	.+26     	; 0xc994 <__vector_17+0x1f8>
    c97a:	21 50       	subi	r18, 0x01	; 1
    c97c:	31 09       	sbc	r19, r1
    c97e:	30 93 c5 13 	sts	0x13C5, r19	; 0x8013c5 <_sRuble_Parameters+0x17>
    c982:	20 93 c4 13 	sts	0x13C4, r18	; 0x8013c4 <_sRuble_Parameters+0x16>
    c986:	00 97       	sbiw	r24, 0x00	; 0
    c988:	29 f0       	breq	.+10     	; 0xc994 <__vector_17+0x1f8>
    c98a:	01 97       	sbiw	r24, 0x01	; 1
    c98c:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
    c990:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
    c994:	80 e0       	ldi	r24, 0x00	; 0
    c996:	90 e0       	ldi	r25, 0x00	; 0
    c998:	9c 01       	movw	r18, r24
    c99a:	22 5e       	subi	r18, 0xE2	; 226
    c99c:	36 4f       	sbci	r19, 0xF6	; 246
    c99e:	f9 01       	movw	r30, r18
    c9a0:	ed 5a       	subi	r30, 0xAD	; 173
    c9a2:	fd 4f       	sbci	r31, 0xFD	; 253
    c9a4:	40 81       	ld	r20, Z
    c9a6:	44 23       	and	r20, r20
    c9a8:	19 f0       	breq	.+6      	; 0xc9b0 <__vector_17+0x214>
    c9aa:	40 81       	ld	r20, Z
    c9ac:	41 50       	subi	r20, 0x01	; 1
    c9ae:	40 83       	st	Z, r20
    c9b0:	f9 01       	movw	r30, r18
    c9b2:	e0 5a       	subi	r30, 0xA0	; 160
    c9b4:	fd 4f       	sbci	r31, 0xFD	; 253
    c9b6:	20 81       	ld	r18, Z
    c9b8:	21 30       	cpi	r18, 0x01	; 1
    c9ba:	59 f4       	brne	.+22     	; 0xc9d2 <__vector_17+0x236>
    c9bc:	fc 01       	movw	r30, r24
    c9be:	ee 0f       	add	r30, r30
    c9c0:	ff 1f       	adc	r31, r31
    c9c2:	ee 57       	subi	r30, 0x7E	; 126
    c9c4:	f4 4f       	sbci	r31, 0xF4	; 244
    c9c6:	20 81       	ld	r18, Z
    c9c8:	31 81       	ldd	r19, Z+1	; 0x01
    c9ca:	2f 5f       	subi	r18, 0xFF	; 255
    c9cc:	3f 4f       	sbci	r19, 0xFF	; 255
    c9ce:	31 83       	std	Z+1, r19	; 0x01
    c9d0:	20 83       	st	Z, r18
    c9d2:	01 96       	adiw	r24, 0x01	; 1
    c9d4:	83 30       	cpi	r24, 0x03	; 3
    c9d6:	91 05       	cpc	r25, r1
    c9d8:	f9 f6       	brne	.-66     	; 0xc998 <__vector_17+0x1fc>
    c9da:	86 cf       	rjmp	.-244    	; 0xc8e8 <__vector_17+0x14c>
    c9dc:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c9e0:	88 23       	and	r24, r24
    c9e2:	29 f0       	breq	.+10     	; 0xc9ee <__vector_17+0x252>
    c9e4:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c9e8:	81 50       	subi	r24, 0x01	; 1
    c9ea:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
    c9ee:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c9f2:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c9f6:	00 97       	sbiw	r24, 0x00	; 0
    c9f8:	61 f4       	brne	.+24     	; 0xca12 <__vector_17+0x276>
    c9fa:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    c9fe:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    ca02:	00 97       	sbiw	r24, 0x00	; 0
    ca04:	59 f0       	breq	.+22     	; 0xca1c <__vector_17+0x280>
    ca06:	01 97       	sbiw	r24, 0x01	; 1
    ca08:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    ca0c:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
    ca10:	05 c0       	rjmp	.+10     	; 0xca1c <__vector_17+0x280>
    ca12:	01 97       	sbiw	r24, 0x01	; 1
    ca14:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    ca18:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
    ca1c:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
    ca20:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
    ca24:	00 97       	sbiw	r24, 0x00	; 0
    ca26:	29 f0       	breq	.+10     	; 0xca32 <__vector_17+0x296>
    ca28:	01 97       	sbiw	r24, 0x01	; 1
    ca2a:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
    ca2e:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
    ca32:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    ca36:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    ca3a:	01 96       	adiw	r24, 0x01	; 1
    ca3c:	90 93 f1 0c 	sts	0x0CF1, r25	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    ca40:	80 93 f0 0c 	sts	0x0CF0, r24	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    ca44:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    ca48:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    ca4c:	00 97       	sbiw	r24, 0x00	; 0
    ca4e:	29 f0       	breq	.+10     	; 0xca5a <__vector_17+0x2be>
    ca50:	01 97       	sbiw	r24, 0x01	; 1
    ca52:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    ca56:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
    ca5a:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    ca5e:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    ca62:	01 96       	adiw	r24, 0x01	; 1
    ca64:	90 93 ea 0c 	sts	0x0CEA, r25	; 0x800cea <_gWdt_Counter+0x1>
    ca68:	80 93 e9 0c 	sts	0x0CE9, r24	; 0x800ce9 <_gWdt_Counter>
    ca6c:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca70:	8c 33       	cpi	r24, 0x3C	; 60
    ca72:	28 f4       	brcc	.+10     	; 0xca7e <__vector_17+0x2e2>
    ca74:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca78:	8f 5f       	subi	r24, 0xFF	; 255
    ca7a:	80 93 e7 0c 	sts	0x0CE7, r24	; 0x800ce7 <_gTank_Topic_check>
    ca7e:	80 91 e8 0c 	lds	r24, 0x0CE8	; 0x800ce8 <_gStart_Wdt>
    ca82:	81 30       	cpi	r24, 0x01	; 1
    ca84:	39 f4       	brne	.+14     	; 0xca94 <__vector_17+0x2f8>
    ca86:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    ca8a:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    ca8e:	80 3f       	cpi	r24, 0xF0	; 240
    ca90:	91 05       	cpc	r25, r1
    ca92:	08 f4       	brcc	.+2      	; 0xca96 <__vector_17+0x2fa>
    ca94:	a8 95       	wdr
    ca96:	0e 94 73 87 	call	0x10ee6	; 0x10ee6 <_Z18Read_Switch_Statusv>
    ca9a:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    ca9e:	88 23       	and	r24, r24
    caa0:	29 f0       	breq	.+10     	; 0xcaac <__vector_17+0x310>
    caa2:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    caa6:	8f 5f       	subi	r24, 0xFF	; 255
    caa8:	80 93 74 0c 	sts	0x0C74, r24	; 0x800c74 <monitor_serial_start>
    caac:	ff 91       	pop	r31
    caae:	ef 91       	pop	r30
    cab0:	bf 91       	pop	r27
    cab2:	af 91       	pop	r26
    cab4:	9f 91       	pop	r25
    cab6:	8f 91       	pop	r24
    cab8:	7f 91       	pop	r23
    caba:	6f 91       	pop	r22
    cabc:	5f 91       	pop	r21
    cabe:	4f 91       	pop	r20
    cac0:	3f 91       	pop	r19
    cac2:	2f 91       	pop	r18
    cac4:	0f 90       	pop	r0
    cac6:	0b be       	out	0x3b, r0	; 59
    cac8:	0f 90       	pop	r0
    caca:	0f be       	out	0x3f, r0	; 63
    cacc:	0f 90       	pop	r0
    cace:	1f 90       	pop	r1
    cad0:	18 95       	reti

0000cad2 <_Z20Timer0_Interrupt_Intv>:
    cad2:	f8 94       	cli
    cad4:	a0 eb       	ldi	r26, 0xB0	; 176
    cad6:	b0 e0       	ldi	r27, 0x00	; 0
    cad8:	1c 92       	st	X, r1
    cada:	e1 eb       	ldi	r30, 0xB1	; 177
    cadc:	f0 e0       	ldi	r31, 0x00	; 0
    cade:	10 82       	st	Z, r1
    cae0:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    cae4:	8c e7       	ldi	r24, 0x7C	; 124
    cae6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    caea:	8c 91       	ld	r24, X
    caec:	82 60       	ori	r24, 0x02	; 2
    caee:	8c 93       	st	X, r24
    caf0:	80 81       	ld	r24, Z
    caf2:	85 60       	ori	r24, 0x05	; 5
    caf4:	80 83       	st	Z, r24
    caf6:	e0 e7       	ldi	r30, 0x70	; 112
    caf8:	f0 e0       	ldi	r31, 0x00	; 0
    cafa:	80 81       	ld	r24, Z
    cafc:	82 60       	ori	r24, 0x02	; 2
    cafe:	80 83       	st	Z, r24
    cb00:	78 94       	sei
    cb02:	08 95       	ret

0000cb04 <__vector_13>:
    cb04:	1f 92       	push	r1
    cb06:	0f 92       	push	r0
    cb08:	0f b6       	in	r0, 0x3f	; 63
    cb0a:	0f 92       	push	r0
    cb0c:	11 24       	eor	r1, r1
    cb0e:	2f 93       	push	r18
    cb10:	3f 93       	push	r19
    cb12:	8f 93       	push	r24
    cb14:	9f 93       	push	r25
    cb16:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cb1a:	88 23       	and	r24, r24
    cb1c:	49 f0       	breq	.+18     	; 0xcb30 <__vector_13+0x2c>
    cb1e:	80 91 75 0c 	lds	r24, 0x0C75	; 0x800c75 <my_timer>
    cb22:	90 91 76 0c 	lds	r25, 0x0C76	; 0x800c76 <my_timer+0x1>
    cb26:	01 96       	adiw	r24, 0x01	; 1
    cb28:	90 93 76 0c 	sts	0x0C76, r25	; 0x800c76 <my_timer+0x1>
    cb2c:	80 93 75 0c 	sts	0x0C75, r24	; 0x800c75 <my_timer>
    cb30:	20 91 75 0c 	lds	r18, 0x0C75	; 0x800c75 <my_timer>
    cb34:	30 91 76 0c 	lds	r19, 0x0C76	; 0x800c76 <my_timer+0x1>
    cb38:	80 91 e2 0c 	lds	r24, 0x0CE2	; 0x800ce2 <Interrupt_Time_Out>
    cb3c:	90 91 e3 0c 	lds	r25, 0x0CE3	; 0x800ce3 <Interrupt_Time_Out+0x1>
    cb40:	82 17       	cp	r24, r18
    cb42:	93 07       	cpc	r25, r19
    cb44:	20 f4       	brcc	.+8      	; 0xcb4e <__vector_13+0x4a>
    cb46:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cb4a:	81 30       	cpi	r24, 0x01	; 1
    cb4c:	c1 f0       	breq	.+48     	; 0xcb7e <__vector_13+0x7a>
    cb4e:	90 91 77 0c 	lds	r25, 0x0C77	; 0x800c77 <rx_flag>
    cb52:	80 91 6f 0c 	lds	r24, 0x0C6F	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb56:	91 30       	cpi	r25, 0x01	; 1
    cb58:	41 f4       	brne	.+16     	; 0xcb6a <__vector_13+0x66>
    cb5a:	81 11       	cpse	r24, r1
    cb5c:	1f c0       	rjmp	.+62     	; 0xcb9c <__vector_13+0x98>
    cb5e:	90 93 6f 0c 	sts	0x0C6F, r25	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb62:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb66:	8d 7f       	andi	r24, 0xFD	; 253
    cb68:	07 c0       	rjmp	.+14     	; 0xcb78 <__vector_13+0x74>
    cb6a:	81 30       	cpi	r24, 0x01	; 1
    cb6c:	b9 f4       	brne	.+46     	; 0xcb9c <__vector_13+0x98>
    cb6e:	10 92 6f 0c 	sts	0x0C6F, r1	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb72:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb76:	82 60       	ori	r24, 0x02	; 2
    cb78:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb7c:	0f c0       	rjmp	.+30     	; 0xcb9c <__vector_13+0x98>
    cb7e:	80 93 78 0c 	sts	0x0C78, r24	; 0x800c78 <rx_complete>
    cb82:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    cb86:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    cb8a:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    cb8e:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    cb92:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    cb96:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
    cb9a:	d9 cf       	rjmp	.-78     	; 0xcb4e <__vector_13+0x4a>
    cb9c:	9f 91       	pop	r25
    cb9e:	8f 91       	pop	r24
    cba0:	3f 91       	pop	r19
    cba2:	2f 91       	pop	r18
    cba4:	0f 90       	pop	r0
    cba6:	0f be       	out	0x3f, r0	; 63
    cba8:	0f 90       	pop	r0
    cbaa:	1f 90       	pop	r1
    cbac:	18 95       	reti

0000cbae <_Z8Lcd_Initv>:
    cbae:	83 ec       	ldi	r24, 0xC3	; 195
    cbb0:	9c e0       	ldi	r25, 0x0C	; 12
    cbb2:	0c 94 9d db 	jmp	0x1b73a	; 0x1b73a <_ZN17LiquidCrystal_I2C4initEv>
    cbb6:	08 95       	ret

0000cbb8 <_Z14Lcd_Print_BuffPchhh>:
    cbb8:	cf 92       	push	r12
    cbba:	df 92       	push	r13
    cbbc:	ef 92       	push	r14
    cbbe:	ff 92       	push	r15
    cbc0:	0f 93       	push	r16
    cbc2:	1f 93       	push	r17
    cbc4:	cf 93       	push	r28
    cbc6:	df 93       	push	r29
    cbc8:	7c 01       	movw	r14, r24
    cbca:	c4 2e       	mov	r12, r20
    cbcc:	ec 01       	movw	r28, r24
    cbce:	06 2f       	mov	r16, r22
    cbd0:	10 e0       	ldi	r17, 0x00	; 0
    cbd2:	ce 01       	movw	r24, r28
    cbd4:	8e 19       	sub	r24, r14
    cbd6:	9f 09       	sbc	r25, r15
    cbd8:	80 17       	cp	r24, r16
    cbda:	91 07       	cpc	r25, r17
    cbdc:	84 f4       	brge	.+32     	; 0xcbfe <_Z14Lcd_Print_BuffPchhh+0x46>
    cbde:	dd 24       	eor	r13, r13
    cbe0:	d3 94       	inc	r13
    cbe2:	d2 0e       	add	r13, r18
    cbe4:	4c 2d       	mov	r20, r12
    cbe6:	62 2f       	mov	r22, r18
    cbe8:	83 ec       	ldi	r24, 0xC3	; 195
    cbea:	9c e0       	ldi	r25, 0x0C	; 12
    cbec:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cbf0:	69 91       	ld	r22, Y+
    cbf2:	83 ec       	ldi	r24, 0xC3	; 195
    cbf4:	9c e0       	ldi	r25, 0x0C	; 12
    cbf6:	0e 94 7c d5 	call	0x1aaf8	; 0x1aaf8 <_ZN5Print5printEc>
    cbfa:	2d 2d       	mov	r18, r13
    cbfc:	ea cf       	rjmp	.-44     	; 0xcbd2 <_Z14Lcd_Print_BuffPchhh+0x1a>
    cbfe:	df 91       	pop	r29
    cc00:	cf 91       	pop	r28
    cc02:	1f 91       	pop	r17
    cc04:	0f 91       	pop	r16
    cc06:	ff 90       	pop	r15
    cc08:	ef 90       	pop	r14
    cc0a:	df 90       	pop	r13
    cc0c:	cf 90       	pop	r12
    cc0e:	08 95       	ret

0000cc10 <_Z9Lcd_Clearv>:
    cc10:	83 ec       	ldi	r24, 0xC3	; 195
    cc12:	9c e0       	ldi	r25, 0x0C	; 12
    cc14:	0c 94 de da 	jmp	0x1b5bc	; 0x1b5bc <_ZN17LiquidCrystal_I2C5clearEv>

0000cc18 <_Z9Lora_Initv>:
    cc18:	8b e7       	ldi	r24, 0x7B	; 123
    cc1a:	9c e0       	ldi	r25, 0x0C	; 12
    cc1c:	0c 94 71 e0 	jmp	0x1c0e2	; 0x1c0e2 <_ZN7RH_RF954initEv>

0000cc20 <_Z14Lora_Availablev>:
    cc20:	8b e7       	ldi	r24, 0x7B	; 123
    cc22:	9c e0       	ldi	r25, 0x0C	; 12
    cc24:	0c 94 91 df 	jmp	0x1bf22	; 0x1bf22 <_ZN7RH_RF959availableEv>

0000cc28 <_Z17Lora_Data_Receivev>:
    cc28:	cf 93       	push	r28
    cc2a:	df 93       	push	r29
    cc2c:	1f 92       	push	r1
    cc2e:	cd b7       	in	r28, 0x3d	; 61
    cc30:	de b7       	in	r29, 0x3e	; 62
    cc32:	84 e1       	ldi	r24, 0x14	; 20
    cc34:	e9 e0       	ldi	r30, 0x09	; 9
    cc36:	f4 e1       	ldi	r31, 0x14	; 20
    cc38:	df 01       	movw	r26, r30
    cc3a:	98 2f       	mov	r25, r24
    cc3c:	1d 92       	st	X+, r1
    cc3e:	9a 95       	dec	r25
    cc40:	e9 f7       	brne	.-6      	; 0xcc3c <_Z17Lora_Data_Receivev+0x14>
    cc42:	89 83       	std	Y+1, r24	; 0x01
    cc44:	ae 01       	movw	r20, r28
    cc46:	4f 5f       	subi	r20, 0xFF	; 255
    cc48:	5f 4f       	sbci	r21, 0xFF	; 255
    cc4a:	bf 01       	movw	r22, r30
    cc4c:	8b e7       	ldi	r24, 0x7B	; 123
    cc4e:	9c e0       	ldi	r25, 0x0C	; 12
    cc50:	0e 94 12 de 	call	0x1bc24	; 0x1bc24 <_ZN7RH_RF954recvEPhS0_>
    cc54:	0f 90       	pop	r0
    cc56:	df 91       	pop	r29
    cc58:	cf 91       	pop	r28
    cc5a:	08 95       	ret

0000cc5c <_Z13Lora_Set_Freqv>:
    cc5c:	4a e5       	ldi	r20, 0x5A	; 90
    cc5e:	54 e4       	ldi	r21, 0x44	; 68
    cc60:	68 e5       	ldi	r22, 0x58	; 88
    cc62:	74 e4       	ldi	r23, 0x44	; 68
    cc64:	8b e7       	ldi	r24, 0x7B	; 123
    cc66:	9c e0       	ldi	r25, 0x0C	; 12
    cc68:	0c 94 50 de 	jmp	0x1bca0	; 0x1bca0 <_ZN7RH_RF9512setFrequencyEf>

0000cc6c <_Z14Lora_Set_Powerv>:
    cc6c:	40 e0       	ldi	r20, 0x00	; 0
    cc6e:	64 e1       	ldi	r22, 0x14	; 20
    cc70:	8b e7       	ldi	r24, 0x7B	; 123
    cc72:	9c e0       	ldi	r25, 0x0C	; 12
    cc74:	0c 94 06 e0 	jmp	0x1c00c	; 0x1c00c <_ZN7RH_RF9510setTxPowerEab>

0000cc78 <_Z15Lora_Set_Configv>:
    cc78:	60 e0       	ldi	r22, 0x00	; 0
    cc7a:	8b e7       	ldi	r24, 0x7B	; 123
    cc7c:	9c e0       	ldi	r25, 0x0C	; 12
    cc7e:	0e 94 39 e0 	call	0x1c072	; 0x1c072 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    cc82:	6b e0       	ldi	r22, 0x0B	; 11
    cc84:	8b e7       	ldi	r24, 0x7B	; 123
    cc86:	9c e0       	ldi	r25, 0x0C	; 12
    cc88:	0c 94 74 e1 	jmp	0x1c2e8	; 0x1c2e8 <_ZN7RH_RF9518setSpreadingFactorEh>

0000cc8c <_Z20Check_Data_Availablej>:
    cc8c:	bc 01       	movw	r22, r24
    cc8e:	8b e7       	ldi	r24, 0x7B	; 123
    cc90:	9c e0       	ldi	r25, 0x0C	; 12
    cc92:	0c 94 f7 db 	jmp	0x1b7ee	; 0x1b7ee <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000cc96 <_Z21Seperate_Out_Sub_Datav>:
    cc96:	8f 92       	push	r8
    cc98:	9f 92       	push	r9
    cc9a:	af 92       	push	r10
    cc9c:	bf 92       	push	r11
    cc9e:	cf 92       	push	r12
    cca0:	df 92       	push	r13
    cca2:	ef 92       	push	r14
    cca4:	ff 92       	push	r15
    cca6:	0f 93       	push	r16
    cca8:	1f 93       	push	r17
    ccaa:	cf 93       	push	r28
    ccac:	df 93       	push	r29
    ccae:	cd b7       	in	r28, 0x3d	; 61
    ccb0:	de b7       	in	r29, 0x3e	; 62
    ccb2:	c0 53       	subi	r28, 0x30	; 48
    ccb4:	d4 40       	sbci	r29, 0x04	; 4
    ccb6:	0f b6       	in	r0, 0x3f	; 63
    ccb8:	f8 94       	cli
    ccba:	de bf       	out	0x3e, r29	; 62
    ccbc:	0f be       	out	0x3f, r0	; 63
    ccbe:	cd bf       	out	0x3d, r28	; 61
    ccc0:	22 e1       	ldi	r18, 0x12	; 18
    ccc2:	e3 e7       	ldi	r30, 0x73	; 115
    ccc4:	f3 e0       	ldi	r31, 0x03	; 3
    ccc6:	de 01       	movw	r26, r28
    ccc8:	a5 5e       	subi	r26, 0xE5	; 229
    ccca:	bb 4f       	sbci	r27, 0xFB	; 251
    cccc:	01 90       	ld	r0, Z+
    ccce:	0d 92       	st	X+, r0
    ccd0:	2a 95       	dec	r18
    ccd2:	e1 f7       	brne	.-8      	; 0xcccc <_Z21Seperate_Out_Sub_Datav+0x36>
    ccd4:	24 e1       	ldi	r18, 0x14	; 20
    ccd6:	e5 e8       	ldi	r30, 0x85	; 133
    ccd8:	f3 e0       	ldi	r31, 0x03	; 3
    ccda:	de 01       	movw	r26, r28
    ccdc:	a9 5f       	subi	r26, 0xF9	; 249
    ccde:	bb 4f       	sbci	r27, 0xFB	; 251
    cce0:	01 90       	ld	r0, Z+
    cce2:	0d 92       	st	X+, r0
    cce4:	2a 95       	dec	r18
    cce6:	e1 f7       	brne	.-8      	; 0xcce0 <_Z21Seperate_Out_Sub_Datav+0x4a>
    cce8:	8e 01       	movw	r16, r28
    ccea:	0f 5f       	subi	r16, 0xFF	; 255
    ccec:	1f 4f       	sbci	r17, 0xFF	; 255
    ccee:	24 ed       	ldi	r18, 0xD4	; 212
    ccf0:	33 e0       	ldi	r19, 0x03	; 3
    ccf2:	d8 01       	movw	r26, r16
    ccf4:	f9 01       	movw	r30, r18
    ccf6:	1d 92       	st	X+, r1
    ccf8:	31 97       	sbiw	r30, 0x01	; 1
    ccfa:	e9 f7       	brne	.-6      	; 0xccf6 <_Z21Seperate_Out_Sub_Datav+0x60>
    ccfc:	be 01       	movw	r22, r28
    ccfe:	6b 52       	subi	r22, 0x2B	; 43
    cd00:	7c 4f       	sbci	r23, 0xFC	; 252
    cd02:	22 e3       	ldi	r18, 0x32	; 50
    cd04:	db 01       	movw	r26, r22
    cd06:	1d 92       	st	X+, r1
    cd08:	2a 95       	dec	r18
    cd0a:	e9 f7       	brne	.-6      	; 0xcd06 <_Z21Seperate_Out_Sub_Datav+0x70>
    cd0c:	88 24       	eor	r8, r8
    cd0e:	83 94       	inc	r8
    cd10:	91 2c       	mov	r9, r1
    cd12:	40 e0       	ldi	r20, 0x00	; 0
    cd14:	50 e0       	ldi	r21, 0x00	; 0
    cd16:	20 e0       	ldi	r18, 0x00	; 0
    cd18:	30 e0       	ldi	r19, 0x00	; 0
    cd1a:	fe 01       	movw	r30, r28
    cd1c:	e3 5d       	subi	r30, 0xD3	; 211
    cd1e:	fb 4f       	sbci	r31, 0xFB	; 251
    cd20:	aa e0       	ldi	r26, 0x0A	; 10
    cd22:	fa 2e       	mov	r15, r26
    cd24:	b4 e6       	ldi	r27, 0x64	; 100
    cd26:	eb 2e       	mov	r14, r27
    cd28:	d9 01       	movw	r26, r18
    cd2a:	a0 53       	subi	r26, 0x30	; 48
    cd2c:	b0 4f       	sbci	r27, 0xF0	; 240
    cd2e:	dc 90       	ld	r13, X
    cd30:	dd 20       	and	r13, r13
    cd32:	09 f4       	brne	.+2      	; 0xcd36 <_Z21Seperate_Out_Sub_Datav+0xa0>
    cd34:	40 c1       	rjmp	.+640    	; 0xcfb6 <_Z21Seperate_Out_Sub_Datav+0x320>
    cd36:	2f 5f       	subi	r18, 0xFF	; 255
    cd38:	3f 4f       	sbci	r19, 0xFF	; 255
    cd3a:	24 3d       	cpi	r18, 0xD4	; 212
    cd3c:	b3 e0       	ldi	r27, 0x03	; 3
    cd3e:	3b 07       	cpc	r19, r27
    cd40:	08 f0       	brcs	.+2      	; 0xcd44 <_Z21Seperate_Out_Sub_Datav+0xae>
    cd42:	55 c1       	rjmp	.+682    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cd44:	d9 01       	movw	r26, r18
    cd46:	a0 53       	subi	r26, 0x30	; 48
    cd48:	b0 4f       	sbci	r27, 0xF0	; 240
    cd4a:	6d 01       	movw	r12, r26
    cd4c:	b1 e0       	ldi	r27, 0x01	; 1
    cd4e:	8b 16       	cp	r8, r27
    cd50:	91 04       	cpc	r9, r1
    cd52:	31 f0       	breq	.+12     	; 0xcd60 <_Z21Seperate_Out_Sub_Datav+0xca>
    cd54:	a2 e0       	ldi	r26, 0x02	; 2
    cd56:	8a 16       	cp	r8, r26
    cd58:	91 04       	cpc	r9, r1
    cd5a:	09 f4       	brne	.+2      	; 0xcd5e <_Z21Seperate_Out_Sub_Datav+0xc8>
    cd5c:	8f c0       	rjmp	.+286    	; 0xce7c <_Z21Seperate_Out_Sub_Datav+0x1e6>
    cd5e:	e4 cf       	rjmp	.-56     	; 0xcd28 <_Z21Seperate_Out_Sub_Datav+0x92>
    cd60:	d6 01       	movw	r26, r12
    cd62:	bc 90       	ld	r11, X
    cd64:	bb e1       	ldi	r27, 0x1B	; 27
    cd66:	cb 2e       	mov	r12, r27
    cd68:	b4 e0       	ldi	r27, 0x04	; 4
    cd6a:	db 2e       	mov	r13, r27
    cd6c:	cc 0e       	add	r12, r28
    cd6e:	dd 1e       	adc	r13, r29
    cd70:	c4 0e       	add	r12, r20
    cd72:	d5 1e       	adc	r13, r21
    cd74:	d6 01       	movw	r26, r12
    cd76:	dc 90       	ld	r13, X
    cd78:	bd 14       	cp	r11, r13
    cd7a:	19 f0       	breq	.+6      	; 0xcd82 <_Z21Seperate_Out_Sub_Datav+0xec>
    cd7c:	40 e0       	ldi	r20, 0x00	; 0
    cd7e:	50 e0       	ldi	r21, 0x00	; 0
    cd80:	d3 cf       	rjmp	.-90     	; 0xcd28 <_Z21Seperate_Out_Sub_Datav+0x92>
    cd82:	4f 5f       	subi	r20, 0xFF	; 255
    cd84:	5f 4f       	sbci	r21, 0xFF	; 255
    cd86:	ab e1       	ldi	r26, 0x1B	; 27
    cd88:	ca 2e       	mov	r12, r26
    cd8a:	a4 e0       	ldi	r26, 0x04	; 4
    cd8c:	da 2e       	mov	r13, r26
    cd8e:	cc 0e       	add	r12, r28
    cd90:	dd 1e       	adc	r13, r29
    cd92:	c4 0e       	add	r12, r20
    cd94:	d5 1e       	adc	r13, r21
    cd96:	d6 01       	movw	r26, r12
    cd98:	dc 90       	ld	r13, X
    cd9a:	d1 10       	cpse	r13, r1
    cd9c:	c5 cf       	rjmp	.-118    	; 0xcd28 <_Z21Seperate_Out_Sub_Datav+0x92>
    cd9e:	af 01       	movw	r20, r30
    cda0:	5a 01       	movw	r10, r20
    cda2:	ae 1a       	sub	r10, r30
    cda4:	bf 0a       	sbc	r11, r31
    cda6:	d9 01       	movw	r26, r18
    cda8:	a0 53       	subi	r26, 0x30	; 48
    cdaa:	b0 4f       	sbci	r27, 0xF0	; 240
    cdac:	dc 90       	ld	r13, X
    cdae:	bd e0       	ldi	r27, 0x0D	; 13
    cdb0:	db 16       	cp	r13, r27
    cdb2:	79 f0       	breq	.+30     	; 0xcdd2 <_Z21Seperate_Out_Sub_Datav+0x13c>
    cdb4:	2f 5f       	subi	r18, 0xFF	; 255
    cdb6:	3f 4f       	sbci	r19, 0xFF	; 255
    cdb8:	24 3d       	cpi	r18, 0xD4	; 212
    cdba:	a3 e0       	ldi	r26, 0x03	; 3
    cdbc:	3a 07       	cpc	r19, r26
    cdbe:	09 f4       	brne	.+2      	; 0xcdc2 <_Z21Seperate_Out_Sub_Datav+0x12c>
    cdc0:	16 c1       	rjmp	.+556    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cdc2:	d9 01       	movw	r26, r18
    cdc4:	a0 53       	subi	r26, 0x30	; 48
    cdc6:	b0 4f       	sbci	r27, 0xF0	; 240
    cdc8:	dc 90       	ld	r13, X
    cdca:	da 01       	movw	r26, r20
    cdcc:	dd 92       	st	X+, r13
    cdce:	ad 01       	movw	r20, r26
    cdd0:	e7 cf       	rjmp	.-50     	; 0xcda0 <_Z21Seperate_Out_Sub_Datav+0x10a>
    cdd2:	d5 01       	movw	r26, r10
    cdd4:	ae 0f       	add	r26, r30
    cdd6:	bf 1f       	adc	r27, r31
    cdd8:	1c 92       	st	X, r1
    cdda:	df 01       	movw	r26, r30
    cddc:	0d 90       	ld	r0, X+
    cdde:	00 20       	and	r0, r0
    cde0:	e9 f7       	brne	.-6      	; 0xcddc <_Z21Seperate_Out_Sub_Datav+0x146>
    cde2:	11 97       	sbiw	r26, 0x01	; 1
    cde4:	ad 01       	movw	r20, r26
    cde6:	4e 1b       	sub	r20, r30
    cde8:	5f 0b       	sbc	r21, r31
    cdea:	42 30       	cpi	r20, 0x02	; 2
    cdec:	51 05       	cpc	r21, r1
    cdee:	49 f0       	breq	.+18     	; 0xce02 <_Z21Seperate_Out_Sub_Datav+0x16c>
    cdf0:	08 f4       	brcc	.+2      	; 0xcdf4 <_Z21Seperate_Out_Sub_Datav+0x15e>
    cdf2:	fd c0       	rjmp	.+506    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cdf4:	43 30       	cpi	r20, 0x03	; 3
    cdf6:	51 05       	cpc	r21, r1
    cdf8:	49 f0       	breq	.+18     	; 0xce0c <_Z21Seperate_Out_Sub_Datav+0x176>
    cdfa:	44 30       	cpi	r20, 0x04	; 4
    cdfc:	51 05       	cpc	r21, r1
    cdfe:	d9 f4       	brne	.+54     	; 0xce36 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ce00:	f6 c0       	rjmp	.+492    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ce02:	80 81       	ld	r24, Z
    ce04:	90 e0       	ldi	r25, 0x00	; 0
    ce06:	c0 97       	sbiw	r24, 0x30	; 48
    ce08:	b1 f4       	brne	.+44     	; 0xce36 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ce0a:	f1 c0       	rjmp	.+482    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ce0c:	80 81       	ld	r24, Z
    ce0e:	90 e0       	ldi	r25, 0x00	; 0
    ce10:	c0 97       	sbiw	r24, 0x30	; 48
    ce12:	f8 9e       	mul	r15, r24
    ce14:	a0 01       	movw	r20, r0
    ce16:	f9 9e       	mul	r15, r25
    ce18:	50 0d       	add	r21, r0
    ce1a:	11 24       	eor	r1, r1
    ce1c:	91 81       	ldd	r25, Z+1	; 0x01
    ce1e:	89 2f       	mov	r24, r25
    ce20:	90 e0       	ldi	r25, 0x00	; 0
    ce22:	c0 97       	sbiw	r24, 0x30	; 48
    ce24:	84 0f       	add	r24, r20
    ce26:	95 1f       	adc	r25, r21
    ce28:	ac 01       	movw	r20, r24
    ce2a:	41 50       	subi	r20, 0x01	; 1
    ce2c:	51 09       	sbc	r21, r1
    ce2e:	42 33       	cpi	r20, 0x32	; 50
    ce30:	51 05       	cpc	r21, r1
    ce32:	08 f0       	brcs	.+2      	; 0xce36 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ce34:	dc c0       	rjmp	.+440    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ce36:	2e 5f       	subi	r18, 0xFE	; 254
    ce38:	3f 4f       	sbci	r19, 0xFF	; 255
    ce3a:	24 3d       	cpi	r18, 0xD4	; 212
    ce3c:	b3 e0       	ldi	r27, 0x03	; 3
    ce3e:	3b 07       	cpc	r19, r27
    ce40:	08 f0       	brcs	.+2      	; 0xce44 <_Z21Seperate_Out_Sub_Datav+0x1ae>
    ce42:	d5 c0       	rjmp	.+426    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ce44:	6b 01       	movw	r12, r22
    ce46:	a6 01       	movw	r20, r12
    ce48:	46 1b       	sub	r20, r22
    ce4a:	57 0b       	sbc	r21, r23
    ce4c:	48 17       	cp	r20, r24
    ce4e:	59 07       	cpc	r21, r25
    ce50:	20 f0       	brcs	.+8      	; 0xce5a <_Z21Seperate_Out_Sub_Datav+0x1c4>
    ce52:	42 e0       	ldi	r20, 0x02	; 2
    ce54:	84 2e       	mov	r8, r20
    ce56:	91 2c       	mov	r9, r1
    ce58:	91 cf       	rjmp	.-222    	; 0xcd7c <_Z21Seperate_Out_Sub_Datav+0xe6>
    ce5a:	a9 01       	movw	r20, r18
    ce5c:	4f 5f       	subi	r20, 0xFF	; 255
    ce5e:	5f 4f       	sbci	r21, 0xFF	; 255
    ce60:	20 53       	subi	r18, 0x30	; 48
    ce62:	30 4f       	sbci	r19, 0xF0	; 240
    ce64:	d9 01       	movw	r26, r18
    ce66:	2c 91       	ld	r18, X
    ce68:	d6 01       	movw	r26, r12
    ce6a:	2d 93       	st	X+, r18
    ce6c:	6d 01       	movw	r12, r26
    ce6e:	44 3d       	cpi	r20, 0xD4	; 212
    ce70:	b3 e0       	ldi	r27, 0x03	; 3
    ce72:	5b 07       	cpc	r21, r27
    ce74:	09 f4       	brne	.+2      	; 0xce78 <_Z21Seperate_Out_Sub_Datav+0x1e2>
    ce76:	bb c0       	rjmp	.+374    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ce78:	9a 01       	movw	r18, r20
    ce7a:	e5 cf       	rjmp	.-54     	; 0xce46 <_Z21Seperate_Out_Sub_Datav+0x1b0>
    ce7c:	d6 01       	movw	r26, r12
    ce7e:	bc 90       	ld	r11, X
    ce80:	b7 e0       	ldi	r27, 0x07	; 7
    ce82:	cb 2e       	mov	r12, r27
    ce84:	b4 e0       	ldi	r27, 0x04	; 4
    ce86:	db 2e       	mov	r13, r27
    ce88:	cc 0e       	add	r12, r28
    ce8a:	dd 1e       	adc	r13, r29
    ce8c:	c4 0e       	add	r12, r20
    ce8e:	d5 1e       	adc	r13, r21
    ce90:	d6 01       	movw	r26, r12
    ce92:	dc 90       	ld	r13, X
    ce94:	bd 10       	cpse	r11, r13
    ce96:	72 cf       	rjmp	.-284    	; 0xcd7c <_Z21Seperate_Out_Sub_Datav+0xe6>
    ce98:	4f 5f       	subi	r20, 0xFF	; 255
    ce9a:	5f 4f       	sbci	r21, 0xFF	; 255
    ce9c:	a7 e0       	ldi	r26, 0x07	; 7
    ce9e:	ca 2e       	mov	r12, r26
    cea0:	a4 e0       	ldi	r26, 0x04	; 4
    cea2:	da 2e       	mov	r13, r26
    cea4:	cc 0e       	add	r12, r28
    cea6:	dd 1e       	adc	r13, r29
    cea8:	c4 0e       	add	r12, r20
    ceaa:	d5 1e       	adc	r13, r21
    ceac:	d6 01       	movw	r26, r12
    ceae:	dc 90       	ld	r13, X
    ceb0:	d1 10       	cpse	r13, r1
    ceb2:	3a cf       	rjmp	.-396    	; 0xcd28 <_Z21Seperate_Out_Sub_Datav+0x92>
    ceb4:	6f 01       	movw	r12, r30
    ceb6:	46 01       	movw	r8, r12
    ceb8:	8e 1a       	sub	r8, r30
    ceba:	9f 0a       	sbc	r9, r31
    cebc:	d9 01       	movw	r26, r18
    cebe:	a0 53       	subi	r26, 0x30	; 48
    cec0:	b0 4f       	sbci	r27, 0xF0	; 240
    cec2:	bc 90       	ld	r11, X
    cec4:	bd e0       	ldi	r27, 0x0D	; 13
    cec6:	bb 16       	cp	r11, r27
    cec8:	79 f0       	breq	.+30     	; 0xcee8 <_Z21Seperate_Out_Sub_Datav+0x252>
    ceca:	2f 5f       	subi	r18, 0xFF	; 255
    cecc:	3f 4f       	sbci	r19, 0xFF	; 255
    cece:	24 3d       	cpi	r18, 0xD4	; 212
    ced0:	a3 e0       	ldi	r26, 0x03	; 3
    ced2:	3a 07       	cpc	r19, r26
    ced4:	09 f4       	brne	.+2      	; 0xced8 <_Z21Seperate_Out_Sub_Datav+0x242>
    ced6:	8b c0       	rjmp	.+278    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    ced8:	d9 01       	movw	r26, r18
    ceda:	a0 53       	subi	r26, 0x30	; 48
    cedc:	b0 4f       	sbci	r27, 0xF0	; 240
    cede:	bc 90       	ld	r11, X
    cee0:	d6 01       	movw	r26, r12
    cee2:	bd 92       	st	X+, r11
    cee4:	6d 01       	movw	r12, r26
    cee6:	e7 cf       	rjmp	.-50     	; 0xceb6 <_Z21Seperate_Out_Sub_Datav+0x220>
    cee8:	d4 01       	movw	r26, r8
    ceea:	ae 0f       	add	r26, r30
    ceec:	bf 1f       	adc	r27, r31
    ceee:	1c 92       	st	X, r1
    cef0:	df 01       	movw	r26, r30
    cef2:	0d 90       	ld	r0, X+
    cef4:	00 20       	and	r0, r0
    cef6:	e9 f7       	brne	.-6      	; 0xcef2 <_Z21Seperate_Out_Sub_Datav+0x25c>
    cef8:	11 97       	sbiw	r26, 0x01	; 1
    cefa:	ae 1b       	sub	r26, r30
    cefc:	bf 0b       	sbc	r27, r31
    cefe:	a2 30       	cpi	r26, 0x02	; 2
    cf00:	b1 05       	cpc	r27, r1
    cf02:	41 f0       	breq	.+16     	; 0xcf14 <_Z21Seperate_Out_Sub_Datav+0x27e>
    cf04:	08 f4       	brcc	.+2      	; 0xcf08 <_Z21Seperate_Out_Sub_Datav+0x272>
    cf06:	73 c0       	rjmp	.+230    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cf08:	a3 30       	cpi	r26, 0x03	; 3
    cf0a:	b1 05       	cpc	r27, r1
    cf0c:	39 f0       	breq	.+14     	; 0xcf1c <_Z21Seperate_Out_Sub_Datav+0x286>
    cf0e:	14 97       	sbiw	r26, 0x04	; 4
    cf10:	a9 f0       	breq	.+42     	; 0xcf3c <_Z21Seperate_Out_Sub_Datav+0x2a6>
    cf12:	2f c0       	rjmp	.+94     	; 0xcf72 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cf14:	80 81       	ld	r24, Z
    cf16:	90 e0       	ldi	r25, 0x00	; 0
    cf18:	c0 97       	sbiw	r24, 0x30	; 48
    cf1a:	0d c0       	rjmp	.+26     	; 0xcf36 <_Z21Seperate_Out_Sub_Datav+0x2a0>
    cf1c:	80 81       	ld	r24, Z
    cf1e:	90 e0       	ldi	r25, 0x00	; 0
    cf20:	c0 97       	sbiw	r24, 0x30	; 48
    cf22:	f8 9e       	mul	r15, r24
    cf24:	d0 01       	movw	r26, r0
    cf26:	f9 9e       	mul	r15, r25
    cf28:	b0 0d       	add	r27, r0
    cf2a:	11 24       	eor	r1, r1
    cf2c:	81 81       	ldd	r24, Z+1	; 0x01
    cf2e:	90 e0       	ldi	r25, 0x00	; 0
    cf30:	c0 97       	sbiw	r24, 0x30	; 48
    cf32:	8a 0f       	add	r24, r26
    cf34:	9b 1f       	adc	r25, r27
    cf36:	00 97       	sbiw	r24, 0x00	; 0
    cf38:	e1 f4       	brne	.+56     	; 0xcf72 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cf3a:	59 c0       	rjmp	.+178    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cf3c:	a0 81       	ld	r26, Z
    cf3e:	b0 e0       	ldi	r27, 0x00	; 0
    cf40:	d0 97       	sbiw	r26, 0x30	; 48
    cf42:	ea 9e       	mul	r14, r26
    cf44:	c0 01       	movw	r24, r0
    cf46:	eb 9e       	mul	r14, r27
    cf48:	90 0d       	add	r25, r0
    cf4a:	11 24       	eor	r1, r1
    cf4c:	a1 81       	ldd	r26, Z+1	; 0x01
    cf4e:	b0 e0       	ldi	r27, 0x00	; 0
    cf50:	d0 97       	sbiw	r26, 0x30	; 48
    cf52:	fa 9e       	mul	r15, r26
    cf54:	60 01       	movw	r12, r0
    cf56:	fb 9e       	mul	r15, r27
    cf58:	d0 0c       	add	r13, r0
    cf5a:	11 24       	eor	r1, r1
    cf5c:	8c 0d       	add	r24, r12
    cf5e:	9d 1d       	adc	r25, r13
    cf60:	a2 81       	ldd	r26, Z+2	; 0x02
    cf62:	b0 e0       	ldi	r27, 0x00	; 0
    cf64:	d0 97       	sbiw	r26, 0x30	; 48
    cf66:	8a 0f       	add	r24, r26
    cf68:	9b 1f       	adc	r25, r27
    cf6a:	85 3d       	cpi	r24, 0xD5	; 213
    cf6c:	b3 e0       	ldi	r27, 0x03	; 3
    cf6e:	9b 07       	cpc	r25, r27
    cf70:	f0 f5       	brcc	.+124    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cf72:	2e 5f       	subi	r18, 0xFE	; 254
    cf74:	3f 4f       	sbci	r19, 0xFF	; 255
    cf76:	24 3d       	cpi	r18, 0xD4	; 212
    cf78:	a3 e0       	ldi	r26, 0x03	; 3
    cf7a:	3a 07       	cpc	r19, r26
    cf7c:	c0 f5       	brcc	.+112    	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cf7e:	58 01       	movw	r10, r16
    cf80:	65 01       	movw	r12, r10
    cf82:	c0 1a       	sub	r12, r16
    cf84:	d1 0a       	sbc	r13, r17
    cf86:	c8 16       	cp	r12, r24
    cf88:	d9 06       	cpc	r13, r25
    cf8a:	18 f0       	brcs	.+6      	; 0xcf92 <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cf8c:	81 2c       	mov	r8, r1
    cf8e:	91 2c       	mov	r9, r1
    cf90:	cb ce       	rjmp	.-618    	; 0xcd28 <_Z21Seperate_Out_Sub_Datav+0x92>
    cf92:	69 01       	movw	r12, r18
    cf94:	bf ef       	ldi	r27, 0xFF	; 255
    cf96:	cb 1a       	sub	r12, r27
    cf98:	db 0a       	sbc	r13, r27
    cf9a:	20 53       	subi	r18, 0x30	; 48
    cf9c:	30 4f       	sbci	r19, 0xF0	; 240
    cf9e:	d9 01       	movw	r26, r18
    cfa0:	2c 91       	ld	r18, X
    cfa2:	d5 01       	movw	r26, r10
    cfa4:	2d 93       	st	X+, r18
    cfa6:	5d 01       	movw	r10, r26
    cfa8:	b4 ed       	ldi	r27, 0xD4	; 212
    cfaa:	cb 16       	cp	r12, r27
    cfac:	b3 e0       	ldi	r27, 0x03	; 3
    cfae:	db 06       	cpc	r13, r27
    cfb0:	f1 f0       	breq	.+60     	; 0xcfee <_Z21Seperate_Out_Sub_Datav+0x358>
    cfb2:	96 01       	movw	r18, r12
    cfb4:	e5 cf       	rjmp	.-54     	; 0xcf80 <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cfb6:	8e e6       	ldi	r24, 0x6E	; 110
    cfb8:	e2 e6       	ldi	r30, 0x62	; 98
    cfba:	ff e0       	ldi	r31, 0x0F	; 15
    cfbc:	df 01       	movw	r26, r30
    cfbe:	1d 92       	st	X+, r1
    cfc0:	8a 95       	dec	r24
    cfc2:	e9 f7       	brne	.-6      	; 0xcfbe <_Z21Seperate_Out_Sub_Datav+0x328>
    cfc4:	84 ed       	ldi	r24, 0xD4	; 212
    cfc6:	93 e0       	ldi	r25, 0x03	; 3
    cfc8:	e0 ed       	ldi	r30, 0xD0	; 208
    cfca:	ff e0       	ldi	r31, 0x0F	; 15
    cfcc:	df 01       	movw	r26, r30
    cfce:	9c 01       	movw	r18, r24
    cfd0:	1d 92       	st	X+, r1
    cfd2:	21 50       	subi	r18, 0x01	; 1
    cfd4:	30 40       	sbci	r19, 0x00	; 0
    cfd6:	e1 f7       	brne	.-8      	; 0xcfd0 <_Z21Seperate_Out_Sub_Datav+0x33a>
    cfd8:	82 e6       	ldi	r24, 0x62	; 98
    cfda:	9f e0       	ldi	r25, 0x0F	; 15
    cfdc:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    cfe0:	b8 01       	movw	r22, r16
    cfe2:	80 ed       	ldi	r24, 0xD0	; 208
    cfe4:	9f e0       	ldi	r25, 0x0F	; 15
    cfe6:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    cfea:	81 e0       	ldi	r24, 0x01	; 1
    cfec:	01 c0       	rjmp	.+2      	; 0xcff0 <_Z21Seperate_Out_Sub_Datav+0x35a>
    cfee:	80 e0       	ldi	r24, 0x00	; 0
    cff0:	c0 5d       	subi	r28, 0xD0	; 208
    cff2:	db 4f       	sbci	r29, 0xFB	; 251
    cff4:	0f b6       	in	r0, 0x3f	; 63
    cff6:	f8 94       	cli
    cff8:	de bf       	out	0x3e, r29	; 62
    cffa:	0f be       	out	0x3f, r0	; 63
    cffc:	cd bf       	out	0x3d, r28	; 61
    cffe:	df 91       	pop	r29
    d000:	cf 91       	pop	r28
    d002:	1f 91       	pop	r17
    d004:	0f 91       	pop	r16
    d006:	ff 90       	pop	r15
    d008:	ef 90       	pop	r14
    d00a:	df 90       	pop	r13
    d00c:	cf 90       	pop	r12
    d00e:	bf 90       	pop	r11
    d010:	af 90       	pop	r10
    d012:	9f 90       	pop	r9
    d014:	8f 90       	pop	r8
    d016:	08 95       	ret

0000d018 <_Z12Reset_Bufferv>:
    d018:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    d01c:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    d020:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    d024:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    d028:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    d02c:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    d030:	84 ed       	ldi	r24, 0xD4	; 212
    d032:	93 e0       	ldi	r25, 0x03	; 3
    d034:	e0 ed       	ldi	r30, 0xD0	; 208
    d036:	ff e0       	ldi	r31, 0x0F	; 15
    d038:	df 01       	movw	r26, r30
    d03a:	9c 01       	movw	r18, r24
    d03c:	1d 92       	st	X+, r1
    d03e:	21 50       	subi	r18, 0x01	; 1
    d040:	30 40       	sbci	r19, 0x00	; 0
    d042:	e1 f7       	brne	.-8      	; 0xd03c <_Z12Reset_Bufferv+0x24>
    d044:	08 95       	ret

0000d046 <_GLOBAL__sub_I_g_uTick>:
    d046:	24 e0       	ldi	r18, 0x04	; 4
    d048:	44 e1       	ldi	r20, 0x14	; 20
    d04a:	67 e2       	ldi	r22, 0x27	; 39
    d04c:	83 ec       	ldi	r24, 0xC3	; 195
    d04e:	9c e0       	ldi	r25, 0x0C	; 12
    d050:	0e 94 84 da 	call	0x1b508	; 0x1b508 <_ZN17LiquidCrystal_I2CC1Ehhh>
    d054:	29 e4       	ldi	r18, 0x49	; 73
    d056:	38 e1       	ldi	r19, 0x18	; 24
    d058:	42 e0       	ldi	r20, 0x02	; 2
    d05a:	65 e3       	ldi	r22, 0x35	; 53
    d05c:	8b e7       	ldi	r24, 0x7B	; 123
    d05e:	9c e0       	ldi	r25, 0x0C	; 12
    d060:	0c 94 cc dd 	jmp	0x1bb98	; 0x1bb98 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000d064 <_Z14Lora_Data_Sendh>:
    d064:	cf 93       	push	r28
    d066:	c8 2f       	mov	r28, r24
    d068:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d06c:	81 30       	cpi	r24, 0x01	; 1
    d06e:	89 f4       	brne	.+34     	; 0xd092 <_Z14Lora_Data_Sendh+0x2e>
    d070:	69 e6       	ldi	r22, 0x69	; 105
    d072:	74 e2       	ldi	r23, 0x24	; 36
    d074:	86 ec       	ldi	r24, 0xC6	; 198
    d076:	94 e1       	ldi	r25, 0x14	; 20
    d078:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d07c:	4a e0       	ldi	r20, 0x0A	; 10
    d07e:	50 e0       	ldi	r21, 0x00	; 0
    d080:	6c 2f       	mov	r22, r28
    d082:	86 ec       	ldi	r24, 0xC6	; 198
    d084:	94 e1       	ldi	r25, 0x14	; 20
    d086:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    d08a:	86 ec       	ldi	r24, 0xC6	; 198
    d08c:	94 e1       	ldi	r25, 0x14	; 20
    d08e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d092:	4c 2f       	mov	r20, r28
    d094:	65 ef       	ldi	r22, 0xF5	; 245
    d096:	73 e1       	ldi	r23, 0x13	; 19
    d098:	8b e7       	ldi	r24, 0x7B	; 123
    d09a:	9c e0       	ldi	r25, 0x0C	; 12
    d09c:	0e 94 bf df 	call	0x1bf7e	; 0x1bf7e <_ZN7RH_RF954sendEPKhh>
    d0a0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d0a4:	81 30       	cpi	r24, 0x01	; 1
    d0a6:	51 f4       	brne	.+20     	; 0xd0bc <_Z14Lora_Data_Sendh+0x58>
    d0a8:	6c e5       	ldi	r22, 0x5C	; 92
    d0aa:	74 e2       	ldi	r23, 0x24	; 36
    d0ac:	86 ec       	ldi	r24, 0xC6	; 198
    d0ae:	94 e1       	ldi	r25, 0x14	; 20
    d0b0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d0b4:	86 ec       	ldi	r24, 0xC6	; 198
    d0b6:	94 e1       	ldi	r25, 0x14	; 20
    d0b8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d0bc:	64 ef       	ldi	r22, 0xF4	; 244
    d0be:	71 e0       	ldi	r23, 0x01	; 1
    d0c0:	8b e7       	ldi	r24, 0x7B	; 123
    d0c2:	9c e0       	ldi	r25, 0x0C	; 12
    d0c4:	0e 94 2b dc 	call	0x1b856	; 0x1b856 <_ZN15RHGenericDriver14waitPacketSentEj>
    d0c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d0cc:	81 30       	cpi	r24, 0x01	; 1
    d0ce:	39 f4       	brne	.+14     	; 0xd0de <_Z14Lora_Data_Sendh+0x7a>
    d0d0:	62 e5       	ldi	r22, 0x52	; 82
    d0d2:	74 e2       	ldi	r23, 0x24	; 36
    d0d4:	86 ec       	ldi	r24, 0xC6	; 198
    d0d6:	94 e1       	ldi	r25, 0x14	; 20
    d0d8:	cf 91       	pop	r28
    d0da:	0c 94 87 d5 	jmp	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d0de:	cf 91       	pop	r28
    d0e0:	08 95       	ret

0000d0e2 <_Z15Send_AT_CommandPcS_S_jh>:
    d0e2:	4f 92       	push	r4
    d0e4:	5f 92       	push	r5
    d0e6:	6f 92       	push	r6
    d0e8:	7f 92       	push	r7
    d0ea:	8f 92       	push	r8
    d0ec:	9f 92       	push	r9
    d0ee:	af 92       	push	r10
    d0f0:	bf 92       	push	r11
    d0f2:	cf 92       	push	r12
    d0f4:	df 92       	push	r13
    d0f6:	ef 92       	push	r14
    d0f8:	ff 92       	push	r15
    d0fa:	0f 93       	push	r16
    d0fc:	1f 93       	push	r17
    d0fe:	cf 93       	push	r28
    d100:	df 93       	push	r29
    d102:	1f 92       	push	r1
    d104:	1f 92       	push	r1
    d106:	cd b7       	in	r28, 0x3d	; 61
    d108:	de b7       	in	r29, 0x3e	; 62
    d10a:	5c 01       	movw	r10, r24
    d10c:	7b 01       	movw	r14, r22
    d10e:	6a 01       	movw	r12, r20
    d110:	89 01       	movw	r16, r18
    d112:	89 2b       	or	r24, r25
    d114:	31 f0       	breq	.+12     	; 0xd122 <_Z15Send_AT_CommandPcS_S_jh+0x40>
    d116:	64 e6       	ldi	r22, 0x64	; 100
    d118:	70 e0       	ldi	r23, 0x00	; 0
    d11a:	80 e0       	ldi	r24, 0x00	; 0
    d11c:	90 e0       	ldi	r25, 0x00	; 0
    d11e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d122:	10 93 e3 0c 	sts	0x0CE3, r17	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d126:	00 93 e2 0c 	sts	0x0CE2, r16	; 0x800ce2 <Interrupt_Time_Out>
    d12a:	a1 14       	cp	r10, r1
    d12c:	b1 04       	cpc	r11, r1
    d12e:	31 f0       	breq	.+12     	; 0xd13c <_Z15Send_AT_CommandPcS_S_jh+0x5a>
    d130:	73 df       	rcall	.-282    	; 0xd018 <_Z12Reset_Bufferv>
    d132:	b5 01       	movw	r22, r10
    d134:	83 e8       	ldi	r24, 0x83	; 131
    d136:	96 e1       	ldi	r25, 0x16	; 22
    d138:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    d13c:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    d140:	4b 01       	movw	r8, r22
    d142:	5c 01       	movw	r10, r24
    d144:	28 01       	movw	r4, r16
    d146:	61 2c       	mov	r6, r1
    d148:	71 2c       	mov	r7, r1
    d14a:	b7 01       	movw	r22, r14
    d14c:	80 ed       	ldi	r24, 0xD0	; 208
    d14e:	9f e0       	ldi	r25, 0x0F	; 15
    d150:	c1 14       	cp	r12, r1
    d152:	d1 04       	cpc	r13, r1
    d154:	39 f0       	breq	.+14     	; 0xd164 <_Z15Send_AT_CommandPcS_S_jh+0x82>
    d156:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    d15a:	89 2b       	or	r24, r25
    d15c:	b9 f4       	brne	.+46     	; 0xd18c <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d15e:	b6 01       	movw	r22, r12
    d160:	80 ed       	ldi	r24, 0xD0	; 208
    d162:	9f e0       	ldi	r25, 0x0F	; 15
    d164:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    d168:	89 2b       	or	r24, r25
    d16a:	81 f4       	brne	.+32     	; 0xd18c <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d16c:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    d170:	dc 01       	movw	r26, r24
    d172:	cb 01       	movw	r24, r22
    d174:	88 19       	sub	r24, r8
    d176:	99 09       	sbc	r25, r9
    d178:	aa 09       	sbc	r26, r10
    d17a:	bb 09       	sbc	r27, r11
    d17c:	84 15       	cp	r24, r4
    d17e:	95 05       	cpc	r25, r5
    d180:	a6 05       	cpc	r26, r6
    d182:	b7 05       	cpc	r27, r7
    d184:	10 f3       	brcs	.-60     	; 0xd14a <_Z15Send_AT_CommandPcS_S_jh+0x68>
    d186:	00 e0       	ldi	r16, 0x00	; 0
    d188:	10 e0       	ldi	r17, 0x00	; 0
    d18a:	02 c0       	rjmp	.+4      	; 0xd190 <_Z15Send_AT_CommandPcS_S_jh+0xae>
    d18c:	01 e0       	ldi	r16, 0x01	; 1
    d18e:	10 e0       	ldi	r17, 0x00	; 0
    d190:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    d194:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    d198:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    d19c:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    d1a0:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    d1a4:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    d1a8:	84 e1       	ldi	r24, 0x14	; 20
    d1aa:	95 e0       	ldi	r25, 0x05	; 5
    d1ac:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d1b0:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
    d1b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d1b8:	81 30       	cpi	r24, 0x01	; 1
    d1ba:	51 f4       	brne	.+20     	; 0xd1d0 <_Z15Send_AT_CommandPcS_S_jh+0xee>
    d1bc:	60 ed       	ldi	r22, 0xD0	; 208
    d1be:	7f e0       	ldi	r23, 0x0F	; 15
    d1c0:	86 ec       	ldi	r24, 0xC6	; 198
    d1c2:	94 e1       	ldi	r25, 0x14	; 20
    d1c4:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    d1c8:	86 ec       	ldi	r24, 0xC6	; 198
    d1ca:	94 e1       	ldi	r25, 0x14	; 20
    d1cc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d1d0:	64 e6       	ldi	r22, 0x64	; 100
    d1d2:	70 e0       	ldi	r23, 0x00	; 0
    d1d4:	80 e0       	ldi	r24, 0x00	; 0
    d1d6:	90 e0       	ldi	r25, 0x00	; 0
    d1d8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d1dc:	80 91 e1 0c 	lds	r24, 0x0CE1	; 0x800ce1 <Reading_Time>
    d1e0:	81 11       	cpse	r24, r1
    d1e2:	0a c0       	rjmp	.+20     	; 0xd1f8 <_Z15Send_AT_CommandPcS_S_jh+0x116>
    d1e4:	84 ed       	ldi	r24, 0xD4	; 212
    d1e6:	93 e0       	ldi	r25, 0x03	; 3
    d1e8:	e0 ed       	ldi	r30, 0xD0	; 208
    d1ea:	ff e0       	ldi	r31, 0x0F	; 15
    d1ec:	df 01       	movw	r26, r30
    d1ee:	9c 01       	movw	r18, r24
    d1f0:	1d 92       	st	X+, r1
    d1f2:	21 50       	subi	r18, 0x01	; 1
    d1f4:	30 40       	sbci	r19, 0x00	; 0
    d1f6:	e1 f7       	brne	.-8      	; 0xd1f0 <_Z15Send_AT_CommandPcS_S_jh+0x10e>
    d1f8:	0e 94 9c 7f 	call	0xff38	; 0xff38 <_Z17Clear_Serial_Datav>
    d1fc:	01 15       	cp	r16, r1
    d1fe:	11 05       	cpc	r17, r1
    d200:	89 f4       	brne	.+34     	; 0xd224 <_Z15Send_AT_CommandPcS_S_jh+0x142>
    d202:	1a 82       	std	Y+2, r1	; 0x02
    d204:	19 82       	std	Y+1, r1	; 0x01
    d206:	69 e9       	ldi	r22, 0x99	; 153
    d208:	73 e0       	ldi	r23, 0x03	; 3
    d20a:	86 ec       	ldi	r24, 0xC6	; 198
    d20c:	94 e1       	ldi	r25, 0x14	; 20
    d20e:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    d212:	8a e1       	ldi	r24, 0x1A	; 26
    d214:	89 83       	std	Y+1, r24	; 0x01
    d216:	be 01       	movw	r22, r28
    d218:	6f 5f       	subi	r22, 0xFF	; 255
    d21a:	7f 4f       	sbci	r23, 0xFF	; 255
    d21c:	83 e8       	ldi	r24, 0x83	; 131
    d21e:	96 e1       	ldi	r25, 0x16	; 22
    d220:	0e 94 7a d5 	call	0x1aaf4	; 0x1aaf4 <_ZN5Print5printEPKc>
    d224:	80 2f       	mov	r24, r16
    d226:	0f 90       	pop	r0
    d228:	0f 90       	pop	r0
    d22a:	df 91       	pop	r29
    d22c:	cf 91       	pop	r28
    d22e:	1f 91       	pop	r17
    d230:	0f 91       	pop	r16
    d232:	ff 90       	pop	r15
    d234:	ef 90       	pop	r14
    d236:	df 90       	pop	r13
    d238:	cf 90       	pop	r12
    d23a:	bf 90       	pop	r11
    d23c:	af 90       	pop	r10
    d23e:	9f 90       	pop	r9
    d240:	8f 90       	pop	r8
    d242:	7f 90       	pop	r7
    d244:	6f 90       	pop	r6
    d246:	5f 90       	pop	r5
    d248:	4f 90       	pop	r4
    d24a:	08 95       	ret

0000d24c <_Z8Gsm_Initv>:
    d24c:	0f 93       	push	r16
    d24e:	e4 de       	rcall	.-568    	; 0xd018 <_Z12Reset_Bufferv>
    d250:	69 e3       	ldi	r22, 0x39	; 57
    d252:	74 e2       	ldi	r23, 0x24	; 36
    d254:	83 e8       	ldi	r24, 0x83	; 131
    d256:	96 e1       	ldi	r25, 0x16	; 22
    d258:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d25c:	02 e0       	ldi	r16, 0x02	; 2
    d25e:	28 ee       	ldi	r18, 0xE8	; 232
    d260:	33 e0       	ldi	r19, 0x03	; 3
    d262:	40 e0       	ldi	r20, 0x00	; 0
    d264:	50 e0       	ldi	r21, 0x00	; 0
    d266:	6e e1       	ldi	r22, 0x1E	; 30
    d268:	73 e0       	ldi	r23, 0x03	; 3
    d26a:	80 e0       	ldi	r24, 0x00	; 0
    d26c:	90 e0       	ldi	r25, 0x00	; 0
    d26e:	39 df       	rcall	.-398    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d270:	88 23       	and	r24, r24
    d272:	01 f1       	breq	.+64     	; 0xd2b4 <_Z8Gsm_Initv+0x68>
    d274:	d1 de       	rcall	.-606    	; 0xd018 <_Z12Reset_Bufferv>
    d276:	6b e2       	ldi	r22, 0x2B	; 43
    d278:	74 e2       	ldi	r23, 0x24	; 36
    d27a:	83 e8       	ldi	r24, 0x83	; 131
    d27c:	96 e1       	ldi	r25, 0x16	; 22
    d27e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d282:	68 ee       	ldi	r22, 0xE8	; 232
    d284:	73 e0       	ldi	r23, 0x03	; 3
    d286:	80 e0       	ldi	r24, 0x00	; 0
    d288:	90 e0       	ldi	r25, 0x00	; 0
    d28a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d28e:	c4 de       	rcall	.-632    	; 0xd018 <_Z12Reset_Bufferv>
    d290:	61 e2       	ldi	r22, 0x21	; 33
    d292:	74 e2       	ldi	r23, 0x24	; 36
    d294:	83 e8       	ldi	r24, 0x83	; 131
    d296:	96 e1       	ldi	r25, 0x16	; 22
    d298:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d29c:	01 e0       	ldi	r16, 0x01	; 1
    d29e:	28 eb       	ldi	r18, 0xB8	; 184
    d2a0:	3b e0       	ldi	r19, 0x0B	; 11
    d2a2:	40 e0       	ldi	r20, 0x00	; 0
    d2a4:	50 e0       	ldi	r21, 0x00	; 0
    d2a6:	6e e1       	ldi	r22, 0x1E	; 30
    d2a8:	73 e0       	ldi	r23, 0x03	; 3
    d2aa:	80 e0       	ldi	r24, 0x00	; 0
    d2ac:	90 e0       	ldi	r25, 0x00	; 0
    d2ae:	19 df       	rcall	.-462    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d2b0:	81 e0       	ldi	r24, 0x01	; 1
    d2b2:	01 c0       	rjmp	.+2      	; 0xd2b6 <_Z8Gsm_Initv+0x6a>
    d2b4:	80 e0       	ldi	r24, 0x00	; 0
    d2b6:	0f 91       	pop	r16
    d2b8:	08 95       	ret

0000d2ba <_Z20Check_Gsm_Connectionv>:
    d2ba:	0f 93       	push	r16
    d2bc:	ad de       	rcall	.-678    	; 0xd018 <_Z12Reset_Bufferv>
    d2be:	66 e1       	ldi	r22, 0x16	; 22
    d2c0:	74 e2       	ldi	r23, 0x24	; 36
    d2c2:	83 e8       	ldi	r24, 0x83	; 131
    d2c4:	96 e1       	ldi	r25, 0x16	; 22
    d2c6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2ca:	02 e0       	ldi	r16, 0x02	; 2
    d2cc:	28 e8       	ldi	r18, 0x88	; 136
    d2ce:	33 e1       	ldi	r19, 0x13	; 19
    d2d0:	40 e0       	ldi	r20, 0x00	; 0
    d2d2:	50 e0       	ldi	r21, 0x00	; 0
    d2d4:	6e e1       	ldi	r22, 0x1E	; 30
    d2d6:	73 e0       	ldi	r23, 0x03	; 3
    d2d8:	80 e0       	ldi	r24, 0x00	; 0
    d2da:	90 e0       	ldi	r25, 0x00	; 0
    d2dc:	02 df       	rcall	.-508    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d2de:	9c de       	rcall	.-712    	; 0xd018 <_Z12Reset_Bufferv>
    d2e0:	6c e0       	ldi	r22, 0x0C	; 12
    d2e2:	74 e2       	ldi	r23, 0x24	; 36
    d2e4:	83 e8       	ldi	r24, 0x83	; 131
    d2e6:	96 e1       	ldi	r25, 0x16	; 22
    d2e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2ec:	28 eb       	ldi	r18, 0xB8	; 184
    d2ee:	3b e0       	ldi	r19, 0x0B	; 11
    d2f0:	40 e0       	ldi	r20, 0x00	; 0
    d2f2:	50 e0       	ldi	r21, 0x00	; 0
    d2f4:	6e e1       	ldi	r22, 0x1E	; 30
    d2f6:	73 e0       	ldi	r23, 0x03	; 3
    d2f8:	80 e0       	ldi	r24, 0x00	; 0
    d2fa:	90 e0       	ldi	r25, 0x00	; 0
    d2fc:	f2 de       	rcall	.-540    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d2fe:	8c de       	rcall	.-744    	; 0xd018 <_Z12Reset_Bufferv>
    d300:	63 e0       	ldi	r22, 0x03	; 3
    d302:	74 e2       	ldi	r23, 0x24	; 36
    d304:	83 e8       	ldi	r24, 0x83	; 131
    d306:	96 e1       	ldi	r25, 0x16	; 22
    d308:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d30c:	28 eb       	ldi	r18, 0xB8	; 184
    d30e:	3b e0       	ldi	r19, 0x0B	; 11
    d310:	4c ea       	ldi	r20, 0xAC	; 172
    d312:	53 e0       	ldi	r21, 0x03	; 3
    d314:	67 eb       	ldi	r22, 0xB7	; 183
    d316:	73 e0       	ldi	r23, 0x03	; 3
    d318:	80 e0       	ldi	r24, 0x00	; 0
    d31a:	90 e0       	ldi	r25, 0x00	; 0
    d31c:	e2 de       	rcall	.-572    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d31e:	81 11       	cpse	r24, r1
    d320:	26 c0       	rjmp	.+76     	; 0xd36e <_Z20Check_Gsm_Connectionv+0xb4>
    d322:	68 eb       	ldi	r22, 0xB8	; 184
    d324:	7b e0       	ldi	r23, 0x0B	; 11
    d326:	80 e0       	ldi	r24, 0x00	; 0
    d328:	90 e0       	ldi	r25, 0x00	; 0
    d32a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d32e:	74 de       	rcall	.-792    	; 0xd018 <_Z12Reset_Bufferv>
    d330:	69 ef       	ldi	r22, 0xF9	; 249
    d332:	73 e2       	ldi	r23, 0x23	; 35
    d334:	83 e8       	ldi	r24, 0x83	; 131
    d336:	96 e1       	ldi	r25, 0x16	; 22
    d338:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d33c:	28 eb       	ldi	r18, 0xB8	; 184
    d33e:	3b e0       	ldi	r19, 0x0B	; 11
    d340:	40 e0       	ldi	r20, 0x00	; 0
    d342:	50 e0       	ldi	r21, 0x00	; 0
    d344:	6e e1       	ldi	r22, 0x1E	; 30
    d346:	73 e0       	ldi	r23, 0x03	; 3
    d348:	80 e0       	ldi	r24, 0x00	; 0
    d34a:	90 e0       	ldi	r25, 0x00	; 0
    d34c:	ca de       	rcall	.-620    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d34e:	64 de       	rcall	.-824    	; 0xd018 <_Z12Reset_Bufferv>
    d350:	60 ef       	ldi	r22, 0xF0	; 240
    d352:	73 e2       	ldi	r23, 0x23	; 35
    d354:	83 e8       	ldi	r24, 0x83	; 131
    d356:	96 e1       	ldi	r25, 0x16	; 22
    d358:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d35c:	28 eb       	ldi	r18, 0xB8	; 184
    d35e:	3b e0       	ldi	r19, 0x0B	; 11
    d360:	4c ea       	ldi	r20, 0xAC	; 172
    d362:	53 e0       	ldi	r21, 0x03	; 3
    d364:	67 eb       	ldi	r22, 0xB7	; 183
    d366:	73 e0       	ldi	r23, 0x03	; 3
    d368:	80 e0       	ldi	r24, 0x00	; 0
    d36a:	90 e0       	ldi	r25, 0x00	; 0
    d36c:	ba de       	rcall	.-652    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d36e:	68 ee       	ldi	r22, 0xE8	; 232
    d370:	73 e0       	ldi	r23, 0x03	; 3
    d372:	80 e0       	ldi	r24, 0x00	; 0
    d374:	90 e0       	ldi	r25, 0x00	; 0
    d376:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d37a:	4e de       	rcall	.-868    	; 0xd018 <_Z12Reset_Bufferv>
    d37c:	65 ee       	ldi	r22, 0xE5	; 229
    d37e:	73 e2       	ldi	r23, 0x23	; 35
    d380:	83 e8       	ldi	r24, 0x83	; 131
    d382:	96 e1       	ldi	r25, 0x16	; 22
    d384:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d388:	02 e0       	ldi	r16, 0x02	; 2
    d38a:	28 eb       	ldi	r18, 0xB8	; 184
    d38c:	3b e0       	ldi	r19, 0x0B	; 11
    d38e:	40 e0       	ldi	r20, 0x00	; 0
    d390:	50 e0       	ldi	r21, 0x00	; 0
    d392:	6e e1       	ldi	r22, 0x1E	; 30
    d394:	73 e0       	ldi	r23, 0x03	; 3
    d396:	80 e0       	ldi	r24, 0x00	; 0
    d398:	90 e0       	ldi	r25, 0x00	; 0
    d39a:	a3 de       	rcall	.-698    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d39c:	3d de       	rcall	.-902    	; 0xd018 <_Z12Reset_Bufferv>
    d39e:	6b ed       	ldi	r22, 0xDB	; 219
    d3a0:	73 e2       	ldi	r23, 0x23	; 35
    d3a2:	83 e8       	ldi	r24, 0x83	; 131
    d3a4:	96 e1       	ldi	r25, 0x16	; 22
    d3a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3aa:	28 eb       	ldi	r18, 0xB8	; 184
    d3ac:	3b e0       	ldi	r19, 0x0B	; 11
    d3ae:	42 ec       	ldi	r20, 0xC2	; 194
    d3b0:	53 e0       	ldi	r21, 0x03	; 3
    d3b2:	6e ec       	ldi	r22, 0xCE	; 206
    d3b4:	73 e0       	ldi	r23, 0x03	; 3
    d3b6:	80 e0       	ldi	r24, 0x00	; 0
    d3b8:	90 e0       	ldi	r25, 0x00	; 0
    d3ba:	93 de       	rcall	.-730    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d3bc:	81 11       	cpse	r24, r1
    d3be:	2b c0       	rjmp	.+86     	; 0xd416 <_Z20Check_Gsm_Connectionv+0x15c>
    d3c0:	68 ee       	ldi	r22, 0xE8	; 232
    d3c2:	73 e0       	ldi	r23, 0x03	; 3
    d3c4:	80 e0       	ldi	r24, 0x00	; 0
    d3c6:	90 e0       	ldi	r25, 0x00	; 0
    d3c8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d3cc:	25 de       	rcall	.-950    	; 0xd018 <_Z12Reset_Bufferv>
    d3ce:	60 ed       	ldi	r22, 0xD0	; 208
    d3d0:	73 e2       	ldi	r23, 0x23	; 35
    d3d2:	83 e8       	ldi	r24, 0x83	; 131
    d3d4:	96 e1       	ldi	r25, 0x16	; 22
    d3d6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3da:	28 eb       	ldi	r18, 0xB8	; 184
    d3dc:	3b e0       	ldi	r19, 0x0B	; 11
    d3de:	40 e0       	ldi	r20, 0x00	; 0
    d3e0:	50 e0       	ldi	r21, 0x00	; 0
    d3e2:	6e e1       	ldi	r22, 0x1E	; 30
    d3e4:	73 e0       	ldi	r23, 0x03	; 3
    d3e6:	80 e0       	ldi	r24, 0x00	; 0
    d3e8:	90 e0       	ldi	r25, 0x00	; 0
    d3ea:	7b de       	rcall	.-778    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d3ec:	15 de       	rcall	.-982    	; 0xd018 <_Z12Reset_Bufferv>
    d3ee:	66 ec       	ldi	r22, 0xC6	; 198
    d3f0:	73 e2       	ldi	r23, 0x23	; 35
    d3f2:	83 e8       	ldi	r24, 0x83	; 131
    d3f4:	96 e1       	ldi	r25, 0x16	; 22
    d3f6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3fa:	28 eb       	ldi	r18, 0xB8	; 184
    d3fc:	3b e0       	ldi	r19, 0x0B	; 11
    d3fe:	42 ec       	ldi	r20, 0xC2	; 194
    d400:	53 e0       	ldi	r21, 0x03	; 3
    d402:	6e ec       	ldi	r22, 0xCE	; 206
    d404:	73 e0       	ldi	r23, 0x03	; 3
    d406:	80 e0       	ldi	r24, 0x00	; 0
    d408:	90 e0       	ldi	r25, 0x00	; 0
    d40a:	6b de       	rcall	.-810    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d40c:	91 e0       	ldi	r25, 0x01	; 1
    d40e:	81 11       	cpse	r24, r1
    d410:	03 c0       	rjmp	.+6      	; 0xd418 <_Z20Check_Gsm_Connectionv+0x15e>
    d412:	90 e0       	ldi	r25, 0x00	; 0
    d414:	01 c0       	rjmp	.+2      	; 0xd418 <_Z20Check_Gsm_Connectionv+0x15e>
    d416:	91 e0       	ldi	r25, 0x01	; 1
    d418:	89 2f       	mov	r24, r25
    d41a:	0f 91       	pop	r16
    d41c:	08 95       	ret

0000d41e <_Z17Get_Operator_NamePc>:
    d41e:	0f 93       	push	r16
    d420:	cf 93       	push	r28
    d422:	df 93       	push	r29
    d424:	ec 01       	movw	r28, r24
    d426:	f8 dd       	rcall	.-1040   	; 0xd018 <_Z12Reset_Bufferv>
    d428:	81 e0       	ldi	r24, 0x01	; 1
    d42a:	80 93 e1 0c 	sts	0x0CE1, r24	; 0x800ce1 <Reading_Time>
    d42e:	6d eb       	ldi	r22, 0xBD	; 189
    d430:	73 e2       	ldi	r23, 0x23	; 35
    d432:	83 e8       	ldi	r24, 0x83	; 131
    d434:	96 e1       	ldi	r25, 0x16	; 22
    d436:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d43a:	02 e0       	ldi	r16, 0x02	; 2
    d43c:	28 eb       	ldi	r18, 0xB8	; 184
    d43e:	3b e0       	ldi	r19, 0x0B	; 11
    d440:	40 e0       	ldi	r20, 0x00	; 0
    d442:	50 e0       	ldi	r21, 0x00	; 0
    d444:	6e e1       	ldi	r22, 0x1E	; 30
    d446:	73 e0       	ldi	r23, 0x03	; 3
    d448:	80 e0       	ldi	r24, 0x00	; 0
    d44a:	90 e0       	ldi	r25, 0x00	; 0
    d44c:	4a de       	rcall	.-876    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d44e:	60 ed       	ldi	r22, 0xD0	; 208
    d450:	7f e0       	ldi	r23, 0x0F	; 15
    d452:	ce 01       	movw	r24, r28
    d454:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    d458:	84 ed       	ldi	r24, 0xD4	; 212
    d45a:	93 e0       	ldi	r25, 0x03	; 3
    d45c:	e0 ed       	ldi	r30, 0xD0	; 208
    d45e:	ff e0       	ldi	r31, 0x0F	; 15
    d460:	df 01       	movw	r26, r30
    d462:	9c 01       	movw	r18, r24
    d464:	1d 92       	st	X+, r1
    d466:	21 50       	subi	r18, 0x01	; 1
    d468:	30 40       	sbci	r19, 0x00	; 0
    d46a:	e1 f7       	brne	.-8      	; 0xd464 <_Z17Get_Operator_NamePc+0x46>
    d46c:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
    d470:	df 91       	pop	r29
    d472:	cf 91       	pop	r28
    d474:	0f 91       	pop	r16
    d476:	08 95       	ret

0000d478 <_Z12Gprs_ConnectPc>:
    d478:	ef 92       	push	r14
    d47a:	ff 92       	push	r15
    d47c:	0f 93       	push	r16
    d47e:	cf 93       	push	r28
    d480:	df 93       	push	r29
    d482:	cd b7       	in	r28, 0x3d	; 61
    d484:	de b7       	in	r29, 0x3e	; 62
    d486:	a8 97       	sbiw	r28, 0x28	; 40
    d488:	0f b6       	in	r0, 0x3f	; 63
    d48a:	f8 94       	cli
    d48c:	de bf       	out	0x3e, r29	; 62
    d48e:	0f be       	out	0x3f, r0	; 63
    d490:	cd bf       	out	0x3d, r28	; 61
    d492:	c2 dd       	rcall	.-1148   	; 0xd018 <_Z12Reset_Bufferv>
    d494:	85 ea       	ldi	r24, 0xA5	; 165
    d496:	9d e0       	ldi	r25, 0x0D	; 13
    d498:	9f 93       	push	r25
    d49a:	8f 93       	push	r24
    d49c:	8a ed       	ldi	r24, 0xDA	; 218
    d49e:	93 e0       	ldi	r25, 0x03	; 3
    d4a0:	9f 93       	push	r25
    d4a2:	8f 93       	push	r24
    d4a4:	ce 01       	movw	r24, r28
    d4a6:	01 96       	adiw	r24, 0x01	; 1
    d4a8:	7c 01       	movw	r14, r24
    d4aa:	9f 93       	push	r25
    d4ac:	8f 93       	push	r24
    d4ae:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    d4b2:	01 e0       	ldi	r16, 0x01	; 1
    d4b4:	28 ee       	ldi	r18, 0xE8	; 232
    d4b6:	33 e0       	ldi	r19, 0x03	; 3
    d4b8:	40 e0       	ldi	r20, 0x00	; 0
    d4ba:	50 e0       	ldi	r21, 0x00	; 0
    d4bc:	6e e1       	ldi	r22, 0x1E	; 30
    d4be:	73 e0       	ldi	r23, 0x03	; 3
    d4c0:	c7 01       	movw	r24, r14
    d4c2:	0f de       	rcall	.-994    	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d4c4:	64 e9       	ldi	r22, 0x94	; 148
    d4c6:	73 e2       	ldi	r23, 0x23	; 35
    d4c8:	86 ec       	ldi	r24, 0xC6	; 198
    d4ca:	94 e1       	ldi	r25, 0x14	; 20
    d4cc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d4d0:	0f 90       	pop	r0
    d4d2:	0f 90       	pop	r0
    d4d4:	0f 90       	pop	r0
    d4d6:	0f 90       	pop	r0
    d4d8:	0f 90       	pop	r0
    d4da:	0f 90       	pop	r0
    d4dc:	81 e0       	ldi	r24, 0x01	; 1
    d4de:	a8 96       	adiw	r28, 0x28	; 40
    d4e0:	0f b6       	in	r0, 0x3f	; 63
    d4e2:	f8 94       	cli
    d4e4:	de bf       	out	0x3e, r29	; 62
    d4e6:	0f be       	out	0x3f, r0	; 63
    d4e8:	cd bf       	out	0x3d, r28	; 61
    d4ea:	df 91       	pop	r29
    d4ec:	cf 91       	pop	r28
    d4ee:	0f 91       	pop	r16
    d4f0:	ff 90       	pop	r15
    d4f2:	ef 90       	pop	r14
    d4f4:	08 95       	ret

0000d4f6 <_Z12MQTT_PublishPhS_>:
    d4f6:	af 92       	push	r10
    d4f8:	bf 92       	push	r11
    d4fa:	cf 92       	push	r12
    d4fc:	df 92       	push	r13
    d4fe:	ef 92       	push	r14
    d500:	ff 92       	push	r15
    d502:	0f 93       	push	r16
    d504:	1f 93       	push	r17
    d506:	cf 93       	push	r28
    d508:	df 93       	push	r29
    d50a:	cd b7       	in	r28, 0x3d	; 61
    d50c:	de b7       	in	r29, 0x3e	; 62
    d50e:	6e 97       	sbiw	r28, 0x1e	; 30
    d510:	0f b6       	in	r0, 0x3f	; 63
    d512:	f8 94       	cli
    d514:	de bf       	out	0x3e, r29	; 62
    d516:	0f be       	out	0x3f, r0	; 63
    d518:	cd bf       	out	0x3d, r28	; 61
    d51a:	5c 01       	movw	r10, r24
    d51c:	6b 01       	movw	r12, r22
    d51e:	1e e1       	ldi	r17, 0x1E	; 30
    d520:	ce 01       	movw	r24, r28
    d522:	01 96       	adiw	r24, 0x01	; 1
    d524:	7c 01       	movw	r14, r24
    d526:	fc 01       	movw	r30, r24
    d528:	81 2f       	mov	r24, r17
    d52a:	11 92       	st	Z+, r1
    d52c:	8a 95       	dec	r24
    d52e:	e9 f7       	brne	.-6      	; 0xd52a <_Z12MQTT_PublishPhS_+0x34>
    d530:	73 dd       	rcall	.-1306   	; 0xd018 <_Z12Reset_Bufferv>
    d532:	f5 01       	movw	r30, r10
    d534:	01 90       	ld	r0, Z+
    d536:	00 20       	and	r0, r0
    d538:	e9 f7       	brne	.-6      	; 0xd534 <_Z12MQTT_PublishPhS_+0x3e>
    d53a:	31 97       	sbiw	r30, 0x01	; 1
    d53c:	ea 19       	sub	r30, r10
    d53e:	fb 09       	sbc	r31, r11
    d540:	ff 93       	push	r31
    d542:	ef 93       	push	r30
    d544:	81 ef       	ldi	r24, 0xF1	; 241
    d546:	93 e0       	ldi	r25, 0x03	; 3
    d548:	9f 93       	push	r25
    d54a:	8f 93       	push	r24
    d54c:	ff 92       	push	r15
    d54e:	ef 92       	push	r14
    d550:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    d554:	02 e0       	ldi	r16, 0x02	; 2
    d556:	28 eb       	ldi	r18, 0xB8	; 184
    d558:	3b e0       	ldi	r19, 0x0B	; 11
    d55a:	40 e0       	ldi	r20, 0x00	; 0
    d55c:	50 e0       	ldi	r21, 0x00	; 0
    d55e:	64 e0       	ldi	r22, 0x04	; 4
    d560:	74 e0       	ldi	r23, 0x04	; 4
    d562:	c7 01       	movw	r24, r14
    d564:	be dd       	rcall	.-1156   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d566:	0f 90       	pop	r0
    d568:	0f 90       	pop	r0
    d56a:	0f 90       	pop	r0
    d56c:	0f 90       	pop	r0
    d56e:	0f 90       	pop	r0
    d570:	0f 90       	pop	r0
    d572:	81 11       	cpse	r24, r1
    d574:	22 c0       	rjmp	.+68     	; 0xd5ba <_Z12MQTT_PublishPhS_+0xc4>
    d576:	50 dd       	rcall	.-1376   	; 0xd018 <_Z12Reset_Bufferv>
    d578:	6a e8       	ldi	r22, 0x8A	; 138
    d57a:	73 e2       	ldi	r23, 0x23	; 35
    d57c:	83 e8       	ldi	r24, 0x83	; 131
    d57e:	96 e1       	ldi	r25, 0x16	; 22
    d580:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d584:	01 e0       	ldi	r16, 0x01	; 1
    d586:	28 ee       	ldi	r18, 0xE8	; 232
    d588:	33 e0       	ldi	r19, 0x03	; 3
    d58a:	40 e0       	ldi	r20, 0x00	; 0
    d58c:	50 e0       	ldi	r21, 0x00	; 0
    d58e:	6e e1       	ldi	r22, 0x1E	; 30
    d590:	73 e0       	ldi	r23, 0x03	; 3
    d592:	80 e0       	ldi	r24, 0x00	; 0
    d594:	90 e0       	ldi	r25, 0x00	; 0
    d596:	a5 dd       	rcall	.-1206   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d598:	8e e1       	ldi	r24, 0x1E	; 30
    d59a:	f7 01       	movw	r30, r14
    d59c:	11 92       	st	Z+, r1
    d59e:	8a 95       	dec	r24
    d5a0:	e9 f7       	brne	.-6      	; 0xd59c <_Z12MQTT_PublishPhS_+0xa6>
    d5a2:	8a e1       	ldi	r24, 0x1A	; 26
    d5a4:	89 83       	std	Y+1, r24	; 0x01
    d5a6:	28 ec       	ldi	r18, 0xC8	; 200
    d5a8:	30 e0       	ldi	r19, 0x00	; 0
    d5aa:	40 e0       	ldi	r20, 0x00	; 0
    d5ac:	50 e0       	ldi	r21, 0x00	; 0
    d5ae:	6e e1       	ldi	r22, 0x1E	; 30
    d5b0:	73 e0       	ldi	r23, 0x03	; 3
    d5b2:	c7 01       	movw	r24, r14
    d5b4:	96 dd       	rcall	.-1236   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d5b6:	80 e0       	ldi	r24, 0x00	; 0
    d5b8:	41 c0       	rjmp	.+130    	; 0xd63c <_Z12MQTT_PublishPhS_+0x146>
    d5ba:	2e dd       	rcall	.-1444   	; 0xd018 <_Z12Reset_Bufferv>
    d5bc:	b5 01       	movw	r22, r10
    d5be:	83 e8       	ldi	r24, 0x83	; 131
    d5c0:	96 e1       	ldi	r25, 0x16	; 22
    d5c2:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    d5c6:	f7 01       	movw	r30, r14
    d5c8:	11 92       	st	Z+, r1
    d5ca:	1a 95       	dec	r17
    d5cc:	e9 f7       	brne	.-6      	; 0xd5c8 <_Z12MQTT_PublishPhS_+0xd2>
    d5ce:	24 dd       	rcall	.-1464   	; 0xd018 <_Z12Reset_Bufferv>
    d5d0:	f6 01       	movw	r30, r12
    d5d2:	01 90       	ld	r0, Z+
    d5d4:	00 20       	and	r0, r0
    d5d6:	e9 f7       	brne	.-6      	; 0xd5d2 <_Z12MQTT_PublishPhS_+0xdc>
    d5d8:	31 97       	sbiw	r30, 0x01	; 1
    d5da:	ec 19       	sub	r30, r12
    d5dc:	fd 09       	sbc	r31, r13
    d5de:	ff 93       	push	r31
    d5e0:	ef 93       	push	r30
    d5e2:	86 e0       	ldi	r24, 0x06	; 6
    d5e4:	94 e0       	ldi	r25, 0x04	; 4
    d5e6:	9f 93       	push	r25
    d5e8:	8f 93       	push	r24
    d5ea:	ff 92       	push	r15
    d5ec:	ef 92       	push	r14
    d5ee:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    d5f2:	02 e0       	ldi	r16, 0x02	; 2
    d5f4:	28 eb       	ldi	r18, 0xB8	; 184
    d5f6:	3b e0       	ldi	r19, 0x0B	; 11
    d5f8:	40 e0       	ldi	r20, 0x00	; 0
    d5fa:	50 e0       	ldi	r21, 0x00	; 0
    d5fc:	64 e0       	ldi	r22, 0x04	; 4
    d5fe:	74 e0       	ldi	r23, 0x04	; 4
    d600:	c7 01       	movw	r24, r14
    d602:	6f dd       	rcall	.-1314   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d604:	0f 90       	pop	r0
    d606:	0f 90       	pop	r0
    d608:	0f 90       	pop	r0
    d60a:	0f 90       	pop	r0
    d60c:	0f 90       	pop	r0
    d60e:	0f 90       	pop	r0
    d610:	88 23       	and	r24, r24
    d612:	09 f4       	brne	.+2      	; 0xd616 <_Z12MQTT_PublishPhS_+0x120>
    d614:	b0 cf       	rjmp	.-160    	; 0xd576 <_Z12MQTT_PublishPhS_+0x80>
    d616:	00 dd       	rcall	.-1536   	; 0xd018 <_Z12Reset_Bufferv>
    d618:	b6 01       	movw	r22, r12
    d61a:	83 e8       	ldi	r24, 0x83	; 131
    d61c:	96 e1       	ldi	r25, 0x16	; 22
    d61e:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    d622:	28 eb       	ldi	r18, 0xB8	; 184
    d624:	3b e0       	ldi	r19, 0x0B	; 11
    d626:	40 e0       	ldi	r20, 0x00	; 0
    d628:	50 e0       	ldi	r21, 0x00	; 0
    d62a:	6b e1       	ldi	r22, 0x1B	; 27
    d62c:	74 e0       	ldi	r23, 0x04	; 4
    d62e:	8a e2       	ldi	r24, 0x2A	; 42
    d630:	94 e0       	ldi	r25, 0x04	; 4
    d632:	57 dd       	rcall	.-1362   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d634:	88 23       	and	r24, r24
    d636:	09 f4       	brne	.+2      	; 0xd63a <_Z12MQTT_PublishPhS_+0x144>
    d638:	9e cf       	rjmp	.-196    	; 0xd576 <_Z12MQTT_PublishPhS_+0x80>
    d63a:	81 e0       	ldi	r24, 0x01	; 1
    d63c:	6e 96       	adiw	r28, 0x1e	; 30
    d63e:	0f b6       	in	r0, 0x3f	; 63
    d640:	f8 94       	cli
    d642:	de bf       	out	0x3e, r29	; 62
    d644:	0f be       	out	0x3f, r0	; 63
    d646:	cd bf       	out	0x3d, r28	; 61
    d648:	df 91       	pop	r29
    d64a:	cf 91       	pop	r28
    d64c:	1f 91       	pop	r17
    d64e:	0f 91       	pop	r16
    d650:	ff 90       	pop	r15
    d652:	ef 90       	pop	r14
    d654:	df 90       	pop	r13
    d656:	cf 90       	pop	r12
    d658:	bf 90       	pop	r11
    d65a:	af 90       	pop	r10
    d65c:	08 95       	ret

0000d65e <_Z18_kGSM_SIG_STRENGTHv>:
    d65e:	0f 93       	push	r16
    d660:	db dc       	rcall	.-1610   	; 0xd018 <_Z12Reset_Bufferv>
    d662:	6b e4       	ldi	r22, 0x4B	; 75
    d664:	74 e2       	ldi	r23, 0x24	; 36
    d666:	83 e8       	ldi	r24, 0x83	; 131
    d668:	96 e1       	ldi	r25, 0x16	; 22
    d66a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d66e:	01 e0       	ldi	r16, 0x01	; 1
    d670:	20 ed       	ldi	r18, 0xD0	; 208
    d672:	37 e0       	ldi	r19, 0x07	; 7
    d674:	40 e0       	ldi	r20, 0x00	; 0
    d676:	50 e0       	ldi	r21, 0x00	; 0
    d678:	6e e1       	ldi	r22, 0x1E	; 30
    d67a:	73 e0       	ldi	r23, 0x03	; 3
    d67c:	80 e0       	ldi	r24, 0x00	; 0
    d67e:	90 e0       	ldi	r25, 0x00	; 0
    d680:	30 dd       	rcall	.-1440   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d682:	88 23       	and	r24, r24
    d684:	d1 f1       	breq	.+116    	; 0xd6fa <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d686:	6d e3       	ldi	r22, 0x3D	; 61
    d688:	74 e0       	ldi	r23, 0x04	; 4
    d68a:	80 ed       	ldi	r24, 0xD0	; 208
    d68c:	9f e0       	ldi	r25, 0x0F	; 15
    d68e:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    d692:	89 2b       	or	r24, r25
    d694:	91 f1       	breq	.+100    	; 0xd6fa <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d696:	80 e0       	ldi	r24, 0x00	; 0
    d698:	90 e0       	ldi	r25, 0x00	; 0
    d69a:	28 2f       	mov	r18, r24
    d69c:	fc 01       	movw	r30, r24
    d69e:	e0 53       	subi	r30, 0x30	; 48
    d6a0:	f0 4f       	sbci	r31, 0xF0	; 240
    d6a2:	30 81       	ld	r19, Z
    d6a4:	3b 32       	cpi	r19, 0x2B	; 43
    d6a6:	31 f4       	brne	.+12     	; 0xd6b4 <_Z18_kGSM_SIG_STRENGTHv+0x56>
    d6a8:	fc 01       	movw	r30, r24
    d6aa:	ec 52       	subi	r30, 0x2C	; 44
    d6ac:	f0 4f       	sbci	r31, 0xF0	; 240
    d6ae:	30 81       	ld	r19, Z
    d6b0:	3a 33       	cpi	r19, 0x3A	; 58
    d6b2:	29 f0       	breq	.+10     	; 0xd6be <_Z18_kGSM_SIG_STRENGTHv+0x60>
    d6b4:	01 96       	adiw	r24, 0x01	; 1
    d6b6:	84 31       	cpi	r24, 0x14	; 20
    d6b8:	91 05       	cpc	r25, r1
    d6ba:	79 f7       	brne	.-34     	; 0xd69a <_Z18_kGSM_SIG_STRENGTHv+0x3c>
    d6bc:	24 e1       	ldi	r18, 0x14	; 20
    d6be:	2a 5f       	subi	r18, 0xFA	; 250
    d6c0:	30 e0       	ldi	r19, 0x00	; 0
    d6c2:	f9 01       	movw	r30, r18
    d6c4:	e0 53       	subi	r30, 0x30	; 48
    d6c6:	f0 4f       	sbci	r31, 0xF0	; 240
    d6c8:	80 81       	ld	r24, Z
    d6ca:	f9 01       	movw	r30, r18
    d6cc:	ef 52       	subi	r30, 0x2F	; 47
    d6ce:	f0 4f       	sbci	r31, 0xF0	; 240
    d6d0:	90 81       	ld	r25, Z
    d6d2:	24 ed       	ldi	r18, 0xD4	; 212
    d6d4:	33 e0       	ldi	r19, 0x03	; 3
    d6d6:	e0 ed       	ldi	r30, 0xD0	; 208
    d6d8:	ff e0       	ldi	r31, 0x0F	; 15
    d6da:	df 01       	movw	r26, r30
    d6dc:	a9 01       	movw	r20, r18
    d6de:	1d 92       	st	X+, r1
    d6e0:	41 50       	subi	r20, 0x01	; 1
    d6e2:	50 40       	sbci	r21, 0x00	; 0
    d6e4:	e1 f7       	brne	.-8      	; 0xd6de <_Z18_kGSM_SIG_STRENGTHv+0x80>
    d6e6:	88 0f       	add	r24, r24
    d6e8:	80 56       	subi	r24, 0x60	; 96
    d6ea:	28 2f       	mov	r18, r24
    d6ec:	22 0f       	add	r18, r18
    d6ee:	22 0f       	add	r18, r18
    d6f0:	82 0f       	add	r24, r18
    d6f2:	90 53       	subi	r25, 0x30	; 48
    d6f4:	89 0f       	add	r24, r25
    d6f6:	90 e0       	ldi	r25, 0x00	; 0
    d6f8:	1a c0       	rjmp	.+52     	; 0xd72e <_Z18_kGSM_SIG_STRENGTHv+0xd0>
    d6fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d6fe:	81 30       	cpi	r24, 0x01	; 1
    d700:	51 f4       	brne	.+20     	; 0xd716 <_Z18_kGSM_SIG_STRENGTHv+0xb8>
    d702:	6c e3       	ldi	r22, 0x3C	; 60
    d704:	74 e2       	ldi	r23, 0x24	; 36
    d706:	86 ec       	ldi	r24, 0xC6	; 198
    d708:	94 e1       	ldi	r25, 0x14	; 20
    d70a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    d70e:	86 ec       	ldi	r24, 0xC6	; 198
    d710:	94 e1       	ldi	r25, 0x14	; 20
    d712:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d716:	84 ed       	ldi	r24, 0xD4	; 212
    d718:	93 e0       	ldi	r25, 0x03	; 3
    d71a:	e0 ed       	ldi	r30, 0xD0	; 208
    d71c:	ff e0       	ldi	r31, 0x0F	; 15
    d71e:	df 01       	movw	r26, r30
    d720:	9c 01       	movw	r18, r24
    d722:	1d 92       	st	X+, r1
    d724:	21 50       	subi	r18, 0x01	; 1
    d726:	30 40       	sbci	r19, 0x00	; 0
    d728:	e1 f7       	brne	.-8      	; 0xd722 <_Z18_kGSM_SIG_STRENGTHv+0xc4>
    d72a:	80 e0       	ldi	r24, 0x00	; 0
    d72c:	90 e0       	ldi	r25, 0x00	; 0
    d72e:	0f 91       	pop	r16
    d730:	08 95       	ret

0000d732 <_Z17Is_MQTT_Connectedv>:
    d732:	0f 93       	push	r16
    d734:	71 dc       	rcall	.-1822   	; 0xd018 <_Z12Reset_Bufferv>
    d736:	6e e3       	ldi	r22, 0x3E	; 62
    d738:	73 e2       	ldi	r23, 0x23	; 35
    d73a:	83 e8       	ldi	r24, 0x83	; 131
    d73c:	96 e1       	ldi	r25, 0x16	; 22
    d73e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d742:	01 e0       	ldi	r16, 0x01	; 1
    d744:	28 eb       	ldi	r18, 0xB8	; 184
    d746:	3b e0       	ldi	r19, 0x0B	; 11
    d748:	40 e0       	ldi	r20, 0x00	; 0
    d74a:	50 e0       	ldi	r21, 0x00	; 0
    d74c:	61 e4       	ldi	r22, 0x41	; 65
    d74e:	74 e0       	ldi	r23, 0x04	; 4
    d750:	80 e0       	ldi	r24, 0x00	; 0
    d752:	90 e0       	ldi	r25, 0x00	; 0
    d754:	c6 dc       	rcall	.-1652   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d756:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d75a:	88 23       	and	r24, r24
    d75c:	69 f0       	breq	.+26     	; 0xd778 <_Z17Is_MQTT_Connectedv+0x46>
    d75e:	91 30       	cpi	r25, 0x01	; 1
    d760:	c1 f4       	brne	.+48     	; 0xd792 <_Z17Is_MQTT_Connectedv+0x60>
    d762:	66 e2       	ldi	r22, 0x26	; 38
    d764:	73 e2       	ldi	r23, 0x23	; 35
    d766:	86 ec       	ldi	r24, 0xC6	; 198
    d768:	94 e1       	ldi	r25, 0x14	; 20
    d76a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d76e:	86 ec       	ldi	r24, 0xC6	; 198
    d770:	94 e1       	ldi	r25, 0x14	; 20
    d772:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d776:	0d c0       	rjmp	.+26     	; 0xd792 <_Z17Is_MQTT_Connectedv+0x60>
    d778:	91 30       	cpi	r25, 0x01	; 1
    d77a:	69 f4       	brne	.+26     	; 0xd796 <_Z17Is_MQTT_Connectedv+0x64>
    d77c:	6a e0       	ldi	r22, 0x0A	; 10
    d77e:	73 e2       	ldi	r23, 0x23	; 35
    d780:	86 ec       	ldi	r24, 0xC6	; 198
    d782:	94 e1       	ldi	r25, 0x14	; 20
    d784:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d788:	86 ec       	ldi	r24, 0xC6	; 198
    d78a:	94 e1       	ldi	r25, 0x14	; 20
    d78c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    d790:	02 c0       	rjmp	.+4      	; 0xd796 <_Z17Is_MQTT_Connectedv+0x64>
    d792:	81 e0       	ldi	r24, 0x01	; 1
    d794:	01 c0       	rjmp	.+2      	; 0xd798 <_Z17Is_MQTT_Connectedv+0x66>
    d796:	80 e0       	ldi	r24, 0x00	; 0
    d798:	0f 91       	pop	r16
    d79a:	08 95       	ret

0000d79c <_Z12MQTT_ConnectPKcS0_S0_>:
    d79c:	af 92       	push	r10
    d79e:	bf 92       	push	r11
    d7a0:	cf 92       	push	r12
    d7a2:	df 92       	push	r13
    d7a4:	ef 92       	push	r14
    d7a6:	ff 92       	push	r15
    d7a8:	0f 93       	push	r16
    d7aa:	1f 93       	push	r17
    d7ac:	cf 93       	push	r28
    d7ae:	df 93       	push	r29
    d7b0:	cd b7       	in	r28, 0x3d	; 61
    d7b2:	de b7       	in	r29, 0x3e	; 62
    d7b4:	c8 57       	subi	r28, 0x78	; 120
    d7b6:	d1 09       	sbc	r29, r1
    d7b8:	0f b6       	in	r0, 0x3f	; 63
    d7ba:	f8 94       	cli
    d7bc:	de bf       	out	0x3e, r29	; 62
    d7be:	0f be       	out	0x3f, r0	; 63
    d7c0:	cd bf       	out	0x3d, r28	; 61
    d7c2:	d6 2e       	mov	r13, r22
    d7c4:	c7 2e       	mov	r12, r23
    d7c6:	b4 2e       	mov	r11, r20
    d7c8:	a5 2e       	mov	r10, r21
    d7ca:	18 e7       	ldi	r17, 0x78	; 120
    d7cc:	9e 01       	movw	r18, r28
    d7ce:	2f 5f       	subi	r18, 0xFF	; 255
    d7d0:	3f 4f       	sbci	r19, 0xFF	; 255
    d7d2:	79 01       	movw	r14, r18
    d7d4:	f9 01       	movw	r30, r18
    d7d6:	21 2f       	mov	r18, r17
    d7d8:	11 92       	st	Z+, r1
    d7da:	2a 95       	dec	r18
    d7dc:	e9 f7       	brne	.-6      	; 0xd7d8 <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    d7de:	1c dc       	rcall	.-1992   	; 0xd018 <_Z12Reset_Bufferv>
    d7e0:	6b e6       	ldi	r22, 0x6B	; 107
    d7e2:	73 e2       	ldi	r23, 0x23	; 35
    d7e4:	83 e8       	ldi	r24, 0x83	; 131
    d7e6:	96 e1       	ldi	r25, 0x16	; 22
    d7e8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d7ec:	02 e0       	ldi	r16, 0x02	; 2
    d7ee:	28 eb       	ldi	r18, 0xB8	; 184
    d7f0:	3b e0       	ldi	r19, 0x0B	; 11
    d7f2:	40 e0       	ldi	r20, 0x00	; 0
    d7f4:	50 e0       	ldi	r21, 0x00	; 0
    d7f6:	67 e5       	ldi	r22, 0x57	; 87
    d7f8:	74 e0       	ldi	r23, 0x04	; 4
    d7fa:	80 e0       	ldi	r24, 0x00	; 0
    d7fc:	90 e0       	ldi	r25, 0x00	; 0
    d7fe:	71 dc       	rcall	.-1822   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d800:	0b dc       	rcall	.-2026   	; 0xd018 <_Z12Reset_Bufferv>
    d802:	6d e5       	ldi	r22, 0x5D	; 93
    d804:	73 e2       	ldi	r23, 0x23	; 35
    d806:	83 e8       	ldi	r24, 0x83	; 131
    d808:	96 e1       	ldi	r25, 0x16	; 22
    d80a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d80e:	28 eb       	ldi	r18, 0xB8	; 184
    d810:	3b e0       	ldi	r19, 0x0B	; 11
    d812:	40 e0       	ldi	r20, 0x00	; 0
    d814:	50 e0       	ldi	r21, 0x00	; 0
    d816:	6e e1       	ldi	r22, 0x1E	; 30
    d818:	73 e0       	ldi	r23, 0x03	; 3
    d81a:	80 e0       	ldi	r24, 0x00	; 0
    d81c:	90 e0       	ldi	r25, 0x00	; 0
    d81e:	61 dc       	rcall	.-1854   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d820:	fb db       	rcall	.-2058   	; 0xd018 <_Z12Reset_Bufferv>
    d822:	6f e4       	ldi	r22, 0x4F	; 79
    d824:	73 e2       	ldi	r23, 0x23	; 35
    d826:	83 e8       	ldi	r24, 0x83	; 131
    d828:	96 e1       	ldi	r25, 0x16	; 22
    d82a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    d82e:	28 eb       	ldi	r18, 0xB8	; 184
    d830:	3b e0       	ldi	r19, 0x0B	; 11
    d832:	43 e6       	ldi	r20, 0x63	; 99
    d834:	54 e0       	ldi	r21, 0x04	; 4
    d836:	63 e7       	ldi	r22, 0x73	; 115
    d838:	74 e0       	ldi	r23, 0x04	; 4
    d83a:	80 e0       	ldi	r24, 0x00	; 0
    d83c:	90 e0       	ldi	r25, 0x00	; 0
    d83e:	51 dc       	rcall	.-1886   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d840:	eb db       	rcall	.-2090   	; 0xd018 <_Z12Reset_Bufferv>
    d842:	82 e8       	ldi	r24, 0x82	; 130
    d844:	94 e0       	ldi	r25, 0x04	; 4
    d846:	9f 93       	push	r25
    d848:	8f 93       	push	r24
    d84a:	89 e8       	ldi	r24, 0x89	; 137
    d84c:	94 e0       	ldi	r25, 0x04	; 4
    d84e:	9f 93       	push	r25
    d850:	8f 93       	push	r24
    d852:	ff 92       	push	r15
    d854:	ef 92       	push	r14
    d856:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    d85a:	01 e0       	ldi	r16, 0x01	; 1
    d85c:	28 eb       	ldi	r18, 0xB8	; 184
    d85e:	3b e0       	ldi	r19, 0x0B	; 11
    d860:	40 e0       	ldi	r20, 0x00	; 0
    d862:	50 e0       	ldi	r21, 0x00	; 0
    d864:	6e e1       	ldi	r22, 0x1E	; 30
    d866:	73 e0       	ldi	r23, 0x03	; 3
    d868:	c7 01       	movw	r24, r14
    d86a:	3b dc       	rcall	.-1930   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d86c:	f7 01       	movw	r30, r14
    d86e:	11 92       	st	Z+, r1
    d870:	1a 95       	dec	r17
    d872:	e9 f7       	brne	.-6      	; 0xd86e <_Z12MQTT_ConnectPKcS0_S0_+0xd2>
    d874:	af 92       	push	r10
    d876:	bf 92       	push	r11
    d878:	cf 92       	push	r12
    d87a:	df 92       	push	r13
    d87c:	87 e0       	ldi	r24, 0x07	; 7
    d87e:	8f 93       	push	r24
    d880:	8b e5       	ldi	r24, 0x5B	; 91
    d882:	8f 93       	push	r24
    d884:	8f e9       	ldi	r24, 0x9F	; 159
    d886:	94 e0       	ldi	r25, 0x04	; 4
    d888:	9f 93       	push	r25
    d88a:	8f 93       	push	r24
    d88c:	8d ea       	ldi	r24, 0xAD	; 173
    d88e:	94 e0       	ldi	r25, 0x04	; 4
    d890:	9f 93       	push	r25
    d892:	8f 93       	push	r24
    d894:	ff 92       	push	r15
    d896:	ef 92       	push	r14
    d898:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    d89c:	28 e8       	ldi	r18, 0x88	; 136
    d89e:	33 e1       	ldi	r19, 0x13	; 19
    d8a0:	40 e0       	ldi	r20, 0x00	; 0
    d8a2:	50 e0       	ldi	r21, 0x00	; 0
    d8a4:	6e e1       	ldi	r22, 0x1E	; 30
    d8a6:	73 e0       	ldi	r23, 0x03	; 3
    d8a8:	c7 01       	movw	r24, r14
    d8aa:	1b dc       	rcall	.-1994   	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    d8ac:	68 eb       	ldi	r22, 0xB8	; 184
    d8ae:	7b e0       	ldi	r23, 0x0B	; 11
    d8b0:	80 e0       	ldi	r24, 0x00	; 0
    d8b2:	90 e0       	ldi	r25, 0x00	; 0
    d8b4:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    d8b8:	3c df       	rcall	.-392    	; 0xd732 <_Z17Is_MQTT_Connectedv>
    d8ba:	0f b6       	in	r0, 0x3f	; 63
    d8bc:	f8 94       	cli
    d8be:	de bf       	out	0x3e, r29	; 62
    d8c0:	0f be       	out	0x3f, r0	; 63
    d8c2:	cd bf       	out	0x3d, r28	; 61
    d8c4:	c8 58       	subi	r28, 0x88	; 136
    d8c6:	df 4f       	sbci	r29, 0xFF	; 255
    d8c8:	0f b6       	in	r0, 0x3f	; 63
    d8ca:	f8 94       	cli
    d8cc:	de bf       	out	0x3e, r29	; 62
    d8ce:	0f be       	out	0x3f, r0	; 63
    d8d0:	cd bf       	out	0x3d, r28	; 61
    d8d2:	df 91       	pop	r29
    d8d4:	cf 91       	pop	r28
    d8d6:	1f 91       	pop	r17
    d8d8:	0f 91       	pop	r16
    d8da:	ff 90       	pop	r15
    d8dc:	ef 90       	pop	r14
    d8de:	df 90       	pop	r13
    d8e0:	cf 90       	pop	r12
    d8e2:	bf 90       	pop	r11
    d8e4:	af 90       	pop	r10
    d8e6:	08 95       	ret

0000d8e8 <_Z9MQTT_Loopv>:
    d8e8:	83 e0       	ldi	r24, 0x03	; 3
    d8ea:	fc d7       	rcall	.+4088   	; 0xe8e4 <_Z9Check_Simc>
    d8ec:	0e 94 50 60 	call	0xc0a0	; 0xc0a0 <_Z16Check_GSM_Signalv>
    d8f0:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    d8f4:	81 30       	cpi	r24, 0x01	; 1
    d8f6:	39 f0       	breq	.+14     	; 0xd906 <_Z9MQTT_Loopv+0x1e>
    d8f8:	1c df       	rcall	.-456    	; 0xd732 <_Z17Is_MQTT_Connectedv>
    d8fa:	88 23       	and	r24, r24
    d8fc:	21 f0       	breq	.+8      	; 0xd906 <_Z9MQTT_Loopv+0x1e>
    d8fe:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
    d902:	81 30       	cpi	r24, 0x01	; 1
    d904:	11 f0       	breq	.+4      	; 0xd90a <_Z9MQTT_Loopv+0x22>
    d906:	80 e0       	ldi	r24, 0x00	; 0
    d908:	08 95       	ret
    d90a:	81 e0       	ldi	r24, 0x01	; 1
    d90c:	08 95       	ret

0000d90e <_Z16Lcd_Special_Charhhhh>:
    d90e:	df 92       	push	r13
    d910:	ef 92       	push	r14
    d912:	ff 92       	push	r15
    d914:	0f 93       	push	r16
    d916:	1f 93       	push	r17
    d918:	cf 93       	push	r28
    d91a:	df 93       	push	r29
    d91c:	cd b7       	in	r28, 0x3d	; 61
    d91e:	de b7       	in	r29, 0x3e	; 62
    d920:	28 97       	sbiw	r28, 0x08	; 8
    d922:	0f b6       	in	r0, 0x3f	; 63
    d924:	f8 94       	cli
    d926:	de bf       	out	0x3e, r29	; 62
    d928:	0f be       	out	0x3f, r0	; 63
    d92a:	cd bf       	out	0x3d, r28	; 61
    d92c:	f8 2e       	mov	r15, r24
    d92e:	e6 2e       	mov	r14, r22
    d930:	d4 2e       	mov	r13, r20
    d932:	8e 01       	movw	r16, r28
    d934:	0f 5f       	subi	r16, 0xFF	; 255
    d936:	1f 4f       	sbci	r17, 0xFF	; 255
    d938:	88 e0       	ldi	r24, 0x08	; 8
    d93a:	f8 01       	movw	r30, r16
    d93c:	11 92       	st	Z+, r1
    d93e:	8a 95       	dec	r24
    d940:	e9 f7       	brne	.-6      	; 0xd93c <_Z16Lcd_Special_Charhhhh+0x2e>
    d942:	82 2f       	mov	r24, r18
    d944:	90 e0       	ldi	r25, 0x00	; 0
    d946:	fc 01       	movw	r30, r24
    d948:	31 97       	sbiw	r30, 0x01	; 1
    d94a:	ea 30       	cpi	r30, 0x0A	; 10
    d94c:	f1 05       	cpc	r31, r1
    d94e:	08 f0       	brcs	.+2      	; 0xd952 <_Z16Lcd_Special_Charhhhh+0x44>
    d950:	86 c0       	rjmp	.+268    	; 0xda5e <_Z16Lcd_Special_Charhhhh+0x150>
    d952:	88 27       	eor	r24, r24
    d954:	e3 52       	subi	r30, 0x23	; 35
    d956:	ff 4f       	sbci	r31, 0xFF	; 255
    d958:	8f 4f       	sbci	r24, 0xFF	; 255
    d95a:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
    d95e:	8f e1       	ldi	r24, 0x1F	; 31
    d960:	89 83       	std	Y+1, r24	; 0x01
    d962:	81 e1       	ldi	r24, 0x11	; 17
    d964:	8a 83       	std	Y+2, r24	; 0x02
    d966:	8a e0       	ldi	r24, 0x0A	; 10
    d968:	58 c0       	rjmp	.+176    	; 0xda1a <_Z16Lcd_Special_Charhhhh+0x10c>
    d96a:	9c e1       	ldi	r25, 0x1C	; 28
    d96c:	99 83       	std	Y+1, r25	; 0x01
    d96e:	80 e1       	ldi	r24, 0x10	; 16
    d970:	8a 83       	std	Y+2, r24	; 0x02
    d972:	28 e1       	ldi	r18, 0x18	; 24
    d974:	2b 83       	std	Y+3, r18	; 0x03
    d976:	8c 83       	std	Y+4, r24	; 0x04
    d978:	9d 83       	std	Y+5, r25	; 0x05
    d97a:	0b c0       	rjmp	.+22     	; 0xd992 <_Z16Lcd_Special_Charhhhh+0x84>
    d97c:	8c e1       	ldi	r24, 0x1C	; 28
    d97e:	89 83       	std	Y+1, r24	; 0x01
    d980:	90 e1       	ldi	r25, 0x10	; 16
    d982:	9a 83       	std	Y+2, r25	; 0x02
    d984:	28 e1       	ldi	r18, 0x18	; 24
    d986:	2b 83       	std	Y+3, r18	; 0x03
    d988:	9c 83       	std	Y+4, r25	; 0x04
    d98a:	8d 83       	std	Y+5, r24	; 0x05
    d98c:	84 e0       	ldi	r24, 0x04	; 4
    d98e:	8f 83       	std	Y+7, r24	; 0x07
    d990:	84 e1       	ldi	r24, 0x14	; 20
    d992:	88 87       	std	Y+8, r24	; 0x08
    d994:	64 c0       	rjmp	.+200    	; 0xda5e <_Z16Lcd_Special_Charhhhh+0x150>
    d996:	8c e1       	ldi	r24, 0x1C	; 28
    d998:	89 83       	std	Y+1, r24	; 0x01
    d99a:	80 e1       	ldi	r24, 0x10	; 16
    d99c:	8a 83       	std	Y+2, r24	; 0x02
    d99e:	98 e1       	ldi	r25, 0x18	; 24
    d9a0:	9b 83       	std	Y+3, r25	; 0x03
    d9a2:	8c 83       	std	Y+4, r24	; 0x04
    d9a4:	8d e1       	ldi	r24, 0x1D	; 29
    d9a6:	8d 83       	std	Y+5, r24	; 0x05
    d9a8:	81 e0       	ldi	r24, 0x01	; 1
    d9aa:	8e 83       	std	Y+6, r24	; 0x06
    d9ac:	85 e0       	ldi	r24, 0x05	; 5
    d9ae:	8f 83       	std	Y+7, r24	; 0x07
    d9b0:	85 e1       	ldi	r24, 0x15	; 21
    d9b2:	ef cf       	rjmp	.-34     	; 0xd992 <_Z16Lcd_Special_Charhhhh+0x84>
    d9b4:	8c e1       	ldi	r24, 0x1C	; 28
    d9b6:	89 83       	std	Y+1, r24	; 0x01
    d9b8:	90 e1       	ldi	r25, 0x10	; 16
    d9ba:	9a 83       	std	Y+2, r25	; 0x02
    d9bc:	28 e1       	ldi	r18, 0x18	; 24
    d9be:	2b 83       	std	Y+3, r18	; 0x03
    d9c0:	9c 83       	std	Y+4, r25	; 0x04
    d9c2:	8d 83       	std	Y+5, r24	; 0x05
    d9c4:	85 e0       	ldi	r24, 0x05	; 5
    d9c6:	8e 83       	std	Y+6, r24	; 0x06
    d9c8:	92 e0       	ldi	r25, 0x02	; 2
    d9ca:	9f 83       	std	Y+7, r25	; 0x07
    d9cc:	e2 cf       	rjmp	.-60     	; 0xd992 <_Z16Lcd_Special_Charhhhh+0x84>
    d9ce:	9e e0       	ldi	r25, 0x0E	; 14
    d9d0:	99 83       	std	Y+1, r25	; 0x01
    d9d2:	81 e1       	ldi	r24, 0x11	; 17
    d9d4:	8a 83       	std	Y+2, r24	; 0x02
    d9d6:	8b 83       	std	Y+3, r24	; 0x03
    d9d8:	8c 83       	std	Y+4, r24	; 0x04
    d9da:	8b e1       	ldi	r24, 0x1B	; 27
    d9dc:	8d 83       	std	Y+5, r24	; 0x05
    d9de:	25 e1       	ldi	r18, 0x15	; 21
    d9e0:	2e 83       	std	Y+6, r18	; 0x06
    d9e2:	8f 83       	std	Y+7, r24	; 0x07
    d9e4:	98 87       	std	Y+8, r25	; 0x08
    d9e6:	3b c0       	rjmp	.+118    	; 0xda5e <_Z16Lcd_Special_Charhhhh+0x150>
    d9e8:	87 e0       	ldi	r24, 0x07	; 7
    d9ea:	89 83       	std	Y+1, r24	; 0x01
    d9ec:	89 e0       	ldi	r24, 0x09	; 9
    d9ee:	8a 83       	std	Y+2, r24	; 0x02
    d9f0:	81 e1       	ldi	r24, 0x11	; 17
    d9f2:	8b 83       	std	Y+3, r24	; 0x03
    d9f4:	8c 83       	std	Y+4, r24	; 0x04
    d9f6:	8b e1       	ldi	r24, 0x1B	; 27
    d9f8:	8d 83       	std	Y+5, r24	; 0x05
    d9fa:	95 e1       	ldi	r25, 0x15	; 21
    d9fc:	9e 83       	std	Y+6, r25	; 0x06
    d9fe:	8f 83       	std	Y+7, r24	; 0x07
    da00:	8f e1       	ldi	r24, 0x1F	; 31
    da02:	c7 cf       	rjmp	.-114    	; 0xd992 <_Z16Lcd_Special_Charhhhh+0x84>
    da04:	84 e0       	ldi	r24, 0x04	; 4
    da06:	89 83       	std	Y+1, r24	; 0x01
    da08:	8a 83       	std	Y+2, r24	; 0x02
    da0a:	8b 83       	std	Y+3, r24	; 0x03
    da0c:	87 e0       	ldi	r24, 0x07	; 7
    da0e:	8c 83       	std	Y+4, r24	; 0x04
    da10:	26 c0       	rjmp	.+76     	; 0xda5e <_Z16Lcd_Special_Charhhhh+0x150>
    da12:	8f e1       	ldi	r24, 0x1F	; 31
    da14:	89 83       	std	Y+1, r24	; 0x01
    da16:	8a 83       	std	Y+2, r24	; 0x02
    da18:	8e e0       	ldi	r24, 0x0E	; 14
    da1a:	8b 83       	std	Y+3, r24	; 0x03
    da1c:	84 e0       	ldi	r24, 0x04	; 4
    da1e:	8c 83       	std	Y+4, r24	; 0x04
    da20:	8d 83       	std	Y+5, r24	; 0x05
    da22:	8e 83       	std	Y+6, r24	; 0x06
    da24:	8f 83       	std	Y+7, r24	; 0x07
    da26:	1b c0       	rjmp	.+54     	; 0xda5e <_Z16Lcd_Special_Charhhhh+0x150>
    da28:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    da2c:	1f 92       	push	r1
    da2e:	8f 93       	push	r24
    da30:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    da34:	1f 92       	push	r1
    da36:	8f 93       	push	r24
    da38:	8c ed       	ldi	r24, 0xDC	; 220
    da3a:	94 e0       	ldi	r25, 0x04	; 4
    da3c:	9f 93       	push	r25
    da3e:	8f 93       	push	r24
    da40:	1f 93       	push	r17
    da42:	0f 93       	push	r16
    da44:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    da48:	2f e0       	ldi	r18, 0x0F	; 15
    da4a:	40 e0       	ldi	r20, 0x00	; 0
    da4c:	65 e0       	ldi	r22, 0x05	; 5
    da4e:	c8 01       	movw	r24, r16
    da50:	b3 d8       	rcall	.-3738   	; 0xcbb8 <_Z14Lcd_Print_BuffPchhh>
    da52:	0f b6       	in	r0, 0x3f	; 63
    da54:	f8 94       	cli
    da56:	de bf       	out	0x3e, r29	; 62
    da58:	0f be       	out	0x3f, r0	; 63
    da5a:	cd bf       	out	0x3d, r28	; 61
    da5c:	11 c0       	rjmp	.+34     	; 0xda80 <_Z16Lcd_Special_Charhhhh+0x172>
    da5e:	a8 01       	movw	r20, r16
    da60:	6f 2d       	mov	r22, r15
    da62:	83 ec       	ldi	r24, 0xC3	; 195
    da64:	9c e0       	ldi	r25, 0x0C	; 12
    da66:	0e 94 1c db 	call	0x1b638	; 0x1b638 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    da6a:	4d 2d       	mov	r20, r13
    da6c:	6e 2d       	mov	r22, r14
    da6e:	83 ec       	ldi	r24, 0xC3	; 195
    da70:	9c e0       	ldi	r25, 0x0C	; 12
    da72:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da76:	6f 2d       	mov	r22, r15
    da78:	83 ec       	ldi	r24, 0xC3	; 195
    da7a:	9c e0       	ldi	r25, 0x0C	; 12
    da7c:	0e 94 43 db 	call	0x1b686	; 0x1b686 <_ZN17LiquidCrystal_I2C5writeEh>
    da80:	28 96       	adiw	r28, 0x08	; 8
    da82:	0f b6       	in	r0, 0x3f	; 63
    da84:	f8 94       	cli
    da86:	de bf       	out	0x3e, r29	; 62
    da88:	0f be       	out	0x3f, r0	; 63
    da8a:	cd bf       	out	0x3d, r28	; 61
    da8c:	df 91       	pop	r29
    da8e:	cf 91       	pop	r28
    da90:	1f 91       	pop	r17
    da92:	0f 91       	pop	r16
    da94:	ff 90       	pop	r15
    da96:	ef 90       	pop	r14
    da98:	df 90       	pop	r13
    da9a:	08 95       	ret

0000da9c <_Z16Display_Update_1v>:
    da9c:	ff 92       	push	r15
    da9e:	0f 93       	push	r16
    daa0:	1f 93       	push	r17
    daa2:	cf 93       	push	r28
    daa4:	df 93       	push	r29
    daa6:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    daaa:	81 11       	cpse	r24, r1
    daac:	7a c1       	rjmp	.+756    	; 0xdda2 <_Z16Display_Update_1v+0x306>
    daae:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dab2:	3e 2f       	mov	r19, r30
    dab4:	32 70       	andi	r19, 0x02	; 2
    dab6:	20 e0       	ldi	r18, 0x00	; 0
    dab8:	40 e0       	ldi	r20, 0x00	; 0
    daba:	50 e0       	ldi	r21, 0x00	; 0
    dabc:	60 e0       	ldi	r22, 0x00	; 0
    dabe:	70 e0       	ldi	r23, 0x00	; 0
    dac0:	90 e0       	ldi	r25, 0x00	; 0
    dac2:	a0 e0       	ldi	r26, 0x00	; 0
    dac4:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dac8:	71 f0       	breq	.+28     	; 0xdae6 <_Z16Display_Update_1v+0x4a>
    daca:	ed 7f       	andi	r30, 0xFD	; 253
    dacc:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dad0:	41 e0       	ldi	r20, 0x01	; 1
    dad2:	83 ec       	ldi	r24, 0xC3	; 195
    dad4:	9c e0       	ldi	r25, 0x0C	; 12
    dad6:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dada:	61 ee       	ldi	r22, 0xE1	; 225
    dadc:	72 e2       	ldi	r23, 0x22	; 34
    dade:	83 ec       	ldi	r24, 0xC3	; 195
    dae0:	9c e0       	ldi	r25, 0x0C	; 12
    dae2:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dae6:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    daea:	3e 2f       	mov	r19, r30
    daec:	34 70       	andi	r19, 0x04	; 4
    daee:	20 e0       	ldi	r18, 0x00	; 0
    daf0:	40 e0       	ldi	r20, 0x00	; 0
    daf2:	50 e0       	ldi	r21, 0x00	; 0
    daf4:	60 e0       	ldi	r22, 0x00	; 0
    daf6:	70 e0       	ldi	r23, 0x00	; 0
    daf8:	80 e0       	ldi	r24, 0x00	; 0
    dafa:	90 e0       	ldi	r25, 0x00	; 0
    dafc:	a0 e0       	ldi	r26, 0x00	; 0
    dafe:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    db02:	d1 f0       	breq	.+52     	; 0xdb38 <_Z16Display_Update_1v+0x9c>
    db04:	eb 7f       	andi	r30, 0xFB	; 251
    db06:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db0a:	41 e0       	ldi	r20, 0x01	; 1
    db0c:	83 ec       	ldi	r24, 0xC3	; 195
    db0e:	9c e0       	ldi	r25, 0x0C	; 12
    db10:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db14:	6c ec       	ldi	r22, 0xCC	; 204
    db16:	72 e2       	ldi	r23, 0x22	; 34
    db18:	83 ec       	ldi	r24, 0xC3	; 195
    db1a:	9c e0       	ldi	r25, 0x0C	; 12
    db1c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    db20:	42 e0       	ldi	r20, 0x02	; 2
    db22:	60 e0       	ldi	r22, 0x00	; 0
    db24:	83 ec       	ldi	r24, 0xC3	; 195
    db26:	9c e0       	ldi	r25, 0x0C	; 12
    db28:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db2c:	67 eb       	ldi	r22, 0xB7	; 183
    db2e:	72 e2       	ldi	r23, 0x22	; 34
    db30:	83 ec       	ldi	r24, 0xC3	; 195
    db32:	9c e0       	ldi	r25, 0x0C	; 12
    db34:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    db38:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    db3c:	3e 2f       	mov	r19, r30
    db3e:	38 70       	andi	r19, 0x08	; 8
    db40:	20 e0       	ldi	r18, 0x00	; 0
    db42:	40 e0       	ldi	r20, 0x00	; 0
    db44:	50 e0       	ldi	r21, 0x00	; 0
    db46:	60 e0       	ldi	r22, 0x00	; 0
    db48:	70 e0       	ldi	r23, 0x00	; 0
    db4a:	80 e0       	ldi	r24, 0x00	; 0
    db4c:	90 e0       	ldi	r25, 0x00	; 0
    db4e:	a0 e0       	ldi	r26, 0x00	; 0
    db50:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    db54:	d1 f0       	breq	.+52     	; 0xdb8a <_Z16Display_Update_1v+0xee>
    db56:	e7 7f       	andi	r30, 0xF7	; 247
    db58:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db5c:	41 e0       	ldi	r20, 0x01	; 1
    db5e:	83 ec       	ldi	r24, 0xC3	; 195
    db60:	9c e0       	ldi	r25, 0x0C	; 12
    db62:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db66:	62 ea       	ldi	r22, 0xA2	; 162
    db68:	72 e2       	ldi	r23, 0x22	; 34
    db6a:	83 ec       	ldi	r24, 0xC3	; 195
    db6c:	9c e0       	ldi	r25, 0x0C	; 12
    db6e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    db72:	42 e0       	ldi	r20, 0x02	; 2
    db74:	60 e0       	ldi	r22, 0x00	; 0
    db76:	83 ec       	ldi	r24, 0xC3	; 195
    db78:	9c e0       	ldi	r25, 0x0C	; 12
    db7a:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db7e:	6d e8       	ldi	r22, 0x8D	; 141
    db80:	72 e2       	ldi	r23, 0x22	; 34
    db82:	83 ec       	ldi	r24, 0xC3	; 195
    db84:	9c e0       	ldi	r25, 0x0C	; 12
    db86:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    db8a:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    db8e:	e0 71       	andi	r30, 0x10	; 16
    db90:	20 e0       	ldi	r18, 0x00	; 0
    db92:	3e 2f       	mov	r19, r30
    db94:	40 e0       	ldi	r20, 0x00	; 0
    db96:	50 e0       	ldi	r21, 0x00	; 0
    db98:	60 e0       	ldi	r22, 0x00	; 0
    db9a:	70 e0       	ldi	r23, 0x00	; 0
    db9c:	80 e0       	ldi	r24, 0x00	; 0
    db9e:	90 e0       	ldi	r25, 0x00	; 0
    dba0:	a0 e0       	ldi	r26, 0x00	; 0
    dba2:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dba6:	39 f1       	breq	.+78     	; 0xdbf6 <_Z16Display_Update_1v+0x15a>
    dba8:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
    dbac:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dbb0:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
    dbb4:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
    dbb8:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
    dbbc:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
    dbc0:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
    dbc4:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
    dbc8:	41 e0       	ldi	r20, 0x01	; 1
    dbca:	83 ec       	ldi	r24, 0xC3	; 195
    dbcc:	9c e0       	ldi	r25, 0x0C	; 12
    dbce:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbd2:	68 e7       	ldi	r22, 0x78	; 120
    dbd4:	72 e2       	ldi	r23, 0x22	; 34
    dbd6:	83 ec       	ldi	r24, 0xC3	; 195
    dbd8:	9c e0       	ldi	r25, 0x0C	; 12
    dbda:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dbde:	42 e0       	ldi	r20, 0x02	; 2
    dbe0:	60 e0       	ldi	r22, 0x00	; 0
    dbe2:	83 ec       	ldi	r24, 0xC3	; 195
    dbe4:	9c e0       	ldi	r25, 0x0C	; 12
    dbe6:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbea:	63 e6       	ldi	r22, 0x63	; 99
    dbec:	72 e2       	ldi	r23, 0x22	; 34
    dbee:	83 ec       	ldi	r24, 0xC3	; 195
    dbf0:	9c e0       	ldi	r25, 0x0C	; 12
    dbf2:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dbf6:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dbfa:	3e 2f       	mov	r19, r30
    dbfc:	30 72       	andi	r19, 0x20	; 32
    dbfe:	20 e0       	ldi	r18, 0x00	; 0
    dc00:	40 e0       	ldi	r20, 0x00	; 0
    dc02:	50 e0       	ldi	r21, 0x00	; 0
    dc04:	60 e0       	ldi	r22, 0x00	; 0
    dc06:	70 e0       	ldi	r23, 0x00	; 0
    dc08:	80 e0       	ldi	r24, 0x00	; 0
    dc0a:	90 e0       	ldi	r25, 0x00	; 0
    dc0c:	a0 e0       	ldi	r26, 0x00	; 0
    dc0e:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dc12:	d1 f0       	breq	.+52     	; 0xdc48 <_Z16Display_Update_1v+0x1ac>
    dc14:	ef 7d       	andi	r30, 0xDF	; 223
    dc16:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dc1a:	41 e0       	ldi	r20, 0x01	; 1
    dc1c:	83 ec       	ldi	r24, 0xC3	; 195
    dc1e:	9c e0       	ldi	r25, 0x0C	; 12
    dc20:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc24:	6e e4       	ldi	r22, 0x4E	; 78
    dc26:	72 e2       	ldi	r23, 0x22	; 34
    dc28:	83 ec       	ldi	r24, 0xC3	; 195
    dc2a:	9c e0       	ldi	r25, 0x0C	; 12
    dc2c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dc30:	42 e0       	ldi	r20, 0x02	; 2
    dc32:	60 e0       	ldi	r22, 0x00	; 0
    dc34:	83 ec       	ldi	r24, 0xC3	; 195
    dc36:	9c e0       	ldi	r25, 0x0C	; 12
    dc38:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc3c:	69 e3       	ldi	r22, 0x39	; 57
    dc3e:	72 e2       	ldi	r23, 0x22	; 34
    dc40:	83 ec       	ldi	r24, 0xC3	; 195
    dc42:	9c e0       	ldi	r25, 0x0C	; 12
    dc44:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dc48:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dc4c:	3e 2f       	mov	r19, r30
    dc4e:	30 74       	andi	r19, 0x40	; 64
    dc50:	20 e0       	ldi	r18, 0x00	; 0
    dc52:	40 e0       	ldi	r20, 0x00	; 0
    dc54:	50 e0       	ldi	r21, 0x00	; 0
    dc56:	60 e0       	ldi	r22, 0x00	; 0
    dc58:	70 e0       	ldi	r23, 0x00	; 0
    dc5a:	80 e0       	ldi	r24, 0x00	; 0
    dc5c:	90 e0       	ldi	r25, 0x00	; 0
    dc5e:	a0 e0       	ldi	r26, 0x00	; 0
    dc60:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dc64:	d1 f0       	breq	.+52     	; 0xdc9a <_Z16Display_Update_1v+0x1fe>
    dc66:	ef 7b       	andi	r30, 0xBF	; 191
    dc68:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dc6c:	41 e0       	ldi	r20, 0x01	; 1
    dc6e:	83 ec       	ldi	r24, 0xC3	; 195
    dc70:	9c e0       	ldi	r25, 0x0C	; 12
    dc72:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc76:	64 e2       	ldi	r22, 0x24	; 36
    dc78:	72 e2       	ldi	r23, 0x22	; 34
    dc7a:	83 ec       	ldi	r24, 0xC3	; 195
    dc7c:	9c e0       	ldi	r25, 0x0C	; 12
    dc7e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dc82:	42 e0       	ldi	r20, 0x02	; 2
    dc84:	60 e0       	ldi	r22, 0x00	; 0
    dc86:	83 ec       	ldi	r24, 0xC3	; 195
    dc88:	9c e0       	ldi	r25, 0x0C	; 12
    dc8a:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc8e:	6f e0       	ldi	r22, 0x0F	; 15
    dc90:	72 e2       	ldi	r23, 0x22	; 34
    dc92:	83 ec       	ldi	r24, 0xC3	; 195
    dc94:	9c e0       	ldi	r25, 0x0C	; 12
    dc96:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dc9a:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dc9e:	3e 2f       	mov	r19, r30
    dca0:	30 78       	andi	r19, 0x80	; 128
    dca2:	20 e0       	ldi	r18, 0x00	; 0
    dca4:	40 e0       	ldi	r20, 0x00	; 0
    dca6:	50 e0       	ldi	r21, 0x00	; 0
    dca8:	60 e0       	ldi	r22, 0x00	; 0
    dcaa:	70 e0       	ldi	r23, 0x00	; 0
    dcac:	80 e0       	ldi	r24, 0x00	; 0
    dcae:	90 e0       	ldi	r25, 0x00	; 0
    dcb0:	a0 e0       	ldi	r26, 0x00	; 0
    dcb2:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dcb6:	d1 f0       	breq	.+52     	; 0xdcec <_Z16Display_Update_1v+0x250>
    dcb8:	ef 77       	andi	r30, 0x7F	; 127
    dcba:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dcbe:	41 e0       	ldi	r20, 0x01	; 1
    dcc0:	83 ec       	ldi	r24, 0xC3	; 195
    dcc2:	9c e0       	ldi	r25, 0x0C	; 12
    dcc4:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dcc8:	6a ef       	ldi	r22, 0xFA	; 250
    dcca:	71 e2       	ldi	r23, 0x21	; 33
    dccc:	83 ec       	ldi	r24, 0xC3	; 195
    dcce:	9c e0       	ldi	r25, 0x0C	; 12
    dcd0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dcd4:	42 e0       	ldi	r20, 0x02	; 2
    dcd6:	60 e0       	ldi	r22, 0x00	; 0
    dcd8:	83 ec       	ldi	r24, 0xC3	; 195
    dcda:	9c e0       	ldi	r25, 0x0C	; 12
    dcdc:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dce0:	65 ee       	ldi	r22, 0xE5	; 229
    dce2:	71 e2       	ldi	r23, 0x21	; 33
    dce4:	83 ec       	ldi	r24, 0xC3	; 195
    dce6:	9c e0       	ldi	r25, 0x0C	; 12
    dce8:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dcec:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dcf0:	4e 2f       	mov	r20, r30
    dcf2:	41 70       	andi	r20, 0x01	; 1
    dcf4:	20 e0       	ldi	r18, 0x00	; 0
    dcf6:	30 e0       	ldi	r19, 0x00	; 0
    dcf8:	50 e0       	ldi	r21, 0x00	; 0
    dcfa:	60 e0       	ldi	r22, 0x00	; 0
    dcfc:	70 e0       	ldi	r23, 0x00	; 0
    dcfe:	80 e0       	ldi	r24, 0x00	; 0
    dd00:	90 e0       	ldi	r25, 0x00	; 0
    dd02:	a0 e0       	ldi	r26, 0x00	; 0
    dd04:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dd08:	d1 f0       	breq	.+52     	; 0xdd3e <_Z16Display_Update_1v+0x2a2>
    dd0a:	ee 7f       	andi	r30, 0xFE	; 254
    dd0c:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dd10:	41 e0       	ldi	r20, 0x01	; 1
    dd12:	83 ec       	ldi	r24, 0xC3	; 195
    dd14:	9c e0       	ldi	r25, 0x0C	; 12
    dd16:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd1a:	60 ed       	ldi	r22, 0xD0	; 208
    dd1c:	71 e2       	ldi	r23, 0x21	; 33
    dd1e:	83 ec       	ldi	r24, 0xC3	; 195
    dd20:	9c e0       	ldi	r25, 0x0C	; 12
    dd22:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dd26:	42 e0       	ldi	r20, 0x02	; 2
    dd28:	60 e0       	ldi	r22, 0x00	; 0
    dd2a:	83 ec       	ldi	r24, 0xC3	; 195
    dd2c:	9c e0       	ldi	r25, 0x0C	; 12
    dd2e:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd32:	6b eb       	ldi	r22, 0xBB	; 187
    dd34:	71 e2       	ldi	r23, 0x21	; 33
    dd36:	83 ec       	ldi	r24, 0xC3	; 195
    dd38:	9c e0       	ldi	r25, 0x0C	; 12
    dd3a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dd3e:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dd42:	4e 2f       	mov	r20, r30
    dd44:	44 70       	andi	r20, 0x04	; 4
    dd46:	20 e0       	ldi	r18, 0x00	; 0
    dd48:	30 e0       	ldi	r19, 0x00	; 0
    dd4a:	50 e0       	ldi	r21, 0x00	; 0
    dd4c:	60 e0       	ldi	r22, 0x00	; 0
    dd4e:	70 e0       	ldi	r23, 0x00	; 0
    dd50:	80 e0       	ldi	r24, 0x00	; 0
    dd52:	90 e0       	ldi	r25, 0x00	; 0
    dd54:	a0 e0       	ldi	r26, 0x00	; 0
    dd56:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dd5a:	d9 f0       	breq	.+54     	; 0xdd92 <_Z16Display_Update_1v+0x2f6>
    dd5c:	eb 7f       	andi	r30, 0xFB	; 251
    dd5e:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dd62:	41 e0       	ldi	r20, 0x01	; 1
    dd64:	61 e0       	ldi	r22, 0x01	; 1
    dd66:	83 ec       	ldi	r24, 0xC3	; 195
    dd68:	9c e0       	ldi	r25, 0x0C	; 12
    dd6a:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd6e:	69 ea       	ldi	r22, 0xA9	; 169
    dd70:	71 e2       	ldi	r23, 0x21	; 33
    dd72:	83 ec       	ldi	r24, 0xC3	; 195
    dd74:	9c e0       	ldi	r25, 0x0C	; 12
    dd76:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dd7a:	42 e0       	ldi	r20, 0x02	; 2
    dd7c:	60 e0       	ldi	r22, 0x00	; 0
    dd7e:	83 ec       	ldi	r24, 0xC3	; 195
    dd80:	9c e0       	ldi	r25, 0x0C	; 12
    dd82:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd86:	64 e9       	ldi	r22, 0x94	; 148
    dd88:	71 e2       	ldi	r23, 0x21	; 33
    dd8a:	83 ec       	ldi	r24, 0xC3	; 195
    dd8c:	9c e0       	ldi	r25, 0x0C	; 12
    dd8e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dd92:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dd96:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    dd9a:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    dd9e:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    dda2:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    dda6:	88 23       	and	r24, r24
    dda8:	09 f4       	brne	.+2      	; 0xddac <_Z16Display_Update_1v+0x310>
    ddaa:	96 c1       	rjmp	.+812    	; 0xe0d8 <_Z16Display_Update_1v+0x63c>
    ddac:	80 91 69 0c 	lds	r24, 0x0C69	; 0x800c69 <_sGSM_Query+0x5>
    ddb0:	e0 91 d9 13 	lds	r30, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    ddb4:	81 30       	cpi	r24, 0x01	; 1
    ddb6:	09 f4       	brne	.+2      	; 0xddba <_Z16Display_Update_1v+0x31e>
    ddb8:	9f c0       	rjmp	.+318    	; 0xdef8 <_Z16Display_Update_1v+0x45c>
    ddba:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    ddbe:	81 30       	cpi	r24, 0x01	; 1
    ddc0:	09 f4       	brne	.+2      	; 0xddc4 <_Z16Display_Update_1v+0x328>
    ddc2:	9a c0       	rjmp	.+308    	; 0xdef8 <_Z16Display_Update_1v+0x45c>
    ddc4:	f0 91 ae 13 	lds	r31, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    ddc8:	2f 2f       	mov	r18, r31
    ddca:	21 70       	andi	r18, 0x01	; 1
    ddcc:	30 e0       	ldi	r19, 0x00	; 0
    ddce:	40 e0       	ldi	r20, 0x00	; 0
    ddd0:	50 e0       	ldi	r21, 0x00	; 0
    ddd2:	60 e0       	ldi	r22, 0x00	; 0
    ddd4:	70 e0       	ldi	r23, 0x00	; 0
    ddd6:	80 e0       	ldi	r24, 0x00	; 0
    ddd8:	90 e0       	ldi	r25, 0x00	; 0
    ddda:	a0 e0       	ldi	r26, 0x00	; 0
    dddc:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    dde0:	b9 f0       	breq	.+46     	; 0xde10 <_Z16Display_Update_1v+0x374>
    dde2:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dde6:	80 fd       	sbrc	r24, 0
    dde8:	0e c0       	rjmp	.+28     	; 0xde06 <_Z16Display_Update_1v+0x36a>
    ddea:	e2 fd       	sbrc	r30, 2
    ddec:	02 c0       	rjmp	.+4      	; 0xddf2 <_Z16Display_Update_1v+0x356>
    ddee:	21 e0       	ldi	r18, 0x01	; 1
    ddf0:	03 c0       	rjmp	.+6      	; 0xddf8 <_Z16Display_Update_1v+0x35c>
    ddf2:	29 e0       	ldi	r18, 0x09	; 9
    ddf4:	40 e0       	ldi	r20, 0x00	; 0
    ddf6:	60 e0       	ldi	r22, 0x00	; 0
    ddf8:	80 e0       	ldi	r24, 0x00	; 0
    ddfa:	89 dd       	rcall	.-1262   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    ddfc:	25 e0       	ldi	r18, 0x05	; 5
    ddfe:	40 e0       	ldi	r20, 0x00	; 0
    de00:	61 e0       	ldi	r22, 0x01	; 1
    de02:	81 e0       	ldi	r24, 0x01	; 1
    de04:	84 dd       	rcall	.-1272   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    de06:	81 ef       	ldi	r24, 0xF1	; 241
    de08:	9f ef       	ldi	r25, 0xFF	; 255
    de0a:	af ef       	ldi	r26, 0xFF	; 255
    de0c:	b0 e0       	ldi	r27, 0x00	; 0
    de0e:	6b c0       	rjmp	.+214    	; 0xdee6 <_Z16Display_Update_1v+0x44a>
    de10:	2f 2f       	mov	r18, r31
    de12:	22 70       	andi	r18, 0x02	; 2
    de14:	30 e0       	ldi	r19, 0x00	; 0
    de16:	40 e0       	ldi	r20, 0x00	; 0
    de18:	50 e0       	ldi	r21, 0x00	; 0
    de1a:	60 e0       	ldi	r22, 0x00	; 0
    de1c:	70 e0       	ldi	r23, 0x00	; 0
    de1e:	80 e0       	ldi	r24, 0x00	; 0
    de20:	90 e0       	ldi	r25, 0x00	; 0
    de22:	a0 e0       	ldi	r26, 0x00	; 0
    de24:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    de28:	b9 f0       	breq	.+46     	; 0xde58 <_Z16Display_Update_1v+0x3bc>
    de2a:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de2e:	81 fd       	sbrc	r24, 1
    de30:	0e c0       	rjmp	.+28     	; 0xde4e <_Z16Display_Update_1v+0x3b2>
    de32:	e2 fd       	sbrc	r30, 2
    de34:	02 c0       	rjmp	.+4      	; 0xde3a <_Z16Display_Update_1v+0x39e>
    de36:	21 e0       	ldi	r18, 0x01	; 1
    de38:	03 c0       	rjmp	.+6      	; 0xde40 <_Z16Display_Update_1v+0x3a4>
    de3a:	29 e0       	ldi	r18, 0x09	; 9
    de3c:	40 e0       	ldi	r20, 0x00	; 0
    de3e:	60 e0       	ldi	r22, 0x00	; 0
    de40:	80 e0       	ldi	r24, 0x00	; 0
    de42:	65 dd       	rcall	.-1334   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    de44:	22 e0       	ldi	r18, 0x02	; 2
    de46:	40 e0       	ldi	r20, 0x00	; 0
    de48:	61 e0       	ldi	r22, 0x01	; 1
    de4a:	89 e0       	ldi	r24, 0x09	; 9
    de4c:	60 dd       	rcall	.-1344   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    de4e:	82 ef       	ldi	r24, 0xF2	; 242
    de50:	9f ef       	ldi	r25, 0xFF	; 255
    de52:	af ef       	ldi	r26, 0xFF	; 255
    de54:	b0 e0       	ldi	r27, 0x00	; 0
    de56:	47 c0       	rjmp	.+142    	; 0xdee6 <_Z16Display_Update_1v+0x44a>
    de58:	2f 2f       	mov	r18, r31
    de5a:	24 70       	andi	r18, 0x04	; 4
    de5c:	30 e0       	ldi	r19, 0x00	; 0
    de5e:	40 e0       	ldi	r20, 0x00	; 0
    de60:	50 e0       	ldi	r21, 0x00	; 0
    de62:	60 e0       	ldi	r22, 0x00	; 0
    de64:	70 e0       	ldi	r23, 0x00	; 0
    de66:	80 e0       	ldi	r24, 0x00	; 0
    de68:	90 e0       	ldi	r25, 0x00	; 0
    de6a:	a0 e0       	ldi	r26, 0x00	; 0
    de6c:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    de70:	b9 f0       	breq	.+46     	; 0xdea0 <_Z16Display_Update_1v+0x404>
    de72:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de76:	82 fd       	sbrc	r24, 2
    de78:	0e c0       	rjmp	.+28     	; 0xde96 <_Z16Display_Update_1v+0x3fa>
    de7a:	e2 fd       	sbrc	r30, 2
    de7c:	02 c0       	rjmp	.+4      	; 0xde82 <_Z16Display_Update_1v+0x3e6>
    de7e:	21 e0       	ldi	r18, 0x01	; 1
    de80:	03 c0       	rjmp	.+6      	; 0xde88 <_Z16Display_Update_1v+0x3ec>
    de82:	29 e0       	ldi	r18, 0x09	; 9
    de84:	40 e0       	ldi	r20, 0x00	; 0
    de86:	60 e0       	ldi	r22, 0x00	; 0
    de88:	80 e0       	ldi	r24, 0x00	; 0
    de8a:	41 dd       	rcall	.-1406   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    de8c:	23 e0       	ldi	r18, 0x03	; 3
    de8e:	40 e0       	ldi	r20, 0x00	; 0
    de90:	61 e0       	ldi	r22, 0x01	; 1
    de92:	8a e0       	ldi	r24, 0x0A	; 10
    de94:	3c dd       	rcall	.-1416   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    de96:	84 ef       	ldi	r24, 0xF4	; 244
    de98:	9f ef       	ldi	r25, 0xFF	; 255
    de9a:	af ef       	ldi	r26, 0xFF	; 255
    de9c:	b0 e0       	ldi	r27, 0x00	; 0
    de9e:	23 c0       	rjmp	.+70     	; 0xdee6 <_Z16Display_Update_1v+0x44a>
    dea0:	2f 2f       	mov	r18, r31
    dea2:	28 70       	andi	r18, 0x08	; 8
    dea4:	30 e0       	ldi	r19, 0x00	; 0
    dea6:	40 e0       	ldi	r20, 0x00	; 0
    dea8:	50 e0       	ldi	r21, 0x00	; 0
    deaa:	60 e0       	ldi	r22, 0x00	; 0
    deac:	70 e0       	ldi	r23, 0x00	; 0
    deae:	80 e0       	ldi	r24, 0x00	; 0
    deb0:	90 e0       	ldi	r25, 0x00	; 0
    deb2:	a0 e0       	ldi	r26, 0x00	; 0
    deb4:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    deb8:	a9 f1       	breq	.+106    	; 0xdf24 <_Z16Display_Update_1v+0x488>
    deba:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    debe:	83 fd       	sbrc	r24, 3
    dec0:	0e c0       	rjmp	.+28     	; 0xdede <_Z16Display_Update_1v+0x442>
    dec2:	e2 fd       	sbrc	r30, 2
    dec4:	02 c0       	rjmp	.+4      	; 0xdeca <_Z16Display_Update_1v+0x42e>
    dec6:	21 e0       	ldi	r18, 0x01	; 1
    dec8:	03 c0       	rjmp	.+6      	; 0xded0 <_Z16Display_Update_1v+0x434>
    deca:	29 e0       	ldi	r18, 0x09	; 9
    decc:	40 e0       	ldi	r20, 0x00	; 0
    dece:	60 e0       	ldi	r22, 0x00	; 0
    ded0:	80 e0       	ldi	r24, 0x00	; 0
    ded2:	1d dd       	rcall	.-1478   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    ded4:	24 e0       	ldi	r18, 0x04	; 4
    ded6:	40 e0       	ldi	r20, 0x00	; 0
    ded8:	61 e0       	ldi	r22, 0x01	; 1
    deda:	82 e0       	ldi	r24, 0x02	; 2
    dedc:	18 dd       	rcall	.-1488   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    dede:	88 ef       	ldi	r24, 0xF8	; 248
    dee0:	9f ef       	ldi	r25, 0xFF	; 255
    dee2:	af ef       	ldi	r26, 0xFF	; 255
    dee4:	b0 e0       	ldi	r27, 0x00	; 0
    dee6:	80 93 6b 0c 	sts	0x0C6B, r24	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    deea:	90 93 6c 0c 	sts	0x0C6C, r25	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    deee:	a0 93 6d 0c 	sts	0x0C6D, r26	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    def2:	b0 93 6e 0c 	sts	0x0C6E, r27	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    def6:	16 c0       	rjmp	.+44     	; 0xdf24 <_Z16Display_Update_1v+0x488>
    def8:	e2 fd       	sbrc	r30, 2
    defa:	02 c0       	rjmp	.+4      	; 0xdf00 <_Z16Display_Update_1v+0x464>
    defc:	21 e0       	ldi	r18, 0x01	; 1
    defe:	01 c0       	rjmp	.+2      	; 0xdf02 <_Z16Display_Update_1v+0x466>
    df00:	29 e0       	ldi	r18, 0x09	; 9
    df02:	40 e0       	ldi	r20, 0x00	; 0
    df04:	60 e0       	ldi	r22, 0x00	; 0
    df06:	80 e0       	ldi	r24, 0x00	; 0
    df08:	02 dd       	rcall	.-1532   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    df0a:	27 e0       	ldi	r18, 0x07	; 7
    df0c:	40 e0       	ldi	r20, 0x00	; 0
    df0e:	61 e0       	ldi	r22, 0x01	; 1
    df10:	82 e0       	ldi	r24, 0x02	; 2
    df12:	fd dc       	rcall	.-1542   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    df14:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    df18:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    df1c:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    df20:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    df24:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    df28:	82 fd       	sbrc	r24, 2
    df2a:	02 c0       	rjmp	.+4      	; 0xdf30 <_Z16Display_Update_1v+0x494>
    df2c:	21 e0       	ldi	r18, 0x01	; 1
    df2e:	01 c0       	rjmp	.+2      	; 0xdf32 <_Z16Display_Update_1v+0x496>
    df30:	29 e0       	ldi	r18, 0x09	; 9
    df32:	40 e0       	ldi	r20, 0x00	; 0
    df34:	60 e0       	ldi	r22, 0x00	; 0
    df36:	80 e0       	ldi	r24, 0x00	; 0
    df38:	ea dc       	rcall	.-1580   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    df3a:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    df3e:	3e 2f       	mov	r19, r30
    df40:	31 70       	andi	r19, 0x01	; 1
    df42:	20 e0       	ldi	r18, 0x00	; 0
    df44:	40 e0       	ldi	r20, 0x00	; 0
    df46:	50 e0       	ldi	r21, 0x00	; 0
    df48:	60 e0       	ldi	r22, 0x00	; 0
    df4a:	70 e0       	ldi	r23, 0x00	; 0
    df4c:	80 e0       	ldi	r24, 0x00	; 0
    df4e:	90 e0       	ldi	r25, 0x00	; 0
    df50:	a0 e0       	ldi	r26, 0x00	; 0
    df52:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    df56:	29 f0       	breq	.+10     	; 0xdf62 <_Z16Display_Update_1v+0x4c6>
    df58:	ee 7f       	andi	r30, 0xFE	; 254
    df5a:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    df5e:	2a e0       	ldi	r18, 0x0A	; 10
    df60:	d6 dc       	rcall	.-1620   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    df62:	ee e4       	ldi	r30, 0x4E	; 78
    df64:	fd e0       	ldi	r31, 0x0D	; 13
    df66:	22 ea       	ldi	r18, 0xA2	; 162
    df68:	3d e0       	ldi	r19, 0x0D	; 13
    df6a:	80 e0       	ldi	r24, 0x00	; 0
    df6c:	90 81       	ld	r25, Z
    df6e:	91 11       	cpse	r25, r1
    df70:	8f 5f       	subi	r24, 0xFF	; 255
    df72:	36 96       	adiw	r30, 0x06	; 6
    df74:	2e 17       	cp	r18, r30
    df76:	3f 07       	cpc	r19, r31
    df78:	c9 f7       	brne	.-14     	; 0xdf6c <_Z16Display_Update_1v+0x4d0>
    df7a:	80 93 6a 0c 	sts	0x0C6A, r24	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    df7e:	80 91 6d 14 	lds	r24, 0x146D	; 0x80146d <_sRuble_Parameters+0xbf>
    df82:	88 23       	and	r24, r24
    df84:	09 f4       	brne	.+2      	; 0xdf88 <_Z16Display_Update_1v+0x4ec>
    df86:	a8 c0       	rjmp	.+336    	; 0xe0d8 <_Z16Display_Update_1v+0x63c>
    df88:	10 92 6d 14 	sts	0x146D, r1	; 0x80146d <_sRuble_Parameters+0xbf>
    df8c:	80 91 6c 14 	lds	r24, 0x146C	; 0x80146c <_sRuble_Parameters+0xbe>
    df90:	81 11       	cpse	r24, r1
    df92:	05 c0       	rjmp	.+10     	; 0xdf9e <_Z16Display_Update_1v+0x502>
    df94:	28 e0       	ldi	r18, 0x08	; 8
    df96:	40 e0       	ldi	r20, 0x00	; 0
    df98:	62 e0       	ldi	r22, 0x02	; 2
    df9a:	84 e0       	ldi	r24, 0x04	; 4
    df9c:	b8 dc       	rcall	.-1680   	; 0xd90e <_Z16Lcd_Special_Charhhhh>
    df9e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    dfa2:	83 30       	cpi	r24, 0x03	; 3
    dfa4:	b1 f0       	breq	.+44     	; 0xdfd2 <_Z16Display_Update_1v+0x536>
    dfa6:	85 30       	cpi	r24, 0x05	; 5
    dfa8:	59 f0       	breq	.+22     	; 0xdfc0 <_Z16Display_Update_1v+0x524>
    dfaa:	82 30       	cpi	r24, 0x02	; 2
    dfac:	f1 f4       	brne	.+60     	; 0xdfea <_Z16Display_Update_1v+0x54e>
    dfae:	41 e0       	ldi	r20, 0x01	; 1
    dfb0:	60 e0       	ldi	r22, 0x00	; 0
    dfb2:	83 ec       	ldi	r24, 0xC3	; 195
    dfb4:	9c e0       	ldi	r25, 0x0C	; 12
    dfb6:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfba:	65 e5       	ldi	r22, 0x55	; 85
    dfbc:	71 e2       	ldi	r23, 0x21	; 33
    dfbe:	11 c0       	rjmp	.+34     	; 0xdfe2 <_Z16Display_Update_1v+0x546>
    dfc0:	41 e0       	ldi	r20, 0x01	; 1
    dfc2:	60 e0       	ldi	r22, 0x00	; 0
    dfc4:	83 ec       	ldi	r24, 0xC3	; 195
    dfc6:	9c e0       	ldi	r25, 0x0C	; 12
    dfc8:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfcc:	6f e7       	ldi	r22, 0x7F	; 127
    dfce:	71 e2       	ldi	r23, 0x21	; 33
    dfd0:	08 c0       	rjmp	.+16     	; 0xdfe2 <_Z16Display_Update_1v+0x546>
    dfd2:	41 e0       	ldi	r20, 0x01	; 1
    dfd4:	60 e0       	ldi	r22, 0x00	; 0
    dfd6:	83 ec       	ldi	r24, 0xC3	; 195
    dfd8:	9c e0       	ldi	r25, 0x0C	; 12
    dfda:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfde:	6a e6       	ldi	r22, 0x6A	; 106
    dfe0:	71 e2       	ldi	r23, 0x21	; 33
    dfe2:	83 ec       	ldi	r24, 0xC3	; 195
    dfe4:	9c e0       	ldi	r25, 0x0C	; 12
    dfe6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    dfea:	80 91 6a 0c 	lds	r24, 0x0C6A	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    dfee:	81 11       	cpse	r24, r1
    dff0:	15 c0       	rjmp	.+42     	; 0xe01c <_Z16Display_Update_1v+0x580>
    dff2:	42 e0       	ldi	r20, 0x02	; 2
    dff4:	60 e0       	ldi	r22, 0x00	; 0
    dff6:	83 ec       	ldi	r24, 0xC3	; 195
    dff8:	9c e0       	ldi	r25, 0x0C	; 12
    dffa:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dffe:	60 e4       	ldi	r22, 0x40	; 64
    e000:	71 e2       	ldi	r23, 0x21	; 33
    e002:	83 ec       	ldi	r24, 0xC3	; 195
    e004:	9c e0       	ldi	r25, 0x0C	; 12
    e006:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e00a:	43 e0       	ldi	r20, 0x03	; 3
    e00c:	60 e0       	ldi	r22, 0x00	; 0
    e00e:	83 ec       	ldi	r24, 0xC3	; 195
    e010:	9c e0       	ldi	r25, 0x0C	; 12
    e012:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e016:	6b e2       	ldi	r22, 0x2B	; 43
    e018:	71 e2       	ldi	r23, 0x21	; 33
    e01a:	3e c0       	rjmp	.+124    	; 0xe098 <_Z16Display_Update_1v+0x5fc>
    e01c:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    e020:	88 23       	and	r24, r24
    e022:	31 f1       	breq	.+76     	; 0xe070 <_Z16Display_Update_1v+0x5d4>
    e024:	1f 92       	push	r1
    e026:	8f 93       	push	r24
    e028:	86 ee       	ldi	r24, 0xE6	; 230
    e02a:	94 e0       	ldi	r25, 0x04	; 4
    e02c:	9f 93       	push	r25
    e02e:	8f 93       	push	r24
    e030:	8a ed       	ldi	r24, 0xDA	; 218
    e032:	93 e1       	ldi	r25, 0x13	; 19
    e034:	9f 93       	push	r25
    e036:	8f 93       	push	r24
    e038:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    e03c:	20 e0       	ldi	r18, 0x00	; 0
    e03e:	42 e0       	ldi	r20, 0x02	; 2
    e040:	64 e1       	ldi	r22, 0x14	; 20
    e042:	8a ed       	ldi	r24, 0xDA	; 218
    e044:	93 e1       	ldi	r25, 0x13	; 19
    e046:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lcd_Print_BuffPchhh>
    e04a:	43 e0       	ldi	r20, 0x03	; 3
    e04c:	60 e0       	ldi	r22, 0x00	; 0
    e04e:	83 ec       	ldi	r24, 0xC3	; 195
    e050:	9c e0       	ldi	r25, 0x0C	; 12
    e052:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e056:	66 e1       	ldi	r22, 0x16	; 22
    e058:	71 e2       	ldi	r23, 0x21	; 33
    e05a:	83 ec       	ldi	r24, 0xC3	; 195
    e05c:	9c e0       	ldi	r25, 0x0C	; 12
    e05e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e062:	0f 90       	pop	r0
    e064:	0f 90       	pop	r0
    e066:	0f 90       	pop	r0
    e068:	0f 90       	pop	r0
    e06a:	0f 90       	pop	r0
    e06c:	0f 90       	pop	r0
    e06e:	18 c0       	rjmp	.+48     	; 0xe0a0 <_Z16Display_Update_1v+0x604>
    e070:	42 e0       	ldi	r20, 0x02	; 2
    e072:	60 e0       	ldi	r22, 0x00	; 0
    e074:	83 ec       	ldi	r24, 0xC3	; 195
    e076:	9c e0       	ldi	r25, 0x0C	; 12
    e078:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e07c:	61 e0       	ldi	r22, 0x01	; 1
    e07e:	71 e2       	ldi	r23, 0x21	; 33
    e080:	83 ec       	ldi	r24, 0xC3	; 195
    e082:	9c e0       	ldi	r25, 0x0C	; 12
    e084:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e088:	43 e0       	ldi	r20, 0x03	; 3
    e08a:	60 e0       	ldi	r22, 0x00	; 0
    e08c:	83 ec       	ldi	r24, 0xC3	; 195
    e08e:	9c e0       	ldi	r25, 0x0C	; 12
    e090:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e094:	6c ee       	ldi	r22, 0xEC	; 236
    e096:	70 e2       	ldi	r23, 0x20	; 32
    e098:	83 ec       	ldi	r24, 0xC3	; 195
    e09a:	9c e0       	ldi	r25, 0x0C	; 12
    e09c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e0a0:	80 91 a1 14 	lds	r24, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    e0a4:	40 e0       	ldi	r20, 0x00	; 0
    e0a6:	63 e0       	ldi	r22, 0x03	; 3
    e0a8:	81 30       	cpi	r24, 0x01	; 1
    e0aa:	39 f4       	brne	.+14     	; 0xe0ba <_Z16Display_Update_1v+0x61e>
    e0ac:	83 ec       	ldi	r24, 0xC3	; 195
    e0ae:	9c e0       	ldi	r25, 0x0C	; 12
    e0b0:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0b4:	6f ed       	ldi	r22, 0xDF	; 223
    e0b6:	70 e2       	ldi	r23, 0x20	; 32
    e0b8:	06 c0       	rjmp	.+12     	; 0xe0c6 <_Z16Display_Update_1v+0x62a>
    e0ba:	83 ec       	ldi	r24, 0xC3	; 195
    e0bc:	9c e0       	ldi	r25, 0x0C	; 12
    e0be:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0c2:	62 ed       	ldi	r22, 0xD2	; 210
    e0c4:	70 e2       	ldi	r23, 0x20	; 32
    e0c6:	83 ec       	ldi	r24, 0xC3	; 195
    e0c8:	9c e0       	ldi	r25, 0x0C	; 12
    e0ca:	df 91       	pop	r29
    e0cc:	cf 91       	pop	r28
    e0ce:	1f 91       	pop	r17
    e0d0:	0f 91       	pop	r16
    e0d2:	ff 90       	pop	r15
    e0d4:	0c 94 56 d5 	jmp	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e0d8:	df 91       	pop	r29
    e0da:	cf 91       	pop	r28
    e0dc:	1f 91       	pop	r17
    e0de:	0f 91       	pop	r16
    e0e0:	ff 90       	pop	r15
    e0e2:	08 95       	ret

0000e0e4 <_Z19Initialise_Hardwarev>:
    e0e4:	0f 93       	push	r16
    e0e6:	1f 93       	push	r17
    e0e8:	cf 93       	push	r28
    e0ea:	df 93       	push	r29
    e0ec:	00 d0       	rcall	.+0      	; 0xe0ee <_Z19Initialise_Hardwarev+0xa>
    e0ee:	cd b7       	in	r28, 0x3d	; 61
    e0f0:	de b7       	in	r29, 0x3e	; 62
    e0f2:	18 e1       	ldi	r17, 0x18	; 24
    e0f4:	89 e2       	ldi	r24, 0x29	; 41
    e0f6:	0f b6       	in	r0, 0x3f	; 63
    e0f8:	f8 94       	cli
    e0fa:	a8 95       	wdr
    e0fc:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e100:	0f be       	out	0x3f, r0	; 63
    e102:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e106:	10 92 e8 0c 	sts	0x0CE8, r1	; 0x800ce8 <_gStart_Wdt>
    e10a:	0e 94 b1 63 	call	0xc762	; 0xc762 <_Z20Timer1_Interrupt_Intv>
    e10e:	0e 94 69 65 	call	0xcad2	; 0xcad2 <_Z20Timer0_Interrupt_Intv>
    e112:	0e 94 d7 65 	call	0xcbae	; 0xcbae <_Z8Lcd_Initv>
    e116:	26 e0       	ldi	r18, 0x06	; 6
    e118:	40 e8       	ldi	r20, 0x80	; 128
    e11a:	55 e2       	ldi	r21, 0x25	; 37
    e11c:	60 e0       	ldi	r22, 0x00	; 0
    e11e:	70 e0       	ldi	r23, 0x00	; 0
    e120:	86 ec       	ldi	r24, 0xC6	; 198
    e122:	94 e1       	ldi	r25, 0x14	; 20
    e124:	0e 94 17 d4 	call	0x1a82e	; 0x1a82e <_ZN14HardwareSerial5beginEmh>
    e128:	26 e0       	ldi	r18, 0x06	; 6
    e12a:	40 e8       	ldi	r20, 0x80	; 128
    e12c:	55 e2       	ldi	r21, 0x25	; 37
    e12e:	60 e0       	ldi	r22, 0x00	; 0
    e130:	70 e0       	ldi	r23, 0x00	; 0
    e132:	83 e8       	ldi	r24, 0x83	; 131
    e134:	96 e1       	ldi	r25, 0x16	; 22
    e136:	0e 94 17 d4 	call	0x1a82e	; 0x1a82e <_ZN14HardwareSerial5beginEmh>
    e13a:	62 e0       	ldi	r22, 0x02	; 2
    e13c:	83 e1       	ldi	r24, 0x13	; 19
    e13e:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e142:	41 e0       	ldi	r20, 0x01	; 1
    e144:	60 e0       	ldi	r22, 0x00	; 0
    e146:	83 ec       	ldi	r24, 0xC3	; 195
    e148:	9c e0       	ldi	r25, 0x0C	; 12
    e14a:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e14e:	68 ef       	ldi	r22, 0xF8	; 248
    e150:	74 e2       	ldi	r23, 0x24	; 36
    e152:	83 ec       	ldi	r24, 0xC3	; 195
    e154:	9c e0       	ldi	r25, 0x0C	; 12
    e156:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e15a:	42 e0       	ldi	r20, 0x02	; 2
    e15c:	60 e0       	ldi	r22, 0x00	; 0
    e15e:	83 ec       	ldi	r24, 0xC3	; 195
    e160:	9c e0       	ldi	r25, 0x0C	; 12
    e162:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e166:	63 ee       	ldi	r22, 0xE3	; 227
    e168:	74 e2       	ldi	r23, 0x24	; 36
    e16a:	83 ec       	ldi	r24, 0xC3	; 195
    e16c:	9c e0       	ldi	r25, 0x0C	; 12
    e16e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e172:	68 eb       	ldi	r22, 0xB8	; 184
    e174:	7b e0       	ldi	r23, 0x0B	; 11
    e176:	80 e0       	ldi	r24, 0x00	; 0
    e178:	90 e0       	ldi	r25, 0x00	; 0
    e17a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e17e:	41 e0       	ldi	r20, 0x01	; 1
    e180:	60 e0       	ldi	r22, 0x00	; 0
    e182:	83 ec       	ldi	r24, 0xC3	; 195
    e184:	9c e0       	ldi	r25, 0x0C	; 12
    e186:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e18a:	6e ec       	ldi	r22, 0xCE	; 206
    e18c:	74 e2       	ldi	r23, 0x24	; 36
    e18e:	83 ec       	ldi	r24, 0xC3	; 195
    e190:	9c e0       	ldi	r25, 0x0C	; 12
    e192:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e196:	41 e0       	ldi	r20, 0x01	; 1
    e198:	65 e0       	ldi	r22, 0x05	; 5
    e19a:	83 ec       	ldi	r24, 0xC3	; 195
    e19c:	9c e0       	ldi	r25, 0x0C	; 12
    e19e:	0e 94 e8 da 	call	0x1b5d0	; 0x1b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e1a2:	61 ec       	ldi	r22, 0xC1	; 193
    e1a4:	74 e2       	ldi	r23, 0x24	; 36
    e1a6:	83 ec       	ldi	r24, 0xC3	; 195
    e1a8:	9c e0       	ldi	r25, 0x0C	; 12
    e1aa:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    e1ae:	86 ec       	ldi	r24, 0xC6	; 198
    e1b0:	94 e1       	ldi	r25, 0x14	; 20
    e1b2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    e1b6:	61 e0       	ldi	r22, 0x01	; 1
    e1b8:	8d e0       	ldi	r24, 0x0D	; 13
    e1ba:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1be:	61 e0       	ldi	r22, 0x01	; 1
    e1c0:	8a e0       	ldi	r24, 0x0A	; 10
    e1c2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1c6:	61 e0       	ldi	r22, 0x01	; 1
    e1c8:	8b e0       	ldi	r24, 0x0B	; 11
    e1ca:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1ce:	61 e0       	ldi	r22, 0x01	; 1
    e1d0:	86 e1       	ldi	r24, 0x16	; 22
    e1d2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1d6:	61 e0       	ldi	r22, 0x01	; 1
    e1d8:	88 e1       	ldi	r24, 0x18	; 24
    e1da:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1de:	61 e0       	ldi	r22, 0x01	; 1
    e1e0:	8a e1       	ldi	r24, 0x1A	; 26
    e1e2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1e6:	61 e0       	ldi	r22, 0x01	; 1
    e1e8:	8c e1       	ldi	r24, 0x1C	; 28
    e1ea:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1ee:	61 e0       	ldi	r22, 0x01	; 1
    e1f0:	85 e2       	ldi	r24, 0x25	; 37
    e1f2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1f6:	61 e0       	ldi	r22, 0x01	; 1
    e1f8:	82 e2       	ldi	r24, 0x22	; 34
    e1fa:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e1fe:	61 e0       	ldi	r22, 0x01	; 1
    e200:	80 e2       	ldi	r24, 0x20	; 32
    e202:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e206:	61 e0       	ldi	r22, 0x01	; 1
    e208:	8e e1       	ldi	r24, 0x1E	; 30
    e20a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e20e:	61 e0       	ldi	r22, 0x01	; 1
    e210:	87 e1       	ldi	r24, 0x17	; 23
    e212:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e216:	61 e0       	ldi	r22, 0x01	; 1
    e218:	89 e1       	ldi	r24, 0x19	; 25
    e21a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e21e:	61 e0       	ldi	r22, 0x01	; 1
    e220:	8b e1       	ldi	r24, 0x1B	; 27
    e222:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e226:	61 e0       	ldi	r22, 0x01	; 1
    e228:	8d e1       	ldi	r24, 0x1D	; 29
    e22a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e22e:	61 e0       	ldi	r22, 0x01	; 1
    e230:	83 e2       	ldi	r24, 0x23	; 35
    e232:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e236:	61 e0       	ldi	r22, 0x01	; 1
    e238:	81 e2       	ldi	r24, 0x21	; 33
    e23a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e23e:	61 e0       	ldi	r22, 0x01	; 1
    e240:	8f e1       	ldi	r24, 0x1F	; 31
    e242:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e246:	61 e0       	ldi	r22, 0x01	; 1
    e248:	81 e3       	ldi	r24, 0x31	; 49
    e24a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e24e:	61 e0       	ldi	r22, 0x01	; 1
    e250:	86 e0       	ldi	r24, 0x06	; 6
    e252:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e256:	61 e0       	ldi	r22, 0x01	; 1
    e258:	87 e0       	ldi	r24, 0x07	; 7
    e25a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e25e:	61 e0       	ldi	r22, 0x01	; 1
    e260:	88 e0       	ldi	r24, 0x08	; 8
    e262:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e266:	61 e0       	ldi	r22, 0x01	; 1
    e268:	89 e0       	ldi	r24, 0x09	; 9
    e26a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e26e:	61 e0       	ldi	r22, 0x01	; 1
    e270:	80 e3       	ldi	r24, 0x30	; 48
    e272:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e276:	61 e0       	ldi	r22, 0x01	; 1
    e278:	8f e2       	ldi	r24, 0x2F	; 47
    e27a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e27e:	61 e0       	ldi	r22, 0x01	; 1
    e280:	8e e2       	ldi	r24, 0x2E	; 46
    e282:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e286:	61 e0       	ldi	r22, 0x01	; 1
    e288:	8d e2       	ldi	r24, 0x2D	; 45
    e28a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e28e:	61 e0       	ldi	r22, 0x01	; 1
    e290:	85 e3       	ldi	r24, 0x35	; 53
    e292:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e296:	61 e0       	ldi	r22, 0x01	; 1
    e298:	84 e2       	ldi	r24, 0x24	; 36
    e29a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e29e:	61 e0       	ldi	r22, 0x01	; 1
    e2a0:	81 e0       	ldi	r24, 0x01	; 1
    e2a2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2a6:	61 e0       	ldi	r22, 0x01	; 1
    e2a8:	8c e0       	ldi	r24, 0x0C	; 12
    e2aa:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2ae:	61 e0       	ldi	r22, 0x01	; 1
    e2b0:	87 e2       	ldi	r24, 0x27	; 39
    e2b2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2b6:	61 e0       	ldi	r22, 0x01	; 1
    e2b8:	8e e1       	ldi	r24, 0x1E	; 30
    e2ba:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2be:	61 e0       	ldi	r22, 0x01	; 1
    e2c0:	8e e1       	ldi	r24, 0x1E	; 30
    e2c2:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    e2c6:	60 e0       	ldi	r22, 0x00	; 0
    e2c8:	87 e3       	ldi	r24, 0x37	; 55
    e2ca:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2ce:	60 e0       	ldi	r22, 0x00	; 0
    e2d0:	88 e3       	ldi	r24, 0x38	; 56
    e2d2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2d6:	62 e0       	ldi	r22, 0x02	; 2
    e2d8:	89 e3       	ldi	r24, 0x39	; 57
    e2da:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2de:	61 e0       	ldi	r22, 0x01	; 1
    e2e0:	8a e0       	ldi	r24, 0x0A	; 10
    e2e2:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    e2e6:	61 e0       	ldi	r22, 0x01	; 1
    e2e8:	8b e0       	ldi	r24, 0x0B	; 11
    e2ea:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    e2ee:	60 e0       	ldi	r22, 0x00	; 0
    e2f0:	89 e3       	ldi	r24, 0x39	; 57
    e2f2:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2f6:	60 e0       	ldi	r22, 0x00	; 0
    e2f8:	8a e3       	ldi	r24, 0x3A	; 58
    e2fa:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e2fe:	60 e0       	ldi	r22, 0x00	; 0
    e300:	8b e3       	ldi	r24, 0x3B	; 59
    e302:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e306:	86 e1       	ldi	r24, 0x16	; 22
    e308:	80 93 4c 14 	sts	0x144C, r24	; 0x80144c <_sRuble_Parameters+0x9e>
    e30c:	10 93 4d 14 	sts	0x144D, r17	; 0x80144d <_sRuble_Parameters+0x9f>
    e310:	8a e1       	ldi	r24, 0x1A	; 26
    e312:	80 93 4e 14 	sts	0x144E, r24	; 0x80144e <_sRuble_Parameters+0xa0>
    e316:	8c e1       	ldi	r24, 0x1C	; 28
    e318:	80 93 4f 14 	sts	0x144F, r24	; 0x80144f <_sRuble_Parameters+0xa1>
    e31c:	85 e2       	ldi	r24, 0x25	; 37
    e31e:	80 93 50 14 	sts	0x1450, r24	; 0x801450 <_sRuble_Parameters+0xa2>
    e322:	82 e2       	ldi	r24, 0x22	; 34
    e324:	80 93 51 14 	sts	0x1451, r24	; 0x801451 <_sRuble_Parameters+0xa3>
    e328:	80 e2       	ldi	r24, 0x20	; 32
    e32a:	80 93 52 14 	sts	0x1452, r24	; 0x801452 <_sRuble_Parameters+0xa4>
    e32e:	8e e1       	ldi	r24, 0x1E	; 30
    e330:	80 93 53 14 	sts	0x1453, r24	; 0x801453 <_sRuble_Parameters+0xa5>
    e334:	87 e1       	ldi	r24, 0x17	; 23
    e336:	80 93 54 14 	sts	0x1454, r24	; 0x801454 <_sRuble_Parameters+0xa6>
    e33a:	89 e1       	ldi	r24, 0x19	; 25
    e33c:	80 93 55 14 	sts	0x1455, r24	; 0x801455 <_sRuble_Parameters+0xa7>
    e340:	8b e1       	ldi	r24, 0x1B	; 27
    e342:	80 93 56 14 	sts	0x1456, r24	; 0x801456 <_sRuble_Parameters+0xa8>
    e346:	8d e1       	ldi	r24, 0x1D	; 29
    e348:	80 93 57 14 	sts	0x1457, r24	; 0x801457 <_sRuble_Parameters+0xa9>
    e34c:	83 e2       	ldi	r24, 0x23	; 35
    e34e:	80 93 58 14 	sts	0x1458, r24	; 0x801458 <_sRuble_Parameters+0xaa>
    e352:	81 e2       	ldi	r24, 0x21	; 33
    e354:	80 93 59 14 	sts	0x1459, r24	; 0x801459 <_sRuble_Parameters+0xab>
    e358:	8f e1       	ldi	r24, 0x1F	; 31
    e35a:	80 93 5a 14 	sts	0x145A, r24	; 0x80145a <_sRuble_Parameters+0xac>
    e35e:	81 e3       	ldi	r24, 0x31	; 49
    e360:	80 93 5b 14 	sts	0x145B, r24	; 0x80145b <_sRuble_Parameters+0xad>
    e364:	86 e0       	ldi	r24, 0x06	; 6
    e366:	80 93 5c 14 	sts	0x145C, r24	; 0x80145c <_sRuble_Parameters+0xae>
    e36a:	87 e0       	ldi	r24, 0x07	; 7
    e36c:	80 93 5d 14 	sts	0x145D, r24	; 0x80145d <_sRuble_Parameters+0xaf>
    e370:	88 e0       	ldi	r24, 0x08	; 8
    e372:	80 93 5e 14 	sts	0x145E, r24	; 0x80145e <_sRuble_Parameters+0xb0>
    e376:	89 e0       	ldi	r24, 0x09	; 9
    e378:	80 93 5f 14 	sts	0x145F, r24	; 0x80145f <_sRuble_Parameters+0xb1>
    e37c:	80 e3       	ldi	r24, 0x30	; 48
    e37e:	80 93 60 14 	sts	0x1460, r24	; 0x801460 <_sRuble_Parameters+0xb2>
    e382:	8f e2       	ldi	r24, 0x2F	; 47
    e384:	80 93 61 14 	sts	0x1461, r24	; 0x801461 <_sRuble_Parameters+0xb3>
    e388:	8e e2       	ldi	r24, 0x2E	; 46
    e38a:	80 93 62 14 	sts	0x1462, r24	; 0x801462 <_sRuble_Parameters+0xb4>
    e38e:	8d e2       	ldi	r24, 0x2D	; 45
    e390:	80 93 63 14 	sts	0x1463, r24	; 0x801463 <_sRuble_Parameters+0xb5>
    e394:	62 e0       	ldi	r22, 0x02	; 2
    e396:	89 e3       	ldi	r24, 0x39	; 57
    e398:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e39c:	62 e0       	ldi	r22, 0x02	; 2
    e39e:	8a e3       	ldi	r24, 0x3A	; 58
    e3a0:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e3a4:	62 e0       	ldi	r22, 0x02	; 2
    e3a6:	8b e3       	ldi	r24, 0x3B	; 59
    e3a8:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    e3ac:	0c e4       	ldi	r16, 0x4C	; 76
    e3ae:	14 e1       	ldi	r17, 0x14	; 20
    e3b0:	61 e0       	ldi	r22, 0x01	; 1
    e3b2:	f8 01       	movw	r30, r16
    e3b4:	81 91       	ld	r24, Z+
    e3b6:	8f 01       	movw	r16, r30
    e3b8:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    e3bc:	f4 e1       	ldi	r31, 0x14	; 20
    e3be:	04 36       	cpi	r16, 0x64	; 100
    e3c0:	1f 07       	cpc	r17, r31
    e3c2:	b1 f7       	brne	.-20     	; 0xe3b0 <_Z19Initialise_Hardwarev+0x2cc>
    e3c4:	6e 98       	cbi	0x0d, 6	; 13
    e3c6:	76 9a       	sbi	0x0e, 6	; 14
    e3c8:	68 ee       	ldi	r22, 0xE8	; 232
    e3ca:	73 e0       	ldi	r23, 0x03	; 3
    e3cc:	80 e0       	ldi	r24, 0x00	; 0
    e3ce:	90 e0       	ldi	r25, 0x00	; 0
    e3d0:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e3d4:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e3d8:	88 69       	ori	r24, 0x98	; 152
    e3da:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e3de:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e3e2:	86 60       	ori	r24, 0x06	; 6
    e3e4:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e3e8:	78 94       	sei
    e3ea:	68 ee       	ldi	r22, 0xE8	; 232
    e3ec:	73 e0       	ldi	r23, 0x03	; 3
    e3ee:	80 e0       	ldi	r24, 0x00	; 0
    e3f0:	90 e0       	ldi	r25, 0x00	; 0
    e3f2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e3f6:	c7 d3       	rcall	.+1934   	; 0xeb86 <_Z11Debug_Checkv>
    e3f8:	0e 94 0c 66 	call	0xcc18	; 0xcc18 <_Z9Lora_Initv>
    e3fc:	88 23       	and	r24, r24
    e3fe:	79 f0       	breq	.+30     	; 0xe41e <_Z19Initialise_Hardwarev+0x33a>
    e400:	0e 94 2e 66 	call	0xcc5c	; 0xcc5c <_Z13Lora_Set_Freqv>
    e404:	0e 94 3c 66 	call	0xcc78	; 0xcc78 <_Z15Lora_Set_Configv>
    e408:	0e 94 36 66 	call	0xcc6c	; 0xcc6c <_Z14Lora_Set_Powerv>
    e40c:	10 92 6c 14 	sts	0x146C, r1	; 0x80146c <_sRuble_Parameters+0xbe>
    e410:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e414:	81 30       	cpi	r24, 0x01	; 1
    e416:	11 f5       	brne	.+68     	; 0xe45c <_Z19Initialise_Hardwarev+0x378>
    e418:	62 eb       	ldi	r22, 0xB2	; 178
    e41a:	74 e2       	ldi	r23, 0x24	; 36
    e41c:	17 c0       	rjmp	.+46     	; 0xe44c <_Z19Initialise_Hardwarev+0x368>
    e41e:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e422:	82 60       	ori	r24, 0x02	; 2
    e424:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e428:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e42c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e430:	91 60       	ori	r25, 0x01	; 1
    e432:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e436:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e43a:	81 e0       	ldi	r24, 0x01	; 1
    e43c:	80 93 6c 14 	sts	0x146C, r24	; 0x80146c <_sRuble_Parameters+0xbe>
    e440:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e444:	81 30       	cpi	r24, 0x01	; 1
    e446:	51 f4       	brne	.+20     	; 0xe45c <_Z19Initialise_Hardwarev+0x378>
    e448:	6f e9       	ldi	r22, 0x9F	; 159
    e44a:	74 e2       	ldi	r23, 0x24	; 36
    e44c:	86 ec       	ldi	r24, 0xC6	; 198
    e44e:	94 e1       	ldi	r25, 0x14	; 20
    e450:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e454:	86 ec       	ldi	r24, 0xC6	; 198
    e456:	94 e1       	ldi	r25, 0x14	; 20
    e458:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    e45c:	80 9a       	sbi	0x10, 0	; 16
    e45e:	88 98       	cbi	0x11, 0	; 17
    e460:	68 e8       	ldi	r22, 0x88	; 136
    e462:	73 e1       	ldi	r23, 0x13	; 19
    e464:	80 e0       	ldi	r24, 0x00	; 0
    e466:	90 e0       	ldi	r25, 0x00	; 0
    e468:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e46c:	81 b3       	in	r24, 0x11	; 17
    e46e:	8e 6f       	ori	r24, 0xFE	; 254
    e470:	81 bb       	out	0x11, r24	; 17
    e472:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    e476:	84 60       	ori	r24, 0x04	; 4
    e478:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
    e47c:	0f db       	rcall	.-2530   	; 0xda9c <_Z16Display_Update_1v>
    e47e:	68 e8       	ldi	r22, 0x88	; 136
    e480:	73 e1       	ldi	r23, 0x13	; 19
    e482:	80 e0       	ldi	r24, 0x00	; 0
    e484:	90 e0       	ldi	r25, 0x00	; 0
    e486:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e48a:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    e48e:	82 60       	ori	r24, 0x02	; 2
    e490:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
    e494:	03 db       	rcall	.-2554   	; 0xda9c <_Z16Display_Update_1v>
    e496:	68 e8       	ldi	r22, 0x88	; 136
    e498:	73 e1       	ldi	r23, 0x13	; 19
    e49a:	80 e0       	ldi	r24, 0x00	; 0
    e49c:	90 e0       	ldi	r25, 0x00	; 0
    e49e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e4a2:	68 e8       	ldi	r22, 0x88	; 136
    e4a4:	73 e1       	ldi	r23, 0x13	; 19
    e4a6:	80 e0       	ldi	r24, 0x00	; 0
    e4a8:	90 e0       	ldi	r25, 0x00	; 0
    e4aa:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e4ae:	68 e8       	ldi	r22, 0x88	; 136
    e4b0:	73 e1       	ldi	r23, 0x13	; 19
    e4b2:	80 e0       	ldi	r24, 0x00	; 0
    e4b4:	90 e0       	ldi	r25, 0x00	; 0
    e4b6:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e4ba:	68 e8       	ldi	r22, 0x88	; 136
    e4bc:	73 e1       	ldi	r23, 0x13	; 19
    e4be:	80 e0       	ldi	r24, 0x00	; 0
    e4c0:	90 e0       	ldi	r25, 0x00	; 0
    e4c2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e4c6:	68 e8       	ldi	r22, 0x88	; 136
    e4c8:	73 e1       	ldi	r23, 0x13	; 19
    e4ca:	80 e0       	ldi	r24, 0x00	; 0
    e4cc:	90 e0       	ldi	r25, 0x00	; 0
    e4ce:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    e4d2:	ce 01       	movw	r24, r28
    e4d4:	01 96       	adiw	r24, 0x01	; 1
    e4d6:	23 e0       	ldi	r18, 0x03	; 3
    e4d8:	fc 01       	movw	r30, r24
    e4da:	11 92       	st	Z+, r1
    e4dc:	2a 95       	dec	r18
    e4de:	e9 f7       	brne	.-6      	; 0xe4da <_Z19Initialise_Hardwarev+0x3f6>
    e4e0:	2a e1       	ldi	r18, 0x1A	; 26
    e4e2:	29 83       	std	Y+1, r18	; 0x01
    e4e4:	01 e0       	ldi	r16, 0x01	; 1
    e4e6:	28 e8       	ldi	r18, 0x88	; 136
    e4e8:	33 e1       	ldi	r19, 0x13	; 19
    e4ea:	40 e0       	ldi	r20, 0x00	; 0
    e4ec:	50 e0       	ldi	r21, 0x00	; 0
    e4ee:	6e e1       	ldi	r22, 0x1E	; 30
    e4f0:	73 e0       	ldi	r23, 0x03	; 3
    e4f2:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e4f6:	0e 94 26 69 	call	0xd24c	; 0xd24c <_Z8Gsm_Initv>
    e4fa:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e4fe:	88 23       	and	r24, r24
    e500:	29 f0       	breq	.+10     	; 0xe50c <_Z19Initialise_Hardwarev+0x428>
    e502:	21 30       	cpi	r18, 0x01	; 1
    e504:	e9 f4       	brne	.+58     	; 0xe540 <_Z19Initialise_Hardwarev+0x45c>
    e506:	61 e9       	ldi	r22, 0x91	; 145
    e508:	74 e2       	ldi	r23, 0x24	; 36
    e50a:	12 c0       	rjmp	.+36     	; 0xe530 <_Z19Initialise_Hardwarev+0x44c>
    e50c:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e510:	81 60       	ori	r24, 0x01	; 1
    e512:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e516:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e51a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e51e:	91 60       	ori	r25, 0x01	; 1
    e520:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e524:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e528:	21 30       	cpi	r18, 0x01	; 1
    e52a:	51 f4       	brne	.+20     	; 0xe540 <_Z19Initialise_Hardwarev+0x45c>
    e52c:	6f e7       	ldi	r22, 0x7F	; 127
    e52e:	74 e2       	ldi	r23, 0x24	; 36
    e530:	86 ec       	ldi	r24, 0xC6	; 198
    e532:	94 e1       	ldi	r25, 0x14	; 20
    e534:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e538:	86 ec       	ldi	r24, 0xC6	; 198
    e53a:	94 e1       	ldi	r25, 0x14	; 20
    e53c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    e540:	81 e0       	ldi	r24, 0x01	; 1
    e542:	80 93 ab 14 	sts	0x14AB, r24	; 0x8014ab <_sRuble_Parameters+0xfd>
    e546:	0f 90       	pop	r0
    e548:	0f 90       	pop	r0
    e54a:	0f 90       	pop	r0
    e54c:	df 91       	pop	r29
    e54e:	cf 91       	pop	r28
    e550:	1f 91       	pop	r17
    e552:	0f 91       	pop	r16
    e554:	08 95       	ret

0000e556 <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e556:	cf 92       	push	r12
    e558:	df 92       	push	r13
    e55a:	ef 92       	push	r14
    e55c:	ff 92       	push	r15
    e55e:	0f 93       	push	r16
    e560:	cf 93       	push	r28
    e562:	df 93       	push	r29
    e564:	cd b7       	in	r28, 0x3d	; 61
    e566:	de b7       	in	r29, 0x3e	; 62
    e568:	c4 56       	subi	r28, 0x64	; 100
    e56a:	d1 09       	sbc	r29, r1
    e56c:	0f b6       	in	r0, 0x3f	; 63
    e56e:	f8 94       	cli
    e570:	de bf       	out	0x3e, r29	; 62
    e572:	0f be       	out	0x3f, r0	; 63
    e574:	cd bf       	out	0x3d, r28	; 61
    e576:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e578:	ce 01       	movw	r24, r28
    e57a:	01 96       	adiw	r24, 0x01	; 1
    e57c:	6c 01       	movw	r12, r24
    e57e:	84 e6       	ldi	r24, 0x64	; 100
    e580:	f6 01       	movw	r30, r12
    e582:	11 92       	st	Z+, r1
    e584:	8a 95       	dec	r24
    e586:	e9 f7       	brne	.-6      	; 0xe582 <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e588:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e58c:	81 30       	cpi	r24, 0x01	; 1
    e58e:	69 f4       	brne	.+26     	; 0xe5aa <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e590:	f7 01       	movw	r30, r14
    e592:	01 90       	ld	r0, Z+
    e594:	00 20       	and	r0, r0
    e596:	e9 f7       	brne	.-6      	; 0xe592 <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e598:	31 97       	sbiw	r30, 0x01	; 1
    e59a:	af 01       	movw	r20, r30
    e59c:	4e 19       	sub	r20, r14
    e59e:	5f 09       	sbc	r21, r15
    e5a0:	b7 01       	movw	r22, r14
    e5a2:	86 ec       	ldi	r24, 0xC6	; 198
    e5a4:	94 e1       	ldi	r25, 0x14	; 20
    e5a6:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
	}
	Reset_Buffer();
    e5aa:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e5ae:	f7 01       	movw	r30, r14
    e5b0:	01 90       	ld	r0, Z+
    e5b2:	00 20       	and	r0, r0
    e5b4:	e9 f7       	brne	.-6      	; 0xe5b0 <_Z14MQTT_SUBSCRIBEPc+0x5a>
    e5b6:	31 97       	sbiw	r30, 0x01	; 1
    e5b8:	ee 19       	sub	r30, r14
    e5ba:	ff 09       	sbc	r31, r15
    e5bc:	ff 93       	push	r31
    e5be:	ef 93       	push	r30
    e5c0:	8d ef       	ldi	r24, 0xFD	; 253
    e5c2:	94 e0       	ldi	r25, 0x04	; 4
    e5c4:	9f 93       	push	r25
    e5c6:	8f 93       	push	r24
    e5c8:	df 92       	push	r13
    e5ca:	cf 92       	push	r12
    e5cc:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e5d0:	02 e0       	ldi	r16, 0x02	; 2
    e5d2:	28 eb       	ldi	r18, 0xB8	; 184
    e5d4:	3b e0       	ldi	r19, 0x0B	; 11
    e5d6:	40 e0       	ldi	r20, 0x00	; 0
    e5d8:	50 e0       	ldi	r21, 0x00	; 0
    e5da:	64 e0       	ldi	r22, 0x04	; 4
    e5dc:	74 e0       	ldi	r23, 0x04	; 4
    e5de:	c6 01       	movw	r24, r12
    e5e0:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e5e4:	0f 90       	pop	r0
    e5e6:	0f 90       	pop	r0
    e5e8:	0f 90       	pop	r0
    e5ea:	0f 90       	pop	r0
    e5ec:	0f 90       	pop	r0
    e5ee:	0f 90       	pop	r0
    e5f0:	81 11       	cpse	r24, r1
    e5f2:	02 c0       	rjmp	.+4      	; 0xe5f8 <_Z14MQTT_SUBSCRIBEPc+0xa2>
				}
				return 1;
			}
		}
	}
	return 0;
    e5f4:	80 e0       	ldi	r24, 0x00	; 0
    e5f6:	36 c0       	rjmp	.+108    	; 0xe664 <_Z14MQTT_SUBSCRIBEPc+0x10e>
	Reset_Buffer();
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		Reset_Buffer();
    e5f8:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(topic);
    e5fc:	b7 01       	movw	r22, r14
    e5fe:	83 e8       	ldi	r24, 0x83	; 131
    e600:	96 e1       	ldi	r25, 0x16	; 22
    e602:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e606:	02 e0       	ldi	r16, 0x02	; 2
    e608:	28 eb       	ldi	r18, 0xB8	; 184
    e60a:	3b e0       	ldi	r19, 0x0B	; 11
    e60c:	40 e0       	ldi	r20, 0x00	; 0
    e60e:	50 e0       	ldi	r21, 0x00	; 0
    e610:	64 e0       	ldi	r22, 0x04	; 4
    e612:	74 e0       	ldi	r23, 0x04	; 4
    e614:	85 e1       	ldi	r24, 0x15	; 21
    e616:	95 e0       	ldi	r25, 0x05	; 5
    e618:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e61c:	88 23       	and	r24, r24
    e61e:	51 f3       	breq	.-44     	; 0xe5f4 <_Z14MQTT_SUBSCRIBEPc+0x9e>
		{
			Reset_Buffer();
    e620:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(topic);
    e624:	b7 01       	movw	r22, r14
    e626:	83 e8       	ldi	r24, 0x83	; 131
    e628:	96 e1       	ldi	r25, 0x16	; 22
    e62a:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e62e:	28 e8       	ldi	r18, 0x88	; 136
    e630:	33 e1       	ldi	r19, 0x13	; 19
    e632:	40 e0       	ldi	r20, 0x00	; 0
    e634:	50 e0       	ldi	r21, 0x00	; 0
    e636:	6a e2       	ldi	r22, 0x2A	; 42
    e638:	75 e0       	ldi	r23, 0x05	; 5
    e63a:	80 e0       	ldi	r24, 0x00	; 0
    e63c:	90 e0       	ldi	r25, 0x00	; 0
    e63e:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e642:	88 23       	and	r24, r24
    e644:	b9 f2       	breq	.-82     	; 0xe5f4 <_Z14MQTT_SUBSCRIBEPc+0x9e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e646:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e64a:	81 30       	cpi	r24, 0x01	; 1
    e64c:	51 f4       	brne	.+20     	; 0xe662 <_Z14MQTT_SUBSCRIBEPc+0x10c>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e64e:	6e e7       	ldi	r22, 0x7E	; 126
    e650:	73 e2       	ldi	r23, 0x23	; 35
    e652:	86 ec       	ldi	r24, 0xC6	; 198
    e654:	94 e1       	ldi	r25, 0x14	; 20
    e656:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e65a:	86 ec       	ldi	r24, 0xC6	; 198
    e65c:	94 e1       	ldi	r25, 0x14	; 20
    e65e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e662:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e664:	cc 59       	subi	r28, 0x9C	; 156
    e666:	df 4f       	sbci	r29, 0xFF	; 255
    e668:	0f b6       	in	r0, 0x3f	; 63
    e66a:	f8 94       	cli
    e66c:	de bf       	out	0x3e, r29	; 62
    e66e:	0f be       	out	0x3f, r0	; 63
    e670:	cd bf       	out	0x3d, r28	; 61
    e672:	df 91       	pop	r29
    e674:	cf 91       	pop	r28
    e676:	0f 91       	pop	r16
    e678:	ff 90       	pop	r15
    e67a:	ef 90       	pop	r14
    e67c:	df 90       	pop	r13
    e67e:	cf 90       	pop	r12
    e680:	08 95       	ret

0000e682 <_Z21Subscribed_data_checkv>:
}

bool Subscribed_data_check(void)
{
	
	if(rx_complete)
    e682:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    e686:	88 23       	and	r24, r24
    e688:	09 f4       	brne	.+2      	; 0xe68c <_Z21Subscribed_data_checkv+0xa>
    e68a:	48 c0       	rjmp	.+144    	; 0xe71c <_Z21Subscribed_data_checkv+0x9a>
	{
		rx_complete = _kRESET;
    e68c:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e690:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e694:	81 30       	cpi	r24, 0x01	; 1
    e696:	a9 f4       	brne	.+42     	; 0xe6c2 <_Z21Subscribed_data_checkv+0x40>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e698:	62 e0       	ldi	r22, 0x02	; 2
    e69a:	73 e2       	ldi	r23, 0x23	; 35
    e69c:	86 ec       	ldi	r24, 0xC6	; 198
    e69e:	94 e1       	ldi	r25, 0x14	; 20
    e6a0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e6a4:	e0 ed       	ldi	r30, 0xD0	; 208
    e6a6:	ff e0       	ldi	r31, 0x0F	; 15
    e6a8:	01 90       	ld	r0, Z+
    e6aa:	00 20       	and	r0, r0
    e6ac:	e9 f7       	brne	.-6      	; 0xe6a8 <_Z21Subscribed_data_checkv+0x26>
    e6ae:	31 97       	sbiw	r30, 0x01	; 1
    e6b0:	af 01       	movw	r20, r30
    e6b2:	40 5d       	subi	r20, 0xD0	; 208
    e6b4:	5f 40       	sbci	r21, 0x0F	; 15
    e6b6:	60 ed       	ldi	r22, 0xD0	; 208
    e6b8:	7f e0       	ldi	r23, 0x0F	; 15
    e6ba:	86 ec       	ldi	r24, 0xC6	; 198
    e6bc:	94 e1       	ldi	r25, 0x14	; 20
    e6be:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX") && monitor_serial_start < 7)
    e6c2:	69 e3       	ldi	r22, 0x39	; 57
    e6c4:	75 e0       	ldi	r23, 0x05	; 5
    e6c6:	80 ed       	ldi	r24, 0xD0	; 208
    e6c8:	9f e0       	ldi	r25, 0x0F	; 15
    e6ca:	0e 94 1f ee 	call	0x1dc3e	; 0x1dc3e <strstr>
    e6ce:	89 2b       	or	r24, r25
    e6d0:	b1 f0       	breq	.+44     	; 0xe6fe <_Z21Subscribed_data_checkv+0x7c>
    e6d2:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    e6d6:	87 30       	cpi	r24, 0x07	; 7
    e6d8:	90 f4       	brcc	.+36     	; 0xe6fe <_Z21Subscribed_data_checkv+0x7c>
		{
			monitor_serial_start = 0;
    e6da:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e6de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e6e2:	81 30       	cpi	r24, 0x01	; 1
    e6e4:	51 f4       	brne	.+20     	; 0xe6fa <_Z21Subscribed_data_checkv+0x78>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e6e6:	66 ef       	ldi	r22, 0xF6	; 246
    e6e8:	72 e2       	ldi	r23, 0x22	; 34
    e6ea:	86 ec       	ldi	r24, 0xC6	; 198
    e6ec:	94 e1       	ldi	r25, 0x14	; 20
    e6ee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e6f2:	86 ec       	ldi	r24, 0xC6	; 198
    e6f4:	94 e1       	ldi	r25, 0x14	; 20
    e6f6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e6fa:	81 e0       	ldi	r24, 0x01	; 1
    e6fc:	08 95       	ret
		}
		
		memset((char*)_gPub_Buff,0,strlen((const char*)_gPub_Buff));
    e6fe:	e0 ed       	ldi	r30, 0xD0	; 208
    e700:	ff e0       	ldi	r31, 0x0F	; 15
    e702:	01 90       	ld	r0, Z+
    e704:	00 20       	and	r0, r0
    e706:	e9 f7       	brne	.-6      	; 0xe702 <_Z21Subscribed_data_checkv+0x80>
    e708:	31 97       	sbiw	r30, 0x01	; 1
    e70a:	af 01       	movw	r20, r30
    e70c:	40 5d       	subi	r20, 0xD0	; 208
    e70e:	5f 40       	sbci	r21, 0x0F	; 15
    e710:	60 e0       	ldi	r22, 0x00	; 0
    e712:	70 e0       	ldi	r23, 0x00	; 0
    e714:	80 ed       	ldi	r24, 0xD0	; 208
    e716:	9f e0       	ldi	r25, 0x0F	; 15
    e718:	0e 94 08 ee 	call	0x1dc10	; 0x1dc10 <memset>
	}
	
	return 0;
    e71c:	80 e0       	ldi	r24, 0x00	; 0
			return 1;
		}
	}
	
	return 0;
}
    e71e:	08 95       	ret

0000e720 <_ZNK5EERefdeEv>:
	
	if(adc_value < required_current)
	{
		_sPump_Parameter.Irrigation_Status = 1;
	}
}
    e720:	fc 01       	movw	r30, r24
    e722:	80 81       	ld	r24, Z
    e724:	91 81       	ldd	r25, Z+1	; 0x01
    e726:	0c 94 14 f1 	jmp	0x1e228	; 0x1e228 <eeprom_read_byte>

0000e72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>:
    e72a:	0f 93       	push	r16
    e72c:	1f 93       	push	r17
    e72e:	cf 93       	push	r28
    e730:	df 93       	push	r29
    e732:	1f 92       	push	r1
    e734:	1f 92       	push	r1
    e736:	cd b7       	in	r28, 0x3d	; 61
    e738:	de b7       	in	r29, 0x3e	; 62
    e73a:	8b 01       	movw	r16, r22
    e73c:	9a 83       	std	Y+2, r25	; 0x02
    e73e:	89 83       	std	Y+1, r24	; 0x01
    e740:	ce 01       	movw	r24, r28
    e742:	01 96       	adiw	r24, 0x01	; 1
    e744:	ed df       	rcall	.-38     	; 0xe720 <_ZNK5EERefdeEv>
    e746:	f8 01       	movw	r30, r16
    e748:	80 83       	st	Z, r24
    e74a:	c8 01       	movw	r24, r16
    e74c:	0f 90       	pop	r0
    e74e:	0f 90       	pop	r0
    e750:	df 91       	pop	r29
    e752:	cf 91       	pop	r28
    e754:	1f 91       	pop	r17
    e756:	0f 91       	pop	r16
    e758:	08 95       	ret

0000e75a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>:
    e75a:	af 92       	push	r10
    e75c:	bf 92       	push	r11
    e75e:	cf 92       	push	r12
    e760:	df 92       	push	r13
    e762:	ef 92       	push	r14
    e764:	ff 92       	push	r15
    e766:	0f 93       	push	r16
    e768:	1f 93       	push	r17
    e76a:	cf 93       	push	r28
    e76c:	df 93       	push	r29
    e76e:	1f 92       	push	r1
    e770:	1f 92       	push	r1
    e772:	cd b7       	in	r28, 0x3d	; 61
    e774:	de b7       	in	r29, 0x3e	; 62
    e776:	8b 01       	movw	r16, r22
    e778:	6b 01       	movw	r12, r22
    e77a:	24 e0       	ldi	r18, 0x04	; 4
    e77c:	c2 0e       	add	r12, r18
    e77e:	d1 1c       	adc	r13, r1
    e780:	7b 01       	movw	r14, r22
    e782:	5c 01       	movw	r10, r24
    e784:	a6 1a       	sub	r10, r22
    e786:	b7 0a       	sbc	r11, r23
    e788:	c5 01       	movw	r24, r10
    e78a:	8e 0d       	add	r24, r14
    e78c:	9f 1d       	adc	r25, r15
    e78e:	9a 83       	std	Y+2, r25	; 0x02
    e790:	89 83       	std	Y+1, r24	; 0x01
    e792:	ce 01       	movw	r24, r28
    e794:	01 96       	adiw	r24, 0x01	; 1
    e796:	c4 df       	rcall	.-120    	; 0xe720 <_ZNK5EERefdeEv>
    e798:	f7 01       	movw	r30, r14
    e79a:	81 93       	st	Z+, r24
    e79c:	7f 01       	movw	r14, r30
    e79e:	ec 15       	cp	r30, r12
    e7a0:	fd 05       	cpc	r31, r13
    e7a2:	91 f7       	brne	.-28     	; 0xe788 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4+0x2e>
    e7a4:	c8 01       	movw	r24, r16
    e7a6:	0f 90       	pop	r0
    e7a8:	0f 90       	pop	r0
    e7aa:	df 91       	pop	r29
    e7ac:	cf 91       	pop	r28
    e7ae:	1f 91       	pop	r17
    e7b0:	0f 91       	pop	r16
    e7b2:	ff 90       	pop	r15
    e7b4:	ef 90       	pop	r14
    e7b6:	df 90       	pop	r13
    e7b8:	cf 90       	pop	r12
    e7ba:	bf 90       	pop	r11
    e7bc:	af 90       	pop	r10
    e7be:	08 95       	ret

0000e7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>:
    e7c0:	af 92       	push	r10
    e7c2:	bf 92       	push	r11
    e7c4:	cf 92       	push	r12
    e7c6:	df 92       	push	r13
    e7c8:	ef 92       	push	r14
    e7ca:	ff 92       	push	r15
    e7cc:	0f 93       	push	r16
    e7ce:	1f 93       	push	r17
    e7d0:	cf 93       	push	r28
    e7d2:	df 93       	push	r29
    e7d4:	1f 92       	push	r1
    e7d6:	1f 92       	push	r1
    e7d8:	cd b7       	in	r28, 0x3d	; 61
    e7da:	de b7       	in	r29, 0x3e	; 62
    e7dc:	8b 01       	movw	r16, r22
    e7de:	6b 01       	movw	r12, r22
    e7e0:	2b e0       	ldi	r18, 0x0B	; 11
    e7e2:	c2 0e       	add	r12, r18
    e7e4:	d1 1c       	adc	r13, r1
    e7e6:	7b 01       	movw	r14, r22
    e7e8:	5c 01       	movw	r10, r24
    e7ea:	a6 1a       	sub	r10, r22
    e7ec:	b7 0a       	sbc	r11, r23
    e7ee:	c5 01       	movw	r24, r10
    e7f0:	8e 0d       	add	r24, r14
    e7f2:	9f 1d       	adc	r25, r15
    e7f4:	9a 83       	std	Y+2, r25	; 0x02
    e7f6:	89 83       	std	Y+1, r24	; 0x01
    e7f8:	ce 01       	movw	r24, r28
    e7fa:	01 96       	adiw	r24, 0x01	; 1
    e7fc:	91 df       	rcall	.-222    	; 0xe720 <_ZNK5EERefdeEv>
    e7fe:	f7 01       	movw	r30, r14
    e800:	81 93       	st	Z+, r24
    e802:	7f 01       	movw	r14, r30
    e804:	ec 15       	cp	r30, r12
    e806:	fd 05       	cpc	r31, r13
    e808:	91 f7       	brne	.-28     	; 0xe7ee <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15+0x2e>
    e80a:	c8 01       	movw	r24, r16
    e80c:	0f 90       	pop	r0
    e80e:	0f 90       	pop	r0
    e810:	df 91       	pop	r29
    e812:	cf 91       	pop	r28
    e814:	1f 91       	pop	r17
    e816:	0f 91       	pop	r16
    e818:	ff 90       	pop	r15
    e81a:	ef 90       	pop	r14
    e81c:	df 90       	pop	r13
    e81e:	cf 90       	pop	r12
    e820:	bf 90       	pop	r11
    e822:	af 90       	pop	r10
    e824:	08 95       	ret

0000e826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
    e826:	0f 93       	push	r16
    e828:	1f 93       	push	r17
    e82a:	cf 93       	push	r28
    e82c:	df 93       	push	r29
    e82e:	1f 92       	push	r1
    e830:	1f 92       	push	r1
    e832:	cd b7       	in	r28, 0x3d	; 61
    e834:	de b7       	in	r29, 0x3e	; 62
    e836:	8b 01       	movw	r16, r22
    e838:	fb 01       	movw	r30, r22
    e83a:	60 81       	ld	r22, Z
    e83c:	9a 83       	std	Y+2, r25	; 0x02
    e83e:	89 83       	std	Y+1, r24	; 0x01
    e840:	ce 01       	movw	r24, r28
    e842:	01 96       	adiw	r24, 0x01	; 1
    e844:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    e848:	c8 01       	movw	r24, r16
    e84a:	0f 90       	pop	r0
    e84c:	0f 90       	pop	r0
    e84e:	df 91       	pop	r29
    e850:	cf 91       	pop	r28
    e852:	1f 91       	pop	r17
    e854:	0f 91       	pop	r16
    e856:	08 95       	ret

0000e858 <_Z11Check_Phasev>:
    e858:	cf 93       	push	r28
    e85a:	87 e3       	ldi	r24, 0x37	; 55
    e85c:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    e860:	89 2b       	or	r24, r25
    e862:	69 f0       	breq	.+26     	; 0xe87e <_Z11Check_Phasev+0x26>
    e864:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e868:	81 30       	cpi	r24, 0x01	; 1
    e86a:	31 f4       	brne	.+12     	; 0xe878 <_Z11Check_Phasev+0x20>
    e86c:	65 ed       	ldi	r22, 0xD5	; 213
    e86e:	75 e2       	ldi	r23, 0x25	; 37
    e870:	86 ec       	ldi	r24, 0xC6	; 198
    e872:	94 e1       	ldi	r25, 0x14	; 20
    e874:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e878:	10 92 e4 0c 	sts	0x0CE4, r1	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    e87c:	2f c0       	rjmp	.+94     	; 0xe8dc <_Z11Check_Phasev+0x84>
    e87e:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    e882:	8d 33       	cpi	r24, 0x3D	; 61
    e884:	38 f0       	brcs	.+14     	; 0xe894 <_Z11Check_Phasev+0x3c>
    e886:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e88a:	81 30       	cpi	r24, 0x01	; 1
    e88c:	f9 f4       	brne	.+62     	; 0xe8cc <_Z11Check_Phasev+0x74>
    e88e:	65 ec       	ldi	r22, 0xC5	; 197
    e890:	75 e2       	ldi	r23, 0x25	; 37
    e892:	18 c0       	rjmp	.+48     	; 0xe8c4 <_Z11Check_Phasev+0x6c>
    e894:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    e898:	8d 33       	cpi	r24, 0x3D	; 61
    e89a:	d0 f4       	brcc	.+52     	; 0xe8d0 <_Z11Check_Phasev+0x78>
    e89c:	87 e3       	ldi	r24, 0x37	; 55
    e89e:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    e8a2:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e8a6:	89 2b       	or	r24, r25
    e8a8:	49 f0       	breq	.+18     	; 0xe8bc <_Z11Check_Phasev+0x64>
    e8aa:	c1 30       	cpi	r28, 0x01	; 1
    e8ac:	b9 f4       	brne	.+46     	; 0xe8dc <_Z11Check_Phasev+0x84>
    e8ae:	6f ea       	ldi	r22, 0xAF	; 175
    e8b0:	75 e2       	ldi	r23, 0x25	; 37
    e8b2:	86 ec       	ldi	r24, 0xC6	; 198
    e8b4:	94 e1       	ldi	r25, 0x14	; 20
    e8b6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e8ba:	11 c0       	rjmp	.+34     	; 0xe8de <_Z11Check_Phasev+0x86>
    e8bc:	c1 30       	cpi	r28, 0x01	; 1
    e8be:	31 f4       	brne	.+12     	; 0xe8cc <_Z11Check_Phasev+0x74>
    e8c0:	6d e9       	ldi	r22, 0x9D	; 157
    e8c2:	75 e2       	ldi	r23, 0x25	; 37
    e8c4:	86 ec       	ldi	r24, 0xC6	; 198
    e8c6:	94 e1       	ldi	r25, 0x14	; 20
    e8c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e8cc:	c0 e0       	ldi	r28, 0x00	; 0
    e8ce:	07 c0       	rjmp	.+14     	; 0xe8de <_Z11Check_Phasev+0x86>
    e8d0:	6b e8       	ldi	r22, 0x8B	; 139
    e8d2:	75 e2       	ldi	r23, 0x25	; 37
    e8d4:	86 ec       	ldi	r24, 0xC6	; 198
    e8d6:	94 e1       	ldi	r25, 0x14	; 20
    e8d8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e8dc:	c1 e0       	ldi	r28, 0x01	; 1
    e8de:	8c 2f       	mov	r24, r28
    e8e0:	cf 91       	pop	r28
    e8e2:	08 95       	ret

0000e8e4 <_Z9Check_Simc>:
    e8e4:	0f 93       	push	r16
    e8e6:	cf 93       	push	r28
    e8e8:	df 93       	push	r29
    e8ea:	1f 92       	push	r1
    e8ec:	1f 92       	push	r1
    e8ee:	cd b7       	in	r28, 0x3d	; 61
    e8f0:	de b7       	in	r29, 0x3e	; 62
    e8f2:	90 91 de 0c 	lds	r25, 0x0CDE	; 0x800cde <_ZZ9Check_SimcE7counter>
    e8f6:	9f 5f       	subi	r25, 0xFF	; 255
    e8f8:	90 93 de 0c 	sts	0x0CDE, r25	; 0x800cde <_ZZ9Check_SimcE7counter>
    e8fc:	83 30       	cpi	r24, 0x03	; 3
    e8fe:	09 f0       	breq	.+2      	; 0xe902 <_Z9Check_Simc+0x1e>
    e900:	62 c0       	rjmp	.+196    	; 0xe9c6 <_Z9Check_Simc+0xe2>
    e902:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    e906:	81 30       	cpi	r24, 0x01	; 1
    e908:	d1 f5       	brne	.+116    	; 0xe97e <_Z9Check_Simc+0x9a>
    e90a:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e90e:	80 7f       	andi	r24, 0xF0	; 240
    e910:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e914:	1a 82       	std	Y+2, r1	; 0x02
    e916:	19 82       	std	Y+1, r1	; 0x01
    e918:	8a e1       	ldi	r24, 0x1A	; 26
    e91a:	89 83       	std	Y+1, r24	; 0x01
    e91c:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    e920:	be 01       	movw	r22, r28
    e922:	6f 5f       	subi	r22, 0xFF	; 255
    e924:	7f 4f       	sbci	r23, 0xFF	; 255
    e926:	83 e8       	ldi	r24, 0x83	; 131
    e928:	96 e1       	ldi	r25, 0x16	; 22
    e92a:	0e 94 97 d5 	call	0x1ab2e	; 0x1ab2e <_ZN5Print7printlnEPKc>
    e92e:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    e932:	6f e7       	ldi	r22, 0x7F	; 127
    e934:	75 e2       	ldi	r23, 0x25	; 37
    e936:	83 e8       	ldi	r24, 0x83	; 131
    e938:	96 e1       	ldi	r25, 0x16	; 22
    e93a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e93e:	01 e0       	ldi	r16, 0x01	; 1
    e940:	20 e1       	ldi	r18, 0x10	; 16
    e942:	37 e2       	ldi	r19, 0x27	; 39
    e944:	40 e0       	ldi	r20, 0x00	; 0
    e946:	50 e0       	ldi	r21, 0x00	; 0
    e948:	6e e1       	ldi	r22, 0x1E	; 30
    e94a:	73 e0       	ldi	r23, 0x03	; 3
    e94c:	80 e0       	ldi	r24, 0x00	; 0
    e94e:	90 e0       	ldi	r25, 0x00	; 0
    e950:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e954:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    e958:	6a e7       	ldi	r22, 0x7A	; 122
    e95a:	75 e2       	ldi	r23, 0x25	; 37
    e95c:	83 e8       	ldi	r24, 0x83	; 131
    e95e:	96 e1       	ldi	r25, 0x16	; 22
    e960:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e964:	02 e0       	ldi	r16, 0x02	; 2
    e966:	28 eb       	ldi	r18, 0xB8	; 184
    e968:	3b e0       	ldi	r19, 0x0B	; 11
    e96a:	40 e0       	ldi	r20, 0x00	; 0
    e96c:	50 e0       	ldi	r21, 0x00	; 0
    e96e:	6e e1       	ldi	r22, 0x1E	; 30
    e970:	73 e0       	ldi	r23, 0x03	; 3
    e972:	80 e0       	ldi	r24, 0x00	; 0
    e974:	90 e0       	ldi	r25, 0x00	; 0
    e976:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e97a:	0e 94 26 69 	call	0xd24c	; 0xd24c <_Z8Gsm_Initv>
    e97e:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    e982:	61 e7       	ldi	r22, 0x71	; 113
    e984:	75 e2       	ldi	r23, 0x25	; 37
    e986:	83 e8       	ldi	r24, 0x83	; 131
    e988:	96 e1       	ldi	r25, 0x16	; 22
    e98a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    e98e:	02 e0       	ldi	r16, 0x02	; 2
    e990:	20 ed       	ldi	r18, 0xD0	; 208
    e992:	37 e0       	ldi	r19, 0x07	; 7
    e994:	40 e0       	ldi	r20, 0x00	; 0
    e996:	50 e0       	ldi	r21, 0x00	; 0
    e998:	6e e1       	ldi	r22, 0x1E	; 30
    e99a:	73 e0       	ldi	r23, 0x03	; 3
    e99c:	80 e0       	ldi	r24, 0x00	; 0
    e99e:	90 e0       	ldi	r25, 0x00	; 0
    e9a0:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    e9a4:	81 11       	cpse	r24, r1
    e9a6:	0a c0       	rjmp	.+20     	; 0xe9bc <_Z9Check_Simc+0xd8>
    e9a8:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e9ac:	80 7f       	andi	r24, 0xF0	; 240
    e9ae:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e9b2:	81 e0       	ldi	r24, 0x01	; 1
    e9b4:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e9b8:	80 e0       	ldi	r24, 0x00	; 0
    e9ba:	05 c0       	rjmp	.+10     	; 0xe9c6 <_Z9Check_Simc+0xe2>
    e9bc:	82 e0       	ldi	r24, 0x02	; 2
    e9be:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e9c2:	81 e0       	ldi	r24, 0x01	; 1
    e9c4:	00 c0       	rjmp	.+0      	; 0xe9c6 <_Z9Check_Simc+0xe2>
    e9c6:	0f 90       	pop	r0
    e9c8:	0f 90       	pop	r0
    e9ca:	df 91       	pop	r29
    e9cc:	cf 91       	pop	r28
    e9ce:	0f 91       	pop	r16
    e9d0:	08 95       	ret

0000e9d2 <_Z31Keeps_Monitor_Server_Connectionv>:
    e9d2:	84 e6       	ldi	r24, 0x64	; 100
    e9d4:	80 93 dd 0c 	sts	0x0CDD, r24	; 0x800cdd <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
    e9d8:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e9dc:	81 11       	cpse	r24, r1
    e9de:	40 c0       	rjmp	.+128    	; 0xea60 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    e9e0:	80 91 dc 0c 	lds	r24, 0x0CDC	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e9e4:	85 36       	cpi	r24, 0x65	; 101
    e9e6:	a8 f1       	brcs	.+106    	; 0xea52 <_Z31Keeps_Monitor_Server_Connectionv+0x80>
    e9e8:	10 92 dc 0c 	sts	0x0CDC, r1	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e9ec:	0e 94 74 6c 	call	0xd8e8	; 0xd8e8 <_Z9MQTT_Loopv>
    e9f0:	81 11       	cpse	r24, r1
    e9f2:	32 c0       	rjmp	.+100    	; 0xea58 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e9f4:	82 e0       	ldi	r24, 0x02	; 2
    e9f6:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
    e9fa:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    e9fe:	8b 7f       	andi	r24, 0xFB	; 251
    ea00:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
    ea04:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea08:	83 30       	cpi	r24, 0x03	; 3
    ea0a:	78 f4       	brcc	.+30     	; 0xea2a <_Z31Keeps_Monitor_Server_Connectionv+0x58>
    ea0c:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
    ea10:	0e 94 59 81 	call	0x102b2	; 0x102b2 <_Z14Ping_to_Serverv>
    ea14:	81 11       	cpse	r24, r1
    ea16:	06 c0       	rjmp	.+12     	; 0xea24 <_Z31Keeps_Monitor_Server_Connectionv+0x52>
    ea18:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea1c:	8f 5f       	subi	r24, 0xFF	; 255
    ea1e:	80 93 db 0c 	sts	0x0CDB, r24	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea22:	1a c0       	rjmp	.+52     	; 0xea58 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    ea24:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea28:	17 c0       	rjmp	.+46     	; 0xea58 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    ea2a:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    ea2e:	81 30       	cpi	r24, 0x01	; 1
    ea30:	b9 f0       	breq	.+46     	; 0xea60 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    ea32:	81 e0       	ldi	r24, 0x01	; 1
    ea34:	80 93 68 14 	sts	0x1468, r24	; 0x801468 <_sRuble_Parameters+0xba>
    ea38:	8e e1       	ldi	r24, 0x1E	; 30
    ea3a:	90 e0       	ldi	r25, 0x00	; 0
    ea3c:	a0 e0       	ldi	r26, 0x00	; 0
    ea3e:	b0 e0       	ldi	r27, 0x00	; 0
    ea40:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    ea44:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    ea48:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    ea4c:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    ea50:	03 c0       	rjmp	.+6      	; 0xea58 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    ea52:	8f 5f       	subi	r24, 0xFF	; 255
    ea54:	80 93 dc 0c 	sts	0x0CDC, r24	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    ea58:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    ea5c:	88 23       	and	r24, r24
    ea5e:	e1 f0       	breq	.+56     	; 0xea98 <_Z31Keeps_Monitor_Server_Connectionv+0xc6>
    ea60:	80 91 d7 0c 	lds	r24, 0x0CD7	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    ea64:	90 91 d8 0c 	lds	r25, 0x0CD8	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    ea68:	a0 91 d9 0c 	lds	r26, 0x0CD9	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    ea6c:	b0 91 da 0c 	lds	r27, 0x0CDA	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    ea70:	00 97       	sbiw	r24, 0x00	; 0
    ea72:	a1 05       	cpc	r26, r1
    ea74:	b1 05       	cpc	r27, r1
    ea76:	61 f0       	breq	.+24     	; 0xea90 <_Z31Keeps_Monitor_Server_Connectionv+0xbe>
    ea78:	01 97       	sbiw	r24, 0x01	; 1
    ea7a:	a1 09       	sbc	r26, r1
    ea7c:	b1 09       	sbc	r27, r1
    ea7e:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    ea82:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    ea86:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    ea8a:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    ea8e:	08 95       	ret
    ea90:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
    ea94:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea98:	08 95       	ret

0000ea9a <_Z19Pump_Run_Monitoringv>:
    ea9a:	cf 92       	push	r12
    ea9c:	df 92       	push	r13
    ea9e:	ef 92       	push	r14
    eaa0:	ff 92       	push	r15
    eaa2:	cf 93       	push	r28
    eaa4:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    eaa8:	81 11       	cpse	r24, r1
    eaaa:	50 c0       	rjmp	.+160    	; 0xeb4c <_Z19Pump_Run_Monitoringv+0xb2>
    eaac:	c0 91 79 14 	lds	r28, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    eab0:	c1 30       	cpi	r28, 0x01	; 1
    eab2:	09 f0       	breq	.+2      	; 0xeab6 <_Z19Pump_Run_Monitoringv+0x1c>
    eab4:	42 c0       	rjmp	.+132    	; 0xeb3a <_Z19Pump_Run_Monitoringv+0xa0>
    eab6:	c0 90 a4 13 	lds	r12, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    eaba:	d0 90 a5 13 	lds	r13, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    eabe:	e0 90 a6 13 	lds	r14, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    eac2:	f0 90 a7 13 	lds	r15, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    eac6:	20 e0       	ldi	r18, 0x00	; 0
    eac8:	30 e0       	ldi	r19, 0x00	; 0
    eaca:	48 ec       	ldi	r20, 0xC8	; 200
    eacc:	52 e4       	ldi	r21, 0x42	; 66
    eace:	c7 01       	movw	r24, r14
    ead0:	b6 01       	movw	r22, r12
    ead2:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
    ead6:	20 e0       	ldi	r18, 0x00	; 0
    ead8:	30 e0       	ldi	r19, 0x00	; 0
    eada:	44 eb       	ldi	r20, 0xB4	; 180
    eadc:	52 e4       	ldi	r21, 0x42	; 66
    eade:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    eae2:	9b 01       	movw	r18, r22
    eae4:	ac 01       	movw	r20, r24
    eae6:	c7 01       	movw	r24, r14
    eae8:	b6 01       	movw	r22, r12
    eaea:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <__subsf3>
    eaee:	9b 01       	movw	r18, r22
    eaf0:	ac 01       	movw	r20, r24
    eaf2:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    eaf6:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    eafa:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    eafe:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    eb02:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    eb06:	18 16       	cp	r1, r24
    eb08:	24 f4       	brge	.+8      	; 0xeb12 <_Z19Pump_Run_Monitoringv+0x78>
    eb0a:	c0 93 a1 14 	sts	0x14A1, r28	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eb0e:	82 e0       	ldi	r24, 0x02	; 2
    eb10:	03 c0       	rjmp	.+6      	; 0xeb18 <_Z19Pump_Run_Monitoringv+0x7e>
    eb12:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eb16:	84 e0       	ldi	r24, 0x04	; 4
    eb18:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    eb1c:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    eb20:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    eb24:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    eb28:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    eb2c:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    eb30:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    eb34:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
    eb38:	20 c0       	rjmp	.+64     	; 0xeb7a <_Z19Pump_Run_Monitoringv+0xe0>
    eb3a:	8a e0       	ldi	r24, 0x0A	; 10
    eb3c:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    eb40:	89 2b       	or	r24, r25
    eb42:	41 f4       	brne	.+16     	; 0xeb54 <_Z19Pump_Run_Monitoringv+0xba>
    eb44:	81 e0       	ldi	r24, 0x01	; 1
    eb46:	80 93 a1 14 	sts	0x14A1, r24	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eb4a:	17 c0       	rjmp	.+46     	; 0xeb7a <_Z19Pump_Run_Monitoringv+0xe0>
    eb4c:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    eb50:	81 30       	cpi	r24, 0x01	; 1
    eb52:	19 f0       	breq	.+6      	; 0xeb5a <_Z19Pump_Run_Monitoringv+0xc0>
    eb54:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eb58:	10 c0       	rjmp	.+32     	; 0xeb7a <_Z19Pump_Run_Monitoringv+0xe0>
    eb5a:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    eb5e:	90 e0       	ldi	r25, 0x00	; 0
    eb60:	02 97       	sbiw	r24, 0x02	; 2
    eb62:	2b e0       	ldi	r18, 0x0B	; 11
    eb64:	28 9f       	mul	r18, r24
    eb66:	f0 01       	movw	r30, r0
    eb68:	29 9f       	mul	r18, r25
    eb6a:	f0 0d       	add	r31, r0
    eb6c:	11 24       	eor	r1, r1
    eb6e:	ec 50       	subi	r30, 0x0C	; 12
    eb70:	f4 4f       	sbci	r31, 0xF4	; 244
    eb72:	80 85       	ldd	r24, Z+8	; 0x08
    eb74:	86 ff       	sbrs	r24, 6
    eb76:	ee cf       	rjmp	.-36     	; 0xeb54 <_Z19Pump_Run_Monitoringv+0xba>
    eb78:	e5 cf       	rjmp	.-54     	; 0xeb44 <_Z19Pump_Run_Monitoringv+0xaa>
    eb7a:	cf 91       	pop	r28
    eb7c:	ff 90       	pop	r15
    eb7e:	ef 90       	pop	r14
    eb80:	df 90       	pop	r13
    eb82:	cf 90       	pop	r12
    eb84:	08 95       	ret

0000eb86 <_Z11Debug_Checkv>:
    eb86:	88 e3       	ldi	r24, 0x38	; 56
    eb88:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    eb8c:	89 2b       	or	r24, r25
    eb8e:	21 f0       	breq	.+8      	; 0xeb98 <_Z11Debug_Checkv+0x12>
    eb90:	10 92 ac 14 	sts	0x14AC, r1	; 0x8014ac <_sRuble_Parameters+0xfe>
    eb94:	81 e0       	ldi	r24, 0x01	; 1
    eb96:	08 95       	ret
    eb98:	81 e0       	ldi	r24, 0x01	; 1
    eb9a:	80 93 ac 14 	sts	0x14AC, r24	; 0x8014ac <_sRuble_Parameters+0xfe>
    eb9e:	80 e0       	ldi	r24, 0x00	; 0
    eba0:	08 95       	ret

0000eba2 <_Z8My_Delayj>:
    eba2:	ef 92       	push	r14
    eba4:	ff 92       	push	r15
    eba6:	0f 93       	push	r16
    eba8:	1f 93       	push	r17
    ebaa:	cf 93       	push	r28
    ebac:	68 ee       	ldi	r22, 0xE8	; 232
    ebae:	73 e0       	ldi	r23, 0x03	; 3
    ebb0:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
    ebb4:	8b 01       	movw	r16, r22
    ebb6:	c0 e0       	ldi	r28, 0x00	; 0
    ebb8:	80 ed       	ldi	r24, 0xD0	; 208
    ebba:	e8 2e       	mov	r14, r24
    ebbc:	8f e0       	ldi	r24, 0x0F	; 15
    ebbe:	f8 2e       	mov	r15, r24
    ebc0:	8c 2f       	mov	r24, r28
    ebc2:	90 e0       	ldi	r25, 0x00	; 0
    ebc4:	80 17       	cp	r24, r16
    ebc6:	91 07       	cpc	r25, r17
    ebc8:	f0 f4       	brcc	.+60     	; 0xec06 <_Z8My_Delayj+0x64>
    ebca:	68 ee       	ldi	r22, 0xE8	; 232
    ebcc:	73 e0       	ldi	r23, 0x03	; 3
    ebce:	80 e0       	ldi	r24, 0x00	; 0
    ebd0:	90 e0       	ldi	r25, 0x00	; 0
    ebd2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
    ebd6:	55 dd       	rcall	.-1366   	; 0xe682 <_Z21Subscribed_data_checkv>
    ebd8:	88 23       	and	r24, r24
    ebda:	99 f0       	breq	.+38     	; 0xec02 <_Z8My_Delayj+0x60>
    ebdc:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
    ebe0:	88 23       	and	r24, r24
    ebe2:	79 f0       	breq	.+30     	; 0xec02 <_Z8My_Delayj+0x60>
    ebe4:	f7 01       	movw	r30, r14
    ebe6:	01 90       	ld	r0, Z+
    ebe8:	00 20       	and	r0, r0
    ebea:	e9 f7       	brne	.-6      	; 0xebe6 <_Z8My_Delayj+0x44>
    ebec:	31 97       	sbiw	r30, 0x01	; 1
    ebee:	af 01       	movw	r20, r30
    ebf0:	40 5d       	subi	r20, 0xD0	; 208
    ebf2:	5f 40       	sbci	r21, 0x0F	; 15
    ebf4:	21 e0       	ldi	r18, 0x01	; 1
    ebf6:	60 ed       	ldi	r22, 0xD0	; 208
    ebf8:	7f e0       	ldi	r23, 0x0F	; 15
    ebfa:	82 e6       	ldi	r24, 0x62	; 98
    ebfc:	9f e0       	ldi	r25, 0x0F	; 15
    ebfe:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
    ec02:	cf 5f       	subi	r28, 0xFF	; 255
    ec04:	dd cf       	rjmp	.-70     	; 0xebc0 <_Z8My_Delayj+0x1e>
    ec06:	cf 91       	pop	r28
    ec08:	1f 91       	pop	r17
    ec0a:	0f 91       	pop	r16
    ec0c:	ff 90       	pop	r15
    ec0e:	ef 90       	pop	r14
    ec10:	08 95       	ret

0000ec12 <_Z19Calibration_Of_Pumpv>:
    ec12:	2f 92       	push	r2
    ec14:	3f 92       	push	r3
    ec16:	4f 92       	push	r4
    ec18:	5f 92       	push	r5
    ec1a:	6f 92       	push	r6
    ec1c:	7f 92       	push	r7
    ec1e:	8f 92       	push	r8
    ec20:	9f 92       	push	r9
    ec22:	af 92       	push	r10
    ec24:	bf 92       	push	r11
    ec26:	cf 92       	push	r12
    ec28:	df 92       	push	r13
    ec2a:	ef 92       	push	r14
    ec2c:	ff 92       	push	r15
    ec2e:	0f 93       	push	r16
    ec30:	1f 93       	push	r17
    ec32:	cf 93       	push	r28
    ec34:	df 93       	push	r29
    ec36:	cd b7       	in	r28, 0x3d	; 61
    ec38:	de b7       	in	r29, 0x3e	; 62
    ec3a:	c0 54       	subi	r28, 0x40	; 64
    ec3c:	d1 09       	sbc	r29, r1
    ec3e:	0f b6       	in	r0, 0x3f	; 63
    ec40:	f8 94       	cli
    ec42:	de bf       	out	0x3e, r29	; 62
    ec44:	0f be       	out	0x3f, r0	; 63
    ec46:	cd bf       	out	0x3d, r28	; 61
    ec48:	60 91 67 14 	lds	r22, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ec4c:	61 30       	cpi	r22, 0x01	; 1
    ec4e:	09 f0       	breq	.+2      	; 0xec52 <_Z19Calibration_Of_Pumpv+0x40>
    ec50:	ec c0       	rjmp	.+472    	; 0xee2a <_Z19Calibration_Of_Pumpv+0x218>
    ec52:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
    ec56:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ec5a:	62 30       	cpi	r22, 0x02	; 2
    ec5c:	d8 f1       	brcs	.+118    	; 0xecd4 <_Z19Calibration_Of_Pumpv+0xc2>
    ec5e:	84 ed       	ldi	r24, 0xD4	; 212
    ec60:	93 e0       	ldi	r25, 0x03	; 3
    ec62:	e0 ed       	ldi	r30, 0xD0	; 208
    ec64:	ff e0       	ldi	r31, 0x0F	; 15
    ec66:	df 01       	movw	r26, r30
    ec68:	9c 01       	movw	r18, r24
    ec6a:	1d 92       	st	X+, r1
    ec6c:	21 50       	subi	r18, 0x01	; 1
    ec6e:	30 40       	sbci	r19, 0x00	; 0
    ec70:	e1 f7       	brne	.-8      	; 0xec6a <_Z19Calibration_Of_Pumpv+0x58>
    ec72:	62 50       	subi	r22, 0x02	; 2
    ec74:	81 e0       	ldi	r24, 0x01	; 1
    ec76:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
    ec7a:	88 23       	and	r24, r24
    ec7c:	19 f0       	breq	.+6      	; 0xec84 <_Z19Calibration_Of_Pumpv+0x72>
    ec7e:	62 e4       	ldi	r22, 0x42	; 66
    ec80:	75 e0       	ldi	r23, 0x05	; 5
    ec82:	02 c0       	rjmp	.+4      	; 0xec88 <_Z19Calibration_Of_Pumpv+0x76>
    ec84:	66 e5       	ldi	r22, 0x56	; 86
    ec86:	75 e0       	ldi	r23, 0x05	; 5
    ec88:	80 ed       	ldi	r24, 0xD0	; 208
    ec8a:	9f e0       	ldi	r25, 0x0F	; 15
    ec8c:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    ec90:	8e 01       	movw	r16, r28
    ec92:	0f 5f       	subi	r16, 0xFF	; 255
    ec94:	1f 4f       	sbci	r17, 0xFF	; 255
    ec96:	88 e2       	ldi	r24, 0x28	; 40
    ec98:	d8 01       	movw	r26, r16
    ec9a:	1d 92       	st	X+, r1
    ec9c:	8a 95       	dec	r24
    ec9e:	e9 f7       	brne	.-6      	; 0xec9a <_Z19Calibration_Of_Pumpv+0x88>
    eca0:	8e ec       	ldi	r24, 0xCE	; 206
    eca2:	93 e1       	ldi	r25, 0x13	; 19
    eca4:	9f 93       	push	r25
    eca6:	8f 93       	push	r24
    eca8:	8b e6       	ldi	r24, 0x6B	; 107
    ecaa:	95 e0       	ldi	r25, 0x05	; 5
    ecac:	9f 93       	push	r25
    ecae:	8f 93       	push	r24
    ecb0:	1f 93       	push	r17
    ecb2:	0f 93       	push	r16
    ecb4:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    ecb8:	60 ed       	ldi	r22, 0xD0	; 208
    ecba:	7f e0       	ldi	r23, 0x0F	; 15
    ecbc:	c8 01       	movw	r24, r16
    ecbe:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
    ecc2:	81 e0       	ldi	r24, 0x01	; 1
    ecc4:	90 e0       	ldi	r25, 0x00	; 0
    ecc6:	0f 90       	pop	r0
    ecc8:	0f 90       	pop	r0
    ecca:	0f 90       	pop	r0
    eccc:	0f 90       	pop	r0
    ecce:	0f 90       	pop	r0
    ecd0:	0f 90       	pop	r0
    ecd2:	5d c1       	rjmp	.+698    	; 0xef8e <_Z19Calibration_Of_Pumpv+0x37c>
    ecd4:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ecd8:	21 96       	adiw	r28, 0x01	; 1
    ecda:	6c af       	std	Y+60, r22	; 0x3c
    ecdc:	7d af       	std	Y+61, r23	; 0x3d
    ecde:	8e af       	std	Y+62, r24	; 0x3e
    ece0:	9f af       	std	Y+63, r25	; 0x3f
    ece2:	21 97       	sbiw	r28, 0x01	; 1
    ece4:	1e 01       	movw	r2, r28
    ece6:	bd e3       	ldi	r27, 0x3D	; 61
    ece8:	2b 0e       	add	r2, r27
    ecea:	31 1c       	adc	r3, r1
    ecec:	6e 01       	movw	r12, r28
    ecee:	e9 e2       	ldi	r30, 0x29	; 41
    ecf0:	ce 0e       	add	r12, r30
    ecf2:	d1 1c       	adc	r13, r1
    ecf4:	86 01       	movw	r16, r12
    ecf6:	68 ec       	ldi	r22, 0xC8	; 200
    ecf8:	75 e0       	ldi	r23, 0x05	; 5
    ecfa:	82 ef       	ldi	r24, 0xF2	; 242
    ecfc:	9c e0       	ldi	r25, 0x0C	; 12
    ecfe:	0e 94 b4 d9 	call	0x1b368	; 0x1b368 <_ZN13EnergyMonitor8calcIrmsEj>
    ed02:	d8 01       	movw	r26, r16
    ed04:	6d 93       	st	X+, r22
    ed06:	7d 93       	st	X+, r23
    ed08:	8d 93       	st	X+, r24
    ed0a:	9d 93       	st	X+, r25
    ed0c:	8d 01       	movw	r16, r26
    ed0e:	a2 15       	cp	r26, r2
    ed10:	b3 05       	cpc	r27, r3
    ed12:	89 f7       	brne	.-30     	; 0xecf6 <_Z19Calibration_Of_Pumpv+0xe4>
    ed14:	00 e0       	ldi	r16, 0x00	; 0
    ed16:	0f 5f       	subi	r16, 0xFF	; 255
    ed18:	10 2f       	mov	r17, r16
    ed1a:	15 30       	cpi	r17, 0x05	; 5
    ed1c:	31 f4       	brne	.+12     	; 0xed2a <_Z19Calibration_Of_Pumpv+0x118>
    ed1e:	b4 e0       	ldi	r27, 0x04	; 4
    ed20:	cb 0e       	add	r12, r27
    ed22:	d1 1c       	adc	r13, r1
    ed24:	05 30       	cpi	r16, 0x05	; 5
    ed26:	b9 f7       	brne	.-18     	; 0xed16 <_Z19Calibration_Of_Pumpv+0x104>
    ed28:	2c c0       	rjmp	.+88     	; 0xed82 <_Z19Calibration_Of_Pumpv+0x170>
    ed2a:	f6 01       	movw	r30, r12
    ed2c:	80 80       	ld	r8, Z
    ed2e:	91 80       	ldd	r9, Z+1	; 0x01
    ed30:	a2 80       	ldd	r10, Z+2	; 0x02
    ed32:	b3 80       	ldd	r11, Z+3	; 0x03
    ed34:	ee 24       	eor	r14, r14
    ed36:	e3 94       	inc	r14
    ed38:	f1 2c       	mov	r15, r1
    ed3a:	ec 0e       	add	r14, r28
    ed3c:	fd 1e       	adc	r15, r29
    ed3e:	f4 e0       	ldi	r31, 0x04	; 4
    ed40:	1f 9f       	mul	r17, r31
    ed42:	e0 0c       	add	r14, r0
    ed44:	f1 1c       	adc	r15, r1
    ed46:	11 24       	eor	r1, r1
    ed48:	d7 01       	movw	r26, r14
    ed4a:	98 96       	adiw	r26, 0x28	; 40
    ed4c:	4d 90       	ld	r4, X+
    ed4e:	5d 90       	ld	r5, X+
    ed50:	6d 90       	ld	r6, X+
    ed52:	7c 90       	ld	r7, X
    ed54:	9b 97       	sbiw	r26, 0x2b	; 43
    ed56:	a3 01       	movw	r20, r6
    ed58:	92 01       	movw	r18, r4
    ed5a:	c5 01       	movw	r24, r10
    ed5c:	b4 01       	movw	r22, r8
    ed5e:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    ed62:	18 16       	cp	r1, r24
    ed64:	64 f4       	brge	.+24     	; 0xed7e <_Z19Calibration_Of_Pumpv+0x16c>
    ed66:	f6 01       	movw	r30, r12
    ed68:	40 82       	st	Z, r4
    ed6a:	51 82       	std	Z+1, r5	; 0x01
    ed6c:	62 82       	std	Z+2, r6	; 0x02
    ed6e:	73 82       	std	Z+3, r7	; 0x03
    ed70:	d7 01       	movw	r26, r14
    ed72:	98 96       	adiw	r26, 0x28	; 40
    ed74:	8d 92       	st	X+, r8
    ed76:	9d 92       	st	X+, r9
    ed78:	ad 92       	st	X+, r10
    ed7a:	bc 92       	st	X, r11
    ed7c:	9b 97       	sbiw	r26, 0x2b	; 43
    ed7e:	1f 5f       	subi	r17, 0xFF	; 255
    ed80:	cc cf       	rjmp	.-104    	; 0xed1a <_Z19Calibration_Of_Pumpv+0x108>
    ed82:	69 a9       	ldd	r22, Y+49	; 0x31
    ed84:	7a a9       	ldd	r23, Y+50	; 0x32
    ed86:	8b a9       	ldd	r24, Y+51	; 0x33
    ed88:	9c a9       	ldd	r25, Y+52	; 0x34
    ed8a:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    ed8e:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    ed92:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    ed96:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
    ed9a:	20 e0       	ldi	r18, 0x00	; 0
    ed9c:	30 e0       	ldi	r19, 0x00	; 0
    ed9e:	40 e0       	ldi	r20, 0x00	; 0
    eda0:	50 e4       	ldi	r21, 0x40	; 64
    eda2:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    eda6:	18 16       	cp	r1, r24
    eda8:	54 f5       	brge	.+84     	; 0xedfe <_Z19Calibration_Of_Pumpv+0x1ec>
    edaa:	88 ea       	ldi	r24, 0xA8	; 168
    edac:	e8 2e       	mov	r14, r24
    edae:	83 e1       	ldi	r24, 0x13	; 19
    edb0:	f8 2e       	mov	r15, r24
    edb2:	0f e0       	ldi	r16, 0x0F	; 15
    edb4:	15 e0       	ldi	r17, 0x05	; 5
    edb6:	f7 01       	movw	r30, r14
    edb8:	61 91       	ld	r22, Z+
    edba:	7f 01       	movw	r14, r30
    edbc:	1a 83       	std	Y+2, r17	; 0x02
    edbe:	09 83       	std	Y+1, r16	; 0x01
    edc0:	ce 01       	movw	r24, r28
    edc2:	01 96       	adiw	r24, 0x01	; 1
    edc4:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    edc8:	0f 5f       	subi	r16, 0xFF	; 255
    edca:	1f 4f       	sbci	r17, 0xFF	; 255
    edcc:	03 31       	cpi	r16, 0x13	; 19
    edce:	f5 e0       	ldi	r31, 0x05	; 5
    edd0:	1f 07       	cpc	r17, r31
    edd2:	89 f7       	brne	.-30     	; 0xedb6 <_Z19Calibration_Of_Pumpv+0x1a4>
    edd4:	64 ea       	ldi	r22, 0xA4	; 164
    edd6:	73 e1       	ldi	r23, 0x13	; 19
    edd8:	8f e0       	ldi	r24, 0x0F	; 15
    edda:	95 e0       	ldi	r25, 0x05	; 5
    eddc:	be dc       	rcall	.-1668   	; 0xe75a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    edde:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ede2:	81 30       	cpi	r24, 0x01	; 1
    ede4:	09 f0       	breq	.+2      	; 0xede8 <_Z19Calibration_Of_Pumpv+0x1d6>
    ede6:	4e c0       	rjmp	.+156    	; 0xee84 <_Z19Calibration_Of_Pumpv+0x272>
    ede8:	6e e6       	ldi	r22, 0x6E	; 110
    edea:	76 e2       	ldi	r23, 0x26	; 38
    edec:	86 ec       	ldi	r24, 0xC6	; 198
    edee:	94 e1       	ldi	r25, 0x14	; 20
    edf0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    edf4:	86 ec       	ldi	r24, 0xC6	; 198
    edf6:	94 e1       	ldi	r25, 0x14	; 20
    edf8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    edfc:	43 c0       	rjmp	.+134    	; 0xee84 <_Z19Calibration_Of_Pumpv+0x272>
    edfe:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ee02:	dc 01       	movw	r26, r24
    ee04:	cb 01       	movw	r24, r22
    ee06:	21 96       	adiw	r28, 0x01	; 1
    ee08:	2c ad       	ldd	r18, Y+60	; 0x3c
    ee0a:	3d ad       	ldd	r19, Y+61	; 0x3d
    ee0c:	4e ad       	ldd	r20, Y+62	; 0x3e
    ee0e:	5f ad       	ldd	r21, Y+63	; 0x3f
    ee10:	21 97       	sbiw	r28, 0x01	; 1
    ee12:	82 1b       	sub	r24, r18
    ee14:	93 0b       	sbc	r25, r19
    ee16:	a4 0b       	sbc	r26, r20
    ee18:	b5 0b       	sbc	r27, r21
    ee1a:	80 31       	cpi	r24, 0x10	; 16
    ee1c:	97 42       	sbci	r25, 0x27	; 39
    ee1e:	a1 05       	cpc	r26, r1
    ee20:	b1 05       	cpc	r27, r1
    ee22:	08 f4       	brcc	.+2      	; 0xee26 <_Z19Calibration_Of_Pumpv+0x214>
    ee24:	63 cf       	rjmp	.-314    	; 0xecec <_Z19Calibration_Of_Pumpv+0xda>
    ee26:	80 e0       	ldi	r24, 0x00	; 0
    ee28:	2e c0       	rjmp	.+92     	; 0xee86 <_Z19Calibration_Of_Pumpv+0x274>
    ee2a:	62 30       	cpi	r22, 0x02	; 2
    ee2c:	08 f4       	brcc	.+2      	; 0xee30 <_Z19Calibration_Of_Pumpv+0x21e>
    ee2e:	64 c0       	rjmp	.+200    	; 0xeef8 <_Z19Calibration_Of_Pumpv+0x2e6>
    ee30:	62 50       	subi	r22, 0x02	; 2
    ee32:	86 e0       	ldi	r24, 0x06	; 6
    ee34:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
    ee38:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
    ee3c:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ee40:	6b 01       	movw	r12, r22
    ee42:	7c 01       	movw	r14, r24
    ee44:	1b e0       	ldi	r17, 0x0B	; 11
    ee46:	0e 94 ca d0 	call	0x1a194	; 0x1a194 <_Z14Lora_Operationv>
    ee4a:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ee4e:	90 e0       	ldi	r25, 0x00	; 0
    ee50:	02 97       	sbiw	r24, 0x02	; 2
    ee52:	18 9f       	mul	r17, r24
    ee54:	f0 01       	movw	r30, r0
    ee56:	19 9f       	mul	r17, r25
    ee58:	f0 0d       	add	r31, r0
    ee5a:	11 24       	eor	r1, r1
    ee5c:	ec 50       	subi	r30, 0x0C	; 12
    ee5e:	f4 4f       	sbci	r31, 0xF4	; 244
    ee60:	82 85       	ldd	r24, Z+10	; 0x0a
    ee62:	80 fd       	sbrc	r24, 0
    ee64:	4d c0       	rjmp	.+154    	; 0xef00 <_Z19Calibration_Of_Pumpv+0x2ee>
    ee66:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ee6a:	dc 01       	movw	r26, r24
    ee6c:	cb 01       	movw	r24, r22
    ee6e:	8c 19       	sub	r24, r12
    ee70:	9d 09       	sbc	r25, r13
    ee72:	ae 09       	sbc	r26, r14
    ee74:	bf 09       	sbc	r27, r15
    ee76:	80 31       	cpi	r24, 0x10	; 16
    ee78:	97 42       	sbci	r25, 0x27	; 39
    ee7a:	a1 05       	cpc	r26, r1
    ee7c:	b1 05       	cpc	r27, r1
    ee7e:	18 f3       	brcs	.-58     	; 0xee46 <_Z19Calibration_Of_Pumpv+0x234>
    ee80:	80 e0       	ldi	r24, 0x00	; 0
    ee82:	3f c0       	rjmp	.+126    	; 0xef02 <_Z19Calibration_Of_Pumpv+0x2f0>
    ee84:	81 e0       	ldi	r24, 0x01	; 1
    ee86:	24 ed       	ldi	r18, 0xD4	; 212
    ee88:	33 e0       	ldi	r19, 0x03	; 3
    ee8a:	e0 ed       	ldi	r30, 0xD0	; 208
    ee8c:	ff e0       	ldi	r31, 0x0F	; 15
    ee8e:	df 01       	movw	r26, r30
    ee90:	a9 01       	movw	r20, r18
    ee92:	1d 92       	st	X+, r1
    ee94:	41 50       	subi	r20, 0x01	; 1
    ee96:	50 40       	sbci	r21, 0x00	; 0
    ee98:	e1 f7       	brne	.-8      	; 0xee92 <_Z19Calibration_Of_Pumpv+0x280>
    ee9a:	88 23       	and	r24, r24
    ee9c:	71 f1       	breq	.+92     	; 0xeefa <_Z19Calibration_Of_Pumpv+0x2e8>
    ee9e:	81 e0       	ldi	r24, 0x01	; 1
    eea0:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
    eea4:	69 e7       	ldi	r22, 0x79	; 121
    eea6:	74 e1       	ldi	r23, 0x14	; 20
    eea8:	81 ea       	ldi	r24, 0xA1	; 161
    eeaa:	9c e0       	ldi	r25, 0x0C	; 12
    eeac:	bc dc       	rcall	.-1672   	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    eeae:	62 e4       	ldi	r22, 0x42	; 66
    eeb0:	75 e0       	ldi	r23, 0x05	; 5
    eeb2:	80 ed       	ldi	r24, 0xD0	; 208
    eeb4:	9f e0       	ldi	r25, 0x0F	; 15
    eeb6:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    eeba:	8e 01       	movw	r16, r28
    eebc:	0f 5f       	subi	r16, 0xFF	; 255
    eebe:	1f 4f       	sbci	r17, 0xFF	; 255
    eec0:	88 e2       	ldi	r24, 0x28	; 40
    eec2:	d8 01       	movw	r26, r16
    eec4:	1d 92       	st	X+, r1
    eec6:	8a 95       	dec	r24
    eec8:	e9 f7       	brne	.-6      	; 0xeec4 <_Z19Calibration_Of_Pumpv+0x2b2>
    eeca:	8e ec       	ldi	r24, 0xCE	; 206
    eecc:	93 e1       	ldi	r25, 0x13	; 19
    eece:	9f 93       	push	r25
    eed0:	8f 93       	push	r24
    eed2:	8b e6       	ldi	r24, 0x6B	; 107
    eed4:	95 e0       	ldi	r25, 0x05	; 5
    eed6:	9f 93       	push	r25
    eed8:	8f 93       	push	r24
    eeda:	1f 93       	push	r17
    eedc:	0f 93       	push	r16
    eede:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    eee2:	60 ed       	ldi	r22, 0xD0	; 208
    eee4:	7f e0       	ldi	r23, 0x0F	; 15
    eee6:	c8 01       	movw	r24, r16
    eee8:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
    eeec:	0f 90       	pop	r0
    eeee:	0f 90       	pop	r0
    eef0:	0f 90       	pop	r0
    eef2:	0f 90       	pop	r0
    eef4:	0f 90       	pop	r0
    eef6:	0f 90       	pop	r0
    eef8:	4a c0       	rjmp	.+148    	; 0xef8e <_Z19Calibration_Of_Pumpv+0x37c>
    eefa:	66 e5       	ldi	r22, 0x56	; 86
    eefc:	75 e0       	ldi	r23, 0x05	; 5
    eefe:	d9 cf       	rjmp	.-78     	; 0xeeb2 <_Z19Calibration_Of_Pumpv+0x2a0>
    ef00:	81 e0       	ldi	r24, 0x01	; 1
    ef02:	24 ed       	ldi	r18, 0xD4	; 212
    ef04:	33 e0       	ldi	r19, 0x03	; 3
    ef06:	e0 ed       	ldi	r30, 0xD0	; 208
    ef08:	ff e0       	ldi	r31, 0x0F	; 15
    ef0a:	df 01       	movw	r26, r30
    ef0c:	a9 01       	movw	r20, r18
    ef0e:	1d 92       	st	X+, r1
    ef10:	41 50       	subi	r20, 0x01	; 1
    ef12:	50 40       	sbci	r21, 0x00	; 0
    ef14:	e1 f7       	brne	.-8      	; 0xef0e <_Z19Calibration_Of_Pumpv+0x2fc>
    ef16:	88 23       	and	r24, r24
    ef18:	59 f0       	breq	.+22     	; 0xef30 <_Z19Calibration_Of_Pumpv+0x31e>
    ef1a:	81 e0       	ldi	r24, 0x01	; 1
    ef1c:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
    ef20:	69 e7       	ldi	r22, 0x79	; 121
    ef22:	74 e1       	ldi	r23, 0x14	; 20
    ef24:	81 ea       	ldi	r24, 0xA1	; 161
    ef26:	9c e0       	ldi	r25, 0x0C	; 12
    ef28:	7e dc       	rcall	.-1796   	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    ef2a:	62 e4       	ldi	r22, 0x42	; 66
    ef2c:	75 e0       	ldi	r23, 0x05	; 5
    ef2e:	02 c0       	rjmp	.+4      	; 0xef34 <_Z19Calibration_Of_Pumpv+0x322>
    ef30:	66 e5       	ldi	r22, 0x56	; 86
    ef32:	75 e0       	ldi	r23, 0x05	; 5
    ef34:	80 ed       	ldi	r24, 0xD0	; 208
    ef36:	9f e0       	ldi	r25, 0x0F	; 15
    ef38:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    ef3c:	8e 01       	movw	r16, r28
    ef3e:	0f 5f       	subi	r16, 0xFF	; 255
    ef40:	1f 4f       	sbci	r17, 0xFF	; 255
    ef42:	88 e2       	ldi	r24, 0x28	; 40
    ef44:	d8 01       	movw	r26, r16
    ef46:	1d 92       	st	X+, r1
    ef48:	8a 95       	dec	r24
    ef4a:	e9 f7       	brne	.-6      	; 0xef46 <_Z19Calibration_Of_Pumpv+0x334>
    ef4c:	8e ec       	ldi	r24, 0xCE	; 206
    ef4e:	93 e1       	ldi	r25, 0x13	; 19
    ef50:	9f 93       	push	r25
    ef52:	8f 93       	push	r24
    ef54:	8b e6       	ldi	r24, 0x6B	; 107
    ef56:	95 e0       	ldi	r25, 0x05	; 5
    ef58:	9f 93       	push	r25
    ef5a:	8f 93       	push	r24
    ef5c:	1f 93       	push	r17
    ef5e:	0f 93       	push	r16
    ef60:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
    ef64:	60 ed       	ldi	r22, 0xD0	; 208
    ef66:	7f e0       	ldi	r23, 0x0F	; 15
    ef68:	c8 01       	movw	r24, r16
    ef6a:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
    ef6e:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ef72:	90 e0       	ldi	r25, 0x00	; 0
    ef74:	02 97       	sbiw	r24, 0x02	; 2
    ef76:	2b e0       	ldi	r18, 0x0B	; 11
    ef78:	28 9f       	mul	r18, r24
    ef7a:	f0 01       	movw	r30, r0
    ef7c:	29 9f       	mul	r18, r25
    ef7e:	f0 0d       	add	r31, r0
    ef80:	11 24       	eor	r1, r1
    ef82:	ec 50       	subi	r30, 0x0C	; 12
    ef84:	f4 4f       	sbci	r31, 0xF4	; 244
    ef86:	82 85       	ldd	r24, Z+10	; 0x0a
    ef88:	8c 7f       	andi	r24, 0xFC	; 252
    ef8a:	82 87       	std	Z+10, r24	; 0x0a
    ef8c:	af cf       	rjmp	.-162    	; 0xeeec <_Z19Calibration_Of_Pumpv+0x2da>
    ef8e:	c0 5c       	subi	r28, 0xC0	; 192
    ef90:	df 4f       	sbci	r29, 0xFF	; 255
    ef92:	0f b6       	in	r0, 0x3f	; 63
    ef94:	f8 94       	cli
    ef96:	de bf       	out	0x3e, r29	; 62
    ef98:	0f be       	out	0x3f, r0	; 63
    ef9a:	cd bf       	out	0x3d, r28	; 61
    ef9c:	df 91       	pop	r29
    ef9e:	cf 91       	pop	r28
    efa0:	1f 91       	pop	r17
    efa2:	0f 91       	pop	r16
    efa4:	ff 90       	pop	r15
    efa6:	ef 90       	pop	r14
    efa8:	df 90       	pop	r13
    efaa:	cf 90       	pop	r12
    efac:	bf 90       	pop	r11
    efae:	af 90       	pop	r10
    efb0:	9f 90       	pop	r9
    efb2:	8f 90       	pop	r8
    efb4:	7f 90       	pop	r7
    efb6:	6f 90       	pop	r6
    efb8:	5f 90       	pop	r5
    efba:	4f 90       	pop	r4
    efbc:	3f 90       	pop	r3
    efbe:	2f 90       	pop	r2
    efc0:	08 95       	ret

0000efc2 <_Z14Faults_Handlerv>:
    efc2:	4f 92       	push	r4
    efc4:	5f 92       	push	r5
    efc6:	6f 92       	push	r6
    efc8:	7f 92       	push	r7
    efca:	8f 92       	push	r8
    efcc:	9f 92       	push	r9
    efce:	af 92       	push	r10
    efd0:	bf 92       	push	r11
    efd2:	cf 92       	push	r12
    efd4:	df 92       	push	r13
    efd6:	ef 92       	push	r14
    efd8:	ff 92       	push	r15
    efda:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    efde:	82 30       	cpi	r24, 0x02	; 2
    efe0:	08 f4       	brcc	.+2      	; 0xefe4 <_Z14Faults_Handlerv+0x22>
    efe2:	52 c0       	rjmp	.+164    	; 0xf088 <_Z14Faults_Handlerv+0xc6>
    efe4:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    efe8:	29 2f       	mov	r18, r25
    efea:	2d 7f       	andi	r18, 0xFD	; 253
    efec:	21 30       	cpi	r18, 0x01	; 1
    efee:	19 f0       	breq	.+6      	; 0xeff6 <_Z14Faults_Handlerv+0x34>
    eff0:	95 30       	cpi	r25, 0x05	; 5
    eff2:	09 f0       	breq	.+2      	; 0xeff6 <_Z14Faults_Handlerv+0x34>
    eff4:	fb c2       	rjmp	.+1526   	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    eff6:	90 91 7c 14 	lds	r25, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    effa:	91 30       	cpi	r25, 0x01	; 1
    effc:	09 f0       	breq	.+2      	; 0xf000 <_Z14Faults_Handlerv+0x3e>
    effe:	f6 c2       	rjmp	.+1516   	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f000:	90 e0       	ldi	r25, 0x00	; 0
    f002:	02 97       	sbiw	r24, 0x02	; 2
    f004:	2b e0       	ldi	r18, 0x0B	; 11
    f006:	28 9f       	mul	r18, r24
    f008:	f0 01       	movw	r30, r0
    f00a:	29 9f       	mul	r18, r25
    f00c:	f0 0d       	add	r31, r0
    f00e:	11 24       	eor	r1, r1
    f010:	ec 50       	subi	r30, 0x0C	; 12
    f012:	f4 4f       	sbci	r31, 0xF4	; 244
    f014:	80 85       	ldd	r24, Z+8	; 0x08
    f016:	91 85       	ldd	r25, Z+9	; 0x09
    f018:	9c 01       	movw	r18, r24
    f01a:	23 70       	andi	r18, 0x03	; 3
    f01c:	33 27       	eor	r19, r19
    f01e:	23 30       	cpi	r18, 0x03	; 3
    f020:	31 05       	cpc	r19, r1
    f022:	39 f4       	brne	.+14     	; 0xf032 <_Z14Faults_Handlerv+0x70>
    f024:	82 ff       	sbrs	r24, 2
    f026:	05 c0       	rjmp	.+10     	; 0xf032 <_Z14Faults_Handlerv+0x70>
    f028:	88 7b       	andi	r24, 0xB8	; 184
    f02a:	92 70       	andi	r25, 0x02	; 2
    f02c:	89 2b       	or	r24, r25
    f02e:	09 f4       	brne	.+2      	; 0xf032 <_Z14Faults_Handlerv+0x70>
    f030:	dd c2       	rjmp	.+1466   	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f032:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f036:	81 30       	cpi	r24, 0x01	; 1
    f038:	d1 f4       	brne	.+52     	; 0xf06e <_Z14Faults_Handlerv+0xac>
    f03a:	66 e4       	ldi	r22, 0x46	; 70
    f03c:	76 e2       	ldi	r23, 0x26	; 38
    f03e:	86 ec       	ldi	r24, 0xC6	; 198
    f040:	94 e1       	ldi	r25, 0x14	; 20
    f042:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f046:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    f04a:	90 e0       	ldi	r25, 0x00	; 0
    f04c:	02 97       	sbiw	r24, 0x02	; 2
    f04e:	2b e0       	ldi	r18, 0x0B	; 11
    f050:	28 9f       	mul	r18, r24
    f052:	f0 01       	movw	r30, r0
    f054:	29 9f       	mul	r18, r25
    f056:	f0 0d       	add	r31, r0
    f058:	11 24       	eor	r1, r1
    f05a:	ec 50       	subi	r30, 0x0C	; 12
    f05c:	f4 4f       	sbci	r31, 0xF4	; 244
    f05e:	60 85       	ldd	r22, Z+8	; 0x08
    f060:	71 85       	ldd	r23, Z+9	; 0x09
    f062:	4a e0       	ldi	r20, 0x0A	; 10
    f064:	50 e0       	ldi	r21, 0x00	; 0
    f066:	86 ec       	ldi	r24, 0xC6	; 198
    f068:	94 e1       	ldi	r25, 0x14	; 20
    f06a:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
    f06e:	84 e0       	ldi	r24, 0x04	; 4
    f070:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f074:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f078:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f07c:	82 60       	ori	r24, 0x02	; 2
    f07e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f082:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f086:	b2 c2       	rjmp	.+1380   	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f088:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f08c:	88 23       	and	r24, r24
    f08e:	41 f0       	breq	.+16     	; 0xf0a0 <_Z14Faults_Handlerv+0xde>
    f090:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    f094:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    f098:	89 2b       	or	r24, r25
    f09a:	11 f4       	brne	.+4      	; 0xf0a0 <_Z14Faults_Handlerv+0xde>
    f09c:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
    f0a0:	80 91 ca 13 	lds	r24, 0x13CA	; 0x8013ca <_sRuble_Parameters+0x1c>
    f0a4:	90 91 cb 13 	lds	r25, 0x13CB	; 0x8013cb <_sRuble_Parameters+0x1d>
    f0a8:	89 2b       	or	r24, r25
    f0aa:	e9 f0       	breq	.+58     	; 0xf0e6 <_Z14Faults_Handlerv+0x124>
    f0ac:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f0b0:	88 23       	and	r24, r24
    f0b2:	39 f0       	breq	.+14     	; 0xf0c2 <_Z14Faults_Handlerv+0x100>
    f0b4:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f0b8:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f0bc:	8f 5f       	subi	r24, 0xFF	; 255
    f0be:	80 93 df 0c 	sts	0x0CDF, r24	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f0c2:	10 92 cb 13 	sts	0x13CB, r1	; 0x8013cb <_sRuble_Parameters+0x1d>
    f0c6:	10 92 ca 13 	sts	0x13CA, r1	; 0x8013ca <_sRuble_Parameters+0x1c>
    f0ca:	68 ec       	ldi	r22, 0xC8	; 200
    f0cc:	75 e0       	ldi	r23, 0x05	; 5
    f0ce:	82 ef       	ldi	r24, 0xF2	; 242
    f0d0:	9c e0       	ldi	r25, 0x0C	; 12
    f0d2:	0e 94 b4 d9 	call	0x1b368	; 0x1b368 <_ZN13EnergyMonitor8calcIrmsEj>
    f0d6:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    f0da:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    f0de:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    f0e2:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
    f0e6:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    f0ea:	81 30       	cpi	r24, 0x01	; 1
    f0ec:	51 f5       	brne	.+84     	; 0xf142 <_Z14Faults_Handlerv+0x180>
    f0ee:	b4 db       	rcall	.-2200   	; 0xe858 <_Z11Check_Phasev>
    f0f0:	81 30       	cpi	r24, 0x01	; 1
    f0f2:	21 f5       	brne	.+72     	; 0xf13c <_Z14Faults_Handlerv+0x17a>
    f0f4:	8a e0       	ldi	r24, 0x0A	; 10
    f0f6:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    f0fa:	89 2b       	or	r24, r25
    f0fc:	59 f4       	brne	.+22     	; 0xf114 <_Z14Faults_Handlerv+0x152>
    f0fe:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f102:	98 2f       	mov	r25, r24
    f104:	9d 7f       	andi	r25, 0xFD	; 253
    f106:	91 30       	cpi	r25, 0x01	; 1
    f108:	11 f0       	breq	.+4      	; 0xf10e <_Z14Faults_Handlerv+0x14c>
    f10a:	85 30       	cpi	r24, 0x05	; 5
    f10c:	19 f4       	brne	.+6      	; 0xf114 <_Z14Faults_Handlerv+0x152>
    f10e:	8c e0       	ldi	r24, 0x0C	; 12
    f110:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f114:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    f118:	81 11       	cpse	r24, r1
    f11a:	15 c0       	rjmp	.+42     	; 0xf146 <_Z14Faults_Handlerv+0x184>
    f11c:	81 e0       	ldi	r24, 0x01	; 1
    f11e:	80 93 70 14 	sts	0x1470, r24	; 0x801470 <_sRuble_Parameters+0xc2>
    f122:	84 e0       	ldi	r24, 0x04	; 4
    f124:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f128:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f12c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f130:	82 60       	ori	r24, 0x02	; 2
    f132:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f136:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f13a:	05 c0       	rjmp	.+10     	; 0xf146 <_Z14Faults_Handlerv+0x184>
    f13c:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    f140:	81 11       	cpse	r24, r1
    f142:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
    f146:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    f14a:	88 23       	and	r24, r24
    f14c:	09 f4       	brne	.+2      	; 0xf150 <_Z14Faults_Handlerv+0x18e>
    f14e:	4e c2       	rjmp	.+1180   	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f150:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f154:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f158:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f15c:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f160:	40 90 a4 13 	lds	r4, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f164:	50 90 a5 13 	lds	r5, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f168:	60 90 a6 13 	lds	r6, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f16c:	70 90 a7 13 	lds	r7, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f170:	20 e0       	ldi	r18, 0x00	; 0
    f172:	30 e0       	ldi	r19, 0x00	; 0
    f174:	48 ec       	ldi	r20, 0xC8	; 200
    f176:	52 e4       	ldi	r21, 0x42	; 66
    f178:	c3 01       	movw	r24, r6
    f17a:	b2 01       	movw	r22, r4
    f17c:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
    f180:	4b 01       	movw	r8, r22
    f182:	5c 01       	movw	r10, r24
    f184:	20 e0       	ldi	r18, 0x00	; 0
    f186:	30 e0       	ldi	r19, 0x00	; 0
    f188:	40 e7       	ldi	r20, 0x70	; 112
    f18a:	51 e4       	ldi	r21, 0x41	; 65
    f18c:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f190:	9b 01       	movw	r18, r22
    f192:	ac 01       	movw	r20, r24
    f194:	c7 01       	movw	r24, r14
    f196:	b6 01       	movw	r22, r12
    f198:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
    f19c:	87 ff       	sbrs	r24, 7
    f19e:	43 c0       	rjmp	.+134    	; 0xf226 <_Z14Faults_Handlerv+0x264>
    f1a0:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f1a4:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f1a8:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f1ac:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f1b0:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f1b4:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f1b8:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f1bc:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f1c0:	a2 e0       	ldi	r26, 0x02	; 2
    f1c2:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    f1c6:	79 f5       	brne	.+94     	; 0xf226 <_Z14Faults_Handlerv+0x264>
    f1c8:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f1cc:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f1d0:	84 e0       	ldi	r24, 0x04	; 4
    f1d2:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f1d6:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f1da:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f1de:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f1e2:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f1e6:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f1ea:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f1ee:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
    f1f2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f1f6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f1fa:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f1fe:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f202:	84 60       	ori	r24, 0x04	; 4
    f204:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f208:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f20c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f210:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
    f214:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f218:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f21c:	84 60       	ori	r24, 0x04	; 4
    f21e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f222:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f226:	20 e0       	ldi	r18, 0x00	; 0
    f228:	30 e0       	ldi	r19, 0x00	; 0
    f22a:	40 e9       	ldi	r20, 0x90	; 144
    f22c:	51 e4       	ldi	r21, 0x41	; 65
    f22e:	c5 01       	movw	r24, r10
    f230:	b4 01       	movw	r22, r8
    f232:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f236:	9b 01       	movw	r18, r22
    f238:	ac 01       	movw	r20, r24
    f23a:	c7 01       	movw	r24, r14
    f23c:	b6 01       	movw	r22, r12
    f23e:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    f242:	18 16       	cp	r1, r24
    f244:	0c f0       	brlt	.+2      	; 0xf248 <_Z14Faults_Handlerv+0x286>
    f246:	43 c0       	rjmp	.+134    	; 0xf2ce <_Z14Faults_Handlerv+0x30c>
    f248:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f24c:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f250:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f254:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f258:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f25c:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f260:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f264:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f268:	a4 e0       	ldi	r26, 0x04	; 4
    f26a:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
    f26e:	79 f5       	brne	.+94     	; 0xf2ce <_Z14Faults_Handlerv+0x30c>
    f270:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f274:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f278:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f27c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f280:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f284:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f288:	82 60       	ori	r24, 0x02	; 2
    f28a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f28e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f292:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f296:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
    f29a:	82 e0       	ldi	r24, 0x02	; 2
    f29c:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f2a0:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f2a4:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f2a8:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f2ac:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f2b0:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f2b4:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f2b8:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
    f2bc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f2c0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f2c4:	84 60       	ori	r24, 0x04	; 4
    f2c6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f2ca:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f2ce:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f2d2:	82 30       	cpi	r24, 0x02	; 2
    f2d4:	a9 f0       	breq	.+42     	; 0xf300 <_Z14Faults_Handlerv+0x33e>
    f2d6:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    f2da:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f2de:	89 37       	cpi	r24, 0x79	; 121
    f2e0:	91 05       	cpc	r25, r1
    f2e2:	08 f4       	brcc	.+2      	; 0xf2e6 <_Z14Faults_Handlerv+0x324>
    f2e4:	83 c1       	rjmp	.+774    	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f2e6:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    f2ea:	81 11       	cpse	r24, r1
    f2ec:	09 c0       	rjmp	.+18     	; 0xf300 <_Z14Faults_Handlerv+0x33e>
    f2ee:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    f2f2:	81 11       	cpse	r24, r1
    f2f4:	05 c0       	rjmp	.+10     	; 0xf300 <_Z14Faults_Handlerv+0x33e>
    f2f6:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    f2fa:	81 30       	cpi	r24, 0x01	; 1
    f2fc:	09 f0       	breq	.+2      	; 0xf300 <_Z14Faults_Handlerv+0x33e>
    f2fe:	76 c1       	rjmp	.+748    	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f300:	89 e7       	ldi	r24, 0x79	; 121
    f302:	90 e0       	ldi	r25, 0x00	; 0
    f304:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f308:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
    f30c:	20 e0       	ldi	r18, 0x00	; 0
    f30e:	30 e0       	ldi	r19, 0x00	; 0
    f310:	40 e0       	ldi	r20, 0x00	; 0
    f312:	52 e4       	ldi	r21, 0x42	; 66
    f314:	c5 01       	movw	r24, r10
    f316:	b4 01       	movw	r22, r8
    f318:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f31c:	a3 01       	movw	r20, r6
    f31e:	92 01       	movw	r18, r4
    f320:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
    f324:	9b 01       	movw	r18, r22
    f326:	ac 01       	movw	r20, r24
    f328:	c7 01       	movw	r24, r14
    f32a:	b6 01       	movw	r22, r12
    f32c:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    f330:	18 16       	cp	r1, r24
    f332:	0c f0       	brlt	.+2      	; 0xf336 <_Z14Faults_Handlerv+0x374>
    f334:	52 c0       	rjmp	.+164    	; 0xf3da <_Z14Faults_Handlerv+0x418>
    f336:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f33a:	89 30       	cpi	r24, 0x09	; 9
    f33c:	09 f4       	brne	.+2      	; 0xf340 <_Z14Faults_Handlerv+0x37e>
    f33e:	53 c0       	rjmp	.+166    	; 0xf3e6 <_Z14Faults_Handlerv+0x424>
    f340:	89 e0       	ldi	r24, 0x09	; 9
    f342:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f346:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f34a:	81 30       	cpi	r24, 0x01	; 1
    f34c:	71 f4       	brne	.+28     	; 0xf36a <_Z14Faults_Handlerv+0x3a8>
    f34e:	65 e3       	ldi	r22, 0x35	; 53
    f350:	76 e2       	ldi	r23, 0x26	; 38
    f352:	86 ec       	ldi	r24, 0xC6	; 198
    f354:	94 e1       	ldi	r25, 0x14	; 20
    f356:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f35a:	4a e0       	ldi	r20, 0x0A	; 10
    f35c:	50 e0       	ldi	r21, 0x00	; 0
    f35e:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f362:	86 ec       	ldi	r24, 0xC6	; 198
    f364:	94 e1       	ldi	r25, 0x14	; 20
    f366:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    f36a:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f36e:	84 30       	cpi	r24, 0x04	; 4
    f370:	d0 f1       	brcs	.+116    	; 0xf3e6 <_Z14Faults_Handlerv+0x424>
    f372:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f376:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f37a:	81 30       	cpi	r24, 0x01	; 1
    f37c:	51 f4       	brne	.+20     	; 0xf392 <_Z14Faults_Handlerv+0x3d0>
    f37e:	65 e2       	ldi	r22, 0x25	; 37
    f380:	76 e2       	ldi	r23, 0x26	; 38
    f382:	86 ec       	ldi	r24, 0xC6	; 198
    f384:	94 e1       	ldi	r25, 0x14	; 20
    f386:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f38a:	86 ec       	ldi	r24, 0xC6	; 198
    f38c:	94 e1       	ldi	r25, 0x14	; 20
    f38e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f392:	89 e0       	ldi	r24, 0x09	; 9
    f394:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f398:	84 e6       	ldi	r24, 0x64	; 100
    f39a:	90 e0       	ldi	r25, 0x00	; 0
    f39c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f3a0:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    f3a4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f3a8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f3ac:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f3b0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f3b4:	80 62       	ori	r24, 0x20	; 32
    f3b6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f3ba:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f3be:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f3c2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
    f3c6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f3ca:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f3ce:	82 60       	ori	r24, 0x02	; 2
    f3d0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f3d4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f3d8:	06 c0       	rjmp	.+12     	; 0xf3e6 <_Z14Faults_Handlerv+0x424>
    f3da:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f3de:	89 30       	cpi	r24, 0x09	; 9
    f3e0:	11 f4       	brne	.+4      	; 0xf3e6 <_Z14Faults_Handlerv+0x424>
    f3e2:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f3e6:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f3ea:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f3ee:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f3f2:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f3f6:	20 e0       	ldi	r18, 0x00	; 0
    f3f8:	30 e0       	ldi	r19, 0x00	; 0
    f3fa:	48 ec       	ldi	r20, 0xC8	; 200
    f3fc:	52 e4       	ldi	r21, 0x42	; 66
    f3fe:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f402:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f406:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f40a:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f40e:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
    f412:	4b 01       	movw	r8, r22
    f414:	5c 01       	movw	r10, r24
    f416:	20 e0       	ldi	r18, 0x00	; 0
    f418:	30 e0       	ldi	r19, 0x00	; 0
    f41a:	48 e6       	ldi	r20, 0x68	; 104
    f41c:	52 e4       	ldi	r21, 0x42	; 66
    f41e:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f422:	9b 01       	movw	r18, r22
    f424:	ac 01       	movw	r20, r24
    f426:	c7 01       	movw	r24, r14
    f428:	b6 01       	movw	r22, r12
    f42a:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
    f42e:	87 ff       	sbrs	r24, 7
    f430:	63 c0       	rjmp	.+198    	; 0xf4f8 <_Z14Faults_Handlerv+0x536>
    f432:	20 e0       	ldi	r18, 0x00	; 0
    f434:	30 e0       	ldi	r19, 0x00	; 0
    f436:	40 ea       	ldi	r20, 0xA0	; 160
    f438:	51 e4       	ldi	r21, 0x41	; 65
    f43a:	c5 01       	movw	r24, r10
    f43c:	b4 01       	movw	r22, r8
    f43e:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f442:	9b 01       	movw	r18, r22
    f444:	ac 01       	movw	r20, r24
    f446:	c7 01       	movw	r24, r14
    f448:	b6 01       	movw	r22, r12
    f44a:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
    f44e:	18 16       	cp	r1, r24
    f450:	0c f0       	brlt	.+2      	; 0xf454 <_Z14Faults_Handlerv+0x492>
    f452:	58 c0       	rjmp	.+176    	; 0xf504 <_Z14Faults_Handlerv+0x542>
    f454:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f458:	81 30       	cpi	r24, 0x01	; 1
    f45a:	09 f4       	brne	.+2      	; 0xf45e <_Z14Faults_Handlerv+0x49c>
    f45c:	53 c0       	rjmp	.+166    	; 0xf504 <_Z14Faults_Handlerv+0x542>
    f45e:	81 e0       	ldi	r24, 0x01	; 1
    f460:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f464:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f468:	81 30       	cpi	r24, 0x01	; 1
    f46a:	71 f4       	brne	.+28     	; 0xf488 <_Z14Faults_Handlerv+0x4c6>
    f46c:	67 e1       	ldi	r22, 0x17	; 23
    f46e:	76 e2       	ldi	r23, 0x26	; 38
    f470:	86 ec       	ldi	r24, 0xC6	; 198
    f472:	94 e1       	ldi	r25, 0x14	; 20
    f474:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f478:	4a e0       	ldi	r20, 0x0A	; 10
    f47a:	50 e0       	ldi	r21, 0x00	; 0
    f47c:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f480:	86 ec       	ldi	r24, 0xC6	; 198
    f482:	94 e1       	ldi	r25, 0x14	; 20
    f484:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    f488:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f48c:	84 30       	cpi	r24, 0x04	; 4
    f48e:	d0 f1       	brcs	.+116    	; 0xf504 <_Z14Faults_Handlerv+0x542>
    f490:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f494:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f498:	81 30       	cpi	r24, 0x01	; 1
    f49a:	51 f4       	brne	.+20     	; 0xf4b0 <_Z14Faults_Handlerv+0x4ee>
    f49c:	6a e0       	ldi	r22, 0x0A	; 10
    f49e:	76 e2       	ldi	r23, 0x26	; 38
    f4a0:	86 ec       	ldi	r24, 0xC6	; 198
    f4a2:	94 e1       	ldi	r25, 0x14	; 20
    f4a4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f4a8:	86 ec       	ldi	r24, 0xC6	; 198
    f4aa:	94 e1       	ldi	r25, 0x14	; 20
    f4ac:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f4b0:	81 e0       	ldi	r24, 0x01	; 1
    f4b2:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f4b6:	84 e6       	ldi	r24, 0x64	; 100
    f4b8:	90 e0       	ldi	r25, 0x00	; 0
    f4ba:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f4be:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    f4c2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f4c6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f4ca:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f4ce:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f4d2:	90 61       	ori	r25, 0x10	; 16
    f4d4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f4d8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f4dc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f4e0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
    f4e4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f4e8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f4ec:	82 60       	ori	r24, 0x02	; 2
    f4ee:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f4f2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f4f6:	06 c0       	rjmp	.+12     	; 0xf504 <_Z14Faults_Handlerv+0x542>
    f4f8:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f4fc:	81 30       	cpi	r24, 0x01	; 1
    f4fe:	11 f4       	brne	.+4      	; 0xf504 <_Z14Faults_Handlerv+0x542>
    f500:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f504:	20 e0       	ldi	r18, 0x00	; 0
    f506:	30 e0       	ldi	r19, 0x00	; 0
    f508:	48 ec       	ldi	r20, 0xC8	; 200
    f50a:	52 e4       	ldi	r21, 0x42	; 66
    f50c:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f510:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f514:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f518:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f51c:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
    f520:	20 e0       	ldi	r18, 0x00	; 0
    f522:	30 e0       	ldi	r19, 0x00	; 0
    f524:	40 e7       	ldi	r20, 0x70	; 112
    f526:	51 e4       	ldi	r21, 0x41	; 65
    f528:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    f52c:	9b 01       	movw	r18, r22
    f52e:	ac 01       	movw	r20, r24
    f530:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f534:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f538:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f53c:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f540:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
    f544:	87 ff       	sbrs	r24, 7
    f546:	46 c0       	rjmp	.+140    	; 0xf5d4 <_Z14Faults_Handlerv+0x612>
    f548:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f54c:	98 2f       	mov	r25, r24
    f54e:	9d 7f       	andi	r25, 0xFD	; 253
    f550:	91 30       	cpi	r25, 0x01	; 1
    f552:	19 f0       	breq	.+6      	; 0xf55a <_Z14Faults_Handlerv+0x598>
    f554:	85 30       	cpi	r24, 0x05	; 5
    f556:	09 f0       	breq	.+2      	; 0xf55a <_Z14Faults_Handlerv+0x598>
    f558:	43 c0       	rjmp	.+134    	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f55a:	8a e0       	ldi	r24, 0x0A	; 10
    f55c:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
    f560:	89 2b       	or	r24, r25
    f562:	f1 f5       	brne	.+124    	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f564:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f568:	84 30       	cpi	r24, 0x04	; 4
    f56a:	d1 f1       	breq	.+116    	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f56c:	81 e0       	ldi	r24, 0x01	; 1
    f56e:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f572:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f576:	81 30       	cpi	r24, 0x01	; 1
    f578:	31 f4       	brne	.+12     	; 0xf586 <_Z14Faults_Handlerv+0x5c4>
    f57a:	69 ef       	ldi	r22, 0xF9	; 249
    f57c:	75 e2       	ldi	r23, 0x25	; 37
    f57e:	86 ec       	ldi	r24, 0xC6	; 198
    f580:	94 e1       	ldi	r25, 0x14	; 20
    f582:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f586:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f58a:	84 30       	cpi	r24, 0x04	; 4
    f58c:	48 f1       	brcs	.+82     	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f58e:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f592:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f596:	81 30       	cpi	r24, 0x01	; 1
    f598:	51 f4       	brne	.+20     	; 0xf5ae <_Z14Faults_Handlerv+0x5ec>
    f59a:	69 ee       	ldi	r22, 0xE9	; 233
    f59c:	75 e2       	ldi	r23, 0x25	; 37
    f59e:	86 ec       	ldi	r24, 0xC6	; 198
    f5a0:	94 e1       	ldi	r25, 0x14	; 20
    f5a2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f5a6:	86 ec       	ldi	r24, 0xC6	; 198
    f5a8:	94 e1       	ldi	r25, 0x14	; 20
    f5aa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f5ae:	84 e0       	ldi	r24, 0x04	; 4
    f5b0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
    f5b4:	84 e6       	ldi	r24, 0x64	; 100
    f5b6:	90 e0       	ldi	r25, 0x00	; 0
    f5b8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f5bc:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    f5c0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f5c4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f5c8:	82 60       	ori	r24, 0x02	; 2
    f5ca:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f5ce:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f5d2:	06 c0       	rjmp	.+12     	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f5d4:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f5d8:	84 30       	cpi	r24, 0x04	; 4
    f5da:	11 f4       	brne	.+4      	; 0xf5e0 <_Z14Faults_Handlerv+0x61e>
    f5dc:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f5e0:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f5e4:	81 11       	cpse	r24, r1
    f5e6:	02 c0       	rjmp	.+4      	; 0xf5ec <_Z14Faults_Handlerv+0x62a>
    f5e8:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f5ec:	ff 90       	pop	r15
    f5ee:	ef 90       	pop	r14
    f5f0:	df 90       	pop	r13
    f5f2:	cf 90       	pop	r12
    f5f4:	bf 90       	pop	r11
    f5f6:	af 90       	pop	r10
    f5f8:	9f 90       	pop	r9
    f5fa:	8f 90       	pop	r8
    f5fc:	7f 90       	pop	r7
    f5fe:	6f 90       	pop	r6
    f600:	5f 90       	pop	r5
    f602:	4f 90       	pop	r4
    f604:	08 95       	ret

0000f606 <_Z18Local_Time_Settingv>:
    f606:	0f 93       	push	r16
    f608:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    f60c:	6e e6       	ldi	r22, 0x6E	; 110
    f60e:	75 e2       	ldi	r23, 0x25	; 37
    f610:	83 e8       	ldi	r24, 0x83	; 131
    f612:	96 e1       	ldi	r25, 0x16	; 22
    f614:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f618:	02 e0       	ldi	r16, 0x02	; 2
    f61a:	28 eb       	ldi	r18, 0xB8	; 184
    f61c:	3b e0       	ldi	r19, 0x0B	; 11
    f61e:	40 e0       	ldi	r20, 0x00	; 0
    f620:	50 e0       	ldi	r21, 0x00	; 0
    f622:	6e e1       	ldi	r22, 0x1E	; 30
    f624:	73 e0       	ldi	r23, 0x03	; 3
    f626:	80 e0       	ldi	r24, 0x00	; 0
    f628:	90 e0       	ldi	r25, 0x00	; 0
    f62a:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    f62e:	88 23       	and	r24, r24
    f630:	c1 f1       	breq	.+112    	; 0xf6a2 <_Z18Local_Time_Settingv+0x9c>
    f632:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    f636:	69 e6       	ldi	r22, 0x69	; 105
    f638:	75 e2       	ldi	r23, 0x25	; 37
    f63a:	83 e8       	ldi	r24, 0x83	; 131
    f63c:	96 e1       	ldi	r25, 0x16	; 22
    f63e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f642:	28 eb       	ldi	r18, 0xB8	; 184
    f644:	3b e0       	ldi	r19, 0x0B	; 11
    f646:	40 e0       	ldi	r20, 0x00	; 0
    f648:	50 e0       	ldi	r21, 0x00	; 0
    f64a:	6e e1       	ldi	r22, 0x1E	; 30
    f64c:	73 e0       	ldi	r23, 0x03	; 3
    f64e:	80 e0       	ldi	r24, 0x00	; 0
    f650:	90 e0       	ldi	r25, 0x00	; 0
    f652:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    f656:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
    f65a:	60 e6       	ldi	r22, 0x60	; 96
    f65c:	75 e2       	ldi	r23, 0x25	; 37
    f65e:	83 e8       	ldi	r24, 0x83	; 131
    f660:	96 e1       	ldi	r25, 0x16	; 22
    f662:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f666:	20 e1       	ldi	r18, 0x10	; 16
    f668:	37 e2       	ldi	r19, 0x27	; 39
    f66a:	40 e0       	ldi	r20, 0x00	; 0
    f66c:	50 e0       	ldi	r21, 0x00	; 0
    f66e:	6e e1       	ldi	r22, 0x1E	; 30
    f670:	73 e0       	ldi	r23, 0x03	; 3
    f672:	80 e0       	ldi	r24, 0x00	; 0
    f674:	90 e0       	ldi	r25, 0x00	; 0
    f676:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
    f67a:	81 11       	cpse	r24, r1
    f67c:	15 c0       	rjmp	.+42     	; 0xf6a8 <_Z18Local_Time_Settingv+0xa2>
    f67e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f682:	81 30       	cpi	r24, 0x01	; 1
    f684:	51 f4       	brne	.+20     	; 0xf69a <_Z18Local_Time_Settingv+0x94>
    f686:	63 e5       	ldi	r22, 0x53	; 83
    f688:	75 e2       	ldi	r23, 0x25	; 37
    f68a:	86 ec       	ldi	r24, 0xC6	; 198
    f68c:	94 e1       	ldi	r25, 0x14	; 20
    f68e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f692:	86 ec       	ldi	r24, 0xC6	; 198
    f694:	94 e1       	ldi	r25, 0x14	; 20
    f696:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f69a:	81 e0       	ldi	r24, 0x01	; 1
    f69c:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    f6a0:	03 c0       	rjmp	.+6      	; 0xf6a8 <_Z18Local_Time_Settingv+0xa2>
    f6a2:	81 e0       	ldi	r24, 0x01	; 1
    f6a4:	80 93 69 0c 	sts	0x0C69, r24	; 0x800c69 <_sGSM_Query+0x5>
    f6a8:	0f 91       	pop	r16
    f6aa:	08 95       	ret

0000f6ac <_Z21Exra_Plot_Data_EEPROMh>:
    f6ac:	cf 92       	push	r12
    f6ae:	df 92       	push	r13
    f6b0:	ef 92       	push	r14
    f6b2:	ff 92       	push	r15
    f6b4:	0f 93       	push	r16
    f6b6:	1f 93       	push	r17
    f6b8:	cf 93       	push	r28
    f6ba:	df 93       	push	r29
    f6bc:	1f 92       	push	r1
    f6be:	1f 92       	push	r1
    f6c0:	cd b7       	in	r28, 0x3d	; 61
    f6c2:	de b7       	in	r29, 0x3e	; 62
    f6c4:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f6c8:	08 2f       	mov	r16, r24
    f6ca:	10 e0       	ldi	r17, 0x00	; 0
    f6cc:	91 30       	cpi	r25, 0x01	; 1
    f6ce:	d9 f0       	breq	.+54     	; 0xf706 <_Z21Exra_Plot_Data_EEPROMh+0x5a>
    f6d0:	01 50       	subi	r16, 0x01	; 1
    f6d2:	11 09       	sbc	r17, r1
    f6d4:	8e e1       	ldi	r24, 0x1E	; 30
    f6d6:	80 9f       	mul	r24, r16
    f6d8:	90 01       	movw	r18, r0
    f6da:	81 9f       	mul	r24, r17
    f6dc:	30 0d       	add	r19, r0
    f6de:	11 24       	eor	r1, r1
    f6e0:	79 01       	movw	r14, r18
    f6e2:	8f e0       	ldi	r24, 0x0F	; 15
    f6e4:	e8 1a       	sub	r14, r24
    f6e6:	86 ef       	ldi	r24, 0xF6	; 246
    f6e8:	f8 0a       	sbc	r15, r24
    f6ea:	8b e1       	ldi	r24, 0x1B	; 27
    f6ec:	80 9f       	mul	r24, r16
    f6ee:	a0 01       	movw	r20, r0
    f6f0:	81 9f       	mul	r24, r17
    f6f2:	50 0d       	add	r21, r0
    f6f4:	11 24       	eor	r1, r1
    f6f6:	fa 01       	movw	r30, r20
    f6f8:	e8 51       	subi	r30, 0x18	; 24
    f6fa:	f2 4f       	sbci	r31, 0xF2	; 242
    f6fc:	6f 01       	movw	r12, r30
    f6fe:	89 01       	movw	r16, r18
    f700:	04 5f       	subi	r16, 0xF4	; 244
    f702:	15 4f       	sbci	r17, 0xF5	; 245
    f704:	5f c0       	rjmp	.+190    	; 0xf7c4 <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f706:	86 ec       	ldi	r24, 0xC6	; 198
    f708:	94 e1       	ldi	r25, 0x14	; 20
    f70a:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
    f70e:	65 e4       	ldi	r22, 0x45	; 69
    f710:	75 e2       	ldi	r23, 0x25	; 37
    f712:	86 ec       	ldi	r24, 0xC6	; 198
    f714:	94 e1       	ldi	r25, 0x14	; 20
    f716:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    f71a:	4a e0       	ldi	r20, 0x0A	; 10
    f71c:	50 e0       	ldi	r21, 0x00	; 0
    f71e:	b8 01       	movw	r22, r16
    f720:	86 ec       	ldi	r24, 0xC6	; 198
    f722:	94 e1       	ldi	r25, 0x14	; 20
    f724:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
    f728:	86 ec       	ldi	r24, 0xC6	; 198
    f72a:	94 e1       	ldi	r25, 0x14	; 20
    f72c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
    f730:	86 ec       	ldi	r24, 0xC6	; 198
    f732:	94 e1       	ldi	r25, 0x14	; 20
    f734:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f738:	6e e2       	ldi	r22, 0x2E	; 46
    f73a:	75 e2       	ldi	r23, 0x25	; 37
    f73c:	86 ec       	ldi	r24, 0xC6	; 198
    f73e:	94 e1       	ldi	r25, 0x14	; 20
    f740:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    f744:	69 e1       	ldi	r22, 0x19	; 25
    f746:	75 e2       	ldi	r23, 0x25	; 37
    f748:	86 ec       	ldi	r24, 0xC6	; 198
    f74a:	94 e1       	ldi	r25, 0x14	; 20
    f74c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    f750:	c8 01       	movw	r24, r16
    f752:	01 97       	sbiw	r24, 0x01	; 1
    f754:	2b e1       	ldi	r18, 0x1B	; 27
    f756:	28 9f       	mul	r18, r24
    f758:	60 01       	movw	r12, r0
    f75a:	29 9f       	mul	r18, r25
    f75c:	d0 0c       	add	r13, r0
    f75e:	11 24       	eor	r1, r1
    f760:	f6 01       	movw	r30, r12
    f762:	e8 51       	subi	r30, 0x18	; 24
    f764:	f2 4f       	sbci	r31, 0xF2	; 242
    f766:	4a e0       	ldi	r20, 0x0A	; 10
    f768:	50 e0       	ldi	r21, 0x00	; 0
    f76a:	61 81       	ldd	r22, Z+1	; 0x01
    f76c:	86 ec       	ldi	r24, 0xC6	; 198
    f76e:	94 e1       	ldi	r25, 0x14	; 20
    f770:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
    f774:	86 ec       	ldi	r24, 0xC6	; 198
    f776:	94 e1       	ldi	r25, 0x14	; 20
    f778:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f77c:	e1 2c       	mov	r14, r1
    f77e:	f1 2c       	mov	r15, r1
    f780:	86 ec       	ldi	r24, 0xC6	; 198
    f782:	94 e1       	ldi	r25, 0x14	; 20
    f784:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
    f788:	6d e0       	ldi	r22, 0x0D	; 13
    f78a:	75 e2       	ldi	r23, 0x25	; 37
    f78c:	86 ec       	ldi	r24, 0xC6	; 198
    f78e:	94 e1       	ldi	r25, 0x14	; 20
    f790:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
    f794:	f7 01       	movw	r30, r14
    f796:	ec 0d       	add	r30, r12
    f798:	fd 1d       	adc	r31, r13
    f79a:	e8 51       	subi	r30, 0x18	; 24
    f79c:	f2 4f       	sbci	r31, 0xF2	; 242
    f79e:	4a e0       	ldi	r20, 0x0A	; 10
    f7a0:	50 e0       	ldi	r21, 0x00	; 0
    f7a2:	65 81       	ldd	r22, Z+5	; 0x05
    f7a4:	86 ec       	ldi	r24, 0xC6	; 198
    f7a6:	94 e1       	ldi	r25, 0x14	; 20
    f7a8:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
    f7ac:	86 ec       	ldi	r24, 0xC6	; 198
    f7ae:	94 e1       	ldi	r25, 0x14	; 20
    f7b0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    f7b4:	ff ef       	ldi	r31, 0xFF	; 255
    f7b6:	ef 1a       	sub	r14, r31
    f7b8:	ff 0a       	sbc	r15, r31
    f7ba:	85 e0       	ldi	r24, 0x05	; 5
    f7bc:	e8 16       	cp	r14, r24
    f7be:	f1 04       	cpc	r15, r1
    f7c0:	f9 f6       	brne	.-66     	; 0xf780 <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f7c2:	86 cf       	rjmp	.-244    	; 0xf6d0 <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f7c4:	f6 01       	movw	r30, r12
    f7c6:	61 91       	ld	r22, Z+
    f7c8:	6f 01       	movw	r12, r30
    f7ca:	fa 82       	std	Y+2, r15	; 0x02
    f7cc:	e9 82       	std	Y+1, r14	; 0x01
    f7ce:	ce 01       	movw	r24, r28
    f7d0:	01 96       	adiw	r24, 0x01	; 1
    f7d2:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    f7d6:	ff ef       	ldi	r31, 0xFF	; 255
    f7d8:	ef 1a       	sub	r14, r31
    f7da:	ff 0a       	sbc	r15, r31
    f7dc:	e0 16       	cp	r14, r16
    f7de:	f1 06       	cpc	r15, r17
    f7e0:	89 f7       	brne	.-30     	; 0xf7c4 <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f7e2:	0f 90       	pop	r0
    f7e4:	0f 90       	pop	r0
    f7e6:	df 91       	pop	r29
    f7e8:	cf 91       	pop	r28
    f7ea:	1f 91       	pop	r17
    f7ec:	0f 91       	pop	r16
    f7ee:	ff 90       	pop	r15
    f7f0:	ef 90       	pop	r14
    f7f2:	df 90       	pop	r13
    f7f4:	cf 90       	pop	r12
    f7f6:	08 95       	ret

0000f7f8 <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f7f8:	4f 92       	push	r4
    f7fa:	5f 92       	push	r5
    f7fc:	6f 92       	push	r6
    f7fe:	7f 92       	push	r7
    f800:	8f 92       	push	r8
    f802:	9f 92       	push	r9
    f804:	af 92       	push	r10
    f806:	bf 92       	push	r11
    f808:	cf 92       	push	r12
    f80a:	df 92       	push	r13
    f80c:	ef 92       	push	r14
    f80e:	ff 92       	push	r15
    f810:	0f 93       	push	r16
    f812:	1f 93       	push	r17
    f814:	cf 93       	push	r28
    f816:	df 93       	push	r29
    f818:	cd b7       	in	r28, 0x3d	; 61
    f81a:	de b7       	in	r29, 0x3e	; 62
    f81c:	e4 97       	sbiw	r28, 0x34	; 52
    f81e:	0f b6       	in	r0, 0x3f	; 63
    f820:	f8 94       	cli
    f822:	de bf       	out	0x3e, r29	; 62
    f824:	0f be       	out	0x3f, r0	; 63
    f826:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f828:	64 ea       	ldi	r22, 0xA4	; 164
    f82a:	73 e1       	ldi	r23, 0x13	; 19
    f82c:	8f e0       	ldi	r24, 0x0F	; 15
    f82e:	95 e0       	ldi	r25, 0x05	; 5
    f830:	0e 94 ad 73 	call	0xe75a	; 0xe75a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f834:	fe ec       	ldi	r31, 0xCE	; 206
    f836:	ef 2e       	mov	r14, r31
    f838:	f3 e1       	ldi	r31, 0x13	; 19
    f83a:	ff 2e       	mov	r15, r31
    f83c:	67 01       	movw	r12, r14
    f83e:	00 e0       	ldi	r16, 0x00	; 0
    f840:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f842:	ce 01       	movw	r24, r28
    f844:	01 96       	adiw	r24, 0x01	; 1
    f846:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f848:	1a 83       	std	Y+2, r17	; 0x02
    f84a:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f84c:	c3 01       	movw	r24, r6
    f84e:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f852:	f6 01       	movw	r30, r12
    f854:	81 93       	st	Z+, r24
    f856:	6f 01       	movw	r12, r30
    f858:	0f 5f       	subi	r16, 0xFF	; 255
    f85a:	1f 4f       	sbci	r17, 0xFF	; 255
    f85c:	07 30       	cpi	r16, 0x07	; 7
    f85e:	11 05       	cpc	r17, r1
    f860:	99 f7       	brne	.-26     	; 0xf848 <_Z11Read_EEPROMv+0x50>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f862:	f7 01       	movw	r30, r14
    f864:	61 91       	ld	r22, Z+
    f866:	7f 01       	movw	r14, r30
    f868:	86 ec       	ldi	r24, 0xC6	; 198
    f86a:	94 e1       	ldi	r25, 0x14	; 20
    f86c:	0e 94 ac d3 	call	0x1a758	; 0x1a758 <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f870:	f4 ed       	ldi	r31, 0xD4	; 212
    f872:	ef 16       	cp	r14, r31
    f874:	f3 e1       	ldi	r31, 0x13	; 19
    f876:	ff 06       	cpc	r15, r31
    f878:	a1 f7       	brne	.-24     	; 0xf862 <_Z11Read_EEPROMv+0x6a>
    f87a:	7e e4       	ldi	r23, 0x4E	; 78
    f87c:	c7 2e       	mov	r12, r23
    f87e:	7d e0       	ldi	r23, 0x0D	; 13
    f880:	d7 2e       	mov	r13, r23
    f882:	08 e0       	ldi	r16, 0x08	; 8
    f884:	10 e0       	ldi	r17, 0x00	; 0
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f886:	e2 e3       	ldi	r30, 0x32	; 50
    f888:	5e 2e       	mov	r5, r30
    f88a:	f3 01       	movw	r30, r6
    f88c:	85 2d       	mov	r24, r5
    f88e:	11 92       	st	Z+, r1
    f890:	8a 95       	dec	r24
    f892:	e9 f7       	brne	.-6      	; 0xf88e <_Z11Read_EEPROMv+0x96>
    f894:	48 01       	movw	r8, r16
    f896:	96 e0       	ldi	r25, 0x06	; 6
    f898:	89 0e       	add	r8, r25
    f89a:	91 1c       	adc	r9, r1
    f89c:	56 01       	movw	r10, r12
    f89e:	78 01       	movw	r14, r16
    f8a0:	fc aa       	std	Y+52, r15	; 0x34
    f8a2:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f8a4:	ce 01       	movw	r24, r28
    f8a6:	c3 96       	adiw	r24, 0x33	; 51
    f8a8:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f8ac:	f5 01       	movw	r30, r10
    f8ae:	81 93       	st	Z+, r24
    f8b0:	5f 01       	movw	r10, r30
    f8b2:	ff ef       	ldi	r31, 0xFF	; 255
    f8b4:	ef 1a       	sub	r14, r31
    f8b6:	ff 0a       	sbc	r15, r31
    f8b8:	8e 14       	cp	r8, r14
    f8ba:	9f 04       	cpc	r9, r15
    f8bc:	89 f7       	brne	.-30     	; 0xf8a0 <_Z11Read_EEPROMv+0xa8>
    f8be:	08 5d       	subi	r16, 0xD8	; 216
    f8c0:	1f 4f       	sbci	r17, 0xFF	; 255
    f8c2:	86 e0       	ldi	r24, 0x06	; 6
    f8c4:	c8 0e       	add	r12, r24
    f8c6:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f8c8:	08 33       	cpi	r16, 0x38	; 56
    f8ca:	92 e0       	ldi	r25, 0x02	; 2
    f8cc:	19 07       	cpc	r17, r25
    f8ce:	e9 f6       	brne	.-70     	; 0xf88a <_Z11Read_EEPROMv+0x92>
    f8d0:	65 e1       	ldi	r22, 0x15	; 21
    f8d2:	c6 2e       	mov	r12, r22
    f8d4:	6c e0       	ldi	r22, 0x0C	; 12
    f8d6:	d6 2e       	mov	r13, r22
    f8d8:	0a ec       	ldi	r16, 0xCA	; 202
    f8da:	13 e0       	ldi	r17, 0x03	; 3
    f8dc:	48 01       	movw	r8, r16
    f8de:	ed e0       	ldi	r30, 0x0D	; 13
    f8e0:	8e 0e       	add	r8, r30
    f8e2:	91 1c       	adc	r9, r1
    f8e4:	56 01       	movw	r10, r12
    f8e6:	78 01       	movw	r14, r16
    f8e8:	fc aa       	std	Y+52, r15	; 0x34
    f8ea:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f8ec:	ce 01       	movw	r24, r28
    f8ee:	c3 96       	adiw	r24, 0x33	; 51
    f8f0:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f8f4:	f5 01       	movw	r30, r10
    f8f6:	81 93       	st	Z+, r24
    f8f8:	5f 01       	movw	r10, r30
    f8fa:	ff ef       	ldi	r31, 0xFF	; 255
    f8fc:	ef 1a       	sub	r14, r31
    f8fe:	ff 0a       	sbc	r15, r31
    f900:	8e 14       	cp	r8, r14
    f902:	9f 04       	cpc	r9, r15
    f904:	89 f7       	brne	.-30     	; 0xf8e8 <_Z11Read_EEPROMv+0xf0>
    f906:	0c 5e       	subi	r16, 0xEC	; 236
    f908:	1f 4f       	sbci	r17, 0xFF	; 255
    f90a:	8d e0       	ldi	r24, 0x0D	; 13
    f90c:	c8 0e       	add	r12, r24
    f90e:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f910:	02 34       	cpi	r16, 0x42	; 66
    f912:	94 e0       	ldi	r25, 0x04	; 4
    f914:	19 07       	cpc	r17, r25
    f916:	11 f7       	brne	.-60     	; 0xf8dc <_Z11Read_EEPROMv+0xe4>
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f918:	14 e0       	ldi	r17, 0x04	; 4
    f91a:	10 93 1f 0c 	sts	0x0C1F, r17	; 0x800c1f <_sEuro_Valve_Param+0xa>
    f91e:	10 93 2c 0c 	sts	0x0C2C, r17	; 0x800c2c <_sEuro_Valve_Param+0x17>
    f922:	10 93 39 0c 	sts	0x0C39, r17	; 0x800c39 <_sEuro_Valve_Param+0x24>
    f926:	10 93 46 0c 	sts	0x0C46, r17	; 0x800c46 <_sEuro_Valve_Param+0x31>
    f92a:	10 93 53 0c 	sts	0x0C53, r17	; 0x800c53 <_sEuro_Valve_Param+0x3e>
    f92e:	10 93 60 0c 	sts	0x0C60, r17	; 0x800c60 <_sEuro_Valve_Param+0x4b>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f932:	65 ed       	ldi	r22, 0xD5	; 213
    f934:	73 e1       	ldi	r23, 0x13	; 19
    f936:	88 ed       	ldi	r24, 0xD8	; 216
    f938:	94 e0       	ldi	r25, 0x04	; 4
    f93a:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f93e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f942:	83 30       	cpi	r24, 0x03	; 3
    f944:	99 f0       	breq	.+38     	; 0xf96c <_Z11Read_EEPROMv+0x174>
    f946:	28 f4       	brcc	.+10     	; 0xf952 <_Z11Read_EEPROMv+0x15a>
    f948:	81 30       	cpi	r24, 0x01	; 1
    f94a:	39 f0       	breq	.+14     	; 0xf95a <_Z11Read_EEPROMv+0x162>
    f94c:	82 30       	cpi	r24, 0x02	; 2
    f94e:	c9 f1       	breq	.+114    	; 0xf9c2 <_Z11Read_EEPROMv+0x1ca>
    f950:	41 c0       	rjmp	.+130    	; 0xf9d4 <_Z11Read_EEPROMv+0x1dc>
    f952:	84 30       	cpi	r24, 0x04	; 4
    f954:	b1 f1       	breq	.+108    	; 0xf9c2 <_Z11Read_EEPROMv+0x1ca>
    f956:	85 30       	cpi	r24, 0x05	; 5
    f958:	e9 f5       	brne	.+122    	; 0xf9d4 <_Z11Read_EEPROMv+0x1dc>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f95a:	85 e0       	ldi	r24, 0x05	; 5
    f95c:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f960:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f964:	8e 7f       	andi	r24, 0xFE	; 254
    f966:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f96a:	37 c0       	rjmp	.+110    	; 0xf9da <_Z11Read_EEPROMv+0x1e2>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f96c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f970:	8e 7f       	andi	r24, 0xFE	; 254
    f972:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f976:	10 93 d6 13 	sts	0x13D6, r17	; 0x8013d6 <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f97a:	65 e6       	ldi	r22, 0x65	; 101
    f97c:	74 e1       	ldi	r23, 0x14	; 20
    f97e:	86 e9       	ldi	r24, 0x96	; 150
    f980:	9c e0       	ldi	r25, 0x0C	; 12
    f982:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f986:	88 e9       	ldi	r24, 0x98	; 152
    f988:	9c e0       	ldi	r25, 0x0C	; 12
    f98a:	9c ab       	std	Y+52, r25	; 0x34
    f98c:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f98e:	ce 01       	movw	r24, r28
    f990:	c3 96       	adiw	r24, 0x33	; 51
    f992:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f996:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
    f99a:	89 e9       	ldi	r24, 0x99	; 153
    f99c:	9c e0       	ldi	r25, 0x0C	; 12
    f99e:	9c ab       	std	Y+52, r25	; 0x34
    f9a0:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f9a2:	ce 01       	movw	r24, r28
    f9a4:	c3 96       	adiw	r24, 0x33	; 51
    f9a6:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f9aa:	80 93 c5 13 	sts	0x13C5, r24	; 0x8013c5 <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f9ae:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f9b2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f9b6:	88 60       	ori	r24, 0x08	; 8
    f9b8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f9bc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		}break;
    f9c0:	15 c0       	rjmp	.+42     	; 0xf9ec <_Z11Read_EEPROMv+0x1f4>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f9c2:	84 e0       	ldi	r24, 0x04	; 4
    f9c4:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f9c8:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f9cc:	81 60       	ori	r24, 0x01	; 1
    f9ce:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
		}break;
    f9d2:	0c c0       	rjmp	.+24     	; 0xf9ec <_Z11Read_EEPROMv+0x1f4>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f9d4:	85 e0       	ldi	r24, 0x05	; 5
    f9d6:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f9da:	84 e0       	ldi	r24, 0x04	; 4
    f9dc:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f9e0:	65 ed       	ldi	r22, 0xD5	; 213
    f9e2:	73 e1       	ldi	r23, 0x13	; 19
    f9e4:	88 ed       	ldi	r24, 0xD8	; 216
    f9e6:	94 e0       	ldi	r25, 0x04	; 4
    f9e8:	0e 94 13 74 	call	0xe826	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
		}break;
	}
	
	/******************************************* update ruble sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_SIM_NUM,_sNetwork_and_Usr_Info.Ruble_SIM_No);
    f9ec:	69 eb       	ldi	r22, 0xB9	; 185
    f9ee:	7d e0       	ldi	r23, 0x0D	; 13
    f9f0:	8a ed       	ldi	r24, 0xDA	; 218
    f9f2:	94 e0       	ldi	r25, 0x04	; 4
    f9f4:	0e 94 e0 73 	call	0xe7c0	; 0xe7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	
	
	/******************************************* update user sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_USER_SIM_NUM,_sNetwork_and_Usr_Info.User_Sim_No);
    f9f8:	64 ec       	ldi	r22, 0xC4	; 196
    f9fa:	7d e0       	ldi	r23, 0x0D	; 13
    f9fc:	87 ee       	ldi	r24, 0xE7	; 231
    f9fe:	94 e0       	ldi	r25, 0x04	; 4
    fa00:	0e 94 e0 73 	call	0xe7c0	; 0xe7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    fa04:	69 e6       	ldi	r22, 0x69	; 105
    fa06:	74 e1       	ldi	r23, 0x14	; 20
    fa08:	88 e1       	ldi	r24, 0x18	; 24
    fa0a:	95 e0       	ldi	r25, 0x05	; 5
    fa0c:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    fa10:	61 e7       	ldi	r22, 0x71	; 113
    fa12:	74 e1       	ldi	r23, 0x14	; 20
    fa14:	89 e1       	ldi	r24, 0x19	; 25
    fa16:	95 e0       	ldi	r25, 0x05	; 5
    fa18:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fa1c:	5e e1       	ldi	r21, 0x1E	; 30
    fa1e:	e5 2e       	mov	r14, r21
    fa20:	59 e0       	ldi	r21, 0x09	; 9
    fa22:	f5 2e       	mov	r15, r21
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fa24:	0a e1       	ldi	r16, 0x1A	; 26
    fa26:	15 e0       	ldi	r17, 0x05	; 5
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fa28:	1c ab       	std	Y+52, r17	; 0x34
    fa2a:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fa2c:	ce 01       	movw	r24, r28
    fa2e:	c3 96       	adiw	r24, 0x33	; 51
    fa30:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fa34:	f7 01       	movw	r30, r14
    fa36:	81 93       	st	Z+, r24
    fa38:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    fa3a:	0f 5f       	subi	r16, 0xFF	; 255
    fa3c:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fa3e:	00 3f       	cpi	r16, 0xF0	; 240
    fa40:	f7 e0       	ldi	r31, 0x07	; 7
    fa42:	1f 07       	cpc	r17, r31
    fa44:	89 f7       	brne	.-30     	; 0xfa28 <_Z11Read_EEPROMv+0x230>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    fa46:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    fa4a:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    fa4e:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
	_sSchedules.New_Schedules_Occur = _kRESET;
    fa52:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    fa56:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    fa5a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    fa5e:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    fa62:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    fa66:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    fa6a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    fa6e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    fa72:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
    fa76:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    fa7a:	99 23       	and	r25, r25
    fa7c:	21 f1       	breq	.+72     	; 0xfac6 <_Z11Read_EEPROMv+0x2ce>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    fa7e:	81 30       	cpi	r24, 0x01	; 1
    fa80:	11 f0       	breq	.+4      	; 0xfa86 <_Z11Read_EEPROMv+0x28e>
    fa82:	85 30       	cpi	r24, 0x05	; 5
    fa84:	89 f4       	brne	.+34     	; 0xfaa8 <_Z11Read_EEPROMv+0x2b0>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    fa86:	85 e0       	ldi	r24, 0x05	; 5
    fa88:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    fa8c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    fa90:	8e 7f       	andi	r24, 0xFE	; 254
    fa92:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fa96:	84 e0       	ldi	r24, 0x04	; 4
    fa98:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fa9c:	65 ed       	ldi	r22, 0xD5	; 213
    fa9e:	73 e1       	ldi	r23, 0x13	; 19
    faa0:	88 ed       	ldi	r24, 0xD8	; 216
    faa2:	94 e0       	ldi	r25, 0x04	; 4
    faa4:	0e 94 13 74 	call	0xe826	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    faa8:	08 ee       	ldi	r16, 0xE8	; 232
    faaa:	1d e0       	ldi	r17, 0x0D	; 13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    faac:	91 ef       	ldi	r25, 0xF1	; 241
    faae:	e9 2e       	mov	r14, r25
    fab0:	99 e0       	ldi	r25, 0x09	; 9
    fab2:	f9 2e       	mov	r15, r25
    fab4:	2e ef       	ldi	r18, 0xFE	; 254
    fab6:	72 2e       	mov	r7, r18
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    fab8:	66 24       	eor	r6, r6
    faba:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    fabc:	35 e0       	ldi	r19, 0x05	; 5
    fabe:	53 2e       	mov	r5, r19
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    fac0:	42 e0       	ldi	r20, 0x02	; 2
    fac2:	44 2e       	mov	r4, r20
    fac4:	14 c0       	rjmp	.+40     	; 0xfaee <_Z11Read_EEPROMv+0x2f6>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    fac6:	81 30       	cpi	r24, 0x01	; 1
    fac8:	11 f0       	breq	.+4      	; 0xface <_Z11Read_EEPROMv+0x2d6>
    faca:	85 30       	cpi	r24, 0x05	; 5
    facc:	69 f7       	brne	.-38     	; 0xfaa8 <_Z11Read_EEPROMv+0x2b0>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    face:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
    fad2:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    fad6:	85 e0       	ldi	r24, 0x05	; 5
    fad8:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    fadc:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    fae0:	8e 7f       	andi	r24, 0xFE	; 254
    fae2:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fae6:	84 e0       	ldi	r24, 0x04	; 4
    fae8:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			}break;
    faec:	dd cf       	rjmp	.-70     	; 0xfaa8 <_Z11Read_EEPROMv+0x2b0>
    faee:	47 01       	movw	r8, r14
    faf0:	8b e1       	ldi	r24, 0x1B	; 27
    faf2:	88 0e       	add	r8, r24
    faf4:	91 1c       	adc	r9, r1
    faf6:	58 01       	movw	r10, r16
    faf8:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fafa:	dc aa       	std	Y+52, r13	; 0x34
    fafc:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fafe:	ce 01       	movw	r24, r28
    fb00:	c3 96       	adiw	r24, 0x33	; 51
    fb02:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fb06:	f5 01       	movw	r30, r10
    fb08:	81 93       	st	Z+, r24
    fb0a:	5f 01       	movw	r10, r30
    fb0c:	ff ef       	ldi	r31, 0xFF	; 255
    fb0e:	cf 1a       	sub	r12, r31
    fb10:	df 0a       	sbc	r13, r31
    fb12:	8c 14       	cp	r8, r12
    fb14:	9d 04       	cpc	r9, r13
    fb16:	89 f7       	brne	.-30     	; 0xfafa <_Z11Read_EEPROMv+0x302>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb18:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fb1c:	81 30       	cpi	r24, 0x01	; 1
    fb1e:	91 f4       	brne	.+36     	; 0xfb44 <_Z11Read_EEPROMv+0x34c>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    fb20:	67 ec       	ldi	r22, 0xC7	; 199
    fb22:	76 e2       	ldi	r23, 0x26	; 38
    fb24:	86 ec       	ldi	r24, 0xC6	; 198
    fb26:	94 e1       	ldi	r25, 0x14	; 20
    fb28:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    fb2c:	4a e0       	ldi	r20, 0x0A	; 10
    fb2e:	50 e0       	ldi	r21, 0x00	; 0
    fb30:	f8 01       	movw	r30, r16
    fb32:	61 81       	ldd	r22, Z+1	; 0x01
    fb34:	86 ec       	ldi	r24, 0xC6	; 198
    fb36:	94 e1       	ldi	r25, 0x14	; 20
    fb38:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    fb3c:	86 ec       	ldi	r24, 0xC6	; 198
    fb3e:	94 e1       	ldi	r25, 0x14	; 20
    fb40:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    fb44:	f8 01       	movw	r30, r16
    fb46:	83 81       	ldd	r24, Z+3	; 0x03
    fb48:	94 81       	ldd	r25, Z+4	; 0x04
    fb4a:	89 2b       	or	r24, r25
    fb4c:	c9 f0       	breq	.+50     	; 0xfb80 <_Z11Read_EEPROMv+0x388>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb4e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fb52:	81 30       	cpi	r24, 0x01	; 1
    fb54:	99 f4       	brne	.+38     	; 0xfb7c <_Z11Read_EEPROMv+0x384>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    fb56:	6f ea       	ldi	r22, 0xAF	; 175
    fb58:	76 e2       	ldi	r23, 0x26	; 38
    fb5a:	86 ec       	ldi	r24, 0xC6	; 198
    fb5c:	94 e1       	ldi	r25, 0x14	; 20
    fb5e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    fb62:	f8 01       	movw	r30, r16
    fb64:	63 81       	ldd	r22, Z+3	; 0x03
    fb66:	74 81       	ldd	r23, Z+4	; 0x04
    fb68:	4a e0       	ldi	r20, 0x0A	; 10
    fb6a:	50 e0       	ldi	r21, 0x00	; 0
    fb6c:	86 ec       	ldi	r24, 0xC6	; 198
    fb6e:	94 e1       	ldi	r25, 0x14	; 20
    fb70:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    fb74:	86 ec       	ldi	r24, 0xC6	; 198
    fb76:	94 e1       	ldi	r25, 0x14	; 20
    fb78:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    fb7c:	f8 01       	movw	r30, r16
    fb7e:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    fb80:	f8 01       	movw	r30, r16
    fb82:	83 81       	ldd	r24, Z+3	; 0x03
    fb84:	94 81       	ldd	r25, Z+4	; 0x04
    fb86:	89 2b       	or	r24, r25
    fb88:	a1 f4       	brne	.+40     	; 0xfbb2 <_Z11Read_EEPROMv+0x3ba>
    fb8a:	82 85       	ldd	r24, Z+10	; 0x0a
    fb8c:	81 11       	cpse	r24, r1
    fb8e:	11 c0       	rjmp	.+34     	; 0xfbb2 <_Z11Read_EEPROMv+0x3ba>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fb94:	81 30       	cpi	r24, 0x01	; 1
    fb96:	51 f4       	brne	.+20     	; 0xfbac <_Z11Read_EEPROMv+0x3b4>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    fb98:	63 e9       	ldi	r22, 0x93	; 147
    fb9a:	76 e2       	ldi	r23, 0x26	; 38
    fb9c:	86 ec       	ldi	r24, 0xC6	; 198
    fb9e:	94 e1       	ldi	r25, 0x14	; 20
    fba0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    fba4:	86 ec       	ldi	r24, 0xC6	; 198
    fba6:	94 e1       	ldi	r25, 0x14	; 20
    fba8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fbac:	f8 01       	movw	r30, r16
    fbae:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    fbb0:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    fbb2:	f8 01       	movw	r30, r16
    fbb4:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    fbb6:	82 81       	ldd	r24, Z+2	; 0x02
    fbb8:	82 30       	cpi	r24, 0x02	; 2
    fbba:	49 f0       	breq	.+18     	; 0xfbce <_Z11Read_EEPROMv+0x3d6>
    fbbc:	83 30       	cpi	r24, 0x03	; 3
    fbbe:	11 f4       	brne	.+4      	; 0xfbc4 <_Z11Read_EEPROMv+0x3cc>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    fbc0:	42 82       	std	Z+2, r4	; 0x02
			}break;
    fbc2:	05 c0       	rjmp	.+10     	; 0xfbce <_Z11Read_EEPROMv+0x3d6>
			
			default:
			{
				if(i < 2 || i > 9)
    fbc4:	f7 e0       	ldi	r31, 0x07	; 7
    fbc6:	f7 15       	cp	r31, r7
    fbc8:	28 f4       	brcc	.+10     	; 0xfbd4 <_Z11Read_EEPROMv+0x3dc>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    fbca:	f8 01       	movw	r30, r16
    fbcc:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fbce:	c1 2c       	mov	r12, r1
    fbd0:	d1 2c       	mov	r13, r1
    fbd2:	0a c0       	rjmp	.+20     	; 0xfbe8 <_Z11Read_EEPROMv+0x3f0>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fbd4:	f8 01       	movw	r30, r16
    fbd6:	62 82       	std	Z+2, r6	; 0x02
    fbd8:	fa cf       	rjmp	.-12     	; 0xfbce <_Z11Read_EEPROMv+0x3d6>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    fbda:	ff ef       	ldi	r31, 0xFF	; 255
    fbdc:	cf 1a       	sub	r12, r31
    fbde:	df 0a       	sbc	r13, r31
    fbe0:	85 e0       	ldi	r24, 0x05	; 5
    fbe2:	c8 16       	cp	r12, r24
    fbe4:	d1 04       	cpc	r13, r1
    fbe6:	e9 f0       	breq	.+58     	; 0xfc22 <_Z11Read_EEPROMv+0x42a>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fbe8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fbec:	81 30       	cpi	r24, 0x01	; 1
    fbee:	a9 f7       	brne	.-22     	; 0xfbda <_Z11Read_EEPROMv+0x3e2>
			{
				Serial.println();
    fbf0:	86 ec       	ldi	r24, 0xC6	; 198
    fbf2:	94 e1       	ldi	r25, 0x14	; 20
    fbf4:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    fbf8:	67 e8       	ldi	r22, 0x87	; 135
    fbfa:	76 e2       	ldi	r23, 0x26	; 38
    fbfc:	86 ec       	ldi	r24, 0xC6	; 198
    fbfe:	94 e1       	ldi	r25, 0x14	; 20
    fc00:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    fc04:	4a e0       	ldi	r20, 0x0A	; 10
    fc06:	50 e0       	ldi	r21, 0x00	; 0
    fc08:	f8 01       	movw	r30, r16
    fc0a:	ec 0d       	add	r30, r12
    fc0c:	fd 1d       	adc	r31, r13
    fc0e:	65 81       	ldd	r22, Z+5	; 0x05
    fc10:	86 ec       	ldi	r24, 0xC6	; 198
    fc12:	94 e1       	ldi	r25, 0x14	; 20
    fc14:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    fc18:	86 ec       	ldi	r24, 0xC6	; 198
    fc1a:	94 e1       	ldi	r25, 0x14	; 20
    fc1c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    fc20:	dc cf       	rjmp	.-72     	; 0xfbda <_Z11Read_EEPROMv+0x3e2>
    fc22:	05 5e       	subi	r16, 0xE5	; 229
    fc24:	1f 4f       	sbci	r17, 0xFF	; 255
    fc26:	73 94       	inc	r7
    fc28:	9e e1       	ldi	r25, 0x1E	; 30
    fc2a:	e9 0e       	add	r14, r25
    fc2c:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    fc2e:	e5 e9       	ldi	r30, 0x95	; 149
    fc30:	ee 16       	cp	r14, r30
    fc32:	eb e0       	ldi	r30, 0x0B	; 11
    fc34:	fe 06       	cpc	r15, r30
    fc36:	09 f0       	breq	.+2      	; 0xfc3a <_Z11Read_EEPROMv+0x442>
    fc38:	5a cf       	rjmp	.-332    	; 0xfaee <_Z11Read_EEPROMv+0x2f6>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    fc3a:	69 e7       	ldi	r22, 0x79	; 121
    fc3c:	74 e1       	ldi	r23, 0x14	; 20
    fc3e:	81 ea       	ldi	r24, 0xA1	; 161
    fc40:	9c e0       	ldi	r25, 0x0C	; 12
    fc42:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    fc46:	6b e7       	ldi	r22, 0x7B	; 123
    fc48:	74 e1       	ldi	r23, 0x14	; 20
    fc4a:	88 ea       	ldi	r24, 0xA8	; 168
    fc4c:	9c e0       	ldi	r25, 0x0C	; 12
    fc4e:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    fc52:	6c e7       	ldi	r22, 0x7C	; 124
    fc54:	74 e1       	ldi	r23, 0x14	; 20
    fc56:	8d ea       	ldi	r24, 0xAD	; 173
    fc58:	9c e0       	ldi	r25, 0x0C	; 12
    fc5a:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fc5e:	83 e9       	ldi	r24, 0x93	; 147
    fc60:	e8 2e       	mov	r14, r24
    fc62:	84 e1       	ldi	r24, 0x14	; 20
    fc64:	f8 2e       	mov	r15, r24
    fc66:	08 e8       	ldi	r16, 0x88	; 136
    fc68:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fc6a:	1c ab       	std	Y+52, r17	; 0x34
    fc6c:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fc6e:	ce 01       	movw	r24, r28
    fc70:	c3 96       	adiw	r24, 0x33	; 51
    fc72:	0e 94 90 73 	call	0xe720	; 0xe720 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fc76:	f7 01       	movw	r30, r14
    fc78:	81 93       	st	Z+, r24
    fc7a:	7f 01       	movw	r14, r30
    fc7c:	0f 5f       	subi	r16, 0xFF	; 255
    fc7e:	1f 4f       	sbci	r17, 0xFF	; 255
    fc80:	0d 38       	cpi	r16, 0x8D	; 141
    fc82:	fe e0       	ldi	r31, 0x0E	; 14
    fc84:	1f 07       	cpc	r17, r31
    fc86:	89 f7       	brne	.-30     	; 0xfc6a <_Z11Read_EEPROMv+0x472>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    fc88:	68 e9       	ldi	r22, 0x98	; 152
    fc8a:	74 e1       	ldi	r23, 0x14	; 20
    fc8c:	8b ea       	ldi	r24, 0xAB	; 171
    fc8e:	9e e0       	ldi	r25, 0x0E	; 14
    fc90:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    fc94:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    fc98:	81 50       	subi	r24, 0x01	; 1
    fc9a:	84 30       	cpi	r24, 0x04	; 4
    fc9c:	48 f0       	brcs	.+18     	; 0xfcb0 <_Z11Read_EEPROMv+0x4b8>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    fc9e:	81 e0       	ldi	r24, 0x01	; 1
    fca0:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    fca4:	68 e9       	ldi	r22, 0x98	; 152
    fca6:	74 e1       	ldi	r23, 0x14	; 20
    fca8:	8b ea       	ldi	r24, 0xAB	; 171
    fcaa:	9e e0       	ldi	r25, 0x0E	; 14
    fcac:	0e 94 13 74 	call	0xe826	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    fcb0:	6b e9       	ldi	r22, 0x9B	; 155
    fcb2:	74 e1       	ldi	r23, 0x14	; 20
    fcb4:	8d ea       	ldi	r24, 0xAD	; 173
    fcb6:	9e e0       	ldi	r25, 0x0E	; 14
    fcb8:	0e 94 ad 73 	call	0xe75a	; 0xe75a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
    fcbc:	64 ef       	ldi	r22, 0xF4	; 244
    fcbe:	7b e0       	ldi	r23, 0x0B	; 11
    fcc0:	8e ea       	ldi	r24, 0xAE	; 174
    fcc2:	9c e0       	ldi	r25, 0x0C	; 12
    fcc4:	0e 94 e0 73 	call	0xe7c0	; 0xe7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    fcc8:	6f ef       	ldi	r22, 0xFF	; 255
    fcca:	7b e0       	ldi	r23, 0x0B	; 11
    fccc:	82 ec       	ldi	r24, 0xC2	; 194
    fcce:	9c e0       	ldi	r25, 0x0C	; 12
    fcd0:	0e 94 e0 73 	call	0xe7c0	; 0xe7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    fcd4:	6a e0       	ldi	r22, 0x0A	; 10
    fcd6:	7c e0       	ldi	r23, 0x0C	; 12
    fcd8:	86 ed       	ldi	r24, 0xD6	; 214
    fcda:	9c e0       	ldi	r25, 0x0C	; 12
    fcdc:	0e 94 e0 73 	call	0xe7c0	; 0xe7c0 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    fce0:	6b ee       	ldi	r22, 0xEB	; 235
    fce2:	7c e0       	ldi	r23, 0x0C	; 12
    fce4:	87 eb       	ldi	r24, 0xB7	; 183
    fce6:	9e e0       	ldi	r25, 0x0E	; 14
    fce8:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
}
    fcec:	e4 96       	adiw	r28, 0x34	; 52
    fcee:	0f b6       	in	r0, 0x3f	; 63
    fcf0:	f8 94       	cli
    fcf2:	de bf       	out	0x3e, r29	; 62
    fcf4:	0f be       	out	0x3f, r0	; 63
    fcf6:	cd bf       	out	0x3d, r28	; 61
    fcf8:	df 91       	pop	r29
    fcfa:	cf 91       	pop	r28
    fcfc:	1f 91       	pop	r17
    fcfe:	0f 91       	pop	r16
    fd00:	ff 90       	pop	r15
    fd02:	ef 90       	pop	r14
    fd04:	df 90       	pop	r13
    fd06:	cf 90       	pop	r12
    fd08:	bf 90       	pop	r11
    fd0a:	af 90       	pop	r10
    fd0c:	9f 90       	pop	r9
    fd0e:	8f 90       	pop	r8
    fd10:	7f 90       	pop	r7
    fd12:	6f 90       	pop	r6
    fd14:	5f 90       	pop	r5
    fd16:	4f 90       	pop	r4
    fd18:	08 95       	ret

0000fd1a <_Z20Param_Initializationv>:
volatile unsigned int Interrupt_Time_Out;
volatile unsigned char Reading_Time;


void Param_Initialization(void)
{
    fd1a:	cf 92       	push	r12
    fd1c:	df 92       	push	r13
    fd1e:	ef 92       	push	r14
    fd20:	ff 92       	push	r15
    fd22:	0f 93       	push	r16
    fd24:	1f 93       	push	r17
    fd26:	cf 93       	push	r28
    fd28:	df 93       	push	r29
    fd2a:	00 d0       	rcall	.+0      	; 0xfd2c <_Z20Param_Initializationv+0x12>
    fd2c:	cd b7       	in	r28, 0x3d	; 61
    fd2e:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    fd30:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    fd32:	62 e8       	ldi	r22, 0x82	; 130
    fd34:	74 e0       	ldi	r23, 0x04	; 4
    fd36:	8e ec       	ldi	r24, 0xCE	; 206
    fd38:	93 e1       	ldi	r25, 0x13	; 19
    fd3a:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    fd3e:	8e ec       	ldi	r24, 0xCE	; 206
    fd40:	e8 2e       	mov	r14, r24
    fd42:	83 e1       	ldi	r24, 0x13	; 19
    fd44:	f8 2e       	mov	r15, r24
    fd46:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fd48:	00 e0       	ldi	r16, 0x00	; 0
    fd4a:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fd4c:	f6 01       	movw	r30, r12
    fd4e:	61 91       	ld	r22, Z+
    fd50:	6f 01       	movw	r12, r30
    fd52:	1a 83       	std	Y+2, r17	; 0x02
    fd54:	09 83       	std	Y+1, r16	; 0x01
    fd56:	ce 01       	movw	r24, r28
    fd58:	01 96       	adiw	r24, 0x01	; 1
    fd5a:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    fd5e:	0f 5f       	subi	r16, 0xFF	; 255
    fd60:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fd62:	07 30       	cpi	r16, 0x07	; 7
    fd64:	11 05       	cpc	r17, r1
    fd66:	91 f7       	brne	.-28     	; 0xfd4c <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    fd68:	86 ec       	ldi	r24, 0xC6	; 198
    fd6a:	94 e1       	ldi	r25, 0x14	; 20
    fd6c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    fd70:	86 ec       	ldi	r24, 0xC6	; 198
    fd72:	94 e1       	ldi	r25, 0x14	; 20
    fd74:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    fd78:	f7 01       	movw	r30, r14
    fd7a:	61 91       	ld	r22, Z+
    fd7c:	7f 01       	movw	r14, r30
    fd7e:	86 ec       	ldi	r24, 0xC6	; 198
    fd80:	94 e1       	ldi	r25, 0x14	; 20
    fd82:	0e 94 ac d3 	call	0x1a758	; 0x1a758 <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    fd86:	f4 ed       	ldi	r31, 0xD4	; 212
    fd88:	ef 16       	cp	r14, r31
    fd8a:	f3 e1       	ldi	r31, 0x13	; 19
    fd8c:	ff 06       	cpc	r15, r31
    fd8e:	a1 f7       	brne	.-24     	; 0xfd78 <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    fd90:	86 ec       	ldi	r24, 0xC6	; 198
    fd92:	94 e1       	ldi	r25, 0x14	; 20
    fd94:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    fd98:	26 d1       	rcall	.+588    	; 0xffe6 <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    fd9a:	26 d1       	rcall	.+588    	; 0xffe8 <_Z21Store_MQTT_Sub_Topicsv>
    fd9c:	0e 94 4f 60 	call	0xc09e	; 0xc09e <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    fda0:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    fda2:	6d 5f       	subi	r22, 0xFD	; 253
    fda4:	7f 4f       	sbci	r23, 0xFF	; 255
    fda6:	84 ef       	ldi	r24, 0xF4	; 244
    fda8:	94 e0       	ldi	r25, 0x04	; 4
    fdaa:	0e 94 95 73 	call	0xe72a	; 0xe72a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fdae:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    fdb0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fdb4:	91 30       	cpi	r25, 0x01	; 1
    fdb6:	79 f4       	brne	.+30     	; 0xfdd6 <_Z20Param_Initializationv+0xbc>
    fdb8:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    fdbc:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fdbe:	e1 f4       	brne	.+56     	; 0xfdf8 <_Z20Param_Initializationv+0xde>
    fdc0:	65 e8       	ldi	r22, 0x85	; 133
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    fdc2:	77 e2       	ldi	r23, 0x27	; 39
    fdc4:	86 ec       	ldi	r24, 0xC6	; 198
    fdc6:	94 e1       	ldi	r25, 0x14	; 20
    fdc8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    fdcc:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fdce:	94 e1       	ldi	r25, 0x14	; 20
    fdd0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    fdd4:	11 c0       	rjmp	.+34     	; 0xfdf8 <_Z20Param_Initializationv+0xde>
    fdd6:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    fdd8:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
    fddc:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fdde:	51 f4       	brne	.+20     	; 0xfdf4 <_Z20Param_Initializationv+0xda>
    fde0:	64 e6       	ldi	r22, 0x64	; 100
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    fde2:	77 e2       	ldi	r23, 0x27	; 39
    fde4:	86 ec       	ldi	r24, 0xC6	; 198
    fde6:	94 e1       	ldi	r25, 0x14	; 20
    fde8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    fdec:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fdee:	94 e1       	ldi	r25, 0x14	; 20
    fdf0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    fdf4:	0e 94 a8 87 	call	0x10f50	; 0x10f50 <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    fdf8:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    fdfa:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
	
	
	Local_Time_Setting();
    fdfe:	03 dc       	rcall	.-2042   	; 0xf606 <_Z18Local_Time_Settingv>
    fe00:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fe04:	81 30       	cpi	r24, 0x01	; 1
    fe06:	e1 f0       	breq	.+56     	; 0xfe40 <_Z20Param_Initializationv+0x126>
    fe08:	90 91 6b 14 	lds	r25, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    fe0c:	91 30       	cpi	r25, 0x01	; 1
    fe0e:	c1 f4       	brne	.+48     	; 0xfe40 <_Z20Param_Initializationv+0x126>
    fe10:	0e 94 08 66 	call	0xcc10	; 0xcc10 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fe14:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    fe16:	40 e0       	ldi	r20, 0x00	; 0
    fe18:	6a e0       	ldi	r22, 0x0A	; 10
    fe1a:	87 e8       	ldi	r24, 0x87	; 135
    fe1c:	95 e0       	ldi	r25, 0x05	; 5
    fe1e:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lcd_Print_BuffPchhh>
    fe22:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe26:	81 30       	cpi	r24, 0x01	; 1
    fe28:	51 f4       	brne	.+20     	; 0xfe3e <_Z20Param_Initializationv+0x124>
    fe2a:	6d e4       	ldi	r22, 0x4D	; 77
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    fe2c:	77 e2       	ldi	r23, 0x27	; 39
    fe2e:	86 ec       	ldi	r24, 0xC6	; 198
    fe30:	94 e1       	ldi	r25, 0x14	; 20
    fe32:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    fe36:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fe38:	94 e1       	ldi	r25, 0x14	; 20
    fe3a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    fe3e:	ff cf       	rjmp	.-2      	; 0xfe3e <_Z20Param_Initializationv+0x124>
    fe40:	90 91 1d 14 	lds	r25, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    fe44:	90 fd       	sbrc	r25, 0
    fe46:	09 c0       	rjmp	.+18     	; 0xfe5a <_Z20Param_Initializationv+0x140>
    fe48:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    fe4c:	80 62       	ori	r24, 0x20	; 32
    fe4e:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		Display_Update_1();
    fe52:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    fe56:	86 d3       	rcall	.+1804   	; 0x10564 <_Z11Init_Brokerv>
    fe58:	28 c0       	rjmp	.+80     	; 0xfeaa <_Z20Param_Initializationv+0x190>
    fe5a:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fe5c:	c1 f0       	breq	.+48     	; 0xfe8e <_Z20Param_Initializationv+0x174>
    fe5e:	0e 94 08 66 	call	0xcc10	; 0xcc10 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fe62:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    fe64:	40 e0       	ldi	r20, 0x00	; 0
    fe66:	6a e0       	ldi	r22, 0x0A	; 10
    fe68:	82 e9       	ldi	r24, 0x92	; 146
    fe6a:	95 e0       	ldi	r25, 0x05	; 5
    fe6c:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lcd_Print_BuffPchhh>
    fe70:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe74:	81 30       	cpi	r24, 0x01	; 1
    fe76:	51 f4       	brne	.+20     	; 0xfe8c <_Z20Param_Initializationv+0x172>
    fe78:	67 ef       	ldi	r22, 0xF7	; 247
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    fe7a:	76 e2       	ldi	r23, 0x26	; 38
    fe7c:	86 ec       	ldi	r24, 0xC6	; 198
    fe7e:	94 e1       	ldi	r25, 0x14	; 20
    fe80:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    fe84:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fe86:	94 e1       	ldi	r25, 0x14	; 20
    fe88:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
    fe8c:	ff cf       	rjmp	.-2      	; 0xfe8c <_Z20Param_Initializationv+0x172>
    fe8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe92:	81 30       	cpi	r24, 0x01	; 1
    fe94:	51 f4       	brne	.+20     	; 0xfeaa <_Z20Param_Initializationv+0x190>
    fe96:	6c ed       	ldi	r22, 0xDC	; 220
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    fe98:	76 e2       	ldi	r23, 0x26	; 38
    fe9a:	86 ec       	ldi	r24, 0xC6	; 198
    fe9c:	94 e1       	ldi	r25, 0x14	; 20
    fe9e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
    fea2:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fea4:	94 e1       	ldi	r25, 0x14	; 20
    fea6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    feaa:	a6 dc       	rcall	.-1716   	; 0xf7f8 <_Z11Read_EEPROMv>
    feac:	05 e1       	ldi	r16, 0x15	; 21
    feae:	1c e0       	ldi	r17, 0x0C	; 12
    feb0:	e1 2c       	mov	r14, r1
    feb2:	f1 2c       	mov	r15, r1
    feb4:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    feb6:	d3 94       	inc	r13
    feb8:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    feba:	6f 5f       	subi	r22, 0xFF	; 255
    febc:	7f 4f       	sbci	r23, 0xFF	; 255
    febe:	c7 01       	movw	r24, r14
    fec0:	8e 5d       	subi	r24, 0xDE	; 222
    fec2:	9b 4e       	sbci	r25, 0xEB	; 235
    fec4:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
    fec8:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    feca:	80 81       	ld	r24, Z
    fecc:	81 11       	cpse	r24, r1
    fece:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fed0:	f7 e0       	ldi	r31, 0x07	; 7
    fed2:	ef 0e       	add	r14, r31
    fed4:	f1 1c       	adc	r15, r1
    fed6:	03 5f       	subi	r16, 0xF3	; 243
    fed8:	1f 4f       	sbci	r17, 0xFF	; 255
    feda:	8a e2       	ldi	r24, 0x2A	; 42
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    fedc:	e8 16       	cp	r14, r24
    fede:	f1 04       	cpc	r15, r1
    fee0:	59 f7       	brne	.-42     	; 0xfeb8 <_Z20Param_Initializationv+0x19e>
    fee2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    fee6:	81 50       	subi	r24, 0x01	; 1
    fee8:	85 30       	cpi	r24, 0x05	; 5
    feea:	80 f0       	brcs	.+32     	; 0xff0c <_Z20Param_Initializationv+0x1f2>
    feec:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    fef0:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
    fef4:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    fef6:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
    fefa:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fefc:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
    ff00:	65 ed       	ldi	r22, 0xD5	; 213
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    ff02:	73 e1       	ldi	r23, 0x13	; 19
    ff04:	88 ed       	ldi	r24, 0xD8	; 216
    ff06:	94 e0       	ldi	r25, 0x04	; 4
    ff08:	0e 94 13 74 	call	0xe826	; 0xe826 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    ff0c:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    ff0e:	30 e0       	ldi	r19, 0x00	; 0
    ff10:	40 ec       	ldi	r20, 0xC0	; 192
    ff12:	50 e4       	ldi	r21, 0x40	; 64
    ff14:	65 e4       	ldi	r22, 0x45	; 69
    ff16:	70 e0       	ldi	r23, 0x00	; 0
    ff18:	82 ef       	ldi	r24, 0xF2	; 242
    ff1a:	9c e0       	ldi	r25, 0x0C	; 12
    ff1c:	0e 94 77 d9 	call	0x1b2ee	; 0x1b2ee <_ZN13EnergyMonitor7currentEjd>
    ff20:	0f 90       	pop	r0
	
}
    ff22:	0f 90       	pop	r0
    ff24:	0f 90       	pop	r0
    ff26:	df 91       	pop	r29
    ff28:	cf 91       	pop	r28
    ff2a:	1f 91       	pop	r17
    ff2c:	0f 91       	pop	r16
    ff2e:	ff 90       	pop	r15
    ff30:	ef 90       	pop	r14
    ff32:	df 90       	pop	r13
    ff34:	cf 90       	pop	r12
    ff36:	08 95       	ret

0000ff38 <_Z17Clear_Serial_Datav>:
    ff38:	cf 92       	push	r12
	}	
}


void Clear_Serial_Data(void)
{
    ff3a:	df 92       	push	r13
    ff3c:	ef 92       	push	r14
    ff3e:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    ff40:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ff44:	6b 01       	movw	r12, r22
    ff46:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    ff48:	83 e8       	ldi	r24, 0x83	; 131
    ff4a:	96 e1       	ldi	r25, 0x16	; 22
    ff4c:	0e 94 3d d3 	call	0x1a67a	; 0x1a67a <_ZN14HardwareSerial9availableEv>
    ff50:	18 16       	cp	r1, r24
    ff52:	19 06       	cpc	r1, r25
    ff54:	94 f4       	brge	.+36     	; 0xff7a <_Z17Clear_Serial_Datav+0x42>
    ff56:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
    ff5a:	dc 01       	movw	r26, r24
    ff5c:	cb 01       	movw	r24, r22
    ff5e:	8c 19       	sub	r24, r12
    ff60:	9d 09       	sbc	r25, r13
    ff62:	ae 09       	sbc	r26, r14
    ff64:	bf 09       	sbc	r27, r15
    ff66:	84 36       	cpi	r24, 0x64	; 100
    ff68:	91 05       	cpc	r25, r1
    ff6a:	a1 05       	cpc	r26, r1
    ff6c:	b1 05       	cpc	r27, r1
    ff6e:	28 f4       	brcc	.+10     	; 0xff7a <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); 
    ff70:	83 e8       	ldi	r24, 0x83	; 131
    ff72:	96 e1       	ldi	r25, 0x16	; 22
    ff74:	0e 94 5e d3 	call	0x1a6bc	; 0x1a6bc <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    ff78:	e7 cf       	rjmp	.-50     	; 0xff48 <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); 
	}
}
    ff7a:	ff 90       	pop	r15
    ff7c:	ef 90       	pop	r14
    ff7e:	df 90       	pop	r13
    ff80:	cf 90       	pop	r12
    ff82:	08 95       	ret

0000ff84 <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    ff84:	80 e0       	ldi	r24, 0x00	; 0
    ff86:	08 95       	ret

0000ff88 <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    ff88:	df 92       	push	r13
    ff8a:	ef 92       	push	r14
    ff8c:	ff 92       	push	r15
    ff8e:	0f 93       	push	r16
    ff90:	1f 93       	push	r17
    ff92:	cf 93       	push	r28
    ff94:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    ff96:	98 e2       	ldi	r25, 0x28	; 40
    ff98:	89 9f       	mul	r24, r25
    ff9a:	90 01       	movw	r18, r0
    ff9c:	11 24       	eor	r1, r1
    ff9e:	89 01       	movw	r16, r18
    ffa0:	08 5f       	subi	r16, 0xF8	; 248
    ffa2:	1f 4f       	sbci	r17, 0xFF	; 255
    ffa4:	96 e0       	ldi	r25, 0x06	; 6
    ffa6:	89 9f       	mul	r24, r25
    ffa8:	e0 01       	movw	r28, r0
    ffaa:	11 24       	eor	r1, r1
    ffac:	c2 5b       	subi	r28, 0xB2	; 178
    ffae:	d2 4f       	sbci	r29, 0xF2	; 242
    ffb0:	79 01       	movw	r14, r18
    ffb2:	8e e0       	ldi	r24, 0x0E	; 14
    ffb4:	e8 0e       	add	r14, r24
    ffb6:	f1 1c       	adc	r15, r1
    ffb8:	d9 90       	ld	r13, Y+

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    ffba:	c8 01       	movw	r24, r16
    ffbc:	0e 94 14 f1 	call	0x1e228	; 0x1e228 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    ffc0:	d8 16       	cp	r13, r24
    ffc2:	21 f0       	breq	.+8      	; 0xffcc <_Z16Lira_Data_EEPROMh+0x44>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    ffc4:	6d 2d       	mov	r22, r13
    ffc6:	c8 01       	movw	r24, r16
    ffc8:	0e 94 1c f1 	call	0x1e238	; 0x1e238 <eeprom_write_byte>
    ffcc:	0f 5f       	subi	r16, 0xFF	; 255
    ffce:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    ffd0:	0e 15       	cp	r16, r14
    ffd2:	1f 05       	cpc	r17, r15
    ffd4:	89 f7       	brne	.-30     	; 0xffb8 <_Z16Lira_Data_EEPROMh+0x30>
	return;
}
    ffd6:	df 91       	pop	r29
    ffd8:	cf 91       	pop	r28
    ffda:	1f 91       	pop	r17
    ffdc:	0f 91       	pop	r16
    ffde:	ff 90       	pop	r15
    ffe0:	ef 90       	pop	r14
    ffe2:	df 90       	pop	r13
    ffe4:	08 95       	ret

0000ffe6 <_Z21Store_MQTT_Pub_Topicsv>:
    ffe6:	08 95       	ret

0000ffe8 <_Z21Store_MQTT_Sub_Topicsv>:
		
}


void Store_MQTT_Sub_Topics(void)
{	
    ffe8:	08 95       	ret

0000ffea <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    ffea:	ff 92       	push	r15
    ffec:	0f 93       	push	r16
    ffee:	1f 93       	push	r17
    fff0:	cf 93       	push	r28
    fff2:	df 93       	push	r29
    fff4:	cd b7       	in	r28, 0x3d	; 61
    fff6:	de b7       	in	r29, 0x3e	; 62
    fff8:	a8 97       	sbiw	r28, 0x28	; 40
    fffa:	0f b6       	in	r0, 0x3f	; 63
    fffc:	f8 94       	cli
    fffe:	de bf       	out	0x3e, r29	; 62
   10000:	0f be       	out	0x3f, r0	; 63
   10002:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char temp_sub_topic[40];
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10004:	8e 01       	movw	r16, r28
   10006:	0f 5f       	subi	r16, 0xFF	; 255
   10008:	1f 4f       	sbci	r17, 0xFF	; 255
   1000a:	88 e2       	ldi	r24, 0x28	; 40
   1000c:	f8 01       	movw	r30, r16
   1000e:	11 92       	st	Z+, r1
   10010:	8a 95       	dec	r24
   10012:	e9 f7       	brne	.-6      	; 0x1000e <_Z21Subscribe_MQTT_Topicsv+0x24>
	sprintf((char *)temp_sub_topic,"SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);
   10014:	8e ec       	ldi	r24, 0xCE	; 206
   10016:	93 e1       	ldi	r25, 0x13	; 19
   10018:	9f 93       	push	r25
   1001a:	8f 93       	push	r24
   1001c:	8d e9       	ldi	r24, 0x9D	; 157
   1001e:	95 e0       	ldi	r25, 0x05	; 5
   10020:	9f 93       	push	r25
   10022:	8f 93       	push	r24
   10024:	1f 93       	push	r17
   10026:	0f 93       	push	r16
   10028:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1002c:	c8 01       	movw	r24, r16
   1002e:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10032:	0f 90       	pop	r0
   10034:	0f 90       	pop	r0
   10036:	0f 90       	pop	r0
   10038:	0f 90       	pop	r0
   1003a:	0f 90       	pop	r0
   1003c:	0f 90       	pop	r0
   1003e:	81 11       	cpse	r24, r1
   10040:	0f c0       	rjmp	.+30     	; 0x10060 <_Z21Subscribe_MQTT_Topicsv+0x76>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10042:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10046:	81 30       	cpi	r24, 0x01	; 1
   10048:	69 f4       	brne	.+26     	; 0x10064 <_Z21Subscribe_MQTT_Topicsv+0x7a>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
   1004a:	6a ea       	ldi	r22, 0xAA	; 170
   1004c:	77 e2       	ldi	r23, 0x27	; 39
   1004e:	86 ec       	ldi	r24, 0xC6	; 198
   10050:	94 e1       	ldi	r25, 0x14	; 20
   10052:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   10056:	86 ec       	ldi	r24, 0xC6	; 198
   10058:	94 e1       	ldi	r25, 0x14	; 20
   1005a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1005e:	02 c0       	rjmp	.+4      	; 0x10064 <_Z21Subscribe_MQTT_Topicsv+0x7a>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
   10060:	f1 2c       	mov	r15, r1
   10062:	02 c0       	rjmp	.+4      	; 0x10068 <_Z21Subscribe_MQTT_Topicsv+0x7e>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
   10064:	ff 24       	eor	r15, r15
   10066:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10068:	88 e2       	ldi	r24, 0x28	; 40
   1006a:	f8 01       	movw	r30, r16
   1006c:	11 92       	st	Z+, r1
   1006e:	8a 95       	dec	r24
   10070:	e9 f7       	brne	.-6      	; 0x1006c <_Z21Subscribe_MQTT_Topicsv+0x82>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);
   10072:	8e ec       	ldi	r24, 0xCE	; 206
   10074:	93 e1       	ldi	r25, 0x13	; 19
   10076:	9f 93       	push	r25
   10078:	8f 93       	push	r24
   1007a:	83 eb       	ldi	r24, 0xB3	; 179
   1007c:	95 e0       	ldi	r25, 0x05	; 5
   1007e:	9f 93       	push	r25
   10080:	8f 93       	push	r24
   10082:	1f 93       	push	r17
   10084:	0f 93       	push	r16
   10086:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	//SICCA/CONFIG/SETUP/PLOT/
		
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1008a:	c8 01       	movw	r24, r16
   1008c:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10090:	0f 90       	pop	r0
   10092:	0f 90       	pop	r0
   10094:	0f 90       	pop	r0
   10096:	0f 90       	pop	r0
   10098:	0f 90       	pop	r0
   1009a:	0f 90       	pop	r0
   1009c:	81 11       	cpse	r24, r1
   1009e:	02 c0       	rjmp	.+4      	; 0x100a4 <_Z21Subscribe_MQTT_Topicsv+0xba>
	{
		temp_flag = _kSET;
   100a0:	ff 24       	eor	r15, r15
   100a2:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   100a4:	88 e2       	ldi	r24, 0x28	; 40
   100a6:	f8 01       	movw	r30, r16
   100a8:	11 92       	st	Z+, r1
   100aa:	8a 95       	dec	r24
   100ac:	e9 f7       	brne	.-6      	; 0x100a8 <_Z21Subscribe_MQTT_Topicsv+0xbe>
	sprintf((char *)temp_sub_topic,"SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
   100ae:	8e ec       	ldi	r24, 0xCE	; 206
   100b0:	93 e1       	ldi	r25, 0x13	; 19
   100b2:	9f 93       	push	r25
   100b4:	8f 93       	push	r24
   100b6:	8e ec       	ldi	r24, 0xCE	; 206
   100b8:	95 e0       	ldi	r25, 0x05	; 5
   100ba:	9f 93       	push	r25
   100bc:	8f 93       	push	r24
   100be:	1f 93       	push	r17
   100c0:	0f 93       	push	r16
   100c2:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   100c6:	c8 01       	movw	r24, r16
   100c8:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   100cc:	0f 90       	pop	r0
   100ce:	0f 90       	pop	r0
   100d0:	0f 90       	pop	r0
   100d2:	0f 90       	pop	r0
   100d4:	0f 90       	pop	r0
   100d6:	0f 90       	pop	r0
   100d8:	81 11       	cpse	r24, r1
   100da:	02 c0       	rjmp	.+4      	; 0x100e0 <_Z21Subscribe_MQTT_Topicsv+0xf6>
	{
		temp_flag = _kSET;
   100dc:	ff 24       	eor	r15, r15
   100de:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   100e0:	88 e2       	ldi	r24, 0x28	; 40
   100e2:	f8 01       	movw	r30, r16
   100e4:	11 92       	st	Z+, r1
   100e6:	8a 95       	dec	r24
   100e8:	e9 f7       	brne	.-6      	; 0x100e4 <_Z21Subscribe_MQTT_Topicsv+0xfa>
	sprintf((char *)temp_sub_topic,"SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);
   100ea:	8e ec       	ldi	r24, 0xCE	; 206
   100ec:	93 e1       	ldi	r25, 0x13	; 19
   100ee:	9f 93       	push	r25
   100f0:	8f 93       	push	r24
   100f2:	86 ee       	ldi	r24, 0xE6	; 230
   100f4:	95 e0       	ldi	r25, 0x05	; 5
   100f6:	9f 93       	push	r25
   100f8:	8f 93       	push	r24
   100fa:	1f 93       	push	r17
   100fc:	0f 93       	push	r16
   100fe:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10102:	c8 01       	movw	r24, r16
   10104:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10108:	0f 90       	pop	r0
   1010a:	0f 90       	pop	r0
   1010c:	0f 90       	pop	r0
   1010e:	0f 90       	pop	r0
   10110:	0f 90       	pop	r0
   10112:	0f 90       	pop	r0
   10114:	81 11       	cpse	r24, r1
   10116:	02 c0       	rjmp	.+4      	; 0x1011c <_Z21Subscribe_MQTT_Topicsv+0x132>
	{
		temp_flag = _kSET;
   10118:	ff 24       	eor	r15, r15
   1011a:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   1011c:	88 e2       	ldi	r24, 0x28	; 40
   1011e:	f8 01       	movw	r30, r16
   10120:	11 92       	st	Z+, r1
   10122:	8a 95       	dec	r24
   10124:	e9 f7       	brne	.-6      	; 0x10120 <_Z21Subscribe_MQTT_Topicsv+0x136>
	sprintf((char *)temp_sub_topic,"SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);
   10126:	8e ec       	ldi	r24, 0xCE	; 206
   10128:	93 e1       	ldi	r25, 0x13	; 19
   1012a:	9f 93       	push	r25
   1012c:	8f 93       	push	r24
   1012e:	85 ef       	ldi	r24, 0xF5	; 245
   10130:	95 e0       	ldi	r25, 0x05	; 5
   10132:	9f 93       	push	r25
   10134:	8f 93       	push	r24
   10136:	1f 93       	push	r17
   10138:	0f 93       	push	r16
   1013a:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1013e:	c8 01       	movw	r24, r16
   10140:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10144:	0f 90       	pop	r0
   10146:	0f 90       	pop	r0
   10148:	0f 90       	pop	r0
   1014a:	0f 90       	pop	r0
   1014c:	0f 90       	pop	r0
   1014e:	0f 90       	pop	r0
   10150:	81 11       	cpse	r24, r1
   10152:	02 c0       	rjmp	.+4      	; 0x10158 <_Z21Subscribe_MQTT_Topicsv+0x16e>
	{
		temp_flag = _kSET;
   10154:	ff 24       	eor	r15, r15
   10156:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10158:	88 e2       	ldi	r24, 0x28	; 40
   1015a:	f8 01       	movw	r30, r16
   1015c:	11 92       	st	Z+, r1
   1015e:	8a 95       	dec	r24
   10160:	e9 f7       	brne	.-6      	; 0x1015c <_Z21Subscribe_MQTT_Topicsv+0x172>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);
   10162:	8e ec       	ldi	r24, 0xCE	; 206
   10164:	93 e1       	ldi	r25, 0x13	; 19
   10166:	9f 93       	push	r25
   10168:	8f 93       	push	r24
   1016a:	89 e0       	ldi	r24, 0x09	; 9
   1016c:	96 e0       	ldi	r25, 0x06	; 6
   1016e:	9f 93       	push	r25
   10170:	8f 93       	push	r24
   10172:	1f 93       	push	r17
   10174:	0f 93       	push	r16
   10176:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1017a:	c8 01       	movw	r24, r16
   1017c:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10180:	0f 90       	pop	r0
   10182:	0f 90       	pop	r0
   10184:	0f 90       	pop	r0
   10186:	0f 90       	pop	r0
   10188:	0f 90       	pop	r0
   1018a:	0f 90       	pop	r0
   1018c:	81 11       	cpse	r24, r1
   1018e:	02 c0       	rjmp	.+4      	; 0x10194 <_Z21Subscribe_MQTT_Topicsv+0x1aa>
	{
		temp_flag = _kSET;
   10190:	ff 24       	eor	r15, r15
   10192:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}



	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10194:	88 e2       	ldi	r24, 0x28	; 40
   10196:	f8 01       	movw	r30, r16
   10198:	11 92       	st	Z+, r1
   1019a:	8a 95       	dec	r24
   1019c:	e9 f7       	brne	.-6      	; 0x10198 <_Z21Subscribe_MQTT_Topicsv+0x1ae>
	sprintf((char *)temp_sub_topic,"SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);
   1019e:	8e ec       	ldi	r24, 0xCE	; 206
   101a0:	93 e1       	ldi	r25, 0x13	; 19
   101a2:	9f 93       	push	r25
   101a4:	8f 93       	push	r24
   101a6:	8f e1       	ldi	r24, 0x1F	; 31
   101a8:	96 e0       	ldi	r25, 0x06	; 6
   101aa:	9f 93       	push	r25
   101ac:	8f 93       	push	r24
   101ae:	1f 93       	push	r17
   101b0:	0f 93       	push	r16
   101b2:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   101b6:	c8 01       	movw	r24, r16
   101b8:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   101bc:	0f 90       	pop	r0
   101be:	0f 90       	pop	r0
   101c0:	0f 90       	pop	r0
   101c2:	0f 90       	pop	r0
   101c4:	0f 90       	pop	r0
   101c6:	0f 90       	pop	r0
   101c8:	81 11       	cpse	r24, r1
   101ca:	02 c0       	rjmp	.+4      	; 0x101d0 <_Z21Subscribe_MQTT_Topicsv+0x1e6>
	{
		temp_flag = _kSET;
   101cc:	ff 24       	eor	r15, r15
   101ce:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}

	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   101d0:	88 e2       	ldi	r24, 0x28	; 40
   101d2:	f8 01       	movw	r30, r16
   101d4:	11 92       	st	Z+, r1
   101d6:	8a 95       	dec	r24
   101d8:	e9 f7       	brne	.-6      	; 0x101d4 <_Z21Subscribe_MQTT_Topicsv+0x1ea>
	sprintf((char *)temp_sub_topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   101da:	8e ec       	ldi	r24, 0xCE	; 206
   101dc:	93 e1       	ldi	r25, 0x13	; 19
   101de:	9f 93       	push	r25
   101e0:	8f 93       	push	r24
   101e2:	82 e3       	ldi	r24, 0x32	; 50
   101e4:	96 e0       	ldi	r25, 0x06	; 6
   101e6:	9f 93       	push	r25
   101e8:	8f 93       	push	r24
   101ea:	1f 93       	push	r17
   101ec:	0f 93       	push	r16
   101ee:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   101f2:	c8 01       	movw	r24, r16
   101f4:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   101f8:	0f 90       	pop	r0
   101fa:	0f 90       	pop	r0
   101fc:	0f 90       	pop	r0
   101fe:	0f 90       	pop	r0
   10200:	0f 90       	pop	r0
   10202:	0f 90       	pop	r0
   10204:	81 11       	cpse	r24, r1
   10206:	02 c0       	rjmp	.+4      	; 0x1020c <_Z21Subscribe_MQTT_Topicsv+0x222>
	{
		temp_flag = _kSET;
   10208:	ff 24       	eor	r15, r15
   1020a:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   1020c:	88 e2       	ldi	r24, 0x28	; 40
   1020e:	f8 01       	movw	r30, r16
   10210:	11 92       	st	Z+, r1
   10212:	8a 95       	dec	r24
   10214:	e9 f7       	brne	.-6      	; 0x10210 <_Z21Subscribe_MQTT_Topicsv+0x226>
	sprintf((char *)temp_sub_topic,"SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
   10216:	8e ec       	ldi	r24, 0xCE	; 206
   10218:	93 e1       	ldi	r25, 0x13	; 19
   1021a:	9f 93       	push	r25
   1021c:	8f 93       	push	r24
   1021e:	84 e4       	ldi	r24, 0x44	; 68
   10220:	96 e0       	ldi	r25, 0x06	; 6
   10222:	9f 93       	push	r25
   10224:	8f 93       	push	r24
   10226:	1f 93       	push	r17
   10228:	0f 93       	push	r16
   1022a:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1022e:	c8 01       	movw	r24, r16
   10230:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10234:	0f 90       	pop	r0
   10236:	0f 90       	pop	r0
   10238:	0f 90       	pop	r0
   1023a:	0f 90       	pop	r0
   1023c:	0f 90       	pop	r0
   1023e:	0f 90       	pop	r0
   10240:	81 11       	cpse	r24, r1
   10242:	02 c0       	rjmp	.+4      	; 0x10248 <_Z21Subscribe_MQTT_Topicsv+0x25e>
	{
		temp_flag = _kSET;
   10244:	ff 24       	eor	r15, r15
   10246:	f3 94       	inc	r15
	}
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10248:	88 e2       	ldi	r24, 0x28	; 40
   1024a:	f8 01       	movw	r30, r16
   1024c:	11 92       	st	Z+, r1
   1024e:	8a 95       	dec	r24
   10250:	e9 f7       	brne	.-6      	; 0x1024c <_Z21Subscribe_MQTT_Topicsv+0x262>
	sprintf((char *)temp_sub_topic,"SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   10252:	8e ec       	ldi	r24, 0xCE	; 206
   10254:	93 e1       	ldi	r25, 0x13	; 19
   10256:	9f 93       	push	r25
   10258:	8f 93       	push	r24
   1025a:	84 e5       	ldi	r24, 0x54	; 84
   1025c:	96 e0       	ldi	r25, 0x06	; 6
   1025e:	9f 93       	push	r25
   10260:	8f 93       	push	r24
   10262:	1f 93       	push	r17
   10264:	0f 93       	push	r16
   10266:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1026a:	c8 01       	movw	r24, r16
   1026c:	0e 94 ab 72 	call	0xe556	; 0xe556 <_Z14MQTT_SUBSCRIBEPc>
   10270:	0f 90       	pop	r0
   10272:	0f 90       	pop	r0
   10274:	0f 90       	pop	r0
   10276:	0f 90       	pop	r0
   10278:	0f 90       	pop	r0
   1027a:	0f 90       	pop	r0
   1027c:	88 23       	and	r24, r24
   1027e:	11 f0       	breq	.+4      	; 0x10284 <_Z21Subscribe_MQTT_Topicsv+0x29a>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
   10280:	ff 20       	and	r15, r15
   10282:	31 f0       	breq	.+12     	; 0x10290 <_Z21Subscribe_MQTT_Topicsv+0x2a6>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
   10284:	82 e0       	ldi	r24, 0x02	; 2
   10286:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   1028a:	ff 24       	eor	r15, r15
   1028c:	f3 94       	inc	r15
   1028e:	03 c0       	rjmp	.+6      	; 0x10296 <_Z21Subscribe_MQTT_Topicsv+0x2ac>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
   10290:	81 e0       	ldi	r24, 0x01	; 1
   10292:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
	}
	
	return !temp_flag;
}
   10296:	81 e0       	ldi	r24, 0x01	; 1
   10298:	8f 25       	eor	r24, r15
   1029a:	a8 96       	adiw	r28, 0x28	; 40
   1029c:	0f b6       	in	r0, 0x3f	; 63
   1029e:	f8 94       	cli
   102a0:	de bf       	out	0x3e, r29	; 62
   102a2:	0f be       	out	0x3f, r0	; 63
   102a4:	cd bf       	out	0x3d, r28	; 61
   102a6:	df 91       	pop	r29
   102a8:	cf 91       	pop	r28
   102aa:	1f 91       	pop	r17
   102ac:	0f 91       	pop	r16
   102ae:	ff 90       	pop	r15
   102b0:	08 95       	ret

000102b2 <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
   102b2:	0f 93       	push	r16
   102b4:	cf 93       	push	r28
	Reset_Buffer();
   102b6:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
   _kSERIAL_AT.println(F("ATE0"));
   102ba:	60 ea       	ldi	r22, 0xA0	; 160
   102bc:	78 e2       	ldi	r23, 0x28	; 40
   102be:	83 e8       	ldi	r24, 0x83	; 131
   102c0:	96 e1       	ldi	r25, 0x16	; 22
   102c2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
   102c6:	02 e0       	ldi	r16, 0x02	; 2
   102c8:	28 eb       	ldi	r18, 0xB8	; 184
   102ca:	3b e0       	ldi	r19, 0x0B	; 11
   102cc:	40 e0       	ldi	r20, 0x00	; 0
   102ce:	50 e0       	ldi	r21, 0x00	; 0
   102d0:	6e e1       	ldi	r22, 0x1E	; 30
   102d2:	73 e0       	ldi	r23, 0x03	; 3
   102d4:	80 e0       	ldi	r24, 0x00	; 0
   102d6:	90 e0       	ldi	r25, 0x00	; 0
   102d8:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
	
	
	if (!Check_Sim(_eDIRESCT_CHECK))
   102dc:	83 e0       	ldi	r24, 0x03	; 3
   102de:	0e 94 72 74 	call	0xe8e4	; 0xe8e4 <_Z9Check_Simc>
   102e2:	c8 2f       	mov	r28, r24
   102e4:	81 11       	cpse	r24, r1
   102e6:	10 c0       	rjmp	.+32     	; 0x10308 <_Z14Ping_to_Serverv+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   102e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   102ec:	81 30       	cpi	r24, 0x01	; 1
   102ee:	09 f0       	breq	.+2      	; 0x102f2 <_Z14Ping_to_Serverv+0x40>
   102f0:	35 c1       	rjmp	.+618    	; 0x1055c <_Z14Ping_to_Serverv+0x2aa>
		{
			_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
   102f2:	6f e8       	ldi	r22, 0x8F	; 143
   102f4:	78 e2       	ldi	r23, 0x28	; 40
   102f6:	86 ec       	ldi	r24, 0xC6	; 198
   102f8:	94 e1       	ldi	r25, 0x14	; 20
   102fa:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   102fe:	86 ec       	ldi	r24, 0xC6	; 198
   10300:	94 e1       	ldi	r25, 0x14	; 20
   10302:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   10306:	2a c1       	rjmp	.+596    	; 0x1055c <_Z14Ping_to_Serverv+0x2aa>
		}
		return 0;
	}
	
	
	Reset_Buffer();
   10308:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
   1030c:	61 e8       	ldi	r22, 0x81	; 129
   1030e:	78 e2       	ldi	r23, 0x28	; 40
   10310:	83 e8       	ldi	r24, 0x83	; 131
   10312:	96 e1       	ldi	r25, 0x16	; 22
   10314:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
   10318:	01 e0       	ldi	r16, 0x01	; 1
   1031a:	28 eb       	ldi	r18, 0xB8	; 184
   1031c:	3b e0       	ldi	r19, 0x0B	; 11
   1031e:	40 e0       	ldi	r20, 0x00	; 0
   10320:	50 e0       	ldi	r21, 0x00	; 0
   10322:	6e e1       	ldi	r22, 0x1E	; 30
   10324:	73 e0       	ldi	r23, 0x03	; 3
   10326:	80 e0       	ldi	r24, 0x00	; 0
   10328:	90 e0       	ldi	r25, 0x00	; 0
   1032a:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
   1032e:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10332:	88 23       	and	r24, r24
   10334:	29 f0       	breq	.+10     	; 0x10340 <_Z14Ping_to_Serverv+0x8e>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10336:	91 30       	cpi	r25, 0x01	; 1
   10338:	79 f4       	brne	.+30     	; 0x10358 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
   1033a:	65 e7       	ldi	r22, 0x75	; 117
   1033c:	78 e2       	ldi	r23, 0x28	; 40
   1033e:	04 c0       	rjmp	.+8      	; 0x10348 <_Z14Ping_to_Serverv+0x96>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10340:	91 30       	cpi	r25, 0x01	; 1
   10342:	51 f4       	brne	.+20     	; 0x10358 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
   10344:	6e e5       	ldi	r22, 0x5E	; 94
   10346:	78 e2       	ldi	r23, 0x28	; 40
   10348:	86 ec       	ldi	r24, 0xC6	; 198
   1034a:	94 e1       	ldi	r25, 0x14	; 20
   1034c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   10350:	86 ec       	ldi	r24, 0xC6	; 198
   10352:	94 e1       	ldi	r25, 0x14	; 20
   10354:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
   10358:	0e 94 23 62 	call	0xc446	; 0xc446 <_Z16Gsm_Gprs_Networkv>
   1035c:	c8 2f       	mov	r28, r24
   1035e:	81 11       	cpse	r24, r1
   10360:	06 c0       	rjmp	.+12     	; 0x1036e <_Z14Ping_to_Serverv+0xbc>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10362:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   10366:	8b 7f       	andi	r24, 0xFB	; 251
   10368:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1036c:	f7 c0       	rjmp	.+494    	; 0x1055c <_Z14Ping_to_Serverv+0x2aa>
		return 0;
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
   1036e:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10372:	80 64       	ori	r24, 0x40	; 64
   10374:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
   10378:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
   1037c:	0e 94 99 6b 	call	0xd732	; 0xd732 <_Z17Is_MQTT_Connectedv>
   10380:	c8 2f       	mov	r28, r24
   10382:	88 23       	and	r24, r24
   10384:	29 f0       	breq	.+10     	; 0x10390 <_Z14Ping_to_Serverv+0xde>
   10386:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
   1038a:	82 30       	cpi	r24, 0x02	; 2
   1038c:	09 f0       	breq	.+2      	; 0x10390 <_Z14Ping_to_Serverv+0xde>
   1038e:	e6 c0       	rjmp	.+460    	; 0x1055c <_Z14Ping_to_Serverv+0x2aa>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10390:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10394:	81 30       	cpi	r24, 0x01	; 1
   10396:	51 f4       	brne	.+20     	; 0x103ac <_Z14Ping_to_Serverv+0xfa>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
   10398:	64 e4       	ldi	r22, 0x44	; 68
   1039a:	78 e2       	ldi	r23, 0x28	; 40
   1039c:	86 ec       	ldi	r24, 0xC6	; 198
   1039e:	94 e1       	ldi	r25, 0x14	; 20
   103a0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   103a4:	86 ec       	ldi	r24, 0xC6	; 198
   103a6:	94 e1       	ldi	r25, 0x14	; 20
   103a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
   103ac:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
   103b0:	84 e0       	ldi	r24, 0x04	; 4
   103b2:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
   103b6:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
   103ba:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
   103be:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
   103c2:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
   103c6:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
   103ca:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
   103ce:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
   103d2:	4b e6       	ldi	r20, 0x6B	; 107
   103d4:	56 e0       	ldi	r21, 0x06	; 6
   103d6:	6c e7       	ldi	r22, 0x7C	; 124
   103d8:	76 e0       	ldi	r23, 0x06	; 6
   103da:	cb 01       	movw	r24, r22
   103dc:	0e 94 ce 6b 	call	0xd79c	; 0xd79c <_Z12MQTT_ConnectPKcS0_S0_>
   103e0:	c8 2f       	mov	r28, r24
   103e2:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   103e6:	88 23       	and	r24, r24
   103e8:	09 f4       	brne	.+2      	; 0x103ec <_Z14Ping_to_Serverv+0x13a>
   103ea:	6c c0       	rjmp	.+216    	; 0x104c4 <_Z14Ping_to_Serverv+0x212>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   103ec:	91 30       	cpi	r25, 0x01	; 1
   103ee:	51 f4       	brne	.+20     	; 0x10404 <_Z14Ping_to_Serverv+0x152>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
   103f0:	60 e3       	ldi	r22, 0x30	; 48
   103f2:	78 e2       	ldi	r23, 0x28	; 40
   103f4:	86 ec       	ldi	r24, 0xC6	; 198
   103f6:	94 e1       	ldi	r25, 0x14	; 20
   103f8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   103fc:	86 ec       	ldi	r24, 0xC6	; 198
   103fe:	94 e1       	ldi	r25, 0x14	; 20
   10400:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
   10404:	90 91 ae 13 	lds	r25, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   10408:	98 60       	ori	r25, 0x08	; 8
   1040a:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   1040e:	80 68       	ori	r24, 0x80	; 128
   10410:	90 93 ae 13 	sts	0x13AE, r25	; 0x8013ae <_sRuble_Parameters>
   10414:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
   10418:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
   1041c:	e6 dd       	rcall	.-1076   	; 0xffea <_Z21Subscribe_MQTT_Topicsv>
   1041e:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10422:	88 23       	and	r24, r24
   10424:	91 f0       	breq	.+36     	; 0x1044a <_Z14Ping_to_Serverv+0x198>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10426:	91 30       	cpi	r25, 0x01	; 1
   10428:	51 f4       	brne	.+20     	; 0x1043e <_Z14Ping_to_Serverv+0x18c>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
   1042a:	6b e1       	ldi	r22, 0x1B	; 27
   1042c:	78 e2       	ldi	r23, 0x28	; 40
   1042e:	86 ec       	ldi	r24, 0xC6	; 198
   10430:	94 e1       	ldi	r25, 0x14	; 20
   10432:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   10436:	86 ec       	ldi	r24, 0xC6	; 198
   10438:	94 e1       	ldi	r25, 0x14	; 20
   1043a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
   1043e:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   10442:	84 60       	ori	r24, 0x04	; 4
   10444:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   10448:	08 c0       	rjmp	.+16     	; 0x1045a <_Z14Ping_to_Serverv+0x1a8>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1044a:	91 30       	cpi	r25, 0x01	; 1
   1044c:	31 f4       	brne	.+12     	; 0x1045a <_Z14Ping_to_Serverv+0x1a8>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
   1044e:	62 e0       	ldi	r22, 0x02	; 2
   10450:	78 e2       	ldi	r23, 0x28	; 40
   10452:	86 ec       	ldi	r24, 0xC6	; 198
   10454:	94 e1       	ldi	r25, 0x14	; 20
   10456:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
   1045a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1045e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   10462:	84 60       	ori	r24, 0x04	; 4
   10464:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   10468:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1046c:	e0 91 1f 14 	lds	r30, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10470:	70 91 ae 13 	lds	r23, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   10474:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10478:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
   1047c:	60 91 b1 13 	lds	r22, 0x13B1	; 0x8013b1 <_sRuble_Parameters+0x3>
   10480:	50 91 b2 13 	lds	r21, 0x13B2	; 0x8013b2 <_sRuble_Parameters+0x4>
   10484:	40 91 b3 13 	lds	r20, 0x13B3	; 0x8013b3 <_sRuble_Parameters+0x5>
   10488:	30 91 b4 13 	lds	r19, 0x13B4	; 0x8013b4 <_sRuble_Parameters+0x6>
   1048c:	20 91 b5 13 	lds	r18, 0x13B5	; 0x8013b5 <_sRuble_Parameters+0x7>
   10490:	e1 30       	cpi	r30, 0x01	; 1
   10492:	21 f0       	breq	.+8      	; 0x1049c <_Z14Ping_to_Serverv+0x1ea>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   10494:	98 60       	ori	r25, 0x08	; 8
   10496:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   1049a:	11 c0       	rjmp	.+34     	; 0x104be <_Z14Ping_to_Serverv+0x20c>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   1049c:	81 60       	ori	r24, 0x01	; 1
   1049e:	70 93 ae 13 	sts	0x13AE, r23	; 0x8013ae <_sRuble_Parameters>
   104a2:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   104a6:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
   104aa:	60 93 b1 13 	sts	0x13B1, r22	; 0x8013b1 <_sRuble_Parameters+0x3>
   104ae:	50 93 b2 13 	sts	0x13B2, r21	; 0x8013b2 <_sRuble_Parameters+0x4>
   104b2:	40 93 b3 13 	sts	0x13B3, r20	; 0x8013b3 <_sRuble_Parameters+0x5>
   104b6:	30 93 b4 13 	sts	0x13B4, r19	; 0x8013b4 <_sRuble_Parameters+0x6>
   104ba:	20 93 b5 13 	sts	0x13B5, r18	; 0x8013b5 <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   104be:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   104c2:	4c c0       	rjmp	.+152    	; 0x1055c <_Z14Ping_to_Serverv+0x2aa>
			 
			 return 1;
		}
		else
		{
			_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   104c4:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   104c8:	8b 7f       	andi	r24, 0xFB	; 251
   104ca:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   104ce:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   104d2:	81 60       	ori	r24, 0x01	; 1
   104d4:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   104d8:	91 30       	cpi	r25, 0x01	; 1
   104da:	51 f4       	brne	.+20     	; 0x104f0 <_Z14Ping_to_Serverv+0x23e>
			{
				_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   104dc:	67 ee       	ldi	r22, 0xE7	; 231
   104de:	77 e2       	ldi	r23, 0x27	; 39
   104e0:	86 ec       	ldi	r24, 0xC6	; 198
   104e2:	94 e1       	ldi	r25, 0x14	; 20
   104e4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   104e8:	86 ec       	ldi	r24, 0xC6	; 198
   104ea:	94 e1       	ldi	r25, 0x14	; 20
   104ec:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
			}
			
			Reset_Buffer();
   104f0:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("AT+CFUN=1,1"));
   104f4:	6b ed       	ldi	r22, 0xDB	; 219
   104f6:	77 e2       	ldi	r23, 0x27	; 39
   104f8:	83 e8       	ldi	r24, 0x83	; 131
   104fa:	96 e1       	ldi	r25, 0x16	; 22
   104fc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL,"OK",  NULL,10000,1);     // 22/3/2022
   10500:	01 e0       	ldi	r16, 0x01	; 1
   10502:	20 e1       	ldi	r18, 0x10	; 16
   10504:	37 e2       	ldi	r19, 0x27	; 39
   10506:	40 e0       	ldi	r20, 0x00	; 0
   10508:	50 e0       	ldi	r21, 0x00	; 0
   1050a:	6e e1       	ldi	r22, 0x1E	; 30
   1050c:	73 e0       	ldi	r23, 0x03	; 3
   1050e:	80 e0       	ldi	r24, 0x00	; 0
   10510:	90 e0       	ldi	r25, 0x00	; 0
   10512:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
   10516:	60 e1       	ldi	r22, 0x10	; 16
   10518:	77 e2       	ldi	r23, 0x27	; 39
   1051a:	80 e0       	ldi	r24, 0x00	; 0
   1051c:	90 e0       	ldi	r25, 0x00	; 0
   1051e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
			if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10522:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10526:	81 30       	cpi	r24, 0x01	; 1
   10528:	31 f0       	breq	.+12     	; 0x10536 <_Z14Ping_to_Serverv+0x284>
			{
				_kDELAY_MS(120000);
   1052a:	60 ec       	ldi	r22, 0xC0	; 192
   1052c:	74 ed       	ldi	r23, 0xD4	; 212
   1052e:	81 e0       	ldi	r24, 0x01	; 1
   10530:	90 e0       	ldi	r25, 0x00	; 0
   10532:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
			}
			
			Reset_Buffer();
   10536:	0e 94 0c 68 	call	0xd018	; 0xd018 <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("ATE0"));
   1053a:	66 ed       	ldi	r22, 0xD6	; 214
   1053c:	77 e2       	ldi	r23, 0x27	; 39
   1053e:	83 e8       	ldi	r24, 0x83	; 131
   10540:	96 e1       	ldi	r25, 0x16	; 22
   10542:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
   10546:	02 e0       	ldi	r16, 0x02	; 2
   10548:	28 eb       	ldi	r18, 0xB8	; 184
   1054a:	3b e0       	ldi	r19, 0x0B	; 11
   1054c:	40 e0       	ldi	r20, 0x00	; 0
   1054e:	50 e0       	ldi	r21, 0x00	; 0
   10550:	6e e1       	ldi	r22, 0x1E	; 30
   10552:	73 e0       	ldi	r23, 0x03	; 3
   10554:	80 e0       	ldi	r24, 0x00	; 0
   10556:	90 e0       	ldi	r25, 0x00	; 0
   10558:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh>
	}
	else
	{
		return 1;
	}
}
   1055c:	8c 2f       	mov	r24, r28
   1055e:	cf 91       	pop	r28
   10560:	0f 91       	pop	r16
   10562:	08 95       	ret

00010564 <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   10564:	2f 92       	push	r2
   10566:	3f 92       	push	r3
   10568:	4f 92       	push	r4
   1056a:	5f 92       	push	r5
   1056c:	6f 92       	push	r6
   1056e:	7f 92       	push	r7
   10570:	8f 92       	push	r8
   10572:	9f 92       	push	r9
   10574:	af 92       	push	r10
   10576:	bf 92       	push	r11
   10578:	cf 92       	push	r12
   1057a:	df 92       	push	r13
   1057c:	ef 92       	push	r14
   1057e:	ff 92       	push	r15
   10580:	0f 93       	push	r16
   10582:	1f 93       	push	r17
   10584:	cf 93       	push	r28
   10586:	df 93       	push	r29
   10588:	cd b7       	in	r28, 0x3d	; 61
   1058a:	de b7       	in	r29, 0x3e	; 62
   1058c:	a8 97       	sbiw	r28, 0x28	; 40
   1058e:	0f b6       	in	r0, 0x3f	; 63
   10590:	f8 94       	cli
   10592:	de bf       	out	0x3e, r29	; 62
   10594:	0f be       	out	0x3f, r0	; 63
   10596:	cd bf       	out	0x3d, r28	; 61
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   10598:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1059c:	81 30       	cpi	r24, 0x01	; 1
   1059e:	89 f4       	brne	.+34     	; 0x105c2 <_Z11Init_Brokerv+0x5e>
	{
		 if(Ping_to_Server())
   105a0:	88 de       	rcall	.-752    	; 0x102b2 <_Z14Ping_to_Serverv>
   105a2:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   105a6:	88 23       	and	r24, r24
   105a8:	c9 f0       	breq	.+50     	; 0x105dc <_Z11Init_Brokerv+0x78>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   105aa:	91 30       	cpi	r25, 0x01	; 1
   105ac:	51 f4       	brne	.+20     	; 0x105c2 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   105ae:	68 e1       	ldi	r22, 0x18	; 24
   105b0:	79 e2       	ldi	r23, 0x29	; 41
   105b2:	86 ec       	ldi	r24, 0xC6	; 198
   105b4:	94 e1       	ldi	r25, 0x14	; 20
   105b6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   105ba:	86 ec       	ldi	r24, 0xC6	; 198
   105bc:	94 e1       	ldi	r25, 0x14	; 20
   105be:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   105c2:	32 e6       	ldi	r19, 0x62	; 98
   105c4:	a3 2e       	mov	r10, r19
   105c6:	3f e0       	ldi	r19, 0x0F	; 15
   105c8:	b3 2e       	mov	r11, r19
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   105ca:	4e ec       	ldi	r20, 0xCE	; 206
   105cc:	e4 2e       	mov	r14, r20
   105ce:	43 e1       	ldi	r20, 0x13	; 19
   105d0:	f4 2e       	mov	r15, r20
			if(Subscribed_data_check())
			{
				if(Seperate_Out_Sub_Data())
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   105d2:	50 ed       	ldi	r21, 0xD0	; 208
   105d4:	85 2e       	mov	r8, r21
   105d6:	5f e0       	ldi	r21, 0x0F	; 15
   105d8:	95 2e       	mov	r9, r21
   105da:	18 c0       	rjmp	.+48     	; 0x1060c <_Z11Init_Brokerv+0xa8>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   105dc:	91 30       	cpi	r25, 0x01	; 1
   105de:	89 f7       	brne	.-30     	; 0x105c2 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   105e0:	62 e0       	ldi	r22, 0x02	; 2
   105e2:	79 e2       	ldi	r23, 0x29	; 41
   105e4:	e6 cf       	rjmp	.-52     	; 0x105b2 <_Z11Init_Brokerv+0x4e>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   105e6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   105ea:	81 30       	cpi	r24, 0x01	; 1
   105ec:	51 f4       	brne	.+20     	; 0x10602 <_Z11Init_Brokerv+0x9e>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   105ee:	6f ed       	ldi	r22, 0xDF	; 223
   105f0:	78 e2       	ldi	r23, 0x28	; 40
   105f2:	86 ec       	ldi	r24, 0xC6	; 198
   105f4:	94 e1       	ldi	r25, 0x14	; 20
   105f6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   105fa:	86 ec       	ldi	r24, 0xC6	; 198
   105fc:	94 e1       	ldi	r25, 0x14	; 20
   105fe:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10602:	80 91 a4 0d 	lds	r24, 0x0DA4	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
   10606:	83 30       	cpi	r24, 0x03	; 3
   10608:	08 f4       	brcc	.+2      	; 0x1060c <_Z11Init_Brokerv+0xa8>
   1060a:	5c c0       	rjmp	.+184    	; 0x106c4 <_Z11Init_Brokerv+0x160>
	
	//_kLCD_CLEAR();
	
	unsigned char temp_topic[40];   
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   1060c:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10610:	8e 01       	movw	r16, r28
   10612:	0f 5f       	subi	r16, 0xFF	; 255
   10614:	1f 4f       	sbci	r17, 0xFF	; 255
   10616:	81 30       	cpi	r24, 0x01	; 1
   10618:	f1 f1       	breq	.+124    	; 0x10696 <_Z11Init_Brokerv+0x132>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   1061a:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1061e:	8e e6       	ldi	r24, 0x6E	; 110
   10620:	d5 01       	movw	r26, r10
   10622:	1d 92       	st	X+, r1
   10624:	8a 95       	dec	r24
   10626:	e9 f7       	brne	.-6      	; 0x10622 <_Z11Init_Brokerv+0xbe>
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10628:	88 e2       	ldi	r24, 0x28	; 40
   1062a:	f8 01       	movw	r30, r16
   1062c:	11 92       	st	Z+, r1
   1062e:	8a 95       	dec	r24
   10630:	e9 f7       	brne	.-6      	; 0x1062c <_Z11Init_Brokerv+0xc8>
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10632:	67 e8       	ldi	r22, 0x87	; 135
   10634:	76 e0       	ldi	r23, 0x06	; 6
   10636:	82 e6       	ldi	r24, 0x62	; 98
   10638:	9f e0       	ldi	r25, 0x0F	; 15
   1063a:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1063e:	ff 92       	push	r15
   10640:	ef 92       	push	r14
   10642:	8a e9       	ldi	r24, 0x9A	; 154
   10644:	96 e0       	ldi	r25, 0x06	; 6
   10646:	9f 93       	push	r25
   10648:	8f 93       	push	r24
   1064a:	1f 93       	push	r17
   1064c:	0f 93       	push	r16
   1064e:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
		//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
   10652:	62 e6       	ldi	r22, 0x62	; 98
   10654:	7f e0       	ldi	r23, 0x0F	; 15
   10656:	cb 01       	movw	r24, r22
   10658:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   1065c:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   10660:	2b 01       	movw	r4, r22
   10662:	3c 01       	movw	r6, r24
   10664:	0f 90       	pop	r0
   10666:	0f 90       	pop	r0
   10668:	0f 90       	pop	r0
   1066a:	0f 90       	pop	r0
   1066c:	0f 90       	pop	r0
   1066e:	0f 90       	pop	r0
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10670:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   10674:	dc 01       	movw	r26, r24
   10676:	cb 01       	movw	r24, r22
   10678:	84 19       	sub	r24, r4
   1067a:	95 09       	sbc	r25, r5
   1067c:	a6 09       	sbc	r26, r6
   1067e:	b7 09       	sbc	r27, r7
   10680:	88 39       	cpi	r24, 0x98	; 152
   10682:	9a 43       	sbci	r25, 0x3A	; 58
   10684:	a1 05       	cpc	r26, r1
   10686:	b1 05       	cpc	r27, r1
   10688:	b0 f4       	brcc	.+44     	; 0x106b6 <_Z11Init_Brokerv+0x152>
   1068a:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1068e:	81 30       	cpi	r24, 0x01	; 1
   10690:	09 f0       	breq	.+2      	; 0x10694 <_Z11Init_Brokerv+0x130>
   10692:	65 c0       	rjmp	.+202    	; 0x1075e <_Z11Init_Brokerv+0x1fa>
   10694:	10 c0       	rjmp	.+32     	; 0x106b6 <_Z11Init_Brokerv+0x152>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10696:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1069a:	81 30       	cpi	r24, 0x01	; 1
   1069c:	09 f0       	breq	.+2      	; 0x106a0 <_Z11Init_Brokerv+0x13c>
   1069e:	30 c1       	rjmp	.+608    	; 0x10900 <_Z11Init_Brokerv+0x39c>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   106a0:	65 ea       	ldi	r22, 0xA5	; 165
   106a2:	78 e2       	ldi	r23, 0x28	; 40
   106a4:	86 ec       	ldi	r24, 0xC6	; 198
   106a6:	94 e1       	ldi	r25, 0x14	; 20
   106a8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   106ac:	86 ec       	ldi	r24, 0xC6	; 198
   106ae:	94 e1       	ldi	r25, 0x14	; 20
   106b0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   106b4:	25 c1       	rjmp	.+586    	; 0x10900 <_Z11Init_Brokerv+0x39c>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   106b6:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   106ba:	8a e9       	ldi	r24, 0x9A	; 154
   106bc:	c8 2e       	mov	r12, r24
   106be:	86 e0       	ldi	r24, 0x06	; 6
   106c0:	d8 2e       	mov	r13, r24
   106c2:	9f cf       	rjmp	.-194    	; 0x10602 <_Z11Init_Brokerv+0x9e>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   106c4:	90 91 1f 14 	lds	r25, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   106c8:	91 30       	cpi	r25, 0x01	; 1
   106ca:	09 f4       	brne	.+2      	; 0x106ce <_Z11Init_Brokerv+0x16a>
   106cc:	9f cf       	rjmp	.-194    	; 0x1060c <_Z11Init_Brokerv+0xa8>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   106ce:	8f 5f       	subi	r24, 0xFF	; 255
   106d0:	80 93 a4 0d 	sts	0x0DA4, r24	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   106d4:	ee dd       	rcall	.-1060   	; 0x102b2 <_Z14Ping_to_Serverv>
   106d6:	88 23       	and	r24, r24
   106d8:	09 f4       	brne	.+2      	; 0x106dc <_Z11Init_Brokerv+0x178>
   106da:	85 cf       	rjmp	.-246    	; 0x105e6 <_Z11Init_Brokerv+0x82>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   106dc:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   106e0:	88 60       	ori	r24, 0x08	; 8
   106e2:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   106e6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
				 
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   106ea:	8e e6       	ldi	r24, 0x6E	; 110
   106ec:	d5 01       	movw	r26, r10
   106ee:	1d 92       	st	X+, r1
   106f0:	8a 95       	dec	r24
   106f2:	e9 f7       	brne	.-6      	; 0x106ee <_Z11Init_Brokerv+0x18a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   106f4:	88 e2       	ldi	r24, 0x28	; 40
   106f6:	f8 01       	movw	r30, r16
   106f8:	11 92       	st	Z+, r1
   106fa:	8a 95       	dec	r24
   106fc:	e9 f7       	brne	.-6      	; 0x106f8 <_Z11Init_Brokerv+0x194>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   106fe:	67 e8       	ldi	r22, 0x87	; 135
   10700:	76 e0       	ldi	r23, 0x06	; 6
   10702:	82 e6       	ldi	r24, 0x62	; 98
   10704:	9f e0       	ldi	r25, 0x0F	; 15
   10706:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1070a:	ff 92       	push	r15
   1070c:	ef 92       	push	r14
   1070e:	df 92       	push	r13
   10710:	cf 92       	push	r12
   10712:	1f 93       	push	r17
   10714:	0f 93       	push	r16
   10716:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
				 //MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1071a:	62 e6       	ldi	r22, 0x62	; 98
   1071c:	7f e0       	ldi	r23, 0x0F	; 15
   1071e:	c8 01       	movw	r24, r16
   10720:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
				 
				previous = millis();
   10724:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   10728:	2b 01       	movw	r4, r22
   1072a:	3c 01       	movw	r6, r24
   1072c:	0f 90       	pop	r0
   1072e:	0f 90       	pop	r0
   10730:	0f 90       	pop	r0
   10732:	0f 90       	pop	r0
   10734:	0f 90       	pop	r0
   10736:	0f 90       	pop	r0
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10738:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   1073c:	dc 01       	movw	r26, r24
   1073e:	cb 01       	movw	r24, r22
   10740:	84 19       	sub	r24, r4
   10742:	95 09       	sbc	r25, r5
   10744:	a6 09       	sbc	r26, r6
   10746:	b7 09       	sbc	r27, r7
   10748:	88 39       	cpi	r24, 0x98	; 152
   1074a:	9a 43       	sbci	r25, 0x3A	; 58
   1074c:	a1 05       	cpc	r26, r1
   1074e:	b1 05       	cpc	r27, r1
   10750:	00 f5       	brcc	.+64     	; 0x10792 <_Z11Init_Brokerv+0x22e>
   10752:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10756:	81 30       	cpi	r24, 0x01	; 1
   10758:	09 f0       	breq	.+2      	; 0x1075c <_Z11Init_Brokerv+0x1f8>
   1075a:	86 c0       	rjmp	.+268    	; 0x10868 <_Z11Init_Brokerv+0x304>
   1075c:	1a c0       	rjmp	.+52     	; 0x10792 <_Z11Init_Brokerv+0x22e>
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   1075e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   10762:	88 23       	and	r24, r24
   10764:	09 f4       	brne	.+2      	; 0x10768 <_Z11Init_Brokerv+0x204>
   10766:	84 cf       	rjmp	.-248    	; 0x10670 <_Z11Init_Brokerv+0x10c>
			{
				if(Seperate_Out_Sub_Data())
   10768:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   1076c:	88 23       	and	r24, r24
   1076e:	09 f4       	brne	.+2      	; 0x10772 <_Z11Init_Brokerv+0x20e>
   10770:	7f cf       	rjmp	.-258    	; 0x10670 <_Z11Init_Brokerv+0x10c>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10772:	f4 01       	movw	r30, r8
   10774:	01 90       	ld	r0, Z+
   10776:	00 20       	and	r0, r0
   10778:	e9 f7       	brne	.-6      	; 0x10774 <_Z11Init_Brokerv+0x210>
   1077a:	31 97       	sbiw	r30, 0x01	; 1
   1077c:	af 01       	movw	r20, r30
   1077e:	40 5d       	subi	r20, 0xD0	; 208
   10780:	5f 40       	sbci	r21, 0x0F	; 15
   10782:	21 e0       	ldi	r18, 0x01	; 1
   10784:	60 ed       	ldi	r22, 0xD0	; 208
   10786:	7f e0       	ldi	r23, 0x0F	; 15
   10788:	82 e6       	ldi	r24, 0x62	; 98
   1078a:	9f e0       	ldi	r25, 0x0F	; 15
   1078c:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   10790:	6f cf       	rjmp	.-290    	; 0x10670 <_Z11Init_Brokerv+0x10c>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   10792:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10796:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1079a:	81 30       	cpi	r24, 0x01	; 1
   1079c:	51 f4       	brne	.+20     	; 0x107b2 <_Z11Init_Brokerv+0x24e>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   1079e:	63 ef       	ldi	r22, 0xF3	; 243
   107a0:	78 e2       	ldi	r23, 0x28	; 40
   107a2:	86 ec       	ldi	r24, 0xC6	; 198
   107a4:	94 e1       	ldi	r25, 0x14	; 20
   107a6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   107aa:	86 ec       	ldi	r24, 0xC6	; 198
   107ac:	94 e1       	ldi	r25, 0x14	; 20
   107ae:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   107b2:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   107b6:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   107ba:	9e e6       	ldi	r25, 0x6E	; 110
   107bc:	79 2e       	mov	r7, r25
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   107be:	28 e2       	ldi	r18, 0x28	; 40
   107c0:	62 2e       	mov	r6, r18
				 continue;
			 }
			 
			loop_count = 0;
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   107c2:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   107c6:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   107ca:	0a 97       	sbiw	r24, 0x0a	; 10
   107cc:	08 f0       	brcs	.+2      	; 0x107d0 <_Z11Init_Brokerv+0x26c>
   107ce:	47 c0       	rjmp	.+142    	; 0x1085e <_Z11Init_Brokerv+0x2fa>
   107d0:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   107d4:	81 30       	cpi	r24, 0x01	; 1
   107d6:	09 f4       	brne	.+2      	; 0x107da <_Z11Init_Brokerv+0x276>
   107d8:	42 c0       	rjmp	.+132    	; 0x1085e <_Z11Init_Brokerv+0x2fa>
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   107da:	d5 01       	movw	r26, r10
   107dc:	e7 2d       	mov	r30, r7
   107de:	1d 92       	st	X+, r1
   107e0:	ea 95       	dec	r30
   107e2:	e9 f7       	brne	.-6      	; 0x107de <_Z11Init_Brokerv+0x27a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   107e4:	d8 01       	movw	r26, r16
   107e6:	e6 2d       	mov	r30, r6
   107e8:	1d 92       	st	X+, r1
   107ea:	ea 95       	dec	r30
   107ec:	e9 f7       	brne	.-6      	; 0x107e8 <_Z11Init_Brokerv+0x284>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   107ee:	67 e8       	ldi	r22, 0x87	; 135
   107f0:	76 e0       	ldi	r23, 0x06	; 6
   107f2:	82 e6       	ldi	r24, 0x62	; 98
   107f4:	9f e0       	ldi	r25, 0x0F	; 15
   107f6:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   107fa:	ff 92       	push	r15
   107fc:	ef 92       	push	r14
   107fe:	df 92       	push	r13
   10800:	cf 92       	push	r12
   10802:	1f 93       	push	r17
   10804:	0f 93       	push	r16
   10806:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
				// MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1080a:	62 e6       	ldi	r22, 0x62	; 98
   1080c:	7f e0       	ldi	r23, 0x0F	; 15
   1080e:	c8 01       	movw	r24, r16
   10810:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
				
				loop_count++;
   10814:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   10818:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1081c:	01 96       	adiw	r24, 0x01	; 1
   1081e:	90 93 a3 0d 	sts	0x0DA3, r25	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10822:	80 93 a2 0d 	sts	0x0DA2, r24	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   10826:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   1082a:	1b 01       	movw	r2, r22
   1082c:	2c 01       	movw	r4, r24
   1082e:	0f 90       	pop	r0
   10830:	0f 90       	pop	r0
   10832:	0f 90       	pop	r0
   10834:	0f 90       	pop	r0
   10836:	0f 90       	pop	r0
   10838:	0f 90       	pop	r0
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1083a:	0e 94 b7 d7 	call	0x1af6e	; 0x1af6e <millis>
   1083e:	dc 01       	movw	r26, r24
   10840:	cb 01       	movw	r24, r22
   10842:	82 19       	sub	r24, r2
   10844:	93 09       	sbc	r25, r3
   10846:	a4 09       	sbc	r26, r4
   10848:	b5 09       	sbc	r27, r5
   1084a:	88 3a       	cpi	r24, 0xA8	; 168
   1084c:	91 46       	sbci	r25, 0x61	; 97
   1084e:	a1 05       	cpc	r26, r1
   10850:	b1 05       	cpc	r27, r1
   10852:	e0 f5       	brcc	.+120    	; 0x108cc <_Z11Init_Brokerv+0x368>
   10854:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10858:	81 30       	cpi	r24, 0x01	; 1
   1085a:	01 f5       	brne	.+64     	; 0x1089c <_Z11Init_Brokerv+0x338>
   1085c:	37 c0       	rjmp	.+110    	; 0x108cc <_Z11Init_Brokerv+0x368>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   1085e:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10862:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   10866:	cd ce       	rjmp	.-614    	; 0x10602 <_Z11Init_Brokerv+0x9e>
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
				 
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   10868:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   1086c:	88 23       	and	r24, r24
   1086e:	09 f4       	brne	.+2      	; 0x10872 <_Z11Init_Brokerv+0x30e>
   10870:	63 cf       	rjmp	.-314    	; 0x10738 <_Z11Init_Brokerv+0x1d4>
					 {
						 if(Seperate_Out_Sub_Data())
   10872:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   10876:	88 23       	and	r24, r24
   10878:	09 f4       	brne	.+2      	; 0x1087c <_Z11Init_Brokerv+0x318>
   1087a:	5e cf       	rjmp	.-324    	; 0x10738 <_Z11Init_Brokerv+0x1d4>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1087c:	f4 01       	movw	r30, r8
   1087e:	01 90       	ld	r0, Z+
   10880:	00 20       	and	r0, r0
   10882:	e9 f7       	brne	.-6      	; 0x1087e <_Z11Init_Brokerv+0x31a>
   10884:	31 97       	sbiw	r30, 0x01	; 1
   10886:	af 01       	movw	r20, r30
   10888:	40 5d       	subi	r20, 0xD0	; 208
   1088a:	5f 40       	sbci	r21, 0x0F	; 15
   1088c:	21 e0       	ldi	r18, 0x01	; 1
   1088e:	60 ed       	ldi	r22, 0xD0	; 208
   10890:	7f e0       	ldi	r23, 0x0F	; 15
   10892:	82 e6       	ldi	r24, 0x62	; 98
   10894:	9f e0       	ldi	r25, 0x0F	; 15
   10896:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   1089a:	4e cf       	rjmp	.-356    	; 0x10738 <_Z11Init_Brokerv+0x1d4>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   1089c:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   108a0:	88 23       	and	r24, r24
   108a2:	59 f2       	breq	.-106    	; 0x1083a <_Z11Init_Brokerv+0x2d6>
					{
						if(Seperate_Out_Sub_Data())
   108a4:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   108a8:	88 23       	and	r24, r24
   108aa:	39 f2       	breq	.-114    	; 0x1083a <_Z11Init_Brokerv+0x2d6>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   108ac:	f4 01       	movw	r30, r8
   108ae:	01 90       	ld	r0, Z+
   108b0:	00 20       	and	r0, r0
   108b2:	e9 f7       	brne	.-6      	; 0x108ae <_Z11Init_Brokerv+0x34a>
   108b4:	31 97       	sbiw	r30, 0x01	; 1
   108b6:	af 01       	movw	r20, r30
   108b8:	40 5d       	subi	r20, 0xD0	; 208
   108ba:	5f 40       	sbci	r21, 0x0F	; 15
   108bc:	21 e0       	ldi	r18, 0x01	; 1
   108be:	60 ed       	ldi	r22, 0xD0	; 208
   108c0:	7f e0       	ldi	r23, 0x0F	; 15
   108c2:	82 e6       	ldi	r24, 0x62	; 98
   108c4:	9f e0       	ldi	r25, 0x0F	; 15
   108c6:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   108ca:	b7 cf       	rjmp	.-146    	; 0x1083a <_Z11Init_Brokerv+0x2d6>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   108cc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   108d0:	81 30       	cpi	r24, 0x01	; 1
   108d2:	09 f0       	breq	.+2      	; 0x108d6 <_Z11Init_Brokerv+0x372>
   108d4:	76 cf       	rjmp	.-276    	; 0x107c2 <_Z11Init_Brokerv+0x25e>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   108d6:	64 ec       	ldi	r22, 0xC4	; 196
   108d8:	78 e2       	ldi	r23, 0x28	; 40
   108da:	86 ec       	ldi	r24, 0xC6	; 198
   108dc:	94 e1       	ldi	r25, 0x14	; 20
   108de:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   108e2:	60 91 a2 0d 	lds	r22, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   108e6:	70 91 a3 0d 	lds	r23, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   108ea:	4a e0       	ldi	r20, 0x0A	; 10
   108ec:	50 e0       	ldi	r21, 0x00	; 0
   108ee:	86 ec       	ldi	r24, 0xC6	; 198
   108f0:	94 e1       	ldi	r25, 0x14	; 20
   108f2:	0e 94 13 d6 	call	0x1ac26	; 0x1ac26 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   108f6:	86 ec       	ldi	r24, 0xC6	; 198
   108f8:	94 e1       	ldi	r25, 0x14	; 20
   108fa:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   108fe:	61 cf       	rjmp	.-318    	; 0x107c2 <_Z11Init_Brokerv+0x25e>

	/******************* published the topic that Ruble is Restarted ********************/
	//unsigned char temp[33];
	//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	
	memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10900:	8e e6       	ldi	r24, 0x6E	; 110
   10902:	e2 e6       	ldi	r30, 0x62	; 98
   10904:	ff e0       	ldi	r31, 0x0F	; 15
   10906:	df 01       	movw	r26, r30
   10908:	1d 92       	st	X+, r1
   1090a:	8a 95       	dec	r24
   1090c:	e9 f7       	brne	.-6      	; 0x10908 <_Z11Init_Brokerv+0x3a4>
	sprintf((char *)_gRecvd_Data,"{\"sicca_start\": \"true\"}");
   1090e:	69 ea       	ldi	r22, 0xA9	; 169
   10910:	76 e0       	ldi	r23, 0x06	; 6
   10912:	cf 01       	movw	r24, r30
   10914:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
	memset((char *)temp_topic, 0, sizeof(temp_topic));
   10918:	88 e2       	ldi	r24, 0x28	; 40
   1091a:	f8 01       	movw	r30, r16
   1091c:	11 92       	st	Z+, r1
   1091e:	8a 95       	dec	r24
   10920:	e9 f7       	brne	.-6      	; 0x1091c <_Z11Init_Brokerv+0x3b8>
	
	sprintf((char *)temp_topic,"SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);
   10922:	8e ec       	ldi	r24, 0xCE	; 206
   10924:	93 e1       	ldi	r25, 0x13	; 19
   10926:	9f 93       	push	r25
   10928:	8f 93       	push	r24
   1092a:	81 ec       	ldi	r24, 0xC1	; 193
   1092c:	96 e0       	ldi	r25, 0x06	; 6
   1092e:	9f 93       	push	r25
   10930:	8f 93       	push	r24
   10932:	1f 93       	push	r17
   10934:	0f 93       	push	r16
   10936:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
	
	//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	
	MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1093a:	62 e6       	ldi	r22, 0x62	; 98
   1093c:	7f e0       	ldi	r23, 0x0F	; 15
   1093e:	c8 01       	movw	r24, r16
   10940:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   10944:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   10948:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1094c:	84 60       	ori	r24, 0x04	; 4
   1094e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   10952:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
	
}
   10956:	0f 90       	pop	r0
   10958:	0f 90       	pop	r0
   1095a:	0f 90       	pop	r0
   1095c:	0f 90       	pop	r0
   1095e:	0f 90       	pop	r0
   10960:	0f 90       	pop	r0
   10962:	80 e0       	ldi	r24, 0x00	; 0
   10964:	a8 96       	adiw	r28, 0x28	; 40
   10966:	0f b6       	in	r0, 0x3f	; 63
   10968:	f8 94       	cli
   1096a:	de bf       	out	0x3e, r29	; 62
   1096c:	0f be       	out	0x3f, r0	; 63
   1096e:	cd bf       	out	0x3d, r28	; 61
   10970:	df 91       	pop	r29
   10972:	cf 91       	pop	r28
   10974:	1f 91       	pop	r17
   10976:	0f 91       	pop	r16
   10978:	ff 90       	pop	r15
   1097a:	ef 90       	pop	r14
   1097c:	df 90       	pop	r13
   1097e:	cf 90       	pop	r12
   10980:	bf 90       	pop	r11
   10982:	af 90       	pop	r10
   10984:	9f 90       	pop	r9
   10986:	8f 90       	pop	r8
   10988:	7f 90       	pop	r7
   1098a:	6f 90       	pop	r6
   1098c:	5f 90       	pop	r5
   1098e:	4f 90       	pop	r4
   10990:	3f 90       	pop	r3
   10992:	2f 90       	pop	r2
   10994:	08 95       	ret

00010996 <initVariant>:
   10996:	08 95       	ret

00010998 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   10998:	0e 94 2d d8 	call	0x1b05a	; 0x1b05a <init>

	initVariant();
   1099c:	fc df       	rcall	.-8      	; 0x10996 <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Interrupt_Time_Out = 1300;
   1099e:	84 e1       	ldi	r24, 0x14	; 20
   109a0:	95 e0       	ldi	r25, 0x05	; 5
   109a2:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
   109a6:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
	
	Initialise_Hardware();
   109aa:	0e 94 72 70 	call	0xe0e4	; 0xe0e4 <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   109ae:	b5 d9       	rcall	.-3222   	; 0xfd1a <_Z20Param_Initializationv>
	
	while (_kSERAIL_AT_CHECK())
   109b0:	83 e8       	ldi	r24, 0x83	; 131
   109b2:	96 e1       	ldi	r25, 0x16	; 22
   109b4:	0e 94 3d d3 	call	0x1a67a	; 0x1a67a <_ZN14HardwareSerial9availableEv>
   109b8:	89 2b       	or	r24, r25
   109ba:	29 f0       	breq	.+10     	; 0x109c6 <main+0x2e>
	{
		_kSERIAL_AT_READ();
   109bc:	83 e8       	ldi	r24, 0x83	; 131
   109be:	96 e1       	ldi	r25, 0x16	; 22
   109c0:	0e 94 5e d3 	call	0x1a6bc	; 0x1a6bc <_ZN14HardwareSerial4readEv>
	
	Initialise_Hardware();
	
	Param_Initialization();
	
	while (_kSERAIL_AT_CHECK())
   109c4:	f5 cf       	rjmp	.-22     	; 0x109b0 <main+0x18>
	{
		_kSERIAL_AT_READ();
	}
	
	Reading_Time = _kSET;
   109c6:	c1 e0       	ldi	r28, 0x01	; 1
   109c8:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   109cc:	0e 94 9e 60 	call	0xc13c	; 0xc13c <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   109d0:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
	Check_GSM_Signal();
   109d4:	0e 94 50 60 	call	0xc0a0	; 0xc0a0 <_Z16Check_GSM_Signalv>

	Start_Display_In_Interrupt = 1;
   109d8:	c0 93 c2 0c 	sts	0x0CC2, r28	; 0x800cc2 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   109dc:	c0 93 6d 14 	sts	0x146D, r28	; 0x80146d <_sRuble_Parameters+0xbf>
   
	tickcount = g_uTick;
   109e0:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   109e4:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   109e8:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   109ec:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   109f0:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   109f4:	84 e0       	ldi	r24, 0x04	; 4
   109f6:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
   109fa:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
   109fe:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
   10a02:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
   10a06:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
   10a0a:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
   10a0e:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
   10a12:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   10a16:	83 e0       	ldi	r24, 0x03	; 3
   10a18:	0e 94 67 af 	call	0x15ece	; 0x15ece <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10a1c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10a20:	81 30       	cpi	r24, 0x01	; 1
   10a22:	c1 f4       	brne	.+48     	; 0x10a54 <main+0xbc>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   10a24:	6c e3       	ldi	r22, 0x3C	; 60
   10a26:	79 e2       	ldi	r23, 0x29	; 41
   10a28:	86 ec       	ldi	r24, 0xC6	; 198
   10a2a:	94 e1       	ldi	r25, 0x14	; 20
   10a2c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   10a30:	40 91 a4 13 	lds	r20, 0x13A4	; 0x8013a4 <_sPump_Parameter>
   10a34:	50 91 a5 13 	lds	r21, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
   10a38:	60 91 a6 13 	lds	r22, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
   10a3c:	70 91 a7 13 	lds	r23, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
   10a40:	22 e0       	ldi	r18, 0x02	; 2
   10a42:	30 e0       	ldi	r19, 0x00	; 0
   10a44:	86 ec       	ldi	r24, 0xC6	; 198
   10a46:	94 e1       	ldi	r25, 0x14	; 20
   10a48:	0e 94 5d d7 	call	0x1aeba	; 0x1aeba <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   10a4c:	86 ec       	ldi	r24, 0xC6	; 198
   10a4e:	94 e1       	ldi	r25, 0x14	; 20
   10a50:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   10a54:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10a58:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   10a5c:	86 e9       	ldi	r24, 0x96	; 150
   10a5e:	90 e0       	ldi	r25, 0x00	; 0
   10a60:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   10a64:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10a68:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10a6c:	81 30       	cpi	r24, 0x01	; 1
   10a6e:	91 f4       	brne	.+36     	; 0x10a94 <main+0xfc>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   10a70:	69 e2       	ldi	r22, 0x29	; 41
   10a72:	79 e2       	ldi	r23, 0x29	; 41
   10a74:	86 ec       	ldi	r24, 0xC6	; 198
   10a76:	94 e1       	ldi	r25, 0x14	; 20
   10a78:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   10a7c:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
   10a80:	4a e0       	ldi	r20, 0x0A	; 10
   10a82:	50 e0       	ldi	r21, 0x00	; 0
   10a84:	86 ec       	ldi	r24, 0xC6	; 198
   10a86:	94 e1       	ldi	r25, 0x14	; 20
   10a88:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   10a8c:	86 ec       	ldi	r24, 0xC6	; 198
   10a8e:	94 e1       	ldi	r25, 0x14	; 20
   10a90:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   10a94:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   10a98:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   10a9c:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
	_sRuble_Parameters.Electricity_Status        = _kON;
   10aa0:	c1 e0       	ldi	r28, 0x01	; 1
   10aa2:	c0 93 6a 14 	sts	0x146A, r28	; 0x80146a <_sRuble_Parameters+0xbc>
	
	Select_Operation_Mode();
   10aa6:	0e 94 bc c2 	call	0x18578	; 0x18578 <_Z21Select_Operation_Modev>

	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10aaa:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10aae:	10 92 54 0e 	sts	0x0E54, r1	; 0x800e54 <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   10ab2:	c0 93 56 0e 	sts	0x0E56, r28	; 0x800e56 <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10ab6:	10 92 03 0e 	sts	0x0E03, r1	; 0x800e03 <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   10aba:	85 e0       	ldi	r24, 0x05	; 5
   10abc:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10ac0:	10 92 39 0e 	sts	0x0E39, r1	; 0x800e39 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10ac4:	10 92 52 0e 	sts	0x0E52, r1	; 0x800e52 <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   10ac8:	10 92 3b 0e 	sts	0x0E3B, r1	; 0x800e3b <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   10acc:	10 92 53 0e 	sts	0x0E53, r1	; 0x800e53 <_sExtra_Plot+0x6b>
	
	delay(5000);
   10ad0:	68 e8       	ldi	r22, 0x88	; 136
   10ad2:	73 e1       	ldi	r23, 0x13	; 19
   10ad4:	80 e0       	ldi	r24, 0x00	; 0
   10ad6:	90 e0       	ldi	r25, 0x00	; 0
   10ad8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
	Reading_Time = _kSET;
   10adc:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   10ae0:	0e 94 9e 60 	call	0xc13c	; 0xc13c <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10ae4:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
	

	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   10ae8:	80 91 60 0e 	lds	r24, 0x0E60	; 0x800e60 <_sExtra_Plot+0x78>
   10aec:	90 91 61 0e 	lds	r25, 0x0E61	; 0x800e61 <_sExtra_Plot+0x79>
   10af0:	00 97       	sbiw	r24, 0x00	; 0
   10af2:	01 f1       	breq	.+64     	; 0x10b34 <main+0x19c>
   10af4:	20 91 55 0e 	lds	r18, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
   10af8:	29 36       	cpi	r18, 0x69	; 105
   10afa:	e1 f4       	brne	.+56     	; 0x10b34 <main+0x19c>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   10afc:	60 91 66 0e 	lds	r22, 0x0E66	; 0x800e66 <_sExtra_Plot+0x7e>
   10b00:	70 91 67 0e 	lds	r23, 0x0E67	; 0x800e67 <_sExtra_Plot+0x7f>
   10b04:	40 e1       	ldi	r20, 0x10	; 16
   10b06:	5e e0       	ldi	r21, 0x0E	; 14
   10b08:	64 9f       	mul	r22, r20
   10b0a:	90 01       	movw	r18, r0
   10b0c:	65 9f       	mul	r22, r21
   10b0e:	30 0d       	add	r19, r0
   10b10:	74 9f       	mul	r23, r20
   10b12:	30 0d       	add	r19, r0
   10b14:	11 24       	eor	r1, r1
   10b16:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   10b1a:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   10b1e:	4c e3       	ldi	r20, 0x3C	; 60
   10b20:	48 9f       	mul	r20, r24
   10b22:	90 01       	movw	r18, r0
   10b24:	49 9f       	mul	r20, r25
   10b26:	30 0d       	add	r19, r0
   10b28:	11 24       	eor	r1, r1
   10b2a:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   10b2e:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   10b32:	08 c0       	rjmp	.+16     	; 0x10b44 <main+0x1ac>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   10b34:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   10b38:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
		_sSchedules.Flush_Schedule_For = 0;
   10b3c:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   10b40:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
	}
	
	_gStart_Wdt = _kSET;
   10b44:	81 e0       	ldi	r24, 0x01	; 1
   10b46:	80 93 e8 0c 	sts	0x0CE8, r24	; 0x800ce8 <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   10b4a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	
	_gStart_Monitoring_Three_Phase = 0;
   10b4e:	10 92 e5 0c 	sts	0x0CE5, r1	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
	_gTimer_For_Three_Phase_Testing = _kRESET;
   10b52:	10 92 e4 0c 	sts	0x0CE4, r1	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
			Keeps_Monitor_Server_Connection();	
			
			if(timer_count > 80)          
			{
				timer_count = 0;
				Reading_Time = _kSET;
   10b56:	11 e0       	ldi	r17, 0x01	; 1
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10b58:	c0 ed       	ldi	r28, 0xD0	; 208
   10b5a:	df e0       	ldi	r29, 0x0F	; 15
	_gTimer_For_Three_Phase_Testing = _kRESET;
	
	
	while (1)
	{
		if(_g_1Sec_Time)
   10b5c:	80 91 cf 0c 	lds	r24, 0x0CCF	; 0x800ccf <_g_1Sec_Time>
   10b60:	90 91 d0 0c 	lds	r25, 0x0CD0	; 0x800cd0 <_g_1Sec_Time+0x1>
   10b64:	a0 91 d1 0c 	lds	r26, 0x0CD1	; 0x800cd1 <_g_1Sec_Time+0x2>
   10b68:	b0 91 d2 0c 	lds	r27, 0x0CD2	; 0x800cd2 <_g_1Sec_Time+0x3>
   10b6c:	89 2b       	or	r24, r25
   10b6e:	8a 2b       	or	r24, r26
   10b70:	8b 2b       	or	r24, r27
   10b72:	09 f4       	brne	.+2      	; 0x10b76 <main+0x1de>
   10b74:	48 c0       	rjmp	.+144    	; 0x10c06 <main+0x26e>
		{
			_g_1Sec_Time = _kRESET;
   10b76:	10 92 cf 0c 	sts	0x0CCF, r1	; 0x800ccf <_g_1Sec_Time>
   10b7a:	10 92 d0 0c 	sts	0x0CD0, r1	; 0x800cd0 <_g_1Sec_Time+0x1>
   10b7e:	10 92 d1 0c 	sts	0x0CD1, r1	; 0x800cd1 <_g_1Sec_Time+0x2>
   10b82:	10 92 d2 0c 	sts	0x0CD2, r1	; 0x800cd2 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   10b86:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   10b8a:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   10b8e:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   10b92:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
			timer_count++;
   10b96:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   10b9a:	8f 5f       	subi	r24, 0xFF	; 255
   10b9c:	80 93 cf 0d 	sts	0x0DCF, r24	; 0x800dcf <_ZZ4mainE11timer_count>
			_gWdt_Counter = 0;
   10ba0:	10 92 ea 0c 	sts	0x0CEA, r1	; 0x800cea <_gWdt_Counter+0x1>
   10ba4:	10 92 e9 0c 	sts	0x0CE9, r1	; 0x800ce9 <_gWdt_Counter>
			
			Publish_Data();
   10ba8:	0e 94 6c a5 	call	0x14ad8	; 0x14ad8 <_Z12Publish_Datav>
			
			Lora_Operation();
   10bac:	0e 94 ca d0 	call	0x1a194	; 0x1a194 <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   10bb0:	0e 94 86 cb 	call	0x1970c	; 0x1970c <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             
   10bb4:	0e 94 7b c6 	call	0x18cf6	; 0x18cf6 <_Z13Run_Operationv>
			
			Display_Update_1();
   10bb8:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   10bbc:	0e 94 e9 74 	call	0xe9d2	; 0xe9d2 <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 80)          
   10bc0:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   10bc4:	81 35       	cpi	r24, 0x51	; 81
   10bc6:	58 f0       	brcs	.+22     	; 0x10bde <main+0x246>
			{
				timer_count = 0;
   10bc8:	10 92 cf 0d 	sts	0x0DCF, r1	; 0x800dcf <_ZZ4mainE11timer_count>
				Reading_Time = _kSET;
   10bcc:	10 93 e1 0c 	sts	0x0CE1, r17	; 0x800ce1 <Reading_Time>
				Get_Local_Time();
   10bd0:	0e 94 9e 60 	call	0xc13c	; 0xc13c <_Z14Get_Local_Timev>
				Reading_Time = _kRESET;
   10bd4:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
				Hard_Coded_Flush_Valve(_kON);	
   10bd8:	81 e0       	ldi	r24, 0x01	; 1
   10bda:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check(); 
   10bde:	0e 94 53 24 	call	0x48a6	; 0x48a6 <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   10be2:	0e 94 3f cc 	call	0x1987e	; 0x1987e <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   10be6:	0e 94 1f cd 	call	0x19a3e	; 0x19a3e <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   10bea:	0e 94 c2 cc 	call	0x19984	; 0x19984 <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   10bee:	0e 94 4d 75 	call	0xea9a	; 0xea9a <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   10bf2:	0e 94 1d 25 	call	0x4a3a	; 0x4a3a <_Z17Flush_Controllingv>
			
			Debug_Check();
   10bf6:	0e 94 c3 75 	call	0xeb86	; 0xeb86 <_Z11Debug_Checkv>
			
			Calibration_Of_Pump();
   10bfa:	0e 94 09 76 	call	0xec12	; 0xec12 <_Z19Calibration_Of_Pumpv>
			
			Select_Operation_Mode();
   10bfe:	0e 94 bc c2 	call	0x18578	; 0x18578 <_Z21Select_Operation_Modev>
			
			Faults_Handler();
   10c02:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <_Z14Faults_Handlerv>
			
		}	
		
		if(Subscribed_data_check())
   10c06:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   10c0a:	88 23       	and	r24, r24
   10c0c:	09 f4       	brne	.+2      	; 0x10c10 <main+0x278>
   10c0e:	a6 cf       	rjmp	.-180    	; 0x10b5c <main+0x1c4>
		{
			if(Seperate_Out_Sub_Data())
   10c10:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   10c14:	88 23       	and	r24, r24
   10c16:	09 f4       	brne	.+2      	; 0x10c1a <main+0x282>
   10c18:	a1 cf       	rjmp	.-190    	; 0x10b5c <main+0x1c4>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10c1a:	fe 01       	movw	r30, r28
   10c1c:	01 90       	ld	r0, Z+
   10c1e:	00 20       	and	r0, r0
   10c20:	e9 f7       	brne	.-6      	; 0x10c1c <main+0x284>
   10c22:	31 97       	sbiw	r30, 0x01	; 1
   10c24:	af 01       	movw	r20, r30
   10c26:	40 5d       	subi	r20, 0xD0	; 208
   10c28:	5f 40       	sbci	r21, 0x0F	; 15
   10c2a:	21 e0       	ldi	r18, 0x01	; 1
   10c2c:	60 ed       	ldi	r22, 0xD0	; 208
   10c2e:	7f e0       	ldi	r23, 0x0F	; 15
   10c30:	82 e6       	ldi	r24, 0x62	; 98
   10c32:	9f e0       	ldi	r25, 0x0F	; 15
   10c34:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   10c38:	91 cf       	rjmp	.-222    	; 0x10b5c <main+0x1c4>

00010c3a <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   10c3a:	fc 01       	movw	r30, r24
   10c3c:	26 81       	ldd	r18, Z+6	; 0x06
   10c3e:	37 81       	ldd	r19, Z+7	; 0x07
   10c40:	62 0f       	add	r22, r18
   10c42:	73 1f       	adc	r23, r19
   10c44:	84 81       	ldd	r24, Z+4	; 0x04
   10c46:	95 81       	ldd	r25, Z+5	; 0x05
   10c48:	86 17       	cp	r24, r22
   10c4a:	97 07       	cpc	r25, r23
   10c4c:	38 f0       	brcs	.+14     	; 0x10c5c <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   10c4e:	82 81       	ldd	r24, Z+2	; 0x02
   10c50:	93 81       	ldd	r25, Z+3	; 0x03
   10c52:	77 83       	std	Z+7, r23	; 0x07
   10c54:	66 83       	std	Z+6, r22	; 0x06
   10c56:	82 0f       	add	r24, r18
   10c58:	93 1f       	adc	r25, r19
   10c5a:	08 95       	ret
   10c5c:	80 e0       	ldi	r24, 0x00	; 0
   10c5e:	90 e0       	ldi	r25, 0x00	; 0
   10c60:	08 95       	ret

00010c62 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>:
   10c62:	77 fd       	sbrc	r23, 7
   10c64:	06 c0       	rjmp	.+12     	; 0x10c72 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x10>
   10c66:	ab 01       	movw	r20, r22
   10c68:	77 0f       	add	r23, r23
   10c6a:	66 0b       	sbc	r22, r22
   10c6c:	77 0b       	sbc	r23, r23
   10c6e:	24 e0       	ldi	r18, 0x04	; 4
   10c70:	09 c0       	rjmp	.+18     	; 0x10c84 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x22>
   10c72:	44 27       	eor	r20, r20
   10c74:	55 27       	eor	r21, r21
   10c76:	46 1b       	sub	r20, r22
   10c78:	57 0b       	sbc	r21, r23
   10c7a:	05 2e       	mov	r0, r21
   10c7c:	00 0c       	add	r0, r0
   10c7e:	66 0b       	sbc	r22, r22
   10c80:	77 0b       	sbc	r23, r23
   10c82:	25 e0       	ldi	r18, 0x05	; 5
   10c84:	fc 01       	movw	r30, r24
   10c86:	20 83       	st	Z, r18
   10c88:	41 83       	std	Z+1, r20	; 0x01
   10c8a:	52 83       	std	Z+2, r21	; 0x02
   10c8c:	63 83       	std	Z+3, r22	; 0x03
   10c8e:	74 83       	std	Z+4, r23	; 0x04
   10c90:	81 e0       	ldi	r24, 0x01	; 1
   10c92:	08 95       	ret

00010c94 <_ZN5Print5writeEPKc>:
   10c94:	61 15       	cp	r22, r1
   10c96:	71 05       	cpc	r23, r1
   10c98:	79 f0       	breq	.+30     	; 0x10cb8 <_ZN5Print5writeEPKc+0x24>
   10c9a:	fb 01       	movw	r30, r22
   10c9c:	01 90       	ld	r0, Z+
   10c9e:	00 20       	and	r0, r0
   10ca0:	e9 f7       	brne	.-6      	; 0x10c9c <_ZN5Print5writeEPKc+0x8>
   10ca2:	31 97       	sbiw	r30, 0x01	; 1
   10ca4:	af 01       	movw	r20, r30
   10ca6:	46 1b       	sub	r20, r22
   10ca8:	57 0b       	sbc	r21, r23
   10caa:	dc 01       	movw	r26, r24
   10cac:	ed 91       	ld	r30, X+
   10cae:	fc 91       	ld	r31, X
   10cb0:	02 80       	ldd	r0, Z+2	; 0x02
   10cb2:	f3 81       	ldd	r31, Z+3	; 0x03
   10cb4:	e0 2d       	mov	r30, r0
   10cb6:	19 94       	eijmp
   10cb8:	80 e0       	ldi	r24, 0x00	; 0
   10cba:	90 e0       	ldi	r25, 0x00	; 0
   10cbc:	08 95       	ret

00010cbe <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   10cbe:	db 01       	movw	r26, r22
   10cc0:	10 97       	sbiw	r26, 0x00	; 0
   10cc2:	49 f0       	breq	.+18     	; 0x10cd6 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   10cc4:	ed 91       	ld	r30, X+
   10cc6:	fc 91       	ld	r31, X
   10cc8:	11 97       	sbiw	r26, 0x01	; 1
   10cca:	01 90       	ld	r0, Z+
   10ccc:	f0 81       	ld	r31, Z
   10cce:	e0 2d       	mov	r30, r0
   10cd0:	bc 01       	movw	r22, r24
   10cd2:	cd 01       	movw	r24, r26
   10cd4:	19 94       	eijmp
   10cd6:	80 e0       	ldi	r24, 0x00	; 0
   10cd8:	90 e0       	ldi	r25, 0x00	; 0
   10cda:	08 95       	ret

00010cdc <_ZN11ArduinoJson9JsonArray7invalidEv>:
   10cdc:	80 91 ba 14 	lds	r24, 0x14BA	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10ce0:	81 11       	cpse	r24, r1
   10ce2:	0b c0       	rjmp	.+22     	; 0x10cfa <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   10ce4:	10 92 c3 14 	sts	0x14C3, r1	; 0x8014c3 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   10ce8:	10 92 c2 14 	sts	0x14C2, r1	; 0x8014c2 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10cec:	10 92 c5 14 	sts	0x14C5, r1	; 0x8014c5 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   10cf0:	10 92 c4 14 	sts	0x14C4, r1	; 0x8014c4 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   10cf4:	81 e0       	ldi	r24, 0x01	; 1
   10cf6:	80 93 ba 14 	sts	0x14BA, r24	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10cfa:	82 ec       	ldi	r24, 0xC2	; 194
   10cfc:	94 e1       	ldi	r25, 0x14	; 20
   10cfe:	08 95       	ret

00010d00 <_ZN11ArduinoJson10JsonObject7invalidEv>:
   10d00:	80 91 ae 14 	lds	r24, 0x14AE	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10d04:	81 11       	cpse	r24, r1
   10d06:	0b c0       	rjmp	.+22     	; 0x10d1e <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   10d08:	10 92 b7 14 	sts	0x14B7, r1	; 0x8014b7 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   10d0c:	10 92 b6 14 	sts	0x14B6, r1	; 0x8014b6 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10d10:	10 92 b9 14 	sts	0x14B9, r1	; 0x8014b9 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   10d14:	10 92 b8 14 	sts	0x14B8, r1	; 0x8014b8 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   10d18:	81 e0       	ldi	r24, 0x01	; 1
   10d1a:	80 93 ae 14 	sts	0x14AE, r24	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10d1e:	86 eb       	ldi	r24, 0xB6	; 182
   10d20:	94 e1       	ldi	r25, 0x14	; 20
   10d22:	08 95       	ret

00010d24 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   10d24:	cf 93       	push	r28
   10d26:	df 93       	push	r29
   10d28:	ec 01       	movw	r28, r24
   10d2a:	bc 01       	movw	r22, r24
   10d2c:	84 e0       	ldi	r24, 0x04	; 4
   10d2e:	90 e0       	ldi	r25, 0x00	; 0
   10d30:	c6 df       	rcall	.-116    	; 0x10cbe <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   10d32:	00 97       	sbiw	r24, 0x00	; 0
   10d34:	41 f0       	breq	.+16     	; 0x10d46 <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   10d36:	fc 01       	movw	r30, r24
   10d38:	d1 83       	std	Z+1, r29	; 0x01
   10d3a:	c0 83       	st	Z, r28
   10d3c:	13 82       	std	Z+3, r1	; 0x03
   10d3e:	12 82       	std	Z+2, r1	; 0x02
   10d40:	df 91       	pop	r29
   10d42:	cf 91       	pop	r28
   10d44:	08 95       	ret
   10d46:	df 91       	pop	r29
   10d48:	cf 91       	pop	r28
   10d4a:	da cf       	rjmp	.-76     	; 0x10d00 <_ZN11ArduinoJson10JsonObject7invalidEv>

00010d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   10d4c:	0f 93       	push	r16
   10d4e:	1f 93       	push	r17
   10d50:	cf 93       	push	r28
   10d52:	df 93       	push	r29
   10d54:	1f 92       	push	r1
   10d56:	1f 92       	push	r1
   10d58:	cd b7       	in	r28, 0x3d	; 61
   10d5a:	de b7       	in	r29, 0x3e	; 62
   10d5c:	8b 01       	movw	r16, r22
   10d5e:	fb 01       	movw	r30, r22
   10d60:	60 81       	ld	r22, Z
   10d62:	9a 83       	std	Y+2, r25	; 0x02
   10d64:	89 83       	std	Y+1, r24	; 0x01
   10d66:	ce 01       	movw	r24, r28
   10d68:	01 96       	adiw	r24, 0x01	; 1
   10d6a:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10d6e:	c8 01       	movw	r24, r16
   10d70:	0f 90       	pop	r0
   10d72:	0f 90       	pop	r0
   10d74:	df 91       	pop	r29
   10d76:	cf 91       	pop	r28
   10d78:	1f 91       	pop	r17
   10d7a:	0f 91       	pop	r16
   10d7c:	08 95       	ret

00010d7e <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>:
   10d7e:	af 92       	push	r10
   10d80:	bf 92       	push	r11
   10d82:	cf 92       	push	r12
   10d84:	df 92       	push	r13
   10d86:	ef 92       	push	r14
   10d88:	ff 92       	push	r15
   10d8a:	0f 93       	push	r16
   10d8c:	1f 93       	push	r17
   10d8e:	cf 93       	push	r28
   10d90:	df 93       	push	r29
   10d92:	1f 92       	push	r1
   10d94:	1f 92       	push	r1
   10d96:	cd b7       	in	r28, 0x3d	; 61
   10d98:	de b7       	in	r29, 0x3e	; 62
   10d9a:	8b 01       	movw	r16, r22
   10d9c:	6b 01       	movw	r12, r22
   10d9e:	2b e0       	ldi	r18, 0x0B	; 11
   10da0:	c2 0e       	add	r12, r18
   10da2:	d1 1c       	adc	r13, r1
   10da4:	7b 01       	movw	r14, r22
   10da6:	5c 01       	movw	r10, r24
   10da8:	a6 1a       	sub	r10, r22
   10daa:	b7 0a       	sbc	r11, r23
   10dac:	c5 01       	movw	r24, r10
   10dae:	8e 0d       	add	r24, r14
   10db0:	9f 1d       	adc	r25, r15
   10db2:	f7 01       	movw	r30, r14
   10db4:	61 91       	ld	r22, Z+
   10db6:	7f 01       	movw	r14, r30
   10db8:	9a 83       	std	Y+2, r25	; 0x02
   10dba:	89 83       	std	Y+1, r24	; 0x01
   10dbc:	ce 01       	movw	r24, r28
   10dbe:	01 96       	adiw	r24, 0x01	; 1
   10dc0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10dc4:	ec 14       	cp	r14, r12
   10dc6:	fd 04       	cpc	r15, r13
   10dc8:	89 f7       	brne	.-30     	; 0x10dac <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8+0x2e>
   10dca:	c8 01       	movw	r24, r16
   10dcc:	0f 90       	pop	r0
   10dce:	0f 90       	pop	r0
   10dd0:	df 91       	pop	r29
   10dd2:	cf 91       	pop	r28
   10dd4:	1f 91       	pop	r17
   10dd6:	0f 91       	pop	r16
   10dd8:	ff 90       	pop	r15
   10dda:	ef 90       	pop	r14
   10ddc:	df 90       	pop	r13
   10dde:	cf 90       	pop	r12
   10de0:	bf 90       	pop	r11
   10de2:	af 90       	pop	r10
   10de4:	08 95       	ret

00010de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>:
   10de6:	ef 92       	push	r14
   10de8:	ff 92       	push	r15
   10dea:	0f 93       	push	r16
   10dec:	1f 93       	push	r17
   10dee:	cf 93       	push	r28
   10df0:	df 93       	push	r29
   10df2:	1f 92       	push	r1
   10df4:	1f 92       	push	r1
   10df6:	cd b7       	in	r28, 0x3d	; 61
   10df8:	de b7       	in	r29, 0x3e	; 62
   10dfa:	8c 01       	movw	r16, r24
   10dfc:	8e ea       	ldi	r24, 0xAE	; 174
   10dfe:	e8 2e       	mov	r14, r24
   10e00:	83 e1       	ldi	r24, 0x13	; 19
   10e02:	f8 2e       	mov	r15, r24
   10e04:	f7 01       	movw	r30, r14
   10e06:	66 89       	ldd	r22, Z+22	; 0x16
   10e08:	1a 83       	std	Y+2, r17	; 0x02
   10e0a:	09 83       	std	Y+1, r16	; 0x01
   10e0c:	ce 01       	movw	r24, r28
   10e0e:	01 96       	adiw	r24, 0x01	; 1
   10e10:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10e14:	f7 01       	movw	r30, r14
   10e16:	67 89       	ldd	r22, Z+23	; 0x17
   10e18:	0f 5f       	subi	r16, 0xFF	; 255
   10e1a:	1f 4f       	sbci	r17, 0xFF	; 255
   10e1c:	1a 83       	std	Y+2, r17	; 0x02
   10e1e:	09 83       	std	Y+1, r16	; 0x01
   10e20:	ce 01       	movw	r24, r28
   10e22:	01 96       	adiw	r24, 0x01	; 1
   10e24:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10e28:	84 ec       	ldi	r24, 0xC4	; 196
   10e2a:	93 e1       	ldi	r25, 0x13	; 19
   10e2c:	0f 90       	pop	r0
   10e2e:	0f 90       	pop	r0
   10e30:	df 91       	pop	r29
   10e32:	cf 91       	pop	r28
   10e34:	1f 91       	pop	r17
   10e36:	0f 91       	pop	r16
   10e38:	ff 90       	pop	r15
   10e3a:	ef 90       	pop	r14
   10e3c:	08 95       	ret

00010e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>:
   10e3e:	ef 92       	push	r14
   10e40:	ff 92       	push	r15
   10e42:	0f 93       	push	r16
   10e44:	1f 93       	push	r17
   10e46:	cf 93       	push	r28
   10e48:	df 93       	push	r29
   10e4a:	1f 92       	push	r1
   10e4c:	1f 92       	push	r1
   10e4e:	cd b7       	in	r28, 0x3d	; 61
   10e50:	de b7       	in	r29, 0x3e	; 62
   10e52:	83 e9       	ldi	r24, 0x93	; 147
   10e54:	e8 2e       	mov	r14, r24
   10e56:	84 e1       	ldi	r24, 0x14	; 20
   10e58:	f8 2e       	mov	r15, r24
   10e5a:	08 e8       	ldi	r16, 0x88	; 136
   10e5c:	1e e0       	ldi	r17, 0x0E	; 14
   10e5e:	f7 01       	movw	r30, r14
   10e60:	61 91       	ld	r22, Z+
   10e62:	7f 01       	movw	r14, r30
   10e64:	1a 83       	std	Y+2, r17	; 0x02
   10e66:	09 83       	std	Y+1, r16	; 0x01
   10e68:	ce 01       	movw	r24, r28
   10e6a:	01 96       	adiw	r24, 0x01	; 1
   10e6c:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10e70:	0f 5f       	subi	r16, 0xFF	; 255
   10e72:	1f 4f       	sbci	r17, 0xFF	; 255
   10e74:	0d 38       	cpi	r16, 0x8D	; 141
   10e76:	fe e0       	ldi	r31, 0x0E	; 14
   10e78:	1f 07       	cpc	r17, r31
   10e7a:	89 f7       	brne	.-30     	; 0x10e5e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40+0x20>
   10e7c:	83 e9       	ldi	r24, 0x93	; 147
   10e7e:	94 e1       	ldi	r25, 0x14	; 20
   10e80:	0f 90       	pop	r0
   10e82:	0f 90       	pop	r0
   10e84:	df 91       	pop	r29
   10e86:	cf 91       	pop	r28
   10e88:	1f 91       	pop	r17
   10e8a:	0f 91       	pop	r16
   10e8c:	ff 90       	pop	r15
   10e8e:	ef 90       	pop	r14
   10e90:	08 95       	ret

00010e92 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>:
   10e92:	ef 92       	push	r14
   10e94:	ff 92       	push	r15
   10e96:	0f 93       	push	r16
   10e98:	1f 93       	push	r17
   10e9a:	cf 93       	push	r28
   10e9c:	df 93       	push	r29
   10e9e:	1f 92       	push	r1
   10ea0:	1f 92       	push	r1
   10ea2:	cd b7       	in	r28, 0x3d	; 61
   10ea4:	de b7       	in	r29, 0x3e	; 62
   10ea6:	8e e1       	ldi	r24, 0x1E	; 30
   10ea8:	e8 2e       	mov	r14, r24
   10eaa:	89 e0       	ldi	r24, 0x09	; 9
   10eac:	f8 2e       	mov	r15, r24
   10eae:	0a e1       	ldi	r16, 0x1A	; 26
   10eb0:	15 e0       	ldi	r17, 0x05	; 5
   10eb2:	f7 01       	movw	r30, r14
   10eb4:	61 91       	ld	r22, Z+
   10eb6:	7f 01       	movw	r14, r30
   10eb8:	1a 83       	std	Y+2, r17	; 0x02
   10eba:	09 83       	std	Y+1, r16	; 0x01
   10ebc:	ce 01       	movw	r24, r28
   10ebe:	01 96       	adiw	r24, 0x01	; 1
   10ec0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10ec4:	0f 5f       	subi	r16, 0xFF	; 255
   10ec6:	1f 4f       	sbci	r17, 0xFF	; 255
   10ec8:	00 3f       	cpi	r16, 0xF0	; 240
   10eca:	f7 e0       	ldi	r31, 0x07	; 7
   10ecc:	1f 07       	cpc	r17, r31
   10ece:	89 f7       	brne	.-30     	; 0x10eb2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42+0x20>
   10ed0:	8e e1       	ldi	r24, 0x1E	; 30
   10ed2:	99 e0       	ldi	r25, 0x09	; 9
   10ed4:	0f 90       	pop	r0
   10ed6:	0f 90       	pop	r0
   10ed8:	df 91       	pop	r29
   10eda:	cf 91       	pop	r28
   10edc:	1f 91       	pop	r17
   10ede:	0f 91       	pop	r16
   10ee0:	ff 90       	pop	r15
   10ee2:	ef 90       	pop	r14
   10ee4:	08 95       	ret

00010ee6 <_Z18Read_Switch_Statusv>:
   10ee6:	61 e0       	ldi	r22, 0x01	; 1
   10ee8:	84 e2       	ldi	r24, 0x24	; 36
   10eea:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   10eee:	86 e2       	ldi	r24, 0x26	; 38
   10ef0:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   10ef4:	30 91 e7 0d 	lds	r19, 0x0DE7	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10ef8:	33 23       	and	r19, r19
   10efa:	b9 f0       	breq	.+46     	; 0x10f2a <_Z18Read_Switch_Statusv+0x44>
   10efc:	90 91 e6 0d 	lds	r25, 0x0DE6	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10f00:	94 30       	cpi	r25, 0x04	; 4
   10f02:	30 f0       	brcs	.+12     	; 0x10f10 <_Z18Read_Switch_Statusv+0x2a>
   10f04:	31 30       	cpi	r19, 0x01	; 1
   10f06:	61 f4       	brne	.+24     	; 0x10f20 <_Z18Read_Switch_Statusv+0x3a>
   10f08:	82 e0       	ldi	r24, 0x02	; 2
   10f0a:	80 93 d8 13 	sts	0x13D8, r24	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10f0e:	08 c0       	rjmp	.+16     	; 0x10f20 <_Z18Read_Switch_Statusv+0x3a>
   10f10:	21 e0       	ldi	r18, 0x01	; 1
   10f12:	82 27       	eor	r24, r18
   10f14:	38 13       	cpse	r19, r24
   10f16:	04 c0       	rjmp	.+8      	; 0x10f20 <_Z18Read_Switch_Statusv+0x3a>
   10f18:	9f 5f       	subi	r25, 0xFF	; 255
   10f1a:	90 93 e6 0d 	sts	0x0DE6, r25	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10f1e:	08 95       	ret
   10f20:	10 92 e6 0d 	sts	0x0DE6, r1	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10f24:	10 92 e7 0d 	sts	0x0DE7, r1	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10f28:	08 95       	ret
   10f2a:	91 e0       	ldi	r25, 0x01	; 1
   10f2c:	89 27       	eor	r24, r25
   10f2e:	80 93 e7 0d 	sts	0x0DE7, r24	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10f32:	81 11       	cpse	r24, r1
   10f34:	0c c0       	rjmp	.+24     	; 0x10f4e <_Z18Read_Switch_Statusv+0x68>
   10f36:	80 91 e5 0d 	lds	r24, 0x0DE5	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10f3a:	84 30       	cpi	r24, 0x04	; 4
   10f3c:	28 f0       	brcs	.+10     	; 0x10f48 <_Z18Read_Switch_Statusv+0x62>
   10f3e:	10 92 e5 0d 	sts	0x0DE5, r1	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10f42:	90 93 d8 13 	sts	0x13D8, r25	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10f46:	08 95       	ret
   10f48:	8f 5f       	subi	r24, 0xFF	; 255
   10f4a:	80 93 e5 0d 	sts	0x0DE5, r24	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10f4e:	08 95       	ret

00010f50 <_Z16Dummy_Data_Storev>:
   10f50:	8f 92       	push	r8
   10f52:	9f 92       	push	r9
   10f54:	af 92       	push	r10
   10f56:	bf 92       	push	r11
   10f58:	cf 92       	push	r12
   10f5a:	df 92       	push	r13
   10f5c:	ef 92       	push	r14
   10f5e:	ff 92       	push	r15
   10f60:	0f 93       	push	r16
   10f62:	1f 93       	push	r17
   10f64:	cf 93       	push	r28
   10f66:	df 93       	push	r29
   10f68:	1f 92       	push	r1
   10f6a:	1f 92       	push	r1
   10f6c:	cd b7       	in	r28, 0x3d	; 61
   10f6e:	de b7       	in	r29, 0x3e	; 62
   10f70:	fe e4       	ldi	r31, 0x4E	; 78
   10f72:	ef 2e       	mov	r14, r31
   10f74:	fd e0       	ldi	r31, 0x0D	; 13
   10f76:	ff 2e       	mov	r15, r31
   10f78:	10 e0       	ldi	r17, 0x00	; 0
   10f7a:	f7 01       	movw	r30, r14
   10f7c:	10 82       	st	Z, r1
   10f7e:	81 2f       	mov	r24, r17
   10f80:	03 d8       	rcall	.-4090   	; 0xff88 <_Z16Lira_Data_EEPROMh>
   10f82:	f6 e0       	ldi	r31, 0x06	; 6
   10f84:	ef 0e       	add	r14, r31
   10f86:	f1 1c       	adc	r15, r1
   10f88:	1f 5f       	subi	r17, 0xFF	; 255
   10f8a:	1e 30       	cpi	r17, 0x0E	; 14
   10f8c:	b1 f7       	brne	.-20     	; 0x10f7a <_Z16Dummy_Data_Storev+0x2a>
   10f8e:	e5 e1       	ldi	r30, 0x15	; 21
   10f90:	ee 2e       	mov	r14, r30
   10f92:	ec e0       	ldi	r30, 0x0C	; 12
   10f94:	fe 2e       	mov	r15, r30
   10f96:	10 e0       	ldi	r17, 0x00	; 0
   10f98:	f7 01       	movw	r30, r14
   10f9a:	10 82       	st	Z, r1
   10f9c:	81 2f       	mov	r24, r17
   10f9e:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   10fa2:	fd e0       	ldi	r31, 0x0D	; 13
   10fa4:	ef 0e       	add	r14, r31
   10fa6:	f1 1c       	adc	r15, r1
   10fa8:	1f 5f       	subi	r17, 0xFF	; 255
   10faa:	16 30       	cpi	r17, 0x06	; 6
   10fac:	a9 f7       	brne	.-22     	; 0x10f98 <_Z16Dummy_Data_Storev+0x48>
   10fae:	69 eb       	ldi	r22, 0xB9	; 185
   10fb0:	7d e0       	ldi	r23, 0x0D	; 13
   10fb2:	8a ed       	ldi	r24, 0xDA	; 218
   10fb4:	94 e0       	ldi	r25, 0x04	; 4
   10fb6:	e3 de       	rcall	.-570    	; 0x10d7e <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10fb8:	64 ec       	ldi	r22, 0xC4	; 196
   10fba:	7d e0       	ldi	r23, 0x0D	; 13
   10fbc:	87 ee       	ldi	r24, 0xE7	; 231
   10fbe:	94 e0       	ldi	r25, 0x04	; 4
   10fc0:	de de       	rcall	.-580    	; 0x10d7e <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10fc2:	89 e0       	ldi	r24, 0x09	; 9
   10fc4:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   10fc8:	69 e6       	ldi	r22, 0x69	; 105
   10fca:	74 e1       	ldi	r23, 0x14	; 20
   10fcc:	88 e1       	ldi	r24, 0x18	; 24
   10fce:	95 e0       	ldi	r25, 0x05	; 5
   10fd0:	bd de       	rcall	.-646    	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10fd2:	82 e0       	ldi	r24, 0x02	; 2
   10fd4:	80 93 71 14 	sts	0x1471, r24	; 0x801471 <_sRuble_Parameters+0xc3>
   10fd8:	61 e7       	ldi	r22, 0x71	; 113
   10fda:	74 e1       	ldi	r23, 0x14	; 20
   10fdc:	89 e1       	ldi	r24, 0x19	; 25
   10fde:	95 e0       	ldi	r25, 0x05	; 5
   10fe0:	b5 de       	rcall	.-662    	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10fe2:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <_sSchedules>
   10fe6:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
   10fea:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_sSchedules+0x2>
   10fee:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10ff2:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
   10ff6:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   10ffa:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <_sSchedules+0x7>
   10ffe:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
   11002:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
   11006:	81 e0       	ldi	r24, 0x01	; 1
   11008:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
   1100c:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
   11010:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
   11014:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
   11018:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
   1101c:	41 e0       	ldi	r20, 0x01	; 1
   1101e:	50 e0       	ldi	r21, 0x00	; 0
   11020:	60 e0       	ldi	r22, 0x00	; 0
   11022:	70 e0       	ldi	r23, 0x00	; 0
   11024:	40 93 31 09 	sts	0x0931, r20	; 0x800931 <_sSchedules+0x13>
   11028:	50 93 32 09 	sts	0x0932, r21	; 0x800932 <_sSchedules+0x14>
   1102c:	60 93 33 09 	sts	0x0933, r22	; 0x800933 <_sSchedules+0x15>
   11030:	70 93 34 09 	sts	0x0934, r23	; 0x800934 <_sSchedules+0x16>
   11034:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
   11038:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
   1103c:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
   11040:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
   11044:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   11048:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <_sSchedules+0x1c>
   1104c:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <_sSchedules+0x1d>
   11050:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
   11054:	80 e0       	ldi	r24, 0x00	; 0
   11056:	90 e0       	ldi	r25, 0x00	; 0
   11058:	fc 01       	movw	r30, r24
   1105a:	ee 0f       	add	r30, r30
   1105c:	ff 1f       	adc	r31, r31
   1105e:	e2 5e       	subi	r30, 0xE2	; 226
   11060:	f6 4f       	sbci	r31, 0xF6	; 246
   11062:	10 a2       	std	Z+32, r1	; 0x20
   11064:	17 8e       	std	Z+31, r1	; 0x1f
   11066:	01 96       	adiw	r24, 0x01	; 1
   11068:	8f 30       	cpi	r24, 0x0F	; 15
   1106a:	91 05       	cpc	r25, r1
   1106c:	a9 f7       	brne	.-22     	; 0x11058 <_Z16Dummy_Data_Storev+0x108>
   1106e:	80 e0       	ldi	r24, 0x00	; 0
   11070:	90 e0       	ldi	r25, 0x00	; 0
   11072:	fc 01       	movw	r30, r24
   11074:	e2 5e       	subi	r30, 0xE2	; 226
   11076:	f6 4f       	sbci	r31, 0xF6	; 246
   11078:	15 ae       	std	Z+61, r1	; 0x3d
   1107a:	01 96       	adiw	r24, 0x01	; 1
   1107c:	8f 30       	cpi	r24, 0x0F	; 15
   1107e:	91 05       	cpc	r25, r1
   11080:	c1 f7       	brne	.-16     	; 0x11072 <_Z16Dummy_Data_Storev+0x122>
   11082:	80 e0       	ldi	r24, 0x00	; 0
   11084:	90 e0       	ldi	r25, 0x00	; 0
   11086:	fc 01       	movw	r30, r24
   11088:	e6 59       	subi	r30, 0x96	; 150
   1108a:	f6 4f       	sbci	r31, 0xF6	; 246
   1108c:	10 82       	st	Z, r1
   1108e:	01 96       	adiw	r24, 0x01	; 1
   11090:	8f 30       	cpi	r24, 0x0F	; 15
   11092:	91 05       	cpc	r25, r1
   11094:	c1 f7       	brne	.-16     	; 0x11086 <_Z16Dummy_Data_Storev+0x136>
   11096:	80 e0       	ldi	r24, 0x00	; 0
   11098:	90 e0       	ldi	r25, 0x00	; 0
   1109a:	9c 01       	movw	r18, r24
   1109c:	22 5e       	subi	r18, 0xE2	; 226
   1109e:	36 4f       	sbci	r19, 0xF6	; 246
   110a0:	f9 01       	movw	r30, r18
   110a2:	e5 5a       	subi	r30, 0xA5	; 165
   110a4:	ff 4f       	sbci	r31, 0xFF	; 255
   110a6:	10 82       	st	Z, r1
   110a8:	3f 96       	adiw	r30, 0x0f	; 15
   110aa:	10 82       	st	Z, r1
   110ac:	01 96       	adiw	r24, 0x01	; 1
   110ae:	8f 30       	cpi	r24, 0x0F	; 15
   110b0:	91 05       	cpc	r25, r1
   110b2:	99 f7       	brne	.-26     	; 0x1109a <_Z16Dummy_Data_Storev+0x14a>
   110b4:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   110b8:	80 e0       	ldi	r24, 0x00	; 0
   110ba:	90 e0       	ldi	r25, 0x00	; 0
   110bc:	fc 01       	movw	r30, r24
   110be:	e8 56       	subi	r30, 0x68	; 104
   110c0:	f6 4f       	sbci	r31, 0xF6	; 246
   110c2:	10 82       	st	Z, r1
   110c4:	01 96       	adiw	r24, 0x01	; 1
   110c6:	8b 32       	cpi	r24, 0x2B	; 43
   110c8:	91 05       	cpc	r25, r1
   110ca:	c1 f7       	brne	.-16     	; 0x110bc <_Z16Dummy_Data_Storev+0x16c>
   110cc:	80 e0       	ldi	r24, 0x00	; 0
   110ce:	90 e0       	ldi	r25, 0x00	; 0
   110d0:	fc 01       	movw	r30, r24
   110d2:	e8 56       	subi	r30, 0x68	; 104
   110d4:	f6 4f       	sbci	r31, 0xF6	; 246
   110d6:	10 82       	st	Z, r1
   110d8:	01 96       	adiw	r24, 0x01	; 1
   110da:	8b 32       	cpi	r24, 0x2B	; 43
   110dc:	91 05       	cpc	r25, r1
   110de:	c1 f7       	brne	.-16     	; 0x110d0 <_Z16Dummy_Data_Storev+0x180>
   110e0:	80 e0       	ldi	r24, 0x00	; 0
   110e2:	90 e0       	ldi	r25, 0x00	; 0
   110e4:	fc 01       	movw	r30, r24
   110e6:	ee 0f       	add	r30, r30
   110e8:	ff 1f       	adc	r31, r31
   110ea:	ed 53       	subi	r30, 0x3D	; 61
   110ec:	f6 4f       	sbci	r31, 0xF6	; 246
   110ee:	11 82       	std	Z+1, r1	; 0x01
   110f0:	10 82       	st	Z, r1
   110f2:	01 96       	adiw	r24, 0x01	; 1
   110f4:	8b 32       	cpi	r24, 0x2B	; 43
   110f6:	91 05       	cpc	r25, r1
   110f8:	a9 f7       	brne	.-22     	; 0x110e4 <_Z16Dummy_Data_Storev+0x194>
   110fa:	80 e0       	ldi	r24, 0x00	; 0
   110fc:	90 e0       	ldi	r25, 0x00	; 0
   110fe:	fc 01       	movw	r30, r24
   11100:	ee 0f       	add	r30, r30
   11102:	ff 1f       	adc	r31, r31
   11104:	e7 5e       	subi	r30, 0xE7	; 231
   11106:	f5 4f       	sbci	r31, 0xF5	; 245
   11108:	11 82       	std	Z+1, r1	; 0x01
   1110a:	10 82       	st	Z, r1
   1110c:	01 96       	adiw	r24, 0x01	; 1
   1110e:	8b 32       	cpi	r24, 0x2B	; 43
   11110:	91 05       	cpc	r25, r1
   11112:	a9 f7       	brne	.-22     	; 0x110fe <_Z16Dummy_Data_Storev+0x1ae>
   11114:	80 e0       	ldi	r24, 0x00	; 0
   11116:	90 e0       	ldi	r25, 0x00	; 0
   11118:	fc 01       	movw	r30, r24
   1111a:	e1 59       	subi	r30, 0x91	; 145
   1111c:	f5 4f       	sbci	r31, 0xF5	; 245
   1111e:	10 82       	st	Z, r1
   11120:	01 96       	adiw	r24, 0x01	; 1
   11122:	8b 32       	cpi	r24, 0x2B	; 43
   11124:	91 05       	cpc	r25, r1
   11126:	c1 f7       	brne	.-16     	; 0x11118 <_Z16Dummy_Data_Storev+0x1c8>
   11128:	80 e0       	ldi	r24, 0x00	; 0
   1112a:	90 e0       	ldi	r25, 0x00	; 0
   1112c:	fc 01       	movw	r30, r24
   1112e:	ee 0f       	add	r30, r30
   11130:	ff 1f       	adc	r31, r31
   11132:	eb 53       	subi	r30, 0x3B	; 59
   11134:	f5 4f       	sbci	r31, 0xF5	; 245
   11136:	11 82       	std	Z+1, r1	; 0x01
   11138:	10 82       	st	Z, r1
   1113a:	01 96       	adiw	r24, 0x01	; 1
   1113c:	8b 32       	cpi	r24, 0x2B	; 43
   1113e:	91 05       	cpc	r25, r1
   11140:	a9 f7       	brne	.-22     	; 0x1112c <_Z16Dummy_Data_Storev+0x1dc>
   11142:	80 e0       	ldi	r24, 0x00	; 0
   11144:	90 e0       	ldi	r25, 0x00	; 0
   11146:	fc 01       	movw	r30, r24
   11148:	ee 0f       	add	r30, r30
   1114a:	ff 1f       	adc	r31, r31
   1114c:	e5 5e       	subi	r30, 0xE5	; 229
   1114e:	f4 4f       	sbci	r31, 0xF4	; 244
   11150:	11 82       	std	Z+1, r1	; 0x01
   11152:	10 82       	st	Z, r1
   11154:	01 96       	adiw	r24, 0x01	; 1
   11156:	8b 32       	cpi	r24, 0x2B	; 43
   11158:	91 05       	cpc	r25, r1
   1115a:	a9 f7       	brne	.-22     	; 0x11146 <_Z16Dummy_Data_Storev+0x1f6>
   1115c:	10 92 71 0b 	sts	0x0B71, r1	; 0x800b71 <_sSchedules+0x253>
   11160:	10 92 72 0b 	sts	0x0B72, r1	; 0x800b72 <_sSchedules+0x254>
   11164:	10 92 73 0b 	sts	0x0B73, r1	; 0x800b73 <_sSchedules+0x255>
   11168:	10 92 74 0b 	sts	0x0B74, r1	; 0x800b74 <_sSchedules+0x256>
   1116c:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
   11170:	10 92 77 0b 	sts	0x0B77, r1	; 0x800b77 <_sSchedules+0x259>
   11174:	10 92 76 0b 	sts	0x0B76, r1	; 0x800b76 <_sSchedules+0x258>
   11178:	10 92 79 0b 	sts	0x0B79, r1	; 0x800b79 <_sSchedules+0x25b>
   1117c:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   11180:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
   11184:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
   11188:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
   1118c:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
   11190:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
   11194:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
   11198:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
   1119c:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
   111a0:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
   111a4:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
   111a8:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
   111ac:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
   111b0:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
   111b4:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
   111b8:	10 92 89 0b 	sts	0x0B89, r1	; 0x800b89 <_sSchedules+0x26b>
   111bc:	10 92 88 0b 	sts	0x0B88, r1	; 0x800b88 <_sSchedules+0x26a>
   111c0:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
   111c4:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   111c8:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
   111cc:	10 92 91 0b 	sts	0x0B91, r1	; 0x800b91 <_sSchedules+0x273>
   111d0:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   111d4:	10 92 93 0b 	sts	0x0B93, r1	; 0x800b93 <_sSchedules+0x275>
   111d8:	10 92 94 0b 	sts	0x0B94, r1	; 0x800b94 <_sSchedules+0x276>
   111dc:	10 92 95 0b 	sts	0x0B95, r1	; 0x800b95 <_sSchedules+0x277>
   111e0:	10 92 96 0b 	sts	0x0B96, r1	; 0x800b96 <_sSchedules+0x278>
   111e4:	10 92 97 0b 	sts	0x0B97, r1	; 0x800b97 <_sSchedules+0x279>
   111e8:	10 92 98 0b 	sts	0x0B98, r1	; 0x800b98 <_sSchedules+0x27a>
   111ec:	10 92 99 0b 	sts	0x0B99, r1	; 0x800b99 <_sSchedules+0x27b>
   111f0:	80 e0       	ldi	r24, 0x00	; 0
   111f2:	90 e0       	ldi	r25, 0x00	; 0
   111f4:	fc 01       	movw	r30, r24
   111f6:	ee 0f       	add	r30, r30
   111f8:	ff 1f       	adc	r31, r31
   111fa:	e6 56       	subi	r30, 0x66	; 102
   111fc:	f4 4f       	sbci	r31, 0xF4	; 244
   111fe:	11 82       	std	Z+1, r1	; 0x01
   11200:	10 82       	st	Z, r1
   11202:	01 96       	adiw	r24, 0x01	; 1
   11204:	8f 30       	cpi	r24, 0x0F	; 15
   11206:	91 05       	cpc	r25, r1
   11208:	a9 f7       	brne	.-22     	; 0x111f4 <_Z16Dummy_Data_Storev+0x2a4>
   1120a:	80 e0       	ldi	r24, 0x00	; 0
   1120c:	90 e0       	ldi	r25, 0x00	; 0
   1120e:	fc 01       	movw	r30, r24
   11210:	e8 54       	subi	r30, 0x48	; 72
   11212:	f4 4f       	sbci	r31, 0xF4	; 244
   11214:	10 82       	st	Z, r1
   11216:	01 96       	adiw	r24, 0x01	; 1
   11218:	8f 30       	cpi	r24, 0x0F	; 15
   1121a:	91 05       	cpc	r25, r1
   1121c:	c1 f7       	brne	.-16     	; 0x1120e <_Z16Dummy_Data_Storev+0x2be>
   1121e:	80 e0       	ldi	r24, 0x00	; 0
   11220:	90 e0       	ldi	r25, 0x00	; 0
   11222:	fc 01       	movw	r30, r24
   11224:	e9 53       	subi	r30, 0x39	; 57
   11226:	f4 4f       	sbci	r31, 0xF4	; 244
   11228:	10 82       	st	Z, r1
   1122a:	01 96       	adiw	r24, 0x01	; 1
   1122c:	8f 30       	cpi	r24, 0x0F	; 15
   1122e:	91 05       	cpc	r25, r1
   11230:	c1 f7       	brne	.-16     	; 0x11222 <_Z16Dummy_Data_Storev+0x2d2>
   11232:	80 e0       	ldi	r24, 0x00	; 0
   11234:	90 e0       	ldi	r25, 0x00	; 0
   11236:	fc 01       	movw	r30, r24
   11238:	e9 53       	subi	r30, 0x39	; 57
   1123a:	f4 4f       	sbci	r31, 0xF4	; 244
   1123c:	10 82       	st	Z, r1
   1123e:	01 96       	adiw	r24, 0x01	; 1
   11240:	8b 32       	cpi	r24, 0x2B	; 43
   11242:	91 05       	cpc	r25, r1
   11244:	c1 f7       	brne	.-16     	; 0x11236 <_Z16Dummy_Data_Storev+0x2e6>
   11246:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   1124a:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   1124e:	10 92 8e 0b 	sts	0x0B8E, r1	; 0x800b8e <_sSchedules+0x270>
   11252:	10 92 8f 0b 	sts	0x0B8F, r1	; 0x800b8f <_sSchedules+0x271>
   11256:	10 92 90 0b 	sts	0x0B90, r1	; 0x800b90 <_sSchedules+0x272>
   1125a:	1b de       	rcall	.-970    	; 0x10e92 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   1125c:	98 ee       	ldi	r25, 0xE8	; 232
   1125e:	e9 2e       	mov	r14, r25
   11260:	9d e0       	ldi	r25, 0x0D	; 13
   11262:	f9 2e       	mov	r15, r25
   11264:	01 ef       	ldi	r16, 0xF1	; 241
   11266:	19 e0       	ldi	r17, 0x09	; 9
   11268:	f7 01       	movw	r30, r14
   1126a:	11 82       	std	Z+1, r1	; 0x01
   1126c:	10 92 ed 0d 	sts	0x0DED, r1	; 0x800ded <_sExtra_Plot+0x5>
   11270:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x21>
   11274:	10 92 25 0e 	sts	0x0E25, r1	; 0x800e25 <_sExtra_Plot+0x3d>
   11278:	10 92 41 0e 	sts	0x0E41, r1	; 0x800e41 <_sExtra_Plot+0x59>
   1127c:	10 92 5d 0e 	sts	0x0E5D, r1	; 0x800e5d <_sExtra_Plot+0x75>
   11280:	48 01       	movw	r8, r16
   11282:	fb e1       	ldi	r31, 0x1B	; 27
   11284:	8f 0e       	add	r8, r31
   11286:	91 1c       	adc	r9, r1
   11288:	57 01       	movw	r10, r14
   1128a:	68 01       	movw	r12, r16
   1128c:	f5 01       	movw	r30, r10
   1128e:	61 91       	ld	r22, Z+
   11290:	5f 01       	movw	r10, r30
   11292:	da 82       	std	Y+2, r13	; 0x02
   11294:	c9 82       	std	Y+1, r12	; 0x01
   11296:	ce 01       	movw	r24, r28
   11298:	01 96       	adiw	r24, 0x01	; 1
   1129a:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   1129e:	ff ef       	ldi	r31, 0xFF	; 255
   112a0:	cf 1a       	sub	r12, r31
   112a2:	df 0a       	sbc	r13, r31
   112a4:	8c 14       	cp	r8, r12
   112a6:	9d 04       	cpc	r9, r13
   112a8:	89 f7       	brne	.-30     	; 0x1128c <_Z16Dummy_Data_Storev+0x33c>
   112aa:	8b e1       	ldi	r24, 0x1B	; 27
   112ac:	e8 0e       	add	r14, r24
   112ae:	f1 1c       	adc	r15, r1
   112b0:	02 5e       	subi	r16, 0xE2	; 226
   112b2:	1f 4f       	sbci	r17, 0xFF	; 255
   112b4:	05 39       	cpi	r16, 0x95	; 149
   112b6:	eb e0       	ldi	r30, 0x0B	; 11
   112b8:	1e 07       	cpc	r17, r30
   112ba:	b1 f6       	brne	.-84     	; 0x11268 <_Z16Dummy_Data_Storev+0x318>
   112bc:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   112c0:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   112c4:	86 e9       	ldi	r24, 0x96	; 150
   112c6:	9c e0       	ldi	r25, 0x0C	; 12
   112c8:	8e dd       	rcall	.-1252   	; 0x10de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   112ca:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   112ce:	65 e6       	ldi	r22, 0x65	; 101
   112d0:	74 e1       	ldi	r23, 0x14	; 20
   112d2:	86 e9       	ldi	r24, 0x96	; 150
   112d4:	9c e0       	ldi	r25, 0x0C	; 12
   112d6:	3a dd       	rcall	.-1420   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112d8:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   112dc:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   112e0:	85 e0       	ldi	r24, 0x05	; 5
   112e2:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   112e6:	65 ed       	ldi	r22, 0xD5	; 213
   112e8:	73 e1       	ldi	r23, 0x13	; 19
   112ea:	88 ed       	ldi	r24, 0xD8	; 216
   112ec:	94 e0       	ldi	r25, 0x04	; 4
   112ee:	2e dd       	rcall	.-1444   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112f0:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   112f4:	69 e7       	ldi	r22, 0x79	; 121
   112f6:	74 e1       	ldi	r23, 0x14	; 20
   112f8:	81 ea       	ldi	r24, 0xA1	; 161
   112fa:	9c e0       	ldi	r25, 0x0C	; 12
   112fc:	27 dd       	rcall	.-1458   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112fe:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
   11302:	6b e7       	ldi	r22, 0x7B	; 123
   11304:	74 e1       	ldi	r23, 0x14	; 20
   11306:	88 ea       	ldi	r24, 0xA8	; 168
   11308:	9c e0       	ldi	r25, 0x0C	; 12
   1130a:	20 dd       	rcall	.-1472   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1130c:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   11310:	6c e7       	ldi	r22, 0x7C	; 124
   11312:	74 e1       	ldi	r23, 0x14	; 20
   11314:	8d ea       	ldi	r24, 0xAD	; 173
   11316:	9c e0       	ldi	r25, 0x0C	; 12
   11318:	19 dd       	rcall	.-1486   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1131a:	03 e9       	ldi	r16, 0x93	; 147
   1131c:	14 e1       	ldi	r17, 0x14	; 20
   1131e:	f8 01       	movw	r30, r16
   11320:	11 92       	st	Z+, r1
   11322:	8f 01       	movw	r16, r30
   11324:	8c dd       	rcall	.-1256   	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   11326:	f4 e1       	ldi	r31, 0x14	; 20
   11328:	08 39       	cpi	r16, 0x98	; 152
   1132a:	1f 07       	cpc	r17, r31
   1132c:	c1 f7       	brne	.-16     	; 0x1131e <_Z16Dummy_Data_Storev+0x3ce>
   1132e:	81 e0       	ldi	r24, 0x01	; 1
   11330:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
   11334:	68 e9       	ldi	r22, 0x98	; 152
   11336:	74 e1       	ldi	r23, 0x14	; 20
   11338:	8b ea       	ldi	r24, 0xAB	; 171
   1133a:	9e e0       	ldi	r25, 0x0E	; 14
   1133c:	07 dd       	rcall	.-1522   	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1133e:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   11342:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   11346:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   1134a:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   1134e:	8b e9       	ldi	r24, 0x9B	; 155
   11350:	e8 2e       	mov	r14, r24
   11352:	84 e1       	ldi	r24, 0x14	; 20
   11354:	f8 2e       	mov	r15, r24
   11356:	0d ea       	ldi	r16, 0xAD	; 173
   11358:	1e e0       	ldi	r17, 0x0E	; 14
   1135a:	f7 01       	movw	r30, r14
   1135c:	61 91       	ld	r22, Z+
   1135e:	7f 01       	movw	r14, r30
   11360:	1a 83       	std	Y+2, r17	; 0x02
   11362:	09 83       	std	Y+1, r16	; 0x01
   11364:	ce 01       	movw	r24, r28
   11366:	01 96       	adiw	r24, 0x01	; 1
   11368:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   1136c:	0f 5f       	subi	r16, 0xFF	; 255
   1136e:	1f 4f       	sbci	r17, 0xFF	; 255
   11370:	01 3b       	cpi	r16, 0xB1	; 177
   11372:	fe e0       	ldi	r31, 0x0E	; 14
   11374:	1f 07       	cpc	r17, r31
   11376:	89 f7       	brne	.-30     	; 0x1135a <_Z16Dummy_Data_Storev+0x40a>
   11378:	04 ef       	ldi	r16, 0xF4	; 244
   1137a:	1b e0       	ldi	r17, 0x0B	; 11
   1137c:	f1 2c       	mov	r15, r1
   1137e:	f8 01       	movw	r30, r16
   11380:	11 86       	std	Z+9, r1	; 0x09
   11382:	10 86       	std	Z+8, r1	; 0x08
   11384:	10 82       	st	Z, r1
   11386:	12 86       	std	Z+10, r1	; 0x0a
   11388:	8f 2d       	mov	r24, r15
   1138a:	0e 94 9b 5c 	call	0xb936	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
   1138e:	f3 94       	inc	r15
   11390:	05 5f       	subi	r16, 0xF5	; 245
   11392:	1f 4f       	sbci	r17, 0xFF	; 255
   11394:	f3 e0       	ldi	r31, 0x03	; 3
   11396:	ff 12       	cpse	r15, r31
   11398:	f2 cf       	rjmp	.-28     	; 0x1137e <_Z16Dummy_Data_Storev+0x42e>
   1139a:	0f 90       	pop	r0
   1139c:	0f 90       	pop	r0
   1139e:	df 91       	pop	r29
   113a0:	cf 91       	pop	r28
   113a2:	1f 91       	pop	r17
   113a4:	0f 91       	pop	r16
   113a6:	ff 90       	pop	r15
   113a8:	ef 90       	pop	r14
   113aa:	df 90       	pop	r13
   113ac:	cf 90       	pop	r12
   113ae:	bf 90       	pop	r11
   113b0:	af 90       	pop	r10
   113b2:	9f 90       	pop	r9
   113b4:	8f 90       	pop	r8
   113b6:	08 95       	ret

000113b8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   113b8:	0f 93       	push	r16
   113ba:	1f 93       	push	r17
   113bc:	cf 93       	push	r28
   113be:	df 93       	push	r29
   113c0:	dc 01       	movw	r26, r24
   113c2:	12 96       	adiw	r26, 0x02	; 2
   113c4:	ed 91       	ld	r30, X+
   113c6:	fc 91       	ld	r31, X
   113c8:	13 97       	sbiw	r26, 0x03	; 3
   113ca:	30 97       	sbiw	r30, 0x00	; 0
   113cc:	a1 f0       	breq	.+40     	; 0x113f6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   113ce:	61 15       	cp	r22, r1
   113d0:	71 05       	cpc	r23, r1
   113d2:	31 f0       	breq	.+12     	; 0x113e0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   113d4:	01 90       	ld	r0, Z+
   113d6:	f0 81       	ld	r31, Z
   113d8:	e0 2d       	mov	r30, r0
   113da:	61 50       	subi	r22, 0x01	; 1
   113dc:	71 09       	sbc	r23, r1
   113de:	f5 cf       	rjmp	.-22     	; 0x113ca <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   113e0:	82 81       	ldd	r24, Z+2	; 0x02
   113e2:	83 30       	cpi	r24, 0x03	; 3
   113e4:	08 f0       	brcs	.+2      	; 0x113e8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   113e6:	44 c0       	rjmp	.+136    	; 0x11470 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   113e8:	81 30       	cpi	r24, 0x01	; 1
   113ea:	28 f0       	brcs	.+10     	; 0x113f6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   113ec:	03 80       	ldd	r0, Z+3	; 0x03
   113ee:	f4 81       	ldd	r31, Z+4	; 0x04
   113f0:	e0 2d       	mov	r30, r0
   113f2:	30 97       	sbiw	r30, 0x00	; 0
   113f4:	21 f4       	brne	.+8      	; 0x113fe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   113f6:	60 e0       	ldi	r22, 0x00	; 0
   113f8:	70 e0       	ldi	r23, 0x00	; 0
   113fa:	cb 01       	movw	r24, r22
   113fc:	4f c0       	rjmp	.+158    	; 0x1149c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   113fe:	80 81       	ld	r24, Z
   11400:	84 37       	cpi	r24, 0x74	; 116
   11402:	71 f1       	breq	.+92     	; 0x11460 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   11404:	8b 32       	cpi	r24, 0x2B	; 43
   11406:	29 f0       	breq	.+10     	; 0x11412 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   11408:	8d 32       	cpi	r24, 0x2D	; 45
   1140a:	21 f4       	brne	.+8      	; 0x11414 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   1140c:	31 96       	adiw	r30, 0x01	; 1
   1140e:	d1 e0       	ldi	r29, 0x01	; 1
   11410:	02 c0       	rjmp	.+4      	; 0x11416 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   11412:	31 96       	adiw	r30, 0x01	; 1
   11414:	d0 e0       	ldi	r29, 0x00	; 0
   11416:	20 e0       	ldi	r18, 0x00	; 0
   11418:	30 e0       	ldi	r19, 0x00	; 0
   1141a:	a9 01       	movw	r20, r18
   1141c:	c1 91       	ld	r28, Z+
   1141e:	80 ed       	ldi	r24, 0xD0	; 208
   11420:	8c 0f       	add	r24, r28
   11422:	8a 30       	cpi	r24, 0x0A	; 10
   11424:	98 f4       	brcc	.+38     	; 0x1144c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   11426:	aa e0       	ldi	r26, 0x0A	; 10
   11428:	b0 e0       	ldi	r27, 0x00	; 0
   1142a:	0e 94 0d ec 	call	0x1d81a	; 0x1d81a <__muluhisi3>
   1142e:	2c 2f       	mov	r18, r28
   11430:	30 e0       	ldi	r19, 0x00	; 0
   11432:	20 53       	subi	r18, 0x30	; 48
   11434:	31 09       	sbc	r19, r1
   11436:	89 01       	movw	r16, r18
   11438:	33 0f       	add	r19, r19
   1143a:	22 0b       	sbc	r18, r18
   1143c:	33 0b       	sbc	r19, r19
   1143e:	a9 01       	movw	r20, r18
   11440:	98 01       	movw	r18, r16
   11442:	26 0f       	add	r18, r22
   11444:	37 1f       	adc	r19, r23
   11446:	48 1f       	adc	r20, r24
   11448:	59 1f       	adc	r21, r25
   1144a:	e8 cf       	rjmp	.-48     	; 0x1141c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   1144c:	dd 23       	and	r29, r29
   1144e:	69 f0       	breq	.+26     	; 0x1146a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   11450:	66 27       	eor	r22, r22
   11452:	77 27       	eor	r23, r23
   11454:	cb 01       	movw	r24, r22
   11456:	62 1b       	sub	r22, r18
   11458:	73 0b       	sbc	r23, r19
   1145a:	84 0b       	sbc	r24, r20
   1145c:	95 0b       	sbc	r25, r21
   1145e:	1e c0       	rjmp	.+60     	; 0x1149c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11460:	61 e0       	ldi	r22, 0x01	; 1
   11462:	70 e0       	ldi	r23, 0x00	; 0
   11464:	80 e0       	ldi	r24, 0x00	; 0
   11466:	90 e0       	ldi	r25, 0x00	; 0
   11468:	19 c0       	rjmp	.+50     	; 0x1149c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1146a:	ca 01       	movw	r24, r20
   1146c:	b9 01       	movw	r22, r18
   1146e:	16 c0       	rjmp	.+44     	; 0x1149c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11470:	85 30       	cpi	r24, 0x05	; 5
   11472:	28 f4       	brcc	.+10     	; 0x1147e <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   11474:	63 81       	ldd	r22, Z+3	; 0x03
   11476:	74 81       	ldd	r23, Z+4	; 0x04
   11478:	85 81       	ldd	r24, Z+5	; 0x05
   1147a:	96 81       	ldd	r25, Z+6	; 0x06
   1147c:	0f c0       	rjmp	.+30     	; 0x1149c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1147e:	85 30       	cpi	r24, 0x05	; 5
   11480:	39 f4       	brne	.+14     	; 0x11490 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   11482:	83 81       	ldd	r24, Z+3	; 0x03
   11484:	94 81       	ldd	r25, Z+4	; 0x04
   11486:	a5 81       	ldd	r26, Z+5	; 0x05
   11488:	b6 81       	ldd	r27, Z+6	; 0x06
   1148a:	9c 01       	movw	r18, r24
   1148c:	ad 01       	movw	r20, r26
   1148e:	e0 cf       	rjmp	.-64     	; 0x11450 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   11490:	63 81       	ldd	r22, Z+3	; 0x03
   11492:	74 81       	ldd	r23, Z+4	; 0x04
   11494:	85 81       	ldd	r24, Z+5	; 0x05
   11496:	96 81       	ldd	r25, Z+6	; 0x06
   11498:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   1149c:	df 91       	pop	r29
   1149e:	cf 91       	pop	r28
   114a0:	1f 91       	pop	r17
   114a2:	0f 91       	pop	r16
   114a4:	08 95       	ret

000114a6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   114a6:	fc 01       	movw	r30, r24
   114a8:	a0 81       	ld	r26, Z
   114aa:	b1 81       	ldd	r27, Z+1	; 0x01
   114ac:	8c 91       	ld	r24, X
   114ae:	8d 30       	cpi	r24, 0x0D	; 13
   114b0:	51 f0       	breq	.+20     	; 0x114c6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   114b2:	20 f4       	brcc	.+8      	; 0x114bc <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   114b4:	89 50       	subi	r24, 0x09	; 9
   114b6:	82 30       	cpi	r24, 0x02	; 2
   114b8:	b8 f5       	brcc	.+110    	; 0x11528 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   114ba:	05 c0       	rjmp	.+10     	; 0x114c6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   114bc:	80 32       	cpi	r24, 0x20	; 32
   114be:	19 f0       	breq	.+6      	; 0x114c6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   114c0:	8f 32       	cpi	r24, 0x2F	; 47
   114c2:	19 f0       	breq	.+6      	; 0x114ca <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   114c4:	08 95       	ret
   114c6:	11 96       	adiw	r26, 0x01	; 1
   114c8:	2c c0       	rjmp	.+88     	; 0x11522 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   114ca:	11 96       	adiw	r26, 0x01	; 1
   114cc:	8c 91       	ld	r24, X
   114ce:	11 97       	sbiw	r26, 0x01	; 1
   114d0:	8a 32       	cpi	r24, 0x2A	; 42
   114d2:	19 f0       	breq	.+6      	; 0x114da <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   114d4:	8f 32       	cpi	r24, 0x2F	; 47
   114d6:	d1 f0       	breq	.+52     	; 0x1150c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   114d8:	08 95       	ret
   114da:	11 96       	adiw	r26, 0x01	; 1
   114dc:	b1 83       	std	Z+1, r27	; 0x01
   114de:	a0 83       	st	Z, r26
   114e0:	a0 81       	ld	r26, Z
   114e2:	b1 81       	ldd	r27, Z+1	; 0x01
   114e4:	cd 01       	movw	r24, r26
   114e6:	01 96       	adiw	r24, 0x01	; 1
   114e8:	91 83       	std	Z+1, r25	; 0x01
   114ea:	80 83       	st	Z, r24
   114ec:	11 96       	adiw	r26, 0x01	; 1
   114ee:	8c 91       	ld	r24, X
   114f0:	11 97       	sbiw	r26, 0x01	; 1
   114f2:	88 23       	and	r24, r24
   114f4:	c9 f0       	breq	.+50     	; 0x11528 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   114f6:	8a 32       	cpi	r24, 0x2A	; 42
   114f8:	99 f7       	brne	.-26     	; 0x114e0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   114fa:	12 96       	adiw	r26, 0x02	; 2
   114fc:	8c 91       	ld	r24, X
   114fe:	12 97       	sbiw	r26, 0x02	; 2
   11500:	8f 32       	cpi	r24, 0x2F	; 47
   11502:	71 f7       	brne	.-36     	; 0x114e0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   11504:	13 96       	adiw	r26, 0x03	; 3
   11506:	0d c0       	rjmp	.+26     	; 0x11522 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   11508:	8a 30       	cpi	r24, 0x0A	; 10
   1150a:	71 f2       	breq	.-100    	; 0x114a8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   1150c:	a0 81       	ld	r26, Z
   1150e:	b1 81       	ldd	r27, Z+1	; 0x01
   11510:	cd 01       	movw	r24, r26
   11512:	01 96       	adiw	r24, 0x01	; 1
   11514:	91 83       	std	Z+1, r25	; 0x01
   11516:	80 83       	st	Z, r24
   11518:	11 96       	adiw	r26, 0x01	; 1
   1151a:	8c 91       	ld	r24, X
   1151c:	81 11       	cpse	r24, r1
   1151e:	f4 cf       	rjmp	.-24     	; 0x11508 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   11520:	03 c0       	rjmp	.+6      	; 0x11528 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11522:	b1 83       	std	Z+1, r27	; 0x01
   11524:	a0 83       	st	Z, r26
   11526:	c0 cf       	rjmp	.-128    	; 0x114a8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   11528:	08 95       	ret

0001152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   1152a:	1f 93       	push	r17
   1152c:	cf 93       	push	r28
   1152e:	df 93       	push	r29
   11530:	ec 01       	movw	r28, r24
   11532:	16 2f       	mov	r17, r22
   11534:	b8 df       	rcall	.-144    	; 0x114a6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11536:	e8 81       	ld	r30, Y
   11538:	f9 81       	ldd	r31, Y+1	; 0x01
   1153a:	80 81       	ld	r24, Z
   1153c:	18 13       	cpse	r17, r24
   1153e:	05 c0       	rjmp	.+10     	; 0x1154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   11540:	31 96       	adiw	r30, 0x01	; 1
   11542:	f9 83       	std	Y+1, r31	; 0x01
   11544:	e8 83       	st	Y, r30
   11546:	81 e0       	ldi	r24, 0x01	; 1
   11548:	01 c0       	rjmp	.+2      	; 0x1154c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   1154a:	80 e0       	ldi	r24, 0x00	; 0
   1154c:	df 91       	pop	r29
   1154e:	cf 91       	pop	r28
   11550:	1f 91       	pop	r17
   11552:	08 95       	ret

00011554 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   11554:	0f 93       	push	r16
   11556:	1f 93       	push	r17
   11558:	cf 93       	push	r28
   1155a:	df 93       	push	r29
   1155c:	ec 01       	movw	r28, r24
   1155e:	0c 81       	ldd	r16, Y+4	; 0x04
   11560:	1d 81       	ldd	r17, Y+5	; 0x05
   11562:	02 96       	adiw	r24, 0x02	; 2
   11564:	a0 df       	rcall	.-192    	; 0x114a6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11566:	ea 81       	ldd	r30, Y+2	; 0x02
   11568:	fb 81       	ldd	r31, Y+3	; 0x03
   1156a:	80 81       	ld	r24, Z
   1156c:	87 32       	cpi	r24, 0x27	; 39
   1156e:	31 f1       	breq	.+76     	; 0x115bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11570:	82 32       	cpi	r24, 0x22	; 34
   11572:	21 f1       	breq	.+72     	; 0x115bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11574:	90 ed       	ldi	r25, 0xD0	; 208
   11576:	98 0f       	add	r25, r24
   11578:	9a 30       	cpi	r25, 0x0A	; 10
   1157a:	70 f0       	brcs	.+28     	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1157c:	91 ea       	ldi	r25, 0xA1	; 161
   1157e:	98 0f       	add	r25, r24
   11580:	9c 31       	cpi	r25, 0x1C	; 28
   11582:	50 f0       	brcs	.+20     	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11584:	9f eb       	ldi	r25, 0xBF	; 191
   11586:	98 0f       	add	r25, r24
   11588:	9a 31       	cpi	r25, 0x1A	; 26
   1158a:	30 f0       	brcs	.+12     	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1158c:	8b 32       	cpi	r24, 0x2B	; 43
   1158e:	21 f0       	breq	.+8      	; 0x11598 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11590:	93 ed       	ldi	r25, 0xD3	; 211
   11592:	98 0f       	add	r25, r24
   11594:	92 30       	cpi	r25, 0x02	; 2
   11596:	f0 f5       	brcc	.+124    	; 0x11614 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11598:	2a 81       	ldd	r18, Y+2	; 0x02
   1159a:	3b 81       	ldd	r19, Y+3	; 0x03
   1159c:	2f 5f       	subi	r18, 0xFF	; 255
   1159e:	3f 4f       	sbci	r19, 0xFF	; 255
   115a0:	3b 83       	std	Y+3, r19	; 0x03
   115a2:	2a 83       	std	Y+2, r18	; 0x02
   115a4:	ec 81       	ldd	r30, Y+4	; 0x04
   115a6:	fd 81       	ldd	r31, Y+5	; 0x05
   115a8:	9f 01       	movw	r18, r30
   115aa:	2f 5f       	subi	r18, 0xFF	; 255
   115ac:	3f 4f       	sbci	r19, 0xFF	; 255
   115ae:	3d 83       	std	Y+5, r19	; 0x05
   115b0:	2c 83       	std	Y+4, r18	; 0x04
   115b2:	80 83       	st	Z, r24
   115b4:	ea 81       	ldd	r30, Y+2	; 0x02
   115b6:	fb 81       	ldd	r31, Y+3	; 0x03
   115b8:	80 81       	ld	r24, Z
   115ba:	dc cf       	rjmp	.-72     	; 0x11574 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   115bc:	31 96       	adiw	r30, 0x01	; 1
   115be:	fb 83       	std	Y+3, r31	; 0x03
   115c0:	ea 83       	std	Y+2, r30	; 0x02
   115c2:	ea 81       	ldd	r30, Y+2	; 0x02
   115c4:	fb 81       	ldd	r31, Y+3	; 0x03
   115c6:	90 81       	ld	r25, Z
   115c8:	99 23       	and	r25, r25
   115ca:	21 f1       	breq	.+72     	; 0x11614 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   115cc:	9f 01       	movw	r18, r30
   115ce:	2f 5f       	subi	r18, 0xFF	; 255
   115d0:	3f 4f       	sbci	r19, 0xFF	; 255
   115d2:	3b 83       	std	Y+3, r19	; 0x03
   115d4:	2a 83       	std	Y+2, r18	; 0x02
   115d6:	98 17       	cp	r25, r24
   115d8:	e9 f0       	breq	.+58     	; 0x11614 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   115da:	9c 35       	cpi	r25, 0x5C	; 92
   115dc:	91 f4       	brne	.+36     	; 0x11602 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   115de:	91 81       	ldd	r25, Z+1	; 0x01
   115e0:	a1 ee       	ldi	r26, 0xE1	; 225
   115e2:	b6 e0       	ldi	r27, 0x06	; 6
   115e4:	2c 91       	ld	r18, X
   115e6:	22 23       	and	r18, r18
   115e8:	39 f0       	breq	.+14     	; 0x115f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   115ea:	92 13       	cpse	r25, r18
   115ec:	03 c0       	rjmp	.+6      	; 0x115f4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   115ee:	11 96       	adiw	r26, 0x01	; 1
   115f0:	9c 91       	ld	r25, X
   115f2:	02 c0       	rjmp	.+4      	; 0x115f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   115f4:	12 96       	adiw	r26, 0x02	; 2
   115f6:	f6 cf       	rjmp	.-20     	; 0x115e4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   115f8:	99 23       	and	r25, r25
   115fa:	61 f0       	breq	.+24     	; 0x11614 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   115fc:	32 96       	adiw	r30, 0x02	; 2
   115fe:	fb 83       	std	Y+3, r31	; 0x03
   11600:	ea 83       	std	Y+2, r30	; 0x02
   11602:	ec 81       	ldd	r30, Y+4	; 0x04
   11604:	fd 81       	ldd	r31, Y+5	; 0x05
   11606:	9f 01       	movw	r18, r30
   11608:	2f 5f       	subi	r18, 0xFF	; 255
   1160a:	3f 4f       	sbci	r19, 0xFF	; 255
   1160c:	3d 83       	std	Y+5, r19	; 0x05
   1160e:	2c 83       	std	Y+4, r18	; 0x04
   11610:	90 83       	st	Z, r25
   11612:	d7 cf       	rjmp	.-82     	; 0x115c2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   11614:	ec 81       	ldd	r30, Y+4	; 0x04
   11616:	fd 81       	ldd	r31, Y+5	; 0x05
   11618:	cf 01       	movw	r24, r30
   1161a:	01 96       	adiw	r24, 0x01	; 1
   1161c:	9d 83       	std	Y+5, r25	; 0x05
   1161e:	8c 83       	std	Y+4, r24	; 0x04
   11620:	10 82       	st	Z, r1
   11622:	c8 01       	movw	r24, r16
   11624:	df 91       	pop	r29
   11626:	cf 91       	pop	r28
   11628:	1f 91       	pop	r17
   1162a:	0f 91       	pop	r16
   1162c:	08 95       	ret

0001162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   1162e:	0f 93       	push	r16
   11630:	1f 93       	push	r17
   11632:	cf 93       	push	r28
   11634:	df 93       	push	r29
   11636:	8b 01       	movw	r16, r22
   11638:	fc 01       	movw	r30, r24
   1163a:	c2 81       	ldd	r28, Z+2	; 0x02
   1163c:	d3 81       	ldd	r29, Z+3	; 0x03
   1163e:	20 97       	sbiw	r28, 0x00	; 0
   11640:	a1 f0       	breq	.+40     	; 0x1166a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11642:	8a 81       	ldd	r24, Y+2	; 0x02
   11644:	9b 81       	ldd	r25, Y+3	; 0x03
   11646:	01 15       	cp	r16, r1
   11648:	11 05       	cpc	r17, r1
   1164a:	11 f0       	breq	.+4      	; 0x11650 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   1164c:	00 97       	sbiw	r24, 0x00	; 0
   1164e:	21 f4       	brne	.+8      	; 0x11658 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   11650:	80 17       	cp	r24, r16
   11652:	91 07       	cpc	r25, r17
   11654:	31 f4       	brne	.+12     	; 0x11662 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   11656:	09 c0       	rjmp	.+18     	; 0x1166a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11658:	b8 01       	movw	r22, r16
   1165a:	0e 94 ed ed 	call	0x1dbda	; 0x1dbda <strcmp_P>
   1165e:	89 2b       	or	r24, r25
   11660:	21 f0       	breq	.+8      	; 0x1166a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11662:	09 90       	ld	r0, Y+
   11664:	d8 81       	ld	r29, Y
   11666:	c0 2d       	mov	r28, r0
   11668:	ea cf       	rjmp	.-44     	; 0x1163e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   1166a:	ce 01       	movw	r24, r28
   1166c:	df 91       	pop	r29
   1166e:	cf 91       	pop	r28
   11670:	1f 91       	pop	r17
   11672:	0f 91       	pop	r16
   11674:	08 95       	ret

00011676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   11676:	cf 93       	push	r28
   11678:	df 93       	push	r29
   1167a:	ec 01       	movw	r28, r24
   1167c:	68 81       	ld	r22, Y
   1167e:	79 81       	ldd	r23, Y+1	; 0x01
   11680:	89 e0       	ldi	r24, 0x09	; 9
   11682:	90 e0       	ldi	r25, 0x00	; 0
   11684:	1c db       	rcall	.-2504   	; 0x10cbe <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11686:	00 97       	sbiw	r24, 0x00	; 0
   11688:	21 f0       	breq	.+8      	; 0x11692 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   1168a:	fc 01       	movw	r30, r24
   1168c:	11 82       	std	Z+1, r1	; 0x01
   1168e:	10 82       	st	Z, r1
   11690:	14 82       	std	Z+4, r1	; 0x04
   11692:	ea 81       	ldd	r30, Y+2	; 0x02
   11694:	fb 81       	ldd	r31, Y+3	; 0x03
   11696:	30 97       	sbiw	r30, 0x00	; 0
   11698:	51 f0       	breq	.+20     	; 0x116ae <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   1169a:	20 81       	ld	r18, Z
   1169c:	31 81       	ldd	r19, Z+1	; 0x01
   1169e:	21 15       	cp	r18, r1
   116a0:	31 05       	cpc	r19, r1
   116a2:	11 f0       	breq	.+4      	; 0x116a8 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   116a4:	f9 01       	movw	r30, r18
   116a6:	f9 cf       	rjmp	.-14     	; 0x1169a <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   116a8:	91 83       	std	Z+1, r25	; 0x01
   116aa:	80 83       	st	Z, r24
   116ac:	02 c0       	rjmp	.+4      	; 0x116b2 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   116ae:	9b 83       	std	Y+3, r25	; 0x03
   116b0:	8a 83       	std	Y+2, r24	; 0x02
   116b2:	df 91       	pop	r29
   116b4:	cf 91       	pop	r28
   116b6:	08 95       	ret

000116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   116b8:	cf 92       	push	r12
   116ba:	df 92       	push	r13
   116bc:	ef 92       	push	r14
   116be:	ff 92       	push	r15
   116c0:	0f 93       	push	r16
   116c2:	1f 93       	push	r17
   116c4:	cf 93       	push	r28
   116c6:	df 93       	push	r29
   116c8:	41 15       	cp	r20, r1
   116ca:	51 05       	cpc	r21, r1
   116cc:	e1 f0       	breq	.+56     	; 0x11706 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   116ce:	ea 01       	movw	r28, r20
   116d0:	8b 01       	movw	r16, r22
   116d2:	7c 01       	movw	r14, r24
   116d4:	ca 01       	movw	r24, r20
   116d6:	0e 94 f6 ed 	call	0x1dbec	; 0x1dbec <__strlen_P>
   116da:	01 96       	adiw	r24, 0x01	; 1
   116dc:	6c 01       	movw	r12, r24
   116de:	d7 01       	movw	r26, r14
   116e0:	ed 91       	ld	r30, X+
   116e2:	fc 91       	ld	r31, X
   116e4:	01 90       	ld	r0, Z+
   116e6:	f0 81       	ld	r31, Z
   116e8:	e0 2d       	mov	r30, r0
   116ea:	bc 01       	movw	r22, r24
   116ec:	c7 01       	movw	r24, r14
   116ee:	19 95       	eicall
   116f0:	7c 01       	movw	r14, r24
   116f2:	00 97       	sbiw	r24, 0x00	; 0
   116f4:	69 f0       	breq	.+26     	; 0x11710 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   116f6:	a6 01       	movw	r20, r12
   116f8:	be 01       	movw	r22, r28
   116fa:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <memcpy_P>
   116fe:	f8 01       	movw	r30, r16
   11700:	f1 82       	std	Z+1, r15	; 0x01
   11702:	e0 82       	st	Z, r14
   11704:	03 c0       	rjmp	.+6      	; 0x1170c <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   11706:	db 01       	movw	r26, r22
   11708:	1d 92       	st	X+, r1
   1170a:	1c 92       	st	X, r1
   1170c:	81 e0       	ldi	r24, 0x01	; 1
   1170e:	01 c0       	rjmp	.+2      	; 0x11712 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   11710:	80 e0       	ldi	r24, 0x00	; 0
   11712:	df 91       	pop	r29
   11714:	cf 91       	pop	r28
   11716:	1f 91       	pop	r17
   11718:	0f 91       	pop	r16
   1171a:	ff 90       	pop	r15
   1171c:	ef 90       	pop	r14
   1171e:	df 90       	pop	r13
   11720:	cf 90       	pop	r12
   11722:	08 95       	ret

00011724 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   11724:	cf 92       	push	r12
   11726:	df 92       	push	r13
   11728:	ef 92       	push	r14
   1172a:	ff 92       	push	r15
   1172c:	0f 93       	push	r16
   1172e:	1f 93       	push	r17
   11730:	cf 93       	push	r28
   11732:	df 93       	push	r29
   11734:	61 15       	cp	r22, r1
   11736:	71 05       	cpc	r23, r1
   11738:	11 f4       	brne	.+4      	; 0x1173e <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1173a:	80 e0       	ldi	r24, 0x00	; 0
   1173c:	22 c0       	rjmp	.+68     	; 0x11782 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1173e:	6a 01       	movw	r12, r20
   11740:	7b 01       	movw	r14, r22
   11742:	8c 01       	movw	r16, r24
   11744:	74 df       	rcall	.-280    	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11746:	ec 01       	movw	r28, r24
   11748:	89 2b       	or	r24, r25
   1174a:	79 f4       	brne	.+30     	; 0x1176a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1174c:	c8 01       	movw	r24, r16
   1174e:	93 df       	rcall	.-218    	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11750:	ec 01       	movw	r28, r24
   11752:	00 97       	sbiw	r24, 0x00	; 0
   11754:	91 f3       	breq	.-28     	; 0x1173a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11756:	a7 01       	movw	r20, r14
   11758:	bc 01       	movw	r22, r24
   1175a:	6e 5f       	subi	r22, 0xFE	; 254
   1175c:	7f 4f       	sbci	r23, 0xFF	; 255
   1175e:	f8 01       	movw	r30, r16
   11760:	80 81       	ld	r24, Z
   11762:	91 81       	ldd	r25, Z+1	; 0x01
   11764:	a9 df       	rcall	.-174    	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11766:	88 23       	and	r24, r24
   11768:	41 f3       	breq	.-48     	; 0x1173a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1176a:	f6 01       	movw	r30, r12
   1176c:	80 81       	ld	r24, Z
   1176e:	90 e0       	ldi	r25, 0x00	; 0
   11770:	a0 e0       	ldi	r26, 0x00	; 0
   11772:	b0 e0       	ldi	r27, 0x00	; 0
   11774:	23 e0       	ldi	r18, 0x03	; 3
   11776:	2c 83       	std	Y+4, r18	; 0x04
   11778:	8d 83       	std	Y+5, r24	; 0x05
   1177a:	9e 83       	std	Y+6, r25	; 0x06
   1177c:	af 83       	std	Y+7, r26	; 0x07
   1177e:	b8 87       	std	Y+8, r27	; 0x08
   11780:	81 e0       	ldi	r24, 0x01	; 1
   11782:	df 91       	pop	r29
   11784:	cf 91       	pop	r28
   11786:	1f 91       	pop	r17
   11788:	0f 91       	pop	r16
   1178a:	ff 90       	pop	r15
   1178c:	ef 90       	pop	r14
   1178e:	df 90       	pop	r13
   11790:	cf 90       	pop	r12
   11792:	08 95       	ret

00011794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   11794:	cf 92       	push	r12
   11796:	df 92       	push	r13
   11798:	ef 92       	push	r14
   1179a:	ff 92       	push	r15
   1179c:	0f 93       	push	r16
   1179e:	1f 93       	push	r17
   117a0:	cf 93       	push	r28
   117a2:	df 93       	push	r29
   117a4:	61 15       	cp	r22, r1
   117a6:	71 05       	cpc	r23, r1
   117a8:	11 f4       	brne	.+4      	; 0x117ae <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   117aa:	80 e0       	ldi	r24, 0x00	; 0
   117ac:	22 c0       	rjmp	.+68     	; 0x117f2 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   117ae:	6a 01       	movw	r12, r20
   117b0:	7b 01       	movw	r14, r22
   117b2:	8c 01       	movw	r16, r24
   117b4:	3c df       	rcall	.-392    	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   117b6:	ec 01       	movw	r28, r24
   117b8:	89 2b       	or	r24, r25
   117ba:	79 f4       	brne	.+30     	; 0x117da <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   117bc:	c8 01       	movw	r24, r16
   117be:	5b df       	rcall	.-330    	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   117c0:	ec 01       	movw	r28, r24
   117c2:	00 97       	sbiw	r24, 0x00	; 0
   117c4:	91 f3       	breq	.-28     	; 0x117aa <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   117c6:	a7 01       	movw	r20, r14
   117c8:	bc 01       	movw	r22, r24
   117ca:	6e 5f       	subi	r22, 0xFE	; 254
   117cc:	7f 4f       	sbci	r23, 0xFF	; 255
   117ce:	f8 01       	movw	r30, r16
   117d0:	80 81       	ld	r24, Z
   117d2:	91 81       	ldd	r25, Z+1	; 0x01
   117d4:	71 df       	rcall	.-286    	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   117d6:	88 23       	and	r24, r24
   117d8:	41 f3       	breq	.-48     	; 0x117aa <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   117da:	f6 01       	movw	r30, r12
   117dc:	80 81       	ld	r24, Z
   117de:	91 81       	ldd	r25, Z+1	; 0x01
   117e0:	a0 e0       	ldi	r26, 0x00	; 0
   117e2:	b0 e0       	ldi	r27, 0x00	; 0
   117e4:	24 e0       	ldi	r18, 0x04	; 4
   117e6:	2c 83       	std	Y+4, r18	; 0x04
   117e8:	8d 83       	std	Y+5, r24	; 0x05
   117ea:	9e 83       	std	Y+6, r25	; 0x06
   117ec:	af 83       	std	Y+7, r26	; 0x07
   117ee:	b8 87       	std	Y+8, r27	; 0x08
   117f0:	81 e0       	ldi	r24, 0x01	; 1
   117f2:	df 91       	pop	r29
   117f4:	cf 91       	pop	r28
   117f6:	1f 91       	pop	r17
   117f8:	0f 91       	pop	r16
   117fa:	ff 90       	pop	r15
   117fc:	ef 90       	pop	r14
   117fe:	df 90       	pop	r13
   11800:	cf 90       	pop	r12
   11802:	08 95       	ret

00011804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   11804:	cf 92       	push	r12
   11806:	df 92       	push	r13
   11808:	ef 92       	push	r14
   1180a:	ff 92       	push	r15
   1180c:	0f 93       	push	r16
   1180e:	1f 93       	push	r17
   11810:	cf 93       	push	r28
   11812:	df 93       	push	r29
   11814:	61 15       	cp	r22, r1
   11816:	71 05       	cpc	r23, r1
   11818:	21 f1       	breq	.+72     	; 0x11862 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1181a:	6a 01       	movw	r12, r20
   1181c:	7b 01       	movw	r14, r22
   1181e:	8c 01       	movw	r16, r24
   11820:	06 df       	rcall	.-500    	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11822:	ec 01       	movw	r28, r24
   11824:	89 2b       	or	r24, r25
   11826:	79 f4       	brne	.+30     	; 0x11846 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   11828:	c8 01       	movw	r24, r16
   1182a:	25 df       	rcall	.-438    	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1182c:	ec 01       	movw	r28, r24
   1182e:	00 97       	sbiw	r24, 0x00	; 0
   11830:	c1 f0       	breq	.+48     	; 0x11862 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11832:	a7 01       	movw	r20, r14
   11834:	bc 01       	movw	r22, r24
   11836:	6e 5f       	subi	r22, 0xFE	; 254
   11838:	7f 4f       	sbci	r23, 0xFF	; 255
   1183a:	f8 01       	movw	r30, r16
   1183c:	80 81       	ld	r24, Z
   1183e:	91 81       	ldd	r25, Z+1	; 0x01
   11840:	3b df       	rcall	.-394    	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11842:	88 23       	and	r24, r24
   11844:	71 f0       	breq	.+28     	; 0x11862 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11846:	f6 01       	movw	r30, r12
   11848:	60 81       	ld	r22, Z
   1184a:	71 81       	ldd	r23, Z+1	; 0x01
   1184c:	ce 01       	movw	r24, r28
   1184e:	04 96       	adiw	r24, 0x04	; 4
   11850:	df 91       	pop	r29
   11852:	cf 91       	pop	r28
   11854:	1f 91       	pop	r17
   11856:	0f 91       	pop	r16
   11858:	ff 90       	pop	r15
   1185a:	ef 90       	pop	r14
   1185c:	df 90       	pop	r13
   1185e:	cf 90       	pop	r12
   11860:	00 ca       	rjmp	.-3072   	; 0x10c62 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   11862:	80 e0       	ldi	r24, 0x00	; 0
   11864:	df 91       	pop	r29
   11866:	cf 91       	pop	r28
   11868:	1f 91       	pop	r17
   1186a:	0f 91       	pop	r16
   1186c:	ff 90       	pop	r15
   1186e:	ef 90       	pop	r14
   11870:	df 90       	pop	r13
   11872:	cf 90       	pop	r12
   11874:	08 95       	ret

00011876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   11876:	cf 92       	push	r12
   11878:	df 92       	push	r13
   1187a:	ef 92       	push	r14
   1187c:	ff 92       	push	r15
   1187e:	0f 93       	push	r16
   11880:	1f 93       	push	r17
   11882:	cf 93       	push	r28
   11884:	df 93       	push	r29
   11886:	61 15       	cp	r22, r1
   11888:	71 05       	cpc	r23, r1
   1188a:	11 f4       	brne	.+4      	; 0x11890 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1188c:	80 e0       	ldi	r24, 0x00	; 0
   1188e:	22 c0       	rjmp	.+68     	; 0x118d4 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11890:	6a 01       	movw	r12, r20
   11892:	7b 01       	movw	r14, r22
   11894:	8c 01       	movw	r16, r24
   11896:	cb de       	rcall	.-618    	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11898:	ec 01       	movw	r28, r24
   1189a:	89 2b       	or	r24, r25
   1189c:	79 f4       	brne	.+30     	; 0x118bc <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1189e:	c8 01       	movw	r24, r16
   118a0:	ea de       	rcall	.-556    	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   118a2:	ec 01       	movw	r28, r24
   118a4:	00 97       	sbiw	r24, 0x00	; 0
   118a6:	91 f3       	breq	.-28     	; 0x1188c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   118a8:	a7 01       	movw	r20, r14
   118aa:	bc 01       	movw	r22, r24
   118ac:	6e 5f       	subi	r22, 0xFE	; 254
   118ae:	7f 4f       	sbci	r23, 0xFF	; 255
   118b0:	f8 01       	movw	r30, r16
   118b2:	80 81       	ld	r24, Z
   118b4:	91 81       	ldd	r25, Z+1	; 0x01
   118b6:	00 df       	rcall	.-512    	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   118b8:	88 23       	and	r24, r24
   118ba:	41 f3       	breq	.-48     	; 0x1188c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   118bc:	f6 01       	movw	r30, r12
   118be:	80 81       	ld	r24, Z
   118c0:	90 e0       	ldi	r25, 0x00	; 0
   118c2:	a0 e0       	ldi	r26, 0x00	; 0
   118c4:	b0 e0       	ldi	r27, 0x00	; 0
   118c6:	24 e0       	ldi	r18, 0x04	; 4
   118c8:	2c 83       	std	Y+4, r18	; 0x04
   118ca:	8d 83       	std	Y+5, r24	; 0x05
   118cc:	9e 83       	std	Y+6, r25	; 0x06
   118ce:	af 83       	std	Y+7, r26	; 0x07
   118d0:	b8 87       	std	Y+8, r27	; 0x08
   118d2:	81 e0       	ldi	r24, 0x01	; 1
   118d4:	df 91       	pop	r29
   118d6:	cf 91       	pop	r28
   118d8:	1f 91       	pop	r17
   118da:	0f 91       	pop	r16
   118dc:	ff 90       	pop	r15
   118de:	ef 90       	pop	r14
   118e0:	df 90       	pop	r13
   118e2:	cf 90       	pop	r12
   118e4:	08 95       	ret

000118e6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   118e6:	0f 93       	push	r16
   118e8:	1f 93       	push	r17
   118ea:	cf 93       	push	r28
   118ec:	df 93       	push	r29
   118ee:	8b 01       	movw	r16, r22
   118f0:	fc 01       	movw	r30, r24
   118f2:	c2 81       	ldd	r28, Z+2	; 0x02
   118f4:	d3 81       	ldd	r29, Z+3	; 0x03
   118f6:	20 97       	sbiw	r28, 0x00	; 0
   118f8:	a9 f0       	breq	.+42     	; 0x11924 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   118fa:	6a 81       	ldd	r22, Y+2	; 0x02
   118fc:	7b 81       	ldd	r23, Y+3	; 0x03
   118fe:	01 15       	cp	r16, r1
   11900:	11 05       	cpc	r17, r1
   11902:	19 f0       	breq	.+6      	; 0x1190a <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   11904:	61 15       	cp	r22, r1
   11906:	71 05       	cpc	r23, r1
   11908:	21 f4       	brne	.+8      	; 0x11912 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   1190a:	60 17       	cp	r22, r16
   1190c:	71 07       	cpc	r23, r17
   1190e:	31 f4       	brne	.+12     	; 0x1191c <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   11910:	09 c0       	rjmp	.+18     	; 0x11924 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   11912:	c8 01       	movw	r24, r16
   11914:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   11918:	89 2b       	or	r24, r25
   1191a:	21 f0       	breq	.+8      	; 0x11924 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   1191c:	09 90       	ld	r0, Y+
   1191e:	d8 81       	ld	r29, Y
   11920:	c0 2d       	mov	r28, r0
   11922:	e9 cf       	rjmp	.-46     	; 0x118f6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   11924:	ce 01       	movw	r24, r28
   11926:	df 91       	pop	r29
   11928:	cf 91       	pop	r28
   1192a:	1f 91       	pop	r17
   1192c:	0f 91       	pop	r16
   1192e:	08 95       	ret

00011930 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   11930:	ef 92       	push	r14
   11932:	ff 92       	push	r15
   11934:	0f 93       	push	r16
   11936:	1f 93       	push	r17
   11938:	cf 93       	push	r28
   1193a:	df 93       	push	r29
   1193c:	61 15       	cp	r22, r1
   1193e:	71 05       	cpc	r23, r1
   11940:	c1 f0       	breq	.+48     	; 0x11972 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   11942:	7a 01       	movw	r14, r20
   11944:	eb 01       	movw	r28, r22
   11946:	8c 01       	movw	r16, r24
   11948:	ce df       	rcall	.-100    	; 0x118e6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1194a:	00 97       	sbiw	r24, 0x00	; 0
   1194c:	39 f4       	brne	.+14     	; 0x1195c <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   1194e:	c8 01       	movw	r24, r16
   11950:	92 de       	rcall	.-732    	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11952:	00 97       	sbiw	r24, 0x00	; 0
   11954:	71 f0       	breq	.+28     	; 0x11972 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   11956:	fc 01       	movw	r30, r24
   11958:	d3 83       	std	Z+3, r29	; 0x03
   1195a:	c2 83       	std	Z+2, r28	; 0x02
   1195c:	f7 01       	movw	r30, r14
   1195e:	60 81       	ld	r22, Z
   11960:	71 81       	ldd	r23, Z+1	; 0x01
   11962:	04 96       	adiw	r24, 0x04	; 4
   11964:	df 91       	pop	r29
   11966:	cf 91       	pop	r28
   11968:	1f 91       	pop	r17
   1196a:	0f 91       	pop	r16
   1196c:	ff 90       	pop	r15
   1196e:	ef 90       	pop	r14
   11970:	78 c9       	rjmp	.-3344   	; 0x10c62 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   11972:	80 e0       	ldi	r24, 0x00	; 0
   11974:	df 91       	pop	r29
   11976:	cf 91       	pop	r28
   11978:	1f 91       	pop	r17
   1197a:	0f 91       	pop	r16
   1197c:	ff 90       	pop	r15
   1197e:	ef 90       	pop	r14
   11980:	08 95       	ret

00011982 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   11982:	cf 92       	push	r12
   11984:	df 92       	push	r13
   11986:	ef 92       	push	r14
   11988:	ff 92       	push	r15
   1198a:	0f 93       	push	r16
   1198c:	1f 93       	push	r17
   1198e:	cf 93       	push	r28
   11990:	df 93       	push	r29
   11992:	00 d0       	rcall	.+0      	; 0x11994 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   11994:	1f 92       	push	r1
   11996:	1f 92       	push	r1
   11998:	cd b7       	in	r28, 0x3d	; 61
   1199a:	de b7       	in	r29, 0x3e	; 62
   1199c:	7c 01       	movw	r14, r24
   1199e:	fc 01       	movw	r30, r24
   119a0:	86 81       	ldd	r24, Z+6	; 0x06
   119a2:	88 23       	and	r24, r24
   119a4:	09 f4       	brne	.+2      	; 0x119a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   119a6:	67 c0       	rjmp	.+206    	; 0x11a76 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   119a8:	81 50       	subi	r24, 0x01	; 1
   119aa:	f7 01       	movw	r30, r14
   119ac:	86 83       	std	Z+6, r24	; 0x06
   119ae:	00 81       	ld	r16, Z
   119b0:	11 81       	ldd	r17, Z+1	; 0x01
   119b2:	b8 01       	movw	r22, r16
   119b4:	84 e0       	ldi	r24, 0x04	; 4
   119b6:	90 e0       	ldi	r25, 0x00	; 0
   119b8:	82 d9       	rcall	.-3324   	; 0x10cbe <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   119ba:	00 97       	sbiw	r24, 0x00	; 0
   119bc:	09 f4       	brne	.+2      	; 0x119c0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   119be:	5d c0       	rjmp	.+186    	; 0x11a7a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   119c0:	fc 01       	movw	r30, r24
   119c2:	11 83       	std	Z+1, r17	; 0x01
   119c4:	00 83       	st	Z, r16
   119c6:	13 82       	std	Z+3, r1	; 0x03
   119c8:	12 82       	std	Z+2, r1	; 0x02
   119ca:	8c 01       	movw	r16, r24
   119cc:	67 01       	movw	r12, r14
   119ce:	f2 e0       	ldi	r31, 0x02	; 2
   119d0:	cf 0e       	add	r12, r31
   119d2:	d1 1c       	adc	r13, r1
   119d4:	6b e5       	ldi	r22, 0x5B	; 91
   119d6:	c6 01       	movw	r24, r12
   119d8:	a8 dd       	rcall	.-1200   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119da:	88 23       	and	r24, r24
   119dc:	09 f4       	brne	.+2      	; 0x119e0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   119de:	4b c0       	rjmp	.+150    	; 0x11a76 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   119e0:	6d e5       	ldi	r22, 0x5D	; 93
   119e2:	c6 01       	movw	r24, r12
   119e4:	a2 dd       	rcall	.-1212   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119e6:	81 11       	cpse	r24, r1
   119e8:	40 c0       	rjmp	.+128    	; 0x11a6a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   119ea:	19 82       	std	Y+1, r1	; 0x01
   119ec:	be 01       	movw	r22, r28
   119ee:	6f 5f       	subi	r22, 0xFF	; 255
   119f0:	7f 4f       	sbci	r23, 0xFF	; 255
   119f2:	c7 01       	movw	r24, r14
   119f4:	52 d0       	rcall	.+164    	; 0x11a9a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   119f6:	88 23       	and	r24, r24
   119f8:	09 f4       	brne	.+2      	; 0x119fc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   119fa:	3d c0       	rjmp	.+122    	; 0x11a76 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   119fc:	f8 01       	movw	r30, r16
   119fe:	60 81       	ld	r22, Z
   11a00:	71 81       	ldd	r23, Z+1	; 0x01
   11a02:	87 e0       	ldi	r24, 0x07	; 7
   11a04:	90 e0       	ldi	r25, 0x00	; 0
   11a06:	5b d9       	rcall	.-3402   	; 0x10cbe <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11a08:	dc 01       	movw	r26, r24
   11a0a:	89 2b       	or	r24, r25
   11a0c:	31 f0       	breq	.+12     	; 0x11a1a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   11a0e:	11 96       	adiw	r26, 0x01	; 1
   11a10:	1c 92       	st	X, r1
   11a12:	1e 92       	st	-X, r1
   11a14:	12 96       	adiw	r26, 0x02	; 2
   11a16:	1c 92       	st	X, r1
   11a18:	12 97       	sbiw	r26, 0x02	; 2
   11a1a:	f8 01       	movw	r30, r16
   11a1c:	22 81       	ldd	r18, Z+2	; 0x02
   11a1e:	33 81       	ldd	r19, Z+3	; 0x03
   11a20:	21 15       	cp	r18, r1
   11a22:	31 05       	cpc	r19, r1
   11a24:	51 f0       	breq	.+20     	; 0x11a3a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   11a26:	f9 01       	movw	r30, r18
   11a28:	80 81       	ld	r24, Z
   11a2a:	91 81       	ldd	r25, Z+1	; 0x01
   11a2c:	00 97       	sbiw	r24, 0x00	; 0
   11a2e:	11 f0       	breq	.+4      	; 0x11a34 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   11a30:	9c 01       	movw	r18, r24
   11a32:	f9 cf       	rjmp	.-14     	; 0x11a26 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   11a34:	b1 83       	std	Z+1, r27	; 0x01
   11a36:	a0 83       	st	Z, r26
   11a38:	03 c0       	rjmp	.+6      	; 0x11a40 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   11a3a:	f8 01       	movw	r30, r16
   11a3c:	b3 83       	std	Z+3, r27	; 0x03
   11a3e:	a2 83       	std	Z+2, r26	; 0x02
   11a40:	10 97       	sbiw	r26, 0x00	; 0
   11a42:	c9 f0       	breq	.+50     	; 0x11a76 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11a44:	85 e0       	ldi	r24, 0x05	; 5
   11a46:	fe 01       	movw	r30, r28
   11a48:	31 96       	adiw	r30, 0x01	; 1
   11a4a:	12 96       	adiw	r26, 0x02	; 2
   11a4c:	01 90       	ld	r0, Z+
   11a4e:	0d 92       	st	X+, r0
   11a50:	8a 95       	dec	r24
   11a52:	e1 f7       	brne	.-8      	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   11a54:	6d e5       	ldi	r22, 0x5D	; 93
   11a56:	c6 01       	movw	r24, r12
   11a58:	68 dd       	rcall	.-1328   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11a5a:	81 11       	cpse	r24, r1
   11a5c:	06 c0       	rjmp	.+12     	; 0x11a6a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   11a5e:	6c e2       	ldi	r22, 0x2C	; 44
   11a60:	c6 01       	movw	r24, r12
   11a62:	63 dd       	rcall	.-1338   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11a64:	81 11       	cpse	r24, r1
   11a66:	c1 cf       	rjmp	.-126    	; 0x119ea <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   11a68:	06 c0       	rjmp	.+12     	; 0x11a76 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11a6a:	f7 01       	movw	r30, r14
   11a6c:	86 81       	ldd	r24, Z+6	; 0x06
   11a6e:	8f 5f       	subi	r24, 0xFF	; 255
   11a70:	86 83       	std	Z+6, r24	; 0x06
   11a72:	c8 01       	movw	r24, r16
   11a74:	04 c0       	rjmp	.+8      	; 0x11a7e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11a76:	32 d9       	rcall	.-3484   	; 0x10cdc <_ZN11ArduinoJson9JsonArray7invalidEv>
   11a78:	02 c0       	rjmp	.+4      	; 0x11a7e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11a7a:	30 d9       	rcall	.-3488   	; 0x10cdc <_ZN11ArduinoJson9JsonArray7invalidEv>
   11a7c:	a6 cf       	rjmp	.-180    	; 0x119ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   11a7e:	0f 90       	pop	r0
   11a80:	0f 90       	pop	r0
   11a82:	0f 90       	pop	r0
   11a84:	0f 90       	pop	r0
   11a86:	0f 90       	pop	r0
   11a88:	df 91       	pop	r29
   11a8a:	cf 91       	pop	r28
   11a8c:	1f 91       	pop	r17
   11a8e:	0f 91       	pop	r16
   11a90:	ff 90       	pop	r15
   11a92:	ef 90       	pop	r14
   11a94:	df 90       	pop	r13
   11a96:	cf 90       	pop	r12
   11a98:	08 95       	ret

00011a9a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   11a9a:	ef 92       	push	r14
   11a9c:	ff 92       	push	r15
   11a9e:	0f 93       	push	r16
   11aa0:	1f 93       	push	r17
   11aa2:	cf 93       	push	r28
   11aa4:	7c 01       	movw	r14, r24
   11aa6:	8b 01       	movw	r16, r22
   11aa8:	02 96       	adiw	r24, 0x02	; 2
   11aaa:	fd dc       	rcall	.-1542   	; 0x114a6 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11aac:	d7 01       	movw	r26, r14
   11aae:	12 96       	adiw	r26, 0x02	; 2
   11ab0:	ed 91       	ld	r30, X+
   11ab2:	fc 91       	ld	r31, X
   11ab4:	13 97       	sbiw	r26, 0x03	; 3
   11ab6:	80 81       	ld	r24, Z
   11ab8:	8b 35       	cpi	r24, 0x5B	; 91
   11aba:	19 f0       	breq	.+6      	; 0x11ac2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   11abc:	8b 37       	cpi	r24, 0x7B	; 123
   11abe:	61 f0       	breq	.+24     	; 0x11ad8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   11ac0:	14 c0       	rjmp	.+40     	; 0x11aea <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   11ac2:	c7 01       	movw	r24, r14
   11ac4:	5e df       	rcall	.-324    	; 0x11982 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   11ac6:	fc 01       	movw	r30, r24
   11ac8:	20 81       	ld	r18, Z
   11aca:	31 81       	ldd	r19, Z+1	; 0x01
   11acc:	23 2b       	or	r18, r19
   11ace:	11 f4       	brne	.+4      	; 0x11ad4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   11ad0:	c0 e0       	ldi	r28, 0x00	; 0
   11ad2:	25 c0       	rjmp	.+74     	; 0x11b1e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11ad4:	26 e0       	ldi	r18, 0x06	; 6
   11ad6:	1c c0       	rjmp	.+56     	; 0x11b10 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11ad8:	c7 01       	movw	r24, r14
   11ada:	28 d0       	rcall	.+80     	; 0x11b2c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   11adc:	fc 01       	movw	r30, r24
   11ade:	20 81       	ld	r18, Z
   11ae0:	31 81       	ldd	r19, Z+1	; 0x01
   11ae2:	23 2b       	or	r18, r19
   11ae4:	a9 f3       	breq	.-22     	; 0x11ad0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11ae6:	27 e0       	ldi	r18, 0x07	; 7
   11ae8:	13 c0       	rjmp	.+38     	; 0x11b10 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11aea:	c1 e0       	ldi	r28, 0x01	; 1
   11aec:	87 32       	cpi	r24, 0x27	; 39
   11aee:	19 f0       	breq	.+6      	; 0x11af6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11af0:	82 32       	cpi	r24, 0x22	; 34
   11af2:	09 f0       	breq	.+2      	; 0x11af6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11af4:	c0 e0       	ldi	r28, 0x00	; 0
   11af6:	c7 01       	movw	r24, r14
   11af8:	2d dd       	rcall	.-1446   	; 0x11554 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11afa:	00 97       	sbiw	r24, 0x00	; 0
   11afc:	49 f3       	breq	.-46     	; 0x11ad0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11afe:	cc 23       	and	r28, r28
   11b00:	31 f0       	breq	.+12     	; 0x11b0e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   11b02:	22 e0       	ldi	r18, 0x02	; 2
   11b04:	f8 01       	movw	r30, r16
   11b06:	20 83       	st	Z, r18
   11b08:	92 83       	std	Z+2, r25	; 0x02
   11b0a:	81 83       	std	Z+1, r24	; 0x01
   11b0c:	08 c0       	rjmp	.+16     	; 0x11b1e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11b0e:	21 e0       	ldi	r18, 0x01	; 1
   11b10:	d8 01       	movw	r26, r16
   11b12:	2c 93       	st	X, r18
   11b14:	12 96       	adiw	r26, 0x02	; 2
   11b16:	9c 93       	st	X, r25
   11b18:	8e 93       	st	-X, r24
   11b1a:	11 97       	sbiw	r26, 0x01	; 1
   11b1c:	c1 e0       	ldi	r28, 0x01	; 1
   11b1e:	8c 2f       	mov	r24, r28
   11b20:	cf 91       	pop	r28
   11b22:	1f 91       	pop	r17
   11b24:	0f 91       	pop	r16
   11b26:	ff 90       	pop	r15
   11b28:	ef 90       	pop	r14
   11b2a:	08 95       	ret

00011b2c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   11b2c:	af 92       	push	r10
   11b2e:	bf 92       	push	r11
   11b30:	cf 92       	push	r12
   11b32:	df 92       	push	r13
   11b34:	ef 92       	push	r14
   11b36:	ff 92       	push	r15
   11b38:	0f 93       	push	r16
   11b3a:	1f 93       	push	r17
   11b3c:	cf 93       	push	r28
   11b3e:	df 93       	push	r29
   11b40:	00 d0       	rcall	.+0      	; 0x11b42 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   11b42:	1f 92       	push	r1
   11b44:	1f 92       	push	r1
   11b46:	cd b7       	in	r28, 0x3d	; 61
   11b48:	de b7       	in	r29, 0x3e	; 62
   11b4a:	7c 01       	movw	r14, r24
   11b4c:	fc 01       	movw	r30, r24
   11b4e:	86 81       	ldd	r24, Z+6	; 0x06
   11b50:	88 23       	and	r24, r24
   11b52:	09 f4       	brne	.+2      	; 0x11b56 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   11b54:	4b c0       	rjmp	.+150    	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b56:	81 50       	subi	r24, 0x01	; 1
   11b58:	f7 01       	movw	r30, r14
   11b5a:	86 83       	std	Z+6, r24	; 0x06
   11b5c:	81 91       	ld	r24, Z+
   11b5e:	91 91       	ld	r25, Z+
   11b60:	6f 01       	movw	r12, r30
   11b62:	e0 d8       	rcall	.-3648   	; 0x10d24 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   11b64:	8c 01       	movw	r16, r24
   11b66:	6b e7       	ldi	r22, 0x7B	; 123
   11b68:	c6 01       	movw	r24, r12
   11b6a:	df dc       	rcall	.-1602   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b6c:	88 23       	and	r24, r24
   11b6e:	09 f4       	brne	.+2      	; 0x11b72 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   11b70:	3d c0       	rjmp	.+122    	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b72:	6d e7       	ldi	r22, 0x7D	; 125
   11b74:	c6 01       	movw	r24, r12
   11b76:	d9 dc       	rcall	.-1614   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b78:	81 11       	cpse	r24, r1
   11b7a:	32 c0       	rjmp	.+100    	; 0x11be0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11b7c:	c7 01       	movw	r24, r14
   11b7e:	ea dc       	rcall	.-1580   	; 0x11554 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11b80:	5c 01       	movw	r10, r24
   11b82:	89 2b       	or	r24, r25
   11b84:	99 f1       	breq	.+102    	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b86:	6a e3       	ldi	r22, 0x3A	; 58
   11b88:	c6 01       	movw	r24, r12
   11b8a:	cf dc       	rcall	.-1634   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b8c:	88 23       	and	r24, r24
   11b8e:	71 f1       	breq	.+92     	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b90:	19 82       	std	Y+1, r1	; 0x01
   11b92:	be 01       	movw	r22, r28
   11b94:	6f 5f       	subi	r22, 0xFF	; 255
   11b96:	7f 4f       	sbci	r23, 0xFF	; 255
   11b98:	c7 01       	movw	r24, r14
   11b9a:	7f df       	rcall	.-258    	; 0x11a9a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11b9c:	88 23       	and	r24, r24
   11b9e:	31 f1       	breq	.+76     	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11ba0:	b5 01       	movw	r22, r10
   11ba2:	c8 01       	movw	r24, r16
   11ba4:	a0 de       	rcall	.-704    	; 0x118e6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11ba6:	00 97       	sbiw	r24, 0x00	; 0
   11ba8:	39 f4       	brne	.+14     	; 0x11bb8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   11baa:	c8 01       	movw	r24, r16
   11bac:	64 dd       	rcall	.-1336   	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11bae:	00 97       	sbiw	r24, 0x00	; 0
   11bb0:	e9 f0       	breq	.+58     	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11bb2:	fc 01       	movw	r30, r24
   11bb4:	b3 82       	std	Z+3, r11	; 0x03
   11bb6:	a2 82       	std	Z+2, r10	; 0x02
   11bb8:	25 e0       	ldi	r18, 0x05	; 5
   11bba:	fe 01       	movw	r30, r28
   11bbc:	31 96       	adiw	r30, 0x01	; 1
   11bbe:	dc 01       	movw	r26, r24
   11bc0:	14 96       	adiw	r26, 0x04	; 4
   11bc2:	01 90       	ld	r0, Z+
   11bc4:	0d 92       	st	X+, r0
   11bc6:	2a 95       	dec	r18
   11bc8:	e1 f7       	brne	.-8      	; 0x11bc2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   11bca:	6d e7       	ldi	r22, 0x7D	; 125
   11bcc:	c6 01       	movw	r24, r12
   11bce:	ad dc       	rcall	.-1702   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11bd0:	81 11       	cpse	r24, r1
   11bd2:	06 c0       	rjmp	.+12     	; 0x11be0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11bd4:	6c e2       	ldi	r22, 0x2C	; 44
   11bd6:	c6 01       	movw	r24, r12
   11bd8:	a8 dc       	rcall	.-1712   	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11bda:	81 11       	cpse	r24, r1
   11bdc:	cf cf       	rjmp	.-98     	; 0x11b7c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   11bde:	06 c0       	rjmp	.+12     	; 0x11bec <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11be0:	f7 01       	movw	r30, r14
   11be2:	86 81       	ldd	r24, Z+6	; 0x06
   11be4:	8f 5f       	subi	r24, 0xFF	; 255
   11be6:	86 83       	std	Z+6, r24	; 0x06
   11be8:	c8 01       	movw	r24, r16
   11bea:	01 c0       	rjmp	.+2      	; 0x11bee <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   11bec:	89 d8       	rcall	.-3822   	; 0x10d00 <_ZN11ArduinoJson10JsonObject7invalidEv>
   11bee:	0f 90       	pop	r0
   11bf0:	0f 90       	pop	r0
   11bf2:	0f 90       	pop	r0
   11bf4:	0f 90       	pop	r0
   11bf6:	0f 90       	pop	r0
   11bf8:	df 91       	pop	r29
   11bfa:	cf 91       	pop	r28
   11bfc:	1f 91       	pop	r17
   11bfe:	0f 91       	pop	r16
   11c00:	ff 90       	pop	r15
   11c02:	ef 90       	pop	r14
   11c04:	df 90       	pop	r13
   11c06:	cf 90       	pop	r12
   11c08:	bf 90       	pop	r11
   11c0a:	af 90       	pop	r10
   11c0c:	08 95       	ret

00011c0e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   11c0e:	0f cd       	rjmp	.-1506   	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11c10:	08 95       	ret

00011c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11c12:	1f 93       	push	r17
   11c14:	cf 93       	push	r28
   11c16:	df 93       	push	r29
   11c18:	fa df       	rcall	.-12     	; 0x11c0e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11c1a:	ec 01       	movw	r28, r24
   11c1c:	89 2b       	or	r24, r25
   11c1e:	a1 f0       	breq	.+40     	; 0x11c48 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11c20:	1c 81       	ldd	r17, Y+4	; 0x04
   11c22:	11 30       	cpi	r17, 0x01	; 1
   11c24:	59 f4       	brne	.+22     	; 0x11c3c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11c26:	6d 81       	ldd	r22, Y+5	; 0x05
   11c28:	7e 81       	ldd	r23, Y+6	; 0x06
   11c2a:	61 15       	cp	r22, r1
   11c2c:	71 05       	cpc	r23, r1
   11c2e:	31 f0       	breq	.+12     	; 0x11c3c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11c30:	8c ee       	ldi	r24, 0xEC	; 236
   11c32:	96 e0       	ldi	r25, 0x06	; 6
   11c34:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   11c38:	89 2b       	or	r24, r25
   11c3a:	31 f0       	breq	.+12     	; 0x11c48 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11c3c:	11 50       	subi	r17, 0x01	; 1
   11c3e:	12 30       	cpi	r17, 0x02	; 2
   11c40:	18 f4       	brcc	.+6      	; 0x11c48 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11c42:	8d 81       	ldd	r24, Y+5	; 0x05
   11c44:	9e 81       	ldd	r25, Y+6	; 0x06
   11c46:	02 c0       	rjmp	.+4      	; 0x11c4c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   11c48:	80 e0       	ldi	r24, 0x00	; 0
   11c4a:	90 e0       	ldi	r25, 0x00	; 0
   11c4c:	df 91       	pop	r29
   11c4e:	cf 91       	pop	r28
   11c50:	1f 91       	pop	r17
   11c52:	08 95       	ret

00011c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11c54:	dc df       	rcall	.-72     	; 0x11c0e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11c56:	00 97       	sbiw	r24, 0x00	; 0
   11c58:	39 f0       	breq	.+14     	; 0x11c68 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11c5a:	fc 01       	movw	r30, r24
   11c5c:	24 81       	ldd	r18, Z+4	; 0x04
   11c5e:	26 30       	cpi	r18, 0x06	; 6
   11c60:	19 f4       	brne	.+6      	; 0x11c68 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11c62:	85 81       	ldd	r24, Z+5	; 0x05
   11c64:	96 81       	ldd	r25, Z+6	; 0x06
   11c66:	08 95       	ret
   11c68:	39 c8       	rjmp	.-3982   	; 0x10cdc <_ZN11ArduinoJson9JsonArray7invalidEv>

00011c6a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   11c6a:	fc 01       	movw	r30, r24
   11c6c:	80 81       	ld	r24, Z
   11c6e:	83 30       	cpi	r24, 0x03	; 3
   11c70:	18 f4       	brcc	.+6      	; 0x11c78 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   11c72:	81 30       	cpi	r24, 0x01	; 1
   11c74:	e8 f1       	brcs	.+122    	; 0x11cf0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11c76:	0a c0       	rjmp	.+20     	; 0x11c8c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   11c78:	85 30       	cpi	r24, 0x05	; 5
   11c7a:	28 f0       	brcs	.+10     	; 0x11c86 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   11c7c:	85 30       	cpi	r24, 0x05	; 5
   11c7e:	89 f5       	brne	.+98     	; 0x11ce2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   11c80:	61 81       	ldd	r22, Z+1	; 0x01
   11c82:	72 81       	ldd	r23, Z+2	; 0x02
   11c84:	29 c0       	rjmp	.+82     	; 0x11cd8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   11c86:	81 81       	ldd	r24, Z+1	; 0x01
   11c88:	92 81       	ldd	r25, Z+2	; 0x02
   11c8a:	08 95       	ret
   11c8c:	01 80       	ldd	r0, Z+1	; 0x01
   11c8e:	f2 81       	ldd	r31, Z+2	; 0x02
   11c90:	e0 2d       	mov	r30, r0
   11c92:	30 97       	sbiw	r30, 0x00	; 0
   11c94:	69 f1       	breq	.+90     	; 0x11cf0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11c96:	80 81       	ld	r24, Z
   11c98:	84 37       	cpi	r24, 0x74	; 116
   11c9a:	69 f1       	breq	.+90     	; 0x11cf6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   11c9c:	8b 32       	cpi	r24, 0x2B	; 43
   11c9e:	29 f0       	breq	.+10     	; 0x11caa <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   11ca0:	8d 32       	cpi	r24, 0x2D	; 45
   11ca2:	21 f4       	brne	.+8      	; 0x11cac <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   11ca4:	31 96       	adiw	r30, 0x01	; 1
   11ca6:	91 e0       	ldi	r25, 0x01	; 1
   11ca8:	02 c0       	rjmp	.+4      	; 0x11cae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   11caa:	31 96       	adiw	r30, 0x01	; 1
   11cac:	90 e0       	ldi	r25, 0x00	; 0
   11cae:	60 e0       	ldi	r22, 0x00	; 0
   11cb0:	70 e0       	ldi	r23, 0x00	; 0
   11cb2:	4a e0       	ldi	r20, 0x0A	; 10
   11cb4:	81 91       	ld	r24, Z+
   11cb6:	20 ed       	ldi	r18, 0xD0	; 208
   11cb8:	28 0f       	add	r18, r24
   11cba:	2a 30       	cpi	r18, 0x0A	; 10
   11cbc:	58 f4       	brcc	.+22     	; 0x11cd4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   11cbe:	46 9f       	mul	r20, r22
   11cc0:	90 01       	movw	r18, r0
   11cc2:	47 9f       	mul	r20, r23
   11cc4:	30 0d       	add	r19, r0
   11cc6:	11 24       	eor	r1, r1
   11cc8:	b9 01       	movw	r22, r18
   11cca:	60 53       	subi	r22, 0x30	; 48
   11ccc:	71 09       	sbc	r23, r1
   11cce:	68 0f       	add	r22, r24
   11cd0:	71 1d       	adc	r23, r1
   11cd2:	f0 cf       	rjmp	.-32     	; 0x11cb4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   11cd4:	99 23       	and	r25, r25
   11cd6:	91 f0       	breq	.+36     	; 0x11cfc <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11cd8:	88 27       	eor	r24, r24
   11cda:	99 27       	eor	r25, r25
   11cdc:	86 1b       	sub	r24, r22
   11cde:	97 0b       	sbc	r25, r23
   11ce0:	08 95       	ret
   11ce2:	61 81       	ldd	r22, Z+1	; 0x01
   11ce4:	72 81       	ldd	r23, Z+2	; 0x02
   11ce6:	83 81       	ldd	r24, Z+3	; 0x03
   11ce8:	94 81       	ldd	r25, Z+4	; 0x04
   11cea:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   11cee:	06 c0       	rjmp	.+12     	; 0x11cfc <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11cf0:	80 e0       	ldi	r24, 0x00	; 0
   11cf2:	90 e0       	ldi	r25, 0x00	; 0
   11cf4:	08 95       	ret
   11cf6:	81 e0       	ldi	r24, 0x01	; 1
   11cf8:	90 e0       	ldi	r25, 0x00	; 0
   11cfa:	08 95       	ret
   11cfc:	cb 01       	movw	r24, r22
   11cfe:	08 95       	ret

00011d00 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11d00:	86 df       	rcall	.-244    	; 0x11c0e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11d02:	00 97       	sbiw	r24, 0x00	; 0
   11d04:	11 f0       	breq	.+4      	; 0x11d0a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11d06:	04 96       	adiw	r24, 0x04	; 4
   11d08:	b0 cf       	rjmp	.-160    	; 0x11c6a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11d0a:	80 e0       	ldi	r24, 0x00	; 0
   11d0c:	90 e0       	ldi	r25, 0x00	; 0
   11d0e:	08 95       	ret

00011d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11d10:	fc 01       	movw	r30, r24
   11d12:	82 81       	ldd	r24, Z+2	; 0x02
   11d14:	93 81       	ldd	r25, Z+3	; 0x03
   11d16:	00 97       	sbiw	r24, 0x00	; 0
   11d18:	59 f0       	breq	.+22     	; 0x11d30 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11d1a:	61 15       	cp	r22, r1
   11d1c:	71 05       	cpc	r23, r1
   11d1e:	31 f0       	breq	.+12     	; 0x11d2c <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11d20:	fc 01       	movw	r30, r24
   11d22:	80 81       	ld	r24, Z
   11d24:	91 81       	ldd	r25, Z+1	; 0x01
   11d26:	61 50       	subi	r22, 0x01	; 1
   11d28:	71 09       	sbc	r23, r1
   11d2a:	f5 cf       	rjmp	.-22     	; 0x11d16 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11d2c:	02 96       	adiw	r24, 0x02	; 2
   11d2e:	9d cf       	rjmp	.-198    	; 0x11c6a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11d30:	80 e0       	ldi	r24, 0x00	; 0
   11d32:	90 e0       	ldi	r25, 0x00	; 0
   11d34:	08 95       	ret

00011d36 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   11d36:	fc 01       	movw	r30, r24
   11d38:	80 81       	ld	r24, Z
   11d3a:	83 30       	cpi	r24, 0x03	; 3
   11d3c:	18 f4       	brcc	.+6      	; 0x11d44 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   11d3e:	81 30       	cpi	r24, 0x01	; 1
   11d40:	98 f1       	brcs	.+102    	; 0x11da8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11d42:	08 c0       	rjmp	.+16     	; 0x11d54 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   11d44:	85 30       	cpi	r24, 0x05	; 5
   11d46:	20 f0       	brcs	.+8      	; 0x11d50 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   11d48:	85 30       	cpi	r24, 0x05	; 5
   11d4a:	39 f5       	brne	.+78     	; 0x11d9a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   11d4c:	61 81       	ldd	r22, Z+1	; 0x01
   11d4e:	23 c0       	rjmp	.+70     	; 0x11d96 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11d50:	61 81       	ldd	r22, Z+1	; 0x01
   11d52:	2d c0       	rjmp	.+90     	; 0x11dae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d54:	01 80       	ldd	r0, Z+1	; 0x01
   11d56:	f2 81       	ldd	r31, Z+2	; 0x02
   11d58:	e0 2d       	mov	r30, r0
   11d5a:	30 97       	sbiw	r30, 0x00	; 0
   11d5c:	29 f1       	breq	.+74     	; 0x11da8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11d5e:	80 81       	ld	r24, Z
   11d60:	84 37       	cpi	r24, 0x74	; 116
   11d62:	21 f1       	breq	.+72     	; 0x11dac <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   11d64:	8b 32       	cpi	r24, 0x2B	; 43
   11d66:	29 f0       	breq	.+10     	; 0x11d72 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   11d68:	8d 32       	cpi	r24, 0x2D	; 45
   11d6a:	21 f4       	brne	.+8      	; 0x11d74 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   11d6c:	31 96       	adiw	r30, 0x01	; 1
   11d6e:	91 e0       	ldi	r25, 0x01	; 1
   11d70:	02 c0       	rjmp	.+4      	; 0x11d76 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   11d72:	31 96       	adiw	r30, 0x01	; 1
   11d74:	90 e0       	ldi	r25, 0x00	; 0
   11d76:	60 e0       	ldi	r22, 0x00	; 0
   11d78:	21 91       	ld	r18, Z+
   11d7a:	80 ed       	ldi	r24, 0xD0	; 208
   11d7c:	82 0f       	add	r24, r18
   11d7e:	8a 30       	cpi	r24, 0x0A	; 10
   11d80:	40 f4       	brcc	.+16     	; 0x11d92 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   11d82:	66 0f       	add	r22, r22
   11d84:	86 2f       	mov	r24, r22
   11d86:	88 0f       	add	r24, r24
   11d88:	88 0f       	add	r24, r24
   11d8a:	68 0f       	add	r22, r24
   11d8c:	60 53       	subi	r22, 0x30	; 48
   11d8e:	62 0f       	add	r22, r18
   11d90:	f3 cf       	rjmp	.-26     	; 0x11d78 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   11d92:	99 23       	and	r25, r25
   11d94:	61 f0       	breq	.+24     	; 0x11dae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d96:	61 95       	neg	r22
   11d98:	0a c0       	rjmp	.+20     	; 0x11dae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d9a:	61 81       	ldd	r22, Z+1	; 0x01
   11d9c:	72 81       	ldd	r23, Z+2	; 0x02
   11d9e:	83 81       	ldd	r24, Z+3	; 0x03
   11da0:	94 81       	ldd	r25, Z+4	; 0x04
   11da2:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   11da6:	03 c0       	rjmp	.+6      	; 0x11dae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11da8:	60 e0       	ldi	r22, 0x00	; 0
   11daa:	01 c0       	rjmp	.+2      	; 0x11dae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11dac:	61 e0       	ldi	r22, 0x01	; 1
   11dae:	86 2f       	mov	r24, r22
   11db0:	08 95       	ret

00011db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11db2:	fc 01       	movw	r30, r24
   11db4:	82 81       	ldd	r24, Z+2	; 0x02
   11db6:	93 81       	ldd	r25, Z+3	; 0x03
   11db8:	00 97       	sbiw	r24, 0x00	; 0
   11dba:	59 f0       	breq	.+22     	; 0x11dd2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11dbc:	61 15       	cp	r22, r1
   11dbe:	71 05       	cpc	r23, r1
   11dc0:	31 f0       	breq	.+12     	; 0x11dce <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11dc2:	fc 01       	movw	r30, r24
   11dc4:	80 81       	ld	r24, Z
   11dc6:	91 81       	ldd	r25, Z+1	; 0x01
   11dc8:	61 50       	subi	r22, 0x01	; 1
   11dca:	71 09       	sbc	r23, r1
   11dcc:	f5 cf       	rjmp	.-22     	; 0x11db8 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11dce:	02 96       	adiw	r24, 0x02	; 2
   11dd0:	b2 cf       	rjmp	.-156    	; 0x11d36 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11dd2:	80 e0       	ldi	r24, 0x00	; 0
   11dd4:	08 95       	ret

00011dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11dd6:	1b df       	rcall	.-458    	; 0x11c0e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11dd8:	00 97       	sbiw	r24, 0x00	; 0
   11dda:	11 f0       	breq	.+4      	; 0x11de0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11ddc:	04 96       	adiw	r24, 0x04	; 4
   11dde:	ab cf       	rjmp	.-170    	; 0x11d36 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11de0:	80 e0       	ldi	r24, 0x00	; 0
   11de2:	08 95       	ret

00011de4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   11de4:	2f 92       	push	r2
   11de6:	3f 92       	push	r3
   11de8:	4f 92       	push	r4
   11dea:	5f 92       	push	r5
   11dec:	6f 92       	push	r6
   11dee:	7f 92       	push	r7
   11df0:	8f 92       	push	r8
   11df2:	9f 92       	push	r9
   11df4:	af 92       	push	r10
   11df6:	bf 92       	push	r11
   11df8:	cf 92       	push	r12
   11dfa:	df 92       	push	r13
   11dfc:	ef 92       	push	r14
   11dfe:	ff 92       	push	r15
   11e00:	0f 93       	push	r16
   11e02:	1f 93       	push	r17
   11e04:	cf 93       	push	r28
   11e06:	df 93       	push	r29
   11e08:	00 d0       	rcall	.+0      	; 0x11e0a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   11e0a:	1f 92       	push	r1
   11e0c:	cd b7       	in	r28, 0x3d	; 61
   11e0e:	de b7       	in	r29, 0x3e	; 62
   11e10:	1c 01       	movw	r2, r24
   11e12:	6a 01       	movw	r12, r20
   11e14:	7b 01       	movw	r14, r22
   11e16:	86 e0       	ldi	r24, 0x06	; 6
   11e18:	d1 01       	movw	r26, r2
   11e1a:	1a 96       	adiw	r26, 0x0a	; 10
   11e1c:	8c 93       	st	X, r24
   11e1e:	20 e8       	ldi	r18, 0x80	; 128
   11e20:	36 e9       	ldi	r19, 0x96	; 150
   11e22:	48 e1       	ldi	r20, 0x18	; 24
   11e24:	5b e4       	ldi	r21, 0x4B	; 75
   11e26:	c7 01       	movw	r24, r14
   11e28:	b6 01       	movw	r22, r12
   11e2a:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
   11e2e:	87 fd       	sbrc	r24, 7
   11e30:	3a c0       	rjmp	.+116    	; 0x11ea6 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   11e32:	52 e5       	ldi	r21, 0x52	; 82
   11e34:	85 2e       	mov	r8, r21
   11e36:	52 e0       	ldi	r21, 0x02	; 2
   11e38:	95 2e       	mov	r9, r21
   11e3a:	62 e2       	ldi	r22, 0x22	; 34
   11e3c:	a6 2e       	mov	r10, r22
   11e3e:	62 e0       	ldi	r22, 0x02	; 2
   11e40:	b6 2e       	mov	r11, r22
   11e42:	e0 e2       	ldi	r30, 0x20	; 32
   11e44:	f0 e0       	ldi	r31, 0x00	; 0
   11e46:	fa 83       	std	Y+2, r31	; 0x02
   11e48:	e9 83       	std	Y+1, r30	; 0x01
   11e4a:	00 e0       	ldi	r16, 0x00	; 0
   11e4c:	10 e0       	ldi	r17, 0x00	; 0
   11e4e:	a7 01       	movw	r20, r14
   11e50:	96 01       	movw	r18, r12
   11e52:	d4 01       	movw	r26, r8
   11e54:	9e 91       	ld	r25, -X
   11e56:	8e 91       	ld	r24, -X
   11e58:	7e 91       	ld	r23, -X
   11e5a:	6e 91       	ld	r22, -X
   11e5c:	4d 01       	movw	r8, r26
   11e5e:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   11e62:	18 16       	cp	r1, r24
   11e64:	7c f0       	brlt	.+30     	; 0x11e84 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11e66:	f5 01       	movw	r30, r10
   11e68:	24 89       	ldd	r18, Z+20	; 0x14
   11e6a:	35 89       	ldd	r19, Z+21	; 0x15
   11e6c:	46 89       	ldd	r20, Z+22	; 0x16
   11e6e:	57 89       	ldd	r21, Z+23	; 0x17
   11e70:	c7 01       	movw	r24, r14
   11e72:	b6 01       	movw	r22, r12
   11e74:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
   11e78:	6b 01       	movw	r12, r22
   11e7a:	7c 01       	movw	r14, r24
   11e7c:	89 81       	ldd	r24, Y+1	; 0x01
   11e7e:	9a 81       	ldd	r25, Y+2	; 0x02
   11e80:	08 0f       	add	r16, r24
   11e82:	19 1f       	adc	r17, r25
   11e84:	a9 81       	ldd	r26, Y+1	; 0x01
   11e86:	ba 81       	ldd	r27, Y+2	; 0x02
   11e88:	b5 95       	asr	r27
   11e8a:	a7 95       	ror	r26
   11e8c:	ba 83       	std	Y+2, r27	; 0x02
   11e8e:	a9 83       	std	Y+1, r26	; 0x01
   11e90:	b4 e0       	ldi	r27, 0x04	; 4
   11e92:	ab 1a       	sub	r10, r27
   11e94:	b1 08       	sbc	r11, r1
   11e96:	ea e3       	ldi	r30, 0x3A	; 58
   11e98:	8e 16       	cp	r8, r30
   11e9a:	e2 e0       	ldi	r30, 0x02	; 2
   11e9c:	9e 06       	cpc	r9, r30
   11e9e:	b9 f6       	brne	.-82     	; 0x11e4e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   11ea0:	bb 24       	eor	r11, r11
   11ea2:	ba 94       	dec	r11
   11ea4:	08 c0       	rjmp	.+16     	; 0x11eb6 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   11ea6:	80 e2       	ldi	r24, 0x20	; 32
   11ea8:	90 e0       	ldi	r25, 0x00	; 0
   11eaa:	9a 83       	std	Y+2, r25	; 0x02
   11eac:	89 83       	std	Y+1, r24	; 0x01
   11eae:	35 e0       	ldi	r19, 0x05	; 5
   11eb0:	b3 2e       	mov	r11, r19
   11eb2:	00 e0       	ldi	r16, 0x00	; 0
   11eb4:	10 e0       	ldi	r17, 0x00	; 0
   11eb6:	20 e0       	ldi	r18, 0x00	; 0
   11eb8:	30 e0       	ldi	r19, 0x00	; 0
   11eba:	a9 01       	movw	r20, r18
   11ebc:	c7 01       	movw	r24, r14
   11ebe:	b6 01       	movw	r22, r12
   11ec0:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
   11ec4:	18 16       	cp	r1, r24
   11ec6:	c4 f5       	brge	.+112    	; 0x11f38 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11ec8:	2c ea       	ldi	r18, 0xAC	; 172
   11eca:	35 ec       	ldi	r19, 0xC5	; 197
   11ecc:	47 e2       	ldi	r20, 0x27	; 39
   11ece:	57 e3       	ldi	r21, 0x37	; 55
   11ed0:	c7 01       	movw	r24, r14
   11ed2:	b6 01       	movw	r22, r12
   11ed4:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   11ed8:	18 16       	cp	r1, r24
   11eda:	74 f1       	brlt	.+92     	; 0x11f38 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11edc:	9f ef       	ldi	r25, 0xFF	; 255
   11ede:	b9 16       	cp	r11, r25
   11ee0:	59 f1       	breq	.+86     	; 0x11f38 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11ee2:	ab 2d       	mov	r26, r11
   11ee4:	b4 e0       	ldi	r27, 0x04	; 4
   11ee6:	ab 02       	muls	r26, r27
   11ee8:	40 01       	movw	r8, r0
   11eea:	11 24       	eor	r1, r1
   11eec:	f4 01       	movw	r30, r8
   11eee:	e6 5f       	subi	r30, 0xF6	; 246
   11ef0:	fd 4f       	sbci	r31, 0xFD	; 253
   11ef2:	a7 01       	movw	r20, r14
   11ef4:	96 01       	movw	r18, r12
   11ef6:	60 81       	ld	r22, Z
   11ef8:	71 81       	ldd	r23, Z+1	; 0x01
   11efa:	82 81       	ldd	r24, Z+2	; 0x02
   11efc:	93 81       	ldd	r25, Z+3	; 0x03
   11efe:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
   11f02:	18 16       	cp	r1, r24
   11f04:	8c f4       	brge	.+34     	; 0x11f28 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   11f06:	f4 01       	movw	r30, r8
   11f08:	e6 5c       	subi	r30, 0xC6	; 198
   11f0a:	fd 4f       	sbci	r31, 0xFD	; 253
   11f0c:	20 81       	ld	r18, Z
   11f0e:	31 81       	ldd	r19, Z+1	; 0x01
   11f10:	42 81       	ldd	r20, Z+2	; 0x02
   11f12:	53 81       	ldd	r21, Z+3	; 0x03
   11f14:	c7 01       	movw	r24, r14
   11f16:	b6 01       	movw	r22, r12
   11f18:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
   11f1c:	6b 01       	movw	r12, r22
   11f1e:	7c 01       	movw	r14, r24
   11f20:	e9 81       	ldd	r30, Y+1	; 0x01
   11f22:	fa 81       	ldd	r31, Y+2	; 0x02
   11f24:	0e 1b       	sub	r16, r30
   11f26:	1f 0b       	sbc	r17, r31
   11f28:	89 81       	ldd	r24, Y+1	; 0x01
   11f2a:	9a 81       	ldd	r25, Y+2	; 0x02
   11f2c:	95 95       	asr	r25
   11f2e:	87 95       	ror	r24
   11f30:	9a 83       	std	Y+2, r25	; 0x02
   11f32:	89 83       	std	Y+1, r24	; 0x01
   11f34:	ba 94       	dec	r11
   11f36:	d2 cf       	rjmp	.-92     	; 0x11edc <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   11f38:	d1 01       	movw	r26, r2
   11f3a:	19 96       	adiw	r26, 0x09	; 9
   11f3c:	1c 93       	st	X, r17
   11f3e:	0e 93       	st	-X, r16
   11f40:	18 97       	sbiw	r26, 0x08	; 8
   11f42:	c7 01       	movw	r24, r14
   11f44:	b6 01       	movw	r22, r12
   11f46:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   11f4a:	69 83       	std	Y+1, r22	; 0x01
   11f4c:	7a 83       	std	Y+2, r23	; 0x02
   11f4e:	8b 83       	std	Y+3, r24	; 0x03
   11f50:	9c 83       	std	Y+4, r25	; 0x04
   11f52:	f1 01       	movw	r30, r2
   11f54:	60 83       	st	Z, r22
   11f56:	71 83       	std	Z+1, r23	; 0x01
   11f58:	82 83       	std	Z+2, r24	; 0x02
   11f5a:	93 83       	std	Z+3, r25	; 0x03
   11f5c:	2b 01       	movw	r4, r22
   11f5e:	3c 01       	movw	r6, r24
   11f60:	90 e4       	ldi	r25, 0x40	; 64
   11f62:	89 2e       	mov	r8, r25
   11f64:	92 e4       	ldi	r25, 0x42	; 66
   11f66:	99 2e       	mov	r9, r25
   11f68:	9f e0       	ldi	r25, 0x0F	; 15
   11f6a:	a9 2e       	mov	r10, r25
   11f6c:	b1 2c       	mov	r11, r1
   11f6e:	fa e0       	ldi	r31, 0x0A	; 10
   11f70:	4f 16       	cp	r4, r31
   11f72:	51 04       	cpc	r5, r1
   11f74:	61 04       	cpc	r6, r1
   11f76:	71 04       	cpc	r7, r1
   11f78:	e0 f0       	brcs	.+56     	; 0x11fb2 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11f7a:	c5 01       	movw	r24, r10
   11f7c:	b4 01       	movw	r22, r8
   11f7e:	2a e0       	ldi	r18, 0x0A	; 10
   11f80:	30 e0       	ldi	r19, 0x00	; 0
   11f82:	40 e0       	ldi	r20, 0x00	; 0
   11f84:	50 e0       	ldi	r21, 0x00	; 0
   11f86:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   11f8a:	49 01       	movw	r8, r18
   11f8c:	5a 01       	movw	r10, r20
   11f8e:	d1 01       	movw	r26, r2
   11f90:	1a 96       	adiw	r26, 0x0a	; 10
   11f92:	8c 91       	ld	r24, X
   11f94:	1a 97       	sbiw	r26, 0x0a	; 10
   11f96:	81 50       	subi	r24, 0x01	; 1
   11f98:	1a 96       	adiw	r26, 0x0a	; 10
   11f9a:	8c 93       	st	X, r24
   11f9c:	c3 01       	movw	r24, r6
   11f9e:	b2 01       	movw	r22, r4
   11fa0:	2a e0       	ldi	r18, 0x0A	; 10
   11fa2:	30 e0       	ldi	r19, 0x00	; 0
   11fa4:	40 e0       	ldi	r20, 0x00	; 0
   11fa6:	50 e0       	ldi	r21, 0x00	; 0
   11fa8:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   11fac:	29 01       	movw	r4, r18
   11fae:	3a 01       	movw	r6, r20
   11fb0:	de cf       	rjmp	.-68     	; 0x11f6e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11fb2:	69 81       	ldd	r22, Y+1	; 0x01
   11fb4:	7a 81       	ldd	r23, Y+2	; 0x02
   11fb6:	8b 81       	ldd	r24, Y+3	; 0x03
   11fb8:	9c 81       	ldd	r25, Y+4	; 0x04
   11fba:	0e 94 24 d2 	call	0x1a448	; 0x1a448 <__floatunsisf>
   11fbe:	9b 01       	movw	r18, r22
   11fc0:	ac 01       	movw	r20, r24
   11fc2:	c7 01       	movw	r24, r14
   11fc4:	b6 01       	movw	r22, r12
   11fc6:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <__subsf3>
   11fca:	6b 01       	movw	r12, r22
   11fcc:	7c 01       	movw	r14, r24
   11fce:	c5 01       	movw	r24, r10
   11fd0:	b4 01       	movw	r22, r8
   11fd2:	0e 94 24 d2 	call	0x1a448	; 0x1a448 <__floatunsisf>
   11fd6:	9b 01       	movw	r18, r22
   11fd8:	ac 01       	movw	r20, r24
   11fda:	c7 01       	movw	r24, r14
   11fdc:	b6 01       	movw	r22, r12
   11fde:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
   11fe2:	2b 01       	movw	r4, r22
   11fe4:	3c 01       	movw	r6, r24
   11fe6:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   11fea:	6b 01       	movw	r12, r22
   11fec:	7c 01       	movw	r14, r24
   11fee:	0e 94 24 d2 	call	0x1a448	; 0x1a448 <__floatunsisf>
   11ff2:	9b 01       	movw	r18, r22
   11ff4:	ac 01       	movw	r20, r24
   11ff6:	c3 01       	movw	r24, r6
   11ff8:	b2 01       	movw	r22, r4
   11ffa:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <__subsf3>
   11ffe:	9b 01       	movw	r18, r22
   12000:	ac 01       	movw	r20, r24
   12002:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   12006:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   1200a:	c6 0e       	add	r12, r22
   1200c:	d7 1e       	adc	r13, r23
   1200e:	e8 1e       	adc	r14, r24
   12010:	f9 1e       	adc	r15, r25
   12012:	c8 14       	cp	r12, r8
   12014:	d9 04       	cpc	r13, r9
   12016:	ea 04       	cpc	r14, r10
   12018:	fb 04       	cpc	r15, r11
   1201a:	30 f4       	brcc	.+12     	; 0x12028 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   1201c:	f1 01       	movw	r30, r2
   1201e:	c4 82       	std	Z+4, r12	; 0x04
   12020:	d5 82       	std	Z+5, r13	; 0x05
   12022:	e6 82       	std	Z+6, r14	; 0x06
   12024:	f7 82       	std	Z+7, r15	; 0x07
   12026:	26 c0       	rjmp	.+76     	; 0x12074 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   12028:	d1 01       	movw	r26, r2
   1202a:	14 96       	adiw	r26, 0x04	; 4
   1202c:	1d 92       	st	X+, r1
   1202e:	1d 92       	st	X+, r1
   12030:	1d 92       	st	X+, r1
   12032:	1c 92       	st	X, r1
   12034:	17 97       	sbiw	r26, 0x07	; 7
   12036:	89 81       	ldd	r24, Y+1	; 0x01
   12038:	9a 81       	ldd	r25, Y+2	; 0x02
   1203a:	ab 81       	ldd	r26, Y+3	; 0x03
   1203c:	bc 81       	ldd	r27, Y+4	; 0x04
   1203e:	01 96       	adiw	r24, 0x01	; 1
   12040:	a1 1d       	adc	r26, r1
   12042:	b1 1d       	adc	r27, r1
   12044:	f1 01       	movw	r30, r2
   12046:	80 83       	st	Z, r24
   12048:	91 83       	std	Z+1, r25	; 0x01
   1204a:	a2 83       	std	Z+2, r26	; 0x02
   1204c:	b3 83       	std	Z+3, r27	; 0x03
   1204e:	01 15       	cp	r16, r1
   12050:	11 05       	cpc	r17, r1
   12052:	81 f0       	breq	.+32     	; 0x12074 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   12054:	0a 97       	sbiw	r24, 0x0a	; 10
   12056:	a1 05       	cpc	r26, r1
   12058:	b1 05       	cpc	r27, r1
   1205a:	60 f0       	brcs	.+24     	; 0x12074 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   1205c:	c8 01       	movw	r24, r16
   1205e:	01 96       	adiw	r24, 0x01	; 1
   12060:	91 87       	std	Z+9, r25	; 0x09
   12062:	80 87       	std	Z+8, r24	; 0x08
   12064:	81 e0       	ldi	r24, 0x01	; 1
   12066:	90 e0       	ldi	r25, 0x00	; 0
   12068:	a0 e0       	ldi	r26, 0x00	; 0
   1206a:	b0 e0       	ldi	r27, 0x00	; 0
   1206c:	80 83       	st	Z, r24
   1206e:	91 83       	std	Z+1, r25	; 0x01
   12070:	a2 83       	std	Z+2, r26	; 0x02
   12072:	b3 83       	std	Z+3, r27	; 0x03
   12074:	8a e0       	ldi	r24, 0x0A	; 10
   12076:	c8 2e       	mov	r12, r24
   12078:	d1 2c       	mov	r13, r1
   1207a:	e1 2c       	mov	r14, r1
   1207c:	f1 2c       	mov	r15, r1
   1207e:	d1 01       	movw	r26, r2
   12080:	14 96       	adiw	r26, 0x04	; 4
   12082:	6d 91       	ld	r22, X+
   12084:	7d 91       	ld	r23, X+
   12086:	8d 91       	ld	r24, X+
   12088:	9c 91       	ld	r25, X
   1208a:	17 97       	sbiw	r26, 0x07	; 7
   1208c:	a7 01       	movw	r20, r14
   1208e:	96 01       	movw	r18, r12
   12090:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   12094:	67 2b       	or	r22, r23
   12096:	68 2b       	or	r22, r24
   12098:	69 2b       	or	r22, r25
   1209a:	59 f4       	brne	.+22     	; 0x120b2 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   1209c:	f1 01       	movw	r30, r2
   1209e:	82 85       	ldd	r24, Z+10	; 0x0a
   120a0:	18 16       	cp	r1, r24
   120a2:	3c f4       	brge	.+14     	; 0x120b2 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   120a4:	24 83       	std	Z+4, r18	; 0x04
   120a6:	35 83       	std	Z+5, r19	; 0x05
   120a8:	46 83       	std	Z+6, r20	; 0x06
   120aa:	57 83       	std	Z+7, r21	; 0x07
   120ac:	81 50       	subi	r24, 0x01	; 1
   120ae:	82 87       	std	Z+10, r24	; 0x0a
   120b0:	e6 cf       	rjmp	.-52     	; 0x1207e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   120b2:	0f 90       	pop	r0
   120b4:	0f 90       	pop	r0
   120b6:	0f 90       	pop	r0
   120b8:	0f 90       	pop	r0
   120ba:	df 91       	pop	r29
   120bc:	cf 91       	pop	r28
   120be:	1f 91       	pop	r17
   120c0:	0f 91       	pop	r16
   120c2:	ff 90       	pop	r15
   120c4:	ef 90       	pop	r14
   120c6:	df 90       	pop	r13
   120c8:	cf 90       	pop	r12
   120ca:	bf 90       	pop	r11
   120cc:	af 90       	pop	r10
   120ce:	9f 90       	pop	r9
   120d0:	8f 90       	pop	r8
   120d2:	7f 90       	pop	r7
   120d4:	6f 90       	pop	r6
   120d6:	5f 90       	pop	r5
   120d8:	4f 90       	pop	r4
   120da:	3f 90       	pop	r3
   120dc:	2f 90       	pop	r2
   120de:	08 95       	ret

000120e0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   120e0:	cf 93       	push	r28
   120e2:	df 93       	push	r29
   120e4:	fc 01       	movw	r30, r24
   120e6:	82 81       	ldd	r24, Z+2	; 0x02
   120e8:	87 ff       	sbrs	r24, 7
   120ea:	32 c0       	rjmp	.+100    	; 0x12150 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   120ec:	40 e0       	ldi	r20, 0x00	; 0
   120ee:	50 e0       	ldi	r21, 0x00	; 0
   120f0:	20 e0       	ldi	r18, 0x00	; 0
   120f2:	30 e0       	ldi	r19, 0x00	; 0
   120f4:	70 e2       	ldi	r23, 0x20	; 32
   120f6:	92 81       	ldd	r25, Z+2	; 0x02
   120f8:	89 2f       	mov	r24, r25
   120fa:	8f 70       	andi	r24, 0x0F	; 15
   120fc:	92 95       	swap	r25
   120fe:	97 70       	andi	r25, 0x07	; 7
   12100:	89 9f       	mul	r24, r25
   12102:	c0 01       	movw	r24, r0
   12104:	11 24       	eor	r1, r1
   12106:	48 17       	cp	r20, r24
   12108:	59 07       	cpc	r21, r25
   1210a:	24 f5       	brge	.+72     	; 0x12154 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   1210c:	a0 81       	ld	r26, Z
   1210e:	b1 81       	ldd	r27, Z+1	; 0x01
   12110:	12 96       	adiw	r26, 0x02	; 2
   12112:	cd 91       	ld	r28, X+
   12114:	dc 91       	ld	r29, X
   12116:	13 97       	sbiw	r26, 0x03	; 3
   12118:	8d 91       	ld	r24, X+
   1211a:	9c 91       	ld	r25, X
   1211c:	11 97       	sbiw	r26, 0x01	; 1
   1211e:	c8 17       	cp	r28, r24
   12120:	d9 07       	cpc	r29, r25
   12122:	78 f4       	brcc	.+30     	; 0x12142 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   12124:	ce 01       	movw	r24, r28
   12126:	01 96       	adiw	r24, 0x01	; 1
   12128:	13 96       	adiw	r26, 0x03	; 3
   1212a:	9c 93       	st	X, r25
   1212c:	8e 93       	st	-X, r24
   1212e:	12 97       	sbiw	r26, 0x02	; 2
   12130:	78 83       	st	Y, r23
   12132:	12 96       	adiw	r26, 0x02	; 2
   12134:	0d 90       	ld	r0, X+
   12136:	bc 91       	ld	r27, X
   12138:	a0 2d       	mov	r26, r0
   1213a:	1c 92       	st	X, r1
   1213c:	81 e0       	ldi	r24, 0x01	; 1
   1213e:	90 e0       	ldi	r25, 0x00	; 0
   12140:	02 c0       	rjmp	.+4      	; 0x12146 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   12142:	80 e0       	ldi	r24, 0x00	; 0
   12144:	90 e0       	ldi	r25, 0x00	; 0
   12146:	28 0f       	add	r18, r24
   12148:	39 1f       	adc	r19, r25
   1214a:	4f 5f       	subi	r20, 0xFF	; 255
   1214c:	5f 4f       	sbci	r21, 0xFF	; 255
   1214e:	d3 cf       	rjmp	.-90     	; 0x120f6 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   12150:	20 e0       	ldi	r18, 0x00	; 0
   12152:	30 e0       	ldi	r19, 0x00	; 0
   12154:	a0 81       	ld	r26, Z
   12156:	b1 81       	ldd	r27, Z+1	; 0x01
   12158:	12 96       	adiw	r26, 0x02	; 2
   1215a:	cd 91       	ld	r28, X+
   1215c:	dc 91       	ld	r29, X
   1215e:	13 97       	sbiw	r26, 0x03	; 3
   12160:	8d 91       	ld	r24, X+
   12162:	9c 91       	ld	r25, X
   12164:	11 97       	sbiw	r26, 0x01	; 1
   12166:	c8 17       	cp	r28, r24
   12168:	d9 07       	cpc	r29, r25
   1216a:	78 f4       	brcc	.+30     	; 0x1218a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   1216c:	ce 01       	movw	r24, r28
   1216e:	01 96       	adiw	r24, 0x01	; 1
   12170:	13 96       	adiw	r26, 0x03	; 3
   12172:	9c 93       	st	X, r25
   12174:	8e 93       	st	-X, r24
   12176:	12 97       	sbiw	r26, 0x02	; 2
   12178:	68 83       	st	Y, r22
   1217a:	12 96       	adiw	r26, 0x02	; 2
   1217c:	0d 90       	ld	r0, X+
   1217e:	bc 91       	ld	r27, X
   12180:	a0 2d       	mov	r26, r0
   12182:	1c 92       	st	X, r1
   12184:	81 e0       	ldi	r24, 0x01	; 1
   12186:	90 e0       	ldi	r25, 0x00	; 0
   12188:	02 c0       	rjmp	.+4      	; 0x1218e <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   1218a:	80 e0       	ldi	r24, 0x00	; 0
   1218c:	90 e0       	ldi	r25, 0x00	; 0
   1218e:	51 e0       	ldi	r21, 0x01	; 1
   12190:	6a 30       	cpi	r22, 0x0A	; 10
   12192:	09 f0       	breq	.+2      	; 0x12196 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   12194:	50 e0       	ldi	r21, 0x00	; 0
   12196:	42 81       	ldd	r20, Z+2	; 0x02
   12198:	50 fb       	bst	r21, 0
   1219a:	47 f9       	bld	r20, 7
   1219c:	42 83       	std	Z+2, r20	; 0x02
   1219e:	82 0f       	add	r24, r18
   121a0:	93 1f       	adc	r25, r19
   121a2:	df 91       	pop	r29
   121a4:	cf 91       	pop	r28
   121a6:	08 95       	ret

000121a8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   121a8:	ef 92       	push	r14
   121aa:	ff 92       	push	r15
   121ac:	0f 93       	push	r16
   121ae:	1f 93       	push	r17
   121b0:	cf 93       	push	r28
   121b2:	df 93       	push	r29
   121b4:	7c 01       	movw	r14, r24
   121b6:	8b 01       	movw	r16, r22
   121b8:	c0 e0       	ldi	r28, 0x00	; 0
   121ba:	d0 e0       	ldi	r29, 0x00	; 0
   121bc:	f8 01       	movw	r30, r16
   121be:	61 91       	ld	r22, Z+
   121c0:	8f 01       	movw	r16, r30
   121c2:	66 23       	and	r22, r22
   121c4:	29 f0       	breq	.+10     	; 0x121d0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   121c6:	c7 01       	movw	r24, r14
   121c8:	8b df       	rcall	.-234    	; 0x120e0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   121ca:	c8 0f       	add	r28, r24
   121cc:	d9 1f       	adc	r29, r25
   121ce:	f6 cf       	rjmp	.-20     	; 0x121bc <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   121d0:	ce 01       	movw	r24, r28
   121d2:	df 91       	pop	r29
   121d4:	cf 91       	pop	r28
   121d6:	1f 91       	pop	r17
   121d8:	0f 91       	pop	r16
   121da:	ff 90       	pop	r15
   121dc:	ef 90       	pop	r14
   121de:	08 95       	ret

000121e0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   121e0:	fc 01       	movw	r30, r24
   121e2:	90 81       	ld	r25, Z
   121e4:	9f 7d       	andi	r25, 0xDF	; 223
   121e6:	9b 35       	cpi	r25, 0x5B	; 91
   121e8:	99 f4       	brne	.+38     	; 0x12210 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   121ea:	01 80       	ldd	r0, Z+1	; 0x01
   121ec:	f2 81       	ldd	r31, Z+2	; 0x02
   121ee:	e0 2d       	mov	r30, r0
   121f0:	32 81       	ldd	r19, Z+2	; 0x02
   121f2:	93 2f       	mov	r25, r19
   121f4:	9f 70       	andi	r25, 0x0F	; 15
   121f6:	9f 30       	cpi	r25, 0x0F	; 15
   121f8:	39 f0       	breq	.+14     	; 0x12208 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   121fa:	9f 5f       	subi	r25, 0xFF	; 255
   121fc:	29 2f       	mov	r18, r25
   121fe:	2f 70       	andi	r18, 0x0F	; 15
   12200:	93 2f       	mov	r25, r19
   12202:	90 7f       	andi	r25, 0xF0	; 240
   12204:	92 2b       	or	r25, r18
   12206:	92 83       	std	Z+2, r25	; 0x02
   12208:	65 ef       	ldi	r22, 0xF5	; 245
   1220a:	76 e0       	ldi	r23, 0x06	; 6
   1220c:	cf 01       	movw	r24, r30
   1220e:	cc cf       	rjmp	.-104    	; 0x121a8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   12210:	80 e0       	ldi	r24, 0x00	; 0
   12212:	90 e0       	ldi	r25, 0x00	; 0
   12214:	08 95       	ret

00012216 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   12216:	ff 92       	push	r15
   12218:	0f 93       	push	r16
   1221a:	1f 93       	push	r17
   1221c:	cf 93       	push	r28
   1221e:	df 93       	push	r29
   12220:	8c 01       	movw	r16, r24
   12222:	f6 2e       	mov	r15, r22
   12224:	8b e5       	ldi	r24, 0x5B	; 91
   12226:	68 17       	cp	r22, r24
   12228:	f9 f0       	breq	.+62     	; 0x12268 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   1222a:	86 17       	cp	r24, r22
   1222c:	98 f0       	brcs	.+38     	; 0x12254 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   1222e:	ac e2       	ldi	r26, 0x2C	; 44
   12230:	6a 17       	cp	r22, r26
   12232:	09 f4       	brne	.+2      	; 0x12236 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   12234:	43 c0       	rjmp	.+134    	; 0x122bc <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   12236:	ba e3       	ldi	r27, 0x3A	; 58
   12238:	6b 17       	cp	r22, r27
   1223a:	c1 f1       	breq	.+112    	; 0x122ac <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   1223c:	e2 e2       	ldi	r30, 0x22	; 34
   1223e:	6e 13       	cpse	r22, r30
   12240:	4c c0       	rjmp	.+152    	; 0x122da <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   12242:	81 e0       	ldi	r24, 0x01	; 1
   12244:	d8 01       	movw	r26, r16
   12246:	13 96       	adiw	r26, 0x03	; 3
   12248:	8c 93       	st	X, r24
   1224a:	c8 01       	movw	r24, r16
   1224c:	c9 df       	rcall	.-110    	; 0x121e0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   1224e:	ec 01       	movw	r28, r24
   12250:	62 e2       	ldi	r22, 0x22	; 34
   12252:	3f c0       	rjmp	.+126    	; 0x122d2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   12254:	fb e7       	ldi	r31, 0x7B	; 123
   12256:	6f 17       	cp	r22, r31
   12258:	39 f0       	breq	.+14     	; 0x12268 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   1225a:	8d e7       	ldi	r24, 0x7D	; 125
   1225c:	68 17       	cp	r22, r24
   1225e:	39 f0       	breq	.+14     	; 0x1226e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   12260:	ad e5       	ldi	r26, 0x5D	; 93
   12262:	6a 13       	cpse	r22, r26
   12264:	3a c0       	rjmp	.+116    	; 0x122da <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   12266:	03 c0       	rjmp	.+6      	; 0x1226e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   12268:	c8 01       	movw	r24, r16
   1226a:	ba df       	rcall	.-140    	; 0x121e0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   1226c:	1c c0       	rjmp	.+56     	; 0x122a6 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   1226e:	d8 01       	movw	r26, r16
   12270:	8c 91       	ld	r24, X
   12272:	8f 7d       	andi	r24, 0xDF	; 223
   12274:	8b 35       	cpi	r24, 0x5B	; 91
   12276:	19 f4       	brne	.+6      	; 0x1227e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   12278:	c0 e0       	ldi	r28, 0x00	; 0
   1227a:	d0 e0       	ldi	r29, 0x00	; 0
   1227c:	15 c0       	rjmp	.+42     	; 0x122a8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   1227e:	d8 01       	movw	r26, r16
   12280:	11 96       	adiw	r26, 0x01	; 1
   12282:	ed 91       	ld	r30, X+
   12284:	fc 91       	ld	r31, X
   12286:	12 97       	sbiw	r26, 0x02	; 2
   12288:	32 81       	ldd	r19, Z+2	; 0x02
   1228a:	93 2f       	mov	r25, r19
   1228c:	9f 70       	andi	r25, 0x0F	; 15
   1228e:	39 f0       	breq	.+14     	; 0x1229e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   12290:	91 5f       	subi	r25, 0xF1	; 241
   12292:	29 2f       	mov	r18, r25
   12294:	2f 70       	andi	r18, 0x0F	; 15
   12296:	93 2f       	mov	r25, r19
   12298:	90 7f       	andi	r25, 0xF0	; 240
   1229a:	92 2b       	or	r25, r18
   1229c:	92 83       	std	Z+2, r25	; 0x02
   1229e:	65 ef       	ldi	r22, 0xF5	; 245
   122a0:	76 e0       	ldi	r23, 0x06	; 6
   122a2:	cf 01       	movw	r24, r30
   122a4:	81 df       	rcall	.-254    	; 0x121a8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   122a6:	ec 01       	movw	r28, r24
   122a8:	6f 2d       	mov	r22, r15
   122aa:	13 c0       	rjmp	.+38     	; 0x122d2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   122ac:	61 ef       	ldi	r22, 0xF1	; 241
   122ae:	76 e0       	ldi	r23, 0x06	; 6
   122b0:	d8 01       	movw	r26, r16
   122b2:	11 96       	adiw	r26, 0x01	; 1
   122b4:	8d 91       	ld	r24, X+
   122b6:	9c 91       	ld	r25, X
   122b8:	12 97       	sbiw	r26, 0x02	; 2
   122ba:	05 c0       	rjmp	.+10     	; 0x122c6 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   122bc:	64 ef       	ldi	r22, 0xF4	; 244
   122be:	76 e0       	ldi	r23, 0x06	; 6
   122c0:	f8 01       	movw	r30, r16
   122c2:	81 81       	ldd	r24, Z+1	; 0x01
   122c4:	92 81       	ldd	r25, Z+2	; 0x02
   122c6:	df 91       	pop	r29
   122c8:	cf 91       	pop	r28
   122ca:	1f 91       	pop	r17
   122cc:	0f 91       	pop	r16
   122ce:	ff 90       	pop	r15
   122d0:	6b cf       	rjmp	.-298    	; 0x121a8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   122d2:	f8 01       	movw	r30, r16
   122d4:	81 81       	ldd	r24, Z+1	; 0x01
   122d6:	92 81       	ldd	r25, Z+2	; 0x02
   122d8:	09 c0       	rjmp	.+18     	; 0x122ec <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   122da:	c8 01       	movw	r24, r16
   122dc:	81 df       	rcall	.-254    	; 0x121e0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   122de:	ec 01       	movw	r28, r24
   122e0:	6f 2d       	mov	r22, r15
   122e2:	d8 01       	movw	r26, r16
   122e4:	11 96       	adiw	r26, 0x01	; 1
   122e6:	8d 91       	ld	r24, X+
   122e8:	9c 91       	ld	r25, X
   122ea:	12 97       	sbiw	r26, 0x02	; 2
   122ec:	f9 de       	rcall	.-526    	; 0x120e0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   122ee:	8c 0f       	add	r24, r28
   122f0:	9d 1f       	adc	r25, r29
   122f2:	df 91       	pop	r29
   122f4:	cf 91       	pop	r28
   122f6:	1f 91       	pop	r17
   122f8:	0f 91       	pop	r16
   122fa:	ff 90       	pop	r15
   122fc:	08 95       	ret

000122fe <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   122fe:	1f 93       	push	r17
   12300:	cf 93       	push	r28
   12302:	df 93       	push	r29
   12304:	ec 01       	movw	r28, r24
   12306:	16 2f       	mov	r17, r22
   12308:	8b 81       	ldd	r24, Y+3	; 0x03
   1230a:	88 23       	and	r24, r24
   1230c:	51 f0       	breq	.+20     	; 0x12322 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   1230e:	62 32       	cpi	r22, 0x22	; 34
   12310:	19 f4       	brne	.+6      	; 0x12318 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   12312:	88 81       	ld	r24, Y
   12314:	8c 35       	cpi	r24, 0x5C	; 92
   12316:	61 f4       	brne	.+24     	; 0x12330 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   12318:	61 2f       	mov	r22, r17
   1231a:	89 81       	ldd	r24, Y+1	; 0x01
   1231c:	9a 81       	ldd	r25, Y+2	; 0x02
   1231e:	e0 de       	rcall	.-576    	; 0x120e0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   12320:	02 c0       	rjmp	.+4      	; 0x12326 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   12322:	ce 01       	movw	r24, r28
   12324:	78 df       	rcall	.-272    	; 0x12216 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   12326:	18 83       	st	Y, r17
   12328:	df 91       	pop	r29
   1232a:	cf 91       	pop	r28
   1232c:	1f 91       	pop	r17
   1232e:	08 95       	ret
   12330:	1b 82       	std	Y+3, r1	; 0x03
   12332:	f2 cf       	rjmp	.-28     	; 0x12318 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

00012334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   12334:	cf 93       	push	r28
   12336:	df 93       	push	r29
   12338:	ec 01       	movw	r28, r24
   1233a:	88 81       	ld	r24, Y
   1233c:	99 81       	ldd	r25, Y+1	; 0x01
   1233e:	df df       	rcall	.-66     	; 0x122fe <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   12340:	2a 81       	ldd	r18, Y+2	; 0x02
   12342:	3b 81       	ldd	r19, Y+3	; 0x03
   12344:	82 0f       	add	r24, r18
   12346:	93 1f       	adc	r25, r19
   12348:	9b 83       	std	Y+3, r25	; 0x03
   1234a:	8a 83       	std	Y+2, r24	; 0x02
   1234c:	df 91       	pop	r29
   1234e:	cf 91       	pop	r28
   12350:	08 95       	ret

00012352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   12352:	cf 92       	push	r12
   12354:	df 92       	push	r13
   12356:	ef 92       	push	r14
   12358:	ff 92       	push	r15
   1235a:	0f 93       	push	r16
   1235c:	1f 93       	push	r17
   1235e:	cf 93       	push	r28
   12360:	df 93       	push	r29
   12362:	7c 01       	movw	r14, r24
   12364:	fc 01       	movw	r30, r24
   12366:	c0 80       	ld	r12, Z
   12368:	d1 80       	ldd	r13, Z+1	; 0x01
   1236a:	8b 01       	movw	r16, r22
   1236c:	c0 e0       	ldi	r28, 0x00	; 0
   1236e:	d0 e0       	ldi	r29, 0x00	; 0
   12370:	f8 01       	movw	r30, r16
   12372:	61 91       	ld	r22, Z+
   12374:	8f 01       	movw	r16, r30
   12376:	66 23       	and	r22, r22
   12378:	29 f0       	breq	.+10     	; 0x12384 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   1237a:	c6 01       	movw	r24, r12
   1237c:	c0 df       	rcall	.-128    	; 0x122fe <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   1237e:	c8 0f       	add	r28, r24
   12380:	d9 1f       	adc	r29, r25
   12382:	f6 cf       	rjmp	.-20     	; 0x12370 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   12384:	f7 01       	movw	r30, r14
   12386:	82 81       	ldd	r24, Z+2	; 0x02
   12388:	93 81       	ldd	r25, Z+3	; 0x03
   1238a:	c8 0f       	add	r28, r24
   1238c:	d9 1f       	adc	r29, r25
   1238e:	d3 83       	std	Z+3, r29	; 0x03
   12390:	c2 83       	std	Z+2, r28	; 0x02
   12392:	df 91       	pop	r29
   12394:	cf 91       	pop	r28
   12396:	1f 91       	pop	r17
   12398:	0f 91       	pop	r16
   1239a:	ff 90       	pop	r15
   1239c:	ef 90       	pop	r14
   1239e:	df 90       	pop	r13
   123a0:	cf 90       	pop	r12
   123a2:	08 95       	ret

000123a4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   123a4:	ff 92       	push	r15
   123a6:	0f 93       	push	r16
   123a8:	1f 93       	push	r17
   123aa:	cf 93       	push	r28
   123ac:	df 93       	push	r29
   123ae:	61 15       	cp	r22, r1
   123b0:	71 05       	cpc	r23, r1
   123b2:	41 f4       	brne	.+16     	; 0x123c4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   123b4:	6c ee       	ldi	r22, 0xEC	; 236
   123b6:	76 e0       	ldi	r23, 0x06	; 6
   123b8:	df 91       	pop	r29
   123ba:	cf 91       	pop	r28
   123bc:	1f 91       	pop	r17
   123be:	0f 91       	pop	r16
   123c0:	ff 90       	pop	r15
   123c2:	c7 cf       	rjmp	.-114    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   123c4:	8b 01       	movw	r16, r22
   123c6:	ec 01       	movw	r28, r24
   123c8:	62 e2       	ldi	r22, 0x22	; 34
   123ca:	ce 01       	movw	r24, r28
   123cc:	b3 df       	rcall	.-154    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   123ce:	f8 01       	movw	r30, r16
   123d0:	61 91       	ld	r22, Z+
   123d2:	8f 01       	movw	r16, r30
   123d4:	66 23       	and	r22, r22
   123d6:	51 f0       	breq	.+20     	; 0x123ec <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   123d8:	ed ed       	ldi	r30, 0xDD	; 221
   123da:	f6 e0       	ldi	r31, 0x06	; 6
   123dc:	f0 80       	ld	r15, Z
   123de:	ff 20       	and	r15, r15
   123e0:	a1 f3       	breq	.-24     	; 0x123ca <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   123e2:	81 81       	ldd	r24, Z+1	; 0x01
   123e4:	68 17       	cp	r22, r24
   123e6:	51 f0       	breq	.+20     	; 0x123fc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   123e8:	32 96       	adiw	r30, 0x02	; 2
   123ea:	f8 cf       	rjmp	.-16     	; 0x123dc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   123ec:	62 e2       	ldi	r22, 0x22	; 34
   123ee:	ce 01       	movw	r24, r28
   123f0:	df 91       	pop	r29
   123f2:	cf 91       	pop	r28
   123f4:	1f 91       	pop	r17
   123f6:	0f 91       	pop	r16
   123f8:	ff 90       	pop	r15
   123fa:	9c cf       	rjmp	.-200    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   123fc:	6c e5       	ldi	r22, 0x5C	; 92
   123fe:	ce 01       	movw	r24, r28
   12400:	99 df       	rcall	.-206    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12402:	6f 2d       	mov	r22, r15
   12404:	e2 cf       	rjmp	.-60     	; 0x123ca <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

00012406 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   12406:	0f 93       	push	r16
   12408:	1f 93       	push	r17
   1240a:	cf 93       	push	r28
   1240c:	df 93       	push	r29
   1240e:	cd b7       	in	r28, 0x3d	; 61
   12410:	de b7       	in	r29, 0x3e	; 62
   12412:	66 97       	sbiw	r28, 0x16	; 22
   12414:	0f b6       	in	r0, 0x3f	; 63
   12416:	f8 94       	cli
   12418:	de bf       	out	0x3e, r29	; 62
   1241a:	0f be       	out	0x3f, r0	; 63
   1241c:	cd bf       	out	0x3d, r28	; 61
   1241e:	9c 01       	movw	r18, r24
   12420:	cb 01       	movw	r24, r22
   12422:	1e 8a       	std	Y+22, r1	; 0x16
   12424:	fe 01       	movw	r30, r28
   12426:	76 96       	adiw	r30, 0x16	; 22
   12428:	0a e0       	ldi	r16, 0x0A	; 10
   1242a:	10 e0       	ldi	r17, 0x00	; 0
   1242c:	b8 01       	movw	r22, r16
   1242e:	0e 94 a5 eb 	call	0x1d74a	; 0x1d74a <__divmodhi4>
   12432:	80 5d       	subi	r24, 0xD0	; 208
   12434:	82 93       	st	-Z, r24
   12436:	cb 01       	movw	r24, r22
   12438:	00 97       	sbiw	r24, 0x00	; 0
   1243a:	c1 f7       	brne	.-16     	; 0x1242c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   1243c:	bf 01       	movw	r22, r30
   1243e:	c9 01       	movw	r24, r18
   12440:	88 df       	rcall	.-240    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12442:	66 96       	adiw	r28, 0x16	; 22
   12444:	0f b6       	in	r0, 0x3f	; 63
   12446:	f8 94       	cli
   12448:	de bf       	out	0x3e, r29	; 62
   1244a:	0f be       	out	0x3f, r0	; 63
   1244c:	cd bf       	out	0x3d, r28	; 61
   1244e:	df 91       	pop	r29
   12450:	cf 91       	pop	r28
   12452:	1f 91       	pop	r17
   12454:	0f 91       	pop	r16
   12456:	08 95       	ret

00012458 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   12458:	8f 92       	push	r8
   1245a:	9f 92       	push	r9
   1245c:	af 92       	push	r10
   1245e:	bf 92       	push	r11
   12460:	ef 92       	push	r14
   12462:	ff 92       	push	r15
   12464:	0f 93       	push	r16
   12466:	1f 93       	push	r17
   12468:	cf 93       	push	r28
   1246a:	df 93       	push	r29
   1246c:	cd b7       	in	r28, 0x3d	; 61
   1246e:	de b7       	in	r29, 0x3e	; 62
   12470:	66 97       	sbiw	r28, 0x16	; 22
   12472:	0f b6       	in	r0, 0x3f	; 63
   12474:	f8 94       	cli
   12476:	de bf       	out	0x3e, r29	; 62
   12478:	0f be       	out	0x3f, r0	; 63
   1247a:	cd bf       	out	0x3d, r28	; 61
   1247c:	7c 01       	movw	r14, r24
   1247e:	1e 8a       	std	Y+22, r1	; 0x16
   12480:	8e 01       	movw	r16, r28
   12482:	0a 5e       	subi	r16, 0xEA	; 234
   12484:	1f 4f       	sbci	r17, 0xFF	; 255
   12486:	8a e0       	ldi	r24, 0x0A	; 10
   12488:	88 2e       	mov	r8, r24
   1248a:	91 2c       	mov	r9, r1
   1248c:	a1 2c       	mov	r10, r1
   1248e:	b1 2c       	mov	r11, r1
   12490:	cb 01       	movw	r24, r22
   12492:	ba 01       	movw	r22, r20
   12494:	a5 01       	movw	r20, r10
   12496:	94 01       	movw	r18, r8
   12498:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   1249c:	94 2f       	mov	r25, r20
   1249e:	85 2f       	mov	r24, r21
   124a0:	60 5d       	subi	r22, 0xD0	; 208
   124a2:	f8 01       	movw	r30, r16
   124a4:	62 93       	st	-Z, r22
   124a6:	8f 01       	movw	r16, r30
   124a8:	a9 01       	movw	r20, r18
   124aa:	69 2f       	mov	r22, r25
   124ac:	78 2f       	mov	r23, r24
   124ae:	41 15       	cp	r20, r1
   124b0:	51 05       	cpc	r21, r1
   124b2:	61 05       	cpc	r22, r1
   124b4:	71 05       	cpc	r23, r1
   124b6:	61 f7       	brne	.-40     	; 0x12490 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   124b8:	bf 01       	movw	r22, r30
   124ba:	c7 01       	movw	r24, r14
   124bc:	4a df       	rcall	.-364    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   124be:	66 96       	adiw	r28, 0x16	; 22
   124c0:	0f b6       	in	r0, 0x3f	; 63
   124c2:	f8 94       	cli
   124c4:	de bf       	out	0x3e, r29	; 62
   124c6:	0f be       	out	0x3f, r0	; 63
   124c8:	cd bf       	out	0x3d, r28	; 61
   124ca:	df 91       	pop	r29
   124cc:	cf 91       	pop	r28
   124ce:	1f 91       	pop	r17
   124d0:	0f 91       	pop	r16
   124d2:	ff 90       	pop	r15
   124d4:	ef 90       	pop	r14
   124d6:	bf 90       	pop	r11
   124d8:	af 90       	pop	r10
   124da:	9f 90       	pop	r9
   124dc:	8f 90       	pop	r8
   124de:	08 95       	ret

000124e0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   124e0:	4f 92       	push	r4
   124e2:	5f 92       	push	r5
   124e4:	6f 92       	push	r6
   124e6:	7f 92       	push	r7
   124e8:	af 92       	push	r10
   124ea:	bf 92       	push	r11
   124ec:	cf 92       	push	r12
   124ee:	df 92       	push	r13
   124f0:	ef 92       	push	r14
   124f2:	ff 92       	push	r15
   124f4:	0f 93       	push	r16
   124f6:	1f 93       	push	r17
   124f8:	cf 93       	push	r28
   124fa:	df 93       	push	r29
   124fc:	cd b7       	in	r28, 0x3d	; 61
   124fe:	de b7       	in	r29, 0x3e	; 62
   12500:	6b 97       	sbiw	r28, 0x1b	; 27
   12502:	0f b6       	in	r0, 0x3f	; 63
   12504:	f8 94       	cli
   12506:	de bf       	out	0x3e, r29	; 62
   12508:	0f be       	out	0x3f, r0	; 63
   1250a:	cd bf       	out	0x3d, r28	; 61
   1250c:	8c 01       	movw	r16, r24
   1250e:	6a 01       	movw	r12, r20
   12510:	7b 01       	movw	r14, r22
   12512:	9a 01       	movw	r18, r20
   12514:	ab 01       	movw	r20, r22
   12516:	c7 01       	movw	r24, r14
   12518:	b6 01       	movw	r22, r12
   1251a:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   1251e:	88 23       	and	r24, r24
   12520:	19 f0       	breq	.+6      	; 0x12528 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   12522:	68 ef       	ldi	r22, 0xF8	; 248
   12524:	76 e0       	ldi	r23, 0x06	; 6
   12526:	29 c0       	rjmp	.+82     	; 0x1257a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   12528:	20 e0       	ldi	r18, 0x00	; 0
   1252a:	30 e0       	ldi	r19, 0x00	; 0
   1252c:	a9 01       	movw	r20, r18
   1252e:	c7 01       	movw	r24, r14
   12530:	b6 01       	movw	r22, r12
   12532:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   12536:	87 ff       	sbrs	r24, 7
   12538:	07 c0       	rjmp	.+14     	; 0x12548 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   1253a:	6d e2       	ldi	r22, 0x2D	; 45
   1253c:	c8 01       	movw	r24, r16
   1253e:	fa de       	rcall	.-524    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12540:	f7 fa       	bst	r15, 7
   12542:	f0 94       	com	r15
   12544:	f7 f8       	bld	r15, 7
   12546:	f0 94       	com	r15
   12548:	20 e0       	ldi	r18, 0x00	; 0
   1254a:	30 e0       	ldi	r19, 0x00	; 0
   1254c:	a9 01       	movw	r20, r18
   1254e:	c7 01       	movw	r24, r14
   12550:	b6 01       	movw	r22, r12
   12552:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   12556:	88 23       	and	r24, r24
   12558:	99 f0       	breq	.+38     	; 0x12580 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   1255a:	a7 01       	movw	r20, r14
   1255c:	96 01       	movw	r18, r12
   1255e:	c7 01       	movw	r24, r14
   12560:	b6 01       	movw	r22, r12
   12562:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   12566:	9b 01       	movw	r18, r22
   12568:	ac 01       	movw	r20, r24
   1256a:	c7 01       	movw	r24, r14
   1256c:	b6 01       	movw	r22, r12
   1256e:	0e 94 8c d1 	call	0x1a318	; 0x1a318 <__cmpsf2>
   12572:	81 11       	cpse	r24, r1
   12574:	05 c0       	rjmp	.+10     	; 0x12580 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   12576:	6f ef       	ldi	r22, 0xFF	; 255
   12578:	76 e0       	ldi	r23, 0x06	; 6
   1257a:	c8 01       	movw	r24, r16
   1257c:	ea de       	rcall	.-556    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1257e:	51 c0       	rjmp	.+162    	; 0x12622 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12580:	b7 01       	movw	r22, r14
   12582:	a6 01       	movw	r20, r12
   12584:	ce 01       	movw	r24, r28
   12586:	41 96       	adiw	r24, 0x11	; 17
   12588:	2d dc       	rcall	.-1958   	; 0x11de4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   1258a:	49 89       	ldd	r20, Y+17	; 0x11
   1258c:	5a 89       	ldd	r21, Y+18	; 0x12
   1258e:	6b 89       	ldd	r22, Y+19	; 0x13
   12590:	7c 89       	ldd	r23, Y+20	; 0x14
   12592:	c8 01       	movw	r24, r16
   12594:	61 df       	rcall	.-318    	; 0x12458 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   12596:	bb 8c       	ldd	r11, Y+27	; 0x1b
   12598:	bb 20       	and	r11, r11
   1259a:	41 f1       	breq	.+80     	; 0x125ec <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   1259c:	6d 89       	ldd	r22, Y+21	; 0x15
   1259e:	7e 89       	ldd	r23, Y+22	; 0x16
   125a0:	8f 89       	ldd	r24, Y+23	; 0x17
   125a2:	98 8d       	ldd	r25, Y+24	; 0x18
   125a4:	18 8a       	std	Y+16, r1	; 0x10
   125a6:	ab 2c       	mov	r10, r11
   125a8:	6e 01       	movw	r12, r28
   125aa:	20 e1       	ldi	r18, 0x10	; 16
   125ac:	c2 0e       	add	r12, r18
   125ae:	d1 1c       	adc	r13, r1
   125b0:	76 01       	movw	r14, r12
   125b2:	2a e0       	ldi	r18, 0x0A	; 10
   125b4:	42 2e       	mov	r4, r18
   125b6:	51 2c       	mov	r5, r1
   125b8:	61 2c       	mov	r6, r1
   125ba:	71 2c       	mov	r7, r1
   125bc:	aa 94       	dec	r10
   125be:	ef ef       	ldi	r30, 0xFF	; 255
   125c0:	ae 16       	cp	r10, r30
   125c2:	59 f0       	breq	.+22     	; 0x125da <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   125c4:	a3 01       	movw	r20, r6
   125c6:	92 01       	movw	r18, r4
   125c8:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   125cc:	60 5d       	subi	r22, 0xD0	; 208
   125ce:	f6 01       	movw	r30, r12
   125d0:	62 93       	st	-Z, r22
   125d2:	6f 01       	movw	r12, r30
   125d4:	b9 01       	movw	r22, r18
   125d6:	ca 01       	movw	r24, r20
   125d8:	f1 cf       	rjmp	.-30     	; 0x125bc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   125da:	b7 01       	movw	r22, r14
   125dc:	6b 19       	sub	r22, r11
   125de:	71 09       	sbc	r23, r1
   125e0:	8e e2       	ldi	r24, 0x2E	; 46
   125e2:	fb 01       	movw	r30, r22
   125e4:	82 93       	st	-Z, r24
   125e6:	bf 01       	movw	r22, r30
   125e8:	c8 01       	movw	r24, r16
   125ea:	b3 de       	rcall	.-666    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   125ec:	89 8d       	ldd	r24, Y+25	; 0x19
   125ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
   125f0:	97 ff       	sbrs	r25, 7
   125f2:	0b c0       	rjmp	.+22     	; 0x1260a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   125f4:	6c ef       	ldi	r22, 0xFC	; 252
   125f6:	76 e0       	ldi	r23, 0x06	; 6
   125f8:	c8 01       	movw	r24, r16
   125fa:	ab de       	rcall	.-682    	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   125fc:	69 8d       	ldd	r22, Y+25	; 0x19
   125fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12600:	71 95       	neg	r23
   12602:	61 95       	neg	r22
   12604:	71 09       	sbc	r23, r1
   12606:	c8 01       	movw	r24, r16
   12608:	fe de       	rcall	.-516    	; 0x12406 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   1260a:	89 8d       	ldd	r24, Y+25	; 0x19
   1260c:	9a 8d       	ldd	r25, Y+26	; 0x1a
   1260e:	18 16       	cp	r1, r24
   12610:	19 06       	cpc	r1, r25
   12612:	3c f4       	brge	.+14     	; 0x12622 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12614:	65 e6       	ldi	r22, 0x65	; 101
   12616:	c8 01       	movw	r24, r16
   12618:	8d de       	rcall	.-742    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1261a:	69 8d       	ldd	r22, Y+25	; 0x19
   1261c:	7a 8d       	ldd	r23, Y+26	; 0x1a
   1261e:	c8 01       	movw	r24, r16
   12620:	f2 de       	rcall	.-540    	; 0x12406 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   12622:	6b 96       	adiw	r28, 0x1b	; 27
   12624:	0f b6       	in	r0, 0x3f	; 63
   12626:	f8 94       	cli
   12628:	de bf       	out	0x3e, r29	; 62
   1262a:	0f be       	out	0x3f, r0	; 63
   1262c:	cd bf       	out	0x3d, r28	; 61
   1262e:	df 91       	pop	r29
   12630:	cf 91       	pop	r28
   12632:	1f 91       	pop	r17
   12634:	0f 91       	pop	r16
   12636:	ff 90       	pop	r15
   12638:	ef 90       	pop	r14
   1263a:	df 90       	pop	r13
   1263c:	cf 90       	pop	r12
   1263e:	bf 90       	pop	r11
   12640:	af 90       	pop	r10
   12642:	7f 90       	pop	r7
   12644:	6f 90       	pop	r6
   12646:	5f 90       	pop	r5
   12648:	4f 90       	pop	r4
   1264a:	08 95       	ret

0001264c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   1264c:	0f 93       	push	r16
   1264e:	1f 93       	push	r17
   12650:	cf 93       	push	r28
   12652:	df 93       	push	r29
   12654:	eb 01       	movw	r28, r22
   12656:	dc 01       	movw	r26, r24
   12658:	ec 91       	ld	r30, X
   1265a:	4e 2f       	mov	r20, r30
   1265c:	50 e0       	ldi	r21, 0x00	; 0
   1265e:	fa 01       	movw	r30, r20
   12660:	31 97       	sbiw	r30, 0x01	; 1
   12662:	e8 30       	cpi	r30, 0x08	; 8
   12664:	f1 05       	cpc	r31, r1
   12666:	08 f0       	brcs	.+2      	; 0x1266a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   12668:	6e c0       	rjmp	.+220    	; 0x12746 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   1266a:	8c 01       	movw	r16, r24
   1266c:	88 27       	eor	r24, r24
   1266e:	e9 51       	subi	r30, 0x19	; 25
   12670:	ff 4f       	sbci	r31, 0xFF	; 255
   12672:	8f 4f       	sbci	r24, 0xFF	; 255
   12674:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
   12678:	fd 01       	movw	r30, r26
   1267a:	41 81       	ldd	r20, Z+1	; 0x01
   1267c:	52 81       	ldd	r21, Z+2	; 0x02
   1267e:	63 81       	ldd	r22, Z+3	; 0x03
   12680:	74 81       	ldd	r23, Z+4	; 0x04
   12682:	ce 01       	movw	r24, r28
   12684:	df 91       	pop	r29
   12686:	cf 91       	pop	r28
   12688:	1f 91       	pop	r17
   1268a:	0f 91       	pop	r16
   1268c:	29 cf       	rjmp	.-430    	; 0x124e0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   1268e:	11 96       	adiw	r26, 0x01	; 1
   12690:	0d 91       	ld	r16, X+
   12692:	1c 91       	ld	r17, X
   12694:	12 97       	sbiw	r26, 0x02	; 2
   12696:	6b e5       	ldi	r22, 0x5B	; 91
   12698:	ce 01       	movw	r24, r28
   1269a:	4c de       	rcall	.-872    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1269c:	f8 01       	movw	r30, r16
   1269e:	02 81       	ldd	r16, Z+2	; 0x02
   126a0:	13 81       	ldd	r17, Z+3	; 0x03
   126a2:	01 15       	cp	r16, r1
   126a4:	11 05       	cpc	r17, r1
   126a6:	71 f0       	breq	.+28     	; 0x126c4 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   126a8:	be 01       	movw	r22, r28
   126aa:	c8 01       	movw	r24, r16
   126ac:	02 96       	adiw	r24, 0x02	; 2
   126ae:	ce df       	rcall	.-100    	; 0x1264c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   126b0:	d8 01       	movw	r26, r16
   126b2:	0d 91       	ld	r16, X+
   126b4:	1c 91       	ld	r17, X
   126b6:	01 15       	cp	r16, r1
   126b8:	11 05       	cpc	r17, r1
   126ba:	21 f0       	breq	.+8      	; 0x126c4 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   126bc:	6c e2       	ldi	r22, 0x2C	; 44
   126be:	ce 01       	movw	r24, r28
   126c0:	39 de       	rcall	.-910    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   126c2:	ef cf       	rjmp	.-34     	; 0x126a2 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   126c4:	6d e5       	ldi	r22, 0x5D	; 93
   126c6:	ce 01       	movw	r24, r28
   126c8:	df 91       	pop	r29
   126ca:	cf 91       	pop	r28
   126cc:	1f 91       	pop	r17
   126ce:	0f 91       	pop	r16
   126d0:	31 ce       	rjmp	.-926    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   126d2:	fd 01       	movw	r30, r26
   126d4:	81 81       	ldd	r24, Z+1	; 0x01
   126d6:	92 81       	ldd	r25, Z+2	; 0x02
   126d8:	df 91       	pop	r29
   126da:	cf 91       	pop	r28
   126dc:	1f 91       	pop	r17
   126de:	0f 91       	pop	r16
   126e0:	37 c0       	rjmp	.+110    	; 0x12750 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   126e2:	11 96       	adiw	r26, 0x01	; 1
   126e4:	6d 91       	ld	r22, X+
   126e6:	7c 91       	ld	r23, X
   126e8:	12 97       	sbiw	r26, 0x02	; 2
   126ea:	ce 01       	movw	r24, r28
   126ec:	df 91       	pop	r29
   126ee:	cf 91       	pop	r28
   126f0:	1f 91       	pop	r17
   126f2:	0f 91       	pop	r16
   126f4:	57 ce       	rjmp	.-850    	; 0x123a4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   126f6:	fd 01       	movw	r30, r26
   126f8:	61 81       	ldd	r22, Z+1	; 0x01
   126fa:	72 81       	ldd	r23, Z+2	; 0x02
   126fc:	1e c0       	rjmp	.+60     	; 0x1273a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   126fe:	6d e2       	ldi	r22, 0x2D	; 45
   12700:	ce 01       	movw	r24, r28
   12702:	18 de       	rcall	.-976    	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12704:	d8 01       	movw	r26, r16
   12706:	11 96       	adiw	r26, 0x01	; 1
   12708:	4d 91       	ld	r20, X+
   1270a:	5d 91       	ld	r21, X+
   1270c:	6d 91       	ld	r22, X+
   1270e:	7c 91       	ld	r23, X
   12710:	14 97       	sbiw	r26, 0x04	; 4
   12712:	ce 01       	movw	r24, r28
   12714:	df 91       	pop	r29
   12716:	cf 91       	pop	r28
   12718:	1f 91       	pop	r17
   1271a:	0f 91       	pop	r16
   1271c:	9d ce       	rjmp	.-710    	; 0x12458 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   1271e:	fd 01       	movw	r30, r26
   12720:	81 81       	ldd	r24, Z+1	; 0x01
   12722:	92 81       	ldd	r25, Z+2	; 0x02
   12724:	a3 81       	ldd	r26, Z+3	; 0x03
   12726:	b4 81       	ldd	r27, Z+4	; 0x04
   12728:	89 2b       	or	r24, r25
   1272a:	8a 2b       	or	r24, r26
   1272c:	8b 2b       	or	r24, r27
   1272e:	19 f4       	brne	.+6      	; 0x12736 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   12730:	6d e0       	ldi	r22, 0x0D	; 13
   12732:	77 e0       	ldi	r23, 0x07	; 7
   12734:	02 c0       	rjmp	.+4      	; 0x1273a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   12736:	68 e0       	ldi	r22, 0x08	; 8
   12738:	77 e0       	ldi	r23, 0x07	; 7
   1273a:	ce 01       	movw	r24, r28
   1273c:	df 91       	pop	r29
   1273e:	cf 91       	pop	r28
   12740:	1f 91       	pop	r17
   12742:	0f 91       	pop	r16
   12744:	06 ce       	rjmp	.-1012   	; 0x12352 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12746:	df 91       	pop	r29
   12748:	cf 91       	pop	r28
   1274a:	1f 91       	pop	r17
   1274c:	0f 91       	pop	r16
   1274e:	08 95       	ret

00012750 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   12750:	0f 93       	push	r16
   12752:	1f 93       	push	r17
   12754:	cf 93       	push	r28
   12756:	df 93       	push	r29
   12758:	8c 01       	movw	r16, r24
   1275a:	eb 01       	movw	r28, r22
   1275c:	6b e7       	ldi	r22, 0x7B	; 123
   1275e:	ce 01       	movw	r24, r28
   12760:	e9 dd       	rcall	.-1070   	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12762:	f8 01       	movw	r30, r16
   12764:	02 81       	ldd	r16, Z+2	; 0x02
   12766:	13 81       	ldd	r17, Z+3	; 0x03
   12768:	01 15       	cp	r16, r1
   1276a:	11 05       	cpc	r17, r1
   1276c:	b1 f0       	breq	.+44     	; 0x1279a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   1276e:	f8 01       	movw	r30, r16
   12770:	62 81       	ldd	r22, Z+2	; 0x02
   12772:	73 81       	ldd	r23, Z+3	; 0x03
   12774:	ce 01       	movw	r24, r28
   12776:	16 de       	rcall	.-980    	; 0x123a4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12778:	6a e3       	ldi	r22, 0x3A	; 58
   1277a:	ce 01       	movw	r24, r28
   1277c:	db dd       	rcall	.-1098   	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1277e:	be 01       	movw	r22, r28
   12780:	c8 01       	movw	r24, r16
   12782:	04 96       	adiw	r24, 0x04	; 4
   12784:	63 df       	rcall	.-314    	; 0x1264c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12786:	f8 01       	movw	r30, r16
   12788:	00 81       	ld	r16, Z
   1278a:	11 81       	ldd	r17, Z+1	; 0x01
   1278c:	01 15       	cp	r16, r1
   1278e:	11 05       	cpc	r17, r1
   12790:	21 f0       	breq	.+8      	; 0x1279a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   12792:	6c e2       	ldi	r22, 0x2C	; 44
   12794:	ce 01       	movw	r24, r28
   12796:	ce dd       	rcall	.-1124   	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12798:	e7 cf       	rjmp	.-50     	; 0x12768 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   1279a:	6d e7       	ldi	r22, 0x7D	; 125
   1279c:	ce 01       	movw	r24, r28
   1279e:	df 91       	pop	r29
   127a0:	cf 91       	pop	r28
   127a2:	1f 91       	pop	r17
   127a4:	0f 91       	pop	r16
   127a6:	c6 cd       	rjmp	.-1140   	; 0x12334 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

000127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   127a8:	cf 93       	push	r28
   127aa:	df 93       	push	r29
   127ac:	cd b7       	in	r28, 0x3d	; 61
   127ae:	de b7       	in	r29, 0x3e	; 62
   127b0:	2f 97       	sbiw	r28, 0x0f	; 15
   127b2:	0f b6       	in	r0, 0x3f	; 63
   127b4:	f8 94       	cli
   127b6:	de bf       	out	0x3e, r29	; 62
   127b8:	0f be       	out	0x3f, r0	; 63
   127ba:	cd bf       	out	0x3d, r28	; 61
   127bc:	41 50       	subi	r20, 0x01	; 1
   127be:	51 09       	sbc	r21, r1
   127c0:	46 0f       	add	r20, r22
   127c2:	57 1f       	adc	r21, r23
   127c4:	5a 87       	std	Y+10, r21	; 0x0a
   127c6:	49 87       	std	Y+9, r20	; 0x09
   127c8:	7c 87       	std	Y+12, r23	; 0x0c
   127ca:	6b 87       	std	Y+11, r22	; 0x0b
   127cc:	fb 01       	movw	r30, r22
   127ce:	10 82       	st	Z, r1
   127d0:	9e 01       	movw	r18, r28
   127d2:	27 5f       	subi	r18, 0xF7	; 247
   127d4:	3f 4f       	sbci	r19, 0xFF	; 255
   127d6:	3e 87       	std	Y+14, r19	; 0x0e
   127d8:	2d 87       	std	Y+13, r18	; 0x0d
   127da:	2f 85       	ldd	r18, Y+15	; 0x0f
   127dc:	20 78       	andi	r18, 0x80	; 128
   127de:	20 62       	ori	r18, 0x20	; 32
   127e0:	20 68       	ori	r18, 0x80	; 128
   127e2:	2f 87       	std	Y+15, r18	; 0x0f
   127e4:	9e 01       	movw	r18, r28
   127e6:	23 5f       	subi	r18, 0xF3	; 243
   127e8:	3f 4f       	sbci	r19, 0xFF	; 255
   127ea:	3f 83       	std	Y+7, r19	; 0x07
   127ec:	2e 83       	std	Y+6, r18	; 0x06
   127ee:	1d 82       	std	Y+5, r1	; 0x05
   127f0:	18 86       	std	Y+8, r1	; 0x08
   127f2:	28 50       	subi	r18, 0x08	; 8
   127f4:	31 09       	sbc	r19, r1
   127f6:	3a 83       	std	Y+2, r19	; 0x02
   127f8:	29 83       	std	Y+1, r18	; 0x01
   127fa:	1c 82       	std	Y+4, r1	; 0x04
   127fc:	1b 82       	std	Y+3, r1	; 0x03
   127fe:	be 01       	movw	r22, r28
   12800:	6f 5f       	subi	r22, 0xFF	; 255
   12802:	7f 4f       	sbci	r23, 0xFF	; 255
   12804:	a5 df       	rcall	.-182    	; 0x12750 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12806:	8b 81       	ldd	r24, Y+3	; 0x03
   12808:	9c 81       	ldd	r25, Y+4	; 0x04
   1280a:	2f 96       	adiw	r28, 0x0f	; 15
   1280c:	0f b6       	in	r0, 0x3f	; 63
   1280e:	f8 94       	cli
   12810:	de bf       	out	0x3e, r29	; 62
   12812:	0f be       	out	0x3f, r0	; 63
   12814:	cd bf       	out	0x3d, r28	; 61
   12816:	df 91       	pop	r29
   12818:	cf 91       	pop	r28
   1281a:	08 95       	ret

0001281c <_Z12Pub_Sub_DataPcPhjh>:
   1281c:	2f 92       	push	r2
   1281e:	3f 92       	push	r3
   12820:	4f 92       	push	r4
   12822:	5f 92       	push	r5
   12824:	6f 92       	push	r6
   12826:	7f 92       	push	r7
   12828:	8f 92       	push	r8
   1282a:	9f 92       	push	r9
   1282c:	af 92       	push	r10
   1282e:	bf 92       	push	r11
   12830:	cf 92       	push	r12
   12832:	df 92       	push	r13
   12834:	ef 92       	push	r14
   12836:	ff 92       	push	r15
   12838:	0f 93       	push	r16
   1283a:	1f 93       	push	r17
   1283c:	cf 93       	push	r28
   1283e:	df 93       	push	r29
   12840:	cd b7       	in	r28, 0x3d	; 61
   12842:	de b7       	in	r29, 0x3e	; 62
   12844:	ce 5b       	subi	r28, 0xBE	; 190
   12846:	d6 40       	sbci	r29, 0x06	; 6
   12848:	0f b6       	in	r0, 0x3f	; 63
   1284a:	f8 94       	cli
   1284c:	de bf       	out	0x3e, r29	; 62
   1284e:	0f be       	out	0x3f, r0	; 63
   12850:	cd bf       	out	0x3d, r28	; 61
   12852:	ae 01       	movw	r20, r28
   12854:	47 5f       	subi	r20, 0xF7	; 247
   12856:	5f 4f       	sbci	r21, 0xFF	; 255
   12858:	5c 83       	std	Y+4, r21	; 0x04
   1285a:	4b 83       	std	Y+3, r20	; 0x03
   1285c:	4c e2       	ldi	r20, 0x2C	; 44
   1285e:	56 e0       	ldi	r21, 0x06	; 6
   12860:	5e 83       	std	Y+6, r21	; 0x06
   12862:	4d 83       	std	Y+5, r20	; 0x05
   12864:	18 86       	std	Y+8, r1	; 0x08
   12866:	1f 82       	std	Y+7, r1	; 0x07
   12868:	43 ed       	ldi	r20, 0xD3	; 211
   1286a:	57 e0       	ldi	r21, 0x07	; 7
   1286c:	5a 83       	std	Y+2, r21	; 0x02
   1286e:	49 83       	std	Y+1, r20	; 0x01
   12870:	21 30       	cpi	r18, 0x01	; 1
   12872:	11 f0       	breq	.+4      	; 0x12878 <_Z12Pub_Sub_DataPcPhjh+0x5c>
   12874:	0c 94 52 a5 	jmp	0x14aa4	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   12878:	61 15       	cp	r22, r1
   1287a:	71 05       	cpc	r23, r1
   1287c:	19 f4       	brne	.+6      	; 0x12884 <_Z12Pub_Sub_DataPcPhjh+0x68>
   1287e:	2b ee       	ldi	r18, 0xEB	; 235
   12880:	36 e0       	ldi	r19, 0x06	; 6
   12882:	01 c0       	rjmp	.+2      	; 0x12886 <_Z12Pub_Sub_DataPcPhjh+0x6a>
   12884:	9b 01       	movw	r18, r22
   12886:	ca 54       	subi	r28, 0x4A	; 74
   12888:	d9 4f       	sbci	r29, 0xF9	; 249
   1288a:	99 83       	std	Y+1, r25	; 0x01
   1288c:	88 83       	st	Y, r24
   1288e:	c6 5b       	subi	r28, 0xB6	; 182
   12890:	d6 40       	sbci	r29, 0x06	; 6
   12892:	ae 01       	movw	r20, r28
   12894:	4b 5c       	subi	r20, 0xCB	; 203
   12896:	59 4f       	sbci	r21, 0xF9	; 249
   12898:	c2 55       	subi	r28, 0x52	; 82
   1289a:	d9 4f       	sbci	r29, 0xF9	; 249
   1289c:	59 83       	std	Y+1, r21	; 0x01
   1289e:	48 83       	st	Y, r20
   128a0:	ce 5a       	subi	r28, 0xAE	; 174
   128a2:	d6 40       	sbci	r29, 0x06	; 6
   128a4:	ce 01       	movw	r24, r28
   128a6:	01 96       	adiw	r24, 0x01	; 1
   128a8:	cb 5c       	subi	r28, 0xCB	; 203
   128aa:	d9 4f       	sbci	r29, 0xF9	; 249
   128ac:	99 83       	std	Y+1, r25	; 0x01
   128ae:	88 83       	st	Y, r24
   128b0:	c5 53       	subi	r28, 0x35	; 53
   128b2:	d6 40       	sbci	r29, 0x06	; 6
   128b4:	c9 5c       	subi	r28, 0xC9	; 201
   128b6:	d9 4f       	sbci	r29, 0xF9	; 249
   128b8:	39 83       	std	Y+1, r19	; 0x01
   128ba:	28 83       	st	Y, r18
   128bc:	c7 53       	subi	r28, 0x37	; 55
   128be:	d6 40       	sbci	r29, 0x06	; 6
   128c0:	c7 5c       	subi	r28, 0xC7	; 199
   128c2:	d9 4f       	sbci	r29, 0xF9	; 249
   128c4:	79 83       	std	Y+1, r23	; 0x01
   128c6:	68 83       	st	Y, r22
   128c8:	c9 53       	subi	r28, 0x39	; 57
   128ca:	d6 40       	sbci	r29, 0x06	; 6
   128cc:	8a e0       	ldi	r24, 0x0A	; 10
   128ce:	c5 5c       	subi	r28, 0xC5	; 197
   128d0:	d9 4f       	sbci	r29, 0xF9	; 249
   128d2:	88 83       	st	Y, r24
   128d4:	cb 53       	subi	r28, 0x3B	; 59
   128d6:	d6 40       	sbci	r29, 0x06	; 6
   128d8:	ca 01       	movw	r24, r20
   128da:	28 d9       	rcall	.-3504   	; 0x11b2c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   128dc:	2c 01       	movw	r4, r24
   128de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   128e2:	81 30       	cpi	r24, 0x01	; 1
   128e4:	31 f4       	brne	.+12     	; 0x128f2 <_Z12Pub_Sub_DataPcPhjh+0xd6>
   128e6:	60 e5       	ldi	r22, 0x50	; 80
   128e8:	7b e3       	ldi	r23, 0x3B	; 59
   128ea:	86 ec       	ldi	r24, 0xC6	; 198
   128ec:	94 e1       	ldi	r25, 0x14	; 20
   128ee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   128f2:	d2 01       	movw	r26, r4
   128f4:	8d 91       	ld	r24, X+
   128f6:	9c 91       	ld	r25, X
   128f8:	89 2b       	or	r24, r25
   128fa:	11 f4       	brne	.+4      	; 0x12900 <_Z12Pub_Sub_DataPcPhjh+0xe4>
   128fc:	0c 94 52 a5 	jmp	0x14aa4	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   12900:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12904:	81 30       	cpi	r24, 0x01	; 1
   12906:	31 f4       	brne	.+12     	; 0x12914 <_Z12Pub_Sub_DataPcPhjh+0xf8>
   12908:	67 e3       	ldi	r22, 0x37	; 55
   1290a:	7b e3       	ldi	r23, 0x3B	; 59
   1290c:	86 ec       	ldi	r24, 0xC6	; 198
   1290e:	94 e1       	ldi	r25, 0x14	; 20
   12910:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   12914:	8e 01       	movw	r16, r28
   12916:	0b 57       	subi	r16, 0x7B	; 123
   12918:	19 4f       	sbci	r17, 0xF9	; 249
   1291a:	88 e2       	ldi	r24, 0x28	; 40
   1291c:	f8 01       	movw	r30, r16
   1291e:	11 92       	st	Z+, r1
   12920:	8a 95       	dec	r24
   12922:	e9 f7       	brne	.-6      	; 0x1291e <_Z12Pub_Sub_DataPcPhjh+0x102>
   12924:	8e ec       	ldi	r24, 0xCE	; 206
   12926:	93 e1       	ldi	r25, 0x13	; 19
   12928:	9f 93       	push	r25
   1292a:	8f 93       	push	r24
   1292c:	8e ec       	ldi	r24, 0xCE	; 206
   1292e:	95 e0       	ldi	r25, 0x05	; 5
   12930:	9f 93       	push	r25
   12932:	8f 93       	push	r24
   12934:	1f 93       	push	r17
   12936:	0f 93       	push	r16
   12938:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   1293c:	ca 54       	subi	r28, 0x4A	; 74
   1293e:	d9 4f       	sbci	r29, 0xF9	; 249
   12940:	68 81       	ld	r22, Y
   12942:	79 81       	ldd	r23, Y+1	; 0x01
   12944:	c6 5b       	subi	r28, 0xB6	; 182
   12946:	d6 40       	sbci	r29, 0x06	; 6
   12948:	c8 01       	movw	r24, r16
   1294a:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   1294e:	0f 90       	pop	r0
   12950:	0f 90       	pop	r0
   12952:	0f 90       	pop	r0
   12954:	0f 90       	pop	r0
   12956:	0f 90       	pop	r0
   12958:	0f 90       	pop	r0
   1295a:	89 2b       	or	r24, r25
   1295c:	31 f5       	brne	.+76     	; 0x129aa <_Z12Pub_Sub_DataPcPhjh+0x18e>
   1295e:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12962:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12966:	81 30       	cpi	r24, 0x01	; 1
   12968:	51 f4       	brne	.+20     	; 0x1297e <_Z12Pub_Sub_DataPcPhjh+0x162>
   1296a:	6b e0       	ldi	r22, 0x0B	; 11
   1296c:	7b e3       	ldi	r23, 0x3B	; 59
   1296e:	86 ec       	ldi	r24, 0xC6	; 198
   12970:	94 e1       	ldi	r25, 0x14	; 20
   12972:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   12976:	86 ec       	ldi	r24, 0xC6	; 198
   12978:	94 e1       	ldi	r25, 0x14	; 20
   1297a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1297e:	81 e0       	ldi	r24, 0x01	; 1
   12980:	80 93 1f 14 	sts	0x141F, r24	; 0x80141f <_sRuble_Parameters+0x71>
   12984:	c3 55       	subi	r28, 0x53	; 83
   12986:	d9 4f       	sbci	r29, 0xF9	; 249
   12988:	88 83       	st	Y, r24
   1298a:	cd 5a       	subi	r28, 0xAD	; 173
   1298c:	d6 40       	sbci	r29, 0x06	; 6
   1298e:	be 01       	movw	r22, r28
   12990:	63 55       	subi	r22, 0x53	; 83
   12992:	79 4f       	sbci	r23, 0xF9	; 249
   12994:	84 ef       	ldi	r24, 0xF4	; 244
   12996:	94 e0       	ldi	r25, 0x04	; 4
   12998:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1299c:	f1 e0       	ldi	r31, 0x01	; 1
   1299e:	c0 55       	subi	r28, 0x50	; 80
   129a0:	d9 4f       	sbci	r29, 0xF9	; 249
   129a2:	f8 83       	st	Y, r31
   129a4:	c0 5b       	subi	r28, 0xB0	; 176
   129a6:	d6 40       	sbci	r29, 0x06	; 6
   129a8:	05 c0       	rjmp	.+10     	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x198>
   129aa:	c0 55       	subi	r28, 0x50	; 80
   129ac:	d9 4f       	sbci	r29, 0xF9	; 249
   129ae:	18 82       	st	Y, r1
   129b0:	c0 5b       	subi	r28, 0xB0	; 176
   129b2:	d6 40       	sbci	r29, 0x06	; 6
   129b4:	88 e2       	ldi	r24, 0x28	; 40
   129b6:	d8 01       	movw	r26, r16
   129b8:	1d 92       	st	X+, r1
   129ba:	8a 95       	dec	r24
   129bc:	e9 f7       	brne	.-6      	; 0x129b8 <_Z12Pub_Sub_DataPcPhjh+0x19c>
   129be:	8e ec       	ldi	r24, 0xCE	; 206
   129c0:	93 e1       	ldi	r25, 0x13	; 19
   129c2:	9f 93       	push	r25
   129c4:	8f 93       	push	r24
   129c6:	86 ee       	ldi	r24, 0xE6	; 230
   129c8:	95 e0       	ldi	r25, 0x05	; 5
   129ca:	9f 93       	push	r25
   129cc:	8f 93       	push	r24
   129ce:	1f 93       	push	r17
   129d0:	0f 93       	push	r16
   129d2:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   129d6:	ca 54       	subi	r28, 0x4A	; 74
   129d8:	d9 4f       	sbci	r29, 0xF9	; 249
   129da:	68 81       	ld	r22, Y
   129dc:	79 81       	ldd	r23, Y+1	; 0x01
   129de:	c6 5b       	subi	r28, 0xB6	; 182
   129e0:	d6 40       	sbci	r29, 0x06	; 6
   129e2:	c8 01       	movw	r24, r16
   129e4:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   129e8:	0f 90       	pop	r0
   129ea:	0f 90       	pop	r0
   129ec:	0f 90       	pop	r0
   129ee:	0f 90       	pop	r0
   129f0:	0f 90       	pop	r0
   129f2:	0f 90       	pop	r0
   129f4:	89 2b       	or	r24, r25
   129f6:	09 f0       	breq	.+2      	; 0x129fa <_Z12Pub_Sub_DataPcPhjh+0x1de>
   129f8:	bd c0       	rjmp	.+378    	; 0x12b74 <_Z12Pub_Sub_DataPcPhjh+0x358>
   129fa:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   129fe:	86 34       	cpi	r24, 0x46	; 70
   12a00:	10 f4       	brcc	.+4      	; 0x12a06 <_Z12Pub_Sub_DataPcPhjh+0x1ea>
   12a02:	0c 94 52 a5 	jmp	0x14aa4	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   12a06:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12a0a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12a0e:	81 30       	cpi	r24, 0x01	; 1
   12a10:	51 f4       	brne	.+20     	; 0x12a26 <_Z12Pub_Sub_DataPcPhjh+0x20a>
   12a12:	65 ef       	ldi	r22, 0xF5	; 245
   12a14:	7a e3       	ldi	r23, 0x3A	; 58
   12a16:	86 ec       	ldi	r24, 0xC6	; 198
   12a18:	94 e1       	ldi	r25, 0x14	; 20
   12a1a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   12a1e:	86 ec       	ldi	r24, 0xC6	; 198
   12a20:	94 e1       	ldi	r25, 0x14	; 20
   12a22:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12a26:	80 91 71 14 	lds	r24, 0x1471	; 0x801471 <_sRuble_Parameters+0xc3>
   12a2a:	81 30       	cpi	r24, 0x01	; 1
   12a2c:	09 f4       	brne	.+2      	; 0x12a30 <_Z12Pub_Sub_DataPcPhjh+0x214>
   12a2e:	8e c0       	rjmp	.+284    	; 0x12b4c <_Z12Pub_Sub_DataPcPhjh+0x330>
   12a30:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   12a34:	82 30       	cpi	r24, 0x02	; 2
   12a36:	09 f4       	brne	.+2      	; 0x12a3a <_Z12Pub_Sub_DataPcPhjh+0x21e>
   12a38:	90 c0       	rjmp	.+288    	; 0x12b5a <_Z12Pub_Sub_DataPcPhjh+0x33e>
   12a3a:	84 30       	cpi	r24, 0x04	; 4
   12a3c:	09 f4       	brne	.+2      	; 0x12a40 <_Z12Pub_Sub_DataPcPhjh+0x224>
   12a3e:	94 c0       	rjmp	.+296    	; 0x12b68 <_Z12Pub_Sub_DataPcPhjh+0x34c>
   12a40:	61 ef       	ldi	r22, 0xF1	; 241
   12a42:	7a e3       	ldi	r23, 0x3A	; 58
   12a44:	c2 01       	movw	r24, r4
   12a46:	c7 d9       	rcall	.-3186   	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12a48:	88 23       	and	r24, r24
   12a4a:	09 f4       	brne	.+2      	; 0x12a4e <_Z12Pub_Sub_DataPcPhjh+0x232>
   12a4c:	76 c0       	rjmp	.+236    	; 0x12b3a <_Z12Pub_Sub_DataPcPhjh+0x31e>
   12a4e:	8f 30       	cpi	r24, 0x0F	; 15
   12a50:	98 f4       	brcc	.+38     	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   12a52:	28 2f       	mov	r18, r24
   12a54:	30 e0       	ldi	r19, 0x00	; 0
   12a56:	21 50       	subi	r18, 0x01	; 1
   12a58:	31 09       	sbc	r19, r1
   12a5a:	96 e0       	ldi	r25, 0x06	; 6
   12a5c:	92 9f       	mul	r25, r18
   12a5e:	f0 01       	movw	r30, r0
   12a60:	93 9f       	mul	r25, r19
   12a62:	f0 0d       	add	r31, r0
   12a64:	11 24       	eor	r1, r1
   12a66:	e2 5b       	subi	r30, 0xB2	; 178
   12a68:	f2 4f       	sbci	r31, 0xF2	; 242
   12a6a:	90 81       	ld	r25, Z
   12a6c:	99 23       	and	r25, r25
   12a6e:	21 f0       	breq	.+8      	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   12a70:	80 93 65 14 	sts	0x1465, r24	; 0x801465 <_sRuble_Parameters+0xb7>
   12a74:	81 30       	cpi	r24, 0x01	; 1
   12a76:	61 f4       	brne	.+24     	; 0x12a90 <_Z12Pub_Sub_DataPcPhjh+0x274>
   12a78:	84 ed       	ldi	r24, 0xD4	; 212
   12a7a:	93 e0       	ldi	r25, 0x03	; 3
   12a7c:	e0 ed       	ldi	r30, 0xD0	; 208
   12a7e:	ff e0       	ldi	r31, 0x0F	; 15
   12a80:	df 01       	movw	r26, r30
   12a82:	9c 01       	movw	r18, r24
   12a84:	1d 92       	st	X+, r1
   12a86:	21 50       	subi	r18, 0x01	; 1
   12a88:	30 40       	sbci	r19, 0x00	; 0
   12a8a:	e1 f7       	brne	.-8      	; 0x12a84 <_Z12Pub_Sub_DataPcPhjh+0x268>
   12a8c:	0c 94 52 a5 	jmp	0x14aa4	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   12a90:	6f ee       	ldi	r22, 0xEF	; 239
   12a92:	7a e3       	ldi	r23, 0x3A	; 58
   12a94:	c2 01       	movw	r24, r4
   12a96:	34 d9       	rcall	.-3480   	; 0x11d00 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12a98:	2c e3       	ldi	r18, 0x3C	; 60
   12a9a:	ac 01       	movw	r20, r24
   12a9c:	24 9f       	mul	r18, r20
   12a9e:	c0 01       	movw	r24, r0
   12aa0:	25 9f       	mul	r18, r21
   12aa2:	90 0d       	add	r25, r0
   12aa4:	11 24       	eor	r1, r1
   12aa6:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   12aaa:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   12aae:	83 e0       	ldi	r24, 0x03	; 3
   12ab0:	80 93 d7 13 	sts	0x13D7, r24	; 0x8013d7 <_sRuble_Parameters+0x29>
   12ab4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12ab8:	81 30       	cpi	r24, 0x01	; 1
   12aba:	31 f5       	brne	.+76     	; 0x12b08 <_Z12Pub_Sub_DataPcPhjh+0x2ec>
   12abc:	60 ee       	ldi	r22, 0xE0	; 224
   12abe:	7a e3       	ldi	r23, 0x3A	; 58
   12ac0:	86 ec       	ldi	r24, 0xC6	; 198
   12ac2:	94 e1       	ldi	r25, 0x14	; 20
   12ac4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   12ac8:	86 ec       	ldi	r24, 0xC6	; 198
   12aca:	94 e1       	ldi	r25, 0x14	; 20
   12acc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12ad0:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   12ad4:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   12ad8:	4a e0       	ldi	r20, 0x0A	; 10
   12ada:	50 e0       	ldi	r21, 0x00	; 0
   12adc:	86 ec       	ldi	r24, 0xC6	; 198
   12ade:	94 e1       	ldi	r25, 0x14	; 20
   12ae0:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   12ae4:	60 ed       	ldi	r22, 0xD0	; 208
   12ae6:	7a e3       	ldi	r23, 0x3A	; 58
   12ae8:	86 ec       	ldi	r24, 0xC6	; 198
   12aea:	94 e1       	ldi	r25, 0x14	; 20
   12aec:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   12af0:	86 ec       	ldi	r24, 0xC6	; 198
   12af2:	94 e1       	ldi	r25, 0x14	; 20
   12af4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12af8:	4a e0       	ldi	r20, 0x0A	; 10
   12afa:	50 e0       	ldi	r21, 0x00	; 0
   12afc:	60 91 65 14 	lds	r22, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   12b00:	86 ec       	ldi	r24, 0xC6	; 198
   12b02:	94 e1       	ldi	r25, 0x14	; 20
   12b04:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   12b08:	10 92 cd 13 	sts	0x13CD, r1	; 0x8013cd <_sRuble_Parameters+0x1f>
   12b0c:	10 92 cc 13 	sts	0x13CC, r1	; 0x8013cc <_sRuble_Parameters+0x1e>
   12b10:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
   12b14:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   12b18:	88 e9       	ldi	r24, 0x98	; 152
   12b1a:	9c e0       	ldi	r25, 0x0C	; 12
   12b1c:	0e 94 f3 86 	call	0x10de6	; 0x10de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   12b20:	68 e9       	ldi	r22, 0x98	; 152
   12b22:	74 e1       	ldi	r23, 0x14	; 20
   12b24:	8b ea       	ldi	r24, 0xAB	; 171
   12b26:	9e e0       	ldi	r25, 0x0E	; 14
   12b28:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12b2c:	51 e0       	ldi	r21, 0x01	; 1
   12b2e:	c0 55       	subi	r28, 0x50	; 80
   12b30:	d9 4f       	sbci	r29, 0xF9	; 249
   12b32:	58 83       	st	Y, r21
   12b34:	c0 5b       	subi	r28, 0xB0	; 176
   12b36:	d6 40       	sbci	r29, 0x06	; 6
   12b38:	1d c0       	rjmp	.+58     	; 0x12b74 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12b3a:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   12b3e:	81 e0       	ldi	r24, 0x01	; 1
   12b40:	c0 55       	subi	r28, 0x50	; 80
   12b42:	d9 4f       	sbci	r29, 0xF9	; 249
   12b44:	88 83       	st	Y, r24
   12b46:	c0 5b       	subi	r28, 0xB0	; 176
   12b48:	d6 40       	sbci	r29, 0x06	; 6
   12b4a:	14 c0       	rjmp	.+40     	; 0x12b74 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12b4c:	91 e0       	ldi	r25, 0x01	; 1
   12b4e:	c0 55       	subi	r28, 0x50	; 80
   12b50:	d9 4f       	sbci	r29, 0xF9	; 249
   12b52:	98 83       	st	Y, r25
   12b54:	c0 5b       	subi	r28, 0xB0	; 176
   12b56:	d6 40       	sbci	r29, 0x06	; 6
   12b58:	0d c0       	rjmp	.+26     	; 0x12b74 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12b5a:	a1 e0       	ldi	r26, 0x01	; 1
   12b5c:	c0 55       	subi	r28, 0x50	; 80
   12b5e:	d9 4f       	sbci	r29, 0xF9	; 249
   12b60:	a8 83       	st	Y, r26
   12b62:	c0 5b       	subi	r28, 0xB0	; 176
   12b64:	d6 40       	sbci	r29, 0x06	; 6
   12b66:	06 c0       	rjmp	.+12     	; 0x12b74 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12b68:	b1 e0       	ldi	r27, 0x01	; 1
   12b6a:	c0 55       	subi	r28, 0x50	; 80
   12b6c:	d9 4f       	sbci	r29, 0xF9	; 249
   12b6e:	b8 83       	st	Y, r27
   12b70:	c0 5b       	subi	r28, 0xB0	; 176
   12b72:	d6 40       	sbci	r29, 0x06	; 6
   12b74:	88 e2       	ldi	r24, 0x28	; 40
   12b76:	f8 01       	movw	r30, r16
   12b78:	11 92       	st	Z+, r1
   12b7a:	8a 95       	dec	r24
   12b7c:	e9 f7       	brne	.-6      	; 0x12b78 <_Z12Pub_Sub_DataPcPhjh+0x35c>
   12b7e:	8e ec       	ldi	r24, 0xCE	; 206
   12b80:	93 e1       	ldi	r25, 0x13	; 19
   12b82:	9f 93       	push	r25
   12b84:	8f 93       	push	r24
   12b86:	85 ef       	ldi	r24, 0xF5	; 245
   12b88:	95 e0       	ldi	r25, 0x05	; 5
   12b8a:	9f 93       	push	r25
   12b8c:	8f 93       	push	r24
   12b8e:	1f 93       	push	r17
   12b90:	0f 93       	push	r16
   12b92:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   12b96:	ca 54       	subi	r28, 0x4A	; 74
   12b98:	d9 4f       	sbci	r29, 0xF9	; 249
   12b9a:	68 81       	ld	r22, Y
   12b9c:	79 81       	ldd	r23, Y+1	; 0x01
   12b9e:	c6 5b       	subi	r28, 0xB6	; 182
   12ba0:	d6 40       	sbci	r29, 0x06	; 6
   12ba2:	c8 01       	movw	r24, r16
   12ba4:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   12ba8:	0f 90       	pop	r0
   12baa:	0f 90       	pop	r0
   12bac:	0f 90       	pop	r0
   12bae:	0f 90       	pop	r0
   12bb0:	0f 90       	pop	r0
   12bb2:	0f 90       	pop	r0
   12bb4:	89 2b       	or	r24, r25
   12bb6:	e9 f4       	brne	.+58     	; 0x12bf2 <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12bb8:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12bbc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12bc0:	81 30       	cpi	r24, 0x01	; 1
   12bc2:	89 f4       	brne	.+34     	; 0x12be6 <_Z12Pub_Sub_DataPcPhjh+0x3ca>
   12bc4:	6e ea       	ldi	r22, 0xAE	; 174
   12bc6:	7a e3       	ldi	r23, 0x3A	; 58
   12bc8:	86 ec       	ldi	r24, 0xC6	; 198
   12bca:	94 e1       	ldi	r25, 0x14	; 20
   12bcc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   12bd0:	86 ec       	ldi	r24, 0xC6	; 198
   12bd2:	94 e1       	ldi	r25, 0x14	; 20
   12bd4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12bd8:	f1 e0       	ldi	r31, 0x01	; 1
   12bda:	c0 55       	subi	r28, 0x50	; 80
   12bdc:	d9 4f       	sbci	r29, 0xF9	; 249
   12bde:	f8 83       	st	Y, r31
   12be0:	c0 5b       	subi	r28, 0xB0	; 176
   12be2:	d6 40       	sbci	r29, 0x06	; 6
   12be4:	06 c0       	rjmp	.+12     	; 0x12bf2 <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12be6:	21 e0       	ldi	r18, 0x01	; 1
   12be8:	c0 55       	subi	r28, 0x50	; 80
   12bea:	d9 4f       	sbci	r29, 0xF9	; 249
   12bec:	28 83       	st	Y, r18
   12bee:	c0 5b       	subi	r28, 0xB0	; 176
   12bf0:	d6 40       	sbci	r29, 0x06	; 6
   12bf2:	88 e2       	ldi	r24, 0x28	; 40
   12bf4:	d8 01       	movw	r26, r16
   12bf6:	1d 92       	st	X+, r1
   12bf8:	8a 95       	dec	r24
   12bfa:	e9 f7       	brne	.-6      	; 0x12bf6 <_Z12Pub_Sub_DataPcPhjh+0x3da>
   12bfc:	8e ec       	ldi	r24, 0xCE	; 206
   12bfe:	93 e1       	ldi	r25, 0x13	; 19
   12c00:	9f 93       	push	r25
   12c02:	8f 93       	push	r24
   12c04:	83 eb       	ldi	r24, 0xB3	; 179
   12c06:	95 e0       	ldi	r25, 0x05	; 5
   12c08:	9f 93       	push	r25
   12c0a:	8f 93       	push	r24
   12c0c:	1f 93       	push	r17
   12c0e:	0f 93       	push	r16
   12c10:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   12c14:	ca 54       	subi	r28, 0x4A	; 74
   12c16:	d9 4f       	sbci	r29, 0xF9	; 249
   12c18:	68 81       	ld	r22, Y
   12c1a:	79 81       	ldd	r23, Y+1	; 0x01
   12c1c:	c6 5b       	subi	r28, 0xB6	; 182
   12c1e:	d6 40       	sbci	r29, 0x06	; 6
   12c20:	c8 01       	movw	r24, r16
   12c22:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   12c26:	0f 90       	pop	r0
   12c28:	0f 90       	pop	r0
   12c2a:	0f 90       	pop	r0
   12c2c:	0f 90       	pop	r0
   12c2e:	0f 90       	pop	r0
   12c30:	0f 90       	pop	r0
   12c32:	89 2b       	or	r24, r25
   12c34:	09 f0       	breq	.+2      	; 0x12c38 <_Z12Pub_Sub_DataPcPhjh+0x41c>
   12c36:	bc c6       	rjmp	.+3448   	; 0x139b0 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12c38:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12c3c:	6a ea       	ldi	r22, 0xAA	; 170
   12c3e:	7a e3       	ldi	r23, 0x3A	; 58
   12c40:	c2 01       	movw	r24, r4
   12c42:	c9 d8       	rcall	.-3694   	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12c44:	98 2e       	mov	r9, r24
   12c46:	b8 e6       	ldi	r27, 0x68	; 104
   12c48:	8b 17       	cp	r24, r27
   12c4a:	11 f4       	brne	.+4      	; 0x12c50 <_Z12Pub_Sub_DataPcPhjh+0x434>
   12c4c:	0c 94 52 a5 	jmp	0x14aa4	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   12c50:	ef ef       	ldi	r30, 0xFF	; 255
   12c52:	e8 0f       	add	r30, r24
   12c54:	c8 54       	subi	r28, 0x48	; 72
   12c56:	d9 4f       	sbci	r29, 0xF9	; 249
   12c58:	e8 83       	st	Y, r30
   12c5a:	c8 5b       	subi	r28, 0xB8	; 184
   12c5c:	d6 40       	sbci	r29, 0x06	; 6
   12c5e:	e2 37       	cpi	r30, 0x72	; 114
   12c60:	08 f0       	brcs	.+2      	; 0x12c64 <_Z12Pub_Sub_DataPcPhjh+0x448>
   12c62:	a6 c6       	rjmp	.+3404   	; 0x139b0 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12c64:	fe e0       	ldi	r31, 0x0E	; 14
   12c66:	f8 17       	cp	r31, r24
   12c68:	60 f0       	brcs	.+24     	; 0x12c82 <_Z12Pub_Sub_DataPcPhjh+0x466>
   12c6a:	90 e0       	ldi	r25, 0x00	; 0
   12c6c:	01 97       	sbiw	r24, 0x01	; 1
   12c6e:	26 e0       	ldi	r18, 0x06	; 6
   12c70:	28 9f       	mul	r18, r24
   12c72:	f0 01       	movw	r30, r0
   12c74:	29 9f       	mul	r18, r25
   12c76:	f0 0d       	add	r31, r0
   12c78:	11 24       	eor	r1, r1
   12c7a:	e2 5b       	subi	r30, 0xB2	; 178
   12c7c:	f2 4f       	sbci	r31, 0xF2	; 242
   12c7e:	90 82       	st	Z, r9
   12c80:	0f c0       	rjmp	.+30     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x484>
   12c82:	24 e6       	ldi	r18, 0x64	; 100
   12c84:	28 17       	cp	r18, r24
   12c86:	60 f4       	brcc	.+24     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x484>
   12c88:	90 e0       	ldi	r25, 0x00	; 0
   12c8a:	85 56       	subi	r24, 0x65	; 101
   12c8c:	91 09       	sbc	r25, r1
   12c8e:	2b e1       	ldi	r18, 0x1B	; 27
   12c90:	28 9f       	mul	r18, r24
   12c92:	f0 01       	movw	r30, r0
   12c94:	29 9f       	mul	r18, r25
   12c96:	f0 0d       	add	r31, r0
   12c98:	11 24       	eor	r1, r1
   12c9a:	e8 51       	subi	r30, 0x18	; 24
   12c9c:	f2 4f       	sbci	r31, 0xF2	; 242
   12c9e:	91 82       	std	Z+1, r9	; 0x01
   12ca0:	3e 01       	movw	r6, r28
   12ca2:	33 ea       	ldi	r19, 0xA3	; 163
   12ca4:	63 1a       	sub	r6, r19
   12ca6:	39 ef       	ldi	r19, 0xF9	; 249
   12ca8:	73 0a       	sbc	r7, r19
   12caa:	88 e0       	ldi	r24, 0x08	; 8
   12cac:	d3 01       	movw	r26, r6
   12cae:	e8 2f       	mov	r30, r24
   12cb0:	1d 92       	st	X+, r1
   12cb2:	ea 95       	dec	r30
   12cb4:	e9 f7       	brne	.-6      	; 0x12cb0 <_Z12Pub_Sub_DataPcPhjh+0x494>
   12cb6:	53 01       	movw	r10, r6
   12cb8:	f8 e0       	ldi	r31, 0x08	; 8
   12cba:	af 0e       	add	r10, r31
   12cbc:	b1 1c       	adc	r11, r1
   12cbe:	d5 01       	movw	r26, r10
   12cc0:	e8 2f       	mov	r30, r24
   12cc2:	1d 92       	st	X+, r1
   12cc4:	ea 95       	dec	r30
   12cc6:	e9 f7       	brne	.-6      	; 0x12cc2 <_Z12Pub_Sub_DataPcPhjh+0x4a6>
   12cc8:	63 01       	movw	r12, r6
   12cca:	f0 e1       	ldi	r31, 0x10	; 16
   12ccc:	cf 0e       	add	r12, r31
   12cce:	d1 1c       	adc	r13, r1
   12cd0:	d6 01       	movw	r26, r12
   12cd2:	e8 2f       	mov	r30, r24
   12cd4:	1d 92       	st	X+, r1
   12cd6:	ea 95       	dec	r30
   12cd8:	e9 f7       	brne	.-6      	; 0x12cd4 <_Z12Pub_Sub_DataPcPhjh+0x4b8>
   12cda:	73 01       	movw	r14, r6
   12cdc:	f8 e1       	ldi	r31, 0x18	; 24
   12cde:	ef 0e       	add	r14, r31
   12ce0:	f1 1c       	adc	r15, r1
   12ce2:	d7 01       	movw	r26, r14
   12ce4:	e8 2f       	mov	r30, r24
   12ce6:	1d 92       	st	X+, r1
   12ce8:	ea 95       	dec	r30
   12cea:	e9 f7       	brne	.-6      	; 0x12ce6 <_Z12Pub_Sub_DataPcPhjh+0x4ca>
   12cec:	83 01       	movw	r16, r6
   12cee:	00 5e       	subi	r16, 0xE0	; 224
   12cf0:	1f 4f       	sbci	r17, 0xFF	; 255
   12cf2:	d8 01       	movw	r26, r16
   12cf4:	1d 92       	st	X+, r1
   12cf6:	8a 95       	dec	r24
   12cf8:	e9 f7       	brne	.-6      	; 0x12cf4 <_Z12Pub_Sub_DataPcPhjh+0x4d8>
   12cfa:	63 ea       	ldi	r22, 0xA3	; 163
   12cfc:	7a e3       	ldi	r23, 0x3A	; 58
   12cfe:	c2 01       	movw	r24, r4
   12d00:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12d04:	bc 01       	movw	r22, r24
   12d06:	c3 01       	movw	r24, r6
   12d08:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   12d0c:	6c e9       	ldi	r22, 0x9C	; 156
   12d0e:	7a e3       	ldi	r23, 0x3A	; 58
   12d10:	c2 01       	movw	r24, r4
   12d12:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12d16:	bc 01       	movw	r22, r24
   12d18:	c5 01       	movw	r24, r10
   12d1a:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   12d1e:	65 e9       	ldi	r22, 0x95	; 149
   12d20:	7a e3       	ldi	r23, 0x3A	; 58
   12d22:	c2 01       	movw	r24, r4
   12d24:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12d28:	bc 01       	movw	r22, r24
   12d2a:	c6 01       	movw	r24, r12
   12d2c:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   12d30:	6e e8       	ldi	r22, 0x8E	; 142
   12d32:	7a e3       	ldi	r23, 0x3A	; 58
   12d34:	c2 01       	movw	r24, r4
   12d36:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12d3a:	bc 01       	movw	r22, r24
   12d3c:	c7 01       	movw	r24, r14
   12d3e:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   12d42:	67 e8       	ldi	r22, 0x87	; 135
   12d44:	7a e3       	ldi	r23, 0x3A	; 58
   12d46:	c2 01       	movw	r24, r4
   12d48:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12d4c:	bc 01       	movw	r22, r24
   12d4e:	c8 01       	movw	r24, r16
   12d50:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   12d54:	be e0       	ldi	r27, 0x0E	; 14
   12d56:	b9 15       	cp	r27, r9
   12d58:	98 f1       	brcs	.+102    	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0x5a4>
   12d5a:	89 2d       	mov	r24, r9
   12d5c:	90 e0       	ldi	r25, 0x00	; 0
   12d5e:	01 97       	sbiw	r24, 0x01	; 1
   12d60:	26 e0       	ldi	r18, 0x06	; 6
   12d62:	28 9f       	mul	r18, r24
   12d64:	f0 01       	movw	r30, r0
   12d66:	29 9f       	mul	r18, r25
   12d68:	f0 0d       	add	r31, r0
   12d6a:	11 24       	eor	r1, r1
   12d6c:	e1 5b       	subi	r30, 0xB1	; 177
   12d6e:	f2 4f       	sbci	r31, 0xF2	; 242
   12d70:	85 e0       	ldi	r24, 0x05	; 5
   12d72:	df 01       	movw	r26, r30
   12d74:	1d 92       	st	X+, r1
   12d76:	8a 95       	dec	r24
   12d78:	e9 f7       	brne	.-6      	; 0x12d74 <_Z12Pub_Sub_DataPcPhjh+0x558>
   12d7a:	13 01       	movw	r2, r6
   12d7c:	26 e0       	ldi	r18, 0x06	; 6
   12d7e:	92 9e       	mul	r9, r18
   12d80:	f0 01       	movw	r30, r0
   12d82:	11 24       	eor	r1, r1
   12d84:	c5 54       	subi	r28, 0x45	; 69
   12d86:	d9 4f       	sbci	r29, 0xF9	; 249
   12d88:	f9 83       	std	Y+1, r31	; 0x01
   12d8a:	e8 83       	st	Y, r30
   12d8c:	cb 5b       	subi	r28, 0xBB	; 187
   12d8e:	d6 40       	sbci	r29, 0x06	; 6
   12d90:	e7 5b       	subi	r30, 0xB7	; 183
   12d92:	f2 4f       	sbci	r31, 0xF2	; 242
   12d94:	7f 01       	movw	r14, r30
   12d96:	3b e1       	ldi	r19, 0x1B	; 27
   12d98:	93 9e       	mul	r9, r19
   12d9a:	c0 01       	movw	r24, r0
   12d9c:	11 24       	eor	r1, r1
   12d9e:	ac 01       	movw	r20, r24
   12da0:	4a 5b       	subi	r20, 0xBA	; 186
   12da2:	5c 4f       	sbci	r21, 0xFC	; 252
   12da4:	6a 01       	movw	r12, r20
   12da6:	c3 01       	movw	r24, r6
   12da8:	88 96       	adiw	r24, 0x28	; 40
   12daa:	c3 54       	subi	r28, 0x43	; 67
   12dac:	d9 4f       	sbci	r29, 0xF9	; 249
   12dae:	99 83       	std	Y+1, r25	; 0x01
   12db0:	88 83       	st	Y, r24
   12db2:	cd 5b       	subi	r28, 0xBD	; 189
   12db4:	d6 40       	sbci	r29, 0x06	; 6
   12db6:	96 e6       	ldi	r25, 0x66	; 102
   12db8:	89 2e       	mov	r8, r25
   12dba:	25 e6       	ldi	r18, 0x65	; 101
   12dbc:	a2 2e       	mov	r10, r18
   12dbe:	3a c0       	rjmp	.+116    	; 0x12e34 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12dc0:	94 e6       	ldi	r25, 0x64	; 100
   12dc2:	99 15       	cp	r25, r9
   12dc4:	d0 f6       	brcc	.-76     	; 0x12d7a <_Z12Pub_Sub_DataPcPhjh+0x55e>
   12dc6:	89 2d       	mov	r24, r9
   12dc8:	90 e0       	ldi	r25, 0x00	; 0
   12dca:	85 56       	subi	r24, 0x65	; 101
   12dcc:	91 09       	sbc	r25, r1
   12dce:	2b e1       	ldi	r18, 0x1B	; 27
   12dd0:	28 9f       	mul	r18, r24
   12dd2:	f0 01       	movw	r30, r0
   12dd4:	29 9f       	mul	r18, r25
   12dd6:	f0 0d       	add	r31, r0
   12dd8:	11 24       	eor	r1, r1
   12dda:	e3 51       	subi	r30, 0x13	; 19
   12ddc:	f2 4f       	sbci	r31, 0xF2	; 242
   12dde:	c8 cf       	rjmp	.-112    	; 0x12d70 <_Z12Pub_Sub_DataPcPhjh+0x554>
   12de0:	90 35       	cpi	r25, 0x50	; 80
   12de2:	09 f4       	brne	.+2      	; 0x12de6 <_Z12Pub_Sub_DataPcPhjh+0x5ca>
   12de4:	44 c2       	rjmp	.+1160   	; 0x1326e <_Z12Pub_Sub_DataPcPhjh+0xa52>
   12de6:	80 33       	cpi	r24, 0x30	; 48
   12de8:	c9 f1       	breq	.+114    	; 0x12e5c <_Z12Pub_Sub_DataPcPhjh+0x640>
   12dea:	88 23       	and	r24, r24
   12dec:	b9 f1       	breq	.+110    	; 0x12e5c <_Z12Pub_Sub_DataPcPhjh+0x640>
   12dee:	80 53       	subi	r24, 0x30	; 48
   12df0:	91 81       	ldd	r25, Z+1	; 0x01
   12df2:	99 23       	and	r25, r25
   12df4:	31 f0       	breq	.+12     	; 0x12e02 <_Z12Pub_Sub_DataPcPhjh+0x5e6>
   12df6:	90 53       	subi	r25, 0x30	; 48
   12df8:	fa e0       	ldi	r31, 0x0A	; 10
   12dfa:	8f 9f       	mul	r24, r31
   12dfc:	90 0d       	add	r25, r0
   12dfe:	11 24       	eor	r1, r1
   12e00:	89 2f       	mov	r24, r25
   12e02:	2e e0       	ldi	r18, 0x0E	; 14
   12e04:	29 15       	cp	r18, r9
   12e06:	e8 f4       	brcc	.+58     	; 0x12e42 <_Z12Pub_Sub_DataPcPhjh+0x626>
   12e08:	f4 e6       	ldi	r31, 0x64	; 100
   12e0a:	f9 15       	cp	r31, r9
   12e0c:	08 f1       	brcs	.+66     	; 0x12e50 <_Z12Pub_Sub_DataPcPhjh+0x634>
   12e0e:	38 e0       	ldi	r19, 0x08	; 8
   12e10:	23 0e       	add	r2, r19
   12e12:	31 1c       	adc	r3, r1
   12e14:	4f ef       	ldi	r20, 0xFF	; 255
   12e16:	e4 1a       	sub	r14, r20
   12e18:	f4 0a       	sbc	r15, r20
   12e1a:	5f ef       	ldi	r21, 0xFF	; 255
   12e1c:	c5 1a       	sub	r12, r21
   12e1e:	d5 0a       	sbc	r13, r21
   12e20:	c3 54       	subi	r28, 0x43	; 67
   12e22:	d9 4f       	sbci	r29, 0xF9	; 249
   12e24:	88 81       	ld	r24, Y
   12e26:	99 81       	ldd	r25, Y+1	; 0x01
   12e28:	cd 5b       	subi	r28, 0xBD	; 189
   12e2a:	d6 40       	sbci	r29, 0x06	; 6
   12e2c:	28 16       	cp	r2, r24
   12e2e:	39 06       	cpc	r3, r25
   12e30:	09 f4       	brne	.+2      	; 0x12e34 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12e32:	83 c3       	rjmp	.+1798   	; 0x1353a <_Z12Pub_Sub_DataPcPhjh+0xd1e>
   12e34:	f1 01       	movw	r30, r2
   12e36:	80 81       	ld	r24, Z
   12e38:	98 2f       	mov	r25, r24
   12e3a:	9f 7d       	andi	r25, 0xDF	; 223
   12e3c:	96 35       	cpi	r25, 0x56	; 86
   12e3e:	81 f6       	brne	.-96     	; 0x12de0 <_Z12Pub_Sub_DataPcPhjh+0x5c4>
   12e40:	19 c0       	rjmp	.+50     	; 0x12e74 <_Z12Pub_Sub_DataPcPhjh+0x658>
   12e42:	8e 5e       	subi	r24, 0xEE	; 238
   12e44:	8b 32       	cpi	r24, 0x2B	; 43
   12e46:	10 f4       	brcc	.+4      	; 0x12e4c <_Z12Pub_Sub_DataPcPhjh+0x630>
   12e48:	d7 01       	movw	r26, r14
   12e4a:	06 c0       	rjmp	.+12     	; 0x12e58 <_Z12Pub_Sub_DataPcPhjh+0x63c>
   12e4c:	f7 01       	movw	r30, r14
   12e4e:	10 c0       	rjmp	.+32     	; 0x12e70 <_Z12Pub_Sub_DataPcPhjh+0x654>
   12e50:	8e 5e       	subi	r24, 0xEE	; 238
   12e52:	8b 32       	cpi	r24, 0x2B	; 43
   12e54:	60 f4       	brcc	.+24     	; 0x12e6e <_Z12Pub_Sub_DataPcPhjh+0x652>
   12e56:	d6 01       	movw	r26, r12
   12e58:	8c 93       	st	X, r24
   12e5a:	d9 cf       	rjmp	.-78     	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e5c:	fe e0       	ldi	r31, 0x0E	; 14
   12e5e:	f9 15       	cp	r31, r9
   12e60:	18 f0       	brcs	.+6      	; 0x12e68 <_Z12Pub_Sub_DataPcPhjh+0x64c>
   12e62:	d7 01       	movw	r26, r14
   12e64:	1c 92       	st	X, r1
   12e66:	d3 cf       	rjmp	.-90     	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e68:	b4 e6       	ldi	r27, 0x64	; 100
   12e6a:	b9 15       	cp	r27, r9
   12e6c:	80 f6       	brcc	.-96     	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e6e:	f6 01       	movw	r30, r12
   12e70:	10 82       	st	Z, r1
   12e72:	cd cf       	rjmp	.-102    	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e74:	4e ea       	ldi	r20, 0xAE	; 174
   12e76:	53 e1       	ldi	r21, 0x13	; 19
   12e78:	80 e0       	ldi	r24, 0x00	; 0
   12e7a:	90 e0       	ldi	r25, 0x00	; 0
   12e7c:	68 2f       	mov	r22, r24
   12e7e:	20 e0       	ldi	r18, 0x00	; 0
   12e80:	30 e0       	ldi	r19, 0x00	; 0
   12e82:	70 e0       	ldi	r23, 0x00	; 0
   12e84:	f9 01       	movw	r30, r18
   12e86:	ec 58       	subi	r30, 0x8C	; 140
   12e88:	ff 4f       	sbci	r31, 0xFF	; 255
   12e8a:	e4 0f       	add	r30, r20
   12e8c:	f5 1f       	adc	r31, r21
   12e8e:	a0 81       	ld	r26, Z
   12e90:	f1 01       	movw	r30, r2
   12e92:	e2 0f       	add	r30, r18
   12e94:	f3 1f       	adc	r31, r19
   12e96:	e0 81       	ld	r30, Z
   12e98:	ae 13       	cpse	r26, r30
   12e9a:	01 c0       	rjmp	.+2      	; 0x12e9e <_Z12Pub_Sub_DataPcPhjh+0x682>
   12e9c:	7f 5f       	subi	r23, 0xFF	; 255
   12e9e:	2f 5f       	subi	r18, 0xFF	; 255
   12ea0:	3f 4f       	sbci	r19, 0xFF	; 255
   12ea2:	26 30       	cpi	r18, 0x06	; 6
   12ea4:	31 05       	cpc	r19, r1
   12ea6:	71 f7       	brne	.-36     	; 0x12e84 <_Z12Pub_Sub_DataPcPhjh+0x668>
   12ea8:	76 30       	cpi	r23, 0x06	; 6
   12eaa:	09 f0       	breq	.+2      	; 0x12eae <_Z12Pub_Sub_DataPcPhjh+0x692>
   12eac:	7a c0       	rjmp	.+244    	; 0x12fa2 <_Z12Pub_Sub_DataPcPhjh+0x786>
   12eae:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12eb2:	fe e0       	ldi	r31, 0x0E	; 14
   12eb4:	f9 15       	cp	r31, r9
   12eb6:	70 f1       	brcs	.+92     	; 0x12f14 <_Z12Pub_Sub_DataPcPhjh+0x6f8>
   12eb8:	d1 01       	movw	r26, r2
   12eba:	17 96       	adiw	r26, 0x07	; 7
   12ebc:	3c 91       	ld	r19, X
   12ebe:	32 33       	cpi	r19, 0x32	; 50
   12ec0:	89 f0       	breq	.+34     	; 0x12ee4 <_Z12Pub_Sub_DataPcPhjh+0x6c8>
   12ec2:	33 33       	cpi	r19, 0x33	; 51
   12ec4:	d9 f0       	breq	.+54     	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0x6e0>
   12ec6:	31 33       	cpi	r19, 0x31	; 49
   12ec8:	09 f0       	breq	.+2      	; 0x12ecc <_Z12Pub_Sub_DataPcPhjh+0x6b0>
   12eca:	5c c0       	rjmp	.+184    	; 0x12f84 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12ecc:	86 2f       	mov	r24, r22
   12ece:	88 0f       	add	r24, r24
   12ed0:	68 0f       	add	r22, r24
   12ed2:	6f 5f       	subi	r22, 0xFF	; 255
   12ed4:	f7 01       	movw	r30, r14
   12ed6:	60 83       	st	Z, r22
   12ed8:	21 30       	cpi	r18, 0x01	; 1
   12eda:	09 f0       	breq	.+2      	; 0x12ede <_Z12Pub_Sub_DataPcPhjh+0x6c2>
   12edc:	69 c0       	rjmp	.+210    	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12ede:	6c e6       	ldi	r22, 0x6C	; 108
   12ee0:	7a e3       	ldi	r23, 0x3A	; 58
   12ee2:	44 c0       	rjmp	.+136    	; 0x12f6c <_Z12Pub_Sub_DataPcPhjh+0x750>
   12ee4:	86 2f       	mov	r24, r22
   12ee6:	88 0f       	add	r24, r24
   12ee8:	68 0f       	add	r22, r24
   12eea:	6e 5f       	subi	r22, 0xFE	; 254
   12eec:	d7 01       	movw	r26, r14
   12eee:	6c 93       	st	X, r22
   12ef0:	21 30       	cpi	r18, 0x01	; 1
   12ef2:	09 f0       	breq	.+2      	; 0x12ef6 <_Z12Pub_Sub_DataPcPhjh+0x6da>
   12ef4:	5d c0       	rjmp	.+186    	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12ef6:	61 e5       	ldi	r22, 0x51	; 81
   12ef8:	7a e3       	ldi	r23, 0x3A	; 58
   12efa:	38 c0       	rjmp	.+112    	; 0x12f6c <_Z12Pub_Sub_DataPcPhjh+0x750>
   12efc:	01 96       	adiw	r24, 0x01	; 1
   12efe:	98 2f       	mov	r25, r24
   12f00:	99 0f       	add	r25, r25
   12f02:	89 0f       	add	r24, r25
   12f04:	f7 01       	movw	r30, r14
   12f06:	80 83       	st	Z, r24
   12f08:	21 30       	cpi	r18, 0x01	; 1
   12f0a:	09 f0       	breq	.+2      	; 0x12f0e <_Z12Pub_Sub_DataPcPhjh+0x6f2>
   12f0c:	51 c0       	rjmp	.+162    	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f0e:	66 e3       	ldi	r22, 0x36	; 54
   12f10:	7a e3       	ldi	r23, 0x3A	; 58
   12f12:	2c c0       	rjmp	.+88     	; 0x12f6c <_Z12Pub_Sub_DataPcPhjh+0x750>
   12f14:	f4 e6       	ldi	r31, 0x64	; 100
   12f16:	f9 15       	cp	r31, r9
   12f18:	a8 f5       	brcc	.+106    	; 0x12f84 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12f1a:	d1 01       	movw	r26, r2
   12f1c:	17 96       	adiw	r26, 0x07	; 7
   12f1e:	3c 91       	ld	r19, X
   12f20:	32 33       	cpi	r19, 0x32	; 50
   12f22:	79 f0       	breq	.+30     	; 0x12f42 <_Z12Pub_Sub_DataPcPhjh+0x726>
   12f24:	33 33       	cpi	r19, 0x33	; 51
   12f26:	c1 f0       	breq	.+48     	; 0x12f58 <_Z12Pub_Sub_DataPcPhjh+0x73c>
   12f28:	31 33       	cpi	r19, 0x31	; 49
   12f2a:	61 f5       	brne	.+88     	; 0x12f84 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12f2c:	86 2f       	mov	r24, r22
   12f2e:	88 0f       	add	r24, r24
   12f30:	68 0f       	add	r22, r24
   12f32:	6f 5f       	subi	r22, 0xFF	; 255
   12f34:	f6 01       	movw	r30, r12
   12f36:	60 83       	st	Z, r22
   12f38:	21 30       	cpi	r18, 0x01	; 1
   12f3a:	d1 f5       	brne	.+116    	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f3c:	6b e1       	ldi	r22, 0x1B	; 27
   12f3e:	7a e3       	ldi	r23, 0x3A	; 58
   12f40:	15 c0       	rjmp	.+42     	; 0x12f6c <_Z12Pub_Sub_DataPcPhjh+0x750>
   12f42:	86 2f       	mov	r24, r22
   12f44:	88 0f       	add	r24, r24
   12f46:	68 0f       	add	r22, r24
   12f48:	6e 5f       	subi	r22, 0xFE	; 254
   12f4a:	d6 01       	movw	r26, r12
   12f4c:	6c 93       	st	X, r22
   12f4e:	21 30       	cpi	r18, 0x01	; 1
   12f50:	79 f5       	brne	.+94     	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f52:	60 e0       	ldi	r22, 0x00	; 0
   12f54:	7a e3       	ldi	r23, 0x3A	; 58
   12f56:	0a c0       	rjmp	.+20     	; 0x12f6c <_Z12Pub_Sub_DataPcPhjh+0x750>
   12f58:	01 96       	adiw	r24, 0x01	; 1
   12f5a:	98 2f       	mov	r25, r24
   12f5c:	99 0f       	add	r25, r25
   12f5e:	89 0f       	add	r24, r25
   12f60:	f6 01       	movw	r30, r12
   12f62:	80 83       	st	Z, r24
   12f64:	21 30       	cpi	r18, 0x01	; 1
   12f66:	21 f5       	brne	.+72     	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f68:	65 ee       	ldi	r22, 0xE5	; 229
   12f6a:	79 e3       	ldi	r23, 0x39	; 57
   12f6c:	86 ec       	ldi	r24, 0xC6	; 198
   12f6e:	94 e1       	ldi	r25, 0x14	; 20
   12f70:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   12f74:	86 ec       	ldi	r24, 0xC6	; 198
   12f76:	94 e1       	ldi	r25, 0x14	; 20
   12f78:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   12f7c:	86 ec       	ldi	r24, 0xC6	; 198
   12f7e:	94 e1       	ldi	r25, 0x14	; 20
   12f80:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12f84:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12f88:	81 30       	cpi	r24, 0x01	; 1
   12f8a:	91 f4       	brne	.+36     	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f8c:	64 ed       	ldi	r22, 0xD4	; 212
   12f8e:	79 e3       	ldi	r23, 0x39	; 57
   12f90:	86 ec       	ldi	r24, 0xC6	; 198
   12f92:	94 e1       	ldi	r25, 0x14	; 20
   12f94:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   12f98:	86 ec       	ldi	r24, 0xC6	; 198
   12f9a:	94 e1       	ldi	r25, 0x14	; 20
   12f9c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12fa0:	07 c0       	rjmp	.+14     	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12fa2:	01 96       	adiw	r24, 0x01	; 1
   12fa4:	49 5f       	subi	r20, 0xF9	; 249
   12fa6:	5f 4f       	sbci	r21, 0xFF	; 255
   12fa8:	85 30       	cpi	r24, 0x05	; 5
   12faa:	91 05       	cpc	r25, r1
   12fac:	09 f0       	breq	.+2      	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12fae:	66 cf       	rjmp	.-308    	; 0x12e7c <_Z12Pub_Sub_DataPcPhjh+0x660>
   12fb0:	d7 01       	movw	r26, r14
   12fb2:	8c 91       	ld	r24, X
   12fb4:	81 11       	cpse	r24, r1
   12fb6:	03 c0       	rjmp	.+6      	; 0x12fbe <_Z12Pub_Sub_DataPcPhjh+0x7a2>
   12fb8:	be e0       	ldi	r27, 0x0E	; 14
   12fba:	b9 15       	cp	r27, r9
   12fbc:	40 f4       	brcc	.+16     	; 0x12fce <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12fbe:	f6 01       	movw	r30, r12
   12fc0:	80 81       	ld	r24, Z
   12fc2:	81 11       	cpse	r24, r1
   12fc4:	24 cf       	rjmp	.-440    	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12fc6:	fe e0       	ldi	r31, 0x0E	; 14
   12fc8:	f9 15       	cp	r31, r9
   12fca:	08 f0       	brcs	.+2      	; 0x12fce <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12fcc:	20 cf       	rjmp	.-448    	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12fce:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12fd2:	81 30       	cpi	r24, 0x01	; 1
   12fd4:	51 f4       	brne	.+20     	; 0x12fea <_Z12Pub_Sub_DataPcPhjh+0x7ce>
   12fd6:	6b eb       	ldi	r22, 0xBB	; 187
   12fd8:	79 e3       	ldi	r23, 0x39	; 57
   12fda:	86 ec       	ldi	r24, 0xC6	; 198
   12fdc:	94 e1       	ldi	r25, 0x14	; 20
   12fde:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   12fe2:	86 ec       	ldi	r24, 0xC6	; 198
   12fe4:	94 e1       	ldi	r25, 0x14	; 20
   12fe6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   12fea:	e5 e1       	ldi	r30, 0x15	; 21
   12fec:	fc e0       	ldi	r31, 0x0C	; 12
   12fee:	b1 2c       	mov	r11, r1
   12ff0:	80 81       	ld	r24, Z
   12ff2:	88 23       	and	r24, r24
   12ff4:	29 f0       	breq	.+10     	; 0x13000 <_Z12Pub_Sub_DataPcPhjh+0x7e4>
   12ff6:	b3 94       	inc	r11
   12ff8:	3d 96       	adiw	r30, 0x0d	; 13
   12ffa:	25 e0       	ldi	r18, 0x05	; 5
   12ffc:	b2 12       	cpse	r11, r18
   12ffe:	f8 cf       	rjmp	.-16     	; 0x12ff0 <_Z12Pub_Sub_DataPcPhjh+0x7d4>
   13000:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13004:	81 30       	cpi	r24, 0x01	; 1
   13006:	c9 f4       	brne	.+50     	; 0x1303a <_Z12Pub_Sub_DataPcPhjh+0x81e>
   13008:	86 ec       	ldi	r24, 0xC6	; 198
   1300a:	94 e1       	ldi	r25, 0x14	; 20
   1300c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13010:	67 ea       	ldi	r22, 0xA7	; 167
   13012:	79 e3       	ldi	r23, 0x39	; 57
   13014:	86 ec       	ldi	r24, 0xC6	; 198
   13016:	94 e1       	ldi	r25, 0x14	; 20
   13018:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1301c:	86 ec       	ldi	r24, 0xC6	; 198
   1301e:	94 e1       	ldi	r25, 0x14	; 20
   13020:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13024:	4a e0       	ldi	r20, 0x0A	; 10
   13026:	50 e0       	ldi	r21, 0x00	; 0
   13028:	6b 2d       	mov	r22, r11
   1302a:	86 ec       	ldi	r24, 0xC6	; 198
   1302c:	94 e1       	ldi	r25, 0x14	; 20
   1302e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   13032:	86 ec       	ldi	r24, 0xC6	; 198
   13034:	94 e1       	ldi	r25, 0x14	; 20
   13036:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1303a:	3d e0       	ldi	r19, 0x0D	; 13
   1303c:	b3 9e       	mul	r11, r19
   1303e:	a0 01       	movw	r20, r0
   13040:	11 24       	eor	r1, r1
   13042:	80 e0       	ldi	r24, 0x00	; 0
   13044:	90 e0       	ldi	r25, 0x00	; 0
   13046:	0b 2d       	mov	r16, r11
   13048:	10 e0       	ldi	r17, 0x00	; 0
   1304a:	fa 01       	movw	r30, r20
   1304c:	e8 0f       	add	r30, r24
   1304e:	f9 1f       	adc	r31, r25
   13050:	eb 5e       	subi	r30, 0xEB	; 235
   13052:	f3 4f       	sbci	r31, 0xF3	; 243
   13054:	d1 01       	movw	r26, r2
   13056:	a8 0f       	add	r26, r24
   13058:	b9 1f       	adc	r27, r25
   1305a:	2c 91       	ld	r18, X
   1305c:	21 83       	std	Z+1, r18	; 0x01
   1305e:	01 96       	adiw	r24, 0x01	; 1
   13060:	86 30       	cpi	r24, 0x06	; 6
   13062:	91 05       	cpc	r25, r1
   13064:	91 f7       	brne	.-28     	; 0x1304a <_Z12Pub_Sub_DataPcPhjh+0x82e>
   13066:	8d e0       	ldi	r24, 0x0D	; 13
   13068:	80 9f       	mul	r24, r16
   1306a:	a0 01       	movw	r20, r0
   1306c:	81 9f       	mul	r24, r17
   1306e:	50 0d       	add	r21, r0
   13070:	11 24       	eor	r1, r1
   13072:	cc 54       	subi	r28, 0x4C	; 76
   13074:	d9 4f       	sbci	r29, 0xF9	; 249
   13076:	59 83       	std	Y+1, r21	; 0x01
   13078:	48 83       	st	Y, r20
   1307a:	c4 5b       	subi	r28, 0xB4	; 180
   1307c:	d6 40       	sbci	r29, 0x06	; 6
   1307e:	4a 5e       	subi	r20, 0xEA	; 234
   13080:	53 4f       	sbci	r21, 0xF3	; 243
   13082:	c7 54       	subi	r28, 0x47	; 71
   13084:	d9 4f       	sbci	r29, 0xF9	; 249
   13086:	59 83       	std	Y+1, r21	; 0x01
   13088:	48 83       	st	Y, r20
   1308a:	c9 5b       	subi	r28, 0xB9	; 185
   1308c:	d6 40       	sbci	r29, 0x06	; 6
   1308e:	a7 e0       	ldi	r26, 0x07	; 7
   13090:	a0 9f       	mul	r26, r16
   13092:	c0 01       	movw	r24, r0
   13094:	a1 9f       	mul	r26, r17
   13096:	90 0d       	add	r25, r0
   13098:	11 24       	eor	r1, r1
   1309a:	ba 01       	movw	r22, r20
   1309c:	8e 5d       	subi	r24, 0xDE	; 222
   1309e:	9b 4e       	sbci	r25, 0xEB	; 235
   130a0:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   130a4:	cc 54       	subi	r28, 0x4C	; 76
   130a6:	d9 4f       	sbci	r29, 0xF9	; 249
   130a8:	e8 81       	ld	r30, Y
   130aa:	f9 81       	ldd	r31, Y+1	; 0x01
   130ac:	c4 5b       	subi	r28, 0xB4	; 180
   130ae:	d6 40       	sbci	r29, 0x06	; 6
   130b0:	eb 5e       	subi	r30, 0xEB	; 235
   130b2:	f3 4f       	sbci	r31, 0xF3	; 243
   130b4:	cc 54       	subi	r28, 0x4C	; 76
   130b6:	d9 4f       	sbci	r29, 0xF9	; 249
   130b8:	f9 83       	std	Y+1, r31	; 0x01
   130ba:	e8 83       	st	Y, r30
   130bc:	c4 5b       	subi	r28, 0xB4	; 180
   130be:	d6 40       	sbci	r29, 0x06	; 6
   130c0:	81 e0       	ldi	r24, 0x01	; 1
   130c2:	8b 0d       	add	r24, r11
   130c4:	80 83       	st	Z, r24
   130c6:	2f ef       	ldi	r18, 0xFF	; 255
   130c8:	30 e0       	ldi	r19, 0x00	; 0
   130ca:	31 87       	std	Z+9, r19	; 0x09
   130cc:	20 87       	std	Z+8, r18	; 0x08
   130ce:	31 e0       	ldi	r19, 0x01	; 1
   130d0:	33 87       	std	Z+11, r19	; 0x0b
   130d2:	12 86       	std	Z+10, r1	; 0x0a
   130d4:	14 86       	std	Z+12, r1	; 0x0c
   130d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   130da:	81 30       	cpi	r24, 0x01	; 1
   130dc:	09 f0       	breq	.+2      	; 0x130e0 <_Z12Pub_Sub_DataPcPhjh+0x8c4>
   130de:	45 c0       	rjmp	.+138    	; 0x1316a <_Z12Pub_Sub_DataPcPhjh+0x94e>
   130e0:	86 ec       	ldi	r24, 0xC6	; 198
   130e2:	94 e1       	ldi	r25, 0x14	; 20
   130e4:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   130e8:	6c e8       	ldi	r22, 0x8C	; 140
   130ea:	79 e3       	ldi	r23, 0x39	; 57
   130ec:	86 ec       	ldi	r24, 0xC6	; 198
   130ee:	94 e1       	ldi	r25, 0x14	; 20
   130f0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   130f4:	86 ec       	ldi	r24, 0xC6	; 198
   130f6:	94 e1       	ldi	r25, 0x14	; 20
   130f8:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   130fc:	86 ec       	ldi	r24, 0xC6	; 198
   130fe:	94 e1       	ldi	r25, 0x14	; 20
   13100:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13104:	61 e8       	ldi	r22, 0x81	; 129
   13106:	79 e3       	ldi	r23, 0x39	; 57
   13108:	86 ec       	ldi	r24, 0xC6	; 198
   1310a:	94 e1       	ldi	r25, 0x14	; 20
   1310c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13110:	4a e0       	ldi	r20, 0x0A	; 10
   13112:	50 e0       	ldi	r21, 0x00	; 0
   13114:	cc 54       	subi	r28, 0x4C	; 76
   13116:	d9 4f       	sbci	r29, 0xF9	; 249
   13118:	a8 81       	ld	r26, Y
   1311a:	b9 81       	ldd	r27, Y+1	; 0x01
   1311c:	c4 5b       	subi	r28, 0xB4	; 180
   1311e:	d6 40       	sbci	r29, 0x06	; 6
   13120:	6c 91       	ld	r22, X
   13122:	86 ec       	ldi	r24, 0xC6	; 198
   13124:	94 e1       	ldi	r25, 0x14	; 20
   13126:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1312a:	86 ec       	ldi	r24, 0xC6	; 198
   1312c:	94 e1       	ldi	r25, 0x14	; 20
   1312e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13132:	86 ec       	ldi	r24, 0xC6	; 198
   13134:	94 e1       	ldi	r25, 0x14	; 20
   13136:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1313a:	66 e7       	ldi	r22, 0x76	; 118
   1313c:	79 e3       	ldi	r23, 0x39	; 57
   1313e:	86 ec       	ldi	r24, 0xC6	; 198
   13140:	94 e1       	ldi	r25, 0x14	; 20
   13142:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13146:	c7 54       	subi	r28, 0x47	; 71
   13148:	d9 4f       	sbci	r29, 0xF9	; 249
   1314a:	68 81       	ld	r22, Y
   1314c:	79 81       	ldd	r23, Y+1	; 0x01
   1314e:	c9 5b       	subi	r28, 0xB9	; 185
   13150:	d6 40       	sbci	r29, 0x06	; 6
   13152:	86 ec       	ldi	r24, 0xC6	; 198
   13154:	94 e1       	ldi	r25, 0x14	; 20
   13156:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1315a:	86 ec       	ldi	r24, 0xC6	; 198
   1315c:	94 e1       	ldi	r25, 0x14	; 20
   1315e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13162:	86 ec       	ldi	r24, 0xC6	; 198
   13164:	94 e1       	ldi	r25, 0x14	; 20
   13166:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1316a:	be e0       	ldi	r27, 0x0E	; 14
   1316c:	b9 15       	cp	r27, r9
   1316e:	a0 f1       	brcs	.+104    	; 0x131d8 <_Z12Pub_Sub_DataPcPhjh+0x9bc>
   13170:	f1 01       	movw	r30, r2
   13172:	87 81       	ldd	r24, Z+7	; 0x07
   13174:	82 33       	cpi	r24, 0x32	; 50
   13176:	99 f0       	breq	.+38     	; 0x1319e <_Z12Pub_Sub_DataPcPhjh+0x982>
   13178:	83 33       	cpi	r24, 0x33	; 51
   1317a:	f9 f0       	breq	.+62     	; 0x131ba <_Z12Pub_Sub_DataPcPhjh+0x99e>
   1317c:	81 33       	cpi	r24, 0x31	; 49
   1317e:	09 f0       	breq	.+2      	; 0x13182 <_Z12Pub_Sub_DataPcPhjh+0x966>
   13180:	72 c0       	rjmp	.+228    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13182:	8b 2d       	mov	r24, r11
   13184:	88 0f       	add	r24, r24
   13186:	8b 0d       	add	r24, r11
   13188:	8f 5f       	subi	r24, 0xFF	; 255
   1318a:	d7 01       	movw	r26, r14
   1318c:	8c 93       	st	X, r24
   1318e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13192:	81 30       	cpi	r24, 0x01	; 1
   13194:	09 f0       	breq	.+2      	; 0x13198 <_Z12Pub_Sub_DataPcPhjh+0x97c>
   13196:	67 c0       	rjmp	.+206    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13198:	67 e5       	ldi	r22, 0x57	; 87
   1319a:	79 e3       	ldi	r23, 0x39	; 57
   1319c:	58 c0       	rjmp	.+176    	; 0x1324e <_Z12Pub_Sub_DataPcPhjh+0xa32>
   1319e:	8b 2d       	mov	r24, r11
   131a0:	88 0f       	add	r24, r24
   131a2:	8b 0d       	add	r24, r11
   131a4:	8e 5f       	subi	r24, 0xFE	; 254
   131a6:	f7 01       	movw	r30, r14
   131a8:	80 83       	st	Z, r24
   131aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131ae:	81 30       	cpi	r24, 0x01	; 1
   131b0:	09 f0       	breq	.+2      	; 0x131b4 <_Z12Pub_Sub_DataPcPhjh+0x998>
   131b2:	59 c0       	rjmp	.+178    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131b4:	68 e3       	ldi	r22, 0x38	; 56
   131b6:	79 e3       	ldi	r23, 0x39	; 57
   131b8:	4a c0       	rjmp	.+148    	; 0x1324e <_Z12Pub_Sub_DataPcPhjh+0xa32>
   131ba:	0f 5f       	subi	r16, 0xFF	; 255
   131bc:	1f 4f       	sbci	r17, 0xFF	; 255
   131be:	80 2f       	mov	r24, r16
   131c0:	88 0f       	add	r24, r24
   131c2:	08 0f       	add	r16, r24
   131c4:	d7 01       	movw	r26, r14
   131c6:	0c 93       	st	X, r16
   131c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131cc:	81 30       	cpi	r24, 0x01	; 1
   131ce:	09 f0       	breq	.+2      	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0x9b6>
   131d0:	4a c0       	rjmp	.+148    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131d2:	69 e1       	ldi	r22, 0x19	; 25
   131d4:	79 e3       	ldi	r23, 0x39	; 57
   131d6:	3b c0       	rjmp	.+118    	; 0x1324e <_Z12Pub_Sub_DataPcPhjh+0xa32>
   131d8:	b4 e6       	ldi	r27, 0x64	; 100
   131da:	b9 15       	cp	r27, r9
   131dc:	08 f0       	brcs	.+2      	; 0x131e0 <_Z12Pub_Sub_DataPcPhjh+0x9c4>
   131de:	43 c0       	rjmp	.+134    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131e0:	f1 01       	movw	r30, r2
   131e2:	87 81       	ldd	r24, Z+7	; 0x07
   131e4:	82 33       	cpi	r24, 0x32	; 50
   131e6:	c9 f0       	breq	.+50     	; 0x1321a <_Z12Pub_Sub_DataPcPhjh+0x9fe>
   131e8:	83 33       	cpi	r24, 0x33	; 51
   131ea:	21 f1       	breq	.+72     	; 0x13234 <_Z12Pub_Sub_DataPcPhjh+0xa18>
   131ec:	81 33       	cpi	r24, 0x31	; 49
   131ee:	d9 f5       	brne	.+118    	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131f0:	8b 2d       	mov	r24, r11
   131f2:	88 0f       	add	r24, r24
   131f4:	8b 0d       	add	r24, r11
   131f6:	8f 5f       	subi	r24, 0xFF	; 255
   131f8:	d6 01       	movw	r26, r12
   131fa:	8c 93       	st	X, r24
   131fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13200:	81 30       	cpi	r24, 0x01	; 1
   13202:	89 f5       	brne	.+98     	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13204:	6e ef       	ldi	r22, 0xFE	; 254
   13206:	78 e3       	ldi	r23, 0x38	; 56
   13208:	86 ec       	ldi	r24, 0xC6	; 198
   1320a:	94 e1       	ldi	r25, 0x14	; 20
   1320c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13210:	86 ec       	ldi	r24, 0xC6	; 198
   13212:	94 e1       	ldi	r25, 0x14	; 20
   13214:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13218:	26 c0       	rjmp	.+76     	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1321a:	8b 2d       	mov	r24, r11
   1321c:	88 0f       	add	r24, r24
   1321e:	8b 0d       	add	r24, r11
   13220:	8e 5f       	subi	r24, 0xFE	; 254
   13222:	f6 01       	movw	r30, r12
   13224:	80 83       	st	Z, r24
   13226:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1322a:	81 30       	cpi	r24, 0x01	; 1
   1322c:	e1 f4       	brne	.+56     	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1322e:	63 ee       	ldi	r22, 0xE3	; 227
   13230:	78 e3       	ldi	r23, 0x38	; 56
   13232:	0d c0       	rjmp	.+26     	; 0x1324e <_Z12Pub_Sub_DataPcPhjh+0xa32>
   13234:	0f 5f       	subi	r16, 0xFF	; 255
   13236:	1f 4f       	sbci	r17, 0xFF	; 255
   13238:	80 2f       	mov	r24, r16
   1323a:	88 0f       	add	r24, r24
   1323c:	08 0f       	add	r16, r24
   1323e:	d6 01       	movw	r26, r12
   13240:	0c 93       	st	X, r16
   13242:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13246:	81 30       	cpi	r24, 0x01	; 1
   13248:	71 f4       	brne	.+28     	; 0x13266 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1324a:	68 ec       	ldi	r22, 0xC8	; 200
   1324c:	78 e3       	ldi	r23, 0x38	; 56
   1324e:	86 ec       	ldi	r24, 0xC6	; 198
   13250:	94 e1       	ldi	r25, 0x14	; 20
   13252:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13256:	86 ec       	ldi	r24, 0xC6	; 198
   13258:	94 e1       	ldi	r25, 0x14	; 20
   1325a:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1325e:	86 ec       	ldi	r24, 0xC6	; 198
   13260:	94 e1       	ldi	r25, 0x14	; 20
   13262:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13266:	8b 2d       	mov	r24, r11
   13268:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   1326c:	d0 cd       	rjmp	.-1120   	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   1326e:	4e ea       	ldi	r20, 0xAE	; 174
   13270:	53 e1       	ldi	r21, 0x13	; 19
   13272:	26 e0       	ldi	r18, 0x06	; 6
   13274:	80 e0       	ldi	r24, 0x00	; 0
   13276:	90 e0       	ldi	r25, 0x00	; 0
   13278:	30 e0       	ldi	r19, 0x00	; 0
   1327a:	fc 01       	movw	r30, r24
   1327c:	ec 58       	subi	r30, 0x8C	; 140
   1327e:	ff 4f       	sbci	r31, 0xFF	; 255
   13280:	e4 0f       	add	r30, r20
   13282:	f5 1f       	adc	r31, r21
   13284:	70 81       	ld	r23, Z
   13286:	f1 01       	movw	r30, r2
   13288:	e8 0f       	add	r30, r24
   1328a:	f9 1f       	adc	r31, r25
   1328c:	60 81       	ld	r22, Z
   1328e:	76 13       	cpse	r23, r22
   13290:	01 c0       	rjmp	.+2      	; 0x13294 <_Z12Pub_Sub_DataPcPhjh+0xa78>
   13292:	3f 5f       	subi	r19, 0xFF	; 255
   13294:	01 96       	adiw	r24, 0x01	; 1
   13296:	86 30       	cpi	r24, 0x06	; 6
   13298:	91 05       	cpc	r25, r1
   1329a:	79 f7       	brne	.-34     	; 0x1327a <_Z12Pub_Sub_DataPcPhjh+0xa5e>
   1329c:	36 30       	cpi	r19, 0x06	; 6
   1329e:	09 f0       	breq	.+2      	; 0x132a2 <_Z12Pub_Sub_DataPcPhjh+0xa86>
   132a0:	63 c0       	rjmp	.+198    	; 0x13368 <_Z12Pub_Sub_DataPcPhjh+0xb4c>
   132a2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   132a6:	be e0       	ldi	r27, 0x0E	; 14
   132a8:	b9 15       	cp	r27, r9
   132aa:	10 f1       	brcs	.+68     	; 0x132f0 <_Z12Pub_Sub_DataPcPhjh+0xad4>
   132ac:	f1 01       	movw	r30, r2
   132ae:	97 81       	ldd	r25, Z+7	; 0x07
   132b0:	92 33       	cpi	r25, 0x32	; 50
   132b2:	69 f0       	breq	.+26     	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xab2>
   132b4:	93 33       	cpi	r25, 0x33	; 51
   132b6:	99 f0       	breq	.+38     	; 0x132de <_Z12Pub_Sub_DataPcPhjh+0xac2>
   132b8:	91 33       	cpi	r25, 0x31	; 49
   132ba:	09 f0       	breq	.+2      	; 0x132be <_Z12Pub_Sub_DataPcPhjh+0xaa2>
   132bc:	46 c0       	rjmp	.+140    	; 0x1334a <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   132be:	d7 01       	movw	r26, r14
   132c0:	ac 92       	st	X, r10
   132c2:	81 30       	cpi	r24, 0x01	; 1
   132c4:	09 f0       	breq	.+2      	; 0x132c8 <_Z12Pub_Sub_DataPcPhjh+0xaac>
   132c6:	55 c0       	rjmp	.+170    	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132c8:	6d ea       	ldi	r22, 0xAD	; 173
   132ca:	78 e3       	ldi	r23, 0x38	; 56
   132cc:	32 c0       	rjmp	.+100    	; 0x13332 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   132ce:	f7 01       	movw	r30, r14
   132d0:	80 82       	st	Z, r8
   132d2:	81 30       	cpi	r24, 0x01	; 1
   132d4:	09 f0       	breq	.+2      	; 0x132d8 <_Z12Pub_Sub_DataPcPhjh+0xabc>
   132d6:	4d c0       	rjmp	.+154    	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132d8:	62 e9       	ldi	r22, 0x92	; 146
   132da:	78 e3       	ldi	r23, 0x38	; 56
   132dc:	2a c0       	rjmp	.+84     	; 0x13332 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   132de:	e7 e6       	ldi	r30, 0x67	; 103
   132e0:	d7 01       	movw	r26, r14
   132e2:	ec 93       	st	X, r30
   132e4:	81 30       	cpi	r24, 0x01	; 1
   132e6:	09 f0       	breq	.+2      	; 0x132ea <_Z12Pub_Sub_DataPcPhjh+0xace>
   132e8:	44 c0       	rjmp	.+136    	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132ea:	67 e7       	ldi	r22, 0x77	; 119
   132ec:	78 e3       	ldi	r23, 0x38	; 56
   132ee:	21 c0       	rjmp	.+66     	; 0x13332 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   132f0:	f4 e6       	ldi	r31, 0x64	; 100
   132f2:	f9 15       	cp	r31, r9
   132f4:	50 f5       	brcc	.+84     	; 0x1334a <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   132f6:	d1 01       	movw	r26, r2
   132f8:	17 96       	adiw	r26, 0x07	; 7
   132fa:	9c 91       	ld	r25, X
   132fc:	92 33       	cpi	r25, 0x32	; 50
   132fe:	59 f0       	breq	.+22     	; 0x13316 <_Z12Pub_Sub_DataPcPhjh+0xafa>
   13300:	93 33       	cpi	r25, 0x33	; 51
   13302:	81 f0       	breq	.+32     	; 0x13324 <_Z12Pub_Sub_DataPcPhjh+0xb08>
   13304:	91 33       	cpi	r25, 0x31	; 49
   13306:	09 f5       	brne	.+66     	; 0x1334a <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   13308:	f6 01       	movw	r30, r12
   1330a:	a0 82       	st	Z, r10
   1330c:	81 30       	cpi	r24, 0x01	; 1
   1330e:	89 f5       	brne	.+98     	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13310:	6c e5       	ldi	r22, 0x5C	; 92
   13312:	78 e3       	ldi	r23, 0x38	; 56
   13314:	0e c0       	rjmp	.+28     	; 0x13332 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   13316:	d6 01       	movw	r26, r12
   13318:	8c 92       	st	X, r8
   1331a:	81 30       	cpi	r24, 0x01	; 1
   1331c:	51 f5       	brne	.+84     	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   1331e:	61 e4       	ldi	r22, 0x41	; 65
   13320:	78 e3       	ldi	r23, 0x38	; 56
   13322:	07 c0       	rjmp	.+14     	; 0x13332 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   13324:	27 e6       	ldi	r18, 0x67	; 103
   13326:	f6 01       	movw	r30, r12
   13328:	20 83       	st	Z, r18
   1332a:	81 30       	cpi	r24, 0x01	; 1
   1332c:	11 f5       	brne	.+68     	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   1332e:	66 e2       	ldi	r22, 0x26	; 38
   13330:	78 e3       	ldi	r23, 0x38	; 56
   13332:	86 ec       	ldi	r24, 0xC6	; 198
   13334:	94 e1       	ldi	r25, 0x14	; 20
   13336:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1333a:	86 ec       	ldi	r24, 0xC6	; 198
   1333c:	94 e1       	ldi	r25, 0x14	; 20
   1333e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13342:	86 ec       	ldi	r24, 0xC6	; 198
   13344:	94 e1       	ldi	r25, 0x14	; 20
   13346:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1334a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1334e:	81 30       	cpi	r24, 0x01	; 1
   13350:	81 f4       	brne	.+32     	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13352:	65 e1       	ldi	r22, 0x15	; 21
   13354:	78 e3       	ldi	r23, 0x38	; 56
   13356:	86 ec       	ldi	r24, 0xC6	; 198
   13358:	94 e1       	ldi	r25, 0x14	; 20
   1335a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1335e:	86 ec       	ldi	r24, 0xC6	; 198
   13360:	94 e1       	ldi	r25, 0x14	; 20
   13362:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13366:	05 c0       	rjmp	.+10     	; 0x13372 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13368:	21 50       	subi	r18, 0x01	; 1
   1336a:	49 5f       	subi	r20, 0xF9	; 249
   1336c:	5f 4f       	sbci	r21, 0xFF	; 255
   1336e:	21 11       	cpse	r18, r1
   13370:	81 cf       	rjmp	.-254    	; 0x13274 <_Z12Pub_Sub_DataPcPhjh+0xa58>
   13372:	d7 01       	movw	r26, r14
   13374:	8c 91       	ld	r24, X
   13376:	81 11       	cpse	r24, r1
   13378:	03 c0       	rjmp	.+6      	; 0x13380 <_Z12Pub_Sub_DataPcPhjh+0xb64>
   1337a:	be e0       	ldi	r27, 0x0E	; 14
   1337c:	b9 15       	cp	r27, r9
   1337e:	40 f4       	brcc	.+16     	; 0x13390 <_Z12Pub_Sub_DataPcPhjh+0xb74>
   13380:	f6 01       	movw	r30, r12
   13382:	80 81       	ld	r24, Z
   13384:	81 11       	cpse	r24, r1
   13386:	43 cd       	rjmp	.-1402   	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   13388:	fe e0       	ldi	r31, 0x0E	; 14
   1338a:	f9 15       	cp	r31, r9
   1338c:	08 f0       	brcs	.+2      	; 0x13390 <_Z12Pub_Sub_DataPcPhjh+0xb74>
   1338e:	3f cd       	rjmp	.-1410   	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   13390:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13394:	81 30       	cpi	r24, 0x01	; 1
   13396:	51 f4       	brne	.+20     	; 0x133ac <_Z12Pub_Sub_DataPcPhjh+0xb90>
   13398:	6c ef       	ldi	r22, 0xFC	; 252
   1339a:	77 e3       	ldi	r23, 0x37	; 55
   1339c:	86 ec       	ldi	r24, 0xC6	; 198
   1339e:	94 e1       	ldi	r25, 0x14	; 20
   133a0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   133a4:	86 ec       	ldi	r24, 0xC6	; 198
   133a6:	94 e1       	ldi	r25, 0x14	; 20
   133a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   133ac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   133b0:	81 30       	cpi	r24, 0x01	; 1
   133b2:	c9 f4       	brne	.+50     	; 0x133e6 <_Z12Pub_Sub_DataPcPhjh+0xbca>
   133b4:	86 ec       	ldi	r24, 0xC6	; 198
   133b6:	94 e1       	ldi	r25, 0x14	; 20
   133b8:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   133bc:	68 ee       	ldi	r22, 0xE8	; 232
   133be:	77 e3       	ldi	r23, 0x37	; 55
   133c0:	86 ec       	ldi	r24, 0xC6	; 198
   133c2:	94 e1       	ldi	r25, 0x14	; 20
   133c4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   133c8:	86 ec       	ldi	r24, 0xC6	; 198
   133ca:	94 e1       	ldi	r25, 0x14	; 20
   133cc:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   133d0:	4a e0       	ldi	r20, 0x0A	; 10
   133d2:	50 e0       	ldi	r21, 0x00	; 0
   133d4:	65 e0       	ldi	r22, 0x05	; 5
   133d6:	86 ec       	ldi	r24, 0xC6	; 198
   133d8:	94 e1       	ldi	r25, 0x14	; 20
   133da:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   133de:	86 ec       	ldi	r24, 0xC6	; 198
   133e0:	94 e1       	ldi	r25, 0x14	; 20
   133e2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   133e6:	e5 ef       	ldi	r30, 0xF5	; 245
   133e8:	fb e0       	ldi	r31, 0x0B	; 11
   133ea:	80 e0       	ldi	r24, 0x00	; 0
   133ec:	90 e0       	ldi	r25, 0x00	; 0
   133ee:	d1 01       	movw	r26, r2
   133f0:	a8 0f       	add	r26, r24
   133f2:	b9 1f       	adc	r27, r25
   133f4:	2c 91       	ld	r18, X
   133f6:	21 93       	st	Z+, r18
   133f8:	22 87       	std	Z+10, r18	; 0x0a
   133fa:	25 8b       	std	Z+21, r18	; 0x15
   133fc:	01 96       	adiw	r24, 0x01	; 1
   133fe:	86 30       	cpi	r24, 0x06	; 6
   13400:	91 05       	cpc	r25, r1
   13402:	a9 f7       	brne	.-22     	; 0x133ee <_Z12Pub_Sub_DataPcPhjh+0xbd2>
   13404:	21 e0       	ldi	r18, 0x01	; 1
   13406:	20 93 f4 0b 	sts	0x0BF4, r18	; 0x800bf4 <_sWireless_Pump_Param>
   1340a:	32 e0       	ldi	r19, 0x02	; 2
   1340c:	30 93 ff 0b 	sts	0x0BFF, r19	; 0x800bff <_sWireless_Pump_Param+0xb>
   13410:	43 e0       	ldi	r20, 0x03	; 3
   13412:	40 93 0a 0c 	sts	0x0C0A, r20	; 0x800c0a <_sWireless_Pump_Param+0x16>
   13416:	10 92 fe 0b 	sts	0x0BFE, r1	; 0x800bfe <_sWireless_Pump_Param+0xa>
   1341a:	10 92 09 0c 	sts	0x0C09, r1	; 0x800c09 <_sWireless_Pump_Param+0x15>
   1341e:	10 92 14 0c 	sts	0x0C14, r1	; 0x800c14 <_sWireless_Pump_Param+0x20>
   13422:	10 92 fd 0b 	sts	0x0BFD, r1	; 0x800bfd <_sWireless_Pump_Param+0x9>
   13426:	10 92 fc 0b 	sts	0x0BFC, r1	; 0x800bfc <_sWireless_Pump_Param+0x8>
   1342a:	10 92 08 0c 	sts	0x0C08, r1	; 0x800c08 <_sWireless_Pump_Param+0x14>
   1342e:	10 92 07 0c 	sts	0x0C07, r1	; 0x800c07 <_sWireless_Pump_Param+0x13>
   13432:	10 92 13 0c 	sts	0x0C13, r1	; 0x800c13 <_sWireless_Pump_Param+0x1f>
   13436:	10 92 12 0c 	sts	0x0C12, r1	; 0x800c12 <_sWireless_Pump_Param+0x1e>
   1343a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1343e:	81 30       	cpi	r24, 0x01	; 1
   13440:	91 f4       	brne	.+36     	; 0x13466 <_Z12Pub_Sub_DataPcPhjh+0xc4a>
   13442:	86 ec       	ldi	r24, 0xC6	; 198
   13444:	94 e1       	ldi	r25, 0x14	; 20
   13446:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1344a:	65 ec       	ldi	r22, 0xC5	; 197
   1344c:	77 e3       	ldi	r23, 0x37	; 55
   1344e:	86 ec       	ldi	r24, 0xC6	; 198
   13450:	94 e1       	ldi	r25, 0x14	; 20
   13452:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13456:	86 ec       	ldi	r24, 0xC6	; 198
   13458:	94 e1       	ldi	r25, 0x14	; 20
   1345a:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1345e:	86 ec       	ldi	r24, 0xC6	; 198
   13460:	94 e1       	ldi	r25, 0x14	; 20
   13462:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13466:	5e e0       	ldi	r21, 0x0E	; 14
   13468:	59 15       	cp	r21, r9
   1346a:	90 f1       	brcs	.+100    	; 0x134d0 <_Z12Pub_Sub_DataPcPhjh+0xcb4>
   1346c:	d1 01       	movw	r26, r2
   1346e:	17 96       	adiw	r26, 0x07	; 7
   13470:	8c 91       	ld	r24, X
   13472:	82 33       	cpi	r24, 0x32	; 50
   13474:	d1 f0       	breq	.+52     	; 0x134aa <_Z12Pub_Sub_DataPcPhjh+0xc8e>
   13476:	83 33       	cpi	r24, 0x33	; 51
   13478:	09 f1       	breq	.+66     	; 0x134bc <_Z12Pub_Sub_DataPcPhjh+0xca0>
   1347a:	81 33       	cpi	r24, 0x31	; 49
   1347c:	a1 f4       	brne	.+40     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1347e:	f7 01       	movw	r30, r14
   13480:	a0 82       	st	Z, r10
   13482:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13486:	81 30       	cpi	r24, 0x01	; 1
   13488:	71 f4       	brne	.+28     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1348a:	66 ea       	ldi	r22, 0xA6	; 166
   1348c:	77 e3       	ldi	r23, 0x37	; 55
   1348e:	86 ec       	ldi	r24, 0xC6	; 198
   13490:	94 e1       	ldi	r25, 0x14	; 20
   13492:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13496:	86 ec       	ldi	r24, 0xC6	; 198
   13498:	94 e1       	ldi	r25, 0x14	; 20
   1349a:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1349e:	86 ec       	ldi	r24, 0xC6	; 198
   134a0:	94 e1       	ldi	r25, 0x14	; 20
   134a2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   134a6:	10 e0       	ldi	r17, 0x00	; 0
   134a8:	3b c0       	rjmp	.+118    	; 0x13520 <_Z12Pub_Sub_DataPcPhjh+0xd04>
   134aa:	d7 01       	movw	r26, r14
   134ac:	8c 92       	st	X, r8
   134ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134b2:	81 30       	cpi	r24, 0x01	; 1
   134b4:	c1 f7       	brne	.-16     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134b6:	67 e8       	ldi	r22, 0x87	; 135
   134b8:	77 e3       	ldi	r23, 0x37	; 55
   134ba:	e9 cf       	rjmp	.-46     	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0xc72>
   134bc:	27 e6       	ldi	r18, 0x67	; 103
   134be:	f7 01       	movw	r30, r14
   134c0:	20 83       	st	Z, r18
   134c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134c6:	81 30       	cpi	r24, 0x01	; 1
   134c8:	71 f7       	brne	.-36     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134ca:	68 e6       	ldi	r22, 0x68	; 104
   134cc:	77 e3       	ldi	r23, 0x37	; 55
   134ce:	df cf       	rjmp	.-66     	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0xc72>
   134d0:	34 e6       	ldi	r19, 0x64	; 100
   134d2:	39 15       	cp	r19, r9
   134d4:	40 f7       	brcc	.-48     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134d6:	d1 01       	movw	r26, r2
   134d8:	17 96       	adiw	r26, 0x07	; 7
   134da:	8c 91       	ld	r24, X
   134dc:	82 33       	cpi	r24, 0x32	; 50
   134de:	69 f0       	breq	.+26     	; 0x134fa <_Z12Pub_Sub_DataPcPhjh+0xcde>
   134e0:	83 33       	cpi	r24, 0x33	; 51
   134e2:	a1 f0       	breq	.+40     	; 0x1350c <_Z12Pub_Sub_DataPcPhjh+0xcf0>
   134e4:	81 33       	cpi	r24, 0x31	; 49
   134e6:	f9 f6       	brne	.-66     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134e8:	f6 01       	movw	r30, r12
   134ea:	a0 82       	st	Z, r10
   134ec:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134f0:	81 30       	cpi	r24, 0x01	; 1
   134f2:	c9 f6       	brne	.-78     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134f4:	6d e4       	ldi	r22, 0x4D	; 77
   134f6:	77 e3       	ldi	r23, 0x37	; 55
   134f8:	ca cf       	rjmp	.-108    	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0xc72>
   134fa:	d6 01       	movw	r26, r12
   134fc:	8c 92       	st	X, r8
   134fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13502:	81 30       	cpi	r24, 0x01	; 1
   13504:	81 f6       	brne	.-96     	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13506:	62 e3       	ldi	r22, 0x32	; 50
   13508:	77 e3       	ldi	r23, 0x37	; 55
   1350a:	c1 cf       	rjmp	.-126    	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0xc72>
   1350c:	27 e6       	ldi	r18, 0x67	; 103
   1350e:	f6 01       	movw	r30, r12
   13510:	20 83       	st	Z, r18
   13512:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13516:	81 30       	cpi	r24, 0x01	; 1
   13518:	31 f6       	brne	.-116    	; 0x134a6 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1351a:	67 e1       	ldi	r22, 0x17	; 23
   1351c:	77 e3       	ldi	r23, 0x37	; 55
   1351e:	b7 cf       	rjmp	.-146    	; 0x1348e <_Z12Pub_Sub_DataPcPhjh+0xc72>
   13520:	81 2f       	mov	r24, r17
   13522:	0e 94 9b 5c 	call	0xb936	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
   13526:	64 e6       	ldi	r22, 0x64	; 100
   13528:	70 e0       	ldi	r23, 0x00	; 0
   1352a:	80 e0       	ldi	r24, 0x00	; 0
   1352c:	90 e0       	ldi	r25, 0x00	; 0
   1352e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   13532:	1f 5f       	subi	r17, 0xFF	; 255
   13534:	13 30       	cpi	r17, 0x03	; 3
   13536:	a1 f7       	brne	.-24     	; 0x13520 <_Z12Pub_Sub_DataPcPhjh+0xd04>
   13538:	6a cc       	rjmp	.-1836   	; 0x12e0e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   1353a:	9e e0       	ldi	r25, 0x0E	; 14
   1353c:	99 15       	cp	r25, r9
   1353e:	08 f4       	brcc	.+2      	; 0x13542 <_Z12Pub_Sub_DataPcPhjh+0xd26>
   13540:	f5 c0       	rjmp	.+490    	; 0x1372c <_Z12Pub_Sub_DataPcPhjh+0xf10>
   13542:	60 e1       	ldi	r22, 0x10	; 16
   13544:	77 e3       	ldi	r23, 0x37	; 55
   13546:	c2 01       	movw	r24, r4
   13548:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1354c:	c3 55       	subi	r28, 0x53	; 83
   1354e:	d9 4f       	sbci	r29, 0xF9	; 249
   13550:	88 83       	st	Y, r24
   13552:	cd 5a       	subi	r28, 0xAD	; 173
   13554:	d6 40       	sbci	r29, 0x06	; 6
   13556:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1355a:	81 30       	cpi	r24, 0x01	; 1
   1355c:	09 f0       	breq	.+2      	; 0x13560 <_Z12Pub_Sub_DataPcPhjh+0xd44>
   1355e:	91 c0       	rjmp	.+290    	; 0x13682 <_Z12Pub_Sub_DataPcPhjh+0xe66>
   13560:	64 ef       	ldi	r22, 0xF4	; 244
   13562:	76 e3       	ldi	r23, 0x36	; 54
   13564:	86 ec       	ldi	r24, 0xC6	; 198
   13566:	94 e1       	ldi	r25, 0x14	; 20
   13568:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1356c:	67 ee       	ldi	r22, 0xE7	; 231
   1356e:	76 e3       	ldi	r23, 0x36	; 54
   13570:	86 ec       	ldi	r24, 0xC6	; 198
   13572:	94 e1       	ldi	r25, 0x14	; 20
   13574:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13578:	86 ec       	ldi	r24, 0xC6	; 198
   1357a:	94 e1       	ldi	r25, 0x14	; 20
   1357c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13580:	89 2d       	mov	r24, r9
   13582:	90 e0       	ldi	r25, 0x00	; 0
   13584:	01 97       	sbiw	r24, 0x01	; 1
   13586:	26 e0       	ldi	r18, 0x06	; 6
   13588:	28 9f       	mul	r18, r24
   1358a:	f0 01       	movw	r30, r0
   1358c:	29 9f       	mul	r18, r25
   1358e:	f0 0d       	add	r31, r0
   13590:	11 24       	eor	r1, r1
   13592:	e2 5b       	subi	r30, 0xB2	; 178
   13594:	f2 4f       	sbci	r31, 0xF2	; 242
   13596:	4a e0       	ldi	r20, 0x0A	; 10
   13598:	50 e0       	ldi	r21, 0x00	; 0
   1359a:	60 81       	ld	r22, Z
   1359c:	86 ec       	ldi	r24, 0xC6	; 198
   1359e:	94 e1       	ldi	r25, 0x14	; 20
   135a0:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   135a4:	86 ec       	ldi	r24, 0xC6	; 198
   135a6:	94 e1       	ldi	r25, 0x14	; 20
   135a8:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   135ac:	86 ec       	ldi	r24, 0xC6	; 198
   135ae:	94 e1       	ldi	r25, 0x14	; 20
   135b0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   135b4:	6d ed       	ldi	r22, 0xDD	; 221
   135b6:	76 e3       	ldi	r23, 0x36	; 54
   135b8:	86 ec       	ldi	r24, 0xC6	; 198
   135ba:	94 e1       	ldi	r25, 0x14	; 20
   135bc:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   135c0:	b3 01       	movw	r22, r6
   135c2:	86 ec       	ldi	r24, 0xC6	; 198
   135c4:	94 e1       	ldi	r25, 0x14	; 20
   135c6:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   135ca:	86 ec       	ldi	r24, 0xC6	; 198
   135cc:	94 e1       	ldi	r25, 0x14	; 20
   135ce:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   135d2:	86 ec       	ldi	r24, 0xC6	; 198
   135d4:	94 e1       	ldi	r25, 0x14	; 20
   135d6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   135da:	63 ed       	ldi	r22, 0xD3	; 211
   135dc:	76 e3       	ldi	r23, 0x36	; 54
   135de:	86 ec       	ldi	r24, 0xC6	; 198
   135e0:	94 e1       	ldi	r25, 0x14	; 20
   135e2:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   135e6:	b3 01       	movw	r22, r6
   135e8:	68 5f       	subi	r22, 0xF8	; 248
   135ea:	7f 4f       	sbci	r23, 0xFF	; 255
   135ec:	86 ec       	ldi	r24, 0xC6	; 198
   135ee:	94 e1       	ldi	r25, 0x14	; 20
   135f0:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   135f4:	86 ec       	ldi	r24, 0xC6	; 198
   135f6:	94 e1       	ldi	r25, 0x14	; 20
   135f8:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   135fc:	86 ec       	ldi	r24, 0xC6	; 198
   135fe:	94 e1       	ldi	r25, 0x14	; 20
   13600:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13604:	69 ec       	ldi	r22, 0xC9	; 201
   13606:	76 e3       	ldi	r23, 0x36	; 54
   13608:	86 ec       	ldi	r24, 0xC6	; 198
   1360a:	94 e1       	ldi	r25, 0x14	; 20
   1360c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13610:	b3 01       	movw	r22, r6
   13612:	60 5f       	subi	r22, 0xF0	; 240
   13614:	7f 4f       	sbci	r23, 0xFF	; 255
   13616:	86 ec       	ldi	r24, 0xC6	; 198
   13618:	94 e1       	ldi	r25, 0x14	; 20
   1361a:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1361e:	86 ec       	ldi	r24, 0xC6	; 198
   13620:	94 e1       	ldi	r25, 0x14	; 20
   13622:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13626:	86 ec       	ldi	r24, 0xC6	; 198
   13628:	94 e1       	ldi	r25, 0x14	; 20
   1362a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1362e:	6f eb       	ldi	r22, 0xBF	; 191
   13630:	76 e3       	ldi	r23, 0x36	; 54
   13632:	86 ec       	ldi	r24, 0xC6	; 198
   13634:	94 e1       	ldi	r25, 0x14	; 20
   13636:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1363a:	b3 01       	movw	r22, r6
   1363c:	68 5e       	subi	r22, 0xE8	; 232
   1363e:	7f 4f       	sbci	r23, 0xFF	; 255
   13640:	86 ec       	ldi	r24, 0xC6	; 198
   13642:	94 e1       	ldi	r25, 0x14	; 20
   13644:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   13648:	86 ec       	ldi	r24, 0xC6	; 198
   1364a:	94 e1       	ldi	r25, 0x14	; 20
   1364c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13650:	86 ec       	ldi	r24, 0xC6	; 198
   13652:	94 e1       	ldi	r25, 0x14	; 20
   13654:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13658:	65 eb       	ldi	r22, 0xB5	; 181
   1365a:	76 e3       	ldi	r23, 0x36	; 54
   1365c:	86 ec       	ldi	r24, 0xC6	; 198
   1365e:	94 e1       	ldi	r25, 0x14	; 20
   13660:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13664:	b3 01       	movw	r22, r6
   13666:	60 5e       	subi	r22, 0xE0	; 224
   13668:	7f 4f       	sbci	r23, 0xFF	; 255
   1366a:	86 ec       	ldi	r24, 0xC6	; 198
   1366c:	94 e1       	ldi	r25, 0x14	; 20
   1366e:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   13672:	86 ec       	ldi	r24, 0xC6	; 198
   13674:	94 e1       	ldi	r25, 0x14	; 20
   13676:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1367a:	86 ec       	ldi	r24, 0xC6	; 198
   1367c:	94 e1       	ldi	r25, 0x14	; 20
   1367e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13682:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13686:	81 30       	cpi	r24, 0x01	; 1
   13688:	71 f0       	breq	.+28     	; 0x136a6 <_Z12Pub_Sub_DataPcPhjh+0xe8a>
   1368a:	c8 54       	subi	r28, 0x48	; 72
   1368c:	d9 4f       	sbci	r29, 0xF9	; 249
   1368e:	88 81       	ld	r24, Y
   13690:	c8 5b       	subi	r28, 0xB8	; 184
   13692:	d6 40       	sbci	r29, 0x06	; 6
   13694:	0e 94 c4 7f 	call	0xff88	; 0xff88 <_Z16Lira_Data_EEPROMh>
   13698:	a1 e0       	ldi	r26, 0x01	; 1
   1369a:	c0 55       	subi	r28, 0x50	; 80
   1369c:	d9 4f       	sbci	r29, 0xF9	; 249
   1369e:	a8 83       	st	Y, r26
   136a0:	c0 5b       	subi	r28, 0xB0	; 176
   136a2:	d6 40       	sbci	r29, 0x06	; 6
   136a4:	85 c1       	rjmp	.+778    	; 0x139b0 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   136a6:	00 e0       	ldi	r16, 0x00	; 0
   136a8:	10 e0       	ldi	r17, 0x00	; 0
   136aa:	86 ec       	ldi	r24, 0xC6	; 198
   136ac:	94 e1       	ldi	r25, 0x14	; 20
   136ae:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   136b2:	69 ea       	ldi	r22, 0xA9	; 169
   136b4:	76 e3       	ldi	r23, 0x36	; 54
   136b6:	86 ec       	ldi	r24, 0xC6	; 198
   136b8:	94 e1       	ldi	r25, 0x14	; 20
   136ba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   136be:	c5 54       	subi	r28, 0x45	; 69
   136c0:	d9 4f       	sbci	r29, 0xF9	; 249
   136c2:	e8 81       	ld	r30, Y
   136c4:	f9 81       	ldd	r31, Y+1	; 0x01
   136c6:	cb 5b       	subi	r28, 0xBB	; 187
   136c8:	d6 40       	sbci	r29, 0x06	; 6
   136ca:	e0 0f       	add	r30, r16
   136cc:	f1 1f       	adc	r31, r17
   136ce:	e7 5b       	subi	r30, 0xB7	; 183
   136d0:	f2 4f       	sbci	r31, 0xF2	; 242
   136d2:	4a e0       	ldi	r20, 0x0A	; 10
   136d4:	50 e0       	ldi	r21, 0x00	; 0
   136d6:	60 81       	ld	r22, Z
   136d8:	86 ec       	ldi	r24, 0xC6	; 198
   136da:	94 e1       	ldi	r25, 0x14	; 20
   136dc:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   136e0:	86 ec       	ldi	r24, 0xC6	; 198
   136e2:	94 e1       	ldi	r25, 0x14	; 20
   136e4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   136e8:	0f 5f       	subi	r16, 0xFF	; 255
   136ea:	1f 4f       	sbci	r17, 0xFF	; 255
   136ec:	05 30       	cpi	r16, 0x05	; 5
   136ee:	11 05       	cpc	r17, r1
   136f0:	e1 f6       	brne	.-72     	; 0x136aa <_Z12Pub_Sub_DataPcPhjh+0xe8e>
   136f2:	00 e0       	ldi	r16, 0x00	; 0
   136f4:	10 e0       	ldi	r17, 0x00	; 0
   136f6:	86 ec       	ldi	r24, 0xC6	; 198
   136f8:	94 e1       	ldi	r25, 0x14	; 20
   136fa:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   136fe:	6e e9       	ldi	r22, 0x9E	; 158
   13700:	76 e3       	ldi	r23, 0x36	; 54
   13702:	86 ec       	ldi	r24, 0xC6	; 198
   13704:	94 e1       	ldi	r25, 0x14	; 20
   13706:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1370a:	b8 01       	movw	r22, r16
   1370c:	6a 5e       	subi	r22, 0xEA	; 234
   1370e:	73 4f       	sbci	r23, 0xF3	; 243
   13710:	86 ec       	ldi	r24, 0xC6	; 198
   13712:	94 e1       	ldi	r25, 0x14	; 20
   13714:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   13718:	86 ec       	ldi	r24, 0xC6	; 198
   1371a:	94 e1       	ldi	r25, 0x14	; 20
   1371c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13720:	03 5f       	subi	r16, 0xF3	; 243
   13722:	1f 4f       	sbci	r17, 0xFF	; 255
   13724:	0e 34       	cpi	r16, 0x4E	; 78
   13726:	11 05       	cpc	r17, r1
   13728:	31 f7       	brne	.-52     	; 0x136f6 <_Z12Pub_Sub_DataPcPhjh+0xeda>
   1372a:	af cf       	rjmp	.-162    	; 0x1368a <_Z12Pub_Sub_DataPcPhjh+0xe6e>
   1372c:	b4 e6       	ldi	r27, 0x64	; 100
   1372e:	b9 15       	cp	r27, r9
   13730:	08 f0       	brcs	.+2      	; 0x13734 <_Z12Pub_Sub_DataPcPhjh+0xf18>
   13732:	3e c1       	rjmp	.+636    	; 0x139b0 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   13734:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13738:	09 2d       	mov	r16, r9
   1373a:	10 e0       	ldi	r17, 0x00	; 0
   1373c:	81 30       	cpi	r24, 0x01	; 1
   1373e:	09 f4       	brne	.+2      	; 0x13742 <_Z12Pub_Sub_DataPcPhjh+0xf26>
   13740:	57 c0       	rjmp	.+174    	; 0x137f0 <_Z12Pub_Sub_DataPcPhjh+0xfd4>
   13742:	78 01       	movw	r14, r16
   13744:	e5 e6       	ldi	r30, 0x65	; 101
   13746:	ee 1a       	sub	r14, r30
   13748:	f1 08       	sbc	r15, r1
   1374a:	6d e5       	ldi	r22, 0x5D	; 93
   1374c:	76 e3       	ldi	r23, 0x36	; 54
   1374e:	c2 01       	movw	r24, r4
   13750:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13754:	60 e0       	ldi	r22, 0x00	; 0
   13756:	70 e0       	ldi	r23, 0x00	; 0
   13758:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1375c:	2b e1       	ldi	r18, 0x1B	; 27
   1375e:	2e 9d       	mul	r18, r14
   13760:	80 01       	movw	r16, r0
   13762:	2f 9d       	mul	r18, r15
   13764:	10 0d       	add	r17, r0
   13766:	11 24       	eor	r1, r1
   13768:	08 51       	subi	r16, 0x18	; 24
   1376a:	12 4f       	sbci	r17, 0xF2	; 242
   1376c:	d8 01       	movw	r26, r16
   1376e:	1d 96       	adiw	r26, 0x0d	; 13
   13770:	9c 93       	st	X, r25
   13772:	8e 93       	st	-X, r24
   13774:	1c 97       	sbiw	r26, 0x0c	; 12
   13776:	69 e5       	ldi	r22, 0x59	; 89
   13778:	76 e3       	ldi	r23, 0x36	; 54
   1377a:	c2 01       	movw	r24, r4
   1377c:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13780:	61 e0       	ldi	r22, 0x01	; 1
   13782:	70 e0       	ldi	r23, 0x00	; 0
   13784:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13788:	f8 01       	movw	r30, r16
   1378a:	97 87       	std	Z+15, r25	; 0x0f
   1378c:	86 87       	std	Z+14, r24	; 0x0e
   1378e:	65 e5       	ldi	r22, 0x55	; 85
   13790:	76 e3       	ldi	r23, 0x36	; 54
   13792:	c2 01       	movw	r24, r4
   13794:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13798:	60 e0       	ldi	r22, 0x00	; 0
   1379a:	70 e0       	ldi	r23, 0x00	; 0
   1379c:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   137a0:	d8 01       	movw	r26, r16
   137a2:	53 96       	adiw	r26, 0x13	; 19
   137a4:	9c 93       	st	X, r25
   137a6:	8e 93       	st	-X, r24
   137a8:	52 97       	sbiw	r26, 0x12	; 18
   137aa:	61 e5       	ldi	r22, 0x51	; 81
   137ac:	76 e3       	ldi	r23, 0x36	; 54
   137ae:	c2 01       	movw	r24, r4
   137b0:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   137b4:	61 e0       	ldi	r22, 0x01	; 1
   137b6:	70 e0       	ldi	r23, 0x00	; 0
   137b8:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   137bc:	f8 01       	movw	r30, r16
   137be:	95 8b       	std	Z+21, r25	; 0x15
   137c0:	84 8b       	std	Z+20, r24	; 0x14
   137c2:	68 e4       	ldi	r22, 0x48	; 72
   137c4:	76 e3       	ldi	r23, 0x36	; 54
   137c6:	c2 01       	movw	r24, r4
   137c8:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   137cc:	d8 01       	movw	r26, r16
   137ce:	58 96       	adiw	r26, 0x18	; 24
   137d0:	8c 93       	st	X, r24
   137d2:	58 97       	sbiw	r26, 0x18	; 24
   137d4:	1a 96       	adiw	r26, 0x0a	; 10
   137d6:	1c 92       	st	X, r1
   137d8:	1a 97       	sbiw	r26, 0x0a	; 10
   137da:	1b 96       	adiw	r26, 0x0b	; 11
   137dc:	1c 92       	st	X, r1
   137de:	1b 97       	sbiw	r26, 0x0b	; 11
   137e0:	14 96       	adiw	r26, 0x04	; 4
   137e2:	1c 92       	st	X, r1
   137e4:	1e 92       	st	-X, r1
   137e6:	13 97       	sbiw	r26, 0x03	; 3
   137e8:	b9 e6       	ldi	r27, 0x69	; 105
   137ea:	9b 12       	cpse	r9, r27
   137ec:	7b c0       	rjmp	.+246    	; 0x138e4 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   137ee:	47 c0       	rjmp	.+142    	; 0x1387e <_Z12Pub_Sub_DataPcPhjh+0x1062>
   137f0:	62 e8       	ldi	r22, 0x82	; 130
   137f2:	76 e3       	ldi	r23, 0x36	; 54
   137f4:	86 ec       	ldi	r24, 0xC6	; 198
   137f6:	94 e1       	ldi	r25, 0x14	; 20
   137f8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   137fc:	6d e6       	ldi	r22, 0x6D	; 109
   137fe:	76 e3       	ldi	r23, 0x36	; 54
   13800:	86 ec       	ldi	r24, 0xC6	; 198
   13802:	94 e1       	ldi	r25, 0x14	; 20
   13804:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13808:	c8 01       	movw	r24, r16
   1380a:	85 56       	subi	r24, 0x65	; 101
   1380c:	91 09       	sbc	r25, r1
   1380e:	2b e1       	ldi	r18, 0x1B	; 27
   13810:	28 9f       	mul	r18, r24
   13812:	60 01       	movw	r12, r0
   13814:	29 9f       	mul	r18, r25
   13816:	d0 0c       	add	r13, r0
   13818:	11 24       	eor	r1, r1
   1381a:	f6 01       	movw	r30, r12
   1381c:	e8 51       	subi	r30, 0x18	; 24
   1381e:	f2 4f       	sbci	r31, 0xF2	; 242
   13820:	4a e0       	ldi	r20, 0x0A	; 10
   13822:	50 e0       	ldi	r21, 0x00	; 0
   13824:	61 81       	ldd	r22, Z+1	; 0x01
   13826:	86 ec       	ldi	r24, 0xC6	; 198
   13828:	94 e1       	ldi	r25, 0x14	; 20
   1382a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1382e:	86 ec       	ldi	r24, 0xC6	; 198
   13830:	94 e1       	ldi	r25, 0x14	; 20
   13832:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13836:	e1 2c       	mov	r14, r1
   13838:	f1 2c       	mov	r15, r1
   1383a:	86 ec       	ldi	r24, 0xC6	; 198
   1383c:	94 e1       	ldi	r25, 0x14	; 20
   1383e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13842:	61 e6       	ldi	r22, 0x61	; 97
   13844:	76 e3       	ldi	r23, 0x36	; 54
   13846:	86 ec       	ldi	r24, 0xC6	; 198
   13848:	94 e1       	ldi	r25, 0x14	; 20
   1384a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1384e:	f6 01       	movw	r30, r12
   13850:	ee 0d       	add	r30, r14
   13852:	ff 1d       	adc	r31, r15
   13854:	e8 51       	subi	r30, 0x18	; 24
   13856:	f2 4f       	sbci	r31, 0xF2	; 242
   13858:	4a e0       	ldi	r20, 0x0A	; 10
   1385a:	50 e0       	ldi	r21, 0x00	; 0
   1385c:	65 81       	ldd	r22, Z+5	; 0x05
   1385e:	86 ec       	ldi	r24, 0xC6	; 198
   13860:	94 e1       	ldi	r25, 0x14	; 20
   13862:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   13866:	86 ec       	ldi	r24, 0xC6	; 198
   13868:	94 e1       	ldi	r25, 0x14	; 20
   1386a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1386e:	ef ef       	ldi	r30, 0xFF	; 255
   13870:	ee 1a       	sub	r14, r30
   13872:	fe 0a       	sbc	r15, r30
   13874:	f5 e0       	ldi	r31, 0x05	; 5
   13876:	ef 16       	cp	r14, r31
   13878:	f1 04       	cpc	r15, r1
   1387a:	f9 f6       	brne	.-66     	; 0x1383a <_Z12Pub_Sub_DataPcPhjh+0x101e>
   1387c:	62 cf       	rjmp	.-316    	; 0x13742 <_Z12Pub_Sub_DataPcPhjh+0xf26>
   1387e:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   13882:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   13886:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   1388a:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   1388e:	d8 01       	movw	r26, r16
   13890:	1c 96       	adiw	r26, 0x0c	; 12
   13892:	8d 91       	ld	r24, X+
   13894:	9c 91       	ld	r25, X
   13896:	1d 97       	sbiw	r26, 0x0d	; 13
   13898:	00 97       	sbiw	r24, 0x00	; 0
   1389a:	e1 f0       	breq	.+56     	; 0x138d4 <_Z12Pub_Sub_DataPcPhjh+0x10b8>
   1389c:	52 96       	adiw	r26, 0x12	; 18
   1389e:	6d 91       	ld	r22, X+
   138a0:	7c 91       	ld	r23, X
   138a2:	53 97       	sbiw	r26, 0x13	; 19
   138a4:	40 e1       	ldi	r20, 0x10	; 16
   138a6:	5e e0       	ldi	r21, 0x0E	; 14
   138a8:	64 9f       	mul	r22, r20
   138aa:	90 01       	movw	r18, r0
   138ac:	65 9f       	mul	r22, r21
   138ae:	30 0d       	add	r19, r0
   138b0:	74 9f       	mul	r23, r20
   138b2:	30 0d       	add	r19, r0
   138b4:	11 24       	eor	r1, r1
   138b6:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   138ba:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
   138be:	4c e3       	ldi	r20, 0x3C	; 60
   138c0:	48 9f       	mul	r20, r24
   138c2:	90 01       	movw	r18, r0
   138c4:	49 9f       	mul	r20, r25
   138c6:	30 0d       	add	r19, r0
   138c8:	11 24       	eor	r1, r1
   138ca:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   138ce:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   138d2:	08 c0       	rjmp	.+16     	; 0x138e4 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   138d4:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   138d8:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
   138dc:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   138e0:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
   138e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   138e8:	81 30       	cpi	r24, 0x01	; 1
   138ea:	09 f0       	breq	.+2      	; 0x138ee <_Z12Pub_Sub_DataPcPhjh+0x10d2>
   138ec:	57 c0       	rjmp	.+174    	; 0x1399c <_Z12Pub_Sub_DataPcPhjh+0x1180>
   138ee:	8b e1       	ldi	r24, 0x1B	; 27
   138f0:	8e 9d       	mul	r24, r14
   138f2:	80 01       	movw	r16, r0
   138f4:	8f 9d       	mul	r24, r15
   138f6:	10 0d       	add	r17, r0
   138f8:	11 24       	eor	r1, r1
   138fa:	0c 50       	subi	r16, 0x0C	; 12
   138fc:	12 4f       	sbci	r17, 0xF2	; 242
   138fe:	82 e0       	ldi	r24, 0x02	; 2
   13900:	d8 2e       	mov	r13, r24
   13902:	86 ec       	ldi	r24, 0xC6	; 198
   13904:	94 e1       	ldi	r25, 0x14	; 20
   13906:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1390a:	61 e4       	ldi	r22, 0x41	; 65
   1390c:	76 e3       	ldi	r23, 0x36	; 54
   1390e:	86 ec       	ldi	r24, 0xC6	; 198
   13910:	94 e1       	ldi	r25, 0x14	; 20
   13912:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13916:	f8 01       	movw	r30, r16
   13918:	61 91       	ld	r22, Z+
   1391a:	71 91       	ld	r23, Z+
   1391c:	8f 01       	movw	r16, r30
   1391e:	4a e0       	ldi	r20, 0x0A	; 10
   13920:	50 e0       	ldi	r21, 0x00	; 0
   13922:	86 ec       	ldi	r24, 0xC6	; 198
   13924:	94 e1       	ldi	r25, 0x14	; 20
   13926:	0e 94 13 d6 	call	0x1ac26	; 0x1ac26 <_ZN5Print5printEji>
   1392a:	86 ec       	ldi	r24, 0xC6	; 198
   1392c:	94 e1       	ldi	r25, 0x14	; 20
   1392e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13932:	6a e3       	ldi	r22, 0x3A	; 58
   13934:	76 e3       	ldi	r23, 0x36	; 54
   13936:	86 ec       	ldi	r24, 0xC6	; 198
   13938:	94 e1       	ldi	r25, 0x14	; 20
   1393a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1393e:	d8 01       	movw	r26, r16
   13940:	14 96       	adiw	r26, 0x04	; 4
   13942:	6d 91       	ld	r22, X+
   13944:	7c 91       	ld	r23, X
   13946:	15 97       	sbiw	r26, 0x05	; 5
   13948:	4a e0       	ldi	r20, 0x0A	; 10
   1394a:	50 e0       	ldi	r21, 0x00	; 0
   1394c:	86 ec       	ldi	r24, 0xC6	; 198
   1394e:	94 e1       	ldi	r25, 0x14	; 20
   13950:	0e 94 13 d6 	call	0x1ac26	; 0x1ac26 <_ZN5Print5printEji>
   13954:	86 ec       	ldi	r24, 0xC6	; 198
   13956:	94 e1       	ldi	r25, 0x14	; 20
   13958:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1395c:	da 94       	dec	r13
   1395e:	d1 10       	cpse	r13, r1
   13960:	d0 cf       	rjmp	.-96     	; 0x13902 <_Z12Pub_Sub_DataPcPhjh+0x10e6>
   13962:	86 ec       	ldi	r24, 0xC6	; 198
   13964:	94 e1       	ldi	r25, 0x14	; 20
   13966:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1396a:	6e e2       	ldi	r22, 0x2E	; 46
   1396c:	76 e3       	ldi	r23, 0x36	; 54
   1396e:	86 ec       	ldi	r24, 0xC6	; 198
   13970:	94 e1       	ldi	r25, 0x14	; 20
   13972:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13976:	8b e1       	ldi	r24, 0x1B	; 27
   13978:	8e 9d       	mul	r24, r14
   1397a:	f0 01       	movw	r30, r0
   1397c:	8f 9d       	mul	r24, r15
   1397e:	f0 0d       	add	r31, r0
   13980:	11 24       	eor	r1, r1
   13982:	e8 51       	subi	r30, 0x18	; 24
   13984:	f2 4f       	sbci	r31, 0xF2	; 242
   13986:	4a e0       	ldi	r20, 0x0A	; 10
   13988:	50 e0       	ldi	r21, 0x00	; 0
   1398a:	60 8d       	ldd	r22, Z+24	; 0x18
   1398c:	86 ec       	ldi	r24, 0xC6	; 198
   1398e:	94 e1       	ldi	r25, 0x14	; 20
   13990:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   13994:	86 ec       	ldi	r24, 0xC6	; 198
   13996:	94 e1       	ldi	r25, 0x14	; 20
   13998:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1399c:	8c e9       	ldi	r24, 0x9C	; 156
   1399e:	89 0d       	add	r24, r9
   139a0:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   139a4:	b1 e0       	ldi	r27, 0x01	; 1
   139a6:	c0 55       	subi	r28, 0x50	; 80
   139a8:	d9 4f       	sbci	r29, 0xF9	; 249
   139aa:	b8 83       	st	Y, r27
   139ac:	c0 5b       	subi	r28, 0xB0	; 176
   139ae:	d6 40       	sbci	r29, 0x06	; 6
   139b0:	8e 01       	movw	r16, r28
   139b2:	0b 57       	subi	r16, 0x7B	; 123
   139b4:	19 4f       	sbci	r17, 0xF9	; 249
   139b6:	88 e2       	ldi	r24, 0x28	; 40
   139b8:	f8 01       	movw	r30, r16
   139ba:	11 92       	st	Z+, r1
   139bc:	8a 95       	dec	r24
   139be:	e9 f7       	brne	.-6      	; 0x139ba <_Z12Pub_Sub_DataPcPhjh+0x119e>
   139c0:	8e ec       	ldi	r24, 0xCE	; 206
   139c2:	93 e1       	ldi	r25, 0x13	; 19
   139c4:	9f 93       	push	r25
   139c6:	8f 93       	push	r24
   139c8:	8d e9       	ldi	r24, 0x9D	; 157
   139ca:	95 e0       	ldi	r25, 0x05	; 5
   139cc:	9f 93       	push	r25
   139ce:	8f 93       	push	r24
   139d0:	1f 93       	push	r17
   139d2:	0f 93       	push	r16
   139d4:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   139d8:	ca 54       	subi	r28, 0x4A	; 74
   139da:	d9 4f       	sbci	r29, 0xF9	; 249
   139dc:	68 81       	ld	r22, Y
   139de:	79 81       	ldd	r23, Y+1	; 0x01
   139e0:	c6 5b       	subi	r28, 0xB6	; 182
   139e2:	d6 40       	sbci	r29, 0x06	; 6
   139e4:	c8 01       	movw	r24, r16
   139e6:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   139ea:	0f 90       	pop	r0
   139ec:	0f 90       	pop	r0
   139ee:	0f 90       	pop	r0
   139f0:	0f 90       	pop	r0
   139f2:	0f 90       	pop	r0
   139f4:	0f 90       	pop	r0
   139f6:	89 2b       	or	r24, r25
   139f8:	09 f0       	breq	.+2      	; 0x139fc <_Z12Pub_Sub_DataPcPhjh+0x11e0>
   139fa:	f4 c1       	rjmp	.+1000   	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   139fc:	69 e2       	ldi	r22, 0x29	; 41
   139fe:	76 e3       	ldi	r23, 0x36	; 54
   13a00:	c2 01       	movw	r24, r4
   13a02:	0e 94 80 8e 	call	0x11d00	; 0x11d00 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13a06:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   13a0a:	fc 01       	movw	r30, r24
   13a0c:	31 97       	sbiw	r30, 0x01	; 1
   13a0e:	e8 30       	cpi	r30, 0x08	; 8
   13a10:	f1 05       	cpc	r31, r1
   13a12:	08 f0       	brcs	.+2      	; 0x13a16 <_Z12Pub_Sub_DataPcPhjh+0x11fa>
   13a14:	e1 c1       	rjmp	.+962    	; 0x13dd8 <_Z12Pub_Sub_DataPcPhjh+0x15bc>
   13a16:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13a1a:	88 27       	eor	r24, r24
   13a1c:	e1 51       	subi	r30, 0x11	; 17
   13a1e:	ff 4f       	sbci	r31, 0xFF	; 255
   13a20:	8f 4f       	sbci	r24, 0xFF	; 255
   13a22:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
   13a26:	91 30       	cpi	r25, 0x01	; 1
   13a28:	51 f4       	brne	.+20     	; 0x13a3e <_Z12Pub_Sub_DataPcPhjh+0x1222>
   13a2a:	63 e1       	ldi	r22, 0x13	; 19
   13a2c:	76 e3       	ldi	r23, 0x36	; 54
   13a2e:	86 ec       	ldi	r24, 0xC6	; 198
   13a30:	94 e1       	ldi	r25, 0x14	; 20
   13a32:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13a36:	86 ec       	ldi	r24, 0xC6	; 198
   13a38:	94 e1       	ldi	r25, 0x14	; 20
   13a3a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13a3e:	6f e0       	ldi	r22, 0x0F	; 15
   13a40:	76 e3       	ldi	r23, 0x36	; 54
   13a42:	c2 01       	movw	r24, r4
   13a44:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13a48:	bc 01       	movw	r22, r24
   13a4a:	ce 01       	movw	r24, r28
   13a4c:	83 5a       	subi	r24, 0xA3	; 163
   13a4e:	99 4f       	sbci	r25, 0xF9	; 249
   13a50:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   13a54:	25 e1       	ldi	r18, 0x15	; 21
   13a56:	3c e0       	ldi	r19, 0x0C	; 12
   13a58:	61 2c       	mov	r6, r1
   13a5a:	71 2c       	mov	r7, r1
   13a5c:	96 2c       	mov	r9, r6
   13a5e:	fe 01       	movw	r30, r28
   13a60:	e3 5a       	subi	r30, 0xA3	; 163
   13a62:	f9 4f       	sbci	r31, 0xF9	; 249
   13a64:	80 e0       	ldi	r24, 0x00	; 0
   13a66:	90 e0       	ldi	r25, 0x00	; 0
   13a68:	40 e0       	ldi	r20, 0x00	; 0
   13a6a:	51 91       	ld	r21, Z+
   13a6c:	d9 01       	movw	r26, r18
   13a6e:	a8 0f       	add	r26, r24
   13a70:	b9 1f       	adc	r27, r25
   13a72:	11 96       	adiw	r26, 0x01	; 1
   13a74:	6c 91       	ld	r22, X
   13a76:	65 13       	cpse	r22, r21
   13a78:	01 c0       	rjmp	.+2      	; 0x13a7c <_Z12Pub_Sub_DataPcPhjh+0x1260>
   13a7a:	4f 5f       	subi	r20, 0xFF	; 255
   13a7c:	01 96       	adiw	r24, 0x01	; 1
   13a7e:	86 30       	cpi	r24, 0x06	; 6
   13a80:	91 05       	cpc	r25, r1
   13a82:	99 f7       	brne	.-26     	; 0x13a6a <_Z12Pub_Sub_DataPcPhjh+0x124e>
   13a84:	c3 01       	movw	r24, r6
   13a86:	01 96       	adiw	r24, 0x01	; 1
   13a88:	7c 01       	movw	r14, r24
   13a8a:	46 30       	cpi	r20, 0x06	; 6
   13a8c:	09 f0       	breq	.+2      	; 0x13a90 <_Z12Pub_Sub_DataPcPhjh+0x1274>
   13a8e:	b1 c0       	rjmp	.+354    	; 0x13bf2 <_Z12Pub_Sub_DataPcPhjh+0x13d6>
   13a90:	8d e0       	ldi	r24, 0x0D	; 13
   13a92:	86 9d       	mul	r24, r6
   13a94:	60 01       	movw	r12, r0
   13a96:	87 9d       	mul	r24, r7
   13a98:	d0 0c       	add	r13, r0
   13a9a:	11 24       	eor	r1, r1
   13a9c:	d6 01       	movw	r26, r12
   13a9e:	aa 5e       	subi	r26, 0xEA	; 234
   13aa0:	b3 4f       	sbci	r27, 0xF3	; 243
   13aa2:	5d 01       	movw	r10, r26
   13aa4:	63 e1       	ldi	r22, 0x13	; 19
   13aa6:	77 e0       	ldi	r23, 0x07	; 7
   13aa8:	cd 01       	movw	r24, r26
   13aaa:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   13aae:	27 e0       	ldi	r18, 0x07	; 7
   13ab0:	26 9d       	mul	r18, r6
   13ab2:	c0 01       	movw	r24, r0
   13ab4:	27 9d       	mul	r18, r7
   13ab6:	90 0d       	add	r25, r0
   13ab8:	11 24       	eor	r1, r1
   13aba:	b5 01       	movw	r22, r10
   13abc:	8e 5d       	subi	r24, 0xDE	; 222
   13abe:	9b 4e       	sbci	r25, 0xEB	; 235
   13ac0:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   13ac4:	f6 01       	movw	r30, r12
   13ac6:	eb 5e       	subi	r30, 0xEB	; 235
   13ac8:	f3 4f       	sbci	r31, 0xF3	; 243
   13aca:	6f 01       	movw	r12, r30
   13acc:	10 82       	st	Z, r1
   13ace:	8f ef       	ldi	r24, 0xFF	; 255
   13ad0:	90 e0       	ldi	r25, 0x00	; 0
   13ad2:	91 87       	std	Z+9, r25	; 0x09
   13ad4:	80 87       	std	Z+8, r24	; 0x08
   13ad6:	81 e0       	ldi	r24, 0x01	; 1
   13ad8:	83 87       	std	Z+11, r24	; 0x0b
   13ada:	12 86       	std	Z+10, r1	; 0x0a
   13adc:	14 86       	std	Z+12, r1	; 0x0c
   13ade:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13ae2:	81 30       	cpi	r24, 0x01	; 1
   13ae4:	79 f5       	brne	.+94     	; 0x13b44 <_Z12Pub_Sub_DataPcPhjh+0x1328>
   13ae6:	64 ef       	ldi	r22, 0xF4	; 244
   13ae8:	75 e3       	ldi	r23, 0x35	; 53
   13aea:	86 ec       	ldi	r24, 0xC6	; 198
   13aec:	94 e1       	ldi	r25, 0x14	; 20
   13aee:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13af2:	86 ec       	ldi	r24, 0xC6	; 198
   13af4:	94 e1       	ldi	r25, 0x14	; 20
   13af6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13afa:	69 ee       	ldi	r22, 0xE9	; 233
   13afc:	75 e3       	ldi	r23, 0x35	; 53
   13afe:	86 ec       	ldi	r24, 0xC6	; 198
   13b00:	94 e1       	ldi	r25, 0x14	; 20
   13b02:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13b06:	86 ec       	ldi	r24, 0xC6	; 198
   13b08:	94 e1       	ldi	r25, 0x14	; 20
   13b0a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13b0e:	4a e0       	ldi	r20, 0x0A	; 10
   13b10:	50 e0       	ldi	r21, 0x00	; 0
   13b12:	d6 01       	movw	r26, r12
   13b14:	6c 91       	ld	r22, X
   13b16:	86 ec       	ldi	r24, 0xC6	; 198
   13b18:	94 e1       	ldi	r25, 0x14	; 20
   13b1a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   13b1e:	6e ed       	ldi	r22, 0xDE	; 222
   13b20:	75 e3       	ldi	r23, 0x35	; 53
   13b22:	86 ec       	ldi	r24, 0xC6	; 198
   13b24:	94 e1       	ldi	r25, 0x14	; 20
   13b26:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13b2a:	86 ec       	ldi	r24, 0xC6	; 198
   13b2c:	94 e1       	ldi	r25, 0x14	; 20
   13b2e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13b32:	b5 01       	movw	r22, r10
   13b34:	86 ec       	ldi	r24, 0xC6	; 198
   13b36:	94 e1       	ldi	r25, 0x14	; 20
   13b38:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   13b3c:	86 ec       	ldi	r24, 0xC6	; 198
   13b3e:	94 e1       	ldi	r25, 0x14	; 20
   13b40:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13b44:	89 2d       	mov	r24, r9
   13b46:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   13b4a:	b5 e0       	ldi	r27, 0x05	; 5
   13b4c:	6b 0e       	add	r6, r27
   13b4e:	71 1c       	adc	r7, r1
   13b50:	ae e4       	ldi	r26, 0x4E	; 78
   13b52:	8a 2e       	mov	r8, r26
   13b54:	ad e0       	ldi	r26, 0x0D	; 13
   13b56:	9a 2e       	mov	r9, r26
   13b58:	cc 24       	eor	r12, r12
   13b5a:	c3 94       	inc	r12
   13b5c:	d1 2c       	mov	r13, r1
   13b5e:	22 24       	eor	r2, r2
   13b60:	2a 94       	dec	r2
   13b62:	2c 0c       	add	r2, r12
   13b64:	54 01       	movw	r10, r8
   13b66:	f5 e0       	ldi	r31, 0x05	; 5
   13b68:	3f 2e       	mov	r3, r31
   13b6a:	f5 01       	movw	r30, r10
   13b6c:	81 81       	ldd	r24, Z+1	; 0x01
   13b6e:	88 23       	and	r24, r24
   13b70:	09 f1       	breq	.+66     	; 0x13bb4 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b72:	90 e0       	ldi	r25, 0x00	; 0
   13b74:	8e 15       	cp	r24, r14
   13b76:	9f 05       	cpc	r25, r15
   13b78:	e9 f4       	brne	.+58     	; 0x13bb4 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b7a:	11 82       	std	Z+1, r1	; 0x01
   13b7c:	82 2d       	mov	r24, r2
   13b7e:	0e 94 c4 7f 	call	0xff88	; 0xff88 <_Z16Lira_Data_EEPROMh>
   13b82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13b86:	81 30       	cpi	r24, 0x01	; 1
   13b88:	a9 f4       	brne	.+42     	; 0x13bb4 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b8a:	61 ec       	ldi	r22, 0xC1	; 193
   13b8c:	75 e3       	ldi	r23, 0x35	; 53
   13b8e:	86 ec       	ldi	r24, 0xC6	; 198
   13b90:	94 e1       	ldi	r25, 0x14	; 20
   13b92:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13b96:	86 ec       	ldi	r24, 0xC6	; 198
   13b98:	94 e1       	ldi	r25, 0x14	; 20
   13b9a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13b9e:	4a e0       	ldi	r20, 0x0A	; 10
   13ba0:	50 e0       	ldi	r21, 0x00	; 0
   13ba2:	b6 01       	movw	r22, r12
   13ba4:	86 ec       	ldi	r24, 0xC6	; 198
   13ba6:	94 e1       	ldi	r25, 0x14	; 20
   13ba8:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
   13bac:	86 ec       	ldi	r24, 0xC6	; 198
   13bae:	94 e1       	ldi	r25, 0x14	; 20
   13bb0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13bb4:	3a 94       	dec	r3
   13bb6:	ff ef       	ldi	r31, 0xFF	; 255
   13bb8:	af 1a       	sub	r10, r31
   13bba:	bf 0a       	sbc	r11, r31
   13bbc:	31 10       	cpse	r3, r1
   13bbe:	d5 cf       	rjmp	.-86     	; 0x13b6a <_Z12Pub_Sub_DataPcPhjh+0x134e>
   13bc0:	2f ef       	ldi	r18, 0xFF	; 255
   13bc2:	c2 1a       	sub	r12, r18
   13bc4:	d2 0a       	sbc	r13, r18
   13bc6:	36 e0       	ldi	r19, 0x06	; 6
   13bc8:	83 0e       	add	r8, r19
   13bca:	91 1c       	adc	r9, r1
   13bcc:	4f e0       	ldi	r20, 0x0F	; 15
   13bce:	c4 16       	cp	r12, r20
   13bd0:	d1 04       	cpc	r13, r1
   13bd2:	29 f6       	brne	.-118    	; 0x13b5e <_Z12Pub_Sub_DataPcPhjh+0x1342>
   13bd4:	5f ef       	ldi	r21, 0xFF	; 255
   13bd6:	e5 1a       	sub	r14, r21
   13bd8:	f5 0a       	sbc	r15, r21
   13bda:	6e 14       	cp	r6, r14
   13bdc:	7f 04       	cpc	r7, r15
   13bde:	09 f0       	breq	.+2      	; 0x13be2 <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13be0:	b7 cf       	rjmp	.-146    	; 0x13b50 <_Z12Pub_Sub_DataPcPhjh+0x1334>
   13be2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13be6:	81 30       	cpi	r24, 0x01	; 1
   13be8:	09 f0       	breq	.+2      	; 0x13bec <_Z12Pub_Sub_DataPcPhjh+0x13d0>
   13bea:	ef c0       	rjmp	.+478    	; 0x13dca <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13bec:	e1 2c       	mov	r14, r1
   13bee:	f1 2c       	mov	r15, r1
   13bf0:	09 c0       	rjmp	.+18     	; 0x13c04 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13bf2:	3c 01       	movw	r6, r24
   13bf4:	23 5f       	subi	r18, 0xF3	; 243
   13bf6:	3f 4f       	sbci	r19, 0xFF	; 255
   13bf8:	86 e0       	ldi	r24, 0x06	; 6
   13bfa:	e8 16       	cp	r14, r24
   13bfc:	f1 04       	cpc	r15, r1
   13bfe:	09 f0       	breq	.+2      	; 0x13c02 <_Z12Pub_Sub_DataPcPhjh+0x13e6>
   13c00:	2d cf       	rjmp	.-422    	; 0x13a5c <_Z12Pub_Sub_DataPcPhjh+0x1240>
   13c02:	ef cf       	rjmp	.-34     	; 0x13be2 <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13c04:	86 ec       	ldi	r24, 0xC6	; 198
   13c06:	94 e1       	ldi	r25, 0x14	; 20
   13c08:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   13c0c:	66 eb       	ldi	r22, 0xB6	; 182
   13c0e:	75 e3       	ldi	r23, 0x35	; 53
   13c10:	86 ec       	ldi	r24, 0xC6	; 198
   13c12:	94 e1       	ldi	r25, 0x14	; 20
   13c14:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13c18:	86 ec       	ldi	r24, 0xC6	; 198
   13c1a:	94 e1       	ldi	r25, 0x14	; 20
   13c1c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13c20:	b7 01       	movw	r22, r14
   13c22:	6a 5e       	subi	r22, 0xEA	; 234
   13c24:	73 4f       	sbci	r23, 0xF3	; 243
   13c26:	86 ec       	ldi	r24, 0xC6	; 198
   13c28:	94 e1       	ldi	r25, 0x14	; 20
   13c2a:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   13c2e:	86 ec       	ldi	r24, 0xC6	; 198
   13c30:	94 e1       	ldi	r25, 0x14	; 20
   13c32:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13c36:	ad e0       	ldi	r26, 0x0D	; 13
   13c38:	ea 0e       	add	r14, r26
   13c3a:	f1 1c       	adc	r15, r1
   13c3c:	be e4       	ldi	r27, 0x4E	; 78
   13c3e:	eb 16       	cp	r14, r27
   13c40:	f1 04       	cpc	r15, r1
   13c42:	01 f7       	brne	.-64     	; 0x13c04 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13c44:	c2 c0       	rjmp	.+388    	; 0x13dca <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13c46:	91 30       	cpi	r25, 0x01	; 1
   13c48:	51 f4       	brne	.+20     	; 0x13c5e <_Z12Pub_Sub_DataPcPhjh+0x1442>
   13c4a:	61 ea       	ldi	r22, 0xA1	; 161
   13c4c:	75 e3       	ldi	r23, 0x35	; 53
   13c4e:	86 ec       	ldi	r24, 0xC6	; 198
   13c50:	94 e1       	ldi	r25, 0x14	; 20
   13c52:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13c56:	86 ec       	ldi	r24, 0xC6	; 198
   13c58:	94 e1       	ldi	r25, 0x14	; 20
   13c5a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13c5e:	68 e9       	ldi	r22, 0x98	; 152
   13c60:	75 e3       	ldi	r23, 0x35	; 53
   13c62:	c2 01       	movw	r24, r4
   13c64:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c68:	90 e0       	ldi	r25, 0x00	; 0
   13c6a:	01 97       	sbiw	r24, 0x01	; 1
   13c6c:	26 e0       	ldi	r18, 0x06	; 6
   13c6e:	28 9f       	mul	r18, r24
   13c70:	f0 01       	movw	r30, r0
   13c72:	29 9f       	mul	r18, r25
   13c74:	f0 0d       	add	r31, r0
   13c76:	11 24       	eor	r1, r1
   13c78:	e2 5b       	subi	r30, 0xB2	; 178
   13c7a:	f2 4f       	sbci	r31, 0xF2	; 242
   13c7c:	10 82       	st	Z, r1
   13c7e:	e1 e0       	ldi	r30, 0x01	; 1
   13c80:	c0 55       	subi	r28, 0x50	; 80
   13c82:	d9 4f       	sbci	r29, 0xF9	; 249
   13c84:	e8 83       	st	Y, r30
   13c86:	c0 5b       	subi	r28, 0xB0	; 176
   13c88:	d6 40       	sbci	r29, 0x06	; 6
   13c8a:	ac c0       	rjmp	.+344    	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13c8c:	91 30       	cpi	r25, 0x01	; 1
   13c8e:	51 f4       	brne	.+20     	; 0x13ca4 <_Z12Pub_Sub_DataPcPhjh+0x1488>
   13c90:	6a e7       	ldi	r22, 0x7A	; 122
   13c92:	75 e3       	ldi	r23, 0x35	; 53
   13c94:	86 ec       	ldi	r24, 0xC6	; 198
   13c96:	94 e1       	ldi	r25, 0x14	; 20
   13c98:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13c9c:	86 ec       	ldi	r24, 0xC6	; 198
   13c9e:	94 e1       	ldi	r25, 0x14	; 20
   13ca0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13ca4:	60 e7       	ldi	r22, 0x70	; 112
   13ca6:	75 e3       	ldi	r23, 0x35	; 53
   13ca8:	c2 01       	movw	r24, r4
   13caa:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cae:	0e 94 35 33 	call	0x666a	; 0x666a <_Z15Delete_Scheduleh>
   13cb2:	f1 e0       	ldi	r31, 0x01	; 1
   13cb4:	c0 55       	subi	r28, 0x50	; 80
   13cb6:	d9 4f       	sbci	r29, 0xF9	; 249
   13cb8:	f8 83       	st	Y, r31
   13cba:	c0 5b       	subi	r28, 0xB0	; 176
   13cbc:	d6 40       	sbci	r29, 0x06	; 6
   13cbe:	92 c0       	rjmp	.+292    	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13cc0:	91 30       	cpi	r25, 0x01	; 1
   13cc2:	51 f4       	brne	.+20     	; 0x13cd8 <_Z12Pub_Sub_DataPcPhjh+0x14bc>
   13cc4:	65 e5       	ldi	r22, 0x55	; 85
   13cc6:	75 e3       	ldi	r23, 0x35	; 53
   13cc8:	86 ec       	ldi	r24, 0xC6	; 198
   13cca:	94 e1       	ldi	r25, 0x14	; 20
   13ccc:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13cd0:	86 ec       	ldi	r24, 0xC6	; 198
   13cd2:	94 e1       	ldi	r25, 0x14	; 20
   13cd4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13cd8:	6c e4       	ldi	r22, 0x4C	; 76
   13cda:	75 e3       	ldi	r23, 0x35	; 53
   13cdc:	c2 01       	movw	r24, r4
   13cde:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ce2:	85 56       	subi	r24, 0x65	; 101
   13ce4:	2b e1       	ldi	r18, 0x1B	; 27
   13ce6:	82 9f       	mul	r24, r18
   13ce8:	f0 01       	movw	r30, r0
   13cea:	11 24       	eor	r1, r1
   13cec:	e8 51       	subi	r30, 0x18	; 24
   13cee:	f2 4f       	sbci	r31, 0xF2	; 242
   13cf0:	11 8e       	std	Z+25, r1	; 0x19
   13cf2:	11 82       	std	Z+1, r1	; 0x01
   13cf4:	13 8a       	std	Z+19, r1	; 0x13
   13cf6:	12 8a       	std	Z+18, r1	; 0x12
   13cf8:	15 8a       	std	Z+21, r1	; 0x15
   13cfa:	14 8a       	std	Z+20, r1	; 0x14
   13cfc:	17 8a       	std	Z+23, r1	; 0x17
   13cfe:	16 8a       	std	Z+22, r1	; 0x16
   13d00:	15 86       	std	Z+13, r1	; 0x0d
   13d02:	14 86       	std	Z+12, r1	; 0x0c
   13d04:	17 86       	std	Z+15, r1	; 0x0f
   13d06:	16 86       	std	Z+14, r1	; 0x0e
   13d08:	10 82       	st	Z, r1
   13d0a:	12 86       	std	Z+10, r1	; 0x0a
   13d0c:	12 8e       	std	Z+26, r1	; 0x1a
   13d0e:	14 82       	std	Z+4, r1	; 0x04
   13d10:	13 82       	std	Z+3, r1	; 0x03
   13d12:	10 8e       	std	Z+24, r1	; 0x18
   13d14:	13 86       	std	Z+11, r1	; 0x0b
   13d16:	12 82       	std	Z+2, r1	; 0x02
   13d18:	31 e0       	ldi	r19, 0x01	; 1
   13d1a:	c0 55       	subi	r28, 0x50	; 80
   13d1c:	d9 4f       	sbci	r29, 0xF9	; 249
   13d1e:	38 83       	st	Y, r19
   13d20:	c0 5b       	subi	r28, 0xB0	; 176
   13d22:	d6 40       	sbci	r29, 0x06	; 6
   13d24:	5f c0       	rjmp	.+190    	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d26:	91 30       	cpi	r25, 0x01	; 1
   13d28:	51 f4       	brne	.+20     	; 0x13d3e <_Z12Pub_Sub_DataPcPhjh+0x1522>
   13d2a:	64 e3       	ldi	r22, 0x34	; 52
   13d2c:	75 e3       	ldi	r23, 0x35	; 53
   13d2e:	86 ec       	ldi	r24, 0xC6	; 198
   13d30:	94 e1       	ldi	r25, 0x14	; 20
   13d32:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13d36:	86 ec       	ldi	r24, 0xC6	; 198
   13d38:	94 e1       	ldi	r25, 0x14	; 20
   13d3a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13d3e:	81 e0       	ldi	r24, 0x01	; 1
   13d40:	80 93 e5 0b 	sts	0x0BE5, r24	; 0x800be5 <_sSchedules+0x2c7>
   13d44:	0e 94 49 87 	call	0x10e92	; 0x10e92 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13d48:	41 e0       	ldi	r20, 0x01	; 1
   13d4a:	c0 55       	subi	r28, 0x50	; 80
   13d4c:	d9 4f       	sbci	r29, 0xF9	; 249
   13d4e:	48 83       	st	Y, r20
   13d50:	c0 5b       	subi	r28, 0xB0	; 176
   13d52:	d6 40       	sbci	r29, 0x06	; 6
   13d54:	47 c0       	rjmp	.+142    	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d56:	91 30       	cpi	r25, 0x01	; 1
   13d58:	51 f4       	brne	.+20     	; 0x13d6e <_Z12Pub_Sub_DataPcPhjh+0x1552>
   13d5a:	6b e1       	ldi	r22, 0x1B	; 27
   13d5c:	75 e3       	ldi	r23, 0x35	; 53
   13d5e:	86 ec       	ldi	r24, 0xC6	; 198
   13d60:	94 e1       	ldi	r25, 0x14	; 20
   13d62:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13d66:	86 ec       	ldi	r24, 0xC6	; 198
   13d68:	94 e1       	ldi	r25, 0x14	; 20
   13d6a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13d6e:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
   13d72:	0e 94 49 87 	call	0x10e92	; 0x10e92 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13d76:	51 e0       	ldi	r21, 0x01	; 1
   13d78:	c0 55       	subi	r28, 0x50	; 80
   13d7a:	d9 4f       	sbci	r29, 0xF9	; 249
   13d7c:	58 83       	st	Y, r21
   13d7e:	c0 5b       	subi	r28, 0xB0	; 176
   13d80:	d6 40       	sbci	r29, 0x06	; 6
   13d82:	30 c0       	rjmp	.+96     	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d84:	91 30       	cpi	r25, 0x01	; 1
   13d86:	51 f4       	brne	.+20     	; 0x13d9c <_Z12Pub_Sub_DataPcPhjh+0x1580>
   13d88:	67 e0       	ldi	r22, 0x07	; 7
   13d8a:	75 e3       	ldi	r23, 0x35	; 53
   13d8c:	86 ec       	ldi	r24, 0xC6	; 198
   13d8e:	94 e1       	ldi	r25, 0x14	; 20
   13d90:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13d94:	86 ec       	ldi	r24, 0xC6	; 198
   13d96:	94 e1       	ldi	r25, 0x14	; 20
   13d98:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13d9c:	81 e0       	ldi	r24, 0x01	; 1
   13d9e:	80 93 a2 14 	sts	0x14A2, r24	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13da2:	c0 55       	subi	r28, 0x50	; 80
   13da4:	d9 4f       	sbci	r29, 0xF9	; 249
   13da6:	88 83       	st	Y, r24
   13da8:	c0 5b       	subi	r28, 0xB0	; 176
   13daa:	d6 40       	sbci	r29, 0x06	; 6
   13dac:	1b c0       	rjmp	.+54     	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13dae:	91 30       	cpi	r25, 0x01	; 1
   13db0:	51 f4       	brne	.+20     	; 0x13dc6 <_Z12Pub_Sub_DataPcPhjh+0x15aa>
   13db2:	6c ee       	ldi	r22, 0xEC	; 236
   13db4:	74 e3       	ldi	r23, 0x34	; 52
   13db6:	86 ec       	ldi	r24, 0xC6	; 198
   13db8:	94 e1       	ldi	r25, 0x14	; 20
   13dba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13dbe:	86 ec       	ldi	r24, 0xC6	; 198
   13dc0:	94 e1       	ldi	r25, 0x14	; 20
   13dc2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13dc6:	10 92 a2 14 	sts	0x14A2, r1	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13dca:	91 e0       	ldi	r25, 0x01	; 1
   13dcc:	c0 55       	subi	r28, 0x50	; 80
   13dce:	d9 4f       	sbci	r29, 0xF9	; 249
   13dd0:	98 83       	st	Y, r25
   13dd2:	c0 5b       	subi	r28, 0xB0	; 176
   13dd4:	d6 40       	sbci	r29, 0x06	; 6
   13dd6:	06 c0       	rjmp	.+12     	; 0x13de4 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13dd8:	a1 e0       	ldi	r26, 0x01	; 1
   13dda:	c0 55       	subi	r28, 0x50	; 80
   13ddc:	d9 4f       	sbci	r29, 0xF9	; 249
   13dde:	a8 83       	st	Y, r26
   13de0:	c0 5b       	subi	r28, 0xB0	; 176
   13de2:	d6 40       	sbci	r29, 0x06	; 6
   13de4:	88 e2       	ldi	r24, 0x28	; 40
   13de6:	f8 01       	movw	r30, r16
   13de8:	11 92       	st	Z+, r1
   13dea:	8a 95       	dec	r24
   13dec:	e9 f7       	brne	.-6      	; 0x13de8 <_Z12Pub_Sub_DataPcPhjh+0x15cc>
   13dee:	8e ec       	ldi	r24, 0xCE	; 206
   13df0:	93 e1       	ldi	r25, 0x13	; 19
   13df2:	9f 93       	push	r25
   13df4:	8f 93       	push	r24
   13df6:	89 e0       	ldi	r24, 0x09	; 9
   13df8:	96 e0       	ldi	r25, 0x06	; 6
   13dfa:	9f 93       	push	r25
   13dfc:	8f 93       	push	r24
   13dfe:	1f 93       	push	r17
   13e00:	0f 93       	push	r16
   13e02:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   13e06:	ca 54       	subi	r28, 0x4A	; 74
   13e08:	d9 4f       	sbci	r29, 0xF9	; 249
   13e0a:	68 81       	ld	r22, Y
   13e0c:	79 81       	ldd	r23, Y+1	; 0x01
   13e0e:	c6 5b       	subi	r28, 0xB6	; 182
   13e10:	d6 40       	sbci	r29, 0x06	; 6
   13e12:	c8 01       	movw	r24, r16
   13e14:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   13e18:	0f 90       	pop	r0
   13e1a:	0f 90       	pop	r0
   13e1c:	0f 90       	pop	r0
   13e1e:	0f 90       	pop	r0
   13e20:	0f 90       	pop	r0
   13e22:	0f 90       	pop	r0
   13e24:	89 2b       	or	r24, r25
   13e26:	09 f0       	breq	.+2      	; 0x13e2a <_Z12Pub_Sub_DataPcPhjh+0x160e>
   13e28:	73 c0       	rjmp	.+230    	; 0x13f10 <_Z12Pub_Sub_DataPcPhjh+0x16f4>
   13e2a:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   13e2e:	8b e0       	ldi	r24, 0x0B	; 11
   13e30:	e4 ec       	ldi	r30, 0xC4	; 196
   13e32:	fd e0       	ldi	r31, 0x0D	; 13
   13e34:	df 01       	movw	r26, r30
   13e36:	28 2f       	mov	r18, r24
   13e38:	1d 92       	st	X+, r1
   13e3a:	2a 95       	dec	r18
   13e3c:	e9 f7       	brne	.-6      	; 0x13e38 <_Z12Pub_Sub_DataPcPhjh+0x161c>
   13e3e:	e9 eb       	ldi	r30, 0xB9	; 185
   13e40:	fd e0       	ldi	r31, 0x0D	; 13
   13e42:	df 01       	movw	r26, r30
   13e44:	1d 92       	st	X+, r1
   13e46:	8a 95       	dec	r24
   13e48:	e9 f7       	brne	.-6      	; 0x13e44 <_Z12Pub_Sub_DataPcPhjh+0x1628>
   13e4a:	6f ed       	ldi	r22, 0xDF	; 223
   13e4c:	74 e3       	ldi	r23, 0x34	; 52
   13e4e:	c2 01       	movw	r24, r4
   13e50:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e54:	bc 01       	movw	r22, r24
   13e56:	84 ec       	ldi	r24, 0xC4	; 196
   13e58:	9d e0       	ldi	r25, 0x0D	; 13
   13e5a:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   13e5e:	62 ed       	ldi	r22, 0xD2	; 210
   13e60:	74 e3       	ldi	r23, 0x34	; 52
   13e62:	c2 01       	movw	r24, r4
   13e64:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e68:	bc 01       	movw	r22, r24
   13e6a:	89 eb       	ldi	r24, 0xB9	; 185
   13e6c:	9d e0       	ldi	r25, 0x0D	; 13
   13e6e:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   13e72:	6e ec       	ldi	r22, 0xCE	; 206
   13e74:	74 e3       	ldi	r23, 0x34	; 52
   13e76:	c2 01       	movw	r24, r4
   13e78:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e7c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13e80:	81 30       	cpi	r24, 0x01	; 1
   13e82:	f9 f4       	brne	.+62     	; 0x13ec2 <_Z12Pub_Sub_DataPcPhjh+0x16a6>
   13e84:	91 30       	cpi	r25, 0x01	; 1
   13e86:	51 f4       	brne	.+20     	; 0x13e9c <_Z12Pub_Sub_DataPcPhjh+0x1680>
   13e88:	61 ec       	ldi	r22, 0xC1	; 193
   13e8a:	74 e3       	ldi	r23, 0x34	; 52
   13e8c:	86 ec       	ldi	r24, 0xC6	; 198
   13e8e:	94 e1       	ldi	r25, 0x14	; 20
   13e90:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   13e94:	86 ec       	ldi	r24, 0xC6	; 198
   13e96:	94 e1       	ldi	r25, 0x14	; 20
   13e98:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13e9c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   13ea0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   13ea4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   13ea8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   13eac:	a0 68       	ori	r26, 0x80	; 128
   13eae:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   13eb2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   13eb6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   13eba:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   13ebe:	88 e0       	ldi	r24, 0x08	; 8
   13ec0:	0d c0       	rjmp	.+26     	; 0x13edc <_Z12Pub_Sub_DataPcPhjh+0x16c0>
   13ec2:	91 30       	cpi	r25, 0x01	; 1
   13ec4:	51 f4       	brne	.+20     	; 0x13eda <_Z12Pub_Sub_DataPcPhjh+0x16be>
   13ec6:	63 eb       	ldi	r22, 0xB3	; 179
   13ec8:	74 e3       	ldi	r23, 0x34	; 52
   13eca:	86 ec       	ldi	r24, 0xC6	; 198
   13ecc:	94 e1       	ldi	r25, 0x14	; 20
   13ece:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   13ed2:	86 ec       	ldi	r24, 0xC6	; 198
   13ed4:	94 e1       	ldi	r25, 0x14	; 20
   13ed6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13eda:	89 e0       	ldi	r24, 0x09	; 9
   13edc:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   13ee0:	69 e6       	ldi	r22, 0x69	; 105
   13ee2:	74 e1       	ldi	r23, 0x14	; 20
   13ee4:	88 e1       	ldi	r24, 0x18	; 24
   13ee6:	95 e0       	ldi	r25, 0x05	; 5
   13ee8:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13eec:	69 eb       	ldi	r22, 0xB9	; 185
   13eee:	7d e0       	ldi	r23, 0x0D	; 13
   13ef0:	8a ed       	ldi	r24, 0xDA	; 218
   13ef2:	94 e0       	ldi	r25, 0x04	; 4
   13ef4:	0e 94 bf 86 	call	0x10d7e	; 0x10d7e <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13ef8:	64 ec       	ldi	r22, 0xC4	; 196
   13efa:	7d e0       	ldi	r23, 0x0D	; 13
   13efc:	87 ee       	ldi	r24, 0xE7	; 231
   13efe:	94 e0       	ldi	r25, 0x04	; 4
   13f00:	0e 94 bf 86 	call	0x10d7e	; 0x10d7e <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13f04:	b1 e0       	ldi	r27, 0x01	; 1
   13f06:	c0 55       	subi	r28, 0x50	; 80
   13f08:	d9 4f       	sbci	r29, 0xF9	; 249
   13f0a:	b8 83       	st	Y, r27
   13f0c:	c0 5b       	subi	r28, 0xB0	; 176
   13f0e:	d6 40       	sbci	r29, 0x06	; 6
   13f10:	88 e2       	ldi	r24, 0x28	; 40
   13f12:	f8 01       	movw	r30, r16
   13f14:	11 92       	st	Z+, r1
   13f16:	8a 95       	dec	r24
   13f18:	e9 f7       	brne	.-6      	; 0x13f14 <_Z12Pub_Sub_DataPcPhjh+0x16f8>
   13f1a:	8e ec       	ldi	r24, 0xCE	; 206
   13f1c:	93 e1       	ldi	r25, 0x13	; 19
   13f1e:	9f 93       	push	r25
   13f20:	8f 93       	push	r24
   13f22:	82 e3       	ldi	r24, 0x32	; 50
   13f24:	96 e0       	ldi	r25, 0x06	; 6
   13f26:	9f 93       	push	r25
   13f28:	8f 93       	push	r24
   13f2a:	1f 93       	push	r17
   13f2c:	0f 93       	push	r16
   13f2e:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   13f32:	ca 54       	subi	r28, 0x4A	; 74
   13f34:	d9 4f       	sbci	r29, 0xF9	; 249
   13f36:	68 81       	ld	r22, Y
   13f38:	79 81       	ldd	r23, Y+1	; 0x01
   13f3a:	c6 5b       	subi	r28, 0xB6	; 182
   13f3c:	d6 40       	sbci	r29, 0x06	; 6
   13f3e:	c8 01       	movw	r24, r16
   13f40:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   13f44:	0f 90       	pop	r0
   13f46:	0f 90       	pop	r0
   13f48:	0f 90       	pop	r0
   13f4a:	0f 90       	pop	r0
   13f4c:	0f 90       	pop	r0
   13f4e:	0f 90       	pop	r0
   13f50:	89 2b       	or	r24, r25
   13f52:	09 f0       	breq	.+2      	; 0x13f56 <_Z12Pub_Sub_DataPcPhjh+0x173a>
   13f54:	53 c1       	rjmp	.+678    	; 0x141fc <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   13f56:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   13f5a:	86 34       	cpi	r24, 0x46	; 70
   13f5c:	10 f4       	brcc	.+4      	; 0x13f62 <_Z12Pub_Sub_DataPcPhjh+0x1746>
   13f5e:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   13f62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13f66:	81 30       	cpi	r24, 0x01	; 1
   13f68:	51 f4       	brne	.+20     	; 0x13f7e <_Z12Pub_Sub_DataPcPhjh+0x1762>
   13f6a:	61 e9       	ldi	r22, 0x91	; 145
   13f6c:	74 e3       	ldi	r23, 0x34	; 52
   13f6e:	86 ec       	ldi	r24, 0xC6	; 198
   13f70:	94 e1       	ldi	r25, 0x14	; 20
   13f72:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   13f76:	86 ec       	ldi	r24, 0xC6	; 198
   13f78:	94 e1       	ldi	r25, 0x14	; 20
   13f7a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   13f7e:	6d e8       	ldi	r22, 0x8D	; 141
   13f80:	74 e3       	ldi	r23, 0x34	; 52
   13f82:	c2 01       	movw	r24, r4
   13f84:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13f88:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
   13f8c:	81 e0       	ldi	r24, 0x01	; 1
   13f8e:	80 93 99 0b 	sts	0x0B99, r24	; 0x800b99 <_sSchedules+0x27b>
   13f92:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   13f96:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <_sSchedules+0x276>
   13f9a:	10 92 e7 0b 	sts	0x0BE7, r1	; 0x800be7 <_sSchedules+0x2c9>
   13f9e:	68 e8       	ldi	r22, 0x88	; 136
   13fa0:	74 e3       	ldi	r23, 0x34	; 52
   13fa2:	c2 01       	movw	r24, r4
   13fa4:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13fa8:	60 e0       	ldi	r22, 0x00	; 0
   13faa:	70 e0       	ldi	r23, 0x00	; 0
   13fac:	0e 94 dc 89 	call	0x113b8	; 0x113b8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13fb0:	60 93 95 0b 	sts	0x0B95, r22	; 0x800b95 <_sSchedules+0x277>
   13fb4:	70 93 96 0b 	sts	0x0B96, r23	; 0x800b96 <_sSchedules+0x278>
   13fb8:	80 93 97 0b 	sts	0x0B97, r24	; 0x800b97 <_sSchedules+0x279>
   13fbc:	90 93 98 0b 	sts	0x0B98, r25	; 0x800b98 <_sSchedules+0x27a>
   13fc0:	60 91 95 0b 	lds	r22, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13fc4:	70 91 96 0b 	lds	r23, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13fc8:	80 91 97 0b 	lds	r24, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13fcc:	90 91 98 0b 	lds	r25, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13fd0:	20 91 95 0b 	lds	r18, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13fd4:	30 91 96 0b 	lds	r19, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13fd8:	40 91 97 0b 	lds	r20, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13fdc:	50 91 98 0b 	lds	r21, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13fe0:	c0 55       	subi	r28, 0x50	; 80
   13fe2:	d9 4f       	sbci	r29, 0xF9	; 249
   13fe4:	28 83       	st	Y, r18
   13fe6:	39 83       	std	Y+1, r19	; 0x01
   13fe8:	4a 83       	std	Y+2, r20	; 0x02
   13fea:	5b 83       	std	Y+3, r21	; 0x03
   13fec:	c0 5b       	subi	r28, 0xB0	; 176
   13fee:	d6 40       	sbci	r29, 0x06	; 6
   13ff0:	e4 e6       	ldi	r30, 0x64	; 100
   13ff2:	ce 2e       	mov	r12, r30
   13ff4:	d1 2c       	mov	r13, r1
   13ff6:	e1 2c       	mov	r14, r1
   13ff8:	f1 2c       	mov	r15, r1
   13ffa:	a7 01       	movw	r20, r14
   13ffc:	96 01       	movw	r18, r12
   13ffe:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   14002:	a0 e1       	ldi	r26, 0x10	; 16
   14004:	be e0       	ldi	r27, 0x0E	; 14
   14006:	0e 94 0d ec 	call	0x1d81a	; 0x1d81a <__muluhisi3>
   1400a:	4b 01       	movw	r8, r22
   1400c:	5c 01       	movw	r10, r24
   1400e:	c0 55       	subi	r28, 0x50	; 80
   14010:	d9 4f       	sbci	r29, 0xF9	; 249
   14012:	68 81       	ld	r22, Y
   14014:	79 81       	ldd	r23, Y+1	; 0x01
   14016:	8a 81       	ldd	r24, Y+2	; 0x02
   14018:	9b 81       	ldd	r25, Y+3	; 0x03
   1401a:	c0 5b       	subi	r28, 0xB0	; 176
   1401c:	d6 40       	sbci	r29, 0x06	; 6
   1401e:	a7 01       	movw	r20, r14
   14020:	96 01       	movw	r18, r12
   14022:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   14026:	9b 01       	movw	r18, r22
   14028:	ac 01       	movw	r20, r24
   1402a:	ac e3       	ldi	r26, 0x3C	; 60
   1402c:	b0 e0       	ldi	r27, 0x00	; 0
   1402e:	0e 94 0d ec 	call	0x1d81a	; 0x1d81a <__muluhisi3>
   14032:	86 0e       	add	r8, r22
   14034:	97 1e       	adc	r9, r23
   14036:	a8 1e       	adc	r10, r24
   14038:	b9 1e       	adc	r11, r25
   1403a:	80 92 95 0b 	sts	0x0B95, r8	; 0x800b95 <_sSchedules+0x277>
   1403e:	90 92 96 0b 	sts	0x0B96, r9	; 0x800b96 <_sSchedules+0x278>
   14042:	a0 92 97 0b 	sts	0x0B97, r10	; 0x800b97 <_sSchedules+0x279>
   14046:	b0 92 98 0b 	sts	0x0B98, r11	; 0x800b98 <_sSchedules+0x27a>
   1404a:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   1404e:	80 93 f1 0b 	sts	0x0BF1, r24	; 0x800bf1 <_sSchedules+0x2d3>
   14052:	62 e8       	ldi	r22, 0x82	; 130
   14054:	74 e3       	ldi	r23, 0x34	; 52
   14056:	c2 01       	movw	r24, r4
   14058:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1405c:	60 e0       	ldi	r22, 0x00	; 0
   1405e:	70 e0       	ldi	r23, 0x00	; 0
   14060:	0e 94 d9 8e 	call	0x11db2	; 0x11db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14064:	80 93 f3 0b 	sts	0x0BF3, r24	; 0x800bf3 <_sSchedules+0x2d5>
   14068:	e1 2c       	mov	r14, r1
   1406a:	f1 2c       	mov	r15, r1
   1406c:	67 01       	movw	r12, r14
   1406e:	4f ef       	ldi	r20, 0xFF	; 255
   14070:	c4 1a       	sub	r12, r20
   14072:	d4 0a       	sbc	r13, r20
   14074:	6c e7       	ldi	r22, 0x7C	; 124
   14076:	74 e3       	ldi	r23, 0x34	; 52
   14078:	c2 01       	movw	r24, r4
   1407a:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1407e:	b6 01       	movw	r22, r12
   14080:	0e 94 d9 8e 	call	0x11db2	; 0x11db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14084:	d7 01       	movw	r26, r14
   14086:	a9 53       	subi	r26, 0x39	; 57
   14088:	b4 4f       	sbci	r27, 0xF4	; 244
   1408a:	7d 01       	movw	r14, r26
   1408c:	8c 93       	st	X, r24
   1408e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14092:	81 30       	cpi	r24, 0x01	; 1
   14094:	89 f0       	breq	.+34     	; 0x140b8 <_Z12Pub_Sub_DataPcPhjh+0x189c>
   14096:	76 01       	movw	r14, r12
   14098:	3d e0       	ldi	r19, 0x0D	; 13
   1409a:	c3 16       	cp	r12, r19
   1409c:	d1 04       	cpc	r13, r1
   1409e:	31 f7       	brne	.-52     	; 0x1406c <_Z12Pub_Sub_DataPcPhjh+0x1850>
   140a0:	e1 2c       	mov	r14, r1
   140a2:	f1 2c       	mov	r15, r1
   140a4:	54 e6       	ldi	r21, 0x64	; 100
   140a6:	a5 2e       	mov	r10, r21
   140a8:	b1 2c       	mov	r11, r1
   140aa:	60 e1       	ldi	r22, 0x10	; 16
   140ac:	86 2e       	mov	r8, r22
   140ae:	6e e0       	ldi	r22, 0x0E	; 14
   140b0:	96 2e       	mov	r9, r22
   140b2:	7c e3       	ldi	r23, 0x3C	; 60
   140b4:	77 2e       	mov	r7, r23
   140b6:	13 c0       	rjmp	.+38     	; 0x140de <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   140b8:	62 e7       	ldi	r22, 0x72	; 114
   140ba:	74 e3       	ldi	r23, 0x34	; 52
   140bc:	86 ec       	ldi	r24, 0xC6	; 198
   140be:	94 e1       	ldi	r25, 0x14	; 20
   140c0:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   140c4:	f7 01       	movw	r30, r14
   140c6:	60 81       	ld	r22, Z
   140c8:	4a e0       	ldi	r20, 0x0A	; 10
   140ca:	50 e0       	ldi	r21, 0x00	; 0
   140cc:	86 ec       	ldi	r24, 0xC6	; 198
   140ce:	94 e1       	ldi	r25, 0x14	; 20
   140d0:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   140d4:	86 ec       	ldi	r24, 0xC6	; 198
   140d6:	94 e1       	ldi	r25, 0x14	; 20
   140d8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   140dc:	dc cf       	rjmp	.-72     	; 0x14096 <_Z12Pub_Sub_DataPcPhjh+0x187a>
   140de:	67 01       	movw	r12, r14
   140e0:	2f ef       	ldi	r18, 0xFF	; 255
   140e2:	c2 1a       	sub	r12, r18
   140e4:	d2 0a       	sbc	r13, r18
   140e6:	6d e6       	ldi	r22, 0x6D	; 109
   140e8:	74 e3       	ldi	r23, 0x34	; 52
   140ea:	c2 01       	movw	r24, r4
   140ec:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   140f0:	b6 01       	movw	r22, r12
   140f2:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   140f6:	97 01       	movw	r18, r14
   140f8:	22 0f       	add	r18, r18
   140fa:	33 1f       	adc	r19, r19
   140fc:	a9 01       	movw	r20, r18
   140fe:	46 56       	subi	r20, 0x66	; 102
   14100:	54 4f       	sbci	r21, 0xF4	; 244
   14102:	7a 01       	movw	r14, r20
   14104:	da 01       	movw	r26, r20
   14106:	11 96       	adiw	r26, 0x01	; 1
   14108:	9c 93       	st	X, r25
   1410a:	8e 93       	st	-X, r24
   1410c:	8d 91       	ld	r24, X+
   1410e:	9c 91       	ld	r25, X
   14110:	11 97       	sbiw	r26, 0x01	; 1
   14112:	2d 91       	ld	r18, X+
   14114:	3c 91       	ld	r19, X
   14116:	b5 01       	movw	r22, r10
   14118:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   1411c:	68 9d       	mul	r22, r8
   1411e:	f0 01       	movw	r30, r0
   14120:	69 9d       	mul	r22, r9
   14122:	f0 0d       	add	r31, r0
   14124:	78 9d       	mul	r23, r8
   14126:	f0 0d       	add	r31, r0
   14128:	11 24       	eor	r1, r1
   1412a:	c9 01       	movw	r24, r18
   1412c:	b5 01       	movw	r22, r10
   1412e:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   14132:	78 9e       	mul	r7, r24
   14134:	90 01       	movw	r18, r0
   14136:	79 9e       	mul	r7, r25
   14138:	30 0d       	add	r19, r0
   1413a:	11 24       	eor	r1, r1
   1413c:	cf 01       	movw	r24, r30
   1413e:	82 0f       	add	r24, r18
   14140:	93 1f       	adc	r25, r19
   14142:	f7 01       	movw	r30, r14
   14144:	91 83       	std	Z+1, r25	; 0x01
   14146:	80 83       	st	Z, r24
   14148:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1414c:	81 30       	cpi	r24, 0x01	; 1
   1414e:	41 f0       	breq	.+16     	; 0x14160 <_Z12Pub_Sub_DataPcPhjh+0x1944>
   14150:	76 01       	movw	r14, r12
   14152:	fd e0       	ldi	r31, 0x0D	; 13
   14154:	cf 16       	cp	r12, r31
   14156:	d1 04       	cpc	r13, r1
   14158:	11 f6       	brne	.-124    	; 0x140de <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   1415a:	e1 2c       	mov	r14, r1
   1415c:	f1 2c       	mov	r15, r1
   1415e:	14 c0       	rjmp	.+40     	; 0x14188 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   14160:	6b e5       	ldi	r22, 0x5B	; 91
   14162:	74 e3       	ldi	r23, 0x34	; 52
   14164:	86 ec       	ldi	r24, 0xC6	; 198
   14166:	94 e1       	ldi	r25, 0x14	; 20
   14168:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1416c:	d7 01       	movw	r26, r14
   1416e:	6d 91       	ld	r22, X+
   14170:	7c 91       	ld	r23, X
   14172:	4a e0       	ldi	r20, 0x0A	; 10
   14174:	50 e0       	ldi	r21, 0x00	; 0
   14176:	86 ec       	ldi	r24, 0xC6	; 198
   14178:	94 e1       	ldi	r25, 0x14	; 20
   1417a:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   1417e:	86 ec       	ldi	r24, 0xC6	; 198
   14180:	94 e1       	ldi	r25, 0x14	; 20
   14182:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14186:	e4 cf       	rjmp	.-56     	; 0x14150 <_Z12Pub_Sub_DataPcPhjh+0x1934>
   14188:	67 01       	movw	r12, r14
   1418a:	ef ef       	ldi	r30, 0xFF	; 255
   1418c:	ce 1a       	sub	r12, r30
   1418e:	de 0a       	sbc	r13, r30
   14190:	64 e5       	ldi	r22, 0x54	; 84
   14192:	74 e3       	ldi	r23, 0x34	; 52
   14194:	c2 01       	movw	r24, r4
   14196:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1419a:	b6 01       	movw	r22, r12
   1419c:	0e 94 d9 8e 	call	0x11db2	; 0x11db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   141a0:	97 01       	movw	r18, r14
   141a2:	28 54       	subi	r18, 0x48	; 72
   141a4:	34 4f       	sbci	r19, 0xF4	; 244
   141a6:	79 01       	movw	r14, r18
   141a8:	d9 01       	movw	r26, r18
   141aa:	8c 93       	st	X, r24
   141ac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   141b0:	81 30       	cpi	r24, 0x01	; 1
   141b2:	89 f0       	breq	.+34     	; 0x141d6 <_Z12Pub_Sub_DataPcPhjh+0x19ba>
   141b4:	76 01       	movw	r14, r12
   141b6:	bd e0       	ldi	r27, 0x0D	; 13
   141b8:	cb 16       	cp	r12, r27
   141ba:	d1 04       	cpc	r13, r1
   141bc:	29 f7       	brne	.-54     	; 0x14188 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   141be:	81 e0       	ldi	r24, 0x01	; 1
   141c0:	80 93 e6 0c 	sts	0x0CE6, r24	; 0x800ce6 <plot_schedule_topic>
   141c4:	10 92 e7 0c 	sts	0x0CE7, r1	; 0x800ce7 <_gTank_Topic_check>
   141c8:	f1 e0       	ldi	r31, 0x01	; 1
   141ca:	c0 55       	subi	r28, 0x50	; 80
   141cc:	d9 4f       	sbci	r29, 0xF9	; 249
   141ce:	f8 83       	st	Y, r31
   141d0:	c0 5b       	subi	r28, 0xB0	; 176
   141d2:	d6 40       	sbci	r29, 0x06	; 6
   141d4:	13 c0       	rjmp	.+38     	; 0x141fc <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   141d6:	69 e4       	ldi	r22, 0x49	; 73
   141d8:	74 e3       	ldi	r23, 0x34	; 52
   141da:	86 ec       	ldi	r24, 0xC6	; 198
   141dc:	94 e1       	ldi	r25, 0x14	; 20
   141de:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   141e2:	f7 01       	movw	r30, r14
   141e4:	60 81       	ld	r22, Z
   141e6:	4a e0       	ldi	r20, 0x0A	; 10
   141e8:	50 e0       	ldi	r21, 0x00	; 0
   141ea:	86 ec       	ldi	r24, 0xC6	; 198
   141ec:	94 e1       	ldi	r25, 0x14	; 20
   141ee:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   141f2:	86 ec       	ldi	r24, 0xC6	; 198
   141f4:	94 e1       	ldi	r25, 0x14	; 20
   141f6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   141fa:	dc cf       	rjmp	.-72     	; 0x141b4 <_Z12Pub_Sub_DataPcPhjh+0x1998>
   141fc:	88 e2       	ldi	r24, 0x28	; 40
   141fe:	d8 01       	movw	r26, r16
   14200:	1d 92       	st	X+, r1
   14202:	8a 95       	dec	r24
   14204:	e9 f7       	brne	.-6      	; 0x14200 <_Z12Pub_Sub_DataPcPhjh+0x19e4>
   14206:	8e ec       	ldi	r24, 0xCE	; 206
   14208:	93 e1       	ldi	r25, 0x13	; 19
   1420a:	9f 93       	push	r25
   1420c:	8f 93       	push	r24
   1420e:	84 e5       	ldi	r24, 0x54	; 84
   14210:	96 e0       	ldi	r25, 0x06	; 6
   14212:	9f 93       	push	r25
   14214:	8f 93       	push	r24
   14216:	1f 93       	push	r17
   14218:	0f 93       	push	r16
   1421a:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   1421e:	ca 54       	subi	r28, 0x4A	; 74
   14220:	d9 4f       	sbci	r29, 0xF9	; 249
   14222:	68 81       	ld	r22, Y
   14224:	79 81       	ldd	r23, Y+1	; 0x01
   14226:	c6 5b       	subi	r28, 0xB6	; 182
   14228:	d6 40       	sbci	r29, 0x06	; 6
   1422a:	c8 01       	movw	r24, r16
   1422c:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   14230:	0f 90       	pop	r0
   14232:	0f 90       	pop	r0
   14234:	0f 90       	pop	r0
   14236:	0f 90       	pop	r0
   14238:	0f 90       	pop	r0
   1423a:	0f 90       	pop	r0
   1423c:	89 2b       	or	r24, r25
   1423e:	09 f0       	breq	.+2      	; 0x14242 <_Z12Pub_Sub_DataPcPhjh+0x1a26>
   14240:	cc c2       	rjmp	.+1432   	; 0x147da <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   14242:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   14246:	86 34       	cpi	r24, 0x46	; 70
   14248:	10 f4       	brcc	.+4      	; 0x1424e <_Z12Pub_Sub_DataPcPhjh+0x1a32>
   1424a:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   1424e:	80 91 e6 0c 	lds	r24, 0x0CE6	; 0x800ce6 <plot_schedule_topic>
   14252:	88 23       	and	r24, r24
   14254:	11 f4       	brne	.+4      	; 0x1425a <_Z12Pub_Sub_DataPcPhjh+0x1a3e>
   14256:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   1425a:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
   1425e:	83 33       	cpi	r24, 0x33	; 51
   14260:	10 f0       	brcs	.+4      	; 0x14266 <_Z12Pub_Sub_DataPcPhjh+0x1a4a>
   14262:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   14266:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   1426a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1426e:	81 30       	cpi	r24, 0x01	; 1
   14270:	51 f4       	brne	.+20     	; 0x14286 <_Z12Pub_Sub_DataPcPhjh+0x1a6a>
   14272:	6b e2       	ldi	r22, 0x2B	; 43
   14274:	74 e3       	ldi	r23, 0x34	; 52
   14276:	86 ec       	ldi	r24, 0xC6	; 198
   14278:	94 e1       	ldi	r25, 0x14	; 20
   1427a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1427e:	86 ec       	ldi	r24, 0xC6	; 198
   14280:	94 e1       	ldi	r25, 0x14	; 20
   14282:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14286:	81 e0       	ldi	r24, 0x01	; 1
   14288:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_sSchedules+0x1>
   1428c:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
   14290:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_sSchedules>
   14294:	e1 2c       	mov	r14, r1
   14296:	f1 2c       	mov	r15, r1
   14298:	66 e2       	ldi	r22, 0x26	; 38
   1429a:	74 e3       	ldi	r23, 0x34	; 52
   1429c:	c2 01       	movw	r24, r4
   1429e:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   142a2:	b7 01       	movw	r22, r14
   142a4:	6d 5f       	subi	r22, 0xFD	; 253
   142a6:	7f 4f       	sbci	r23, 0xFF	; 255
   142a8:	0e 94 d9 8e 	call	0x11db2	; 0x11db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   142ac:	f7 01       	movw	r30, r14
   142ae:	e1 59       	subi	r30, 0x91	; 145
   142b0:	f5 4f       	sbci	r31, 0xF5	; 245
   142b2:	80 83       	st	Z, r24
   142b4:	bf ef       	ldi	r27, 0xFF	; 255
   142b6:	eb 1a       	sub	r14, r27
   142b8:	fb 0a       	sbc	r15, r27
   142ba:	e7 e2       	ldi	r30, 0x27	; 39
   142bc:	ee 16       	cp	r14, r30
   142be:	f1 04       	cpc	r15, r1
   142c0:	59 f7       	brne	.-42     	; 0x14298 <_Z12Pub_Sub_DataPcPhjh+0x1a7c>
   142c2:	e1 2c       	mov	r14, r1
   142c4:	f1 2c       	mov	r15, r1
   142c6:	61 e2       	ldi	r22, 0x21	; 33
   142c8:	74 e3       	ldi	r23, 0x34	; 52
   142ca:	c2 01       	movw	r24, r4
   142cc:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   142d0:	b7 01       	movw	r22, r14
   142d2:	6d 5f       	subi	r22, 0xFD	; 253
   142d4:	7f 4f       	sbci	r23, 0xFF	; 255
   142d6:	0e 94 d9 8e 	call	0x11db2	; 0x11db2 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   142da:	f7 01       	movw	r30, r14
   142dc:	e8 56       	subi	r30, 0x68	; 104
   142de:	f6 4f       	sbci	r31, 0xF6	; 246
   142e0:	80 83       	st	Z, r24
   142e2:	ff ef       	ldi	r31, 0xFF	; 255
   142e4:	ef 1a       	sub	r14, r31
   142e6:	ff 0a       	sbc	r15, r31
   142e8:	27 e2       	ldi	r18, 0x27	; 39
   142ea:	e2 16       	cp	r14, r18
   142ec:	f1 04       	cpc	r15, r1
   142ee:	59 f7       	brne	.-42     	; 0x142c6 <_Z12Pub_Sub_DataPcPhjh+0x1aaa>
   142f0:	e1 2c       	mov	r14, r1
   142f2:	f1 2c       	mov	r15, r1
   142f4:	b4 e6       	ldi	r27, 0x64	; 100
   142f6:	cb 2e       	mov	r12, r27
   142f8:	d1 2c       	mov	r13, r1
   142fa:	80 e1       	ldi	r24, 0x10	; 16
   142fc:	a8 2e       	mov	r10, r24
   142fe:	8e e0       	ldi	r24, 0x0E	; 14
   14300:	b8 2e       	mov	r11, r24
   14302:	9c e3       	ldi	r25, 0x3C	; 60
   14304:	79 2e       	mov	r7, r25
   14306:	6c e1       	ldi	r22, 0x1C	; 28
   14308:	74 e3       	ldi	r23, 0x34	; 52
   1430a:	c2 01       	movw	r24, r4
   1430c:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14310:	b7 01       	movw	r22, r14
   14312:	6d 5f       	subi	r22, 0xFD	; 253
   14314:	7f 4f       	sbci	r23, 0xFF	; 255
   14316:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1431a:	f7 01       	movw	r30, r14
   1431c:	ee 0f       	add	r30, r30
   1431e:	ff 1f       	adc	r31, r31
   14320:	ed 53       	subi	r30, 0x3D	; 61
   14322:	f6 4f       	sbci	r31, 0xF6	; 246
   14324:	91 83       	std	Z+1, r25	; 0x01
   14326:	80 83       	st	Z, r24
   14328:	80 81       	ld	r24, Z
   1432a:	91 81       	ldd	r25, Z+1	; 0x01
   1432c:	80 80       	ld	r8, Z
   1432e:	91 80       	ldd	r9, Z+1	; 0x01
   14330:	b6 01       	movw	r22, r12
   14332:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   14336:	6a 9d       	mul	r22, r10
   14338:	90 01       	movw	r18, r0
   1433a:	6b 9d       	mul	r22, r11
   1433c:	30 0d       	add	r19, r0
   1433e:	7a 9d       	mul	r23, r10
   14340:	30 0d       	add	r19, r0
   14342:	11 24       	eor	r1, r1
   14344:	c4 01       	movw	r24, r8
   14346:	b6 01       	movw	r22, r12
   14348:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   1434c:	78 9e       	mul	r7, r24
   1434e:	a0 01       	movw	r20, r0
   14350:	79 9e       	mul	r7, r25
   14352:	50 0d       	add	r21, r0
   14354:	11 24       	eor	r1, r1
   14356:	24 0f       	add	r18, r20
   14358:	35 1f       	adc	r19, r21
   1435a:	31 83       	std	Z+1, r19	; 0x01
   1435c:	20 83       	st	Z, r18
   1435e:	3f ef       	ldi	r19, 0xFF	; 255
   14360:	e3 1a       	sub	r14, r19
   14362:	f3 0a       	sbc	r15, r19
   14364:	47 e2       	ldi	r20, 0x27	; 39
   14366:	e4 16       	cp	r14, r20
   14368:	f1 04       	cpc	r15, r1
   1436a:	69 f6       	brne	.-102    	; 0x14306 <_Z12Pub_Sub_DataPcPhjh+0x1aea>
   1436c:	e1 2c       	mov	r14, r1
   1436e:	f1 2c       	mov	r15, r1
   14370:	64 e6       	ldi	r22, 0x64	; 100
   14372:	c6 2e       	mov	r12, r22
   14374:	d1 2c       	mov	r13, r1
   14376:	70 e1       	ldi	r23, 0x10	; 16
   14378:	a7 2e       	mov	r10, r23
   1437a:	7e e0       	ldi	r23, 0x0E	; 14
   1437c:	b7 2e       	mov	r11, r23
   1437e:	ec e3       	ldi	r30, 0x3C	; 60
   14380:	7e 2e       	mov	r7, r30
   14382:	67 e1       	ldi	r22, 0x17	; 23
   14384:	74 e3       	ldi	r23, 0x34	; 52
   14386:	c2 01       	movw	r24, r4
   14388:	0e 94 2a 8e 	call	0x11c54	; 0x11c54 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1438c:	b7 01       	movw	r22, r14
   1438e:	6d 5f       	subi	r22, 0xFD	; 253
   14390:	7f 4f       	sbci	r23, 0xFF	; 255
   14392:	0e 94 88 8e 	call	0x11d10	; 0x11d10 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14396:	f7 01       	movw	r30, r14
   14398:	ee 0f       	add	r30, r30
   1439a:	ff 1f       	adc	r31, r31
   1439c:	e7 5e       	subi	r30, 0xE7	; 231
   1439e:	f5 4f       	sbci	r31, 0xF5	; 245
   143a0:	91 83       	std	Z+1, r25	; 0x01
   143a2:	80 83       	st	Z, r24
   143a4:	80 81       	ld	r24, Z
   143a6:	91 81       	ldd	r25, Z+1	; 0x01
   143a8:	80 80       	ld	r8, Z
   143aa:	91 80       	ldd	r9, Z+1	; 0x01
   143ac:	b6 01       	movw	r22, r12
   143ae:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   143b2:	6a 9d       	mul	r22, r10
   143b4:	90 01       	movw	r18, r0
   143b6:	6b 9d       	mul	r22, r11
   143b8:	30 0d       	add	r19, r0
   143ba:	7a 9d       	mul	r23, r10
   143bc:	30 0d       	add	r19, r0
   143be:	11 24       	eor	r1, r1
   143c0:	c4 01       	movw	r24, r8
   143c2:	b6 01       	movw	r22, r12
   143c4:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   143c8:	78 9e       	mul	r7, r24
   143ca:	a0 01       	movw	r20, r0
   143cc:	79 9e       	mul	r7, r25
   143ce:	50 0d       	add	r21, r0
   143d0:	11 24       	eor	r1, r1
   143d2:	24 0f       	add	r18, r20
   143d4:	35 1f       	adc	r19, r21
   143d6:	31 83       	std	Z+1, r19	; 0x01
   143d8:	20 83       	st	Z, r18
   143da:	5f ef       	ldi	r21, 0xFF	; 255
   143dc:	e5 1a       	sub	r14, r21
   143de:	f5 0a       	sbc	r15, r21
   143e0:	87 e2       	ldi	r24, 0x27	; 39
   143e2:	e8 16       	cp	r14, r24
   143e4:	f1 04       	cpc	r15, r1
   143e6:	69 f6       	brne	.-102    	; 0x14382 <_Z12Pub_Sub_DataPcPhjh+0x1b66>
   143e8:	80 e0       	ldi	r24, 0x00	; 0
   143ea:	90 e0       	ldi	r25, 0x00	; 0
   143ec:	fc 01       	movw	r30, r24
   143ee:	e2 5e       	subi	r30, 0xE2	; 226
   143f0:	f6 4f       	sbci	r31, 0xF6	; 246
   143f2:	df 01       	movw	r26, r30
   143f4:	a6 56       	subi	r26, 0x66	; 102
   143f6:	bd 4f       	sbci	r27, 0xFD	; 253
   143f8:	2c 91       	ld	r18, X
   143fa:	25 af       	std	Z+61, r18	; 0x3d
   143fc:	01 96       	adiw	r24, 0x01	; 1
   143fe:	8e 30       	cpi	r24, 0x0E	; 14
   14400:	91 05       	cpc	r25, r1
   14402:	a1 f7       	brne	.-24     	; 0x143ec <_Z12Pub_Sub_DataPcPhjh+0x1bd0>
   14404:	80 e0       	ldi	r24, 0x00	; 0
   14406:	90 e0       	ldi	r25, 0x00	; 0
   14408:	fc 01       	movw	r30, r24
   1440a:	ee 0f       	add	r30, r30
   1440c:	ff 1f       	adc	r31, r31
   1440e:	e6 56       	subi	r30, 0x66	; 102
   14410:	f4 4f       	sbci	r31, 0xF4	; 244
   14412:	20 81       	ld	r18, Z
   14414:	31 81       	ldd	r19, Z+1	; 0x01
   14416:	fc 01       	movw	r30, r24
   14418:	ee 0f       	add	r30, r30
   1441a:	ff 1f       	adc	r31, r31
   1441c:	e2 5e       	subi	r30, 0xE2	; 226
   1441e:	f6 4f       	sbci	r31, 0xF6	; 246
   14420:	30 a3       	std	Z+32, r19	; 0x20
   14422:	27 8f       	std	Z+31, r18	; 0x1f
   14424:	01 96       	adiw	r24, 0x01	; 1
   14426:	8e 30       	cpi	r24, 0x0E	; 14
   14428:	91 05       	cpc	r25, r1
   1442a:	71 f7       	brne	.-36     	; 0x14408 <_Z12Pub_Sub_DataPcPhjh+0x1bec>
   1442c:	80 e0       	ldi	r24, 0x00	; 0
   1442e:	90 e0       	ldi	r25, 0x00	; 0
   14430:	9c 01       	movw	r18, r24
   14432:	22 5e       	subi	r18, 0xE2	; 226
   14434:	36 4f       	sbci	r19, 0xF6	; 246
   14436:	f9 01       	movw	r30, r18
   14438:	e7 55       	subi	r30, 0x57	; 87
   1443a:	fd 4f       	sbci	r31, 0xFD	; 253
   1443c:	40 81       	ld	r20, Z
   1443e:	ed 55       	subi	r30, 0x5D	; 93
   14440:	f2 40       	sbci	r31, 0x02	; 2
   14442:	40 83       	st	Z, r20
   14444:	01 96       	adiw	r24, 0x01	; 1
   14446:	8e 30       	cpi	r24, 0x0E	; 14
   14448:	91 05       	cpc	r25, r1
   1444a:	91 f7       	brne	.-28     	; 0x14430 <_Z12Pub_Sub_DataPcPhjh+0x1c14>
   1444c:	e1 2c       	mov	r14, r1
   1444e:	f1 2c       	mov	r15, r1
   14450:	40 e0       	ldi	r20, 0x00	; 0
   14452:	50 e0       	ldi	r21, 0x00	; 0
   14454:	91 2c       	mov	r9, r1
   14456:	fa 01       	movw	r30, r20
   14458:	e2 5e       	subi	r30, 0xE2	; 226
   1445a:	f6 4f       	sbci	r31, 0xF6	; 246
   1445c:	85 ad       	ldd	r24, Z+61	; 0x3d
   1445e:	81 30       	cpi	r24, 0x01	; 1
   14460:	09 f0       	breq	.+2      	; 0x14464 <_Z12Pub_Sub_DataPcPhjh+0x1c48>
   14462:	6c c0       	rjmp	.+216    	; 0x1453c <_Z12Pub_Sub_DataPcPhjh+0x1d20>
   14464:	89 2d       	mov	r24, r9
   14466:	90 e0       	ldi	r25, 0x00	; 0
   14468:	25 ad       	ldd	r18, Z+61	; 0x3d
   1446a:	bc 01       	movw	r22, r24
   1446c:	62 5e       	subi	r22, 0xE2	; 226
   1446e:	76 4f       	sbci	r23, 0xF6	; 246
   14470:	db 01       	movw	r26, r22
   14472:	dd 96       	adiw	r26, 0x3d	; 61
   14474:	2c 93       	st	X, r18
   14476:	9a 01       	movw	r18, r20
   14478:	22 0f       	add	r18, r18
   1447a:	33 1f       	adc	r19, r19
   1447c:	22 5e       	subi	r18, 0xE2	; 226
   1447e:	36 4f       	sbci	r19, 0xF6	; 246
   14480:	d9 01       	movw	r26, r18
   14482:	5f 96       	adiw	r26, 0x1f	; 31
   14484:	2d 91       	ld	r18, X+
   14486:	3c 91       	ld	r19, X
   14488:	90 97       	sbiw	r26, 0x20	; 32
   1448a:	88 0f       	add	r24, r24
   1448c:	99 1f       	adc	r25, r25
   1448e:	82 5e       	subi	r24, 0xE2	; 226
   14490:	96 4f       	sbci	r25, 0xF6	; 246
   14492:	dc 01       	movw	r26, r24
   14494:	90 96       	adiw	r26, 0x20	; 32
   14496:	3c 93       	st	X, r19
   14498:	2e 93       	st	-X, r18
   1449a:	5f 97       	sbiw	r26, 0x1f	; 31
   1449c:	e4 5b       	subi	r30, 0xB4	; 180
   1449e:	ff 4f       	sbci	r31, 0xFF	; 255
   144a0:	80 81       	ld	r24, Z
   144a2:	db 01       	movw	r26, r22
   144a4:	a4 5b       	subi	r26, 0xB4	; 180
   144a6:	bf 4f       	sbci	r27, 0xFF	; 255
   144a8:	8c 93       	st	X, r24
   144aa:	b3 e0       	ldi	r27, 0x03	; 3
   144ac:	9b 9e       	mul	r9, r27
   144ae:	50 01       	movw	r10, r0
   144b0:	11 24       	eor	r1, r1
   144b2:	60 e0       	ldi	r22, 0x00	; 0
   144b4:	70 e0       	ldi	r23, 0x00	; 0
   144b6:	35 01       	movw	r6, r10
   144b8:	66 0e       	add	r6, r22
   144ba:	77 1e       	adc	r7, r23
   144bc:	97 01       	movw	r18, r14
   144be:	26 0f       	add	r18, r22
   144c0:	37 1f       	adc	r19, r23
   144c2:	d9 01       	movw	r26, r18
   144c4:	a2 5e       	subi	r26, 0xE2	; 226
   144c6:	b6 4f       	sbci	r27, 0xF6	; 246
   144c8:	fd 01       	movw	r30, r26
   144ca:	ef 5a       	subi	r30, 0xAF	; 175
   144cc:	fe 4f       	sbci	r31, 0xFE	; 254
   144ce:	80 80       	ld	r8, Z
   144d0:	f3 01       	movw	r30, r6
   144d2:	e2 5e       	subi	r30, 0xE2	; 226
   144d4:	f6 4f       	sbci	r31, 0xF6	; 246
   144d6:	6f 01       	movw	r12, r30
   144d8:	ff ea       	ldi	r31, 0xAF	; 175
   144da:	cf 1a       	sub	r12, r31
   144dc:	fe ef       	ldi	r31, 0xFE	; 254
   144de:	df 0a       	sbc	r13, r31
   144e0:	f6 01       	movw	r30, r12
   144e2:	80 82       	st	Z, r8
   144e4:	a6 58       	subi	r26, 0x86	; 134
   144e6:	bf 4f       	sbci	r27, 0xFF	; 255
   144e8:	ac 91       	ld	r26, X
   144ea:	e7 5d       	subi	r30, 0xD7	; 215
   144ec:	f1 09       	sbc	r31, r1
   144ee:	a0 83       	st	Z, r26
   144f0:	22 0f       	add	r18, r18
   144f2:	33 1f       	adc	r19, r19
   144f4:	22 5e       	subi	r18, 0xE2	; 226
   144f6:	36 4f       	sbci	r19, 0xF6	; 246
   144f8:	f9 01       	movw	r30, r18
   144fa:	eb 55       	subi	r30, 0x5B	; 91
   144fc:	ff 4f       	sbci	r31, 0xFF	; 255
   144fe:	01 90       	ld	r0, Z+
   14500:	f0 81       	ld	r31, Z
   14502:	e0 2d       	mov	r30, r0
   14504:	c3 01       	movw	r24, r6
   14506:	88 0f       	add	r24, r24
   14508:	99 1f       	adc	r25, r25
   1450a:	82 5e       	subi	r24, 0xE2	; 226
   1450c:	96 4f       	sbci	r25, 0xF6	; 246
   1450e:	dc 01       	movw	r26, r24
   14510:	ab 55       	subi	r26, 0x5B	; 91
   14512:	bf 4f       	sbci	r27, 0xFF	; 255
   14514:	11 96       	adiw	r26, 0x01	; 1
   14516:	fc 93       	st	X, r31
   14518:	ee 93       	st	-X, r30
   1451a:	f9 01       	movw	r30, r18
   1451c:	e5 50       	subi	r30, 0x05	; 5
   1451e:	ff 4f       	sbci	r31, 0xFF	; 255
   14520:	20 81       	ld	r18, Z
   14522:	31 81       	ldd	r19, Z+1	; 0x01
   14524:	fc 01       	movw	r30, r24
   14526:	e5 50       	subi	r30, 0x05	; 5
   14528:	ff 4f       	sbci	r31, 0xFF	; 255
   1452a:	31 83       	std	Z+1, r19	; 0x01
   1452c:	20 83       	st	Z, r18
   1452e:	6f 5f       	subi	r22, 0xFF	; 255
   14530:	7f 4f       	sbci	r23, 0xFF	; 255
   14532:	63 30       	cpi	r22, 0x03	; 3
   14534:	71 05       	cpc	r23, r1
   14536:	09 f0       	breq	.+2      	; 0x1453a <_Z12Pub_Sub_DataPcPhjh+0x1d1e>
   14538:	be cf       	rjmp	.-132    	; 0x144b6 <_Z12Pub_Sub_DataPcPhjh+0x1c9a>
   1453a:	93 94       	inc	r9
   1453c:	4f 5f       	subi	r20, 0xFF	; 255
   1453e:	5f 4f       	sbci	r21, 0xFF	; 255
   14540:	f3 e0       	ldi	r31, 0x03	; 3
   14542:	ef 0e       	add	r14, r31
   14544:	f1 1c       	adc	r15, r1
   14546:	4e 30       	cpi	r20, 0x0E	; 14
   14548:	51 05       	cpc	r21, r1
   1454a:	09 f0       	breq	.+2      	; 0x1454e <_Z12Pub_Sub_DataPcPhjh+0x1d32>
   1454c:	84 cf       	rjmp	.-248    	; 0x14456 <_Z12Pub_Sub_DataPcPhjh+0x1c3a>
   1454e:	2d e0       	ldi	r18, 0x0D	; 13
   14550:	29 15       	cp	r18, r9
   14552:	08 f0       	brcs	.+2      	; 0x14556 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   14554:	96 c2       	rjmp	.+1324   	; 0x14a82 <_Z12Pub_Sub_DataPcPhjh+0x2266>
   14556:	e1 2c       	mov	r14, r1
   14558:	f1 2c       	mov	r15, r1
   1455a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1455e:	81 30       	cpi	r24, 0x01	; 1
   14560:	a1 f4       	brne	.+40     	; 0x1458a <_Z12Pub_Sub_DataPcPhjh+0x1d6e>
   14562:	6c e0       	ldi	r22, 0x0C	; 12
   14564:	74 e3       	ldi	r23, 0x34	; 52
   14566:	86 ec       	ldi	r24, 0xC6	; 198
   14568:	94 e1       	ldi	r25, 0x14	; 20
   1456a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1456e:	f7 01       	movw	r30, r14
   14570:	e2 5e       	subi	r30, 0xE2	; 226
   14572:	f6 4f       	sbci	r31, 0xF6	; 246
   14574:	65 ad       	ldd	r22, Z+61	; 0x3d
   14576:	4a e0       	ldi	r20, 0x0A	; 10
   14578:	50 e0       	ldi	r21, 0x00	; 0
   1457a:	86 ec       	ldi	r24, 0xC6	; 198
   1457c:	94 e1       	ldi	r25, 0x14	; 20
   1457e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   14582:	86 ec       	ldi	r24, 0xC6	; 198
   14584:	94 e1       	ldi	r25, 0x14	; 20
   14586:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1458a:	4f ef       	ldi	r20, 0xFF	; 255
   1458c:	e4 1a       	sub	r14, r20
   1458e:	f4 0a       	sbc	r15, r20
   14590:	5e e0       	ldi	r21, 0x0E	; 14
   14592:	e5 16       	cp	r14, r21
   14594:	f1 04       	cpc	r15, r1
   14596:	09 f7       	brne	.-62     	; 0x1455a <_Z12Pub_Sub_DataPcPhjh+0x1d3e>
   14598:	e1 2c       	mov	r14, r1
   1459a:	f1 2c       	mov	r15, r1
   1459c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   145a0:	81 30       	cpi	r24, 0x01	; 1
   145a2:	b9 f4       	brne	.+46     	; 0x145d2 <_Z12Pub_Sub_DataPcPhjh+0x1db6>
   145a4:	6a ef       	ldi	r22, 0xFA	; 250
   145a6:	73 e3       	ldi	r23, 0x33	; 51
   145a8:	86 ec       	ldi	r24, 0xC6	; 198
   145aa:	94 e1       	ldi	r25, 0x14	; 20
   145ac:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   145b0:	f7 01       	movw	r30, r14
   145b2:	ee 0f       	add	r30, r30
   145b4:	ff 1f       	adc	r31, r31
   145b6:	e2 5e       	subi	r30, 0xE2	; 226
   145b8:	f6 4f       	sbci	r31, 0xF6	; 246
   145ba:	67 8d       	ldd	r22, Z+31	; 0x1f
   145bc:	70 a1       	ldd	r23, Z+32	; 0x20
   145be:	4a e0       	ldi	r20, 0x0A	; 10
   145c0:	50 e0       	ldi	r21, 0x00	; 0
   145c2:	86 ec       	ldi	r24, 0xC6	; 198
   145c4:	94 e1       	ldi	r25, 0x14	; 20
   145c6:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   145ca:	86 ec       	ldi	r24, 0xC6	; 198
   145cc:	94 e1       	ldi	r25, 0x14	; 20
   145ce:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   145d2:	8f ef       	ldi	r24, 0xFF	; 255
   145d4:	e8 1a       	sub	r14, r24
   145d6:	f8 0a       	sbc	r15, r24
   145d8:	9e e0       	ldi	r25, 0x0E	; 14
   145da:	e9 16       	cp	r14, r25
   145dc:	f1 04       	cpc	r15, r1
   145de:	f1 f6       	brne	.-68     	; 0x1459c <_Z12Pub_Sub_DataPcPhjh+0x1d80>
   145e0:	e1 2c       	mov	r14, r1
   145e2:	f1 2c       	mov	r15, r1
   145e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   145e8:	81 30       	cpi	r24, 0x01	; 1
   145ea:	a1 f4       	brne	.+40     	; 0x14614 <_Z12Pub_Sub_DataPcPhjh+0x1df8>
   145ec:	60 ef       	ldi	r22, 0xF0	; 240
   145ee:	73 e3       	ldi	r23, 0x33	; 51
   145f0:	86 ec       	ldi	r24, 0xC6	; 198
   145f2:	94 e1       	ldi	r25, 0x14	; 20
   145f4:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   145f8:	f7 01       	movw	r30, r14
   145fa:	e6 59       	subi	r30, 0x96	; 150
   145fc:	f6 4f       	sbci	r31, 0xF6	; 246
   145fe:	60 81       	ld	r22, Z
   14600:	4a e0       	ldi	r20, 0x0A	; 10
   14602:	50 e0       	ldi	r21, 0x00	; 0
   14604:	86 ec       	ldi	r24, 0xC6	; 198
   14606:	94 e1       	ldi	r25, 0x14	; 20
   14608:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1460c:	86 ec       	ldi	r24, 0xC6	; 198
   1460e:	94 e1       	ldi	r25, 0x14	; 20
   14610:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14614:	af ef       	ldi	r26, 0xFF	; 255
   14616:	ea 1a       	sub	r14, r26
   14618:	fa 0a       	sbc	r15, r26
   1461a:	be e0       	ldi	r27, 0x0E	; 14
   1461c:	eb 16       	cp	r14, r27
   1461e:	f1 04       	cpc	r15, r1
   14620:	09 f7       	brne	.-62     	; 0x145e4 <_Z12Pub_Sub_DataPcPhjh+0x1dc8>
   14622:	e1 2c       	mov	r14, r1
   14624:	f1 2c       	mov	r15, r1
   14626:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1462a:	81 30       	cpi	r24, 0x01	; 1
   1462c:	a1 f4       	brne	.+40     	; 0x14656 <_Z12Pub_Sub_DataPcPhjh+0x1e3a>
   1462e:	64 ee       	ldi	r22, 0xE4	; 228
   14630:	73 e3       	ldi	r23, 0x33	; 51
   14632:	86 ec       	ldi	r24, 0xC6	; 198
   14634:	94 e1       	ldi	r25, 0x14	; 20
   14636:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1463a:	f7 01       	movw	r30, r14
   1463c:	e1 59       	subi	r30, 0x91	; 145
   1463e:	f5 4f       	sbci	r31, 0xF5	; 245
   14640:	60 81       	ld	r22, Z
   14642:	4a e0       	ldi	r20, 0x0A	; 10
   14644:	50 e0       	ldi	r21, 0x00	; 0
   14646:	86 ec       	ldi	r24, 0xC6	; 198
   14648:	94 e1       	ldi	r25, 0x14	; 20
   1464a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1464e:	86 ec       	ldi	r24, 0xC6	; 198
   14650:	94 e1       	ldi	r25, 0x14	; 20
   14652:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14656:	ef ef       	ldi	r30, 0xFF	; 255
   14658:	ee 1a       	sub	r14, r30
   1465a:	fe 0a       	sbc	r15, r30
   1465c:	f7 e2       	ldi	r31, 0x27	; 39
   1465e:	ef 16       	cp	r14, r31
   14660:	f1 04       	cpc	r15, r1
   14662:	09 f7       	brne	.-62     	; 0x14626 <_Z12Pub_Sub_DataPcPhjh+0x1e0a>
   14664:	e1 2c       	mov	r14, r1
   14666:	f1 2c       	mov	r15, r1
   14668:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1466c:	81 30       	cpi	r24, 0x01	; 1
   1466e:	a1 f4       	brne	.+40     	; 0x14698 <_Z12Pub_Sub_DataPcPhjh+0x1e7c>
   14670:	6a ed       	ldi	r22, 0xDA	; 218
   14672:	73 e3       	ldi	r23, 0x33	; 51
   14674:	86 ec       	ldi	r24, 0xC6	; 198
   14676:	94 e1       	ldi	r25, 0x14	; 20
   14678:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1467c:	f7 01       	movw	r30, r14
   1467e:	e8 56       	subi	r30, 0x68	; 104
   14680:	f6 4f       	sbci	r31, 0xF6	; 246
   14682:	60 81       	ld	r22, Z
   14684:	4a e0       	ldi	r20, 0x0A	; 10
   14686:	50 e0       	ldi	r21, 0x00	; 0
   14688:	86 ec       	ldi	r24, 0xC6	; 198
   1468a:	94 e1       	ldi	r25, 0x14	; 20
   1468c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   14690:	86 ec       	ldi	r24, 0xC6	; 198
   14692:	94 e1       	ldi	r25, 0x14	; 20
   14694:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14698:	2f ef       	ldi	r18, 0xFF	; 255
   1469a:	e2 1a       	sub	r14, r18
   1469c:	f2 0a       	sbc	r15, r18
   1469e:	37 e2       	ldi	r19, 0x27	; 39
   146a0:	e3 16       	cp	r14, r19
   146a2:	f1 04       	cpc	r15, r1
   146a4:	09 f7       	brne	.-62     	; 0x14668 <_Z12Pub_Sub_DataPcPhjh+0x1e4c>
   146a6:	e1 2c       	mov	r14, r1
   146a8:	f1 2c       	mov	r15, r1
   146aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   146ae:	81 30       	cpi	r24, 0x01	; 1
   146b0:	b9 f4       	brne	.+46     	; 0x146e0 <_Z12Pub_Sub_DataPcPhjh+0x1ec4>
   146b2:	6a ec       	ldi	r22, 0xCA	; 202
   146b4:	73 e3       	ldi	r23, 0x33	; 51
   146b6:	86 ec       	ldi	r24, 0xC6	; 198
   146b8:	94 e1       	ldi	r25, 0x14	; 20
   146ba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   146be:	f7 01       	movw	r30, r14
   146c0:	ee 0f       	add	r30, r30
   146c2:	ff 1f       	adc	r31, r31
   146c4:	ed 53       	subi	r30, 0x3D	; 61
   146c6:	f6 4f       	sbci	r31, 0xF6	; 246
   146c8:	60 81       	ld	r22, Z
   146ca:	71 81       	ldd	r23, Z+1	; 0x01
   146cc:	4a e0       	ldi	r20, 0x0A	; 10
   146ce:	50 e0       	ldi	r21, 0x00	; 0
   146d0:	86 ec       	ldi	r24, 0xC6	; 198
   146d2:	94 e1       	ldi	r25, 0x14	; 20
   146d4:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   146d8:	86 ec       	ldi	r24, 0xC6	; 198
   146da:	94 e1       	ldi	r25, 0x14	; 20
   146dc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   146e0:	4f ef       	ldi	r20, 0xFF	; 255
   146e2:	e4 1a       	sub	r14, r20
   146e4:	f4 0a       	sbc	r15, r20
   146e6:	57 e2       	ldi	r21, 0x27	; 39
   146e8:	e5 16       	cp	r14, r21
   146ea:	f1 04       	cpc	r15, r1
   146ec:	f1 f6       	brne	.-68     	; 0x146aa <_Z12Pub_Sub_DataPcPhjh+0x1e8e>
   146ee:	e1 2c       	mov	r14, r1
   146f0:	f1 2c       	mov	r15, r1
   146f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   146f6:	81 30       	cpi	r24, 0x01	; 1
   146f8:	b9 f4       	brne	.+46     	; 0x14728 <_Z12Pub_Sub_DataPcPhjh+0x1f0c>
   146fa:	6a eb       	ldi	r22, 0xBA	; 186
   146fc:	73 e3       	ldi	r23, 0x33	; 51
   146fe:	86 ec       	ldi	r24, 0xC6	; 198
   14700:	94 e1       	ldi	r25, 0x14	; 20
   14702:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   14706:	f7 01       	movw	r30, r14
   14708:	ee 0f       	add	r30, r30
   1470a:	ff 1f       	adc	r31, r31
   1470c:	e7 5e       	subi	r30, 0xE7	; 231
   1470e:	f5 4f       	sbci	r31, 0xF5	; 245
   14710:	60 81       	ld	r22, Z
   14712:	71 81       	ldd	r23, Z+1	; 0x01
   14714:	4a e0       	ldi	r20, 0x0A	; 10
   14716:	50 e0       	ldi	r21, 0x00	; 0
   14718:	86 ec       	ldi	r24, 0xC6	; 198
   1471a:	94 e1       	ldi	r25, 0x14	; 20
   1471c:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   14720:	86 ec       	ldi	r24, 0xC6	; 198
   14722:	94 e1       	ldi	r25, 0x14	; 20
   14724:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14728:	8f ef       	ldi	r24, 0xFF	; 255
   1472a:	e8 1a       	sub	r14, r24
   1472c:	f8 0a       	sbc	r15, r24
   1472e:	97 e2       	ldi	r25, 0x27	; 39
   14730:	e9 16       	cp	r14, r25
   14732:	f1 04       	cpc	r15, r1
   14734:	f1 f6       	brne	.-68     	; 0x146f2 <_Z12Pub_Sub_DataPcPhjh+0x1ed6>
   14736:	80 91 99 0b 	lds	r24, 0x0B99	; 0x800b99 <_sSchedules+0x27b>
   1473a:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   1473e:	80 91 92 0b 	lds	r24, 0x0B92	; 0x800b92 <_sSchedules+0x274>
   14742:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <_sSchedules+0x1d>
   14746:	80 91 94 0b 	lds	r24, 0x0B94	; 0x800b94 <_sSchedules+0x276>
   1474a:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <_sSchedules+0x1c>
   1474e:	80 91 95 0b 	lds	r24, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   14752:	90 91 96 0b 	lds	r25, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   14756:	a0 91 97 0b 	lds	r26, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   1475a:	b0 91 98 0b 	lds	r27, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   1475e:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
   14762:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
   14766:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
   1476a:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
   1476e:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
   14772:	88 e6       	ldi	r24, 0x68	; 104
   14774:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   14778:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
   1477c:	80 93 d7 0b 	sts	0x0BD7, r24	; 0x800bd7 <_sSchedules+0x2b9>
   14780:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   14784:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   14788:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   1478c:	80 91 e7 0b 	lds	r24, 0x0BE7	; 0x800be7 <_sSchedules+0x2c9>
   14790:	80 93 e6 0b 	sts	0x0BE6, r24	; 0x800be6 <_sSchedules+0x2c8>
   14794:	80 91 f1 0b 	lds	r24, 0x0BF1	; 0x800bf1 <_sSchedules+0x2d3>
   14798:	80 93 f0 0b 	sts	0x0BF0, r24	; 0x800bf0 <_sSchedules+0x2d2>
   1479c:	80 91 f3 0b 	lds	r24, 0x0BF3	; 0x800bf3 <_sSchedules+0x2d5>
   147a0:	80 93 f2 0b 	sts	0x0BF2, r24	; 0x800bf2 <_sSchedules+0x2d4>
   147a4:	0e 94 49 87 	call	0x10e92	; 0x10e92 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   147a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   147ac:	81 30       	cpi	r24, 0x01	; 1
   147ae:	09 f0       	breq	.+2      	; 0x147b2 <_Z12Pub_Sub_DataPcPhjh+0x1f96>
   147b0:	72 c1       	rjmp	.+740    	; 0x14a96 <_Z12Pub_Sub_DataPcPhjh+0x227a>
   147b2:	69 ea       	ldi	r22, 0xA9	; 169
   147b4:	73 e3       	ldi	r23, 0x33	; 51
   147b6:	86 ec       	ldi	r24, 0xC6	; 198
   147b8:	94 e1       	ldi	r25, 0x14	; 20
   147ba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   147be:	60 91 f2 0b 	lds	r22, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
   147c2:	4a e0       	ldi	r20, 0x0A	; 10
   147c4:	50 e0       	ldi	r21, 0x00	; 0
   147c6:	86 ec       	ldi	r24, 0xC6	; 198
   147c8:	94 e1       	ldi	r25, 0x14	; 20
   147ca:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   147ce:	a1 e0       	ldi	r26, 0x01	; 1
   147d0:	c0 55       	subi	r28, 0x50	; 80
   147d2:	d9 4f       	sbci	r29, 0xF9	; 249
   147d4:	a8 83       	st	Y, r26
   147d6:	c0 5b       	subi	r28, 0xB0	; 176
   147d8:	d6 40       	sbci	r29, 0x06	; 6
   147da:	88 e2       	ldi	r24, 0x28	; 40
   147dc:	f8 01       	movw	r30, r16
   147de:	11 92       	st	Z+, r1
   147e0:	8a 95       	dec	r24
   147e2:	e9 f7       	brne	.-6      	; 0x147de <_Z12Pub_Sub_DataPcPhjh+0x1fc2>
   147e4:	8e ec       	ldi	r24, 0xCE	; 206
   147e6:	93 e1       	ldi	r25, 0x13	; 19
   147e8:	9f 93       	push	r25
   147ea:	8f 93       	push	r24
   147ec:	8f e1       	ldi	r24, 0x1F	; 31
   147ee:	96 e0       	ldi	r25, 0x06	; 6
   147f0:	9f 93       	push	r25
   147f2:	8f 93       	push	r24
   147f4:	1f 93       	push	r17
   147f6:	0f 93       	push	r16
   147f8:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   147fc:	ca 54       	subi	r28, 0x4A	; 74
   147fe:	d9 4f       	sbci	r29, 0xF9	; 249
   14800:	68 81       	ld	r22, Y
   14802:	79 81       	ldd	r23, Y+1	; 0x01
   14804:	c6 5b       	subi	r28, 0xB6	; 182
   14806:	d6 40       	sbci	r29, 0x06	; 6
   14808:	c8 01       	movw	r24, r16
   1480a:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   1480e:	0f 90       	pop	r0
   14810:	0f 90       	pop	r0
   14812:	0f 90       	pop	r0
   14814:	0f 90       	pop	r0
   14816:	0f 90       	pop	r0
   14818:	0f 90       	pop	r0
   1481a:	89 2b       	or	r24, r25
   1481c:	09 f0       	breq	.+2      	; 0x14820 <_Z12Pub_Sub_DataPcPhjh+0x2004>
   1481e:	4f c0       	rjmp	.+158    	; 0x148be <_Z12Pub_Sub_DataPcPhjh+0x20a2>
   14820:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   14824:	10 92 ad 14 	sts	0x14AD, r1	; 0x8014ad <_sRuble_Parameters+0xff>
   14828:	6d e9       	ldi	r22, 0x9D	; 157
   1482a:	73 e3       	ldi	r23, 0x33	; 51
   1482c:	c2 01       	movw	r24, r4
   1482e:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14832:	88 23       	and	r24, r24
   14834:	e9 f0       	breq	.+58     	; 0x14870 <_Z12Pub_Sub_DataPcPhjh+0x2054>
   14836:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1483a:	82 30       	cpi	r24, 0x02	; 2
   1483c:	09 f0       	breq	.+2      	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x2024>
   1483e:	3f c0       	rjmp	.+126    	; 0x148be <_Z12Pub_Sub_DataPcPhjh+0x20a2>
   14840:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14844:	81 30       	cpi	r24, 0x01	; 1
   14846:	51 f4       	brne	.+20     	; 0x1485c <_Z12Pub_Sub_DataPcPhjh+0x2040>
   14848:	6b e7       	ldi	r22, 0x7B	; 123
   1484a:	73 e3       	ldi	r23, 0x33	; 51
   1484c:	86 ec       	ldi	r24, 0xC6	; 198
   1484e:	94 e1       	ldi	r25, 0x14	; 20
   14850:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   14854:	86 ec       	ldi	r24, 0xC6	; 198
   14856:	94 e1       	ldi	r25, 0x14	; 20
   14858:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1485c:	81 e0       	ldi	r24, 0x01	; 1
   1485e:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   14862:	f1 e0       	ldi	r31, 0x01	; 1
   14864:	c0 55       	subi	r28, 0x50	; 80
   14866:	d9 4f       	sbci	r29, 0xF9	; 249
   14868:	f8 83       	st	Y, r31
   1486a:	c0 5b       	subi	r28, 0xB0	; 176
   1486c:	d6 40       	sbci	r29, 0x06	; 6
   1486e:	27 c0       	rjmp	.+78     	; 0x148be <_Z12Pub_Sub_DataPcPhjh+0x20a2>
   14870:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   14874:	82 30       	cpi	r24, 0x02	; 2
   14876:	90 f0       	brcs	.+36     	; 0x1489c <_Z12Pub_Sub_DataPcPhjh+0x2080>
   14878:	64 e6       	ldi	r22, 0x64	; 100
   1487a:	73 e3       	ldi	r23, 0x33	; 51
   1487c:	86 ec       	ldi	r24, 0xC6	; 198
   1487e:	94 e1       	ldi	r25, 0x14	; 20
   14880:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   14884:	81 e0       	ldi	r24, 0x01	; 1
   14886:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   1488a:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   1488e:	21 e0       	ldi	r18, 0x01	; 1
   14890:	c0 55       	subi	r28, 0x50	; 80
   14892:	d9 4f       	sbci	r29, 0xF9	; 249
   14894:	28 83       	st	Y, r18
   14896:	c0 5b       	subi	r28, 0xB0	; 176
   14898:	d6 40       	sbci	r29, 0x06	; 6
   1489a:	11 c0       	rjmp	.+34     	; 0x148be <_Z12Pub_Sub_DataPcPhjh+0x20a2>
   1489c:	82 e0       	ldi	r24, 0x02	; 2
   1489e:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   148a2:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   148a6:	69 e7       	ldi	r22, 0x79	; 121
   148a8:	74 e1       	ldi	r23, 0x14	; 20
   148aa:	81 ea       	ldi	r24, 0xA1	; 161
   148ac:	9c e0       	ldi	r25, 0x0C	; 12
   148ae:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   148b2:	31 e0       	ldi	r19, 0x01	; 1
   148b4:	c0 55       	subi	r28, 0x50	; 80
   148b6:	d9 4f       	sbci	r29, 0xF9	; 249
   148b8:	38 83       	st	Y, r19
   148ba:	c0 5b       	subi	r28, 0xB0	; 176
   148bc:	d6 40       	sbci	r29, 0x06	; 6
   148be:	88 e2       	ldi	r24, 0x28	; 40
   148c0:	d8 01       	movw	r26, r16
   148c2:	1d 92       	st	X+, r1
   148c4:	8a 95       	dec	r24
   148c6:	e9 f7       	brne	.-6      	; 0x148c2 <_Z12Pub_Sub_DataPcPhjh+0x20a6>
   148c8:	8e ec       	ldi	r24, 0xCE	; 206
   148ca:	93 e1       	ldi	r25, 0x13	; 19
   148cc:	9f 93       	push	r25
   148ce:	8f 93       	push	r24
   148d0:	84 e4       	ldi	r24, 0x44	; 68
   148d2:	96 e0       	ldi	r25, 0x06	; 6
   148d4:	9f 93       	push	r25
   148d6:	8f 93       	push	r24
   148d8:	1f 93       	push	r17
   148da:	0f 93       	push	r16
   148dc:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   148e0:	ca 54       	subi	r28, 0x4A	; 74
   148e2:	d9 4f       	sbci	r29, 0xF9	; 249
   148e4:	68 81       	ld	r22, Y
   148e6:	79 81       	ldd	r23, Y+1	; 0x01
   148e8:	c6 5b       	subi	r28, 0xB6	; 182
   148ea:	d6 40       	sbci	r29, 0x06	; 6
   148ec:	c8 01       	movw	r24, r16
   148ee:	0e 94 0f ee 	call	0x1dc1e	; 0x1dc1e <strcmp>
   148f2:	0f 90       	pop	r0
   148f4:	0f 90       	pop	r0
   148f6:	0f 90       	pop	r0
   148f8:	0f 90       	pop	r0
   148fa:	0f 90       	pop	r0
   148fc:	0f 90       	pop	r0
   148fe:	89 2b       	or	r24, r25
   14900:	09 f0       	breq	.+2      	; 0x14904 <_Z12Pub_Sub_DataPcPhjh+0x20e8>
   14902:	73 c0       	rjmp	.+230    	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   14904:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   14908:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1490c:	82 30       	cpi	r24, 0x02	; 2
   1490e:	09 f4       	brne	.+2      	; 0x14912 <_Z12Pub_Sub_DataPcPhjh+0x20f6>
   14910:	6c c0       	rjmp	.+216    	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   14912:	60 e6       	ldi	r22, 0x60	; 96
   14914:	73 e3       	ldi	r23, 0x33	; 51
   14916:	c2 01       	movw	r24, r4
   14918:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1491c:	18 2f       	mov	r17, r24
   1491e:	69 e5       	ldi	r22, 0x59	; 89
   14920:	73 e3       	ldi	r23, 0x33	; 51
   14922:	c2 01       	movw	r24, r4
   14924:	0e 94 eb 8e 	call	0x11dd6	; 0x11dd6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14928:	08 2f       	mov	r16, r24
   1492a:	17 36       	cpi	r17, 0x67	; 103
   1492c:	21 f0       	breq	.+8      	; 0x14936 <_Z12Pub_Sub_DataPcPhjh+0x211a>
   1492e:	1d 36       	cpi	r17, 0x6D	; 109
   14930:	11 f0       	breq	.+4      	; 0x14936 <_Z12Pub_Sub_DataPcPhjh+0x211a>
   14932:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   14936:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1493a:	81 30       	cpi	r24, 0x01	; 1
   1493c:	51 f4       	brne	.+20     	; 0x14952 <_Z12Pub_Sub_DataPcPhjh+0x2136>
   1493e:	68 e1       	ldi	r22, 0x18	; 24
   14940:	73 e3       	ldi	r23, 0x33	; 51
   14942:	86 ec       	ldi	r24, 0xC6	; 198
   14944:	94 e1       	ldi	r25, 0x14	; 20
   14946:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1494a:	86 ec       	ldi	r24, 0xC6	; 198
   1494c:	94 e1       	ldi	r25, 0x14	; 20
   1494e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14952:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   14956:	88 23       	and	r24, r24
   14958:	21 f0       	breq	.+8      	; 0x14962 <_Z12Pub_Sub_DataPcPhjh+0x2146>
   1495a:	1d 36       	cpi	r17, 0x6D	; 109
   1495c:	11 f4       	brne	.+4      	; 0x14962 <_Z12Pub_Sub_DataPcPhjh+0x2146>
   1495e:	0c 94 3c 95 	jmp	0x12a78	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   14962:	15 36       	cpi	r17, 0x65	; 101
   14964:	08 f4       	brcc	.+2      	; 0x14968 <_Z12Pub_Sub_DataPcPhjh+0x214c>
   14966:	41 c0       	rjmp	.+130    	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   14968:	81 2f       	mov	r24, r17
   1496a:	90 e0       	ldi	r25, 0x00	; 0
   1496c:	85 56       	subi	r24, 0x65	; 101
   1496e:	91 09       	sbc	r25, r1
   14970:	4b e1       	ldi	r20, 0x1B	; 27
   14972:	48 9f       	mul	r20, r24
   14974:	f0 01       	movw	r30, r0
   14976:	49 9f       	mul	r20, r25
   14978:	f0 0d       	add	r31, r0
   1497a:	11 24       	eor	r1, r1
   1497c:	e8 51       	subi	r30, 0x18	; 24
   1497e:	f2 4f       	sbci	r31, 0xF2	; 242
   14980:	81 81       	ldd	r24, Z+1	; 0x01
   14982:	88 23       	and	r24, r24
   14984:	91 f1       	breq	.+100    	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   14986:	9b e9       	ldi	r25, 0x9B	; 155
   14988:	91 0f       	add	r25, r17
   1498a:	29 2f       	mov	r18, r25
   1498c:	30 e0       	ldi	r19, 0x00	; 0
   1498e:	42 9f       	mul	r20, r18
   14990:	f0 01       	movw	r30, r0
   14992:	43 9f       	mul	r20, r19
   14994:	f0 0d       	add	r31, r0
   14996:	11 24       	eor	r1, r1
   14998:	e8 51       	subi	r30, 0x18	; 24
   1499a:	f2 4f       	sbci	r31, 0xF2	; 242
   1499c:	82 81       	ldd	r24, Z+2	; 0x02
   1499e:	84 30       	cpi	r24, 0x04	; 4
   149a0:	21 f1       	breq	.+72     	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   149a2:	94 30       	cpi	r25, 0x04	; 4
   149a4:	11 f1       	breq	.+68     	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   149a6:	43 81       	ldd	r20, Z+3	; 0x03
   149a8:	54 81       	ldd	r21, Z+4	; 0x04
   149aa:	45 2b       	or	r20, r21
   149ac:	f1 f4       	brne	.+60     	; 0x149ea <_Z12Pub_Sub_DataPcPhjh+0x21ce>
   149ae:	00 23       	and	r16, r16
   149b0:	31 f0       	breq	.+12     	; 0x149be <_Z12Pub_Sub_DataPcPhjh+0x21a2>
   149b2:	81 e0       	ldi	r24, 0x01	; 1
   149b4:	82 87       	std	Z+10, r24	; 0x0a
   149b6:	82 e0       	ldi	r24, 0x02	; 2
   149b8:	82 83       	std	Z+2, r24	; 0x02
   149ba:	83 87       	std	Z+11, r24	; 0x0b
   149bc:	11 c0       	rjmp	.+34     	; 0x149e0 <_Z12Pub_Sub_DataPcPhjh+0x21c4>
   149be:	82 30       	cpi	r24, 0x02	; 2
   149c0:	19 f4       	brne	.+6      	; 0x149c8 <_Z12Pub_Sub_DataPcPhjh+0x21ac>
   149c2:	93 e0       	ldi	r25, 0x03	; 3
   149c4:	92 83       	std	Z+2, r25	; 0x02
   149c6:	02 c0       	rjmp	.+4      	; 0x149cc <_Z12Pub_Sub_DataPcPhjh+0x21b0>
   149c8:	82 e0       	ldi	r24, 0x02	; 2
   149ca:	82 83       	std	Z+2, r24	; 0x02
   149cc:	83 87       	std	Z+11, r24	; 0x0b
   149ce:	8b e1       	ldi	r24, 0x1B	; 27
   149d0:	82 9f       	mul	r24, r18
   149d2:	f0 01       	movw	r30, r0
   149d4:	83 9f       	mul	r24, r19
   149d6:	f0 0d       	add	r31, r0
   149d8:	11 24       	eor	r1, r1
   149da:	e8 51       	subi	r30, 0x18	; 24
   149dc:	f2 4f       	sbci	r31, 0xF2	; 242
   149de:	12 86       	std	Z+10, r1	; 0x0a
   149e0:	8c e9       	ldi	r24, 0x9C	; 156
   149e2:	81 0f       	add	r24, r17
   149e4:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   149e8:	08 c0       	rjmp	.+16     	; 0x149fa <_Z12Pub_Sub_DataPcPhjh+0x21de>
   149ea:	c0 55       	subi	r28, 0x50	; 80
   149ec:	d9 4f       	sbci	r29, 0xF9	; 249
   149ee:	b8 81       	ld	r27, Y
   149f0:	c0 5b       	subi	r28, 0xB0	; 176
   149f2:	d6 40       	sbci	r29, 0x06	; 6
   149f4:	b1 30       	cpi	r27, 0x01	; 1
   149f6:	09 f0       	breq	.+2      	; 0x149fa <_Z12Pub_Sub_DataPcPhjh+0x21de>
   149f8:	55 c0       	rjmp	.+170    	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   149fa:	8e e6       	ldi	r24, 0x6E	; 110
   149fc:	e2 e6       	ldi	r30, 0x62	; 98
   149fe:	ff e0       	ldi	r31, 0x0F	; 15
   14a00:	df 01       	movw	r26, r30
   14a02:	1d 92       	st	X+, r1
   14a04:	8a 95       	dec	r24
   14a06:	e9 f7       	brne	.-6      	; 0x14a02 <_Z12Pub_Sub_DataPcPhjh+0x21e6>
   14a08:	62 e4       	ldi	r22, 0x42	; 66
   14a0a:	75 e0       	ldi	r23, 0x05	; 5
   14a0c:	cf 01       	movw	r24, r30
   14a0e:	0e 94 18 ee 	call	0x1dc30	; 0x1dc30 <strcpy>
   14a12:	88 e2       	ldi	r24, 0x28	; 40
   14a14:	c2 55       	subi	r28, 0x52	; 82
   14a16:	d9 4f       	sbci	r29, 0xF9	; 249
   14a18:	e8 81       	ld	r30, Y
   14a1a:	f9 81       	ldd	r31, Y+1	; 0x01
   14a1c:	ce 5a       	subi	r28, 0xAE	; 174
   14a1e:	d6 40       	sbci	r29, 0x06	; 6
   14a20:	11 92       	st	Z+, r1
   14a22:	8a 95       	dec	r24
   14a24:	e9 f7       	brne	.-6      	; 0x14a20 <_Z12Pub_Sub_DataPcPhjh+0x2204>
   14a26:	8e ec       	ldi	r24, 0xCE	; 206
   14a28:	93 e1       	ldi	r25, 0x13	; 19
   14a2a:	9f 93       	push	r25
   14a2c:	8f 93       	push	r24
   14a2e:	8a e1       	ldi	r24, 0x1A	; 26
   14a30:	97 e0       	ldi	r25, 0x07	; 7
   14a32:	9f 93       	push	r25
   14a34:	8f 93       	push	r24
   14a36:	c1 55       	subi	r28, 0x51	; 81
   14a38:	d9 4f       	sbci	r29, 0xF9	; 249
   14a3a:	f8 81       	ld	r31, Y
   14a3c:	cf 5a       	subi	r28, 0xAF	; 175
   14a3e:	d6 40       	sbci	r29, 0x06	; 6
   14a40:	ff 93       	push	r31
   14a42:	c2 55       	subi	r28, 0x52	; 82
   14a44:	d9 4f       	sbci	r29, 0xF9	; 249
   14a46:	28 81       	ld	r18, Y
   14a48:	ce 5a       	subi	r28, 0xAE	; 174
   14a4a:	d6 40       	sbci	r29, 0x06	; 6
   14a4c:	2f 93       	push	r18
   14a4e:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   14a52:	62 e6       	ldi	r22, 0x62	; 98
   14a54:	7f e0       	ldi	r23, 0x0F	; 15
   14a56:	ce 01       	movw	r24, r28
   14a58:	8b 5c       	subi	r24, 0xCB	; 203
   14a5a:	99 4f       	sbci	r25, 0xF9	; 249
   14a5c:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   14a60:	84 ed       	ldi	r24, 0xD4	; 212
   14a62:	93 e0       	ldi	r25, 0x03	; 3
   14a64:	e0 ed       	ldi	r30, 0xD0	; 208
   14a66:	ff e0       	ldi	r31, 0x0F	; 15
   14a68:	df 01       	movw	r26, r30
   14a6a:	9c 01       	movw	r18, r24
   14a6c:	1d 92       	st	X+, r1
   14a6e:	21 50       	subi	r18, 0x01	; 1
   14a70:	30 40       	sbci	r19, 0x00	; 0
   14a72:	e1 f7       	brne	.-8      	; 0x14a6c <_Z12Pub_Sub_DataPcPhjh+0x2250>
   14a74:	0f 90       	pop	r0
   14a76:	0f 90       	pop	r0
   14a78:	0f 90       	pop	r0
   14a7a:	0f 90       	pop	r0
   14a7c:	0f 90       	pop	r0
   14a7e:	0f 90       	pop	r0
   14a80:	11 c0       	rjmp	.+34     	; 0x14aa4 <_Z12Pub_Sub_DataPcPhjh+0x2288>
   14a82:	e9 2d       	mov	r30, r9
   14a84:	f0 e0       	ldi	r31, 0x00	; 0
   14a86:	e2 5e       	subi	r30, 0xE2	; 226
   14a88:	f6 4f       	sbci	r31, 0xF6	; 246
   14a8a:	15 ae       	std	Z+61, r1	; 0x3d
   14a8c:	93 94       	inc	r9
   14a8e:	3e e0       	ldi	r19, 0x0E	; 14
   14a90:	93 12       	cpse	r9, r19
   14a92:	f7 cf       	rjmp	.-18     	; 0x14a82 <_Z12Pub_Sub_DataPcPhjh+0x2266>
   14a94:	60 cd       	rjmp	.-1344   	; 0x14556 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   14a96:	b1 e0       	ldi	r27, 0x01	; 1
   14a98:	c0 55       	subi	r28, 0x50	; 80
   14a9a:	d9 4f       	sbci	r29, 0xF9	; 249
   14a9c:	b8 83       	st	Y, r27
   14a9e:	c0 5b       	subi	r28, 0xB0	; 176
   14aa0:	d6 40       	sbci	r29, 0x06	; 6
   14aa2:	9b ce       	rjmp	.-714    	; 0x147da <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   14aa4:	c2 54       	subi	r28, 0x42	; 66
   14aa6:	d9 4f       	sbci	r29, 0xF9	; 249
   14aa8:	0f b6       	in	r0, 0x3f	; 63
   14aaa:	f8 94       	cli
   14aac:	de bf       	out	0x3e, r29	; 62
   14aae:	0f be       	out	0x3f, r0	; 63
   14ab0:	cd bf       	out	0x3d, r28	; 61
   14ab2:	df 91       	pop	r29
   14ab4:	cf 91       	pop	r28
   14ab6:	1f 91       	pop	r17
   14ab8:	0f 91       	pop	r16
   14aba:	ff 90       	pop	r15
   14abc:	ef 90       	pop	r14
   14abe:	df 90       	pop	r13
   14ac0:	cf 90       	pop	r12
   14ac2:	bf 90       	pop	r11
   14ac4:	af 90       	pop	r10
   14ac6:	9f 90       	pop	r9
   14ac8:	8f 90       	pop	r8
   14aca:	7f 90       	pop	r7
   14acc:	6f 90       	pop	r6
   14ace:	5f 90       	pop	r5
   14ad0:	4f 90       	pop	r4
   14ad2:	3f 90       	pop	r3
   14ad4:	2f 90       	pop	r2
   14ad6:	08 95       	ret

00014ad8 <_Z12Publish_Datav>:
   14ad8:	6f 92       	push	r6
   14ada:	7f 92       	push	r7
   14adc:	8f 92       	push	r8
   14ade:	9f 92       	push	r9
   14ae0:	af 92       	push	r10
   14ae2:	bf 92       	push	r11
   14ae4:	cf 92       	push	r12
   14ae6:	df 92       	push	r13
   14ae8:	ef 92       	push	r14
   14aea:	ff 92       	push	r15
   14aec:	0f 93       	push	r16
   14aee:	1f 93       	push	r17
   14af0:	cf 93       	push	r28
   14af2:	df 93       	push	r29
   14af4:	cd b7       	in	r28, 0x3d	; 61
   14af6:	de b7       	in	r29, 0x3e	; 62
   14af8:	c4 5f       	subi	r28, 0xF4	; 244
   14afa:	d1 40       	sbci	r29, 0x01	; 1
   14afc:	0f b6       	in	r0, 0x3f	; 63
   14afe:	f8 94       	cli
   14b00:	de bf       	out	0x3e, r29	; 62
   14b02:	0f be       	out	0x3f, r0	; 63
   14b04:	cd bf       	out	0x3d, r28	; 61
   14b06:	82 e0       	ldi	r24, 0x02	; 2
   14b08:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b0c:	ce 01       	movw	r24, r28
   14b0e:	09 96       	adiw	r24, 0x09	; 9
   14b10:	9c 83       	std	Y+4, r25	; 0x04
   14b12:	8b 83       	std	Y+3, r24	; 0x03
   14b14:	8e e0       	ldi	r24, 0x0E	; 14
   14b16:	91 e0       	ldi	r25, 0x01	; 1
   14b18:	9e 83       	std	Y+6, r25	; 0x06
   14b1a:	8d 83       	std	Y+5, r24	; 0x05
   14b1c:	18 86       	std	Y+8, r1	; 0x08
   14b1e:	1f 82       	std	Y+7, r1	; 0x07
   14b20:	89 ed       	ldi	r24, 0xD9	; 217
   14b22:	97 e0       	ldi	r25, 0x07	; 7
   14b24:	9a 83       	std	Y+2, r25	; 0x02
   14b26:	89 83       	std	Y+1, r24	; 0x01
   14b28:	ce 01       	movw	r24, r28
   14b2a:	01 96       	adiw	r24, 0x01	; 1
   14b2c:	0e 94 92 86 	call	0x10d24	; 0x10d24 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   14b30:	8c 01       	movw	r16, r24
   14b32:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14b36:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14b3a:	81 ff       	sbrs	r24, 1
   14b3c:	69 c0       	rjmp	.+210    	; 0x14c10 <_Z12Publish_Datav+0x138>
   14b3e:	7e 01       	movw	r14, r28
   14b40:	29 ee       	ldi	r18, 0xE9	; 233
   14b42:	e2 1a       	sub	r14, r18
   14b44:	2e ef       	ldi	r18, 0xFE	; 254
   14b46:	f2 0a       	sbc	r15, r18
   14b48:	8c ed       	ldi	r24, 0xDC	; 220
   14b4a:	d7 01       	movw	r26, r14
   14b4c:	1d 92       	st	X+, r1
   14b4e:	8a 95       	dec	r24
   14b50:	e9 f7       	brne	.-6      	; 0x14b4c <_Z12Publish_Datav+0x74>
   14b52:	4c ea       	ldi	r20, 0xAC	; 172
   14b54:	53 e1       	ldi	r21, 0x13	; 19
   14b56:	62 e1       	ldi	r22, 0x12	; 18
   14b58:	73 e3       	ldi	r23, 0x33	; 51
   14b5a:	c8 01       	movw	r24, r16
   14b5c:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b60:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   14b64:	82 30       	cpi	r24, 0x02	; 2
   14b66:	80 f0       	brcs	.+32     	; 0x14b88 <_Z12Publish_Datav+0xb0>
   14b68:	90 e0       	ldi	r25, 0x00	; 0
   14b6a:	02 97       	sbiw	r24, 0x02	; 2
   14b6c:	2b e0       	ldi	r18, 0x0B	; 11
   14b6e:	28 9f       	mul	r18, r24
   14b70:	a0 01       	movw	r20, r0
   14b72:	29 9f       	mul	r18, r25
   14b74:	50 0d       	add	r21, r0
   14b76:	11 24       	eor	r1, r1
   14b78:	44 50       	subi	r20, 0x04	; 4
   14b7a:	54 4f       	sbci	r21, 0xF4	; 244
   14b7c:	6d e0       	ldi	r22, 0x0D	; 13
   14b7e:	73 e3       	ldi	r23, 0x33	; 51
   14b80:	c8 01       	movw	r24, r16
   14b82:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14b86:	0e c0       	rjmp	.+28     	; 0x14ba4 <_Z12Publish_Datav+0xcc>
   14b88:	cd 50       	subi	r28, 0x0D	; 13
   14b8a:	de 4f       	sbci	r29, 0xFE	; 254
   14b8c:	19 82       	std	Y+1, r1	; 0x01
   14b8e:	18 82       	st	Y, r1
   14b90:	c3 5f       	subi	r28, 0xF3	; 243
   14b92:	d1 40       	sbci	r29, 0x01	; 1
   14b94:	ae 01       	movw	r20, r28
   14b96:	4d 50       	subi	r20, 0x0D	; 13
   14b98:	5e 4f       	sbci	r21, 0xFE	; 254
   14b9a:	68 e0       	ldi	r22, 0x08	; 8
   14b9c:	73 e3       	ldi	r23, 0x33	; 51
   14b9e:	c8 01       	movw	r24, r16
   14ba0:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ba4:	4c ed       	ldi	r20, 0xDC	; 220
   14ba6:	50 e0       	ldi	r21, 0x00	; 0
   14ba8:	b7 01       	movw	r22, r14
   14baa:	c8 01       	movw	r24, r16
   14bac:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14bb0:	e2 e6       	ldi	r30, 0x62	; 98
   14bb2:	ff e0       	ldi	r31, 0x0F	; 15
   14bb4:	8e e6       	ldi	r24, 0x6E	; 110
   14bb6:	df 01       	movw	r26, r30
   14bb8:	1d 92       	st	X+, r1
   14bba:	8a 95       	dec	r24
   14bbc:	e9 f7       	brne	.-6      	; 0x14bb8 <_Z12Publish_Datav+0xe0>
   14bbe:	8e ec       	ldi	r24, 0xCE	; 206
   14bc0:	93 e1       	ldi	r25, 0x13	; 19
   14bc2:	9f 93       	push	r25
   14bc4:	8f 93       	push	r24
   14bc6:	8c e2       	ldi	r24, 0x2C	; 44
   14bc8:	97 e0       	ldi	r25, 0x07	; 7
   14bca:	9f 93       	push	r25
   14bcc:	8f 93       	push	r24
   14bce:	ff 93       	push	r31
   14bd0:	ef 93       	push	r30
   14bd2:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   14bd6:	0f 90       	pop	r0
   14bd8:	0f 90       	pop	r0
   14bda:	0f 90       	pop	r0
   14bdc:	0f 90       	pop	r0
   14bde:	0f 90       	pop	r0
   14be0:	0f 90       	pop	r0
   14be2:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14be6:	88 23       	and	r24, r24
   14be8:	69 f0       	breq	.+26     	; 0x14c04 <_Z12Publish_Datav+0x12c>
   14bea:	b7 01       	movw	r22, r14
   14bec:	82 e6       	ldi	r24, 0x62	; 98
   14bee:	9f e0       	ldi	r25, 0x0F	; 15
   14bf0:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   14bf4:	81 11       	cpse	r24, r1
   14bf6:	06 c0       	rjmp	.+12     	; 0x14c04 <_Z12Publish_Datav+0x12c>
   14bf8:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14bfc:	81 50       	subi	r24, 0x01	; 1
   14bfe:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14c02:	ef cf       	rjmp	.-34     	; 0x14be2 <_Z12Publish_Datav+0x10a>
   14c04:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14c08:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14c0c:	8d 7f       	andi	r24, 0xFD	; 253
   14c0e:	a5 c0       	rjmp	.+330    	; 0x14d5a <_Z12Publish_Datav+0x282>
   14c10:	83 ff       	sbrs	r24, 3
   14c12:	a9 c0       	rjmp	.+338    	; 0x14d66 <_Z12Publish_Datav+0x28e>
   14c14:	7e 01       	movw	r14, r28
   14c16:	b9 ee       	ldi	r27, 0xE9	; 233
   14c18:	eb 1a       	sub	r14, r27
   14c1a:	be ef       	ldi	r27, 0xFE	; 254
   14c1c:	fb 0a       	sbc	r15, r27
   14c1e:	8c ed       	ldi	r24, 0xDC	; 220
   14c20:	f7 01       	movw	r30, r14
   14c22:	11 92       	st	Z+, r1
   14c24:	8a 95       	dec	r24
   14c26:	e9 f7       	brne	.-6      	; 0x14c22 <_Z12Publish_Datav+0x14a>
   14c28:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14c2c:	81 30       	cpi	r24, 0x01	; 1
   14c2e:	51 f4       	brne	.+20     	; 0x14c44 <_Z12Publish_Datav+0x16c>
   14c30:	63 ef       	ldi	r22, 0xF3	; 243
   14c32:	72 e3       	ldi	r23, 0x32	; 50
   14c34:	86 ec       	ldi	r24, 0xC6	; 198
   14c36:	94 e1       	ldi	r25, 0x14	; 20
   14c38:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   14c3c:	86 ec       	ldi	r24, 0xC6	; 198
   14c3e:	94 e1       	ldi	r25, 0x14	; 20
   14c40:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14c44:	8a e0       	ldi	r24, 0x0A	; 10
   14c46:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   14c4a:	21 e0       	ldi	r18, 0x01	; 1
   14c4c:	89 2b       	or	r24, r25
   14c4e:	09 f0       	breq	.+2      	; 0x14c52 <_Z12Publish_Datav+0x17a>
   14c50:	20 e0       	ldi	r18, 0x00	; 0
   14c52:	cd 50       	subi	r28, 0x0D	; 13
   14c54:	de 4f       	sbci	r29, 0xFE	; 254
   14c56:	28 83       	st	Y, r18
   14c58:	c3 5f       	subi	r28, 0xF3	; 243
   14c5a:	d1 40       	sbci	r29, 0x01	; 1
   14c5c:	ae 01       	movw	r20, r28
   14c5e:	4d 50       	subi	r20, 0x0D	; 13
   14c60:	5e 4f       	sbci	r21, 0xFE	; 254
   14c62:	6b ee       	ldi	r22, 0xEB	; 235
   14c64:	72 e3       	ldi	r23, 0x32	; 50
   14c66:	c8 01       	movw	r24, r16
   14c68:	0e 94 92 8b 	call	0x11724	; 0x11724 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14c6c:	cd 50       	subi	r28, 0x0D	; 13
   14c6e:	de 4f       	sbci	r29, 0xFE	; 254
   14c70:	19 82       	std	Y+1, r1	; 0x01
   14c72:	18 82       	st	Y, r1
   14c74:	c3 5f       	subi	r28, 0xF3	; 243
   14c76:	d1 40       	sbci	r29, 0x01	; 1
   14c78:	ae 01       	movw	r20, r28
   14c7a:	4d 50       	subi	r20, 0x0D	; 13
   14c7c:	5e 4f       	sbci	r21, 0xFE	; 254
   14c7e:	64 ee       	ldi	r22, 0xE4	; 228
   14c80:	72 e3       	ldi	r23, 0x32	; 50
   14c82:	c8 01       	movw	r24, r16
   14c84:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14c88:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   14c8c:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   14c90:	00 97       	sbiw	r24, 0x00	; 0
   14c92:	91 f0       	breq	.+36     	; 0x14cb8 <_Z12Publish_Datav+0x1e0>
   14c94:	6c e3       	ldi	r22, 0x3C	; 60
   14c96:	70 e0       	ldi	r23, 0x00	; 0
   14c98:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   14c9c:	6f 5f       	subi	r22, 0xFF	; 255
   14c9e:	7f 4f       	sbci	r23, 0xFF	; 255
   14ca0:	cd 50       	subi	r28, 0x0D	; 13
   14ca2:	de 4f       	sbci	r29, 0xFE	; 254
   14ca4:	79 83       	std	Y+1, r23	; 0x01
   14ca6:	68 83       	st	Y, r22
   14ca8:	c3 5f       	subi	r28, 0xF3	; 243
   14caa:	d1 40       	sbci	r29, 0x01	; 1
   14cac:	ae 01       	movw	r20, r28
   14cae:	4d 50       	subi	r20, 0x0D	; 13
   14cb0:	5e 4f       	sbci	r21, 0xFE	; 254
   14cb2:	6f ed       	ldi	r22, 0xDF	; 223
   14cb4:	72 e3       	ldi	r23, 0x32	; 50
   14cb6:	04 c0       	rjmp	.+8      	; 0x14cc0 <_Z12Publish_Datav+0x1e8>
   14cb8:	44 ec       	ldi	r20, 0xC4	; 196
   14cba:	53 e1       	ldi	r21, 0x13	; 19
   14cbc:	6a ed       	ldi	r22, 0xDA	; 218
   14cbe:	72 e3       	ldi	r23, 0x32	; 50
   14cc0:	c8 01       	movw	r24, r16
   14cc2:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14cc6:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   14cca:	83 30       	cpi	r24, 0x03	; 3
   14ccc:	41 f4       	brne	.+16     	; 0x14cde <_Z12Publish_Datav+0x206>
   14cce:	45 e6       	ldi	r20, 0x65	; 101
   14cd0:	54 e1       	ldi	r21, 0x14	; 20
   14cd2:	65 ed       	ldi	r22, 0xD5	; 213
   14cd4:	72 e3       	ldi	r23, 0x32	; 50
   14cd6:	c8 01       	movw	r24, r16
   14cd8:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14cdc:	09 c0       	rjmp	.+18     	; 0x14cf0 <_Z12Publish_Datav+0x218>
   14cde:	47 e7       	ldi	r20, 0x77	; 119
   14ce0:	54 e1       	ldi	r21, 0x14	; 20
   14ce2:	60 ed       	ldi	r22, 0xD0	; 208
   14ce4:	72 e3       	ldi	r23, 0x32	; 50
   14ce6:	c8 01       	movw	r24, r16
   14ce8:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14cec:	10 92 77 14 	sts	0x1477, r1	; 0x801477 <_sRuble_Parameters+0xc9>
   14cf0:	4c ed       	ldi	r20, 0xDC	; 220
   14cf2:	50 e0       	ldi	r21, 0x00	; 0
   14cf4:	b7 01       	movw	r22, r14
   14cf6:	c8 01       	movw	r24, r16
   14cf8:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14cfc:	e2 e6       	ldi	r30, 0x62	; 98
   14cfe:	ff e0       	ldi	r31, 0x0F	; 15
   14d00:	8e e6       	ldi	r24, 0x6E	; 110
   14d02:	df 01       	movw	r26, r30
   14d04:	1d 92       	st	X+, r1
   14d06:	8a 95       	dec	r24
   14d08:	e9 f7       	brne	.-6      	; 0x14d04 <_Z12Publish_Datav+0x22c>
   14d0a:	8e ec       	ldi	r24, 0xCE	; 206
   14d0c:	93 e1       	ldi	r25, 0x13	; 19
   14d0e:	9f 93       	push	r25
   14d10:	8f 93       	push	r24
   14d12:	8b e3       	ldi	r24, 0x3B	; 59
   14d14:	97 e0       	ldi	r25, 0x07	; 7
   14d16:	9f 93       	push	r25
   14d18:	8f 93       	push	r24
   14d1a:	ff 93       	push	r31
   14d1c:	ef 93       	push	r30
   14d1e:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   14d22:	0f 90       	pop	r0
   14d24:	0f 90       	pop	r0
   14d26:	0f 90       	pop	r0
   14d28:	0f 90       	pop	r0
   14d2a:	0f 90       	pop	r0
   14d2c:	0f 90       	pop	r0
   14d2e:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d32:	88 23       	and	r24, r24
   14d34:	69 f0       	breq	.+26     	; 0x14d50 <_Z12Publish_Datav+0x278>
   14d36:	b7 01       	movw	r22, r14
   14d38:	82 e6       	ldi	r24, 0x62	; 98
   14d3a:	9f e0       	ldi	r25, 0x0F	; 15
   14d3c:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   14d40:	81 11       	cpse	r24, r1
   14d42:	06 c0       	rjmp	.+12     	; 0x14d50 <_Z12Publish_Datav+0x278>
   14d44:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d48:	81 50       	subi	r24, 0x01	; 1
   14d4a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d4e:	ef cf       	rjmp	.-34     	; 0x14d2e <_Z12Publish_Datav+0x256>
   14d50:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14d54:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14d58:	87 7f       	andi	r24, 0xF7	; 247
   14d5a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   14d5e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   14d62:	0c 94 51 af 	jmp	0x15ea2	; 0x15ea2 <_Z12Publish_Datav+0x13ca>
   14d66:	97 ff       	sbrs	r25, 7
   14d68:	50 c0       	rjmp	.+160    	; 0x14e0a <_Z12Publish_Datav+0x332>
   14d6a:	7e 01       	movw	r14, r28
   14d6c:	b9 ee       	ldi	r27, 0xE9	; 233
   14d6e:	eb 1a       	sub	r14, r27
   14d70:	be ef       	ldi	r27, 0xFE	; 254
   14d72:	fb 0a       	sbc	r15, r27
   14d74:	8c ed       	ldi	r24, 0xDC	; 220
   14d76:	f7 01       	movw	r30, r14
   14d78:	11 92       	st	Z+, r1
   14d7a:	8a 95       	dec	r24
   14d7c:	e9 f7       	brne	.-6      	; 0x14d78 <_Z12Publish_Datav+0x2a0>
   14d7e:	86 e0       	ldi	r24, 0x06	; 6
   14d80:	90 e0       	ldi	r25, 0x00	; 0
   14d82:	cd 50       	subi	r28, 0x0D	; 13
   14d84:	de 4f       	sbci	r29, 0xFE	; 254
   14d86:	99 83       	std	Y+1, r25	; 0x01
   14d88:	88 83       	st	Y, r24
   14d8a:	c3 5f       	subi	r28, 0xF3	; 243
   14d8c:	d1 40       	sbci	r29, 0x01	; 1
   14d8e:	ae 01       	movw	r20, r28
   14d90:	4d 50       	subi	r20, 0x0D	; 13
   14d92:	5e 4f       	sbci	r21, 0xFE	; 254
   14d94:	6a ec       	ldi	r22, 0xCA	; 202
   14d96:	72 e3       	ldi	r23, 0x32	; 50
   14d98:	c8 01       	movw	r24, r16
   14d9a:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d9e:	4c ed       	ldi	r20, 0xDC	; 220
   14da0:	50 e0       	ldi	r21, 0x00	; 0
   14da2:	b7 01       	movw	r22, r14
   14da4:	c8 01       	movw	r24, r16
   14da6:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14daa:	e2 e6       	ldi	r30, 0x62	; 98
   14dac:	ff e0       	ldi	r31, 0x0F	; 15
   14dae:	8e e6       	ldi	r24, 0x6E	; 110
   14db0:	df 01       	movw	r26, r30
   14db2:	1d 92       	st	X+, r1
   14db4:	8a 95       	dec	r24
   14db6:	e9 f7       	brne	.-6      	; 0x14db2 <_Z12Publish_Datav+0x2da>
   14db8:	8e ec       	ldi	r24, 0xCE	; 206
   14dba:	93 e1       	ldi	r25, 0x13	; 19
   14dbc:	9f 93       	push	r25
   14dbe:	8f 93       	push	r24
   14dc0:	8c e2       	ldi	r24, 0x2C	; 44
   14dc2:	97 e0       	ldi	r25, 0x07	; 7
   14dc4:	9f 93       	push	r25
   14dc6:	8f 93       	push	r24
   14dc8:	ff 93       	push	r31
   14dca:	ef 93       	push	r30
   14dcc:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   14dd0:	0f 90       	pop	r0
   14dd2:	0f 90       	pop	r0
   14dd4:	0f 90       	pop	r0
   14dd6:	0f 90       	pop	r0
   14dd8:	0f 90       	pop	r0
   14dda:	0f 90       	pop	r0
   14ddc:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14de0:	88 23       	and	r24, r24
   14de2:	69 f0       	breq	.+26     	; 0x14dfe <_Z12Publish_Datav+0x326>
   14de4:	b7 01       	movw	r22, r14
   14de6:	82 e6       	ldi	r24, 0x62	; 98
   14de8:	9f e0       	ldi	r25, 0x0F	; 15
   14dea:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   14dee:	81 11       	cpse	r24, r1
   14df0:	06 c0       	rjmp	.+12     	; 0x14dfe <_Z12Publish_Datav+0x326>
   14df2:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14df6:	81 50       	subi	r24, 0x01	; 1
   14df8:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14dfc:	ef cf       	rjmp	.-34     	; 0x14ddc <_Z12Publish_Datav+0x304>
   14dfe:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14e02:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14e06:	9f 77       	andi	r25, 0x7F	; 127
   14e08:	a8 cf       	rjmp	.-176    	; 0x14d5a <_Z12Publish_Datav+0x282>
   14e0a:	86 ff       	sbrs	r24, 6
   14e0c:	e3 c0       	rjmp	.+454    	; 0x14fd4 <_Z12Publish_Datav+0x4fc>
   14e0e:	7e 01       	movw	r14, r28
   14e10:	b9 ee       	ldi	r27, 0xE9	; 233
   14e12:	eb 1a       	sub	r14, r27
   14e14:	be ef       	ldi	r27, 0xFE	; 254
   14e16:	fb 0a       	sbc	r15, r27
   14e18:	8c ed       	ldi	r24, 0xDC	; 220
   14e1a:	f7 01       	movw	r30, r14
   14e1c:	11 92       	st	Z+, r1
   14e1e:	8a 95       	dec	r24
   14e20:	e9 f7       	brne	.-6      	; 0x14e1c <_Z12Publish_Datav+0x344>
   14e22:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14e26:	81 30       	cpi	r24, 0x01	; 1
   14e28:	51 f4       	brne	.+20     	; 0x14e3e <_Z12Publish_Datav+0x366>
   14e2a:	65 eb       	ldi	r22, 0xB5	; 181
   14e2c:	72 e3       	ldi	r23, 0x32	; 50
   14e2e:	86 ec       	ldi	r24, 0xC6	; 198
   14e30:	94 e1       	ldi	r25, 0x14	; 20
   14e32:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   14e36:	86 ec       	ldi	r24, 0xC6	; 198
   14e38:	94 e1       	ldi	r25, 0x14	; 20
   14e3a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   14e3e:	cd 50       	subi	r28, 0x0D	; 13
   14e40:	de 4f       	sbci	r29, 0xFE	; 254
   14e42:	19 82       	std	Y+1, r1	; 0x01
   14e44:	18 82       	st	Y, r1
   14e46:	c3 5f       	subi	r28, 0xF3	; 243
   14e48:	d1 40       	sbci	r29, 0x01	; 1
   14e4a:	ae 01       	movw	r20, r28
   14e4c:	4d 50       	subi	r20, 0x0D	; 13
   14e4e:	5e 4f       	sbci	r21, 0xFE	; 254
   14e50:	6b ea       	ldi	r22, 0xAB	; 171
   14e52:	72 e3       	ldi	r23, 0x32	; 50
   14e54:	c8 01       	movw	r24, r16
   14e56:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e5a:	cd 50       	subi	r28, 0x0D	; 13
   14e5c:	de 4f       	sbci	r29, 0xFE	; 254
   14e5e:	19 82       	std	Y+1, r1	; 0x01
   14e60:	18 82       	st	Y, r1
   14e62:	c3 5f       	subi	r28, 0xF3	; 243
   14e64:	d1 40       	sbci	r29, 0x01	; 1
   14e66:	ae 01       	movw	r20, r28
   14e68:	4d 50       	subi	r20, 0x0D	; 13
   14e6a:	5e 4f       	sbci	r21, 0xFE	; 254
   14e6c:	67 ea       	ldi	r22, 0xA7	; 167
   14e6e:	72 e3       	ldi	r23, 0x32	; 50
   14e70:	c8 01       	movw	r24, r16
   14e72:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e76:	cd 50       	subi	r28, 0x0D	; 13
   14e78:	de 4f       	sbci	r29, 0xFE	; 254
   14e7a:	19 82       	std	Y+1, r1	; 0x01
   14e7c:	18 82       	st	Y, r1
   14e7e:	c3 5f       	subi	r28, 0xF3	; 243
   14e80:	d1 40       	sbci	r29, 0x01	; 1
   14e82:	ae 01       	movw	r20, r28
   14e84:	4d 50       	subi	r20, 0x0D	; 13
   14e86:	5e 4f       	sbci	r21, 0xFE	; 254
   14e88:	63 ea       	ldi	r22, 0xA3	; 163
   14e8a:	72 e3       	ldi	r23, 0x32	; 50
   14e8c:	c8 01       	movw	r24, r16
   14e8e:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e92:	cd 50       	subi	r28, 0x0D	; 13
   14e94:	de 4f       	sbci	r29, 0xFE	; 254
   14e96:	19 82       	std	Y+1, r1	; 0x01
   14e98:	18 82       	st	Y, r1
   14e9a:	c3 5f       	subi	r28, 0xF3	; 243
   14e9c:	d1 40       	sbci	r29, 0x01	; 1
   14e9e:	ae 01       	movw	r20, r28
   14ea0:	4d 50       	subi	r20, 0x0D	; 13
   14ea2:	5e 4f       	sbci	r21, 0xFE	; 254
   14ea4:	6f e9       	ldi	r22, 0x9F	; 159
   14ea6:	72 e3       	ldi	r23, 0x32	; 50
   14ea8:	c8 01       	movw	r24, r16
   14eaa:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14eae:	cd 50       	subi	r28, 0x0D	; 13
   14eb0:	de 4f       	sbci	r29, 0xFE	; 254
   14eb2:	19 82       	std	Y+1, r1	; 0x01
   14eb4:	18 82       	st	Y, r1
   14eb6:	c3 5f       	subi	r28, 0xF3	; 243
   14eb8:	d1 40       	sbci	r29, 0x01	; 1
   14eba:	ae 01       	movw	r20, r28
   14ebc:	4d 50       	subi	r20, 0x0D	; 13
   14ebe:	5e 4f       	sbci	r21, 0xFE	; 254
   14ec0:	6b e9       	ldi	r22, 0x9B	; 155
   14ec2:	72 e3       	ldi	r23, 0x32	; 50
   14ec4:	c8 01       	movw	r24, r16
   14ec6:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14eca:	cd 50       	subi	r28, 0x0D	; 13
   14ecc:	de 4f       	sbci	r29, 0xFE	; 254
   14ece:	19 82       	std	Y+1, r1	; 0x01
   14ed0:	18 82       	st	Y, r1
   14ed2:	c3 5f       	subi	r28, 0xF3	; 243
   14ed4:	d1 40       	sbci	r29, 0x01	; 1
   14ed6:	ae 01       	movw	r20, r28
   14ed8:	4d 50       	subi	r20, 0x0D	; 13
   14eda:	5e 4f       	sbci	r21, 0xFE	; 254
   14edc:	61 e9       	ldi	r22, 0x91	; 145
   14ede:	72 e3       	ldi	r23, 0x32	; 50
   14ee0:	c8 01       	movw	r24, r16
   14ee2:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ee6:	cd 50       	subi	r28, 0x0D	; 13
   14ee8:	de 4f       	sbci	r29, 0xFE	; 254
   14eea:	19 82       	std	Y+1, r1	; 0x01
   14eec:	18 82       	st	Y, r1
   14eee:	c3 5f       	subi	r28, 0xF3	; 243
   14ef0:	d1 40       	sbci	r29, 0x01	; 1
   14ef2:	ae 01       	movw	r20, r28
   14ef4:	4d 50       	subi	r20, 0x0D	; 13
   14ef6:	5e 4f       	sbci	r21, 0xFE	; 254
   14ef8:	65 e8       	ldi	r22, 0x85	; 133
   14efa:	72 e3       	ldi	r23, 0x32	; 50
   14efc:	c8 01       	movw	r24, r16
   14efe:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f02:	cd 50       	subi	r28, 0x0D	; 13
   14f04:	de 4f       	sbci	r29, 0xFE	; 254
   14f06:	19 82       	std	Y+1, r1	; 0x01
   14f08:	18 82       	st	Y, r1
   14f0a:	c3 5f       	subi	r28, 0xF3	; 243
   14f0c:	d1 40       	sbci	r29, 0x01	; 1
   14f0e:	ae 01       	movw	r20, r28
   14f10:	4d 50       	subi	r20, 0x0D	; 13
   14f12:	5e 4f       	sbci	r21, 0xFE	; 254
   14f14:	6c e7       	ldi	r22, 0x7C	; 124
   14f16:	72 e3       	ldi	r23, 0x32	; 50
   14f18:	c8 01       	movw	r24, r16
   14f1a:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f1e:	cd 50       	subi	r28, 0x0D	; 13
   14f20:	de 4f       	sbci	r29, 0xFE	; 254
   14f22:	19 82       	std	Y+1, r1	; 0x01
   14f24:	18 82       	st	Y, r1
   14f26:	c3 5f       	subi	r28, 0xF3	; 243
   14f28:	d1 40       	sbci	r29, 0x01	; 1
   14f2a:	ae 01       	movw	r20, r28
   14f2c:	4d 50       	subi	r20, 0x0D	; 13
   14f2e:	5e 4f       	sbci	r21, 0xFE	; 254
   14f30:	66 e7       	ldi	r22, 0x76	; 118
   14f32:	72 e3       	ldi	r23, 0x32	; 50
   14f34:	c8 01       	movw	r24, r16
   14f36:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f3a:	cd 50       	subi	r28, 0x0D	; 13
   14f3c:	de 4f       	sbci	r29, 0xFE	; 254
   14f3e:	19 82       	std	Y+1, r1	; 0x01
   14f40:	18 82       	st	Y, r1
   14f42:	c3 5f       	subi	r28, 0xF3	; 243
   14f44:	d1 40       	sbci	r29, 0x01	; 1
   14f46:	ae 01       	movw	r20, r28
   14f48:	4d 50       	subi	r20, 0x0D	; 13
   14f4a:	5e 4f       	sbci	r21, 0xFE	; 254
   14f4c:	61 e7       	ldi	r22, 0x71	; 113
   14f4e:	72 e3       	ldi	r23, 0x32	; 50
   14f50:	c8 01       	movw	r24, r16
   14f52:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f56:	4c ed       	ldi	r20, 0xDC	; 220
   14f58:	50 e0       	ldi	r21, 0x00	; 0
   14f5a:	b7 01       	movw	r22, r14
   14f5c:	c8 01       	movw	r24, r16
   14f5e:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14f62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14f66:	81 30       	cpi	r24, 0x01	; 1
   14f68:	29 f4       	brne	.+10     	; 0x14f74 <_Z12Publish_Datav+0x49c>
   14f6a:	b7 01       	movw	r22, r14
   14f6c:	86 ec       	ldi	r24, 0xC6	; 198
   14f6e:	94 e1       	ldi	r25, 0x14	; 20
   14f70:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   14f74:	e2 e6       	ldi	r30, 0x62	; 98
   14f76:	ff e0       	ldi	r31, 0x0F	; 15
   14f78:	8e e6       	ldi	r24, 0x6E	; 110
   14f7a:	df 01       	movw	r26, r30
   14f7c:	1d 92       	st	X+, r1
   14f7e:	8a 95       	dec	r24
   14f80:	e9 f7       	brne	.-6      	; 0x14f7c <_Z12Publish_Datav+0x4a4>
   14f82:	83 e1       	ldi	r24, 0x13	; 19
   14f84:	97 e0       	ldi	r25, 0x07	; 7
   14f86:	9f 93       	push	r25
   14f88:	8f 93       	push	r24
   14f8a:	83 e5       	ldi	r24, 0x53	; 83
   14f8c:	97 e0       	ldi	r25, 0x07	; 7
   14f8e:	9f 93       	push	r25
   14f90:	8f 93       	push	r24
   14f92:	ff 93       	push	r31
   14f94:	ef 93       	push	r30
   14f96:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   14f9a:	0f 90       	pop	r0
   14f9c:	0f 90       	pop	r0
   14f9e:	0f 90       	pop	r0
   14fa0:	0f 90       	pop	r0
   14fa2:	0f 90       	pop	r0
   14fa4:	0f 90       	pop	r0
   14fa6:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14faa:	88 23       	and	r24, r24
   14fac:	69 f0       	breq	.+26     	; 0x14fc8 <_Z12Publish_Datav+0x4f0>
   14fae:	b7 01       	movw	r22, r14
   14fb0:	82 e6       	ldi	r24, 0x62	; 98
   14fb2:	9f e0       	ldi	r25, 0x0F	; 15
   14fb4:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   14fb8:	81 11       	cpse	r24, r1
   14fba:	06 c0       	rjmp	.+12     	; 0x14fc8 <_Z12Publish_Datav+0x4f0>
   14fbc:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14fc0:	81 50       	subi	r24, 0x01	; 1
   14fc2:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14fc6:	ef cf       	rjmp	.-34     	; 0x14fa6 <_Z12Publish_Datav+0x4ce>
   14fc8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14fcc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14fd0:	8f 7b       	andi	r24, 0xBF	; 191
   14fd2:	c3 ce       	rjmp	.-634    	; 0x14d5a <_Z12Publish_Datav+0x282>
   14fd4:	87 ff       	sbrs	r24, 7
   14fd6:	7f c0       	rjmp	.+254    	; 0x150d6 <_Z12Publish_Datav+0x5fe>
   14fd8:	6e 01       	movw	r12, r28
   14fda:	b9 ee       	ldi	r27, 0xE9	; 233
   14fdc:	cb 1a       	sub	r12, r27
   14fde:	be ef       	ldi	r27, 0xFE	; 254
   14fe0:	db 0a       	sbc	r13, r27
   14fe2:	8c ed       	ldi	r24, 0xDC	; 220
   14fe4:	f6 01       	movw	r30, r12
   14fe6:	11 92       	st	Z+, r1
   14fe8:	8a 95       	dec	r24
   14fea:	e9 f7       	brne	.-6      	; 0x14fe6 <_Z12Publish_Datav+0x50e>
   14fec:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14ff0:	86 30       	cpi	r24, 0x06	; 6
   14ff2:	08 f0       	brcs	.+2      	; 0x14ff6 <_Z12Publish_Datav+0x51e>
   14ff4:	6a c0       	rjmp	.+212    	; 0x150ca <_Z12Publish_Datav+0x5f2>
   14ff6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14ffa:	81 30       	cpi	r24, 0x01	; 1
   14ffc:	51 f4       	brne	.+20     	; 0x15012 <_Z12Publish_Datav+0x53a>
   14ffe:	6b e5       	ldi	r22, 0x5B	; 91
   15000:	72 e3       	ldi	r23, 0x32	; 50
   15002:	86 ec       	ldi	r24, 0xC6	; 198
   15004:	94 e1       	ldi	r25, 0x14	; 20
   15006:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1500a:	86 ec       	ldi	r24, 0xC6	; 198
   1500c:	94 e1       	ldi	r25, 0x14	; 20
   1500e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   15012:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   15016:	7d e0       	ldi	r23, 0x0D	; 13
   15018:	f7 2e       	mov	r15, r23
   1501a:	f4 9e       	mul	r15, r20
   1501c:	a0 01       	movw	r20, r0
   1501e:	11 24       	eor	r1, r1
   15020:	40 5e       	subi	r20, 0xE0	; 224
   15022:	53 4f       	sbci	r21, 0xF3	; 243
   15024:	6f e4       	ldi	r22, 0x4F	; 79
   15026:	72 e3       	ldi	r23, 0x32	; 50
   15028:	c8 01       	movw	r24, r16
   1502a:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1502e:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   15032:	f4 9e       	mul	r15, r20
   15034:	a0 01       	movw	r20, r0
   15036:	11 24       	eor	r1, r1
   15038:	43 5e       	subi	r20, 0xE3	; 227
   1503a:	53 4f       	sbci	r21, 0xF3	; 243
   1503c:	6a e4       	ldi	r22, 0x4A	; 74
   1503e:	72 e3       	ldi	r23, 0x32	; 50
   15040:	c8 01       	movw	r24, r16
   15042:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15046:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   1504a:	f4 9e       	mul	r15, r20
   1504c:	a0 01       	movw	r20, r0
   1504e:	11 24       	eor	r1, r1
   15050:	41 5e       	subi	r20, 0xE1	; 225
   15052:	53 4f       	sbci	r21, 0xF3	; 243
   15054:	60 e4       	ldi	r22, 0x40	; 64
   15056:	72 e3       	ldi	r23, 0x32	; 50
   15058:	c8 01       	movw	r24, r16
   1505a:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1505e:	44 ed       	ldi	r20, 0xD4	; 212
   15060:	53 e0       	ldi	r21, 0x03	; 3
   15062:	60 ed       	ldi	r22, 0xD0	; 208
   15064:	7f e0       	ldi	r23, 0x0F	; 15
   15066:	c8 01       	movw	r24, r16
   15068:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1506c:	e2 e6       	ldi	r30, 0x62	; 98
   1506e:	ff e0       	ldi	r31, 0x0F	; 15
   15070:	8e e6       	ldi	r24, 0x6E	; 110
   15072:	df 01       	movw	r26, r30
   15074:	1d 92       	st	X+, r1
   15076:	8a 95       	dec	r24
   15078:	e9 f7       	brne	.-6      	; 0x15074 <_Z12Publish_Datav+0x59c>
   1507a:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   1507e:	f8 9e       	mul	r15, r24
   15080:	c0 01       	movw	r24, r0
   15082:	11 24       	eor	r1, r1
   15084:	8a 5e       	subi	r24, 0xEA	; 234
   15086:	93 4f       	sbci	r25, 0xF3	; 243
   15088:	9f 93       	push	r25
   1508a:	8f 93       	push	r24
   1508c:	88 e6       	ldi	r24, 0x68	; 104
   1508e:	97 e0       	ldi	r25, 0x07	; 7
   15090:	9f 93       	push	r25
   15092:	8f 93       	push	r24
   15094:	ff 93       	push	r31
   15096:	ef 93       	push	r30
   15098:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   1509c:	0f 90       	pop	r0
   1509e:	0f 90       	pop	r0
   150a0:	0f 90       	pop	r0
   150a2:	0f 90       	pop	r0
   150a4:	0f 90       	pop	r0
   150a6:	0f 90       	pop	r0
   150a8:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150ac:	88 23       	and	r24, r24
   150ae:	69 f0       	breq	.+26     	; 0x150ca <_Z12Publish_Datav+0x5f2>
   150b0:	b6 01       	movw	r22, r12
   150b2:	82 e6       	ldi	r24, 0x62	; 98
   150b4:	9f e0       	ldi	r25, 0x0F	; 15
   150b6:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   150ba:	81 11       	cpse	r24, r1
   150bc:	06 c0       	rjmp	.+12     	; 0x150ca <_Z12Publish_Datav+0x5f2>
   150be:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150c2:	81 50       	subi	r24, 0x01	; 1
   150c4:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150c8:	ef cf       	rjmp	.-34     	; 0x150a8 <_Z12Publish_Datav+0x5d0>
   150ca:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   150ce:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   150d2:	8f 77       	andi	r24, 0x7F	; 127
   150d4:	42 ce       	rjmp	.-892    	; 0x14d5a <_Z12Publish_Datav+0x282>
   150d6:	90 ff       	sbrs	r25, 0
   150d8:	55 c0       	rjmp	.+170    	; 0x15184 <_Z12Publish_Datav+0x6ac>
   150da:	7e 01       	movw	r14, r28
   150dc:	b9 ee       	ldi	r27, 0xE9	; 233
   150de:	eb 1a       	sub	r14, r27
   150e0:	be ef       	ldi	r27, 0xFE	; 254
   150e2:	fb 0a       	sbc	r15, r27
   150e4:	8c ed       	ldi	r24, 0xDC	; 220
   150e6:	f7 01       	movw	r30, r14
   150e8:	11 92       	st	Z+, r1
   150ea:	8a 95       	dec	r24
   150ec:	e9 f7       	brne	.-6      	; 0x150e8 <_Z12Publish_Datav+0x610>
   150ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   150f2:	81 30       	cpi	r24, 0x01	; 1
   150f4:	51 f4       	brne	.+20     	; 0x1510a <_Z12Publish_Datav+0x632>
   150f6:	6a e2       	ldi	r22, 0x2A	; 42
   150f8:	72 e3       	ldi	r23, 0x32	; 50
   150fa:	86 ec       	ldi	r24, 0xC6	; 198
   150fc:	94 e1       	ldi	r25, 0x14	; 20
   150fe:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   15102:	86 ec       	ldi	r24, 0xC6	; 198
   15104:	94 e1       	ldi	r25, 0x14	; 20
   15106:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1510a:	4d e1       	ldi	r20, 0x1D	; 29
   1510c:	54 e1       	ldi	r21, 0x14	; 20
   1510e:	64 e2       	ldi	r22, 0x24	; 36
   15110:	72 e3       	ldi	r23, 0x32	; 50
   15112:	c8 01       	movw	r24, r16
   15114:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15118:	4c ed       	ldi	r20, 0xDC	; 220
   1511a:	50 e0       	ldi	r21, 0x00	; 0
   1511c:	b7 01       	movw	r22, r14
   1511e:	c8 01       	movw	r24, r16
   15120:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15124:	e2 e6       	ldi	r30, 0x62	; 98
   15126:	ff e0       	ldi	r31, 0x0F	; 15
   15128:	8e e6       	ldi	r24, 0x6E	; 110
   1512a:	df 01       	movw	r26, r30
   1512c:	1d 92       	st	X+, r1
   1512e:	8a 95       	dec	r24
   15130:	e9 f7       	brne	.-6      	; 0x1512c <_Z12Publish_Datav+0x654>
   15132:	8e ec       	ldi	r24, 0xCE	; 206
   15134:	93 e1       	ldi	r25, 0x13	; 19
   15136:	9f 93       	push	r25
   15138:	8f 93       	push	r24
   1513a:	8c e7       	ldi	r24, 0x7C	; 124
   1513c:	97 e0       	ldi	r25, 0x07	; 7
   1513e:	9f 93       	push	r25
   15140:	8f 93       	push	r24
   15142:	ff 93       	push	r31
   15144:	ef 93       	push	r30
   15146:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   1514a:	0f 90       	pop	r0
   1514c:	0f 90       	pop	r0
   1514e:	0f 90       	pop	r0
   15150:	0f 90       	pop	r0
   15152:	0f 90       	pop	r0
   15154:	0f 90       	pop	r0
   15156:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1515a:	88 23       	and	r24, r24
   1515c:	69 f0       	breq	.+26     	; 0x15178 <_Z12Publish_Datav+0x6a0>
   1515e:	b7 01       	movw	r22, r14
   15160:	82 e6       	ldi	r24, 0x62	; 98
   15162:	9f e0       	ldi	r25, 0x0F	; 15
   15164:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   15168:	81 11       	cpse	r24, r1
   1516a:	06 c0       	rjmp	.+12     	; 0x15178 <_Z12Publish_Datav+0x6a0>
   1516c:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15170:	81 50       	subi	r24, 0x01	; 1
   15172:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15176:	ef cf       	rjmp	.-34     	; 0x15156 <_Z12Publish_Datav+0x67e>
   15178:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1517c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15180:	9e 7f       	andi	r25, 0xFE	; 254
   15182:	eb cd       	rjmp	.-1066   	; 0x14d5a <_Z12Publish_Datav+0x282>
   15184:	94 ff       	sbrs	r25, 4
   15186:	3f c1       	rjmp	.+638    	; 0x15406 <_Z12Publish_Datav+0x92e>
   15188:	7e 01       	movw	r14, r28
   1518a:	b9 ee       	ldi	r27, 0xE9	; 233
   1518c:	eb 1a       	sub	r14, r27
   1518e:	be ef       	ldi	r27, 0xFE	; 254
   15190:	fb 0a       	sbc	r15, r27
   15192:	8c ed       	ldi	r24, 0xDC	; 220
   15194:	f7 01       	movw	r30, r14
   15196:	11 92       	st	Z+, r1
   15198:	8a 95       	dec	r24
   1519a:	e9 f7       	brne	.-6      	; 0x15196 <_Z12Publish_Datav+0x6be>
   1519c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   151a0:	81 30       	cpi	r24, 0x01	; 1
   151a2:	51 f4       	brne	.+20     	; 0x151b8 <_Z12Publish_Datav+0x6e0>
   151a4:	60 e1       	ldi	r22, 0x10	; 16
   151a6:	72 e3       	ldi	r23, 0x32	; 50
   151a8:	86 ec       	ldi	r24, 0xC6	; 198
   151aa:	94 e1       	ldi	r25, 0x14	; 20
   151ac:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   151b0:	86 ec       	ldi	r24, 0xC6	; 198
   151b2:	94 e1       	ldi	r25, 0x14	; 20
   151b4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   151b8:	8a e0       	ldi	r24, 0x0A	; 10
   151ba:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   151be:	21 e0       	ldi	r18, 0x01	; 1
   151c0:	89 2b       	or	r24, r25
   151c2:	09 f0       	breq	.+2      	; 0x151c6 <_Z12Publish_Datav+0x6ee>
   151c4:	20 e0       	ldi	r18, 0x00	; 0
   151c6:	cd 50       	subi	r28, 0x0D	; 13
   151c8:	de 4f       	sbci	r29, 0xFE	; 254
   151ca:	28 83       	st	Y, r18
   151cc:	c3 5f       	subi	r28, 0xF3	; 243
   151ce:	d1 40       	sbci	r29, 0x01	; 1
   151d0:	ae 01       	movw	r20, r28
   151d2:	4d 50       	subi	r20, 0x0D	; 13
   151d4:	5e 4f       	sbci	r21, 0xFE	; 254
   151d6:	68 e0       	ldi	r22, 0x08	; 8
   151d8:	72 e3       	ldi	r23, 0x32	; 50
   151da:	c8 01       	movw	r24, r16
   151dc:	0e 94 92 8b 	call	0x11724	; 0x11724 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   151e0:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   151e4:	81 11       	cpse	r24, r1
   151e6:	4e c0       	rjmp	.+156    	; 0x15284 <_Z12Publish_Datav+0x7ac>
   151e8:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   151ec:	88 23       	and	r24, r24
   151ee:	09 f4       	brne	.+2      	; 0x151f2 <_Z12Publish_Datav+0x71a>
   151f0:	43 c0       	rjmp	.+134    	; 0x15278 <_Z12Publish_Datav+0x7a0>
   151f2:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   151f6:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   151fa:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   151fe:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15202:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15206:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   1520a:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   1520e:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15212:	29 2d       	mov	r18, r9
   15214:	3a 2d       	mov	r19, r10
   15216:	4b 2d       	mov	r20, r11
   15218:	5c 2d       	mov	r21, r12
   1521a:	6d 2d       	mov	r22, r13
   1521c:	7b 2f       	mov	r23, r27
   1521e:	8f 2f       	mov	r24, r31
   15220:	9e 2f       	mov	r25, r30
   15222:	a2 e0       	ldi	r26, 0x02	; 2
   15224:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   15228:	81 f0       	breq	.+32     	; 0x1524a <_Z12Publish_Datav+0x772>
   1522a:	a4 e0       	ldi	r26, 0x04	; 4
   1522c:	cd 50       	subi	r28, 0x0D	; 13
   1522e:	de 4f       	sbci	r29, 0xFE	; 254
   15230:	19 82       	std	Y+1, r1	; 0x01
   15232:	18 82       	st	Y, r1
   15234:	c3 5f       	subi	r28, 0xF3	; 243
   15236:	d1 40       	sbci	r29, 0x01	; 1
   15238:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   1523c:	a1 f4       	brne	.+40     	; 0x15266 <_Z12Publish_Datav+0x78e>
   1523e:	ae 01       	movw	r20, r28
   15240:	4d 50       	subi	r20, 0x0D	; 13
   15242:	5e 4f       	sbci	r21, 0xFE	; 254
   15244:	60 e0       	ldi	r22, 0x00	; 0
   15246:	72 e3       	ldi	r23, 0x32	; 50
   15248:	13 c0       	rjmp	.+38     	; 0x15270 <_Z12Publish_Datav+0x798>
   1524a:	81 e0       	ldi	r24, 0x01	; 1
   1524c:	90 e0       	ldi	r25, 0x00	; 0
   1524e:	cd 50       	subi	r28, 0x0D	; 13
   15250:	de 4f       	sbci	r29, 0xFE	; 254
   15252:	99 83       	std	Y+1, r25	; 0x01
   15254:	88 83       	st	Y, r24
   15256:	c3 5f       	subi	r28, 0xF3	; 243
   15258:	d1 40       	sbci	r29, 0x01	; 1
   1525a:	ae 01       	movw	r20, r28
   1525c:	4d 50       	subi	r20, 0x0D	; 13
   1525e:	5e 4f       	sbci	r21, 0xFE	; 254
   15260:	68 ef       	ldi	r22, 0xF8	; 248
   15262:	71 e3       	ldi	r23, 0x31	; 49
   15264:	05 c0       	rjmp	.+10     	; 0x15270 <_Z12Publish_Datav+0x798>
   15266:	ae 01       	movw	r20, r28
   15268:	4d 50       	subi	r20, 0x0D	; 13
   1526a:	5e 4f       	sbci	r21, 0xFE	; 254
   1526c:	60 ef       	ldi	r22, 0xF0	; 240
   1526e:	71 e3       	ldi	r23, 0x31	; 49
   15270:	c8 01       	movw	r24, r16
   15272:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15276:	21 c0       	rjmp	.+66     	; 0x152ba <_Z12Publish_Datav+0x7e2>
   15278:	8a e0       	ldi	r24, 0x0A	; 10
   1527a:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   1527e:	89 2b       	or	r24, r25
   15280:	71 f4       	brne	.+28     	; 0x1529e <_Z12Publish_Datav+0x7c6>
   15282:	04 c0       	rjmp	.+8      	; 0x1528c <_Z12Publish_Datav+0x7b4>
   15284:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   15288:	81 30       	cpi	r24, 0x01	; 1
   1528a:	49 f4       	brne	.+18     	; 0x1529e <_Z12Publish_Datav+0x7c6>
   1528c:	81 e0       	ldi	r24, 0x01	; 1
   1528e:	90 e0       	ldi	r25, 0x00	; 0
   15290:	cd 50       	subi	r28, 0x0D	; 13
   15292:	de 4f       	sbci	r29, 0xFE	; 254
   15294:	99 83       	std	Y+1, r25	; 0x01
   15296:	88 83       	st	Y, r24
   15298:	c3 5f       	subi	r28, 0xF3	; 243
   1529a:	d1 40       	sbci	r29, 0x01	; 1
   1529c:	06 c0       	rjmp	.+12     	; 0x152aa <_Z12Publish_Datav+0x7d2>
   1529e:	cd 50       	subi	r28, 0x0D	; 13
   152a0:	de 4f       	sbci	r29, 0xFE	; 254
   152a2:	19 82       	std	Y+1, r1	; 0x01
   152a4:	18 82       	st	Y, r1
   152a6:	c3 5f       	subi	r28, 0xF3	; 243
   152a8:	d1 40       	sbci	r29, 0x01	; 1
   152aa:	ae 01       	movw	r20, r28
   152ac:	4d 50       	subi	r20, 0x0D	; 13
   152ae:	5e 4f       	sbci	r21, 0xFE	; 254
   152b0:	65 e9       	ldi	r22, 0x95	; 149
   152b2:	77 e0       	ldi	r23, 0x07	; 7
   152b4:	c8 01       	movw	r24, r16
   152b6:	0e 94 98 8c 	call	0x11930	; 0x11930 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   152ba:	cd 50       	subi	r28, 0x0D	; 13
   152bc:	de 4f       	sbci	r29, 0xFE	; 254
   152be:	19 82       	std	Y+1, r1	; 0x01
   152c0:	18 82       	st	Y, r1
   152c2:	c3 5f       	subi	r28, 0xF3	; 243
   152c4:	d1 40       	sbci	r29, 0x01	; 1
   152c6:	ae 01       	movw	r20, r28
   152c8:	4d 50       	subi	r20, 0x0D	; 13
   152ca:	5e 4f       	sbci	r21, 0xFE	; 254
   152cc:	69 ee       	ldi	r22, 0xE9	; 233
   152ce:	71 e3       	ldi	r23, 0x31	; 49
   152d0:	c8 01       	movw	r24, r16
   152d2:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   152d6:	40 91 73 14 	lds	r20, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   152da:	fb e1       	ldi	r31, 0x1B	; 27
   152dc:	4f 9f       	mul	r20, r31
   152de:	a0 01       	movw	r20, r0
   152e0:	11 24       	eor	r1, r1
   152e2:	fa 01       	movw	r30, r20
   152e4:	e8 51       	subi	r30, 0x18	; 24
   152e6:	f2 4f       	sbci	r31, 0xF2	; 242
   152e8:	83 81       	ldd	r24, Z+3	; 0x03
   152ea:	94 81       	ldd	r25, Z+4	; 0x04
   152ec:	00 97       	sbiw	r24, 0x00	; 0
   152ee:	29 f1       	breq	.+74     	; 0x1533a <_Z12Publish_Datav+0x862>
   152f0:	6c e3       	ldi	r22, 0x3C	; 60
   152f2:	70 e0       	ldi	r23, 0x00	; 0
   152f4:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   152f8:	6f 5f       	subi	r22, 0xFF	; 255
   152fa:	7f 4f       	sbci	r23, 0xFF	; 255
   152fc:	cd 50       	subi	r28, 0x0D	; 13
   152fe:	de 4f       	sbci	r29, 0xFE	; 254
   15300:	79 83       	std	Y+1, r23	; 0x01
   15302:	68 83       	st	Y, r22
   15304:	c3 5f       	subi	r28, 0xF3	; 243
   15306:	d1 40       	sbci	r29, 0x01	; 1
   15308:	ae 01       	movw	r20, r28
   1530a:	4d 50       	subi	r20, 0x0D	; 13
   1530c:	5e 4f       	sbci	r21, 0xFE	; 254
   1530e:	64 ee       	ldi	r22, 0xE4	; 228
   15310:	71 e3       	ldi	r23, 0x31	; 49
   15312:	c8 01       	movw	r24, r16
   15314:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15318:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1531c:	90 e0       	ldi	r25, 0x00	; 0
   1531e:	8b 59       	subi	r24, 0x9B	; 155
   15320:	9f 4f       	sbci	r25, 0xFF	; 255
   15322:	cd 50       	subi	r28, 0x0D	; 13
   15324:	de 4f       	sbci	r29, 0xFE	; 254
   15326:	99 83       	std	Y+1, r25	; 0x01
   15328:	88 83       	st	Y, r24
   1532a:	c3 5f       	subi	r28, 0xF3	; 243
   1532c:	d1 40       	sbci	r29, 0x01	; 1
   1532e:	ae 01       	movw	r20, r28
   15330:	4d 50       	subi	r20, 0x0D	; 13
   15332:	5e 4f       	sbci	r21, 0xFE	; 254
   15334:	6f ed       	ldi	r22, 0xDF	; 223
   15336:	71 e3       	ldi	r23, 0x31	; 49
   15338:	17 c0       	rjmp	.+46     	; 0x15368 <_Z12Publish_Datav+0x890>
   1533a:	45 51       	subi	r20, 0x15	; 21
   1533c:	52 4f       	sbci	r21, 0xF2	; 242
   1533e:	6a ed       	ldi	r22, 0xDA	; 218
   15340:	71 e3       	ldi	r23, 0x31	; 49
   15342:	c8 01       	movw	r24, r16
   15344:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15348:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1534c:	90 e0       	ldi	r25, 0x00	; 0
   1534e:	8b 59       	subi	r24, 0x9B	; 155
   15350:	9f 4f       	sbci	r25, 0xFF	; 255
   15352:	cd 50       	subi	r28, 0x0D	; 13
   15354:	de 4f       	sbci	r29, 0xFE	; 254
   15356:	99 83       	std	Y+1, r25	; 0x01
   15358:	88 83       	st	Y, r24
   1535a:	c3 5f       	subi	r28, 0xF3	; 243
   1535c:	d1 40       	sbci	r29, 0x01	; 1
   1535e:	ae 01       	movw	r20, r28
   15360:	4d 50       	subi	r20, 0x0D	; 13
   15362:	5e 4f       	sbci	r21, 0xFE	; 254
   15364:	65 ed       	ldi	r22, 0xD5	; 213
   15366:	71 e3       	ldi	r23, 0x31	; 49
   15368:	c8 01       	movw	r24, r16
   1536a:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1536e:	4c ed       	ldi	r20, 0xDC	; 220
   15370:	50 e0       	ldi	r21, 0x00	; 0
   15372:	b7 01       	movw	r22, r14
   15374:	c8 01       	movw	r24, r16
   15376:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1537a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1537e:	81 30       	cpi	r24, 0x01	; 1
   15380:	29 f4       	brne	.+10     	; 0x1538c <_Z12Publish_Datav+0x8b4>
   15382:	b7 01       	movw	r22, r14
   15384:	86 ec       	ldi	r24, 0xC6	; 198
   15386:	94 e1       	ldi	r25, 0x14	; 20
   15388:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1538c:	e2 e6       	ldi	r30, 0x62	; 98
   1538e:	ff e0       	ldi	r31, 0x0F	; 15
   15390:	8e e6       	ldi	r24, 0x6E	; 110
   15392:	df 01       	movw	r26, r30
   15394:	1d 92       	st	X+, r1
   15396:	8a 95       	dec	r24
   15398:	e9 f7       	brne	.-6      	; 0x15394 <_Z12Publish_Datav+0x8bc>
   1539a:	8e ec       	ldi	r24, 0xCE	; 206
   1539c:	93 e1       	ldi	r25, 0x13	; 19
   1539e:	9f 93       	push	r25
   153a0:	8f 93       	push	r24
   153a2:	8b e3       	ldi	r24, 0x3B	; 59
   153a4:	97 e0       	ldi	r25, 0x07	; 7
   153a6:	9f 93       	push	r25
   153a8:	8f 93       	push	r24
   153aa:	ff 93       	push	r31
   153ac:	ef 93       	push	r30
   153ae:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   153b2:	0f 90       	pop	r0
   153b4:	0f 90       	pop	r0
   153b6:	0f 90       	pop	r0
   153b8:	0f 90       	pop	r0
   153ba:	0f 90       	pop	r0
   153bc:	0f 90       	pop	r0
   153be:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   153c2:	88 23       	and	r24, r24
   153c4:	d1 f0       	breq	.+52     	; 0x153fa <_Z12Publish_Datav+0x922>
   153c6:	b7 01       	movw	r22, r14
   153c8:	82 e6       	ldi	r24, 0x62	; 98
   153ca:	9f e0       	ldi	r25, 0x0F	; 15
   153cc:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   153d0:	88 23       	and	r24, r24
   153d2:	69 f0       	breq	.+26     	; 0x153ee <_Z12Publish_Datav+0x916>
   153d4:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   153d8:	bb e1       	ldi	r27, 0x1B	; 27
   153da:	8b 9f       	mul	r24, r27
   153dc:	f0 01       	movw	r30, r0
   153de:	11 24       	eor	r1, r1
   153e0:	e8 51       	subi	r30, 0x18	; 24
   153e2:	f2 4f       	sbci	r31, 0xF2	; 242
   153e4:	12 8e       	std	Z+26, r1	; 0x1a
   153e6:	8f 5f       	subi	r24, 0xFF	; 255
   153e8:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   153ec:	06 c0       	rjmp	.+12     	; 0x153fa <_Z12Publish_Datav+0x922>
   153ee:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   153f2:	81 50       	subi	r24, 0x01	; 1
   153f4:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   153f8:	e2 cf       	rjmp	.-60     	; 0x153be <_Z12Publish_Datav+0x8e6>
   153fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   153fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15402:	9f 7e       	andi	r25, 0xEF	; 239
   15404:	aa cc       	rjmp	.-1708   	; 0x14d5a <_Z12Publish_Datav+0x282>
   15406:	95 ff       	sbrs	r25, 5
   15408:	4c c1       	rjmp	.+664    	; 0x156a2 <_Z12Publish_Datav+0xbca>
   1540a:	6e 01       	movw	r12, r28
   1540c:	e9 ee       	ldi	r30, 0xE9	; 233
   1540e:	ce 1a       	sub	r12, r30
   15410:	ee ef       	ldi	r30, 0xFE	; 254
   15412:	de 0a       	sbc	r13, r30
   15414:	8c ed       	ldi	r24, 0xDC	; 220
   15416:	d6 01       	movw	r26, r12
   15418:	1d 92       	st	X+, r1
   1541a:	8a 95       	dec	r24
   1541c:	e9 f7       	brne	.-6      	; 0x15418 <_Z12Publish_Datav+0x940>
   1541e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15422:	81 30       	cpi	r24, 0x01	; 1
   15424:	31 f4       	brne	.+12     	; 0x15432 <_Z12Publish_Datav+0x95a>
   15426:	62 ec       	ldi	r22, 0xC2	; 194
   15428:	71 e3       	ldi	r23, 0x31	; 49
   1542a:	86 ec       	ldi	r24, 0xC6	; 198
   1542c:	94 e1       	ldi	r25, 0x14	; 20
   1542e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   15432:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15436:	90 e0       	ldi	r25, 0x00	; 0
   15438:	8b 59       	subi	r24, 0x9B	; 155
   1543a:	9f 4f       	sbci	r25, 0xFF	; 255
   1543c:	cd 50       	subi	r28, 0x0D	; 13
   1543e:	de 4f       	sbci	r29, 0xFE	; 254
   15440:	99 83       	std	Y+1, r25	; 0x01
   15442:	88 83       	st	Y, r24
   15444:	c3 5f       	subi	r28, 0xF3	; 243
   15446:	d1 40       	sbci	r29, 0x01	; 1
   15448:	ae 01       	movw	r20, r28
   1544a:	4d 50       	subi	r20, 0x0D	; 13
   1544c:	5e 4f       	sbci	r21, 0xFE	; 254
   1544e:	6e eb       	ldi	r22, 0xBE	; 190
   15450:	71 e3       	ldi	r23, 0x31	; 49
   15452:	c8 01       	movw	r24, r16
   15454:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15458:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   1545c:	6b e1       	ldi	r22, 0x1B	; 27
   1545e:	f6 2e       	mov	r15, r22
   15460:	fe 9e       	mul	r15, r30
   15462:	f0 01       	movw	r30, r0
   15464:	11 24       	eor	r1, r1
   15466:	e8 51       	subi	r30, 0x18	; 24
   15468:	f2 4f       	sbci	r31, 0xF2	; 242
   1546a:	92 81       	ldd	r25, Z+2	; 0x02
   1546c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15470:	91 30       	cpi	r25, 0x01	; 1
   15472:	b9 f5       	brne	.+110    	; 0x154e2 <_Z12Publish_Datav+0xa0a>
   15474:	91 8d       	ldd	r25, Z+25	; 0x19
   15476:	91 11       	cpse	r25, r1
   15478:	34 c0       	rjmp	.+104    	; 0x154e2 <_Z12Publish_Datav+0xa0a>
   1547a:	81 30       	cpi	r24, 0x01	; 1
   1547c:	31 f5       	brne	.+76     	; 0x154ca <_Z12Publish_Datav+0x9f2>
   1547e:	6d e9       	ldi	r22, 0x9D	; 157
   15480:	71 e3       	ldi	r23, 0x31	; 49
   15482:	86 ec       	ldi	r24, 0xC6	; 198
   15484:	94 e1       	ldi	r25, 0x14	; 20
   15486:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1548a:	86 ec       	ldi	r24, 0xC6	; 198
   1548c:	94 e1       	ldi	r25, 0x14	; 20
   1548e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   15492:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15496:	fe 9e       	mul	r15, r30
   15498:	f0 01       	movw	r30, r0
   1549a:	11 24       	eor	r1, r1
   1549c:	e8 51       	subi	r30, 0x18	; 24
   1549e:	f2 4f       	sbci	r31, 0xF2	; 242
   154a0:	4a e0       	ldi	r20, 0x0A	; 10
   154a2:	50 e0       	ldi	r21, 0x00	; 0
   154a4:	62 81       	ldd	r22, Z+2	; 0x02
   154a6:	86 ec       	ldi	r24, 0xC6	; 198
   154a8:	94 e1       	ldi	r25, 0x14	; 20
   154aa:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   154ae:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   154b2:	fe 9e       	mul	r15, r30
   154b4:	f0 01       	movw	r30, r0
   154b6:	11 24       	eor	r1, r1
   154b8:	e8 51       	subi	r30, 0x18	; 24
   154ba:	f2 4f       	sbci	r31, 0xF2	; 242
   154bc:	4a e0       	ldi	r20, 0x0A	; 10
   154be:	50 e0       	ldi	r21, 0x00	; 0
   154c0:	61 8d       	ldd	r22, Z+25	; 0x19
   154c2:	86 ec       	ldi	r24, 0xC6	; 198
   154c4:	94 e1       	ldi	r25, 0x14	; 20
   154c6:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   154ca:	cd 50       	subi	r28, 0x0D	; 13
   154cc:	de 4f       	sbci	r29, 0xFE	; 254
   154ce:	19 82       	std	Y+1, r1	; 0x01
   154d0:	18 82       	st	Y, r1
   154d2:	c3 5f       	subi	r28, 0xF3	; 243
   154d4:	d1 40       	sbci	r29, 0x01	; 1
   154d6:	ae 01       	movw	r20, r28
   154d8:	4d 50       	subi	r20, 0x0D	; 13
   154da:	5e 4f       	sbci	r21, 0xFE	; 254
   154dc:	66 e9       	ldi	r22, 0x96	; 150
   154de:	71 e3       	ldi	r23, 0x31	; 49
   154e0:	37 c0       	rjmp	.+110    	; 0x15550 <_Z12Publish_Datav+0xa78>
   154e2:	81 30       	cpi	r24, 0x01	; 1
   154e4:	41 f5       	brne	.+80     	; 0x15536 <_Z12Publish_Datav+0xa5e>
   154e6:	64 e7       	ldi	r22, 0x74	; 116
   154e8:	71 e3       	ldi	r23, 0x31	; 49
   154ea:	86 ec       	ldi	r24, 0xC6	; 198
   154ec:	94 e1       	ldi	r25, 0x14	; 20
   154ee:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   154f2:	86 ec       	ldi	r24, 0xC6	; 198
   154f4:	94 e1       	ldi	r25, 0x14	; 20
   154f6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   154fa:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   154fe:	5b e1       	ldi	r21, 0x1B	; 27
   15500:	f5 2e       	mov	r15, r21
   15502:	fe 9e       	mul	r15, r30
   15504:	f0 01       	movw	r30, r0
   15506:	11 24       	eor	r1, r1
   15508:	e8 51       	subi	r30, 0x18	; 24
   1550a:	f2 4f       	sbci	r31, 0xF2	; 242
   1550c:	4a e0       	ldi	r20, 0x0A	; 10
   1550e:	50 e0       	ldi	r21, 0x00	; 0
   15510:	62 81       	ldd	r22, Z+2	; 0x02
   15512:	86 ec       	ldi	r24, 0xC6	; 198
   15514:	94 e1       	ldi	r25, 0x14	; 20
   15516:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1551a:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   1551e:	fe 9e       	mul	r15, r30
   15520:	f0 01       	movw	r30, r0
   15522:	11 24       	eor	r1, r1
   15524:	e8 51       	subi	r30, 0x18	; 24
   15526:	f2 4f       	sbci	r31, 0xF2	; 242
   15528:	4a e0       	ldi	r20, 0x0A	; 10
   1552a:	50 e0       	ldi	r21, 0x00	; 0
   1552c:	61 8d       	ldd	r22, Z+25	; 0x19
   1552e:	86 ec       	ldi	r24, 0xC6	; 198
   15530:	94 e1       	ldi	r25, 0x14	; 20
   15532:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   15536:	81 e0       	ldi	r24, 0x01	; 1
   15538:	90 e0       	ldi	r25, 0x00	; 0
   1553a:	cd 50       	subi	r28, 0x0D	; 13
   1553c:	de 4f       	sbci	r29, 0xFE	; 254
   1553e:	99 83       	std	Y+1, r25	; 0x01
   15540:	88 83       	st	Y, r24
   15542:	c3 5f       	subi	r28, 0xF3	; 243
   15544:	d1 40       	sbci	r29, 0x01	; 1
   15546:	ae 01       	movw	r20, r28
   15548:	4d 50       	subi	r20, 0x0D	; 13
   1554a:	5e 4f       	sbci	r21, 0xFE	; 254
   1554c:	6d e6       	ldi	r22, 0x6D	; 109
   1554e:	71 e3       	ldi	r23, 0x31	; 49
   15550:	c8 01       	movw	r24, r16
   15552:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15556:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   1555a:	8e ef       	ldi	r24, 0xFE	; 254
   1555c:	8e 0f       	add	r24, r30
   1555e:	88 30       	cpi	r24, 0x08	; 8
   15560:	08 f4       	brcc	.+2      	; 0x15564 <_Z12Publish_Datav+0xa8c>
   15562:	5c c0       	rjmp	.+184    	; 0x1561c <_Z12Publish_Datav+0xb44>
   15564:	bb e1       	ldi	r27, 0x1B	; 27
   15566:	eb 9f       	mul	r30, r27
   15568:	f0 01       	movw	r30, r0
   1556a:	11 24       	eor	r1, r1
   1556c:	e8 51       	subi	r30, 0x18	; 24
   1556e:	f2 4f       	sbci	r31, 0xF2	; 242
   15570:	82 81       	ldd	r24, Z+2	; 0x02
   15572:	85 30       	cpi	r24, 0x05	; 5
   15574:	71 f4       	brne	.+28     	; 0x15592 <_Z12Publish_Datav+0xaba>
   15576:	cd 50       	subi	r28, 0x0D	; 13
   15578:	de 4f       	sbci	r29, 0xFE	; 254
   1557a:	19 82       	std	Y+1, r1	; 0x01
   1557c:	18 82       	st	Y, r1
   1557e:	c3 5f       	subi	r28, 0xF3	; 243
   15580:	d1 40       	sbci	r29, 0x01	; 1
   15582:	ae 01       	movw	r20, r28
   15584:	4d 50       	subi	r20, 0x0D	; 13
   15586:	5e 4f       	sbci	r21, 0xFE	; 254
   15588:	66 e6       	ldi	r22, 0x66	; 102
   1558a:	71 e3       	ldi	r23, 0x31	; 49
   1558c:	c8 01       	movw	r24, r16
   1558e:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15592:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15596:	2b e1       	ldi	r18, 0x1B	; 27
   15598:	e2 9f       	mul	r30, r18
   1559a:	f0 01       	movw	r30, r0
   1559c:	11 24       	eor	r1, r1
   1559e:	e8 51       	subi	r30, 0x18	; 24
   155a0:	f2 4f       	sbci	r31, 0xF2	; 242
   155a2:	82 81       	ldd	r24, Z+2	; 0x02
   155a4:	84 30       	cpi	r24, 0x04	; 4
   155a6:	81 f4       	brne	.+32     	; 0x155c8 <_Z12Publish_Datav+0xaf0>
   155a8:	81 e0       	ldi	r24, 0x01	; 1
   155aa:	90 e0       	ldi	r25, 0x00	; 0
   155ac:	cd 50       	subi	r28, 0x0D	; 13
   155ae:	de 4f       	sbci	r29, 0xFE	; 254
   155b0:	99 83       	std	Y+1, r25	; 0x01
   155b2:	88 83       	st	Y, r24
   155b4:	c3 5f       	subi	r28, 0xF3	; 243
   155b6:	d1 40       	sbci	r29, 0x01	; 1
   155b8:	ae 01       	movw	r20, r28
   155ba:	4d 50       	subi	r20, 0x0D	; 13
   155bc:	5e 4f       	sbci	r21, 0xFE	; 254
   155be:	6f e5       	ldi	r22, 0x5F	; 95
   155c0:	71 e3       	ldi	r23, 0x31	; 49
   155c2:	c8 01       	movw	r24, r16
   155c4:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   155c8:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   155cc:	81 30       	cpi	r24, 0x01	; 1
   155ce:	31 f5       	brne	.+76     	; 0x1561c <_Z12Publish_Datav+0xb44>
   155d0:	e0 91 08 0e 	lds	r30, 0x0E08	; 0x800e08 <_sExtra_Plot+0x20>
   155d4:	f0 e0       	ldi	r31, 0x00	; 0
   155d6:	e7 5c       	subi	r30, 0xC7	; 199
   155d8:	fb 4e       	sbci	r31, 0xEB	; 235
   155da:	80 81       	ld	r24, Z
   155dc:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   155e0:	89 2b       	or	r24, r25
   155e2:	61 f0       	breq	.+24     	; 0x155fc <_Z12Publish_Datav+0xb24>
   155e4:	cd 50       	subi	r28, 0x0D	; 13
   155e6:	de 4f       	sbci	r29, 0xFE	; 254
   155e8:	19 82       	std	Y+1, r1	; 0x01
   155ea:	18 82       	st	Y, r1
   155ec:	c3 5f       	subi	r28, 0xF3	; 243
   155ee:	d1 40       	sbci	r29, 0x01	; 1
   155f0:	ae 01       	movw	r20, r28
   155f2:	4d 50       	subi	r20, 0x0D	; 13
   155f4:	5e 4f       	sbci	r21, 0xFE	; 254
   155f6:	68 e5       	ldi	r22, 0x58	; 88
   155f8:	71 e3       	ldi	r23, 0x31	; 49
   155fa:	0d c0       	rjmp	.+26     	; 0x15616 <_Z12Publish_Datav+0xb3e>
   155fc:	81 e0       	ldi	r24, 0x01	; 1
   155fe:	90 e0       	ldi	r25, 0x00	; 0
   15600:	cd 50       	subi	r28, 0x0D	; 13
   15602:	de 4f       	sbci	r29, 0xFE	; 254
   15604:	99 83       	std	Y+1, r25	; 0x01
   15606:	88 83       	st	Y, r24
   15608:	c3 5f       	subi	r28, 0xF3	; 243
   1560a:	d1 40       	sbci	r29, 0x01	; 1
   1560c:	ae 01       	movw	r20, r28
   1560e:	4d 50       	subi	r20, 0x0D	; 13
   15610:	5e 4f       	sbci	r21, 0xFE	; 254
   15612:	61 e5       	ldi	r22, 0x51	; 81
   15614:	71 e3       	ldi	r23, 0x31	; 49
   15616:	c8 01       	movw	r24, r16
   15618:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1561c:	4c ed       	ldi	r20, 0xDC	; 220
   1561e:	50 e0       	ldi	r21, 0x00	; 0
   15620:	b6 01       	movw	r22, r12
   15622:	c8 01       	movw	r24, r16
   15624:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15628:	e2 e6       	ldi	r30, 0x62	; 98
   1562a:	ff e0       	ldi	r31, 0x0F	; 15
   1562c:	8e e6       	ldi	r24, 0x6E	; 110
   1562e:	df 01       	movw	r26, r30
   15630:	1d 92       	st	X+, r1
   15632:	8a 95       	dec	r24
   15634:	e9 f7       	brne	.-6      	; 0x15630 <_Z12Publish_Datav+0xb58>
   15636:	8e ec       	ldi	r24, 0xCE	; 206
   15638:	93 e1       	ldi	r25, 0x13	; 19
   1563a:	9f 93       	push	r25
   1563c:	8f 93       	push	r24
   1563e:	8d e9       	ldi	r24, 0x9D	; 157
   15640:	97 e0       	ldi	r25, 0x07	; 7
   15642:	9f 93       	push	r25
   15644:	8f 93       	push	r24
   15646:	ff 93       	push	r31
   15648:	ef 93       	push	r30
   1564a:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   1564e:	0f 90       	pop	r0
   15650:	0f 90       	pop	r0
   15652:	0f 90       	pop	r0
   15654:	0f 90       	pop	r0
   15656:	0f 90       	pop	r0
   15658:	0f 90       	pop	r0
   1565a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1565e:	88 23       	and	r24, r24
   15660:	d1 f0       	breq	.+52     	; 0x15696 <_Z12Publish_Datav+0xbbe>
   15662:	b6 01       	movw	r22, r12
   15664:	82 e6       	ldi	r24, 0x62	; 98
   15666:	9f e0       	ldi	r25, 0x0F	; 15
   15668:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   1566c:	88 23       	and	r24, r24
   1566e:	69 f0       	breq	.+26     	; 0x1568a <_Z12Publish_Datav+0xbb2>
   15670:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15674:	bb e1       	ldi	r27, 0x1B	; 27
   15676:	8b 9f       	mul	r24, r27
   15678:	f0 01       	movw	r30, r0
   1567a:	11 24       	eor	r1, r1
   1567c:	e8 51       	subi	r30, 0x18	; 24
   1567e:	f2 4f       	sbci	r31, 0xF2	; 242
   15680:	12 8e       	std	Z+26, r1	; 0x1a
   15682:	8f 5f       	subi	r24, 0xFF	; 255
   15684:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   15688:	06 c0       	rjmp	.+12     	; 0x15696 <_Z12Publish_Datav+0xbbe>
   1568a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1568e:	81 50       	subi	r24, 0x01	; 1
   15690:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15694:	e2 cf       	rjmp	.-60     	; 0x1565a <_Z12Publish_Datav+0xb82>
   15696:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1569a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1569e:	9f 7d       	andi	r25, 0xDF	; 223
   156a0:	5c cb       	rjmp	.-2376   	; 0x14d5a <_Z12Publish_Datav+0x282>
   156a2:	82 ff       	sbrs	r24, 2
   156a4:	b0 c1       	rjmp	.+864    	; 0x15a06 <_Z12Publish_Datav+0xf2e>
   156a6:	7e 01       	movw	r14, r28
   156a8:	e9 ee       	ldi	r30, 0xE9	; 233
   156aa:	ee 1a       	sub	r14, r30
   156ac:	ee ef       	ldi	r30, 0xFE	; 254
   156ae:	fe 0a       	sbc	r15, r30
   156b0:	8c ed       	ldi	r24, 0xDC	; 220
   156b2:	d7 01       	movw	r26, r14
   156b4:	1d 92       	st	X+, r1
   156b6:	8a 95       	dec	r24
   156b8:	e9 f7       	brne	.-6      	; 0x156b4 <_Z12Publish_Datav+0xbdc>
   156ba:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   156be:	81 11       	cpse	r24, r1
   156c0:	4e c0       	rjmp	.+156    	; 0x1575e <_Z12Publish_Datav+0xc86>
   156c2:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   156c6:	88 23       	and	r24, r24
   156c8:	09 f4       	brne	.+2      	; 0x156cc <_Z12Publish_Datav+0xbf4>
   156ca:	43 c0       	rjmp	.+134    	; 0x15752 <_Z12Publish_Datav+0xc7a>
   156cc:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   156d0:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   156d4:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   156d8:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   156dc:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   156e0:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   156e4:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   156e8:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   156ec:	29 2d       	mov	r18, r9
   156ee:	3a 2d       	mov	r19, r10
   156f0:	4b 2d       	mov	r20, r11
   156f2:	5c 2d       	mov	r21, r12
   156f4:	6d 2d       	mov	r22, r13
   156f6:	7b 2f       	mov	r23, r27
   156f8:	8f 2f       	mov	r24, r31
   156fa:	9e 2f       	mov	r25, r30
   156fc:	a2 e0       	ldi	r26, 0x02	; 2
   156fe:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   15702:	81 f0       	breq	.+32     	; 0x15724 <_Z12Publish_Datav+0xc4c>
   15704:	a4 e0       	ldi	r26, 0x04	; 4
   15706:	cd 50       	subi	r28, 0x0D	; 13
   15708:	de 4f       	sbci	r29, 0xFE	; 254
   1570a:	19 82       	std	Y+1, r1	; 0x01
   1570c:	18 82       	st	Y, r1
   1570e:	c3 5f       	subi	r28, 0xF3	; 243
   15710:	d1 40       	sbci	r29, 0x01	; 1
   15712:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   15716:	a1 f4       	brne	.+40     	; 0x15740 <_Z12Publish_Datav+0xc68>
   15718:	ae 01       	movw	r20, r28
   1571a:	4d 50       	subi	r20, 0x0D	; 13
   1571c:	5e 4f       	sbci	r21, 0xFE	; 254
   1571e:	69 e4       	ldi	r22, 0x49	; 73
   15720:	71 e3       	ldi	r23, 0x31	; 49
   15722:	13 c0       	rjmp	.+38     	; 0x1574a <_Z12Publish_Datav+0xc72>
   15724:	81 e0       	ldi	r24, 0x01	; 1
   15726:	90 e0       	ldi	r25, 0x00	; 0
   15728:	cd 50       	subi	r28, 0x0D	; 13
   1572a:	de 4f       	sbci	r29, 0xFE	; 254
   1572c:	99 83       	std	Y+1, r25	; 0x01
   1572e:	88 83       	st	Y, r24
   15730:	c3 5f       	subi	r28, 0xF3	; 243
   15732:	d1 40       	sbci	r29, 0x01	; 1
   15734:	ae 01       	movw	r20, r28
   15736:	4d 50       	subi	r20, 0x0D	; 13
   15738:	5e 4f       	sbci	r21, 0xFE	; 254
   1573a:	61 e4       	ldi	r22, 0x41	; 65
   1573c:	71 e3       	ldi	r23, 0x31	; 49
   1573e:	05 c0       	rjmp	.+10     	; 0x1574a <_Z12Publish_Datav+0xc72>
   15740:	ae 01       	movw	r20, r28
   15742:	4d 50       	subi	r20, 0x0D	; 13
   15744:	5e 4f       	sbci	r21, 0xFE	; 254
   15746:	69 e3       	ldi	r22, 0x39	; 57
   15748:	71 e3       	ldi	r23, 0x31	; 49
   1574a:	c8 01       	movw	r24, r16
   1574c:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15750:	21 c0       	rjmp	.+66     	; 0x15794 <_Z12Publish_Datav+0xcbc>
   15752:	8a e0       	ldi	r24, 0x0A	; 10
   15754:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   15758:	89 2b       	or	r24, r25
   1575a:	71 f4       	brne	.+28     	; 0x15778 <_Z12Publish_Datav+0xca0>
   1575c:	04 c0       	rjmp	.+8      	; 0x15766 <_Z12Publish_Datav+0xc8e>
   1575e:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   15762:	81 30       	cpi	r24, 0x01	; 1
   15764:	49 f4       	brne	.+18     	; 0x15778 <_Z12Publish_Datav+0xca0>
   15766:	81 e0       	ldi	r24, 0x01	; 1
   15768:	90 e0       	ldi	r25, 0x00	; 0
   1576a:	cd 50       	subi	r28, 0x0D	; 13
   1576c:	de 4f       	sbci	r29, 0xFE	; 254
   1576e:	99 83       	std	Y+1, r25	; 0x01
   15770:	88 83       	st	Y, r24
   15772:	c3 5f       	subi	r28, 0xF3	; 243
   15774:	d1 40       	sbci	r29, 0x01	; 1
   15776:	06 c0       	rjmp	.+12     	; 0x15784 <_Z12Publish_Datav+0xcac>
   15778:	cd 50       	subi	r28, 0x0D	; 13
   1577a:	de 4f       	sbci	r29, 0xFE	; 254
   1577c:	19 82       	std	Y+1, r1	; 0x01
   1577e:	18 82       	st	Y, r1
   15780:	c3 5f       	subi	r28, 0xF3	; 243
   15782:	d1 40       	sbci	r29, 0x01	; 1
   15784:	ae 01       	movw	r20, r28
   15786:	4d 50       	subi	r20, 0x0D	; 13
   15788:	5e 4f       	sbci	r21, 0xFE	; 254
   1578a:	65 e9       	ldi	r22, 0x95	; 149
   1578c:	77 e0       	ldi	r23, 0x07	; 7
   1578e:	c8 01       	movw	r24, r16
   15790:	0e 94 98 8c 	call	0x11930	; 0x11930 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15794:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   15798:	cd 50       	subi	r28, 0x0D	; 13
   1579a:	de 4f       	sbci	r29, 0xFE	; 254
   1579c:	88 83       	st	Y, r24
   1579e:	c3 5f       	subi	r28, 0xF3	; 243
   157a0:	d1 40       	sbci	r29, 0x01	; 1
   157a2:	ae 01       	movw	r20, r28
   157a4:	4d 50       	subi	r20, 0x0D	; 13
   157a6:	5e 4f       	sbci	r21, 0xFE	; 254
   157a8:	64 e3       	ldi	r22, 0x34	; 52
   157aa:	71 e3       	ldi	r23, 0x31	; 49
   157ac:	c8 01       	movw	r24, r16
   157ae:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   157b2:	61 e2       	ldi	r22, 0x21	; 33
   157b4:	71 e3       	ldi	r23, 0x31	; 49
   157b6:	c8 01       	movw	r24, r16
   157b8:	0e 94 17 8b 	call	0x1162e	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   157bc:	6c 01       	movw	r12, r24
   157be:	89 2b       	or	r24, r25
   157c0:	91 f4       	brne	.+36     	; 0x157e6 <_Z12Publish_Datav+0xd0e>
   157c2:	c8 01       	movw	r24, r16
   157c4:	0e 94 3b 8b 	call	0x11676	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   157c8:	6c 01       	movw	r12, r24
   157ca:	00 97       	sbiw	r24, 0x00	; 0
   157cc:	d9 f0       	breq	.+54     	; 0x15804 <_Z12Publish_Datav+0xd2c>
   157ce:	41 e2       	ldi	r20, 0x21	; 33
   157d0:	51 e3       	ldi	r21, 0x31	; 49
   157d2:	bc 01       	movw	r22, r24
   157d4:	6e 5f       	subi	r22, 0xFE	; 254
   157d6:	7f 4f       	sbci	r23, 0xFF	; 255
   157d8:	f8 01       	movw	r30, r16
   157da:	80 81       	ld	r24, Z
   157dc:	91 81       	ldd	r25, Z+1	; 0x01
   157de:	0e 94 5c 8b 	call	0x116b8	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   157e2:	88 23       	and	r24, r24
   157e4:	79 f0       	breq	.+30     	; 0x15804 <_Z12Publish_Datav+0xd2c>
   157e6:	80 91 a8 13 	lds	r24, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
   157ea:	90 91 a9 13 	lds	r25, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
   157ee:	a0 91 aa 13 	lds	r26, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
   157f2:	b0 91 ab 13 	lds	r27, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
   157f6:	28 e0       	ldi	r18, 0x08	; 8
   157f8:	f6 01       	movw	r30, r12
   157fa:	24 83       	std	Z+4, r18	; 0x04
   157fc:	85 83       	std	Z+5, r24	; 0x05
   157fe:	96 83       	std	Z+6, r25	; 0x06
   15800:	a7 83       	std	Z+7, r26	; 0x07
   15802:	b0 87       	std	Z+8, r27	; 0x08
   15804:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   15808:	82 30       	cpi	r24, 0x02	; 2
   1580a:	41 f0       	breq	.+16     	; 0x1581c <_Z12Publish_Datav+0xd44>
   1580c:	4e e1       	ldi	r20, 0x1E	; 30
   1580e:	54 e1       	ldi	r21, 0x14	; 20
   15810:	6c e1       	ldi	r22, 0x1C	; 28
   15812:	71 e3       	ldi	r23, 0x31	; 49
   15814:	c8 01       	movw	r24, r16
   15816:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1581a:	0e c0       	rjmp	.+28     	; 0x15838 <_Z12Publish_Datav+0xd60>
   1581c:	cd 50       	subi	r28, 0x0D	; 13
   1581e:	de 4f       	sbci	r29, 0xFE	; 254
   15820:	19 82       	std	Y+1, r1	; 0x01
   15822:	18 82       	st	Y, r1
   15824:	c3 5f       	subi	r28, 0xF3	; 243
   15826:	d1 40       	sbci	r29, 0x01	; 1
   15828:	ae 01       	movw	r20, r28
   1582a:	4d 50       	subi	r20, 0x0D	; 13
   1582c:	5e 4f       	sbci	r21, 0xFE	; 254
   1582e:	67 e1       	ldi	r22, 0x17	; 23
   15830:	71 e3       	ldi	r23, 0x31	; 49
   15832:	c8 01       	movw	r24, r16
   15834:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15838:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1583c:	85 30       	cpi	r24, 0x05	; 5
   1583e:	09 f0       	breq	.+2      	; 0x15842 <_Z12Publish_Datav+0xd6a>
   15840:	67 c0       	rjmp	.+206    	; 0x15910 <_Z12Publish_Datav+0xe38>
   15842:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   15846:	88 23       	and	r24, r24
   15848:	09 f4       	brne	.+2      	; 0x1584c <_Z12Publish_Datav+0xd74>
   1584a:	48 c0       	rjmp	.+144    	; 0x158dc <_Z12Publish_Datav+0xe04>
   1584c:	6e e0       	ldi	r22, 0x0E	; 14
   1584e:	71 e3       	ldi	r23, 0x31	; 49
   15850:	c8 01       	movw	r24, r16
   15852:	0e 94 17 8b 	call	0x1162e	; 0x1162e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   15856:	6c 01       	movw	r12, r24
   15858:	89 2b       	or	r24, r25
   1585a:	91 f4       	brne	.+36     	; 0x15880 <_Z12Publish_Datav+0xda8>
   1585c:	c8 01       	movw	r24, r16
   1585e:	0e 94 3b 8b 	call	0x11676	; 0x11676 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   15862:	6c 01       	movw	r12, r24
   15864:	00 97       	sbiw	r24, 0x00	; 0
   15866:	c1 f0       	breq	.+48     	; 0x15898 <_Z12Publish_Datav+0xdc0>
   15868:	4e e0       	ldi	r20, 0x0E	; 14
   1586a:	51 e3       	ldi	r21, 0x31	; 49
   1586c:	bc 01       	movw	r22, r24
   1586e:	6e 5f       	subi	r22, 0xFE	; 254
   15870:	7f 4f       	sbci	r23, 0xFF	; 255
   15872:	d8 01       	movw	r26, r16
   15874:	8d 91       	ld	r24, X+
   15876:	9c 91       	ld	r25, X
   15878:	0e 94 5c 8b 	call	0x116b8	; 0x116b8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1587c:	88 23       	and	r24, r24
   1587e:	61 f0       	breq	.+24     	; 0x15898 <_Z12Publish_Datav+0xdc0>
   15880:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   15884:	94 e0       	ldi	r25, 0x04	; 4
   15886:	f6 01       	movw	r30, r12
   15888:	94 83       	std	Z+4, r25	; 0x04
   1588a:	90 e0       	ldi	r25, 0x00	; 0
   1588c:	a0 e0       	ldi	r26, 0x00	; 0
   1588e:	b0 e0       	ldi	r27, 0x00	; 0
   15890:	85 83       	std	Z+5, r24	; 0x05
   15892:	96 83       	std	Z+6, r25	; 0x06
   15894:	a7 83       	std	Z+7, r26	; 0x07
   15896:	b0 87       	std	Z+8, r27	; 0x08
   15898:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
   1589c:	f0 e0       	ldi	r31, 0x00	; 0
   1589e:	ee 0f       	add	r30, r30
   158a0:	ff 1f       	adc	r31, r31
   158a2:	e4 5e       	subi	r30, 0xE4	; 228
   158a4:	f6 4f       	sbci	r31, 0xF6	; 246
   158a6:	87 8d       	ldd	r24, Z+31	; 0x1f
   158a8:	90 a1       	ldd	r25, Z+32	; 0x20
   158aa:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
   158ae:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
   158b2:	82 1b       	sub	r24, r18
   158b4:	93 0b       	sbc	r25, r19
   158b6:	6c e3       	ldi	r22, 0x3C	; 60
   158b8:	70 e0       	ldi	r23, 0x00	; 0
   158ba:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   158be:	cd 50       	subi	r28, 0x0D	; 13
   158c0:	de 4f       	sbci	r29, 0xFE	; 254
   158c2:	79 83       	std	Y+1, r23	; 0x01
   158c4:	68 83       	st	Y, r22
   158c6:	c3 5f       	subi	r28, 0xF3	; 243
   158c8:	d1 40       	sbci	r29, 0x01	; 1
   158ca:	ae 01       	movw	r20, r28
   158cc:	4d 50       	subi	r20, 0x0D	; 13
   158ce:	5e 4f       	sbci	r21, 0xFE	; 254
   158d0:	6f ef       	ldi	r22, 0xFF	; 255
   158d2:	70 e3       	ldi	r23, 0x30	; 48
   158d4:	c8 01       	movw	r24, r16
   158d6:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   158da:	36 c0       	rjmp	.+108    	; 0x15948 <_Z12Publish_Datav+0xe70>
   158dc:	cd 50       	subi	r28, 0x0D	; 13
   158de:	de 4f       	sbci	r29, 0xFE	; 254
   158e0:	19 82       	std	Y+1, r1	; 0x01
   158e2:	18 82       	st	Y, r1
   158e4:	c3 5f       	subi	r28, 0xF3	; 243
   158e6:	d1 40       	sbci	r29, 0x01	; 1
   158e8:	ae 01       	movw	r20, r28
   158ea:	4d 50       	subi	r20, 0x0D	; 13
   158ec:	5e 4f       	sbci	r21, 0xFE	; 254
   158ee:	66 ef       	ldi	r22, 0xF6	; 246
   158f0:	70 e3       	ldi	r23, 0x30	; 48
   158f2:	c8 01       	movw	r24, r16
   158f4:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   158f8:	cd 50       	subi	r28, 0x0D	; 13
   158fa:	de 4f       	sbci	r29, 0xFE	; 254
   158fc:	19 82       	std	Y+1, r1	; 0x01
   158fe:	18 82       	st	Y, r1
   15900:	c3 5f       	subi	r28, 0xF3	; 243
   15902:	d1 40       	sbci	r29, 0x01	; 1
   15904:	ae 01       	movw	r20, r28
   15906:	4d 50       	subi	r20, 0x0D	; 13
   15908:	5e 4f       	sbci	r21, 0xFE	; 254
   1590a:	67 ee       	ldi	r22, 0xE7	; 231
   1590c:	70 e3       	ldi	r23, 0x30	; 48
   1590e:	19 c0       	rjmp	.+50     	; 0x15942 <_Z12Publish_Datav+0xe6a>
   15910:	cd 50       	subi	r28, 0x0D	; 13
   15912:	de 4f       	sbci	r29, 0xFE	; 254
   15914:	19 82       	std	Y+1, r1	; 0x01
   15916:	18 82       	st	Y, r1
   15918:	c3 5f       	subi	r28, 0xF3	; 243
   1591a:	d1 40       	sbci	r29, 0x01	; 1
   1591c:	ae 01       	movw	r20, r28
   1591e:	4d 50       	subi	r20, 0x0D	; 13
   15920:	5e 4f       	sbci	r21, 0xFE	; 254
   15922:	6e ed       	ldi	r22, 0xDE	; 222
   15924:	70 e3       	ldi	r23, 0x30	; 48
   15926:	c8 01       	movw	r24, r16
   15928:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1592c:	cd 50       	subi	r28, 0x0D	; 13
   1592e:	de 4f       	sbci	r29, 0xFE	; 254
   15930:	19 82       	std	Y+1, r1	; 0x01
   15932:	18 82       	st	Y, r1
   15934:	c3 5f       	subi	r28, 0xF3	; 243
   15936:	d1 40       	sbci	r29, 0x01	; 1
   15938:	ae 01       	movw	r20, r28
   1593a:	4d 50       	subi	r20, 0x0D	; 13
   1593c:	5e 4f       	sbci	r21, 0xFE	; 254
   1593e:	6f ec       	ldi	r22, 0xCF	; 207
   15940:	70 e3       	ldi	r23, 0x30	; 48
   15942:	c8 01       	movw	r24, r16
   15944:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15948:	48 e9       	ldi	r20, 0x98	; 152
   1594a:	54 e1       	ldi	r21, 0x14	; 20
   1594c:	66 ec       	ldi	r22, 0xC6	; 198
   1594e:	70 e3       	ldi	r23, 0x30	; 48
   15950:	c8 01       	movw	r24, r16
   15952:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15956:	40 e7       	ldi	r20, 0x70	; 112
   15958:	54 e1       	ldi	r21, 0x14	; 20
   1595a:	6a eb       	ldi	r22, 0xBA	; 186
   1595c:	70 e3       	ldi	r23, 0x30	; 48
   1595e:	c8 01       	movw	r24, r16
   15960:	0e 94 3b 8c 	call	0x11876	; 0x11876 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15964:	4c ed       	ldi	r20, 0xDC	; 220
   15966:	50 e0       	ldi	r21, 0x00	; 0
   15968:	b7 01       	movw	r22, r14
   1596a:	c8 01       	movw	r24, r16
   1596c:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15970:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15974:	81 30       	cpi	r24, 0x01	; 1
   15976:	31 f4       	brne	.+12     	; 0x15984 <_Z12Publish_Datav+0xeac>
   15978:	60 ed       	ldi	r22, 0xD0	; 208
   1597a:	7f e0       	ldi	r23, 0x0F	; 15
   1597c:	86 ec       	ldi	r24, 0xC6	; 198
   1597e:	94 e1       	ldi	r25, 0x14	; 20
   15980:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   15984:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15988:	8f 5f       	subi	r24, 0xFF	; 255
   1598a:	80 93 e2 0d 	sts	0x0DE2, r24	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1598e:	e2 e6       	ldi	r30, 0x62	; 98
   15990:	ff e0       	ldi	r31, 0x0F	; 15
   15992:	8e e6       	ldi	r24, 0x6E	; 110
   15994:	df 01       	movw	r26, r30
   15996:	1d 92       	st	X+, r1
   15998:	8a 95       	dec	r24
   1599a:	e9 f7       	brne	.-6      	; 0x15996 <_Z12Publish_Datav+0xebe>
   1599c:	8e ec       	ldi	r24, 0xCE	; 206
   1599e:	93 e1       	ldi	r25, 0x13	; 19
   159a0:	9f 93       	push	r25
   159a2:	8f 93       	push	r24
   159a4:	86 eb       	ldi	r24, 0xB6	; 182
   159a6:	97 e0       	ldi	r25, 0x07	; 7
   159a8:	9f 93       	push	r25
   159aa:	8f 93       	push	r24
   159ac:	ff 93       	push	r31
   159ae:	ef 93       	push	r30
   159b0:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   159b4:	0f 90       	pop	r0
   159b6:	0f 90       	pop	r0
   159b8:	0f 90       	pop	r0
   159ba:	0f 90       	pop	r0
   159bc:	0f 90       	pop	r0
   159be:	0f 90       	pop	r0
   159c0:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   159c4:	88 23       	and	r24, r24
   159c6:	81 f0       	breq	.+32     	; 0x159e8 <_Z12Publish_Datav+0xf10>
   159c8:	b7 01       	movw	r22, r14
   159ca:	82 e6       	ldi	r24, 0x62	; 98
   159cc:	9f e0       	ldi	r25, 0x0F	; 15
   159ce:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   159d2:	88 23       	and	r24, r24
   159d4:	19 f0       	breq	.+6      	; 0x159dc <_Z12Publish_Datav+0xf04>
   159d6:	10 92 e2 0d 	sts	0x0DE2, r1	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   159da:	06 c0       	rjmp	.+12     	; 0x159e8 <_Z12Publish_Datav+0xf10>
   159dc:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   159e0:	81 50       	subi	r24, 0x01	; 1
   159e2:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   159e6:	ec cf       	rjmp	.-40     	; 0x159c0 <_Z12Publish_Datav+0xee8>
   159e8:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   159ec:	84 30       	cpi	r24, 0x04	; 4
   159ee:	28 f0       	brcs	.+10     	; 0x159fa <_Z12Publish_Datav+0xf22>
   159f0:	82 e0       	ldi	r24, 0x02	; 2
   159f2:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   159f6:	0e 94 59 81 	call	0x102b2	; 0x102b2 <_Z14Ping_to_Serverv>
   159fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   159fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15a02:	8b 7f       	andi	r24, 0xFB	; 251
   15a04:	aa c9       	rjmp	.-3244   	; 0x14d5a <_Z12Publish_Datav+0x282>
   15a06:	80 91 e0 0d 	lds	r24, 0x0DE0	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15a0a:	90 91 e1 0d 	lds	r25, 0x0DE1	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15a0e:	00 97       	sbiw	r24, 0x00	; 0
   15a10:	09 f0       	breq	.+2      	; 0x15a14 <_Z12Publish_Datav+0xf3c>
   15a12:	42 c2       	rjmp	.+1156   	; 0x15e98 <_Z12Publish_Datav+0x13c0>
   15a14:	38 ee       	ldi	r19, 0xE8	; 232
   15a16:	c3 2e       	mov	r12, r19
   15a18:	3d e0       	ldi	r19, 0x0D	; 13
   15a1a:	d3 2e       	mov	r13, r19
   15a1c:	e1 2c       	mov	r14, r1
   15a1e:	f1 2c       	mov	r15, r1
   15a20:	7e 2c       	mov	r7, r14
   15a22:	f6 01       	movw	r30, r12
   15a24:	81 81       	ldd	r24, Z+1	; 0x01
   15a26:	85 36       	cpi	r24, 0x65	; 101
   15a28:	08 f4       	brcc	.+2      	; 0x15a2c <_Z12Publish_Datav+0xf54>
   15a2a:	2a c2       	rjmp	.+1108   	; 0x15e80 <_Z12Publish_Datav+0x13a8>
   15a2c:	62 8d       	ldd	r22, Z+26	; 0x1a
   15a2e:	66 23       	and	r22, r22
   15a30:	09 f4       	brne	.+2      	; 0x15a34 <_Z12Publish_Datav+0xf5c>
   15a32:	26 c2       	rjmp	.+1100   	; 0x15e80 <_Z12Publish_Datav+0x13a8>
   15a34:	4a e0       	ldi	r20, 0x0A	; 10
   15a36:	50 e0       	ldi	r21, 0x00	; 0
   15a38:	86 ec       	ldi	r24, 0xC6	; 198
   15a3a:	94 e1       	ldi	r25, 0x14	; 20
   15a3c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   15a40:	d6 01       	movw	r26, r12
   15a42:	5a 96       	adiw	r26, 0x1a	; 26
   15a44:	8c 91       	ld	r24, X
   15a46:	81 30       	cpi	r24, 0x01	; 1
   15a48:	09 f4       	brne	.+2      	; 0x15a4c <_Z12Publish_Datav+0xf74>
   15a4a:	f8 c0       	rjmp	.+496    	; 0x15c3c <_Z12Publish_Datav+0x1164>
   15a4c:	82 30       	cpi	r24, 0x02	; 2
   15a4e:	09 f0       	breq	.+2      	; 0x15a52 <_Z12Publish_Datav+0xf7a>
   15a50:	17 c2       	rjmp	.+1070   	; 0x15e80 <_Z12Publish_Datav+0x13a8>
   15a52:	6e 01       	movw	r12, r28
   15a54:	b9 ee       	ldi	r27, 0xE9	; 233
   15a56:	cb 1a       	sub	r12, r27
   15a58:	be ef       	ldi	r27, 0xFE	; 254
   15a5a:	db 0a       	sbc	r13, r27
   15a5c:	8c ed       	ldi	r24, 0xDC	; 220
   15a5e:	f6 01       	movw	r30, r12
   15a60:	11 92       	st	Z+, r1
   15a62:	8a 95       	dec	r24
   15a64:	e9 f7       	brne	.-6      	; 0x15a60 <_Z12Publish_Datav+0xf88>
   15a66:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15a6a:	81 30       	cpi	r24, 0x01	; 1
   15a6c:	51 f4       	brne	.+20     	; 0x15a82 <_Z12Publish_Datav+0xfaa>
   15a6e:	6f e9       	ldi	r22, 0x9F	; 159
   15a70:	70 e3       	ldi	r23, 0x30	; 48
   15a72:	86 ec       	ldi	r24, 0xC6	; 198
   15a74:	94 e1       	ldi	r25, 0x14	; 20
   15a76:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   15a7a:	86 ec       	ldi	r24, 0xC6	; 198
   15a7c:	94 e1       	ldi	r25, 0x14	; 20
   15a7e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   15a82:	c7 01       	movw	r24, r14
   15a84:	8b 59       	subi	r24, 0x9B	; 155
   15a86:	9f 4f       	sbci	r25, 0xFF	; 255
   15a88:	cd 50       	subi	r28, 0x0D	; 13
   15a8a:	de 4f       	sbci	r29, 0xFE	; 254
   15a8c:	99 83       	std	Y+1, r25	; 0x01
   15a8e:	88 83       	st	Y, r24
   15a90:	c3 5f       	subi	r28, 0xF3	; 243
   15a92:	d1 40       	sbci	r29, 0x01	; 1
   15a94:	ae 01       	movw	r20, r28
   15a96:	4d 50       	subi	r20, 0x0D	; 13
   15a98:	5e 4f       	sbci	r21, 0xFE	; 254
   15a9a:	6b e9       	ldi	r22, 0x9B	; 155
   15a9c:	70 e3       	ldi	r23, 0x30	; 48
   15a9e:	c8 01       	movw	r24, r16
   15aa0:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15aa4:	8b e1       	ldi	r24, 0x1B	; 27
   15aa6:	8e 9d       	mul	r24, r14
   15aa8:	f0 01       	movw	r30, r0
   15aaa:	8f 9d       	mul	r24, r15
   15aac:	f0 0d       	add	r31, r0
   15aae:	11 24       	eor	r1, r1
   15ab0:	e8 51       	subi	r30, 0x18	; 24
   15ab2:	f2 4f       	sbci	r31, 0xF2	; 242
   15ab4:	82 81       	ldd	r24, Z+2	; 0x02
   15ab6:	81 30       	cpi	r24, 0x01	; 1
   15ab8:	79 f4       	brne	.+30     	; 0x15ad8 <_Z12Publish_Datav+0x1000>
   15aba:	81 8d       	ldd	r24, Z+25	; 0x19
   15abc:	81 11       	cpse	r24, r1
   15abe:	0c c0       	rjmp	.+24     	; 0x15ad8 <_Z12Publish_Datav+0x1000>
   15ac0:	cd 50       	subi	r28, 0x0D	; 13
   15ac2:	de 4f       	sbci	r29, 0xFE	; 254
   15ac4:	19 82       	std	Y+1, r1	; 0x01
   15ac6:	18 82       	st	Y, r1
   15ac8:	c3 5f       	subi	r28, 0xF3	; 243
   15aca:	d1 40       	sbci	r29, 0x01	; 1
   15acc:	ae 01       	movw	r20, r28
   15ace:	4d 50       	subi	r20, 0x0D	; 13
   15ad0:	5e 4f       	sbci	r21, 0xFE	; 254
   15ad2:	64 e9       	ldi	r22, 0x94	; 148
   15ad4:	70 e3       	ldi	r23, 0x30	; 48
   15ad6:	0d c0       	rjmp	.+26     	; 0x15af2 <_Z12Publish_Datav+0x101a>
   15ad8:	81 e0       	ldi	r24, 0x01	; 1
   15ada:	90 e0       	ldi	r25, 0x00	; 0
   15adc:	cd 50       	subi	r28, 0x0D	; 13
   15ade:	de 4f       	sbci	r29, 0xFE	; 254
   15ae0:	99 83       	std	Y+1, r25	; 0x01
   15ae2:	88 83       	st	Y, r24
   15ae4:	c3 5f       	subi	r28, 0xF3	; 243
   15ae6:	d1 40       	sbci	r29, 0x01	; 1
   15ae8:	ae 01       	movw	r20, r28
   15aea:	4d 50       	subi	r20, 0x0D	; 13
   15aec:	5e 4f       	sbci	r21, 0xFE	; 254
   15aee:	6d e8       	ldi	r22, 0x8D	; 141
   15af0:	70 e3       	ldi	r23, 0x30	; 48
   15af2:	c8 01       	movw	r24, r16
   15af4:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15af8:	8e ef       	ldi	r24, 0xFE	; 254
   15afa:	87 0d       	add	r24, r7
   15afc:	88 30       	cpi	r24, 0x08	; 8
   15afe:	08 f4       	brcc	.+2      	; 0x15b02 <_Z12Publish_Datav+0x102a>
   15b00:	64 c0       	rjmp	.+200    	; 0x15bca <_Z12Publish_Datav+0x10f2>
   15b02:	8b e1       	ldi	r24, 0x1B	; 27
   15b04:	8e 9d       	mul	r24, r14
   15b06:	f0 01       	movw	r30, r0
   15b08:	8f 9d       	mul	r24, r15
   15b0a:	f0 0d       	add	r31, r0
   15b0c:	11 24       	eor	r1, r1
   15b0e:	e8 51       	subi	r30, 0x18	; 24
   15b10:	f2 4f       	sbci	r31, 0xF2	; 242
   15b12:	82 81       	ldd	r24, Z+2	; 0x02
   15b14:	85 30       	cpi	r24, 0x05	; 5
   15b16:	71 f4       	brne	.+28     	; 0x15b34 <_Z12Publish_Datav+0x105c>
   15b18:	cd 50       	subi	r28, 0x0D	; 13
   15b1a:	de 4f       	sbci	r29, 0xFE	; 254
   15b1c:	19 82       	std	Y+1, r1	; 0x01
   15b1e:	18 82       	st	Y, r1
   15b20:	c3 5f       	subi	r28, 0xF3	; 243
   15b22:	d1 40       	sbci	r29, 0x01	; 1
   15b24:	ae 01       	movw	r20, r28
   15b26:	4d 50       	subi	r20, 0x0D	; 13
   15b28:	5e 4f       	sbci	r21, 0xFE	; 254
   15b2a:	66 e8       	ldi	r22, 0x86	; 134
   15b2c:	70 e3       	ldi	r23, 0x30	; 48
   15b2e:	c8 01       	movw	r24, r16
   15b30:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15b34:	8b e1       	ldi	r24, 0x1B	; 27
   15b36:	8e 9d       	mul	r24, r14
   15b38:	f0 01       	movw	r30, r0
   15b3a:	8f 9d       	mul	r24, r15
   15b3c:	f0 0d       	add	r31, r0
   15b3e:	11 24       	eor	r1, r1
   15b40:	e8 51       	subi	r30, 0x18	; 24
   15b42:	f2 4f       	sbci	r31, 0xF2	; 242
   15b44:	82 81       	ldd	r24, Z+2	; 0x02
   15b46:	84 30       	cpi	r24, 0x04	; 4
   15b48:	81 f4       	brne	.+32     	; 0x15b6a <_Z12Publish_Datav+0x1092>
   15b4a:	81 e0       	ldi	r24, 0x01	; 1
   15b4c:	90 e0       	ldi	r25, 0x00	; 0
   15b4e:	cd 50       	subi	r28, 0x0D	; 13
   15b50:	de 4f       	sbci	r29, 0xFE	; 254
   15b52:	99 83       	std	Y+1, r25	; 0x01
   15b54:	88 83       	st	Y, r24
   15b56:	c3 5f       	subi	r28, 0xF3	; 243
   15b58:	d1 40       	sbci	r29, 0x01	; 1
   15b5a:	ae 01       	movw	r20, r28
   15b5c:	4d 50       	subi	r20, 0x0D	; 13
   15b5e:	5e 4f       	sbci	r21, 0xFE	; 254
   15b60:	6f e7       	ldi	r22, 0x7F	; 127
   15b62:	70 e3       	ldi	r23, 0x30	; 48
   15b64:	c8 01       	movw	r24, r16
   15b66:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15b6a:	f1 e0       	ldi	r31, 0x01	; 1
   15b6c:	7f 12       	cpse	r7, r31
   15b6e:	2d c0       	rjmp	.+90     	; 0x15bca <_Z12Publish_Datav+0x10f2>
   15b70:	8b e1       	ldi	r24, 0x1B	; 27
   15b72:	8e 9d       	mul	r24, r14
   15b74:	f0 01       	movw	r30, r0
   15b76:	8f 9d       	mul	r24, r15
   15b78:	f0 0d       	add	r31, r0
   15b7a:	11 24       	eor	r1, r1
   15b7c:	e8 51       	subi	r30, 0x18	; 24
   15b7e:	f2 4f       	sbci	r31, 0xF2	; 242
   15b80:	e5 81       	ldd	r30, Z+5	; 0x05
   15b82:	f0 e0       	ldi	r31, 0x00	; 0
   15b84:	e7 5c       	subi	r30, 0xC7	; 199
   15b86:	fb 4e       	sbci	r31, 0xEB	; 235
   15b88:	80 81       	ld	r24, Z
   15b8a:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   15b8e:	89 2b       	or	r24, r25
   15b90:	61 f0       	breq	.+24     	; 0x15baa <_Z12Publish_Datav+0x10d2>
   15b92:	cd 50       	subi	r28, 0x0D	; 13
   15b94:	de 4f       	sbci	r29, 0xFE	; 254
   15b96:	19 82       	std	Y+1, r1	; 0x01
   15b98:	18 82       	st	Y, r1
   15b9a:	c3 5f       	subi	r28, 0xF3	; 243
   15b9c:	d1 40       	sbci	r29, 0x01	; 1
   15b9e:	ae 01       	movw	r20, r28
   15ba0:	4d 50       	subi	r20, 0x0D	; 13
   15ba2:	5e 4f       	sbci	r21, 0xFE	; 254
   15ba4:	68 e7       	ldi	r22, 0x78	; 120
   15ba6:	70 e3       	ldi	r23, 0x30	; 48
   15ba8:	0d c0       	rjmp	.+26     	; 0x15bc4 <_Z12Publish_Datav+0x10ec>
   15baa:	81 e0       	ldi	r24, 0x01	; 1
   15bac:	90 e0       	ldi	r25, 0x00	; 0
   15bae:	cd 50       	subi	r28, 0x0D	; 13
   15bb0:	de 4f       	sbci	r29, 0xFE	; 254
   15bb2:	99 83       	std	Y+1, r25	; 0x01
   15bb4:	88 83       	st	Y, r24
   15bb6:	c3 5f       	subi	r28, 0xF3	; 243
   15bb8:	d1 40       	sbci	r29, 0x01	; 1
   15bba:	ae 01       	movw	r20, r28
   15bbc:	4d 50       	subi	r20, 0x0D	; 13
   15bbe:	5e 4f       	sbci	r21, 0xFE	; 254
   15bc0:	61 e7       	ldi	r22, 0x71	; 113
   15bc2:	70 e3       	ldi	r23, 0x30	; 48
   15bc4:	c8 01       	movw	r24, r16
   15bc6:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15bca:	4c ed       	ldi	r20, 0xDC	; 220
   15bcc:	50 e0       	ldi	r21, 0x00	; 0
   15bce:	b6 01       	movw	r22, r12
   15bd0:	c8 01       	movw	r24, r16
   15bd2:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15bd6:	02 e6       	ldi	r16, 0x62	; 98
   15bd8:	1f e0       	ldi	r17, 0x0F	; 15
   15bda:	8e e6       	ldi	r24, 0x6E	; 110
   15bdc:	68 2e       	mov	r6, r24
   15bde:	9e ec       	ldi	r25, 0xCE	; 206
   15be0:	a9 2e       	mov	r10, r25
   15be2:	93 e1       	ldi	r25, 0x13	; 19
   15be4:	b9 2e       	mov	r11, r25
   15be6:	2d e9       	ldi	r18, 0x9D	; 157
   15be8:	82 2e       	mov	r8, r18
   15bea:	27 e0       	ldi	r18, 0x07	; 7
   15bec:	92 2e       	mov	r9, r18
   15bee:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15bf2:	88 23       	and	r24, r24
   15bf4:	01 f1       	breq	.+64     	; 0x15c36 <_Z12Publish_Datav+0x115e>
   15bf6:	d8 01       	movw	r26, r16
   15bf8:	e6 2d       	mov	r30, r6
   15bfa:	1d 92       	st	X+, r1
   15bfc:	ea 95       	dec	r30
   15bfe:	e9 f7       	brne	.-6      	; 0x15bfa <_Z12Publish_Datav+0x1122>
   15c00:	bf 92       	push	r11
   15c02:	af 92       	push	r10
   15c04:	9f 92       	push	r9
   15c06:	8f 92       	push	r8
   15c08:	1f 93       	push	r17
   15c0a:	0f 93       	push	r16
   15c0c:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   15c10:	b6 01       	movw	r22, r12
   15c12:	82 e6       	ldi	r24, 0x62	; 98
   15c14:	9f e0       	ldi	r25, 0x0F	; 15
   15c16:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   15c1a:	0f 90       	pop	r0
   15c1c:	0f 90       	pop	r0
   15c1e:	0f 90       	pop	r0
   15c20:	0f 90       	pop	r0
   15c22:	0f 90       	pop	r0
   15c24:	0f 90       	pop	r0
   15c26:	81 11       	cpse	r24, r1
   15c28:	13 c1       	rjmp	.+550    	; 0x15e50 <_Z12Publish_Datav+0x1378>
   15c2a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15c2e:	81 50       	subi	r24, 0x01	; 1
   15c30:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15c34:	dc cf       	rjmp	.-72     	; 0x15bee <_Z12Publish_Datav+0x1116>
   15c36:	8c e3       	ldi	r24, 0x3C	; 60
   15c38:	90 e0       	ldi	r25, 0x00	; 0
   15c3a:	2f c1       	rjmp	.+606    	; 0x15e9a <_Z12Publish_Datav+0x13c2>
   15c3c:	6e 01       	movw	r12, r28
   15c3e:	f9 ee       	ldi	r31, 0xE9	; 233
   15c40:	cf 1a       	sub	r12, r31
   15c42:	fe ef       	ldi	r31, 0xFE	; 254
   15c44:	df 0a       	sbc	r13, r31
   15c46:	8c ed       	ldi	r24, 0xDC	; 220
   15c48:	d6 01       	movw	r26, r12
   15c4a:	1d 92       	st	X+, r1
   15c4c:	8a 95       	dec	r24
   15c4e:	e9 f7       	brne	.-6      	; 0x15c4a <_Z12Publish_Datav+0x1172>
   15c50:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15c54:	81 30       	cpi	r24, 0x01	; 1
   15c56:	51 f4       	brne	.+20     	; 0x15c6c <_Z12Publish_Datav+0x1194>
   15c58:	65 e5       	ldi	r22, 0x55	; 85
   15c5a:	70 e3       	ldi	r23, 0x30	; 48
   15c5c:	86 ec       	ldi	r24, 0xC6	; 198
   15c5e:	94 e1       	ldi	r25, 0x14	; 20
   15c60:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   15c64:	86 ec       	ldi	r24, 0xC6	; 198
   15c66:	94 e1       	ldi	r25, 0x14	; 20
   15c68:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   15c6c:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15c70:	81 11       	cpse	r24, r1
   15c72:	4e c0       	rjmp	.+156    	; 0x15d10 <_Z12Publish_Datav+0x1238>
   15c74:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   15c78:	88 23       	and	r24, r24
   15c7a:	09 f4       	brne	.+2      	; 0x15c7e <_Z12Publish_Datav+0x11a6>
   15c7c:	43 c0       	rjmp	.+134    	; 0x15d04 <_Z12Publish_Datav+0x122c>
   15c7e:	60 90 b6 13 	lds	r6, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15c82:	80 90 b7 13 	lds	r8, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   15c86:	90 90 b8 13 	lds	r9, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   15c8a:	a0 90 b9 13 	lds	r10, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15c8e:	b0 90 ba 13 	lds	r11, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15c92:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   15c96:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   15c9a:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15c9e:	26 2d       	mov	r18, r6
   15ca0:	38 2d       	mov	r19, r8
   15ca2:	49 2d       	mov	r20, r9
   15ca4:	5a 2d       	mov	r21, r10
   15ca6:	6b 2d       	mov	r22, r11
   15ca8:	7b 2f       	mov	r23, r27
   15caa:	8f 2f       	mov	r24, r31
   15cac:	9e 2f       	mov	r25, r30
   15cae:	a2 e0       	ldi	r26, 0x02	; 2
   15cb0:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   15cb4:	81 f0       	breq	.+32     	; 0x15cd6 <_Z12Publish_Datav+0x11fe>
   15cb6:	a4 e0       	ldi	r26, 0x04	; 4
   15cb8:	cd 50       	subi	r28, 0x0D	; 13
   15cba:	de 4f       	sbci	r29, 0xFE	; 254
   15cbc:	19 82       	std	Y+1, r1	; 0x01
   15cbe:	18 82       	st	Y, r1
   15cc0:	c3 5f       	subi	r28, 0xF3	; 243
   15cc2:	d1 40       	sbci	r29, 0x01	; 1
   15cc4:	0e 94 17 ec 	call	0x1d82e	; 0x1d82e <__cmpdi2_s8>
   15cc8:	a1 f4       	brne	.+40     	; 0x15cf2 <_Z12Publish_Datav+0x121a>
   15cca:	ae 01       	movw	r20, r28
   15ccc:	4d 50       	subi	r20, 0x0D	; 13
   15cce:	5e 4f       	sbci	r21, 0xFE	; 254
   15cd0:	6d e4       	ldi	r22, 0x4D	; 77
   15cd2:	70 e3       	ldi	r23, 0x30	; 48
   15cd4:	13 c0       	rjmp	.+38     	; 0x15cfc <_Z12Publish_Datav+0x1224>
   15cd6:	81 e0       	ldi	r24, 0x01	; 1
   15cd8:	90 e0       	ldi	r25, 0x00	; 0
   15cda:	cd 50       	subi	r28, 0x0D	; 13
   15cdc:	de 4f       	sbci	r29, 0xFE	; 254
   15cde:	99 83       	std	Y+1, r25	; 0x01
   15ce0:	88 83       	st	Y, r24
   15ce2:	c3 5f       	subi	r28, 0xF3	; 243
   15ce4:	d1 40       	sbci	r29, 0x01	; 1
   15ce6:	ae 01       	movw	r20, r28
   15ce8:	4d 50       	subi	r20, 0x0D	; 13
   15cea:	5e 4f       	sbci	r21, 0xFE	; 254
   15cec:	65 e4       	ldi	r22, 0x45	; 69
   15cee:	70 e3       	ldi	r23, 0x30	; 48
   15cf0:	05 c0       	rjmp	.+10     	; 0x15cfc <_Z12Publish_Datav+0x1224>
   15cf2:	ae 01       	movw	r20, r28
   15cf4:	4d 50       	subi	r20, 0x0D	; 13
   15cf6:	5e 4f       	sbci	r21, 0xFE	; 254
   15cf8:	6d e3       	ldi	r22, 0x3D	; 61
   15cfa:	70 e3       	ldi	r23, 0x30	; 48
   15cfc:	c8 01       	movw	r24, r16
   15cfe:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15d02:	21 c0       	rjmp	.+66     	; 0x15d46 <_Z12Publish_Datav+0x126e>
   15d04:	8a e0       	ldi	r24, 0x0A	; 10
   15d06:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   15d0a:	89 2b       	or	r24, r25
   15d0c:	71 f4       	brne	.+28     	; 0x15d2a <_Z12Publish_Datav+0x1252>
   15d0e:	04 c0       	rjmp	.+8      	; 0x15d18 <_Z12Publish_Datav+0x1240>
   15d10:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   15d14:	81 30       	cpi	r24, 0x01	; 1
   15d16:	49 f4       	brne	.+18     	; 0x15d2a <_Z12Publish_Datav+0x1252>
   15d18:	81 e0       	ldi	r24, 0x01	; 1
   15d1a:	90 e0       	ldi	r25, 0x00	; 0
   15d1c:	cd 50       	subi	r28, 0x0D	; 13
   15d1e:	de 4f       	sbci	r29, 0xFE	; 254
   15d20:	99 83       	std	Y+1, r25	; 0x01
   15d22:	88 83       	st	Y, r24
   15d24:	c3 5f       	subi	r28, 0xF3	; 243
   15d26:	d1 40       	sbci	r29, 0x01	; 1
   15d28:	06 c0       	rjmp	.+12     	; 0x15d36 <_Z12Publish_Datav+0x125e>
   15d2a:	cd 50       	subi	r28, 0x0D	; 13
   15d2c:	de 4f       	sbci	r29, 0xFE	; 254
   15d2e:	19 82       	std	Y+1, r1	; 0x01
   15d30:	18 82       	st	Y, r1
   15d32:	c3 5f       	subi	r28, 0xF3	; 243
   15d34:	d1 40       	sbci	r29, 0x01	; 1
   15d36:	ae 01       	movw	r20, r28
   15d38:	4d 50       	subi	r20, 0x0D	; 13
   15d3a:	5e 4f       	sbci	r21, 0xFE	; 254
   15d3c:	65 e9       	ldi	r22, 0x95	; 149
   15d3e:	77 e0       	ldi	r23, 0x07	; 7
   15d40:	c8 01       	movw	r24, r16
   15d42:	0e 94 98 8c 	call	0x11930	; 0x11930 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15d46:	cd 50       	subi	r28, 0x0D	; 13
   15d48:	de 4f       	sbci	r29, 0xFE	; 254
   15d4a:	19 82       	std	Y+1, r1	; 0x01
   15d4c:	18 82       	st	Y, r1
   15d4e:	c3 5f       	subi	r28, 0xF3	; 243
   15d50:	d1 40       	sbci	r29, 0x01	; 1
   15d52:	ae 01       	movw	r20, r28
   15d54:	4d 50       	subi	r20, 0x0D	; 13
   15d56:	5e 4f       	sbci	r21, 0xFE	; 254
   15d58:	66 e3       	ldi	r22, 0x36	; 54
   15d5a:	70 e3       	ldi	r23, 0x30	; 48
   15d5c:	c8 01       	movw	r24, r16
   15d5e:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15d62:	8b e1       	ldi	r24, 0x1B	; 27
   15d64:	8e 9d       	mul	r24, r14
   15d66:	a0 01       	movw	r20, r0
   15d68:	8f 9d       	mul	r24, r15
   15d6a:	50 0d       	add	r21, r0
   15d6c:	11 24       	eor	r1, r1
   15d6e:	fa 01       	movw	r30, r20
   15d70:	e8 51       	subi	r30, 0x18	; 24
   15d72:	f2 4f       	sbci	r31, 0xF2	; 242
   15d74:	83 81       	ldd	r24, Z+3	; 0x03
   15d76:	94 81       	ldd	r25, Z+4	; 0x04
   15d78:	f7 01       	movw	r30, r14
   15d7a:	eb 59       	subi	r30, 0x9B	; 155
   15d7c:	ff 4f       	sbci	r31, 0xFF	; 255
   15d7e:	5f 01       	movw	r10, r30
   15d80:	00 97       	sbiw	r24, 0x00	; 0
   15d82:	01 f1       	breq	.+64     	; 0x15dc4 <_Z12Publish_Datav+0x12ec>
   15d84:	6c e3       	ldi	r22, 0x3C	; 60
   15d86:	70 e0       	ldi	r23, 0x00	; 0
   15d88:	0e 94 91 eb 	call	0x1d722	; 0x1d722 <__udivmodhi4>
   15d8c:	6f 5f       	subi	r22, 0xFF	; 255
   15d8e:	7f 4f       	sbci	r23, 0xFF	; 255
   15d90:	cd 50       	subi	r28, 0x0D	; 13
   15d92:	de 4f       	sbci	r29, 0xFE	; 254
   15d94:	79 83       	std	Y+1, r23	; 0x01
   15d96:	68 83       	st	Y, r22
   15d98:	c3 5f       	subi	r28, 0xF3	; 243
   15d9a:	d1 40       	sbci	r29, 0x01	; 1
   15d9c:	ae 01       	movw	r20, r28
   15d9e:	4d 50       	subi	r20, 0x0D	; 13
   15da0:	5e 4f       	sbci	r21, 0xFE	; 254
   15da2:	61 e3       	ldi	r22, 0x31	; 49
   15da4:	70 e3       	ldi	r23, 0x30	; 48
   15da6:	c8 01       	movw	r24, r16
   15da8:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15dac:	cd 50       	subi	r28, 0x0D	; 13
   15dae:	de 4f       	sbci	r29, 0xFE	; 254
   15db0:	b9 82       	std	Y+1, r11	; 0x01
   15db2:	a8 82       	st	Y, r10
   15db4:	c3 5f       	subi	r28, 0xF3	; 243
   15db6:	d1 40       	sbci	r29, 0x01	; 1
   15db8:	ae 01       	movw	r20, r28
   15dba:	4d 50       	subi	r20, 0x0D	; 13
   15dbc:	5e 4f       	sbci	r21, 0xFE	; 254
   15dbe:	6c e2       	ldi	r22, 0x2C	; 44
   15dc0:	70 e3       	ldi	r23, 0x30	; 48
   15dc2:	12 c0       	rjmp	.+36     	; 0x15de8 <_Z12Publish_Datav+0x1310>
   15dc4:	45 51       	subi	r20, 0x15	; 21
   15dc6:	52 4f       	sbci	r21, 0xF2	; 242
   15dc8:	67 e2       	ldi	r22, 0x27	; 39
   15dca:	70 e3       	ldi	r23, 0x30	; 48
   15dcc:	c8 01       	movw	r24, r16
   15dce:	0e 94 ca 8b 	call	0x11794	; 0x11794 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15dd2:	cd 50       	subi	r28, 0x0D	; 13
   15dd4:	de 4f       	sbci	r29, 0xFE	; 254
   15dd6:	b9 82       	std	Y+1, r11	; 0x01
   15dd8:	a8 82       	st	Y, r10
   15dda:	c3 5f       	subi	r28, 0xF3	; 243
   15ddc:	d1 40       	sbci	r29, 0x01	; 1
   15dde:	ae 01       	movw	r20, r28
   15de0:	4d 50       	subi	r20, 0x0D	; 13
   15de2:	5e 4f       	sbci	r21, 0xFE	; 254
   15de4:	62 e2       	ldi	r22, 0x22	; 34
   15de6:	70 e3       	ldi	r23, 0x30	; 48
   15de8:	c8 01       	movw	r24, r16
   15dea:	0e 94 02 8c 	call	0x11804	; 0x11804 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15dee:	4c ed       	ldi	r20, 0xDC	; 220
   15df0:	50 e0       	ldi	r21, 0x00	; 0
   15df2:	b6 01       	movw	r22, r12
   15df4:	c8 01       	movw	r24, r16
   15df6:	0e 94 d4 93 	call	0x127a8	; 0x127a8 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15dfa:	b6 01       	movw	r22, r12
   15dfc:	86 ec       	ldi	r24, 0xC6	; 198
   15dfe:	94 e1       	ldi	r25, 0x14	; 20
   15e00:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   15e04:	e2 e6       	ldi	r30, 0x62	; 98
   15e06:	ff e0       	ldi	r31, 0x0F	; 15
   15e08:	8e e6       	ldi	r24, 0x6E	; 110
   15e0a:	df 01       	movw	r26, r30
   15e0c:	1d 92       	st	X+, r1
   15e0e:	8a 95       	dec	r24
   15e10:	e9 f7       	brne	.-6      	; 0x15e0c <_Z12Publish_Datav+0x1334>
   15e12:	8e ec       	ldi	r24, 0xCE	; 206
   15e14:	93 e1       	ldi	r25, 0x13	; 19
   15e16:	9f 93       	push	r25
   15e18:	8f 93       	push	r24
   15e1a:	8b e3       	ldi	r24, 0x3B	; 59
   15e1c:	97 e0       	ldi	r25, 0x07	; 7
   15e1e:	9f 93       	push	r25
   15e20:	8f 93       	push	r24
   15e22:	ff 93       	push	r31
   15e24:	ef 93       	push	r30
   15e26:	0e 94 39 ee 	call	0x1dc72	; 0x1dc72 <sprintf>
   15e2a:	0f 90       	pop	r0
   15e2c:	0f 90       	pop	r0
   15e2e:	0f 90       	pop	r0
   15e30:	0f 90       	pop	r0
   15e32:	0f 90       	pop	r0
   15e34:	0f 90       	pop	r0
   15e36:	0c e3       	ldi	r16, 0x3C	; 60
   15e38:	10 e0       	ldi	r17, 0x00	; 0
   15e3a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15e3e:	88 23       	and	r24, r24
   15e40:	81 f1       	breq	.+96     	; 0x15ea2 <_Z12Publish_Datav+0x13ca>
   15e42:	b6 01       	movw	r22, r12
   15e44:	82 e6       	ldi	r24, 0x62	; 98
   15e46:	9f e0       	ldi	r25, 0x0F	; 15
   15e48:	0e 94 7b 6a 	call	0xd4f6	; 0xd4f6 <_Z12MQTT_PublishPhS_>
   15e4c:	88 23       	and	r24, r24
   15e4e:	71 f0       	breq	.+28     	; 0x15e6c <_Z12Publish_Datav+0x1394>
   15e50:	8b e1       	ldi	r24, 0x1B	; 27
   15e52:	8e 9d       	mul	r24, r14
   15e54:	f0 01       	movw	r30, r0
   15e56:	8f 9d       	mul	r24, r15
   15e58:	f0 0d       	add	r31, r0
   15e5a:	11 24       	eor	r1, r1
   15e5c:	e8 51       	subi	r30, 0x18	; 24
   15e5e:	f2 4f       	sbci	r31, 0xF2	; 242
   15e60:	12 8e       	std	Z+26, r1	; 0x1a
   15e62:	81 e0       	ldi	r24, 0x01	; 1
   15e64:	87 0d       	add	r24, r7
   15e66:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   15e6a:	1b c0       	rjmp	.+54     	; 0x15ea2 <_Z12Publish_Datav+0x13ca>
   15e6c:	10 93 e1 0d 	sts	0x0DE1, r17	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15e70:	00 93 e0 0d 	sts	0x0DE0, r16	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15e74:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15e78:	81 50       	subi	r24, 0x01	; 1
   15e7a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15e7e:	dd cf       	rjmp	.-70     	; 0x15e3a <_Z12Publish_Datav+0x1362>
   15e80:	bf ef       	ldi	r27, 0xFF	; 255
   15e82:	eb 1a       	sub	r14, r27
   15e84:	fb 0a       	sbc	r15, r27
   15e86:	eb e1       	ldi	r30, 0x1B	; 27
   15e88:	ce 0e       	add	r12, r30
   15e8a:	d1 1c       	adc	r13, r1
   15e8c:	fe e0       	ldi	r31, 0x0E	; 14
   15e8e:	ef 16       	cp	r14, r31
   15e90:	f1 04       	cpc	r15, r1
   15e92:	09 f0       	breq	.+2      	; 0x15e96 <_Z12Publish_Datav+0x13be>
   15e94:	c5 cd       	rjmp	.-1142   	; 0x15a20 <_Z12Publish_Datav+0xf48>
   15e96:	05 c0       	rjmp	.+10     	; 0x15ea2 <_Z12Publish_Datav+0x13ca>
   15e98:	01 97       	sbiw	r24, 0x01	; 1
   15e9a:	90 93 e1 0d 	sts	0x0DE1, r25	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15e9e:	80 93 e0 0d 	sts	0x0DE0, r24	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15ea2:	cc 50       	subi	r28, 0x0C	; 12
   15ea4:	de 4f       	sbci	r29, 0xFE	; 254
   15ea6:	0f b6       	in	r0, 0x3f	; 63
   15ea8:	f8 94       	cli
   15eaa:	de bf       	out	0x3e, r29	; 62
   15eac:	0f be       	out	0x3f, r0	; 63
   15eae:	cd bf       	out	0x3d, r28	; 61
   15eb0:	df 91       	pop	r29
   15eb2:	cf 91       	pop	r28
   15eb4:	1f 91       	pop	r17
   15eb6:	0f 91       	pop	r16
   15eb8:	ff 90       	pop	r15
   15eba:	ef 90       	pop	r14
   15ebc:	df 90       	pop	r13
   15ebe:	cf 90       	pop	r12
   15ec0:	bf 90       	pop	r11
   15ec2:	af 90       	pop	r10
   15ec4:	9f 90       	pop	r9
   15ec6:	8f 90       	pop	r8
   15ec8:	7f 90       	pop	r7
   15eca:	6f 90       	pop	r6
   15ecc:	08 95       	ret

00015ece <_Z22Valve_Grouping_Handlerh>:
   15ece:	2f 92       	push	r2
   15ed0:	3f 92       	push	r3
   15ed2:	4f 92       	push	r4
   15ed4:	5f 92       	push	r5
   15ed6:	6f 92       	push	r6
   15ed8:	7f 92       	push	r7
   15eda:	8f 92       	push	r8
   15edc:	9f 92       	push	r9
   15ede:	af 92       	push	r10
   15ee0:	bf 92       	push	r11
   15ee2:	cf 92       	push	r12
   15ee4:	df 92       	push	r13
   15ee6:	ef 92       	push	r14
   15ee8:	ff 92       	push	r15
   15eea:	0f 93       	push	r16
   15eec:	1f 93       	push	r17
   15eee:	cf 93       	push	r28
   15ef0:	df 93       	push	r29
   15ef2:	cd b7       	in	r28, 0x3d	; 61
   15ef4:	de b7       	in	r29, 0x3e	; 62
   15ef6:	e8 97       	sbiw	r28, 0x38	; 56
   15ef8:	0f b6       	in	r0, 0x3f	; 63
   15efa:	f8 94       	cli
   15efc:	de bf       	out	0x3e, r29	; 62
   15efe:	0f be       	out	0x3f, r0	; 63
   15f00:	cd bf       	out	0x3d, r28	; 61
   15f02:	58 2e       	mov	r5, r24
   15f04:	88 e0       	ldi	r24, 0x08	; 8
   15f06:	eb e6       	ldi	r30, 0x6B	; 107
   15f08:	f2 e0       	ldi	r31, 0x02	; 2
   15f0a:	de 01       	movw	r26, r28
   15f0c:	9b 96       	adiw	r26, 0x2b	; 43
   15f0e:	01 90       	ld	r0, Z+
   15f10:	0d 92       	st	X+, r0
   15f12:	8a 95       	dec	r24
   15f14:	e1 f7       	brne	.-8      	; 0x15f0e <_Z22Valve_Grouping_Handlerh+0x40>
   15f16:	9e 01       	movw	r18, r28
   15f18:	2f 5f       	subi	r18, 0xFF	; 255
   15f1a:	3f 4f       	sbci	r19, 0xFF	; 255
   15f1c:	79 01       	movw	r14, r18
   15f1e:	8a e2       	ldi	r24, 0x2A	; 42
   15f20:	d9 01       	movw	r26, r18
   15f22:	1d 92       	st	X+, r1
   15f24:	8a 95       	dec	r24
   15f26:	e9 f7       	brne	.-6      	; 0x15f22 <_Z22Valve_Grouping_Handlerh+0x54>
   15f28:	2e e4       	ldi	r18, 0x4E	; 78
   15f2a:	82 2e       	mov	r8, r18
   15f2c:	2d e0       	ldi	r18, 0x0D	; 13
   15f2e:	92 2e       	mov	r9, r18
   15f30:	42 ea       	ldi	r20, 0xA2	; 162
   15f32:	5d e0       	ldi	r21, 0x0D	; 13
   15f34:	64 01       	movw	r12, r8
   15f36:	10 e0       	ldi	r17, 0x00	; 0
   15f38:	f6 01       	movw	r30, r12
   15f3a:	80 81       	ld	r24, Z
   15f3c:	81 50       	subi	r24, 0x01	; 1
   15f3e:	8e 30       	cpi	r24, 0x0E	; 14
   15f40:	d8 f5       	brcc	.+118    	; 0x15fb8 <_Z22Valve_Grouping_Handlerh+0xea>
   15f42:	d6 01       	movw	r26, r12
   15f44:	25 e0       	ldi	r18, 0x05	; 5
   15f46:	89 81       	ldd	r24, Y+1	; 0x01
   15f48:	88 23       	and	r24, r24
   15f4a:	f9 f0       	breq	.+62     	; 0x15f8a <_Z22Valve_Grouping_Handlerh+0xbc>
   15f4c:	00 e0       	ldi	r16, 0x00	; 0
   15f4e:	30 e0       	ldi	r19, 0x00	; 0
   15f50:	83 2f       	mov	r24, r19
   15f52:	90 e0       	ldi	r25, 0x00	; 0
   15f54:	b7 01       	movw	r22, r14
   15f56:	68 0f       	add	r22, r24
   15f58:	79 1f       	adc	r23, r25
   15f5a:	fb 01       	movw	r30, r22
   15f5c:	70 81       	ld	r23, Z
   15f5e:	77 23       	and	r23, r23
   15f60:	d1 f0       	breq	.+52     	; 0x15f96 <_Z22Valve_Grouping_Handlerh+0xc8>
   15f62:	11 96       	adiw	r26, 0x01	; 1
   15f64:	6c 91       	ld	r22, X
   15f66:	11 97       	sbiw	r26, 0x01	; 1
   15f68:	66 23       	and	r22, r22
   15f6a:	69 f0       	breq	.+26     	; 0x15f86 <_Z22Valve_Grouping_Handlerh+0xb8>
   15f6c:	76 17       	cp	r23, r22
   15f6e:	99 f0       	breq	.+38     	; 0x15f96 <_Z22Valve_Grouping_Handlerh+0xc8>
   15f70:	62 e0       	ldi	r22, 0x02	; 2
   15f72:	70 e0       	ldi	r23, 0x00	; 0
   15f74:	6c 0f       	add	r22, r28
   15f76:	7d 1f       	adc	r23, r29
   15f78:	86 0f       	add	r24, r22
   15f7a:	97 1f       	adc	r25, r23
   15f7c:	fc 01       	movw	r30, r24
   15f7e:	80 81       	ld	r24, Z
   15f80:	81 11       	cpse	r24, r1
   15f82:	01 c0       	rjmp	.+2      	; 0x15f86 <_Z22Valve_Grouping_Handlerh+0xb8>
   15f84:	01 e0       	ldi	r16, 0x01	; 1
   15f86:	3f 5f       	subi	r19, 0xFF	; 255
   15f88:	e3 cf       	rjmp	.-58     	; 0x15f50 <_Z22Valve_Grouping_Handlerh+0x82>
   15f8a:	11 96       	adiw	r26, 0x01	; 1
   15f8c:	8c 91       	ld	r24, X
   15f8e:	11 97       	sbiw	r26, 0x01	; 1
   15f90:	81 11       	cpse	r24, r1
   15f92:	03 c0       	rjmp	.+6      	; 0x15f9a <_Z22Valve_Grouping_Handlerh+0xcc>
   15f94:	0d c0       	rjmp	.+26     	; 0x15fb0 <_Z22Valve_Grouping_Handlerh+0xe2>
   15f96:	00 23       	and	r16, r16
   15f98:	59 f0       	breq	.+22     	; 0x15fb0 <_Z22Valve_Grouping_Handlerh+0xe2>
   15f9a:	11 96       	adiw	r26, 0x01	; 1
   15f9c:	8c 91       	ld	r24, X
   15f9e:	11 97       	sbiw	r26, 0x01	; 1
   15fa0:	83 31       	cpi	r24, 0x13	; 19
   15fa2:	30 f4       	brcc	.+12     	; 0x15fb0 <_Z22Valve_Grouping_Handlerh+0xe2>
   15fa4:	b7 01       	movw	r22, r14
   15fa6:	61 0f       	add	r22, r17
   15fa8:	71 1d       	adc	r23, r1
   15faa:	fb 01       	movw	r30, r22
   15fac:	80 83       	st	Z, r24
   15fae:	1f 5f       	subi	r17, 0xFF	; 255
   15fb0:	21 50       	subi	r18, 0x01	; 1
   15fb2:	11 96       	adiw	r26, 0x01	; 1
   15fb4:	21 11       	cpse	r18, r1
   15fb6:	c7 cf       	rjmp	.-114    	; 0x15f46 <_Z22Valve_Grouping_Handlerh+0x78>
   15fb8:	f6 e0       	ldi	r31, 0x06	; 6
   15fba:	cf 0e       	add	r12, r31
   15fbc:	d1 1c       	adc	r13, r1
   15fbe:	4c 15       	cp	r20, r12
   15fc0:	5d 05       	cpc	r21, r13
   15fc2:	09 f0       	breq	.+2      	; 0x15fc6 <_Z22Valve_Grouping_Handlerh+0xf8>
   15fc4:	b9 cf       	rjmp	.-142    	; 0x15f38 <_Z22Valve_Grouping_Handlerh+0x6a>
   15fc6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15fca:	81 30       	cpi	r24, 0x01	; 1
   15fcc:	51 f4       	brne	.+20     	; 0x15fe2 <_Z22Valve_Grouping_Handlerh+0x114>
   15fce:	60 e5       	ldi	r22, 0x50	; 80
   15fd0:	70 e4       	ldi	r23, 0x40	; 64
   15fd2:	86 ec       	ldi	r24, 0xC6	; 198
   15fd4:	94 e1       	ldi	r25, 0x14	; 20
   15fd6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   15fda:	86 ec       	ldi	r24, 0xC6	; 198
   15fdc:	94 e1       	ldi	r25, 0x14	; 20
   15fde:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   15fe2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15fe6:	81 30       	cpi	r24, 0x01	; 1
   15fe8:	e9 f4       	brne	.+58     	; 0x16024 <_Z22Valve_Grouping_Handlerh+0x156>
   15fea:	00 e0       	ldi	r16, 0x00	; 0
   15fec:	67 01       	movw	r12, r14
   15fee:	c0 0e       	add	r12, r16
   15ff0:	d1 1c       	adc	r13, r1
   15ff2:	d6 01       	movw	r26, r12
   15ff4:	8c 91       	ld	r24, X
   15ff6:	88 23       	and	r24, r24
   15ff8:	a9 f0       	breq	.+42     	; 0x16024 <_Z22Valve_Grouping_Handlerh+0x156>
   15ffa:	6e e3       	ldi	r22, 0x3E	; 62
   15ffc:	70 e4       	ldi	r23, 0x40	; 64
   15ffe:	86 ec       	ldi	r24, 0xC6	; 198
   16000:	94 e1       	ldi	r25, 0x14	; 20
   16002:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16006:	f6 01       	movw	r30, r12
   16008:	60 81       	ld	r22, Z
   1600a:	70 e0       	ldi	r23, 0x00	; 0
   1600c:	4a e0       	ldi	r20, 0x0A	; 10
   1600e:	50 e0       	ldi	r21, 0x00	; 0
   16010:	86 ec       	ldi	r24, 0xC6	; 198
   16012:	94 e1       	ldi	r25, 0x14	; 20
   16014:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
   16018:	86 ec       	ldi	r24, 0xC6	; 198
   1601a:	94 e1       	ldi	r25, 0x14	; 20
   1601c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   16020:	0f 5f       	subi	r16, 0xFF	; 255
   16022:	e4 cf       	rjmp	.-56     	; 0x15fec <_Z22Valve_Grouping_Handlerh+0x11e>
   16024:	f3 e0       	ldi	r31, 0x03	; 3
   16026:	5f 12       	cpse	r5, r31
   16028:	81 c0       	rjmp	.+258    	; 0x1612c <_Z22Valve_Grouping_Handlerh+0x25e>
   1602a:	98 ee       	ldi	r25, 0xE8	; 232
   1602c:	c9 2e       	mov	r12, r25
   1602e:	9d e0       	ldi	r25, 0x0D	; 13
   16030:	d9 2e       	mov	r13, r25
   16032:	42 e6       	ldi	r20, 0x62	; 98
   16034:	5f e0       	ldi	r21, 0x0F	; 15
   16036:	d6 01       	movw	r26, r12
   16038:	11 96       	adiw	r26, 0x01	; 1
   1603a:	8c 91       	ld	r24, X
   1603c:	11 97       	sbiw	r26, 0x01	; 1
   1603e:	85 56       	subi	r24, 0x65	; 101
   16040:	8e 30       	cpi	r24, 0x0E	; 14
   16042:	d0 f5       	brcc	.+116    	; 0x160b8 <_Z22Valve_Grouping_Handlerh+0x1ea>
   16044:	25 e0       	ldi	r18, 0x05	; 5
   16046:	89 81       	ldd	r24, Y+1	; 0x01
   16048:	88 23       	and	r24, r24
   1604a:	f9 f0       	breq	.+62     	; 0x1608a <_Z22Valve_Grouping_Handlerh+0x1bc>
   1604c:	00 e0       	ldi	r16, 0x00	; 0
   1604e:	30 e0       	ldi	r19, 0x00	; 0
   16050:	83 2f       	mov	r24, r19
   16052:	90 e0       	ldi	r25, 0x00	; 0
   16054:	b7 01       	movw	r22, r14
   16056:	68 0f       	add	r22, r24
   16058:	79 1f       	adc	r23, r25
   1605a:	fb 01       	movw	r30, r22
   1605c:	70 81       	ld	r23, Z
   1605e:	77 23       	and	r23, r23
   16060:	d1 f0       	breq	.+52     	; 0x16096 <_Z22Valve_Grouping_Handlerh+0x1c8>
   16062:	15 96       	adiw	r26, 0x05	; 5
   16064:	6c 91       	ld	r22, X
   16066:	15 97       	sbiw	r26, 0x05	; 5
   16068:	66 23       	and	r22, r22
   1606a:	69 f0       	breq	.+26     	; 0x16086 <_Z22Valve_Grouping_Handlerh+0x1b8>
   1606c:	76 17       	cp	r23, r22
   1606e:	99 f0       	breq	.+38     	; 0x16096 <_Z22Valve_Grouping_Handlerh+0x1c8>
   16070:	62 e0       	ldi	r22, 0x02	; 2
   16072:	70 e0       	ldi	r23, 0x00	; 0
   16074:	6c 0f       	add	r22, r28
   16076:	7d 1f       	adc	r23, r29
   16078:	86 0f       	add	r24, r22
   1607a:	97 1f       	adc	r25, r23
   1607c:	fc 01       	movw	r30, r24
   1607e:	80 81       	ld	r24, Z
   16080:	81 11       	cpse	r24, r1
   16082:	01 c0       	rjmp	.+2      	; 0x16086 <_Z22Valve_Grouping_Handlerh+0x1b8>
   16084:	01 e0       	ldi	r16, 0x01	; 1
   16086:	3f 5f       	subi	r19, 0xFF	; 255
   16088:	e3 cf       	rjmp	.-58     	; 0x16050 <_Z22Valve_Grouping_Handlerh+0x182>
   1608a:	15 96       	adiw	r26, 0x05	; 5
   1608c:	8c 91       	ld	r24, X
   1608e:	15 97       	sbiw	r26, 0x05	; 5
   16090:	81 11       	cpse	r24, r1
   16092:	03 c0       	rjmp	.+6      	; 0x1609a <_Z22Valve_Grouping_Handlerh+0x1cc>
   16094:	0d c0       	rjmp	.+26     	; 0x160b0 <_Z22Valve_Grouping_Handlerh+0x1e2>
   16096:	00 23       	and	r16, r16
   16098:	59 f0       	breq	.+22     	; 0x160b0 <_Z22Valve_Grouping_Handlerh+0x1e2>
   1609a:	15 96       	adiw	r26, 0x05	; 5
   1609c:	8c 91       	ld	r24, X
   1609e:	15 97       	sbiw	r26, 0x05	; 5
   160a0:	83 31       	cpi	r24, 0x13	; 19
   160a2:	30 f4       	brcc	.+12     	; 0x160b0 <_Z22Valve_Grouping_Handlerh+0x1e2>
   160a4:	b7 01       	movw	r22, r14
   160a6:	61 0f       	add	r22, r17
   160a8:	71 1d       	adc	r23, r1
   160aa:	fb 01       	movw	r30, r22
   160ac:	80 83       	st	Z, r24
   160ae:	1f 5f       	subi	r17, 0xFF	; 255
   160b0:	21 50       	subi	r18, 0x01	; 1
   160b2:	11 96       	adiw	r26, 0x01	; 1
   160b4:	21 11       	cpse	r18, r1
   160b6:	c7 cf       	rjmp	.-114    	; 0x16046 <_Z22Valve_Grouping_Handlerh+0x178>
   160b8:	fb e1       	ldi	r31, 0x1B	; 27
   160ba:	cf 0e       	add	r12, r31
   160bc:	d1 1c       	adc	r13, r1
   160be:	4c 15       	cp	r20, r12
   160c0:	5d 05       	cpc	r21, r13
   160c2:	09 f0       	breq	.+2      	; 0x160c6 <_Z22Valve_Grouping_Handlerh+0x1f8>
   160c4:	b8 cf       	rjmp	.-144    	; 0x16036 <_Z22Valve_Grouping_Handlerh+0x168>
   160c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   160ca:	81 30       	cpi	r24, 0x01	; 1
   160cc:	51 f4       	brne	.+20     	; 0x160e2 <_Z22Valve_Grouping_Handlerh+0x214>
   160ce:	6d e2       	ldi	r22, 0x2D	; 45
   160d0:	70 e4       	ldi	r23, 0x40	; 64
   160d2:	86 ec       	ldi	r24, 0xC6	; 198
   160d4:	94 e1       	ldi	r25, 0x14	; 20
   160d6:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   160da:	86 ec       	ldi	r24, 0xC6	; 198
   160dc:	94 e1       	ldi	r25, 0x14	; 20
   160de:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   160e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   160e6:	81 30       	cpi	r24, 0x01	; 1
   160e8:	91 f5       	brne	.+100    	; 0x1614e <_Z22Valve_Grouping_Handlerh+0x280>
   160ea:	10 e0       	ldi	r17, 0x00	; 0
   160ec:	67 01       	movw	r12, r14
   160ee:	c1 0e       	add	r12, r17
   160f0:	d1 1c       	adc	r13, r1
   160f2:	d6 01       	movw	r26, r12
   160f4:	8c 91       	ld	r24, X
   160f6:	88 23       	and	r24, r24
   160f8:	e1 f0       	breq	.+56     	; 0x16132 <_Z22Valve_Grouping_Handlerh+0x264>
   160fa:	6b e1       	ldi	r22, 0x1B	; 27
   160fc:	70 e4       	ldi	r23, 0x40	; 64
   160fe:	86 ec       	ldi	r24, 0xC6	; 198
   16100:	94 e1       	ldi	r25, 0x14	; 20
   16102:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16106:	f6 01       	movw	r30, r12
   16108:	60 81       	ld	r22, Z
   1610a:	70 e0       	ldi	r23, 0x00	; 0
   1610c:	4a e0       	ldi	r20, 0x0A	; 10
   1610e:	50 e0       	ldi	r21, 0x00	; 0
   16110:	86 ec       	ldi	r24, 0xC6	; 198
   16112:	94 e1       	ldi	r25, 0x14	; 20
   16114:	0e 94 7d d6 	call	0x1acfa	; 0x1acfa <_ZN5Print5printEii>
   16118:	86 ec       	ldi	r24, 0xC6	; 198
   1611a:	94 e1       	ldi	r25, 0x14	; 20
   1611c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16120:	86 ec       	ldi	r24, 0xC6	; 198
   16122:	94 e1       	ldi	r25, 0x14	; 20
   16124:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   16128:	1f 5f       	subi	r17, 0xFF	; 255
   1612a:	e0 cf       	rjmp	.-64     	; 0x160ec <_Z22Valve_Grouping_Handlerh+0x21e>
   1612c:	55 e0       	ldi	r21, 0x05	; 5
   1612e:	55 12       	cpse	r5, r21
   16130:	9c c1       	rjmp	.+824    	; 0x1646a <_Z22Valve_Grouping_Handlerh+0x59c>
   16132:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16136:	81 30       	cpi	r24, 0x01	; 1
   16138:	51 f4       	brne	.+20     	; 0x1614e <_Z22Valve_Grouping_Handlerh+0x280>
   1613a:	60 ef       	ldi	r22, 0xF0	; 240
   1613c:	7f e3       	ldi	r23, 0x3F	; 63
   1613e:	86 ec       	ldi	r24, 0xC6	; 198
   16140:	94 e1       	ldi	r25, 0x14	; 20
   16142:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16146:	86 ec       	ldi	r24, 0xC6	; 198
   16148:	94 e1       	ldi	r25, 0x14	; 20
   1614a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1614e:	05 e1       	ldi	r16, 0x15	; 21
   16150:	1c e0       	ldi	r17, 0x0C	; 12
   16152:	b4 e0       	ldi	r27, 0x04	; 4
   16154:	ab 2e       	mov	r10, r27
   16156:	b1 2c       	mov	r11, r1
   16158:	c1 2c       	mov	r12, r1
   1615a:	d1 2c       	mov	r13, r1
   1615c:	8d e0       	ldi	r24, 0x0D	; 13
   1615e:	28 2e       	mov	r2, r24
   16160:	d8 01       	movw	r26, r16
   16162:	8c 91       	ld	r24, X
   16164:	88 23       	and	r24, r24
   16166:	21 f1       	breq	.+72     	; 0x161b0 <_Z22Valve_Grouping_Handlerh+0x2e2>
   16168:	31 2c       	mov	r3, r1
   1616a:	40 e0       	ldi	r20, 0x00	; 0
   1616c:	39 c0       	rjmp	.+114    	; 0x161e0 <_Z22Valve_Grouping_Handlerh+0x312>
   1616e:	9e 01       	movw	r18, r28
   16170:	25 5d       	subi	r18, 0xD5	; 213
   16172:	3f 4f       	sbci	r19, 0xFF	; 255
   16174:	3c ab       	std	Y+52, r19	; 0x34
   16176:	2b ab       	std	Y+51, r18	; 0x33
   16178:	77 24       	eor	r7, r7
   1617a:	73 94       	inc	r7
   1617c:	a6 01       	movw	r20, r12
   1617e:	4f 5f       	subi	r20, 0xFF	; 255
   16180:	5f 4f       	sbci	r21, 0xFF	; 255
   16182:	5e ab       	std	Y+54, r21	; 0x36
   16184:	4d ab       	std	Y+53, r20	; 0x35
   16186:	2c 9c       	mul	r2, r12
   16188:	c0 01       	movw	r24, r0
   1618a:	2d 9c       	mul	r2, r13
   1618c:	90 0d       	add	r25, r0
   1618e:	11 24       	eor	r1, r1
   16190:	bc 01       	movw	r22, r24
   16192:	6b 5e       	subi	r22, 0xEB	; 235
   16194:	73 4f       	sbci	r23, 0xF3	; 243
   16196:	78 af       	std	Y+56, r23	; 0x38
   16198:	6f ab       	std	Y+55, r22	; 0x37
   1619a:	ab a9       	ldd	r26, Y+51	; 0x33
   1619c:	bc a9       	ldd	r27, Y+52	; 0x34
   1619e:	8d 91       	ld	r24, X+
   161a0:	bc ab       	std	Y+52, r27	; 0x34
   161a2:	ab ab       	std	Y+51, r26	; 0x33
   161a4:	83 21       	and	r24, r3
   161a6:	49 f5       	brne	.+82     	; 0x161fa <_Z22Valve_Grouping_Handlerh+0x32c>
   161a8:	73 94       	inc	r7
   161aa:	b4 e0       	ldi	r27, 0x04	; 4
   161ac:	7b 12       	cpse	r7, r27
   161ae:	f5 cf       	rjmp	.-22     	; 0x1619a <_Z22Valve_Grouping_Handlerh+0x2cc>
   161b0:	bf ef       	ldi	r27, 0xFF	; 255
   161b2:	cb 1a       	sub	r12, r27
   161b4:	db 0a       	sbc	r13, r27
   161b6:	03 5f       	subi	r16, 0xF3	; 243
   161b8:	1f 4f       	sbci	r17, 0xFF	; 255
   161ba:	e3 e0       	ldi	r30, 0x03	; 3
   161bc:	ae 0e       	add	r10, r30
   161be:	b1 1c       	adc	r11, r1
   161c0:	f5 e0       	ldi	r31, 0x05	; 5
   161c2:	cf 16       	cp	r12, r31
   161c4:	d1 04       	cpc	r13, r1
   161c6:	61 f6       	brne	.-104    	; 0x16160 <_Z22Valve_Grouping_Handlerh+0x292>
   161c8:	03 c1       	rjmp	.+518    	; 0x163d0 <_Z22Valve_Grouping_Handlerh+0x502>
   161ca:	82 17       	cp	r24, r18
   161cc:	93 07       	cpc	r25, r19
   161ce:	11 f4       	brne	.+4      	; 0x161d4 <_Z22Valve_Grouping_Handlerh+0x306>
   161d0:	50 81       	ld	r21, Z
   161d2:	35 2a       	or	r3, r21
   161d4:	01 96       	adiw	r24, 0x01	; 1
   161d6:	31 96       	adiw	r30, 0x01	; 1
   161d8:	a8 16       	cp	r10, r24
   161da:	b9 06       	cpc	r11, r25
   161dc:	b1 f7       	brne	.-20     	; 0x161ca <_Z22Valve_Grouping_Handlerh+0x2fc>
   161de:	4f 5f       	subi	r20, 0xFF	; 255
   161e0:	f7 01       	movw	r30, r14
   161e2:	e4 0f       	add	r30, r20
   161e4:	f1 1d       	adc	r31, r1
   161e6:	20 81       	ld	r18, Z
   161e8:	22 23       	and	r18, r18
   161ea:	09 f4       	brne	.+2      	; 0x161ee <_Z22Valve_Grouping_Handlerh+0x320>
   161ec:	c0 cf       	rjmp	.-128    	; 0x1616e <_Z22Valve_Grouping_Handlerh+0x2a0>
   161ee:	c5 01       	movw	r24, r10
   161f0:	03 97       	sbiw	r24, 0x03	; 3
   161f2:	fe 01       	movw	r30, r28
   161f4:	bb 96       	adiw	r30, 0x2b	; 43
   161f6:	30 e0       	ldi	r19, 0x00	; 0
   161f8:	e8 cf       	rjmp	.-48     	; 0x161ca <_Z22Valve_Grouping_Handlerh+0x2fc>
   161fa:	61 2c       	mov	r6, r1
   161fc:	63 94       	inc	r6
   161fe:	e5 ef       	ldi	r30, 0xF5	; 245
   16200:	f3 e1       	ldi	r31, 0x13	; 19
   16202:	24 e1       	ldi	r18, 0x14	; 20
   16204:	11 92       	st	Z+, r1
   16206:	2a 95       	dec	r18
   16208:	e9 f7       	brne	.-6      	; 0x16204 <_Z22Valve_Grouping_Handlerh+0x336>
   1620a:	d8 01       	movw	r26, r16
   1620c:	11 96       	adiw	r26, 0x01	; 1
   1620e:	8c 91       	ld	r24, X
   16210:	11 97       	sbiw	r26, 0x01	; 1
   16212:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   16216:	12 96       	adiw	r26, 0x02	; 2
   16218:	8c 91       	ld	r24, X
   1621a:	12 97       	sbiw	r26, 0x02	; 2
   1621c:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   16220:	13 96       	adiw	r26, 0x03	; 3
   16222:	8c 91       	ld	r24, X
   16224:	13 97       	sbiw	r26, 0x03	; 3
   16226:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   1622a:	14 96       	adiw	r26, 0x04	; 4
   1622c:	8c 91       	ld	r24, X
   1622e:	14 97       	sbiw	r26, 0x04	; 4
   16230:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   16234:	15 96       	adiw	r26, 0x05	; 5
   16236:	8c 91       	ld	r24, X
   16238:	15 97       	sbiw	r26, 0x05	; 5
   1623a:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   1623e:	16 96       	adiw	r26, 0x06	; 6
   16240:	8c 91       	ld	r24, X
   16242:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   16246:	b2 e0       	ldi	r27, 0x02	; 2
   16248:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   1624c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16250:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   16254:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   16258:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1625c:	81 30       	cpi	r24, 0x01	; 1
   1625e:	41 f5       	brne	.+80     	; 0x162b0 <_Z22Valve_Grouping_Handlerh+0x3e2>
   16260:	6d ec       	ldi	r22, 0xCD	; 205
   16262:	7f e3       	ldi	r23, 0x3F	; 63
   16264:	86 ec       	ldi	r24, 0xC6	; 198
   16266:	94 e1       	ldi	r25, 0x14	; 20
   16268:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1626c:	4a e0       	ldi	r20, 0x0A	; 10
   1626e:	50 e0       	ldi	r21, 0x00	; 0
   16270:	6d a9       	ldd	r22, Y+53	; 0x35
   16272:	7e a9       	ldd	r23, Y+54	; 0x36
   16274:	86 ec       	ldi	r24, 0xC6	; 198
   16276:	94 e1       	ldi	r25, 0x14	; 20
   16278:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
   1627c:	86 ec       	ldi	r24, 0xC6	; 198
   1627e:	94 e1       	ldi	r25, 0x14	; 20
   16280:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16284:	68 eb       	ldi	r22, 0xB8	; 184
   16286:	7f e3       	ldi	r23, 0x3F	; 63
   16288:	86 ec       	ldi	r24, 0xC6	; 198
   1628a:	94 e1       	ldi	r25, 0x14	; 20
   1628c:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16290:	4c e0       	ldi	r20, 0x0C	; 12
   16292:	50 e0       	ldi	r21, 0x00	; 0
   16294:	65 ef       	ldi	r22, 0xF5	; 245
   16296:	73 e1       	ldi	r23, 0x13	; 19
   16298:	86 ec       	ldi	r24, 0xC6	; 198
   1629a:	94 e1       	ldi	r25, 0x14	; 20
   1629c:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   162a0:	86 ec       	ldi	r24, 0xC6	; 198
   162a2:	94 e1       	ldi	r25, 0x14	; 20
   162a4:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   162a8:	86 ec       	ldi	r24, 0xC6	; 198
   162aa:	94 e1       	ldi	r25, 0x14	; 20
   162ac:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   162b0:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   162b4:	88 23       	and	r24, r24
   162b6:	a1 f0       	breq	.+40     	; 0x162e0 <_Z22Valve_Grouping_Handlerh+0x412>
   162b8:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   162bc:	88 23       	and	r24, r24
   162be:	81 f0       	breq	.+32     	; 0x162e0 <_Z22Valve_Grouping_Handlerh+0x412>
   162c0:	e0 ed       	ldi	r30, 0xD0	; 208
   162c2:	ff e0       	ldi	r31, 0x0F	; 15
   162c4:	01 90       	ld	r0, Z+
   162c6:	00 20       	and	r0, r0
   162c8:	e9 f7       	brne	.-6      	; 0x162c4 <_Z22Valve_Grouping_Handlerh+0x3f6>
   162ca:	31 97       	sbiw	r30, 0x01	; 1
   162cc:	af 01       	movw	r20, r30
   162ce:	40 5d       	subi	r20, 0xD0	; 208
   162d0:	5f 40       	sbci	r21, 0x0F	; 15
   162d2:	21 e0       	ldi	r18, 0x01	; 1
   162d4:	60 ed       	ldi	r22, 0xD0	; 208
   162d6:	7f e0       	ldi	r23, 0x0F	; 15
   162d8:	82 e6       	ldi	r24, 0x62	; 98
   162da:	9f e0       	ldi	r25, 0x0F	; 15
   162dc:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   162e0:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   162e4:	8c e0       	ldi	r24, 0x0C	; 12
   162e6:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   162ea:	88 eb       	ldi	r24, 0xB8	; 184
   162ec:	9b e0       	ldi	r25, 0x0B	; 11
   162ee:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   162f2:	88 23       	and	r24, r24
   162f4:	09 f4       	brne	.+2      	; 0x162f8 <_Z22Valve_Grouping_Handlerh+0x42a>
   162f6:	59 c0       	rjmp	.+178    	; 0x163aa <_Z22Valve_Grouping_Handlerh+0x4dc>
   162f8:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   162fc:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   16300:	88 23       	and	r24, r24
   16302:	a1 f0       	breq	.+40     	; 0x1632c <_Z22Valve_Grouping_Handlerh+0x45e>
   16304:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   16308:	88 23       	and	r24, r24
   1630a:	81 f0       	breq	.+32     	; 0x1632c <_Z22Valve_Grouping_Handlerh+0x45e>
   1630c:	e0 ed       	ldi	r30, 0xD0	; 208
   1630e:	ff e0       	ldi	r31, 0x0F	; 15
   16310:	01 90       	ld	r0, Z+
   16312:	00 20       	and	r0, r0
   16314:	e9 f7       	brne	.-6      	; 0x16310 <_Z22Valve_Grouping_Handlerh+0x442>
   16316:	31 97       	sbiw	r30, 0x01	; 1
   16318:	af 01       	movw	r20, r30
   1631a:	40 5d       	subi	r20, 0xD0	; 208
   1631c:	5f 40       	sbci	r21, 0x0F	; 15
   1631e:	21 e0       	ldi	r18, 0x01	; 1
   16320:	60 ed       	ldi	r22, 0xD0	; 208
   16322:	7f e0       	ldi	r23, 0x0F	; 15
   16324:	82 e6       	ldi	r24, 0x62	; 98
   16326:	9f e0       	ldi	r25, 0x0F	; 15
   16328:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   1632c:	90 e0       	ldi	r25, 0x00	; 0
   1632e:	80 e0       	ldi	r24, 0x00	; 0
   16330:	28 2f       	mov	r18, r24
   16332:	30 e0       	ldi	r19, 0x00	; 0
   16334:	ef a9       	ldd	r30, Y+55	; 0x37
   16336:	f8 ad       	ldd	r31, Y+56	; 0x38
   16338:	e2 0f       	add	r30, r18
   1633a:	f3 1f       	adc	r31, r19
   1633c:	d9 01       	movw	r26, r18
   1633e:	a7 5f       	subi	r26, 0xF7	; 247
   16340:	bb 4e       	sbci	r27, 0xEB	; 235
   16342:	41 81       	ldd	r20, Z+1	; 0x01
   16344:	2c 91       	ld	r18, X
   16346:	42 17       	cp	r20, r18
   16348:	11 f0       	breq	.+4      	; 0x1634e <_Z22Valve_Grouping_Handlerh+0x480>
   1634a:	90 e0       	ldi	r25, 0x00	; 0
   1634c:	86 e0       	ldi	r24, 0x06	; 6
   1634e:	9f 5f       	subi	r25, 0xFF	; 255
   16350:	8f 5f       	subi	r24, 0xFF	; 255
   16352:	86 30       	cpi	r24, 0x06	; 6
   16354:	68 f3       	brcs	.-38     	; 0x16330 <_Z22Valve_Grouping_Handlerh+0x462>
   16356:	96 30       	cpi	r25, 0x06	; 6
   16358:	c9 f4       	brne	.+50     	; 0x1638c <_Z22Valve_Grouping_Handlerh+0x4be>
   1635a:	81 e0       	ldi	r24, 0x01	; 1
   1635c:	f8 01       	movw	r30, r16
   1635e:	83 87       	std	Z+11, r24	; 0x0b
   16360:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   16364:	22 87       	std	Z+10, r18	; 0x0a
   16366:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   1636a:	90 e0       	ldi	r25, 0x00	; 0
   1636c:	98 2f       	mov	r25, r24
   1636e:	88 27       	eor	r24, r24
   16370:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   16374:	83 2b       	or	r24, r19
   16376:	91 87       	std	Z+9, r25	; 0x09
   16378:	80 87       	std	Z+8, r24	; 0x08
   1637a:	22 23       	and	r18, r18
   1637c:	e9 f0       	breq	.+58     	; 0x163b8 <_Z22Valve_Grouping_Handlerh+0x4ea>
   1637e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16382:	81 30       	cpi	r24, 0x01	; 1
   16384:	d9 f4       	brne	.+54     	; 0x163bc <_Z22Valve_Grouping_Handlerh+0x4ee>
   16386:	63 e9       	ldi	r22, 0x93	; 147
   16388:	7f e3       	ldi	r23, 0x3F	; 63
   1638a:	06 c0       	rjmp	.+12     	; 0x16398 <_Z22Valve_Grouping_Handlerh+0x4ca>
   1638c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16390:	81 30       	cpi	r24, 0x01	; 1
   16392:	a1 f4       	brne	.+40     	; 0x163bc <_Z22Valve_Grouping_Handlerh+0x4ee>
   16394:	62 e7       	ldi	r22, 0x72	; 114
   16396:	7f e3       	ldi	r23, 0x3F	; 63
   16398:	86 ec       	ldi	r24, 0xC6	; 198
   1639a:	94 e1       	ldi	r25, 0x14	; 20
   1639c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   163a0:	86 ec       	ldi	r24, 0xC6	; 198
   163a2:	94 e1       	ldi	r25, 0x14	; 20
   163a4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   163a8:	09 c0       	rjmp	.+18     	; 0x163bc <_Z22Valve_Grouping_Handlerh+0x4ee>
   163aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   163ae:	81 30       	cpi	r24, 0x01	; 1
   163b0:	29 f4       	brne	.+10     	; 0x163bc <_Z22Valve_Grouping_Handlerh+0x4ee>
   163b2:	6b e4       	ldi	r22, 0x4B	; 75
   163b4:	7f e3       	ldi	r23, 0x3F	; 63
   163b6:	f0 cf       	rjmp	.-32     	; 0x16398 <_Z22Valve_Grouping_Handlerh+0x4ca>
   163b8:	e3 e0       	ldi	r30, 0x03	; 3
   163ba:	6e 2e       	mov	r6, r30
   163bc:	68 ee       	ldi	r22, 0xE8	; 232
   163be:	73 e0       	ldi	r23, 0x03	; 3
   163c0:	80 e0       	ldi	r24, 0x00	; 0
   163c2:	90 e0       	ldi	r25, 0x00	; 0
   163c4:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   163c8:	f3 e0       	ldi	r31, 0x03	; 3
   163ca:	6f 12       	cpse	r6, r31
   163cc:	17 cf       	rjmp	.-466    	; 0x161fc <_Z22Valve_Grouping_Handlerh+0x32e>
   163ce:	ec ce       	rjmp	.-552    	; 0x161a8 <_Z22Valve_Grouping_Handlerh+0x2da>
   163d0:	23 e0       	ldi	r18, 0x03	; 3
   163d2:	52 16       	cp	r5, r18
   163d4:	11 f4       	brne	.+4      	; 0x163da <_Z22Valve_Grouping_Handlerh+0x50c>
   163d6:	0c 94 a1 ba 	jmp	0x17542	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   163da:	35 e0       	ldi	r19, 0x05	; 5
   163dc:	53 12       	cpse	r5, r19
   163de:	45 c0       	rjmp	.+138    	; 0x1646a <_Z22Valve_Grouping_Handlerh+0x59c>
   163e0:	7e e0       	ldi	r23, 0x0E	; 14
   163e2:	f7 2e       	mov	r15, r23
   163e4:	00 e0       	ldi	r16, 0x00	; 0
   163e6:	10 e0       	ldi	r17, 0x00	; 0
   163e8:	f4 01       	movw	r30, r8
   163ea:	e0 0f       	add	r30, r16
   163ec:	f1 1f       	adc	r31, r17
   163ee:	e1 81       	ldd	r30, Z+1	; 0x01
   163f0:	e3 31       	cpi	r30, 0x13	; 19
   163f2:	68 f0       	brcs	.+26     	; 0x1640e <_Z22Valve_Grouping_Handlerh+0x540>
   163f4:	f0 e0       	ldi	r31, 0x00	; 0
   163f6:	e7 5c       	subi	r30, 0xC7	; 199
   163f8:	fb 4e       	sbci	r31, 0xEB	; 235
   163fa:	61 e0       	ldi	r22, 0x01	; 1
   163fc:	80 81       	ld	r24, Z
   163fe:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16402:	68 ec       	ldi	r22, 0xC8	; 200
   16404:	70 e0       	ldi	r23, 0x00	; 0
   16406:	80 e0       	ldi	r24, 0x00	; 0
   16408:	90 e0       	ldi	r25, 0x00	; 0
   1640a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   1640e:	0f 5f       	subi	r16, 0xFF	; 255
   16410:	1f 4f       	sbci	r17, 0xFF	; 255
   16412:	05 30       	cpi	r16, 0x05	; 5
   16414:	11 05       	cpc	r17, r1
   16416:	41 f7       	brne	.-48     	; 0x163e8 <_Z22Valve_Grouping_Handlerh+0x51a>
   16418:	fa 94       	dec	r15
   1641a:	46 e0       	ldi	r20, 0x06	; 6
   1641c:	84 0e       	add	r8, r20
   1641e:	91 1c       	adc	r9, r1
   16420:	f1 10       	cpse	r15, r1
   16422:	e0 cf       	rjmp	.-64     	; 0x163e4 <_Z22Valve_Grouping_Handlerh+0x516>
   16424:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
   16428:	88 36       	cpi	r24, 0x68	; 104
   1642a:	11 f0       	breq	.+4      	; 0x16430 <_Z22Valve_Grouping_Handlerh+0x562>
   1642c:	0c 94 a1 ba 	jmp	0x17542	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   16430:	0e e3       	ldi	r16, 0x3E	; 62
   16432:	1e e0       	ldi	r17, 0x0E	; 14
   16434:	63 e4       	ldi	r22, 0x43	; 67
   16436:	e6 2e       	mov	r14, r22
   16438:	6e e0       	ldi	r22, 0x0E	; 14
   1643a:	f6 2e       	mov	r15, r22
   1643c:	d8 01       	movw	r26, r16
   1643e:	ed 91       	ld	r30, X+
   16440:	8d 01       	movw	r16, r26
   16442:	e3 31       	cpi	r30, 0x13	; 19
   16444:	68 f0       	brcs	.+26     	; 0x16460 <_Z22Valve_Grouping_Handlerh+0x592>
   16446:	f0 e0       	ldi	r31, 0x00	; 0
   16448:	e7 5c       	subi	r30, 0xC7	; 199
   1644a:	fb 4e       	sbci	r31, 0xEB	; 235
   1644c:	61 e0       	ldi	r22, 0x01	; 1
   1644e:	80 81       	ld	r24, Z
   16450:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16454:	68 ec       	ldi	r22, 0xC8	; 200
   16456:	70 e0       	ldi	r23, 0x00	; 0
   16458:	80 e0       	ldi	r24, 0x00	; 0
   1645a:	90 e0       	ldi	r25, 0x00	; 0
   1645c:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16460:	e0 16       	cp	r14, r16
   16462:	f1 06       	cpc	r15, r17
   16464:	59 f7       	brne	.-42     	; 0x1643c <_Z22Valve_Grouping_Handlerh+0x56e>
   16466:	0c 94 a1 ba 	jmp	0x17542	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   1646a:	b1 e0       	ldi	r27, 0x01	; 1
   1646c:	5b 12       	cpse	r5, r27
   1646e:	4b c1       	rjmp	.+662    	; 0x16706 <_Z22Valve_Grouping_Handlerh+0x838>
   16470:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16474:	81 30       	cpi	r24, 0x01	; 1
   16476:	51 f4       	brne	.+20     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0x5be>
   16478:	60 e2       	ldi	r22, 0x20	; 32
   1647a:	7f e3       	ldi	r23, 0x3F	; 63
   1647c:	86 ec       	ldi	r24, 0xC6	; 198
   1647e:	94 e1       	ldi	r25, 0x14	; 20
   16480:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16484:	86 ec       	ldi	r24, 0xC6	; 198
   16486:	94 e1       	ldi	r25, 0x14	; 20
   16488:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1648c:	05 e1       	ldi	r16, 0x15	; 21
   1648e:	1c e0       	ldi	r17, 0x0C	; 12
   16490:	44 e0       	ldi	r20, 0x04	; 4
   16492:	a4 2e       	mov	r10, r20
   16494:	b1 2c       	mov	r11, r1
   16496:	c1 2c       	mov	r12, r1
   16498:	d1 2c       	mov	r13, r1
   1649a:	5d e0       	ldi	r21, 0x0D	; 13
   1649c:	65 2e       	mov	r6, r21
   1649e:	f8 01       	movw	r30, r16
   164a0:	82 85       	ldd	r24, Z+10	; 0x0a
   164a2:	88 23       	and	r24, r24
   164a4:	09 f1       	breq	.+66     	; 0x164e8 <_Z22Valve_Grouping_Handlerh+0x61a>
   164a6:	71 2c       	mov	r7, r1
   164a8:	40 e0       	ldi	r20, 0x00	; 0
   164aa:	36 c0       	rjmp	.+108    	; 0x16518 <_Z22Valve_Grouping_Handlerh+0x64a>
   164ac:	ae 01       	movw	r20, r28
   164ae:	45 5d       	subi	r20, 0xD5	; 213
   164b0:	5f 4f       	sbci	r21, 0xFF	; 255
   164b2:	1a 01       	movw	r2, r20
   164b4:	99 24       	eor	r9, r9
   164b6:	93 94       	inc	r9
   164b8:	b6 01       	movw	r22, r12
   164ba:	6f 5f       	subi	r22, 0xFF	; 255
   164bc:	7f 4f       	sbci	r23, 0xFF	; 255
   164be:	7c ab       	std	Y+52, r23	; 0x34
   164c0:	6b ab       	std	Y+51, r22	; 0x33
   164c2:	6c 9c       	mul	r6, r12
   164c4:	c0 01       	movw	r24, r0
   164c6:	6d 9c       	mul	r6, r13
   164c8:	90 0d       	add	r25, r0
   164ca:	11 24       	eor	r1, r1
   164cc:	dc 01       	movw	r26, r24
   164ce:	ab 5e       	subi	r26, 0xEB	; 235
   164d0:	b3 4f       	sbci	r27, 0xF3	; 243
   164d2:	be ab       	std	Y+54, r27	; 0x36
   164d4:	ad ab       	std	Y+53, r26	; 0x35
   164d6:	f1 01       	movw	r30, r2
   164d8:	81 91       	ld	r24, Z+
   164da:	1f 01       	movw	r2, r30
   164dc:	87 21       	and	r24, r7
   164de:	41 f5       	brne	.+80     	; 0x16530 <_Z22Valve_Grouping_Handlerh+0x662>
   164e0:	93 94       	inc	r9
   164e2:	f4 e0       	ldi	r31, 0x04	; 4
   164e4:	9f 12       	cpse	r9, r31
   164e6:	f7 cf       	rjmp	.-18     	; 0x164d6 <_Z22Valve_Grouping_Handlerh+0x608>
   164e8:	ff ef       	ldi	r31, 0xFF	; 255
   164ea:	cf 1a       	sub	r12, r31
   164ec:	df 0a       	sbc	r13, r31
   164ee:	03 5f       	subi	r16, 0xF3	; 243
   164f0:	1f 4f       	sbci	r17, 0xFF	; 255
   164f2:	23 e0       	ldi	r18, 0x03	; 3
   164f4:	a2 0e       	add	r10, r18
   164f6:	b1 1c       	adc	r11, r1
   164f8:	36 e0       	ldi	r19, 0x06	; 6
   164fa:	c3 16       	cp	r12, r19
   164fc:	d1 04       	cpc	r13, r1
   164fe:	79 f6       	brne	.-98     	; 0x1649e <_Z22Valve_Grouping_Handlerh+0x5d0>
   16500:	06 c1       	rjmp	.+524    	; 0x1670e <_Z22Valve_Grouping_Handlerh+0x840>
   16502:	28 17       	cp	r18, r24
   16504:	39 07       	cpc	r19, r25
   16506:	11 f4       	brne	.+4      	; 0x1650c <_Z22Valve_Grouping_Handlerh+0x63e>
   16508:	50 81       	ld	r21, Z
   1650a:	75 2a       	or	r7, r21
   1650c:	01 96       	adiw	r24, 0x01	; 1
   1650e:	31 96       	adiw	r30, 0x01	; 1
   16510:	a8 16       	cp	r10, r24
   16512:	b9 06       	cpc	r11, r25
   16514:	b1 f7       	brne	.-20     	; 0x16502 <_Z22Valve_Grouping_Handlerh+0x634>
   16516:	4f 5f       	subi	r20, 0xFF	; 255
   16518:	f7 01       	movw	r30, r14
   1651a:	e4 0f       	add	r30, r20
   1651c:	f1 1d       	adc	r31, r1
   1651e:	20 81       	ld	r18, Z
   16520:	22 23       	and	r18, r18
   16522:	21 f2       	breq	.-120    	; 0x164ac <_Z22Valve_Grouping_Handlerh+0x5de>
   16524:	c5 01       	movw	r24, r10
   16526:	03 97       	sbiw	r24, 0x03	; 3
   16528:	fe 01       	movw	r30, r28
   1652a:	bb 96       	adiw	r30, 0x2b	; 43
   1652c:	30 e0       	ldi	r19, 0x00	; 0
   1652e:	e9 cf       	rjmp	.-46     	; 0x16502 <_Z22Valve_Grouping_Handlerh+0x634>
   16530:	81 2c       	mov	r8, r1
   16532:	83 94       	inc	r8
   16534:	a5 ef       	ldi	r26, 0xF5	; 245
   16536:	b3 e1       	ldi	r27, 0x13	; 19
   16538:	e4 e1       	ldi	r30, 0x14	; 20
   1653a:	1d 92       	st	X+, r1
   1653c:	ea 95       	dec	r30
   1653e:	e9 f7       	brne	.-6      	; 0x1653a <_Z22Valve_Grouping_Handlerh+0x66c>
   16540:	d8 01       	movw	r26, r16
   16542:	11 96       	adiw	r26, 0x01	; 1
   16544:	8c 91       	ld	r24, X
   16546:	11 97       	sbiw	r26, 0x01	; 1
   16548:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   1654c:	12 96       	adiw	r26, 0x02	; 2
   1654e:	8c 91       	ld	r24, X
   16550:	12 97       	sbiw	r26, 0x02	; 2
   16552:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   16556:	13 96       	adiw	r26, 0x03	; 3
   16558:	8c 91       	ld	r24, X
   1655a:	13 97       	sbiw	r26, 0x03	; 3
   1655c:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   16560:	14 96       	adiw	r26, 0x04	; 4
   16562:	8c 91       	ld	r24, X
   16564:	14 97       	sbiw	r26, 0x04	; 4
   16566:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   1656a:	15 96       	adiw	r26, 0x05	; 5
   1656c:	8c 91       	ld	r24, X
   1656e:	15 97       	sbiw	r26, 0x05	; 5
   16570:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16574:	16 96       	adiw	r26, 0x06	; 6
   16576:	8c 91       	ld	r24, X
   16578:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   1657c:	b2 e0       	ldi	r27, 0x02	; 2
   1657e:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   16582:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16586:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   1658a:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
   1658e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16592:	81 30       	cpi	r24, 0x01	; 1
   16594:	41 f5       	brne	.+80     	; 0x165e6 <_Z22Valve_Grouping_Handlerh+0x718>
   16596:	6c ef       	ldi	r22, 0xFC	; 252
   16598:	7e e3       	ldi	r23, 0x3E	; 62
   1659a:	86 ec       	ldi	r24, 0xC6	; 198
   1659c:	94 e1       	ldi	r25, 0x14	; 20
   1659e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   165a2:	4a e0       	ldi	r20, 0x0A	; 10
   165a4:	50 e0       	ldi	r21, 0x00	; 0
   165a6:	6b a9       	ldd	r22, Y+51	; 0x33
   165a8:	7c a9       	ldd	r23, Y+52	; 0x34
   165aa:	86 ec       	ldi	r24, 0xC6	; 198
   165ac:	94 e1       	ldi	r25, 0x14	; 20
   165ae:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
   165b2:	86 ec       	ldi	r24, 0xC6	; 198
   165b4:	94 e1       	ldi	r25, 0x14	; 20
   165b6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   165ba:	67 ee       	ldi	r22, 0xE7	; 231
   165bc:	7e e3       	ldi	r23, 0x3E	; 62
   165be:	86 ec       	ldi	r24, 0xC6	; 198
   165c0:	94 e1       	ldi	r25, 0x14	; 20
   165c2:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   165c6:	46 e0       	ldi	r20, 0x06	; 6
   165c8:	50 e0       	ldi	r21, 0x00	; 0
   165ca:	65 ef       	ldi	r22, 0xF5	; 245
   165cc:	73 e1       	ldi	r23, 0x13	; 19
   165ce:	86 ec       	ldi	r24, 0xC6	; 198
   165d0:	94 e1       	ldi	r25, 0x14	; 20
   165d2:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   165d6:	86 ec       	ldi	r24, 0xC6	; 198
   165d8:	94 e1       	ldi	r25, 0x14	; 20
   165da:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   165de:	86 ec       	ldi	r24, 0xC6	; 198
   165e0:	94 e1       	ldi	r25, 0x14	; 20
   165e2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   165e6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   165ea:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   165ee:	88 23       	and	r24, r24
   165f0:	a1 f0       	breq	.+40     	; 0x1661a <_Z22Valve_Grouping_Handlerh+0x74c>
   165f2:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   165f6:	88 23       	and	r24, r24
   165f8:	81 f0       	breq	.+32     	; 0x1661a <_Z22Valve_Grouping_Handlerh+0x74c>
   165fa:	e0 ed       	ldi	r30, 0xD0	; 208
   165fc:	ff e0       	ldi	r31, 0x0F	; 15
   165fe:	01 90       	ld	r0, Z+
   16600:	00 20       	and	r0, r0
   16602:	e9 f7       	brne	.-6      	; 0x165fe <_Z22Valve_Grouping_Handlerh+0x730>
   16604:	31 97       	sbiw	r30, 0x01	; 1
   16606:	af 01       	movw	r20, r30
   16608:	40 5d       	subi	r20, 0xD0	; 208
   1660a:	5f 40       	sbci	r21, 0x0F	; 15
   1660c:	21 e0       	ldi	r18, 0x01	; 1
   1660e:	60 ed       	ldi	r22, 0xD0	; 208
   16610:	7f e0       	ldi	r23, 0x0F	; 15
   16612:	82 e6       	ldi	r24, 0x62	; 98
   16614:	9f e0       	ldi	r25, 0x0F	; 15
   16616:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   1661a:	8c e0       	ldi	r24, 0x0C	; 12
   1661c:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   16620:	88 eb       	ldi	r24, 0xB8	; 184
   16622:	9b e0       	ldi	r25, 0x0B	; 11
   16624:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   16628:	88 23       	and	r24, r24
   1662a:	09 f4       	brne	.+2      	; 0x1662e <_Z22Valve_Grouping_Handlerh+0x760>
   1662c:	59 c0       	rjmp	.+178    	; 0x166e0 <_Z22Valve_Grouping_Handlerh+0x812>
   1662e:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   16632:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   16636:	88 23       	and	r24, r24
   16638:	a1 f0       	breq	.+40     	; 0x16662 <_Z22Valve_Grouping_Handlerh+0x794>
   1663a:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   1663e:	88 23       	and	r24, r24
   16640:	81 f0       	breq	.+32     	; 0x16662 <_Z22Valve_Grouping_Handlerh+0x794>
   16642:	e0 ed       	ldi	r30, 0xD0	; 208
   16644:	ff e0       	ldi	r31, 0x0F	; 15
   16646:	01 90       	ld	r0, Z+
   16648:	00 20       	and	r0, r0
   1664a:	e9 f7       	brne	.-6      	; 0x16646 <_Z22Valve_Grouping_Handlerh+0x778>
   1664c:	31 97       	sbiw	r30, 0x01	; 1
   1664e:	af 01       	movw	r20, r30
   16650:	40 5d       	subi	r20, 0xD0	; 208
   16652:	5f 40       	sbci	r21, 0x0F	; 15
   16654:	21 e0       	ldi	r18, 0x01	; 1
   16656:	60 ed       	ldi	r22, 0xD0	; 208
   16658:	7f e0       	ldi	r23, 0x0F	; 15
   1665a:	82 e6       	ldi	r24, 0x62	; 98
   1665c:	9f e0       	ldi	r25, 0x0F	; 15
   1665e:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   16662:	90 e0       	ldi	r25, 0x00	; 0
   16664:	80 e0       	ldi	r24, 0x00	; 0
   16666:	28 2f       	mov	r18, r24
   16668:	30 e0       	ldi	r19, 0x00	; 0
   1666a:	ed a9       	ldd	r30, Y+53	; 0x35
   1666c:	fe a9       	ldd	r31, Y+54	; 0x36
   1666e:	e2 0f       	add	r30, r18
   16670:	f3 1f       	adc	r31, r19
   16672:	d9 01       	movw	r26, r18
   16674:	a7 5f       	subi	r26, 0xF7	; 247
   16676:	bb 4e       	sbci	r27, 0xEB	; 235
   16678:	41 81       	ldd	r20, Z+1	; 0x01
   1667a:	2c 91       	ld	r18, X
   1667c:	42 17       	cp	r20, r18
   1667e:	11 f0       	breq	.+4      	; 0x16684 <_Z22Valve_Grouping_Handlerh+0x7b6>
   16680:	90 e0       	ldi	r25, 0x00	; 0
   16682:	86 e0       	ldi	r24, 0x06	; 6
   16684:	9f 5f       	subi	r25, 0xFF	; 255
   16686:	8f 5f       	subi	r24, 0xFF	; 255
   16688:	86 30       	cpi	r24, 0x06	; 6
   1668a:	68 f3       	brcs	.-38     	; 0x16666 <_Z22Valve_Grouping_Handlerh+0x798>
   1668c:	96 30       	cpi	r25, 0x06	; 6
   1668e:	c9 f4       	brne	.+50     	; 0x166c2 <_Z22Valve_Grouping_Handlerh+0x7f4>
   16690:	81 e0       	ldi	r24, 0x01	; 1
   16692:	f8 01       	movw	r30, r16
   16694:	83 87       	std	Z+11, r24	; 0x0b
   16696:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   1669a:	22 87       	std	Z+10, r18	; 0x0a
   1669c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   166a0:	90 e0       	ldi	r25, 0x00	; 0
   166a2:	98 2f       	mov	r25, r24
   166a4:	88 27       	eor	r24, r24
   166a6:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   166aa:	83 2b       	or	r24, r19
   166ac:	91 87       	std	Z+9, r25	; 0x09
   166ae:	80 87       	std	Z+8, r24	; 0x08
   166b0:	22 23       	and	r18, r18
   166b2:	e9 f0       	breq	.+58     	; 0x166ee <_Z22Valve_Grouping_Handlerh+0x820>
   166b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   166b8:	81 30       	cpi	r24, 0x01	; 1
   166ba:	d9 f4       	brne	.+54     	; 0x166f2 <_Z22Valve_Grouping_Handlerh+0x824>
   166bc:	61 ec       	ldi	r22, 0xC1	; 193
   166be:	7e e3       	ldi	r23, 0x3E	; 62
   166c0:	06 c0       	rjmp	.+12     	; 0x166ce <_Z22Valve_Grouping_Handlerh+0x800>
   166c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   166c6:	81 30       	cpi	r24, 0x01	; 1
   166c8:	a1 f4       	brne	.+40     	; 0x166f2 <_Z22Valve_Grouping_Handlerh+0x824>
   166ca:	6f e9       	ldi	r22, 0x9F	; 159
   166cc:	7e e3       	ldi	r23, 0x3E	; 62
   166ce:	86 ec       	ldi	r24, 0xC6	; 198
   166d0:	94 e1       	ldi	r25, 0x14	; 20
   166d2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   166d6:	86 ec       	ldi	r24, 0xC6	; 198
   166d8:	94 e1       	ldi	r25, 0x14	; 20
   166da:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   166de:	09 c0       	rjmp	.+18     	; 0x166f2 <_Z22Valve_Grouping_Handlerh+0x824>
   166e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   166e4:	81 30       	cpi	r24, 0x01	; 1
   166e6:	29 f4       	brne	.+10     	; 0x166f2 <_Z22Valve_Grouping_Handlerh+0x824>
   166e8:	61 e7       	ldi	r22, 0x71	; 113
   166ea:	7e e3       	ldi	r23, 0x3E	; 62
   166ec:	f0 cf       	rjmp	.-32     	; 0x166ce <_Z22Valve_Grouping_Handlerh+0x800>
   166ee:	93 e0       	ldi	r25, 0x03	; 3
   166f0:	89 2e       	mov	r8, r25
   166f2:	68 ee       	ldi	r22, 0xE8	; 232
   166f4:	73 e0       	ldi	r23, 0x03	; 3
   166f6:	80 e0       	ldi	r24, 0x00	; 0
   166f8:	90 e0       	ldi	r25, 0x00	; 0
   166fa:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   166fe:	f3 e0       	ldi	r31, 0x03	; 3
   16700:	8f 12       	cpse	r8, r31
   16702:	17 cf       	rjmp	.-466    	; 0x16532 <_Z22Valve_Grouping_Handlerh+0x664>
   16704:	ed ce       	rjmp	.-550    	; 0x164e0 <_Z22Valve_Grouping_Handlerh+0x612>
   16706:	21 e0       	ldi	r18, 0x01	; 1
   16708:	25 15       	cp	r18, r5
   1670a:	08 f4       	brcc	.+2      	; 0x1670e <_Z22Valve_Grouping_Handlerh+0x840>
   1670c:	19 c7       	rjmp	.+3634   	; 0x17540 <_Z22Valve_Grouping_Handlerh+0x1672>
   1670e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16712:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16716:	9f 30       	cpi	r25, 0x0F	; 15
   16718:	08 f0       	brcs	.+2      	; 0x1671c <_Z22Valve_Grouping_Handlerh+0x84e>
   1671a:	96 c3       	rjmp	.+1836   	; 0x16e48 <_Z22Valve_Grouping_Handlerh+0xf7a>
   1671c:	81 30       	cpi	r24, 0x01	; 1
   1671e:	51 f4       	brne	.+20     	; 0x16734 <_Z22Valve_Grouping_Handlerh+0x866>
   16720:	63 e6       	ldi	r22, 0x63	; 99
   16722:	7e e3       	ldi	r23, 0x3E	; 62
   16724:	86 ec       	ldi	r24, 0xC6	; 198
   16726:	94 e1       	ldi	r25, 0x14	; 20
   16728:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1672c:	86 ec       	ldi	r24, 0xC6	; 198
   1672e:	94 e1       	ldi	r25, 0x14	; 20
   16730:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16734:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16738:	81 30       	cpi	r24, 0x01	; 1
   1673a:	c1 f5       	brne	.+112    	; 0x167ac <_Z22Valve_Grouping_Handlerh+0x8de>
   1673c:	00 e0       	ldi	r16, 0x00	; 0
   1673e:	10 e0       	ldi	r17, 0x00	; 0
   16740:	86 e0       	ldi	r24, 0x06	; 6
   16742:	f8 2e       	mov	r15, r24
   16744:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16748:	90 e0       	ldi	r25, 0x00	; 0
   1674a:	01 97       	sbiw	r24, 0x01	; 1
   1674c:	f8 9e       	mul	r15, r24
   1674e:	f0 01       	movw	r30, r0
   16750:	f9 9e       	mul	r15, r25
   16752:	f0 0d       	add	r31, r0
   16754:	11 24       	eor	r1, r1
   16756:	e2 5b       	subi	r30, 0xB2	; 178
   16758:	f2 4f       	sbci	r31, 0xF2	; 242
   1675a:	e0 0f       	add	r30, r16
   1675c:	f1 1f       	adc	r31, r17
   1675e:	4a e0       	ldi	r20, 0x0A	; 10
   16760:	50 e0       	ldi	r21, 0x00	; 0
   16762:	61 81       	ldd	r22, Z+1	; 0x01
   16764:	86 ec       	ldi	r24, 0xC6	; 198
   16766:	94 e1       	ldi	r25, 0x14	; 20
   16768:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   1676c:	61 e6       	ldi	r22, 0x61	; 97
   1676e:	7e e3       	ldi	r23, 0x3E	; 62
   16770:	86 ec       	ldi	r24, 0xC6	; 198
   16772:	94 e1       	ldi	r25, 0x14	; 20
   16774:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16778:	0f 5f       	subi	r16, 0xFF	; 255
   1677a:	1f 4f       	sbci	r17, 0xFF	; 255
   1677c:	05 30       	cpi	r16, 0x05	; 5
   1677e:	11 05       	cpc	r17, r1
   16780:	09 f7       	brne	.-62     	; 0x16744 <_Z22Valve_Grouping_Handlerh+0x876>
   16782:	6b e4       	ldi	r22, 0x4B	; 75
   16784:	7e e3       	ldi	r23, 0x3E	; 62
   16786:	86 ec       	ldi	r24, 0xC6	; 198
   16788:	94 e1       	ldi	r25, 0x14	; 20
   1678a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1678e:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16792:	70 e0       	ldi	r23, 0x00	; 0
   16794:	61 50       	subi	r22, 0x01	; 1
   16796:	71 09       	sbc	r23, r1
   16798:	4a e0       	ldi	r20, 0x0A	; 10
   1679a:	50 e0       	ldi	r21, 0x00	; 0
   1679c:	86 ec       	ldi	r24, 0xC6	; 198
   1679e:	94 e1       	ldi	r25, 0x14	; 20
   167a0:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
   167a4:	86 ec       	ldi	r24, 0xC6	; 198
   167a6:	94 e1       	ldi	r25, 0x14	; 20
   167a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   167ac:	00 e0       	ldi	r16, 0x00	; 0
   167ae:	10 e0       	ldi	r17, 0x00	; 0
   167b0:	81 e0       	ldi	r24, 0x01	; 1
   167b2:	85 25       	eor	r24, r5
   167b4:	81 70       	andi	r24, 0x01	; 1
   167b6:	8f ab       	std	Y+55, r24	; 0x37
   167b8:	ad e0       	ldi	r26, 0x0D	; 13
   167ba:	2a 2e       	mov	r2, r26
   167bc:	b0 ed       	ldi	r27, 0xD0	; 208
   167be:	6b 2e       	mov	r6, r27
   167c0:	bf e0       	ldi	r27, 0x0F	; 15
   167c2:	7b 2e       	mov	r7, r27
   167c4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   167c8:	90 e0       	ldi	r25, 0x00	; 0
   167ca:	01 97       	sbiw	r24, 0x01	; 1
   167cc:	36 e0       	ldi	r19, 0x06	; 6
   167ce:	38 9f       	mul	r19, r24
   167d0:	f0 01       	movw	r30, r0
   167d2:	39 9f       	mul	r19, r25
   167d4:	f0 0d       	add	r31, r0
   167d6:	11 24       	eor	r1, r1
   167d8:	e2 5b       	subi	r30, 0xB2	; 178
   167da:	f2 4f       	sbci	r31, 0xF2	; 242
   167dc:	e0 0f       	add	r30, r16
   167de:	f1 1f       	adc	r31, r17
   167e0:	f1 80       	ldd	r15, Z+1	; 0x01
   167e2:	8f ef       	ldi	r24, 0xFF	; 255
   167e4:	8f 0d       	add	r24, r15
   167e6:	82 31       	cpi	r24, 0x12	; 18
   167e8:	08 f0       	brcs	.+2      	; 0x167ec <_Z22Valve_Grouping_Handlerh+0x91e>
   167ea:	f5 c2       	rjmp	.+1514   	; 0x16dd6 <_Z22Valve_Grouping_Handlerh+0xf08>
   167ec:	43 e0       	ldi	r20, 0x03	; 3
   167ee:	4f 15       	cp	r20, r15
   167f0:	a8 f4       	brcc	.+42     	; 0x1681c <_Z22Valve_Grouping_Handlerh+0x94e>
   167f2:	8f 2d       	mov	r24, r15
   167f4:	63 e0       	ldi	r22, 0x03	; 3
   167f6:	0e 94 85 eb 	call	0x1d70a	; 0x1d70a <__udivmodqi4>
   167fa:	2b ea       	ldi	r18, 0xAB	; 171
   167fc:	f2 9e       	mul	r15, r18
   167fe:	21 2d       	mov	r18, r1
   16800:	11 24       	eor	r1, r1
   16802:	99 23       	and	r25, r25
   16804:	31 f0       	breq	.+12     	; 0x16812 <_Z22Valve_Grouping_Handlerh+0x944>
   16806:	26 95       	lsr	r18
   16808:	ee 24       	eor	r14, r14
   1680a:	e3 94       	inc	r14
   1680c:	e2 0e       	add	r14, r18
   1680e:	f9 2e       	mov	r15, r25
   16810:	07 c0       	rjmp	.+14     	; 0x16820 <_Z22Valve_Grouping_Handlerh+0x952>
   16812:	e2 2e       	mov	r14, r18
   16814:	e6 94       	lsr	r14
   16816:	f3 e0       	ldi	r31, 0x03	; 3
   16818:	ff 2e       	mov	r15, r31
   1681a:	02 c0       	rjmp	.+4      	; 0x16820 <_Z22Valve_Grouping_Handlerh+0x952>
   1681c:	ee 24       	eor	r14, r14
   1681e:	e3 94       	inc	r14
   16820:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16824:	81 30       	cpi	r24, 0x01	; 1
   16826:	89 f4       	brne	.+34     	; 0x1684a <_Z22Valve_Grouping_Handlerh+0x97c>
   16828:	67 e3       	ldi	r22, 0x37	; 55
   1682a:	7e e3       	ldi	r23, 0x3E	; 62
   1682c:	86 ec       	ldi	r24, 0xC6	; 198
   1682e:	94 e1       	ldi	r25, 0x14	; 20
   16830:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16834:	4a e0       	ldi	r20, 0x0A	; 10
   16836:	50 e0       	ldi	r21, 0x00	; 0
   16838:	6e 2d       	mov	r22, r14
   1683a:	86 ec       	ldi	r24, 0xC6	; 198
   1683c:	94 e1       	ldi	r25, 0x14	; 20
   1683e:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   16842:	86 ec       	ldi	r24, 0xC6	; 198
   16844:	94 e1       	ldi	r25, 0x14	; 20
   16846:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1684a:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   1684e:	81 11       	cpse	r24, r1
   16850:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   16854:	84 e1       	ldi	r24, 0x14	; 20
   16856:	a5 ef       	ldi	r26, 0xF5	; 245
   16858:	b3 e1       	ldi	r27, 0x13	; 19
   1685a:	1d 92       	st	X+, r1
   1685c:	8a 95       	dec	r24
   1685e:	e9 f7       	brne	.-6      	; 0x1685a <_Z22Valve_Grouping_Handlerh+0x98c>
   16860:	2e 2d       	mov	r18, r14
   16862:	30 e0       	ldi	r19, 0x00	; 0
   16864:	21 50       	subi	r18, 0x01	; 1
   16866:	31 09       	sbc	r19, r1
   16868:	b7 e0       	ldi	r27, 0x07	; 7
   1686a:	b2 9f       	mul	r27, r18
   1686c:	c0 01       	movw	r24, r0
   1686e:	b3 9f       	mul	r27, r19
   16870:	90 0d       	add	r25, r0
   16872:	11 24       	eor	r1, r1
   16874:	82 55       	subi	r24, 0x52	; 82
   16876:	9c 4e       	sbci	r25, 0xEC	; 236
   16878:	fc 01       	movw	r30, r24
   1687a:	ec 58       	subi	r30, 0x8C	; 140
   1687c:	ff 4f       	sbci	r31, 0xFF	; 255
   1687e:	20 81       	ld	r18, Z
   16880:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   16884:	31 96       	adiw	r30, 0x01	; 1
   16886:	20 81       	ld	r18, Z
   16888:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   1688c:	31 96       	adiw	r30, 0x01	; 1
   1688e:	20 81       	ld	r18, Z
   16890:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   16894:	31 96       	adiw	r30, 0x01	; 1
   16896:	20 81       	ld	r18, Z
   16898:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   1689c:	31 96       	adiw	r30, 0x01	; 1
   1689e:	20 81       	ld	r18, Z
   168a0:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   168a4:	31 96       	adiw	r30, 0x01	; 1
   168a6:	20 81       	ld	r18, Z
   168a8:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   168ac:	22 e0       	ldi	r18, 0x02	; 2
   168ae:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   168b2:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   168b6:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   168ba:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   168be:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   168c2:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   168c6:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   168ca:	40 e0       	ldi	r20, 0x00	; 0
   168cc:	50 e0       	ldi	r21, 0x00	; 0
   168ce:	d4 2e       	mov	r13, r20
   168d0:	e1 2c       	mov	r14, r1
   168d2:	f1 2c       	mov	r15, r1
   168d4:	24 9e       	mul	r2, r20
   168d6:	b0 01       	movw	r22, r0
   168d8:	25 9e       	mul	r2, r21
   168da:	70 0d       	add	r23, r0
   168dc:	11 24       	eor	r1, r1
   168de:	6b 5e       	subi	r22, 0xEB	; 235
   168e0:	73 4f       	sbci	r23, 0xF3	; 243
   168e2:	2f 2d       	mov	r18, r15
   168e4:	30 e0       	ldi	r19, 0x00	; 0
   168e6:	fb 01       	movw	r30, r22
   168e8:	e2 0f       	add	r30, r18
   168ea:	f3 1f       	adc	r31, r19
   168ec:	28 0f       	add	r18, r24
   168ee:	39 1f       	adc	r19, r25
   168f0:	d9 01       	movw	r26, r18
   168f2:	ac 58       	subi	r26, 0x8C	; 140
   168f4:	bf 4f       	sbci	r27, 0xFF	; 255
   168f6:	31 81       	ldd	r19, Z+1	; 0x01
   168f8:	2c 91       	ld	r18, X
   168fa:	32 17       	cp	r19, r18
   168fc:	19 f0       	breq	.+6      	; 0x16904 <_Z22Valve_Grouping_Handlerh+0xa36>
   168fe:	e1 2c       	mov	r14, r1
   16900:	e6 e0       	ldi	r30, 0x06	; 6
   16902:	fe 2e       	mov	r15, r30
   16904:	e3 94       	inc	r14
   16906:	f3 94       	inc	r15
   16908:	e5 e0       	ldi	r30, 0x05	; 5
   1690a:	ef 15       	cp	r30, r15
   1690c:	50 f7       	brcc	.-44     	; 0x168e2 <_Z22Valve_Grouping_Handlerh+0xa14>
   1690e:	f6 e0       	ldi	r31, 0x06	; 6
   16910:	ef 16       	cp	r14, r31
   16912:	31 f0       	breq	.+12     	; 0x16920 <_Z22Valve_Grouping_Handlerh+0xa52>
   16914:	4f 5f       	subi	r20, 0xFF	; 255
   16916:	5f 4f       	sbci	r21, 0xFF	; 255
   16918:	46 30       	cpi	r20, 0x06	; 6
   1691a:	51 05       	cpc	r21, r1
   1691c:	c1 f6       	brne	.-80     	; 0x168ce <_Z22Valve_Grouping_Handlerh+0xa00>
   1691e:	01 c0       	rjmp	.+2      	; 0x16922 <_Z22Valve_Grouping_Handlerh+0xa54>
   16920:	4d 2c       	mov	r4, r13
   16922:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16926:	81 30       	cpi	r24, 0x01	; 1
   16928:	89 f4       	brne	.+34     	; 0x1694c <_Z22Valve_Grouping_Handlerh+0xa7e>
   1692a:	61 e2       	ldi	r22, 0x21	; 33
   1692c:	7e e3       	ldi	r23, 0x3E	; 62
   1692e:	86 ec       	ldi	r24, 0xC6	; 198
   16930:	94 e1       	ldi	r25, 0x14	; 20
   16932:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16936:	4a e0       	ldi	r20, 0x0A	; 10
   16938:	50 e0       	ldi	r21, 0x00	; 0
   1693a:	64 2d       	mov	r22, r4
   1693c:	86 ec       	ldi	r24, 0xC6	; 198
   1693e:	94 e1       	ldi	r25, 0x14	; 20
   16940:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   16944:	86 ec       	ldi	r24, 0xC6	; 198
   16946:	94 e1       	ldi	r25, 0x14	; 20
   16948:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1694c:	2d e0       	ldi	r18, 0x0D	; 13
   1694e:	42 9e       	mul	r4, r18
   16950:	40 01       	movw	r8, r0
   16952:	11 24       	eor	r1, r1
   16954:	31 2c       	mov	r3, r1
   16956:	24 9c       	mul	r2, r4
   16958:	c0 01       	movw	r24, r0
   1695a:	11 24       	eor	r1, r1
   1695c:	9c 01       	movw	r18, r24
   1695e:	2b 5e       	subi	r18, 0xEB	; 235
   16960:	33 4f       	sbci	r19, 0xF3	; 243
   16962:	a9 01       	movw	r20, r18
   16964:	45 5f       	subi	r20, 0xF5	; 245
   16966:	5f 4f       	sbci	r21, 0xFF	; 255
   16968:	5c ab       	std	Y+52, r21	; 0x34
   1696a:	4b ab       	std	Y+51, r20	; 0x33
   1696c:	b9 01       	movw	r22, r18
   1696e:	68 5f       	subi	r22, 0xF8	; 248
   16970:	7f 4f       	sbci	r23, 0xFF	; 255
   16972:	7e ab       	std	Y+54, r23	; 0x36
   16974:	6d ab       	std	Y+53, r22	; 0x35
   16976:	dc 01       	movw	r26, r24
   16978:	aa 5e       	subi	r26, 0xEA	; 234
   1697a:	b3 4f       	sbci	r27, 0xF3	; 243
   1697c:	7d 01       	movw	r14, r26
   1697e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   16982:	88 23       	and	r24, r24
   16984:	99 f0       	breq	.+38     	; 0x169ac <_Z22Valve_Grouping_Handlerh+0xade>
   16986:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   1698a:	88 23       	and	r24, r24
   1698c:	79 f0       	breq	.+30     	; 0x169ac <_Z22Valve_Grouping_Handlerh+0xade>
   1698e:	f3 01       	movw	r30, r6
   16990:	01 90       	ld	r0, Z+
   16992:	00 20       	and	r0, r0
   16994:	e9 f7       	brne	.-6      	; 0x16990 <_Z22Valve_Grouping_Handlerh+0xac2>
   16996:	31 97       	sbiw	r30, 0x01	; 1
   16998:	af 01       	movw	r20, r30
   1699a:	40 5d       	subi	r20, 0xD0	; 208
   1699c:	5f 40       	sbci	r21, 0x0F	; 15
   1699e:	21 e0       	ldi	r18, 0x01	; 1
   169a0:	60 ed       	ldi	r22, 0xD0	; 208
   169a2:	7f e0       	ldi	r23, 0x0F	; 15
   169a4:	82 e6       	ldi	r24, 0x62	; 98
   169a6:	9f e0       	ldi	r25, 0x0F	; 15
   169a8:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   169ac:	33 94       	inc	r3
   169ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   169b2:	81 30       	cpi	r24, 0x01	; 1
   169b4:	51 f4       	brne	.+20     	; 0x169ca <_Z22Valve_Grouping_Handlerh+0xafc>
   169b6:	6d ef       	ldi	r22, 0xFD	; 253
   169b8:	7d e3       	ldi	r23, 0x3D	; 61
   169ba:	86 ec       	ldi	r24, 0xC6	; 198
   169bc:	94 e1       	ldi	r25, 0x14	; 20
   169be:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   169c2:	86 ec       	ldi	r24, 0xC6	; 198
   169c4:	94 e1       	ldi	r25, 0x14	; 20
   169c6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   169ca:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   169ce:	8c e0       	ldi	r24, 0x0C	; 12
   169d0:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   169d4:	88 eb       	ldi	r24, 0xB8	; 184
   169d6:	9b e0       	ldi	r25, 0x0B	; 11
   169d8:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   169dc:	88 23       	and	r24, r24
   169de:	09 f4       	brne	.+2      	; 0x169e2 <_Z22Valve_Grouping_Handlerh+0xb14>
   169e0:	91 c1       	rjmp	.+802    	; 0x16d04 <_Z22Valve_Grouping_Handlerh+0xe36>
   169e2:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   169e6:	88 23       	and	r24, r24
   169e8:	09 f4       	brne	.+2      	; 0x169ec <_Z22Valve_Grouping_Handlerh+0xb1e>
   169ea:	2f c1       	rjmp	.+606    	; 0x16c4a <_Z22Valve_Grouping_Handlerh+0xd7c>
   169ec:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   169f0:	88 23       	and	r24, r24
   169f2:	99 f0       	breq	.+38     	; 0x16a1a <_Z22Valve_Grouping_Handlerh+0xb4c>
   169f4:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   169f8:	88 23       	and	r24, r24
   169fa:	79 f0       	breq	.+30     	; 0x16a1a <_Z22Valve_Grouping_Handlerh+0xb4c>
   169fc:	f3 01       	movw	r30, r6
   169fe:	01 90       	ld	r0, Z+
   16a00:	00 20       	and	r0, r0
   16a02:	e9 f7       	brne	.-6      	; 0x169fe <_Z22Valve_Grouping_Handlerh+0xb30>
   16a04:	31 97       	sbiw	r30, 0x01	; 1
   16a06:	af 01       	movw	r20, r30
   16a08:	40 5d       	subi	r20, 0xD0	; 208
   16a0a:	5f 40       	sbci	r21, 0x0F	; 15
   16a0c:	21 e0       	ldi	r18, 0x01	; 1
   16a0e:	60 ed       	ldi	r22, 0xD0	; 208
   16a10:	7f e0       	ldi	r23, 0x0F	; 15
   16a12:	82 e6       	ldi	r24, 0x62	; 98
   16a14:	9f e0       	ldi	r25, 0x0F	; 15
   16a16:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   16a1a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16a1e:	81 30       	cpi	r24, 0x01	; 1
   16a20:	59 f5       	brne	.+86     	; 0x16a78 <_Z22Valve_Grouping_Handlerh+0xbaa>
   16a22:	67 ee       	ldi	r22, 0xE7	; 231
   16a24:	7d e3       	ldi	r23, 0x3D	; 61
   16a26:	86 ec       	ldi	r24, 0xC6	; 198
   16a28:	94 e1       	ldi	r25, 0x14	; 20
   16a2a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16a2e:	4a e0       	ldi	r20, 0x0A	; 10
   16a30:	50 e0       	ldi	r21, 0x00	; 0
   16a32:	69 e0       	ldi	r22, 0x09	; 9
   16a34:	74 e1       	ldi	r23, 0x14	; 20
   16a36:	86 ec       	ldi	r24, 0xC6	; 198
   16a38:	94 e1       	ldi	r25, 0x14	; 20
   16a3a:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   16a3e:	86 ec       	ldi	r24, 0xC6	; 198
   16a40:	94 e1       	ldi	r25, 0x14	; 20
   16a42:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   16a46:	86 ec       	ldi	r24, 0xC6	; 198
   16a48:	94 e1       	ldi	r25, 0x14	; 20
   16a4a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16a4e:	69 ec       	ldi	r22, 0xC9	; 201
   16a50:	7d e3       	ldi	r23, 0x3D	; 61
   16a52:	86 ec       	ldi	r24, 0xC6	; 198
   16a54:	94 e1       	ldi	r25, 0x14	; 20
   16a56:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16a5a:	47 e0       	ldi	r20, 0x07	; 7
   16a5c:	50 e0       	ldi	r21, 0x00	; 0
   16a5e:	b7 01       	movw	r22, r14
   16a60:	86 ec       	ldi	r24, 0xC6	; 198
   16a62:	94 e1       	ldi	r25, 0x14	; 20
   16a64:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
   16a68:	86 ec       	ldi	r24, 0xC6	; 198
   16a6a:	94 e1       	ldi	r25, 0x14	; 20
   16a6c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   16a70:	86 ec       	ldi	r24, 0xC6	; 198
   16a72:	94 e1       	ldi	r25, 0x14	; 20
   16a74:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16a78:	79 e0       	ldi	r23, 0x09	; 9
   16a7a:	a7 2e       	mov	r10, r23
   16a7c:	74 e1       	ldi	r23, 0x14	; 20
   16a7e:	b7 2e       	mov	r11, r23
   16a80:	c1 2c       	mov	r12, r1
   16a82:	d1 2c       	mov	r13, r1
   16a84:	f5 01       	movw	r30, r10
   16a86:	81 91       	ld	r24, Z+
   16a88:	5f 01       	movw	r10, r30
   16a8a:	f4 01       	movw	r30, r8
   16a8c:	ec 0d       	add	r30, r12
   16a8e:	fd 1d       	adc	r31, r13
   16a90:	eb 5e       	subi	r30, 0xEB	; 235
   16a92:	f3 4f       	sbci	r31, 0xF3	; 243
   16a94:	91 81       	ldd	r25, Z+1	; 0x01
   16a96:	98 17       	cp	r25, r24
   16a98:	09 f4       	brne	.+2      	; 0x16a9c <_Z22Valve_Grouping_Handlerh+0xbce>
   16a9a:	5d c0       	rjmp	.+186    	; 0x16b56 <_Z22Valve_Grouping_Handlerh+0xc88>
   16a9c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16aa0:	81 30       	cpi	r24, 0x01	; 1
   16aa2:	51 f4       	brne	.+20     	; 0x16ab8 <_Z22Valve_Grouping_Handlerh+0xbea>
   16aa4:	6e e9       	ldi	r22, 0x9E	; 158
   16aa6:	7d e3       	ldi	r23, 0x3D	; 61
   16aa8:	86 ec       	ldi	r24, 0xC6	; 198
   16aaa:	94 e1       	ldi	r25, 0x14	; 20
   16aac:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16ab0:	86 ec       	ldi	r24, 0xC6	; 198
   16ab2:	94 e1       	ldi	r25, 0x14	; 20
   16ab4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16ab8:	f2 e0       	ldi	r31, 0x02	; 2
   16aba:	3f 12       	cpse	r3, r31
   16abc:	4c c0       	rjmp	.+152    	; 0x16b56 <_Z22Valve_Grouping_Handlerh+0xc88>
   16abe:	86 e0       	ldi	r24, 0x06	; 6
   16ac0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16ac4:	84 e6       	ldi	r24, 0x64	; 100
   16ac6:	90 e0       	ldi	r25, 0x00	; 0
   16ac8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16acc:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16ad0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16ad4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16ad8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16adc:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16ae0:	a0 62       	ori	r26, 0x20	; 32
   16ae2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16ae6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16aea:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16aee:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16af2:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16af6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16afa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16afe:	82 60       	ori	r24, 0x02	; 2
   16b00:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16b04:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16b08:	00 e0       	ldi	r16, 0x00	; 0
   16b0a:	10 e0       	ldi	r17, 0x00	; 0
   16b0c:	66 e0       	ldi	r22, 0x06	; 6
   16b0e:	f6 2e       	mov	r15, r22
   16b10:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16b14:	90 e0       	ldi	r25, 0x00	; 0
   16b16:	01 97       	sbiw	r24, 0x01	; 1
   16b18:	f8 9e       	mul	r15, r24
   16b1a:	f0 01       	movw	r30, r0
   16b1c:	f9 9e       	mul	r15, r25
   16b1e:	f0 0d       	add	r31, r0
   16b20:	11 24       	eor	r1, r1
   16b22:	e2 5b       	subi	r30, 0xB2	; 178
   16b24:	f2 4f       	sbci	r31, 0xF2	; 242
   16b26:	e0 0f       	add	r30, r16
   16b28:	f1 1f       	adc	r31, r17
   16b2a:	e1 81       	ldd	r30, Z+1	; 0x01
   16b2c:	e3 31       	cpi	r30, 0x13	; 19
   16b2e:	68 f0       	brcs	.+26     	; 0x16b4a <_Z22Valve_Grouping_Handlerh+0xc7c>
   16b30:	f0 e0       	ldi	r31, 0x00	; 0
   16b32:	e7 5c       	subi	r30, 0xC7	; 199
   16b34:	fb 4e       	sbci	r31, 0xEB	; 235
   16b36:	61 e0       	ldi	r22, 0x01	; 1
   16b38:	80 81       	ld	r24, Z
   16b3a:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16b3e:	68 ec       	ldi	r22, 0xC8	; 200
   16b40:	70 e0       	ldi	r23, 0x00	; 0
   16b42:	80 e0       	ldi	r24, 0x00	; 0
   16b44:	90 e0       	ldi	r25, 0x00	; 0
   16b46:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16b4a:	0f 5f       	subi	r16, 0xFF	; 255
   16b4c:	1f 4f       	sbci	r17, 0xFF	; 255
   16b4e:	05 30       	cpi	r16, 0x05	; 5
   16b50:	11 05       	cpc	r17, r1
   16b52:	f1 f6       	brne	.-68     	; 0x16b10 <_Z22Valve_Grouping_Handlerh+0xc42>
   16b54:	9f c4       	rjmp	.+2366   	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16b56:	2f ef       	ldi	r18, 0xFF	; 255
   16b58:	c2 1a       	sub	r12, r18
   16b5a:	d2 0a       	sbc	r13, r18
   16b5c:	36 e0       	ldi	r19, 0x06	; 6
   16b5e:	c3 16       	cp	r12, r19
   16b60:	d1 04       	cpc	r13, r1
   16b62:	09 f0       	breq	.+2      	; 0x16b66 <_Z22Valve_Grouping_Handlerh+0xc98>
   16b64:	8f cf       	rjmp	.-226    	; 0x16a84 <_Z22Valve_Grouping_Handlerh+0xbb6>
   16b66:	e1 e0       	ldi	r30, 0x01	; 1
   16b68:	ab a9       	ldd	r26, Y+51	; 0x33
   16b6a:	bc a9       	ldd	r27, Y+52	; 0x34
   16b6c:	ec 93       	st	X, r30
   16b6e:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   16b72:	90 e0       	ldi	r25, 0x00	; 0
   16b74:	98 2f       	mov	r25, r24
   16b76:	88 27       	eor	r24, r24
   16b78:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   16b7c:	82 2b       	or	r24, r18
   16b7e:	ad a9       	ldd	r26, Y+53	; 0x35
   16b80:	be a9       	ldd	r27, Y+54	; 0x36
   16b82:	8d 93       	st	X+, r24
   16b84:	9c 93       	st	X, r25
   16b86:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   16b8a:	58 16       	cp	r5, r24
   16b8c:	09 f4       	brne	.+2      	; 0x16b90 <_Z22Valve_Grouping_Handlerh+0xcc2>
   16b8e:	17 c1       	rjmp	.+558    	; 0x16dbe <_Z22Valve_Grouping_Handlerh+0xef0>
   16b90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16b94:	81 30       	cpi	r24, 0x01	; 1
   16b96:	51 f4       	brne	.+20     	; 0x16bac <_Z22Valve_Grouping_Handlerh+0xcde>
   16b98:	6b e8       	ldi	r22, 0x8B	; 139
   16b9a:	7d e3       	ldi	r23, 0x3D	; 61
   16b9c:	86 ec       	ldi	r24, 0xC6	; 198
   16b9e:	94 e1       	ldi	r25, 0x14	; 20
   16ba0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16ba4:	86 ec       	ldi	r24, 0xC6	; 198
   16ba6:	94 e1       	ldi	r25, 0x14	; 20
   16ba8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16bac:	b2 e0       	ldi	r27, 0x02	; 2
   16bae:	3b 12       	cpse	r3, r27
   16bb0:	08 c1       	rjmp	.+528    	; 0x16dc2 <_Z22Valve_Grouping_Handlerh+0xef4>
   16bb2:	86 e0       	ldi	r24, 0x06	; 6
   16bb4:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16bb8:	84 e6       	ldi	r24, 0x64	; 100
   16bba:	90 e0       	ldi	r25, 0x00	; 0
   16bbc:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16bc0:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16bc4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16bc8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16bcc:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16bd0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16bd4:	a0 62       	ori	r26, 0x20	; 32
   16bd6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16bda:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16bde:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16be2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16be6:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16bea:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16bee:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16bf2:	82 60       	ori	r24, 0x02	; 2
   16bf4:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16bf8:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16bfc:	00 e0       	ldi	r16, 0x00	; 0
   16bfe:	10 e0       	ldi	r17, 0x00	; 0
   16c00:	46 e0       	ldi	r20, 0x06	; 6
   16c02:	f4 2e       	mov	r15, r20
   16c04:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16c08:	90 e0       	ldi	r25, 0x00	; 0
   16c0a:	01 97       	sbiw	r24, 0x01	; 1
   16c0c:	f8 9e       	mul	r15, r24
   16c0e:	f0 01       	movw	r30, r0
   16c10:	f9 9e       	mul	r15, r25
   16c12:	f0 0d       	add	r31, r0
   16c14:	11 24       	eor	r1, r1
   16c16:	e2 5b       	subi	r30, 0xB2	; 178
   16c18:	f2 4f       	sbci	r31, 0xF2	; 242
   16c1a:	e0 0f       	add	r30, r16
   16c1c:	f1 1f       	adc	r31, r17
   16c1e:	e1 81       	ldd	r30, Z+1	; 0x01
   16c20:	e3 31       	cpi	r30, 0x13	; 19
   16c22:	68 f0       	brcs	.+26     	; 0x16c3e <_Z22Valve_Grouping_Handlerh+0xd70>
   16c24:	f0 e0       	ldi	r31, 0x00	; 0
   16c26:	e7 5c       	subi	r30, 0xC7	; 199
   16c28:	fb 4e       	sbci	r31, 0xEB	; 235
   16c2a:	61 e0       	ldi	r22, 0x01	; 1
   16c2c:	80 81       	ld	r24, Z
   16c2e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16c32:	68 ec       	ldi	r22, 0xC8	; 200
   16c34:	70 e0       	ldi	r23, 0x00	; 0
   16c36:	80 e0       	ldi	r24, 0x00	; 0
   16c38:	90 e0       	ldi	r25, 0x00	; 0
   16c3a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16c3e:	0f 5f       	subi	r16, 0xFF	; 255
   16c40:	1f 4f       	sbci	r17, 0xFF	; 255
   16c42:	05 30       	cpi	r16, 0x05	; 5
   16c44:	11 05       	cpc	r17, r1
   16c46:	f1 f6       	brne	.-68     	; 0x16c04 <_Z22Valve_Grouping_Handlerh+0xd36>
   16c48:	25 c4       	rjmp	.+2122   	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16c4a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16c4e:	81 30       	cpi	r24, 0x01	; 1
   16c50:	51 f4       	brne	.+20     	; 0x16c66 <_Z22Valve_Grouping_Handlerh+0xd98>
   16c52:	60 e5       	ldi	r22, 0x50	; 80
   16c54:	7d e3       	ldi	r23, 0x3D	; 61
   16c56:	86 ec       	ldi	r24, 0xC6	; 198
   16c58:	94 e1       	ldi	r25, 0x14	; 20
   16c5a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16c5e:	86 ec       	ldi	r24, 0xC6	; 198
   16c60:	94 e1       	ldi	r25, 0x14	; 20
   16c62:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16c66:	e2 e0       	ldi	r30, 0x02	; 2
   16c68:	3e 12       	cpse	r3, r30
   16c6a:	ab c0       	rjmp	.+342    	; 0x16dc2 <_Z22Valve_Grouping_Handlerh+0xef4>
   16c6c:	86 e0       	ldi	r24, 0x06	; 6
   16c6e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16c72:	84 e6       	ldi	r24, 0x64	; 100
   16c74:	90 e0       	ldi	r25, 0x00	; 0
   16c76:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16c7a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16c7e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16c82:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16c86:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16c8a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16c8e:	a0 62       	ori	r26, 0x20	; 32
   16c90:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16c94:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16c98:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16c9c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16ca0:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16ca4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16ca8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16cac:	82 60       	ori	r24, 0x02	; 2
   16cae:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16cb2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16cb6:	00 e0       	ldi	r16, 0x00	; 0
   16cb8:	10 e0       	ldi	r17, 0x00	; 0
   16cba:	36 e0       	ldi	r19, 0x06	; 6
   16cbc:	f3 2e       	mov	r15, r19
   16cbe:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16cc2:	90 e0       	ldi	r25, 0x00	; 0
   16cc4:	01 97       	sbiw	r24, 0x01	; 1
   16cc6:	f8 9e       	mul	r15, r24
   16cc8:	f0 01       	movw	r30, r0
   16cca:	f9 9e       	mul	r15, r25
   16ccc:	f0 0d       	add	r31, r0
   16cce:	11 24       	eor	r1, r1
   16cd0:	e2 5b       	subi	r30, 0xB2	; 178
   16cd2:	f2 4f       	sbci	r31, 0xF2	; 242
   16cd4:	e0 0f       	add	r30, r16
   16cd6:	f1 1f       	adc	r31, r17
   16cd8:	e1 81       	ldd	r30, Z+1	; 0x01
   16cda:	e3 31       	cpi	r30, 0x13	; 19
   16cdc:	68 f0       	brcs	.+26     	; 0x16cf8 <_Z22Valve_Grouping_Handlerh+0xe2a>
   16cde:	f0 e0       	ldi	r31, 0x00	; 0
   16ce0:	e7 5c       	subi	r30, 0xC7	; 199
   16ce2:	fb 4e       	sbci	r31, 0xEB	; 235
   16ce4:	61 e0       	ldi	r22, 0x01	; 1
   16ce6:	80 81       	ld	r24, Z
   16ce8:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16cec:	68 ec       	ldi	r22, 0xC8	; 200
   16cee:	70 e0       	ldi	r23, 0x00	; 0
   16cf0:	80 e0       	ldi	r24, 0x00	; 0
   16cf2:	90 e0       	ldi	r25, 0x00	; 0
   16cf4:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16cf8:	0f 5f       	subi	r16, 0xFF	; 255
   16cfa:	1f 4f       	sbci	r17, 0xFF	; 255
   16cfc:	05 30       	cpi	r16, 0x05	; 5
   16cfe:	11 05       	cpc	r17, r1
   16d00:	f1 f6       	brne	.-68     	; 0x16cbe <_Z22Valve_Grouping_Handlerh+0xdf0>
   16d02:	c8 c3       	rjmp	.+1936   	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16d04:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16d08:	81 30       	cpi	r24, 0x01	; 1
   16d0a:	51 f4       	brne	.+20     	; 0x16d20 <_Z22Valve_Grouping_Handlerh+0xe52>
   16d0c:	65 e1       	ldi	r22, 0x15	; 21
   16d0e:	7d e3       	ldi	r23, 0x3D	; 61
   16d10:	86 ec       	ldi	r24, 0xC6	; 198
   16d12:	94 e1       	ldi	r25, 0x14	; 20
   16d14:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16d18:	86 ec       	ldi	r24, 0xC6	; 198
   16d1a:	94 e1       	ldi	r25, 0x14	; 20
   16d1c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16d20:	f2 e0       	ldi	r31, 0x02	; 2
   16d22:	3f 12       	cpse	r3, r31
   16d24:	4e c0       	rjmp	.+156    	; 0x16dc2 <_Z22Valve_Grouping_Handlerh+0xef4>
   16d26:	86 e0       	ldi	r24, 0x06	; 6
   16d28:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16d2c:	84 e6       	ldi	r24, 0x64	; 100
   16d2e:	90 e0       	ldi	r25, 0x00	; 0
   16d30:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16d34:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16d38:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16d3c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16d40:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16d44:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16d48:	a0 62       	ori	r26, 0x20	; 32
   16d4a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16d4e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16d52:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16d56:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16d5a:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16d5e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16d62:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16d66:	82 60       	ori	r24, 0x02	; 2
   16d68:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16d6c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16d70:	00 e0       	ldi	r16, 0x00	; 0
   16d72:	10 e0       	ldi	r17, 0x00	; 0
   16d74:	26 e0       	ldi	r18, 0x06	; 6
   16d76:	f2 2e       	mov	r15, r18
   16d78:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16d7c:	90 e0       	ldi	r25, 0x00	; 0
   16d7e:	01 97       	sbiw	r24, 0x01	; 1
   16d80:	f8 9e       	mul	r15, r24
   16d82:	f0 01       	movw	r30, r0
   16d84:	f9 9e       	mul	r15, r25
   16d86:	f0 0d       	add	r31, r0
   16d88:	11 24       	eor	r1, r1
   16d8a:	e2 5b       	subi	r30, 0xB2	; 178
   16d8c:	f2 4f       	sbci	r31, 0xF2	; 242
   16d8e:	e0 0f       	add	r30, r16
   16d90:	f1 1f       	adc	r31, r17
   16d92:	e1 81       	ldd	r30, Z+1	; 0x01
   16d94:	e3 31       	cpi	r30, 0x13	; 19
   16d96:	68 f0       	brcs	.+26     	; 0x16db2 <_Z22Valve_Grouping_Handlerh+0xee4>
   16d98:	f0 e0       	ldi	r31, 0x00	; 0
   16d9a:	e7 5c       	subi	r30, 0xC7	; 199
   16d9c:	fb 4e       	sbci	r31, 0xEB	; 235
   16d9e:	61 e0       	ldi	r22, 0x01	; 1
   16da0:	80 81       	ld	r24, Z
   16da2:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16da6:	68 ec       	ldi	r22, 0xC8	; 200
   16da8:	70 e0       	ldi	r23, 0x00	; 0
   16daa:	80 e0       	ldi	r24, 0x00	; 0
   16dac:	90 e0       	ldi	r25, 0x00	; 0
   16dae:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16db2:	0f 5f       	subi	r16, 0xFF	; 255
   16db4:	1f 4f       	sbci	r17, 0xFF	; 255
   16db6:	05 30       	cpi	r16, 0x05	; 5
   16db8:	11 05       	cpc	r17, r1
   16dba:	f1 f6       	brne	.-68     	; 0x16d78 <_Z22Valve_Grouping_Handlerh+0xeaa>
   16dbc:	6b c3       	rjmp	.+1750   	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16dbe:	93 e0       	ldi	r25, 0x03	; 3
   16dc0:	39 2e       	mov	r3, r25
   16dc2:	68 ee       	ldi	r22, 0xE8	; 232
   16dc4:	73 e0       	ldi	r23, 0x03	; 3
   16dc6:	80 e0       	ldi	r24, 0x00	; 0
   16dc8:	90 e0       	ldi	r25, 0x00	; 0
   16dca:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16dce:	23 e0       	ldi	r18, 0x03	; 3
   16dd0:	32 12       	cpse	r3, r18
   16dd2:	d5 cd       	rjmp	.-1110   	; 0x1697e <_Z22Valve_Grouping_Handlerh+0xab0>
   16dd4:	2b c0       	rjmp	.+86     	; 0x16e2c <_Z22Valve_Grouping_Handlerh+0xf5e>
   16dd6:	8d ee       	ldi	r24, 0xED	; 237
   16dd8:	8f 0d       	add	r24, r15
   16dda:	81 35       	cpi	r24, 0x51	; 81
   16ddc:	78 f4       	brcc	.+30     	; 0x16dfc <_Z22Valve_Grouping_Handlerh+0xf2e>
   16dde:	ef 2d       	mov	r30, r15
   16de0:	f0 e0       	ldi	r31, 0x00	; 0
   16de2:	e7 5c       	subi	r30, 0xC7	; 199
   16de4:	fb 4e       	sbci	r31, 0xEB	; 235
   16de6:	6f a9       	ldd	r22, Y+55	; 0x37
   16de8:	80 81       	ld	r24, Z
   16dea:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   16dee:	68 ec       	ldi	r22, 0xC8	; 200
   16df0:	70 e0       	ldi	r23, 0x00	; 0
   16df2:	80 e0       	ldi	r24, 0x00	; 0
   16df4:	90 e0       	ldi	r25, 0x00	; 0
   16df6:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   16dfa:	18 c0       	rjmp	.+48     	; 0x16e2c <_Z22Valve_Grouping_Handlerh+0xf5e>
   16dfc:	35 e6       	ldi	r19, 0x65	; 101
   16dfe:	f3 12       	cpse	r15, r19
   16e00:	15 c0       	rjmp	.+42     	; 0x16e2c <_Z22Valve_Grouping_Handlerh+0xf5e>
   16e02:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   16e06:	41 e0       	ldi	r20, 0x01	; 1
   16e08:	54 12       	cpse	r5, r20
   16e0a:	05 c0       	rjmp	.+10     	; 0x16e16 <_Z22Valve_Grouping_Handlerh+0xf48>
   16e0c:	88 23       	and	r24, r24
   16e0e:	71 f0       	breq	.+28     	; 0x16e2c <_Z22Valve_Grouping_Handlerh+0xf5e>
   16e10:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   16e14:	05 c0       	rjmp	.+10     	; 0x16e20 <_Z22Valve_Grouping_Handlerh+0xf52>
   16e16:	88 23       	and	r24, r24
   16e18:	49 f0       	breq	.+18     	; 0x16e2c <_Z22Valve_Grouping_Handlerh+0xf5e>
   16e1a:	82 e0       	ldi	r24, 0x02	; 2
   16e1c:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   16e20:	6b e7       	ldi	r22, 0x7B	; 123
   16e22:	74 e1       	ldi	r23, 0x14	; 20
   16e24:	88 ea       	ldi	r24, 0xA8	; 168
   16e26:	9c e0       	ldi	r25, 0x0C	; 12
   16e28:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16e2c:	0f 5f       	subi	r16, 0xFF	; 255
   16e2e:	1f 4f       	sbci	r17, 0xFF	; 255
   16e30:	05 30       	cpi	r16, 0x05	; 5
   16e32:	11 05       	cpc	r17, r1
   16e34:	09 f0       	breq	.+2      	; 0x16e38 <_Z22Valve_Grouping_Handlerh+0xf6a>
   16e36:	c6 cc       	rjmp	.-1652   	; 0x167c4 <_Z22Valve_Grouping_Handlerh+0x8f6>
   16e38:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16e3c:	81 30       	cpi	r24, 0x01	; 1
   16e3e:	09 f0       	breq	.+2      	; 0x16e42 <_Z22Valve_Grouping_Handlerh+0xf74>
   16e40:	80 c3       	rjmp	.+1792   	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   16e42:	66 ef       	ldi	r22, 0xF6	; 246
   16e44:	7c e3       	ldi	r23, 0x3C	; 60
   16e46:	73 c3       	rjmp	.+1766   	; 0x1752e <_Z22Valve_Grouping_Handlerh+0x1660>
   16e48:	81 30       	cpi	r24, 0x01	; 1
   16e4a:	51 f4       	brne	.+20     	; 0x16e60 <_Z22Valve_Grouping_Handlerh+0xf92>
   16e4c:	68 ee       	ldi	r22, 0xE8	; 232
   16e4e:	7c e3       	ldi	r23, 0x3C	; 60
   16e50:	86 ec       	ldi	r24, 0xC6	; 198
   16e52:	94 e1       	ldi	r25, 0x14	; 20
   16e54:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   16e58:	86 ec       	ldi	r24, 0xC6	; 198
   16e5a:	94 e1       	ldi	r25, 0x14	; 20
   16e5c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16e60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16e64:	81 30       	cpi	r24, 0x01	; 1
   16e66:	d1 f0       	breq	.+52     	; 0x16e9c <_Z22Valve_Grouping_Handlerh+0xfce>
   16e68:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16e6c:	81 30       	cpi	r24, 0x01	; 1
   16e6e:	d9 f5       	brne	.+118    	; 0x16ee6 <_Z22Valve_Grouping_Handlerh+0x1018>
   16e70:	60 ed       	ldi	r22, 0xD0	; 208
   16e72:	7c e3       	ldi	r23, 0x3C	; 60
   16e74:	86 ec       	ldi	r24, 0xC6	; 198
   16e76:	94 e1       	ldi	r25, 0x14	; 20
   16e78:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16e7c:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16e80:	70 e0       	ldi	r23, 0x00	; 0
   16e82:	61 50       	subi	r22, 0x01	; 1
   16e84:	71 09       	sbc	r23, r1
   16e86:	4a e0       	ldi	r20, 0x0A	; 10
   16e88:	50 e0       	ldi	r21, 0x00	; 0
   16e8a:	86 ec       	ldi	r24, 0xC6	; 198
   16e8c:	94 e1       	ldi	r25, 0x14	; 20
   16e8e:	0e 94 83 d6 	call	0x1ad06	; 0x1ad06 <_ZN5Print7printlnEii>
   16e92:	86 ec       	ldi	r24, 0xC6	; 198
   16e94:	94 e1       	ldi	r25, 0x14	; 20
   16e96:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16e9a:	25 c0       	rjmp	.+74     	; 0x16ee6 <_Z22Valve_Grouping_Handlerh+0x1018>
   16e9c:	00 e0       	ldi	r16, 0x00	; 0
   16e9e:	10 e0       	ldi	r17, 0x00	; 0
   16ea0:	8b e1       	ldi	r24, 0x1B	; 27
   16ea2:	f8 2e       	mov	r15, r24
   16ea4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16ea8:	90 e0       	ldi	r25, 0x00	; 0
   16eaa:	85 56       	subi	r24, 0x65	; 101
   16eac:	91 09       	sbc	r25, r1
   16eae:	f8 9e       	mul	r15, r24
   16eb0:	f0 01       	movw	r30, r0
   16eb2:	f9 9e       	mul	r15, r25
   16eb4:	f0 0d       	add	r31, r0
   16eb6:	11 24       	eor	r1, r1
   16eb8:	e8 51       	subi	r30, 0x18	; 24
   16eba:	f2 4f       	sbci	r31, 0xF2	; 242
   16ebc:	e0 0f       	add	r30, r16
   16ebe:	f1 1f       	adc	r31, r17
   16ec0:	4a e0       	ldi	r20, 0x0A	; 10
   16ec2:	50 e0       	ldi	r21, 0x00	; 0
   16ec4:	65 81       	ldd	r22, Z+5	; 0x05
   16ec6:	86 ec       	ldi	r24, 0xC6	; 198
   16ec8:	94 e1       	ldi	r25, 0x14	; 20
   16eca:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   16ece:	66 ee       	ldi	r22, 0xE6	; 230
   16ed0:	7c e3       	ldi	r23, 0x3C	; 60
   16ed2:	86 ec       	ldi	r24, 0xC6	; 198
   16ed4:	94 e1       	ldi	r25, 0x14	; 20
   16ed6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16eda:	0f 5f       	subi	r16, 0xFF	; 255
   16edc:	1f 4f       	sbci	r17, 0xFF	; 255
   16ede:	05 30       	cpi	r16, 0x05	; 5
   16ee0:	11 05       	cpc	r17, r1
   16ee2:	01 f7       	brne	.-64     	; 0x16ea4 <_Z22Valve_Grouping_Handlerh+0xfd6>
   16ee4:	c1 cf       	rjmp	.-126    	; 0x16e68 <_Z22Valve_Grouping_Handlerh+0xf9a>
   16ee6:	00 e0       	ldi	r16, 0x00	; 0
   16ee8:	10 e0       	ldi	r17, 0x00	; 0
   16eea:	81 e0       	ldi	r24, 0x01	; 1
   16eec:	85 25       	eor	r24, r5
   16eee:	81 70       	andi	r24, 0x01	; 1
   16ef0:	8b ab       	std	Y+51, r24	; 0x33
   16ef2:	ad e0       	ldi	r26, 0x0D	; 13
   16ef4:	2a 2e       	mov	r2, r26
   16ef6:	b0 ed       	ldi	r27, 0xD0	; 208
   16ef8:	ab 2e       	mov	r10, r27
   16efa:	bf e0       	ldi	r27, 0x0F	; 15
   16efc:	bb 2e       	mov	r11, r27
   16efe:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16f02:	90 e0       	ldi	r25, 0x00	; 0
   16f04:	9c 01       	movw	r18, r24
   16f06:	25 56       	subi	r18, 0x65	; 101
   16f08:	31 09       	sbc	r19, r1
   16f0a:	5b e1       	ldi	r21, 0x1B	; 27
   16f0c:	52 9f       	mul	r21, r18
   16f0e:	f0 01       	movw	r30, r0
   16f10:	53 9f       	mul	r21, r19
   16f12:	f0 0d       	add	r31, r0
   16f14:	11 24       	eor	r1, r1
   16f16:	e8 51       	subi	r30, 0x18	; 24
   16f18:	f2 4f       	sbci	r31, 0xF2	; 242
   16f1a:	e0 0f       	add	r30, r16
   16f1c:	f1 1f       	adc	r31, r17
   16f1e:	f5 80       	ldd	r15, Z+5	; 0x05
   16f20:	2f ef       	ldi	r18, 0xFF	; 255
   16f22:	2f 0d       	add	r18, r15
   16f24:	22 31       	cpi	r18, 0x12	; 18
   16f26:	08 f0       	brcs	.+2      	; 0x16f2a <_Z22Valve_Grouping_Handlerh+0x105c>
   16f28:	c1 c2       	rjmp	.+1410   	; 0x174ac <_Z22Valve_Grouping_Handlerh+0x15de>
   16f2a:	63 e0       	ldi	r22, 0x03	; 3
   16f2c:	6f 15       	cp	r22, r15
   16f2e:	a8 f4       	brcc	.+42     	; 0x16f5a <_Z22Valve_Grouping_Handlerh+0x108c>
   16f30:	6b ea       	ldi	r22, 0xAB	; 171
   16f32:	f6 9e       	mul	r15, r22
   16f34:	61 2d       	mov	r22, r1
   16f36:	11 24       	eor	r1, r1
   16f38:	86 2f       	mov	r24, r22
   16f3a:	86 95       	lsr	r24
   16f3c:	98 2f       	mov	r25, r24
   16f3e:	99 0f       	add	r25, r25
   16f40:	89 0f       	add	r24, r25
   16f42:	f8 1a       	sub	r15, r24
   16f44:	66 95       	lsr	r22
   16f46:	ff 20       	and	r15, r15
   16f48:	21 f0       	breq	.+8      	; 0x16f52 <_Z22Valve_Grouping_Handlerh+0x1084>
   16f4a:	ee 24       	eor	r14, r14
   16f4c:	e3 94       	inc	r14
   16f4e:	e6 0e       	add	r14, r22
   16f50:	06 c0       	rjmp	.+12     	; 0x16f5e <_Z22Valve_Grouping_Handlerh+0x1090>
   16f52:	e6 2e       	mov	r14, r22
   16f54:	f3 e0       	ldi	r31, 0x03	; 3
   16f56:	ff 2e       	mov	r15, r31
   16f58:	02 c0       	rjmp	.+4      	; 0x16f5e <_Z22Valve_Grouping_Handlerh+0x1090>
   16f5a:	ee 24       	eor	r14, r14
   16f5c:	e3 94       	inc	r14
   16f5e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16f62:	81 30       	cpi	r24, 0x01	; 1
   16f64:	89 f4       	brne	.+34     	; 0x16f88 <_Z22Valve_Grouping_Handlerh+0x10ba>
   16f66:	6c eb       	ldi	r22, 0xBC	; 188
   16f68:	7c e3       	ldi	r23, 0x3C	; 60
   16f6a:	86 ec       	ldi	r24, 0xC6	; 198
   16f6c:	94 e1       	ldi	r25, 0x14	; 20
   16f6e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   16f72:	4a e0       	ldi	r20, 0x0A	; 10
   16f74:	50 e0       	ldi	r21, 0x00	; 0
   16f76:	6e 2d       	mov	r22, r14
   16f78:	86 ec       	ldi	r24, 0xC6	; 198
   16f7a:	94 e1       	ldi	r25, 0x14	; 20
   16f7c:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   16f80:	86 ec       	ldi	r24, 0xC6	; 198
   16f82:	94 e1       	ldi	r25, 0x14	; 20
   16f84:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   16f88:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   16f8c:	81 11       	cpse	r24, r1
   16f8e:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   16f92:	84 e1       	ldi	r24, 0x14	; 20
   16f94:	a5 ef       	ldi	r26, 0xF5	; 245
   16f96:	b3 e1       	ldi	r27, 0x13	; 19
   16f98:	1d 92       	st	X+, r1
   16f9a:	8a 95       	dec	r24
   16f9c:	e9 f7       	brne	.-6      	; 0x16f98 <_Z22Valve_Grouping_Handlerh+0x10ca>
   16f9e:	6e 2d       	mov	r22, r14
   16fa0:	70 e0       	ldi	r23, 0x00	; 0
   16fa2:	61 50       	subi	r22, 0x01	; 1
   16fa4:	71 09       	sbc	r23, r1
   16fa6:	b7 e0       	ldi	r27, 0x07	; 7
   16fa8:	b6 9f       	mul	r27, r22
   16faa:	c0 01       	movw	r24, r0
   16fac:	b7 9f       	mul	r27, r23
   16fae:	90 0d       	add	r25, r0
   16fb0:	11 24       	eor	r1, r1
   16fb2:	82 55       	subi	r24, 0x52	; 82
   16fb4:	9c 4e       	sbci	r25, 0xEC	; 236
   16fb6:	fc 01       	movw	r30, r24
   16fb8:	ec 58       	subi	r30, 0x8C	; 140
   16fba:	ff 4f       	sbci	r31, 0xFF	; 255
   16fbc:	20 81       	ld	r18, Z
   16fbe:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   16fc2:	31 96       	adiw	r30, 0x01	; 1
   16fc4:	20 81       	ld	r18, Z
   16fc6:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   16fca:	31 96       	adiw	r30, 0x01	; 1
   16fcc:	20 81       	ld	r18, Z
   16fce:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   16fd2:	31 96       	adiw	r30, 0x01	; 1
   16fd4:	20 81       	ld	r18, Z
   16fd6:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   16fda:	31 96       	adiw	r30, 0x01	; 1
   16fdc:	20 81       	ld	r18, Z
   16fde:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16fe2:	31 96       	adiw	r30, 0x01	; 1
   16fe4:	20 81       	ld	r18, Z
   16fe6:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   16fea:	22 e0       	ldi	r18, 0x02	; 2
   16fec:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   16ff0:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   16ff4:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16ff8:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   16ffc:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   17000:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17004:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   17008:	40 e0       	ldi	r20, 0x00	; 0
   1700a:	50 e0       	ldi	r21, 0x00	; 0
   1700c:	d4 2e       	mov	r13, r20
   1700e:	e1 2c       	mov	r14, r1
   17010:	f1 2c       	mov	r15, r1
   17012:	24 9e       	mul	r2, r20
   17014:	b0 01       	movw	r22, r0
   17016:	25 9e       	mul	r2, r21
   17018:	70 0d       	add	r23, r0
   1701a:	11 24       	eor	r1, r1
   1701c:	6b 5e       	subi	r22, 0xEB	; 235
   1701e:	73 4f       	sbci	r23, 0xF3	; 243
   17020:	2f 2d       	mov	r18, r15
   17022:	30 e0       	ldi	r19, 0x00	; 0
   17024:	fb 01       	movw	r30, r22
   17026:	e2 0f       	add	r30, r18
   17028:	f3 1f       	adc	r31, r19
   1702a:	28 0f       	add	r18, r24
   1702c:	39 1f       	adc	r19, r25
   1702e:	d9 01       	movw	r26, r18
   17030:	ac 58       	subi	r26, 0x8C	; 140
   17032:	bf 4f       	sbci	r27, 0xFF	; 255
   17034:	31 81       	ldd	r19, Z+1	; 0x01
   17036:	2c 91       	ld	r18, X
   17038:	32 17       	cp	r19, r18
   1703a:	19 f0       	breq	.+6      	; 0x17042 <_Z22Valve_Grouping_Handlerh+0x1174>
   1703c:	e1 2c       	mov	r14, r1
   1703e:	e6 e0       	ldi	r30, 0x06	; 6
   17040:	fe 2e       	mov	r15, r30
   17042:	e3 94       	inc	r14
   17044:	f3 94       	inc	r15
   17046:	e5 e0       	ldi	r30, 0x05	; 5
   17048:	ef 15       	cp	r30, r15
   1704a:	50 f7       	brcc	.-44     	; 0x17020 <_Z22Valve_Grouping_Handlerh+0x1152>
   1704c:	f6 e0       	ldi	r31, 0x06	; 6
   1704e:	ef 16       	cp	r14, r31
   17050:	31 f0       	breq	.+12     	; 0x1705e <_Z22Valve_Grouping_Handlerh+0x1190>
   17052:	4f 5f       	subi	r20, 0xFF	; 255
   17054:	5f 4f       	sbci	r21, 0xFF	; 255
   17056:	46 30       	cpi	r20, 0x06	; 6
   17058:	51 05       	cpc	r21, r1
   1705a:	c1 f6       	brne	.-80     	; 0x1700c <_Z22Valve_Grouping_Handlerh+0x113e>
   1705c:	01 c0       	rjmp	.+2      	; 0x17060 <_Z22Valve_Grouping_Handlerh+0x1192>
   1705e:	4d 2c       	mov	r4, r13
   17060:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17064:	81 30       	cpi	r24, 0x01	; 1
   17066:	89 f4       	brne	.+34     	; 0x1708a <_Z22Valve_Grouping_Handlerh+0x11bc>
   17068:	66 ea       	ldi	r22, 0xA6	; 166
   1706a:	7c e3       	ldi	r23, 0x3C	; 60
   1706c:	86 ec       	ldi	r24, 0xC6	; 198
   1706e:	94 e1       	ldi	r25, 0x14	; 20
   17070:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17074:	4a e0       	ldi	r20, 0x0A	; 10
   17076:	50 e0       	ldi	r21, 0x00	; 0
   17078:	64 2d       	mov	r22, r4
   1707a:	86 ec       	ldi	r24, 0xC6	; 198
   1707c:	94 e1       	ldi	r25, 0x14	; 20
   1707e:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   17082:	86 ec       	ldi	r24, 0xC6	; 198
   17084:	94 e1       	ldi	r25, 0x14	; 20
   17086:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1708a:	2d e0       	ldi	r18, 0x0D	; 13
   1708c:	42 9e       	mul	r4, r18
   1708e:	40 01       	movw	r8, r0
   17090:	11 24       	eor	r1, r1
   17092:	31 2c       	mov	r3, r1
   17094:	24 9c       	mul	r2, r4
   17096:	c0 01       	movw	r24, r0
   17098:	11 24       	eor	r1, r1
   1709a:	9c 01       	movw	r18, r24
   1709c:	2b 5e       	subi	r18, 0xEB	; 235
   1709e:	33 4f       	sbci	r19, 0xF3	; 243
   170a0:	39 01       	movw	r6, r18
   170a2:	4b e0       	ldi	r20, 0x0B	; 11
   170a4:	64 0e       	add	r6, r20
   170a6:	71 1c       	adc	r7, r1
   170a8:	79 01       	movw	r14, r18
   170aa:	58 e0       	ldi	r21, 0x08	; 8
   170ac:	e5 0e       	add	r14, r21
   170ae:	f1 1c       	adc	r15, r1
   170b0:	bc 01       	movw	r22, r24
   170b2:	6a 5e       	subi	r22, 0xEA	; 234
   170b4:	73 4f       	sbci	r23, 0xF3	; 243
   170b6:	6b 01       	movw	r12, r22
   170b8:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   170bc:	88 23       	and	r24, r24
   170be:	99 f0       	breq	.+38     	; 0x170e6 <_Z22Valve_Grouping_Handlerh+0x1218>
   170c0:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   170c4:	88 23       	and	r24, r24
   170c6:	79 f0       	breq	.+30     	; 0x170e6 <_Z22Valve_Grouping_Handlerh+0x1218>
   170c8:	f5 01       	movw	r30, r10
   170ca:	01 90       	ld	r0, Z+
   170cc:	00 20       	and	r0, r0
   170ce:	e9 f7       	brne	.-6      	; 0x170ca <_Z22Valve_Grouping_Handlerh+0x11fc>
   170d0:	31 97       	sbiw	r30, 0x01	; 1
   170d2:	af 01       	movw	r20, r30
   170d4:	40 5d       	subi	r20, 0xD0	; 208
   170d6:	5f 40       	sbci	r21, 0x0F	; 15
   170d8:	21 e0       	ldi	r18, 0x01	; 1
   170da:	60 ed       	ldi	r22, 0xD0	; 208
   170dc:	7f e0       	ldi	r23, 0x0F	; 15
   170de:	82 e6       	ldi	r24, 0x62	; 98
   170e0:	9f e0       	ldi	r25, 0x0F	; 15
   170e2:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   170e6:	33 94       	inc	r3
   170e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   170ec:	81 30       	cpi	r24, 0x01	; 1
   170ee:	51 f4       	brne	.+20     	; 0x17104 <_Z22Valve_Grouping_Handlerh+0x1236>
   170f0:	62 e8       	ldi	r22, 0x82	; 130
   170f2:	7c e3       	ldi	r23, 0x3C	; 60
   170f4:	86 ec       	ldi	r24, 0xC6	; 198
   170f6:	94 e1       	ldi	r25, 0x14	; 20
   170f8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   170fc:	86 ec       	ldi	r24, 0xC6	; 198
   170fe:	94 e1       	ldi	r25, 0x14	; 20
   17100:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17104:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   17108:	8c e0       	ldi	r24, 0x0C	; 12
   1710a:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   1710e:	88 eb       	ldi	r24, 0xB8	; 184
   17110:	9b e0       	ldi	r25, 0x0B	; 11
   17112:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   17116:	88 23       	and	r24, r24
   17118:	09 f4       	brne	.+2      	; 0x1711c <_Z22Valve_Grouping_Handlerh+0x124e>
   1711a:	86 c1       	rjmp	.+780    	; 0x17428 <_Z22Valve_Grouping_Handlerh+0x155a>
   1711c:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   17120:	88 23       	and	r24, r24
   17122:	09 f4       	brne	.+2      	; 0x17126 <_Z22Valve_Grouping_Handlerh+0x1258>
   17124:	23 c1       	rjmp	.+582    	; 0x1736c <_Z22Valve_Grouping_Handlerh+0x149e>
   17126:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   1712a:	88 23       	and	r24, r24
   1712c:	99 f0       	breq	.+38     	; 0x17154 <_Z22Valve_Grouping_Handlerh+0x1286>
   1712e:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   17132:	88 23       	and	r24, r24
   17134:	79 f0       	breq	.+30     	; 0x17154 <_Z22Valve_Grouping_Handlerh+0x1286>
   17136:	f5 01       	movw	r30, r10
   17138:	01 90       	ld	r0, Z+
   1713a:	00 20       	and	r0, r0
   1713c:	e9 f7       	brne	.-6      	; 0x17138 <_Z22Valve_Grouping_Handlerh+0x126a>
   1713e:	31 97       	sbiw	r30, 0x01	; 1
   17140:	af 01       	movw	r20, r30
   17142:	40 5d       	subi	r20, 0xD0	; 208
   17144:	5f 40       	sbci	r21, 0x0F	; 15
   17146:	21 e0       	ldi	r18, 0x01	; 1
   17148:	60 ed       	ldi	r22, 0xD0	; 208
   1714a:	7f e0       	ldi	r23, 0x0F	; 15
   1714c:	82 e6       	ldi	r24, 0x62	; 98
   1714e:	9f e0       	ldi	r25, 0x0F	; 15
   17150:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   17154:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17158:	81 30       	cpi	r24, 0x01	; 1
   1715a:	19 f5       	brne	.+70     	; 0x171a2 <_Z22Valve_Grouping_Handlerh+0x12d4>
   1715c:	6c e6       	ldi	r22, 0x6C	; 108
   1715e:	7c e3       	ldi	r23, 0x3C	; 60
   17160:	86 ec       	ldi	r24, 0xC6	; 198
   17162:	94 e1       	ldi	r25, 0x14	; 20
   17164:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17168:	4a e0       	ldi	r20, 0x0A	; 10
   1716a:	50 e0       	ldi	r21, 0x00	; 0
   1716c:	69 e0       	ldi	r22, 0x09	; 9
   1716e:	74 e1       	ldi	r23, 0x14	; 20
   17170:	86 ec       	ldi	r24, 0xC6	; 198
   17172:	94 e1       	ldi	r25, 0x14	; 20
   17174:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   17178:	86 ec       	ldi	r24, 0xC6	; 198
   1717a:	94 e1       	ldi	r25, 0x14	; 20
   1717c:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17180:	6e e4       	ldi	r22, 0x4E	; 78
   17182:	7c e3       	ldi	r23, 0x3C	; 60
   17184:	86 ec       	ldi	r24, 0xC6	; 198
   17186:	94 e1       	ldi	r25, 0x14	; 20
   17188:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1718c:	47 e0       	ldi	r20, 0x07	; 7
   1718e:	50 e0       	ldi	r21, 0x00	; 0
   17190:	b6 01       	movw	r22, r12
   17192:	86 ec       	ldi	r24, 0xC6	; 198
   17194:	94 e1       	ldi	r25, 0x14	; 20
   17196:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
   1719a:	86 ec       	ldi	r24, 0xC6	; 198
   1719c:	94 e1       	ldi	r25, 0x14	; 20
   1719e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   171a2:	a9 e0       	ldi	r26, 0x09	; 9
   171a4:	b4 e1       	ldi	r27, 0x14	; 20
   171a6:	80 e0       	ldi	r24, 0x00	; 0
   171a8:	90 e0       	ldi	r25, 0x00	; 0
   171aa:	2d 91       	ld	r18, X+
   171ac:	f4 01       	movw	r30, r8
   171ae:	e8 0f       	add	r30, r24
   171b0:	f9 1f       	adc	r31, r25
   171b2:	eb 5e       	subi	r30, 0xEB	; 235
   171b4:	f3 4f       	sbci	r31, 0xF3	; 243
   171b6:	31 81       	ldd	r19, Z+1	; 0x01
   171b8:	32 17       	cp	r19, r18
   171ba:	09 f4       	brne	.+2      	; 0x171be <_Z22Valve_Grouping_Handlerh+0x12f0>
   171bc:	73 c0       	rjmp	.+230    	; 0x172a4 <_Z22Valve_Grouping_Handlerh+0x13d6>
   171be:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   171c2:	81 30       	cpi	r24, 0x01	; 1
   171c4:	51 f4       	brne	.+20     	; 0x171da <_Z22Valve_Grouping_Handlerh+0x130c>
   171c6:	63 e2       	ldi	r22, 0x23	; 35
   171c8:	7c e3       	ldi	r23, 0x3C	; 60
   171ca:	86 ec       	ldi	r24, 0xC6	; 198
   171cc:	94 e1       	ldi	r25, 0x14	; 20
   171ce:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   171d2:	86 ec       	ldi	r24, 0xC6	; 198
   171d4:	94 e1       	ldi	r25, 0x14	; 20
   171d6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   171da:	72 e0       	ldi	r23, 0x02	; 2
   171dc:	37 16       	cp	r3, r23
   171de:	a9 f0       	breq	.+42     	; 0x1720a <_Z22Valve_Grouping_Handlerh+0x133c>
   171e0:	e1 e0       	ldi	r30, 0x01	; 1
   171e2:	d3 01       	movw	r26, r6
   171e4:	ec 93       	st	X, r30
   171e6:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   171ea:	90 e0       	ldi	r25, 0x00	; 0
   171ec:	98 2f       	mov	r25, r24
   171ee:	88 27       	eor	r24, r24
   171f0:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   171f4:	82 2b       	or	r24, r18
   171f6:	d7 01       	movw	r26, r14
   171f8:	8d 93       	st	X+, r24
   171fa:	9c 93       	st	X, r25
   171fc:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   17200:	58 12       	cpse	r5, r24
   17202:	56 c0       	rjmp	.+172    	; 0x172b0 <_Z22Valve_Grouping_Handlerh+0x13e2>
   17204:	33 e0       	ldi	r19, 0x03	; 3
   17206:	33 2e       	mov	r3, r19
   17208:	47 c1       	rjmp	.+654    	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x15ca>
   1720a:	86 e0       	ldi	r24, 0x06	; 6
   1720c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17210:	84 e6       	ldi	r24, 0x64	; 100
   17212:	90 e0       	ldi	r25, 0x00	; 0
   17214:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17218:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1721c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17220:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17224:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17228:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1722c:	a0 62       	ori	r26, 0x20	; 32
   1722e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17232:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17236:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1723a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1723e:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17242:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17246:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1724a:	82 60       	ori	r24, 0x02	; 2
   1724c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17250:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17254:	00 e0       	ldi	r16, 0x00	; 0
   17256:	10 e0       	ldi	r17, 0x00	; 0
   17258:	2b e1       	ldi	r18, 0x1B	; 27
   1725a:	f2 2e       	mov	r15, r18
   1725c:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   17260:	90 e0       	ldi	r25, 0x00	; 0
   17262:	85 56       	subi	r24, 0x65	; 101
   17264:	91 09       	sbc	r25, r1
   17266:	f8 9e       	mul	r15, r24
   17268:	f0 01       	movw	r30, r0
   1726a:	f9 9e       	mul	r15, r25
   1726c:	f0 0d       	add	r31, r0
   1726e:	11 24       	eor	r1, r1
   17270:	e8 51       	subi	r30, 0x18	; 24
   17272:	f2 4f       	sbci	r31, 0xF2	; 242
   17274:	e0 0f       	add	r30, r16
   17276:	f1 1f       	adc	r31, r17
   17278:	e5 81       	ldd	r30, Z+5	; 0x05
   1727a:	e3 31       	cpi	r30, 0x13	; 19
   1727c:	68 f0       	brcs	.+26     	; 0x17298 <_Z22Valve_Grouping_Handlerh+0x13ca>
   1727e:	f0 e0       	ldi	r31, 0x00	; 0
   17280:	e7 5c       	subi	r30, 0xC7	; 199
   17282:	fb 4e       	sbci	r31, 0xEB	; 235
   17284:	61 e0       	ldi	r22, 0x01	; 1
   17286:	80 81       	ld	r24, Z
   17288:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1728c:	68 ec       	ldi	r22, 0xC8	; 200
   1728e:	70 e0       	ldi	r23, 0x00	; 0
   17290:	80 e0       	ldi	r24, 0x00	; 0
   17292:	90 e0       	ldi	r25, 0x00	; 0
   17294:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17298:	0f 5f       	subi	r16, 0xFF	; 255
   1729a:	1f 4f       	sbci	r17, 0xFF	; 255
   1729c:	05 30       	cpi	r16, 0x05	; 5
   1729e:	11 05       	cpc	r17, r1
   172a0:	e9 f6       	brne	.-70     	; 0x1725c <_Z22Valve_Grouping_Handlerh+0x138e>
   172a2:	f8 c0       	rjmp	.+496    	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   172a4:	01 96       	adiw	r24, 0x01	; 1
   172a6:	86 30       	cpi	r24, 0x06	; 6
   172a8:	91 05       	cpc	r25, r1
   172aa:	09 f0       	breq	.+2      	; 0x172ae <_Z22Valve_Grouping_Handlerh+0x13e0>
   172ac:	7e cf       	rjmp	.-260    	; 0x171aa <_Z22Valve_Grouping_Handlerh+0x12dc>
   172ae:	98 cf       	rjmp	.-208    	; 0x171e0 <_Z22Valve_Grouping_Handlerh+0x1312>
   172b0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   172b4:	81 30       	cpi	r24, 0x01	; 1
   172b6:	51 f4       	brne	.+20     	; 0x172cc <_Z22Valve_Grouping_Handlerh+0x13fe>
   172b8:	60 e1       	ldi	r22, 0x10	; 16
   172ba:	7c e3       	ldi	r23, 0x3C	; 60
   172bc:	86 ec       	ldi	r24, 0xC6	; 198
   172be:	94 e1       	ldi	r25, 0x14	; 20
   172c0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   172c4:	86 ec       	ldi	r24, 0xC6	; 198
   172c6:	94 e1       	ldi	r25, 0x14	; 20
   172c8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   172cc:	b2 e0       	ldi	r27, 0x02	; 2
   172ce:	3b 12       	cpse	r3, r27
   172d0:	e3 c0       	rjmp	.+454    	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x15ca>
   172d2:	86 e0       	ldi	r24, 0x06	; 6
   172d4:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   172d8:	84 e6       	ldi	r24, 0x64	; 100
   172da:	90 e0       	ldi	r25, 0x00	; 0
   172dc:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   172e0:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   172e4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   172e8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   172ec:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   172f0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   172f4:	a0 62       	ori	r26, 0x20	; 32
   172f6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   172fa:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   172fe:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17302:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17306:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   1730a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1730e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17312:	82 60       	ori	r24, 0x02	; 2
   17314:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17318:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1731c:	00 e0       	ldi	r16, 0x00	; 0
   1731e:	10 e0       	ldi	r17, 0x00	; 0
   17320:	9b e1       	ldi	r25, 0x1B	; 27
   17322:	f9 2e       	mov	r15, r25
   17324:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   17328:	90 e0       	ldi	r25, 0x00	; 0
   1732a:	85 56       	subi	r24, 0x65	; 101
   1732c:	91 09       	sbc	r25, r1
   1732e:	f8 9e       	mul	r15, r24
   17330:	f0 01       	movw	r30, r0
   17332:	f9 9e       	mul	r15, r25
   17334:	f0 0d       	add	r31, r0
   17336:	11 24       	eor	r1, r1
   17338:	e8 51       	subi	r30, 0x18	; 24
   1733a:	f2 4f       	sbci	r31, 0xF2	; 242
   1733c:	e0 0f       	add	r30, r16
   1733e:	f1 1f       	adc	r31, r17
   17340:	e5 81       	ldd	r30, Z+5	; 0x05
   17342:	e3 31       	cpi	r30, 0x13	; 19
   17344:	68 f0       	brcs	.+26     	; 0x17360 <_Z22Valve_Grouping_Handlerh+0x1492>
   17346:	f0 e0       	ldi	r31, 0x00	; 0
   17348:	e7 5c       	subi	r30, 0xC7	; 199
   1734a:	fb 4e       	sbci	r31, 0xEB	; 235
   1734c:	61 e0       	ldi	r22, 0x01	; 1
   1734e:	80 81       	ld	r24, Z
   17350:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17354:	68 ec       	ldi	r22, 0xC8	; 200
   17356:	70 e0       	ldi	r23, 0x00	; 0
   17358:	80 e0       	ldi	r24, 0x00	; 0
   1735a:	90 e0       	ldi	r25, 0x00	; 0
   1735c:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17360:	0f 5f       	subi	r16, 0xFF	; 255
   17362:	1f 4f       	sbci	r17, 0xFF	; 255
   17364:	05 30       	cpi	r16, 0x05	; 5
   17366:	11 05       	cpc	r17, r1
   17368:	e9 f6       	brne	.-70     	; 0x17324 <_Z22Valve_Grouping_Handlerh+0x1456>
   1736a:	94 c0       	rjmp	.+296    	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   1736c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17370:	81 30       	cpi	r24, 0x01	; 1
   17372:	51 f4       	brne	.+20     	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x14ba>
   17374:	65 ed       	ldi	r22, 0xD5	; 213
   17376:	7b e3       	ldi	r23, 0x3B	; 59
   17378:	86 ec       	ldi	r24, 0xC6	; 198
   1737a:	94 e1       	ldi	r25, 0x14	; 20
   1737c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17380:	86 ec       	ldi	r24, 0xC6	; 198
   17382:	94 e1       	ldi	r25, 0x14	; 20
   17384:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17388:	e2 e0       	ldi	r30, 0x02	; 2
   1738a:	3e 12       	cpse	r3, r30
   1738c:	85 c0       	rjmp	.+266    	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x15ca>
   1738e:	86 e0       	ldi	r24, 0x06	; 6
   17390:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17394:	84 e6       	ldi	r24, 0x64	; 100
   17396:	90 e0       	ldi	r25, 0x00	; 0
   17398:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1739c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   173a0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   173a4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   173a8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   173ac:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   173b0:	a0 62       	ori	r26, 0x20	; 32
   173b2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   173b6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   173ba:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   173be:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   173c2:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   173c6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   173ca:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   173ce:	82 60       	ori	r24, 0x02	; 2
   173d0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   173d4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   173d8:	00 e0       	ldi	r16, 0x00	; 0
   173da:	10 e0       	ldi	r17, 0x00	; 0
   173dc:	8b e1       	ldi	r24, 0x1B	; 27
   173de:	f8 2e       	mov	r15, r24
   173e0:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   173e4:	90 e0       	ldi	r25, 0x00	; 0
   173e6:	85 56       	subi	r24, 0x65	; 101
   173e8:	91 09       	sbc	r25, r1
   173ea:	f8 9e       	mul	r15, r24
   173ec:	f0 01       	movw	r30, r0
   173ee:	f9 9e       	mul	r15, r25
   173f0:	f0 0d       	add	r31, r0
   173f2:	11 24       	eor	r1, r1
   173f4:	e8 51       	subi	r30, 0x18	; 24
   173f6:	f2 4f       	sbci	r31, 0xF2	; 242
   173f8:	e0 0f       	add	r30, r16
   173fa:	f1 1f       	adc	r31, r17
   173fc:	e5 81       	ldd	r30, Z+5	; 0x05
   173fe:	e3 31       	cpi	r30, 0x13	; 19
   17400:	68 f0       	brcs	.+26     	; 0x1741c <_Z22Valve_Grouping_Handlerh+0x154e>
   17402:	f0 e0       	ldi	r31, 0x00	; 0
   17404:	e7 5c       	subi	r30, 0xC7	; 199
   17406:	fb 4e       	sbci	r31, 0xEB	; 235
   17408:	61 e0       	ldi	r22, 0x01	; 1
   1740a:	80 81       	ld	r24, Z
   1740c:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17410:	68 ec       	ldi	r22, 0xC8	; 200
   17412:	70 e0       	ldi	r23, 0x00	; 0
   17414:	80 e0       	ldi	r24, 0x00	; 0
   17416:	90 e0       	ldi	r25, 0x00	; 0
   17418:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   1741c:	0f 5f       	subi	r16, 0xFF	; 255
   1741e:	1f 4f       	sbci	r17, 0xFF	; 255
   17420:	05 30       	cpi	r16, 0x05	; 5
   17422:	11 05       	cpc	r17, r1
   17424:	e9 f6       	brne	.-70     	; 0x173e0 <_Z22Valve_Grouping_Handlerh+0x1512>
   17426:	36 c0       	rjmp	.+108    	; 0x17494 <_Z22Valve_Grouping_Handlerh+0x15c6>
   17428:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1742c:	81 30       	cpi	r24, 0x01	; 1
   1742e:	51 f4       	brne	.+20     	; 0x17444 <_Z22Valve_Grouping_Handlerh+0x1576>
   17430:	6a e9       	ldi	r22, 0x9A	; 154
   17432:	7b e3       	ldi	r23, 0x3B	; 59
   17434:	86 ec       	ldi	r24, 0xC6	; 198
   17436:	94 e1       	ldi	r25, 0x14	; 20
   17438:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1743c:	86 ec       	ldi	r24, 0xC6	; 198
   1743e:	94 e1       	ldi	r25, 0x14	; 20
   17440:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17444:	f2 e0       	ldi	r31, 0x02	; 2
   17446:	3f 12       	cpse	r3, r31
   17448:	27 c0       	rjmp	.+78     	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x15ca>
   1744a:	86 e0       	ldi	r24, 0x06	; 6
   1744c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17450:	84 e6       	ldi	r24, 0x64	; 100
   17452:	90 e0       	ldi	r25, 0x00	; 0
   17454:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17458:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1745c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17460:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17464:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17468:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1746c:	a0 62       	ori	r26, 0x20	; 32
   1746e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17472:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17476:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1747a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1747e:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17482:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17486:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1748a:	82 60       	ori	r24, 0x02	; 2
   1748c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17490:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17494:	80 e0       	ldi	r24, 0x00	; 0
   17496:	56 c0       	rjmp	.+172    	; 0x17544 <_Z22Valve_Grouping_Handlerh+0x1676>
   17498:	68 ee       	ldi	r22, 0xE8	; 232
   1749a:	73 e0       	ldi	r23, 0x03	; 3
   1749c:	80 e0       	ldi	r24, 0x00	; 0
   1749e:	90 e0       	ldi	r25, 0x00	; 0
   174a0:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   174a4:	23 e0       	ldi	r18, 0x03	; 3
   174a6:	32 12       	cpse	r3, r18
   174a8:	07 ce       	rjmp	.-1010   	; 0x170b8 <_Z22Valve_Grouping_Handlerh+0x11ea>
   174aa:	35 c0       	rjmp	.+106    	; 0x17516 <_Z22Valve_Grouping_Handlerh+0x1648>
   174ac:	32 e1       	ldi	r19, 0x12	; 18
   174ae:	3f 15       	cp	r19, r15
   174b0:	78 f4       	brcc	.+30     	; 0x174d0 <_Z22Valve_Grouping_Handlerh+0x1602>
   174b2:	ef 2d       	mov	r30, r15
   174b4:	f0 e0       	ldi	r31, 0x00	; 0
   174b6:	e7 5c       	subi	r30, 0xC7	; 199
   174b8:	fb 4e       	sbci	r31, 0xEB	; 235
   174ba:	6b a9       	ldd	r22, Y+51	; 0x33
   174bc:	80 81       	ld	r24, Z
   174be:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   174c2:	68 ec       	ldi	r22, 0xC8	; 200
   174c4:	70 e0       	ldi	r23, 0x00	; 0
   174c6:	80 e0       	ldi	r24, 0x00	; 0
   174c8:	90 e0       	ldi	r25, 0x00	; 0
   174ca:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   174ce:	23 c0       	rjmp	.+70     	; 0x17516 <_Z22Valve_Grouping_Handlerh+0x1648>
   174d0:	01 97       	sbiw	r24, 0x01	; 1
   174d2:	26 e0       	ldi	r18, 0x06	; 6
   174d4:	28 9f       	mul	r18, r24
   174d6:	f0 01       	movw	r30, r0
   174d8:	29 9f       	mul	r18, r25
   174da:	f0 0d       	add	r31, r0
   174dc:	11 24       	eor	r1, r1
   174de:	e2 5b       	subi	r30, 0xB2	; 178
   174e0:	f2 4f       	sbci	r31, 0xF2	; 242
   174e2:	e0 0f       	add	r30, r16
   174e4:	f1 1f       	adc	r31, r17
   174e6:	81 81       	ldd	r24, Z+1	; 0x01
   174e8:	85 36       	cpi	r24, 0x65	; 101
   174ea:	a9 f4       	brne	.+42     	; 0x17516 <_Z22Valve_Grouping_Handlerh+0x1648>
   174ec:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   174f0:	41 e0       	ldi	r20, 0x01	; 1
   174f2:	54 12       	cpse	r5, r20
   174f4:	05 c0       	rjmp	.+10     	; 0x17500 <_Z22Valve_Grouping_Handlerh+0x1632>
   174f6:	88 23       	and	r24, r24
   174f8:	71 f0       	breq	.+28     	; 0x17516 <_Z22Valve_Grouping_Handlerh+0x1648>
   174fa:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   174fe:	05 c0       	rjmp	.+10     	; 0x1750a <_Z22Valve_Grouping_Handlerh+0x163c>
   17500:	88 23       	and	r24, r24
   17502:	49 f0       	breq	.+18     	; 0x17516 <_Z22Valve_Grouping_Handlerh+0x1648>
   17504:	82 e0       	ldi	r24, 0x02	; 2
   17506:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   1750a:	6b e7       	ldi	r22, 0x7B	; 123
   1750c:	74 e1       	ldi	r23, 0x14	; 20
   1750e:	88 ea       	ldi	r24, 0xA8	; 168
   17510:	9c e0       	ldi	r25, 0x0C	; 12
   17512:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17516:	0f 5f       	subi	r16, 0xFF	; 255
   17518:	1f 4f       	sbci	r17, 0xFF	; 255
   1751a:	05 30       	cpi	r16, 0x05	; 5
   1751c:	11 05       	cpc	r17, r1
   1751e:	09 f0       	breq	.+2      	; 0x17522 <_Z22Valve_Grouping_Handlerh+0x1654>
   17520:	ee cc       	rjmp	.-1572   	; 0x16efe <_Z22Valve_Grouping_Handlerh+0x1030>
   17522:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17526:	81 30       	cpi	r24, 0x01	; 1
   17528:	61 f4       	brne	.+24     	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   1752a:	6b e7       	ldi	r22, 0x7B	; 123
   1752c:	7b e3       	ldi	r23, 0x3B	; 59
   1752e:	86 ec       	ldi	r24, 0xC6	; 198
   17530:	94 e1       	ldi	r25, 0x14	; 20
   17532:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17536:	86 ec       	ldi	r24, 0xC6	; 198
   17538:	94 e1       	ldi	r25, 0x14	; 20
   1753a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1753e:	01 c0       	rjmp	.+2      	; 0x17542 <_Z22Valve_Grouping_Handlerh+0x1674>
   17540:	01 c0       	rjmp	.+2      	; 0x17544 <_Z22Valve_Grouping_Handlerh+0x1676>
   17542:	81 e0       	ldi	r24, 0x01	; 1
   17544:	e8 96       	adiw	r28, 0x38	; 56
   17546:	0f b6       	in	r0, 0x3f	; 63
   17548:	f8 94       	cli
   1754a:	de bf       	out	0x3e, r29	; 62
   1754c:	0f be       	out	0x3f, r0	; 63
   1754e:	cd bf       	out	0x3d, r28	; 61
   17550:	df 91       	pop	r29
   17552:	cf 91       	pop	r28
   17554:	1f 91       	pop	r17
   17556:	0f 91       	pop	r16
   17558:	ff 90       	pop	r15
   1755a:	ef 90       	pop	r14
   1755c:	df 90       	pop	r13
   1755e:	cf 90       	pop	r12
   17560:	bf 90       	pop	r11
   17562:	af 90       	pop	r10
   17564:	9f 90       	pop	r9
   17566:	8f 90       	pop	r8
   17568:	7f 90       	pop	r7
   1756a:	6f 90       	pop	r6
   1756c:	5f 90       	pop	r5
   1756e:	4f 90       	pop	r4
   17570:	3f 90       	pop	r3
   17572:	2f 90       	pop	r2
   17574:	08 95       	ret

00017576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   17576:	2f 92       	push	r2
   17578:	3f 92       	push	r3
   1757a:	4f 92       	push	r4
   1757c:	5f 92       	push	r5
   1757e:	6f 92       	push	r6
   17580:	7f 92       	push	r7
   17582:	8f 92       	push	r8
   17584:	9f 92       	push	r9
   17586:	af 92       	push	r10
   17588:	bf 92       	push	r11
   1758a:	cf 92       	push	r12
   1758c:	df 92       	push	r13
   1758e:	ef 92       	push	r14
   17590:	ff 92       	push	r15
   17592:	0f 93       	push	r16
   17594:	1f 93       	push	r17
   17596:	cf 93       	push	r28
   17598:	df 93       	push	r29
   1759a:	00 d0       	rcall	.+0      	; 0x1759c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26>
   1759c:	cd b7       	in	r28, 0x3d	; 61
   1759e:	de b7       	in	r29, 0x3e	; 62
   175a0:	89 83       	std	Y+1, r24	; 0x01
   175a2:	6a 83       	std	Y+2, r22	; 0x02
   175a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   175a8:	81 30       	cpi	r24, 0x01	; 1
   175aa:	31 f4       	brne	.+12     	; 0x175b8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42>
   175ac:	63 ef       	ldi	r22, 0xF3	; 243
   175ae:	7e e2       	ldi	r23, 0x2E	; 46
   175b0:	86 ec       	ldi	r24, 0xC6	; 198
   175b2:	94 e1       	ldi	r25, 0x14	; 20
   175b4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   175b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   175bc:	81 30       	cpi	r24, 0x01	; 1
   175be:	89 f5       	brne	.+98     	; 0x17622 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xac>
   175c0:	3a 81       	ldd	r19, Y+2	; 0x02
   175c2:	2b e1       	ldi	r18, 0x1B	; 27
   175c4:	32 9f       	mul	r19, r18
   175c6:	60 01       	movw	r12, r0
   175c8:	11 24       	eor	r1, r1
   175ca:	e1 2c       	mov	r14, r1
   175cc:	f1 2c       	mov	r15, r1
   175ce:	f6 01       	movw	r30, r12
   175d0:	ee 0d       	add	r30, r14
   175d2:	ff 1d       	adc	r31, r15
   175d4:	e8 51       	subi	r30, 0x18	; 24
   175d6:	f2 4f       	sbci	r31, 0xF2	; 242
   175d8:	4a e0       	ldi	r20, 0x0A	; 10
   175da:	50 e0       	ldi	r21, 0x00	; 0
   175dc:	65 81       	ldd	r22, Z+5	; 0x05
   175de:	86 ec       	ldi	r24, 0xC6	; 198
   175e0:	94 e1       	ldi	r25, 0x14	; 20
   175e2:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   175e6:	61 ef       	ldi	r22, 0xF1	; 241
   175e8:	7e e2       	ldi	r23, 0x2E	; 46
   175ea:	86 ec       	ldi	r24, 0xC6	; 198
   175ec:	94 e1       	ldi	r25, 0x14	; 20
   175ee:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   175f2:	4f ef       	ldi	r20, 0xFF	; 255
   175f4:	e4 1a       	sub	r14, r20
   175f6:	f4 0a       	sbc	r15, r20
   175f8:	85 e0       	ldi	r24, 0x05	; 5
   175fa:	e8 16       	cp	r14, r24
   175fc:	f1 04       	cpc	r15, r1
   175fe:	39 f7       	brne	.-50     	; 0x175ce <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x58>
   17600:	65 ed       	ldi	r22, 0xD5	; 213
   17602:	7e e2       	ldi	r23, 0x2E	; 46
   17604:	86 ec       	ldi	r24, 0xC6	; 198
   17606:	94 e1       	ldi	r25, 0x14	; 20
   17608:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1760c:	4a e0       	ldi	r20, 0x0A	; 10
   1760e:	50 e0       	ldi	r21, 0x00	; 0
   17610:	6a 81       	ldd	r22, Y+2	; 0x02
   17612:	86 ec       	ldi	r24, 0xC6	; 198
   17614:	94 e1       	ldi	r25, 0x14	; 20
   17616:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1761a:	86 ec       	ldi	r24, 0xC6	; 198
   1761c:	94 e1       	ldi	r25, 0x14	; 20
   1761e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17622:	9a 81       	ldd	r25, Y+2	; 0x02
   17624:	94 30       	cpi	r25, 0x04	; 4
   17626:	19 f4       	brne	.+6      	; 0x1762e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xb8>
   17628:	e9 81       	ldd	r30, Y+1	; 0x01
   1762a:	e1 30       	cpi	r30, 0x01	; 1
   1762c:	91 f0       	breq	.+36     	; 0x17652 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xdc>
   1762e:	2a 81       	ldd	r18, Y+2	; 0x02
   17630:	4b e1       	ldi	r20, 0x1B	; 27
   17632:	24 9f       	mul	r18, r20
   17634:	90 01       	movw	r18, r0
   17636:	11 24       	eor	r1, r1
   17638:	3b 83       	std	Y+3, r19	; 0x03
   1763a:	2a 83       	std	Y+2, r18	; 0x02
   1763c:	e1 2c       	mov	r14, r1
   1763e:	f1 2c       	mov	r15, r1
   17640:	52 e0       	ldi	r21, 0x02	; 2
   17642:	a5 2e       	mov	r10, r21
   17644:	6d e0       	ldi	r22, 0x0D	; 13
   17646:	b6 2e       	mov	r11, r22
   17648:	70 ed       	ldi	r23, 0xD0	; 208
   1764a:	c7 2e       	mov	r12, r23
   1764c:	7f e0       	ldi	r23, 0x0F	; 15
   1764e:	d7 2e       	mov	r13, r23
   17650:	97 c1       	rjmp	.+814    	; 0x17980 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   17652:	e9 e5       	ldi	r30, 0x59	; 89
   17654:	fe e0       	ldi	r31, 0x0E	; 14
   17656:	80 e0       	ldi	r24, 0x00	; 0
   17658:	91 91       	ld	r25, Z+
   1765a:	91 11       	cpse	r25, r1
   1765c:	8f 5f       	subi	r24, 0xFF	; 255
   1765e:	3e e0       	ldi	r19, 0x0E	; 14
   17660:	ee 35       	cpi	r30, 0x5E	; 94
   17662:	f3 07       	cpc	r31, r19
   17664:	c9 f7       	brne	.-14     	; 0x17658 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xe2>
   17666:	82 30       	cpi	r24, 0x02	; 2
   17668:	18 f4       	brcc	.+6      	; 0x17670 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xfa>
   1766a:	91 e0       	ldi	r25, 0x01	; 1
   1766c:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
   17670:	90 91 eb 0c 	lds	r25, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   17674:	99 23       	and	r25, r25
   17676:	11 f0       	breq	.+4      	; 0x1767c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x106>
   17678:	89 17       	cp	r24, r25
   1767a:	48 f4       	brcc	.+18     	; 0x1768e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x118>
   1767c:	81 e0       	ldi	r24, 0x01	; 1
   1767e:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
   17682:	6b ee       	ldi	r22, 0xEB	; 235
   17684:	7c e0       	ldi	r23, 0x0C	; 12
   17686:	87 eb       	ldi	r24, 0xB7	; 183
   17688:	9e e0       	ldi	r25, 0x0E	; 14
   1768a:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1768e:	e0 91 eb 0c 	lds	r30, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   17692:	f0 e0       	ldi	r31, 0x00	; 0
   17694:	e8 5a       	subi	r30, 0xA8	; 168
   17696:	f1 4f       	sbci	r31, 0xF1	; 241
   17698:	e0 81       	ld	r30, Z
   1769a:	e3 31       	cpi	r30, 0x13	; 19
   1769c:	20 f4       	brcc	.+8      	; 0x176a6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x130>
   1769e:	80 91 5e 0e 	lds	r24, 0x0E5E	; 0x800e5e <_sExtra_Plot+0x76>
   176a2:	81 11       	cpse	r24, r1
   176a4:	2b c3       	rjmp	.+1622   	; 0x17cfc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   176a6:	f0 e0       	ldi	r31, 0x00	; 0
   176a8:	e7 5c       	subi	r30, 0xC7	; 199
   176aa:	fb 4e       	sbci	r31, 0xEB	; 235
   176ac:	60 e0       	ldi	r22, 0x00	; 0
   176ae:	80 81       	ld	r24, Z
   176b0:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   176b4:	68 ec       	ldi	r22, 0xC8	; 200
   176b6:	70 e0       	ldi	r23, 0x00	; 0
   176b8:	80 e0       	ldi	r24, 0x00	; 0
   176ba:	90 e0       	ldi	r25, 0x00	; 0
   176bc:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   176c0:	1d c3       	rjmp	.+1594   	; 0x17cfc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   176c2:	43 e0       	ldi	r20, 0x03	; 3
   176c4:	48 15       	cp	r20, r8
   176c6:	08 f0       	brcs	.+2      	; 0x176ca <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x154>
   176c8:	6c c1       	rjmp	.+728    	; 0x179a2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42c>
   176ca:	6b ea       	ldi	r22, 0xAB	; 171
   176cc:	86 9e       	mul	r8, r22
   176ce:	71 2c       	mov	r7, r1
   176d0:	11 24       	eor	r1, r1
   176d2:	87 2d       	mov	r24, r7
   176d4:	86 95       	lsr	r24
   176d6:	98 2f       	mov	r25, r24
   176d8:	99 0f       	add	r25, r25
   176da:	89 0f       	add	r24, r25
   176dc:	88 1a       	sub	r8, r24
   176de:	67 2d       	mov	r22, r7
   176e0:	66 95       	lsr	r22
   176e2:	88 20       	and	r8, r8
   176e4:	09 f4       	brne	.+2      	; 0x176e8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x172>
   176e6:	59 c1       	rjmp	.+690    	; 0x1799a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x424>
   176e8:	01 e0       	ldi	r16, 0x01	; 1
   176ea:	06 0f       	add	r16, r22
   176ec:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   176f0:	81 30       	cpi	r24, 0x01	; 1
   176f2:	89 f4       	brne	.+34     	; 0x17716 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1a0>
   176f4:	61 ec       	ldi	r22, 0xC1	; 193
   176f6:	7e e2       	ldi	r23, 0x2E	; 46
   176f8:	86 ec       	ldi	r24, 0xC6	; 198
   176fa:	94 e1       	ldi	r25, 0x14	; 20
   176fc:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17700:	86 ec       	ldi	r24, 0xC6	; 198
   17702:	94 e1       	ldi	r25, 0x14	; 20
   17704:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17708:	4a e0       	ldi	r20, 0x0A	; 10
   1770a:	50 e0       	ldi	r21, 0x00	; 0
   1770c:	60 2f       	mov	r22, r16
   1770e:	86 ec       	ldi	r24, 0xC6	; 198
   17710:	94 e1       	ldi	r25, 0x14	; 20
   17712:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   17716:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   1771a:	81 11       	cpse	r24, r1
   1771c:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   17720:	e5 ef       	ldi	r30, 0xF5	; 245
   17722:	f3 e1       	ldi	r31, 0x13	; 19
   17724:	24 e1       	ldi	r18, 0x14	; 20
   17726:	11 92       	st	Z+, r1
   17728:	2a 95       	dec	r18
   1772a:	e9 f7       	brne	.-6      	; 0x17726 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1b0>
   1772c:	60 2f       	mov	r22, r16
   1772e:	70 e0       	ldi	r23, 0x00	; 0
   17730:	61 50       	subi	r22, 0x01	; 1
   17732:	71 09       	sbc	r23, r1
   17734:	37 e0       	ldi	r19, 0x07	; 7
   17736:	36 9f       	mul	r19, r22
   17738:	c0 01       	movw	r24, r0
   1773a:	37 9f       	mul	r19, r23
   1773c:	90 0d       	add	r25, r0
   1773e:	11 24       	eor	r1, r1
   17740:	82 55       	subi	r24, 0x52	; 82
   17742:	9c 4e       	sbci	r25, 0xEC	; 236
   17744:	fc 01       	movw	r30, r24
   17746:	ec 58       	subi	r30, 0x8C	; 140
   17748:	ff 4f       	sbci	r31, 0xFF	; 255
   1774a:	20 81       	ld	r18, Z
   1774c:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   17750:	31 96       	adiw	r30, 0x01	; 1
   17752:	20 81       	ld	r18, Z
   17754:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   17758:	31 96       	adiw	r30, 0x01	; 1
   1775a:	20 81       	ld	r18, Z
   1775c:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   17760:	31 96       	adiw	r30, 0x01	; 1
   17762:	20 81       	ld	r18, Z
   17764:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   17768:	31 96       	adiw	r30, 0x01	; 1
   1776a:	20 81       	ld	r18, Z
   1776c:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   17770:	31 96       	adiw	r30, 0x01	; 1
   17772:	20 81       	ld	r18, Z
   17774:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   17778:	a0 92 fb 13 	sts	0x13FB, r10	; 0x8013fb <_sRuble_Parameters+0x4d>
   1777c:	49 81       	ldd	r20, Y+1	; 0x01
   1777e:	40 93 fc 13 	sts	0x13FC, r20	; 0x8013fc <_sRuble_Parameters+0x4e>
   17782:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   17786:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   1778a:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   1778e:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17792:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
   17796:	40 e0       	ldi	r20, 0x00	; 0
   17798:	50 e0       	ldi	r21, 0x00	; 0
   1779a:	64 2e       	mov	r6, r20
   1779c:	00 e0       	ldi	r16, 0x00	; 0
   1779e:	81 2c       	mov	r8, r1
   177a0:	b4 9e       	mul	r11, r20
   177a2:	b0 01       	movw	r22, r0
   177a4:	b5 9e       	mul	r11, r21
   177a6:	70 0d       	add	r23, r0
   177a8:	11 24       	eor	r1, r1
   177aa:	6b 5e       	subi	r22, 0xEB	; 235
   177ac:	73 4f       	sbci	r23, 0xF3	; 243
   177ae:	28 2d       	mov	r18, r8
   177b0:	30 e0       	ldi	r19, 0x00	; 0
   177b2:	fb 01       	movw	r30, r22
   177b4:	e2 0f       	add	r30, r18
   177b6:	f3 1f       	adc	r31, r19
   177b8:	28 0f       	add	r18, r24
   177ba:	39 1f       	adc	r19, r25
   177bc:	d9 01       	movw	r26, r18
   177be:	ac 58       	subi	r26, 0x8C	; 140
   177c0:	bf 4f       	sbci	r27, 0xFF	; 255
   177c2:	31 81       	ldd	r19, Z+1	; 0x01
   177c4:	2c 91       	ld	r18, X
   177c6:	32 17       	cp	r19, r18
   177c8:	19 f0       	breq	.+6      	; 0x177d0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x25a>
   177ca:	00 e0       	ldi	r16, 0x00	; 0
   177cc:	36 e0       	ldi	r19, 0x06	; 6
   177ce:	83 2e       	mov	r8, r19
   177d0:	0f 5f       	subi	r16, 0xFF	; 255
   177d2:	83 94       	inc	r8
   177d4:	e5 e0       	ldi	r30, 0x05	; 5
   177d6:	e8 15       	cp	r30, r8
   177d8:	50 f7       	brcc	.-44     	; 0x177ae <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x238>
   177da:	06 30       	cpi	r16, 0x06	; 6
   177dc:	09 f4       	brne	.+2      	; 0x177e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26a>
   177de:	e3 c0       	rjmp	.+454    	; 0x179a6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x430>
   177e0:	4f 5f       	subi	r20, 0xFF	; 255
   177e2:	5f 4f       	sbci	r21, 0xFF	; 255
   177e4:	46 30       	cpi	r20, 0x06	; 6
   177e6:	51 05       	cpc	r21, r1
   177e8:	c1 f6       	brne	.-80     	; 0x1779a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x224>
   177ea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   177ee:	81 30       	cpi	r24, 0x01	; 1
   177f0:	89 f4       	brne	.+34     	; 0x17814 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x29e>
   177f2:	6b ea       	ldi	r22, 0xAB	; 171
   177f4:	7e e2       	ldi	r23, 0x2E	; 46
   177f6:	86 ec       	ldi	r24, 0xC6	; 198
   177f8:	94 e1       	ldi	r25, 0x14	; 20
   177fa:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   177fe:	4a e0       	ldi	r20, 0x0A	; 10
   17800:	50 e0       	ldi	r21, 0x00	; 0
   17802:	61 2f       	mov	r22, r17
   17804:	86 ec       	ldi	r24, 0xC6	; 198
   17806:	94 e1       	ldi	r25, 0x14	; 20
   17808:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   1780c:	86 ec       	ldi	r24, 0xC6	; 198
   1780e:	94 e1       	ldi	r25, 0x14	; 20
   17810:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17814:	fd e0       	ldi	r31, 0x0D	; 13
   17816:	1f 9f       	mul	r17, r31
   17818:	40 01       	movw	r8, r0
   1781a:	11 24       	eor	r1, r1
   1781c:	00 e0       	ldi	r16, 0x00	; 0
   1781e:	b1 9e       	mul	r11, r17
   17820:	c0 01       	movw	r24, r0
   17822:	11 24       	eor	r1, r1
   17824:	9c 01       	movw	r18, r24
   17826:	2b 5e       	subi	r18, 0xEB	; 235
   17828:	33 4f       	sbci	r19, 0xF3	; 243
   1782a:	29 01       	movw	r4, r18
   1782c:	4b e0       	ldi	r20, 0x0B	; 11
   1782e:	44 0e       	add	r4, r20
   17830:	51 1c       	adc	r5, r1
   17832:	19 01       	movw	r2, r18
   17834:	e8 e0       	ldi	r30, 0x08	; 8
   17836:	2e 0e       	add	r2, r30
   17838:	31 1c       	adc	r3, r1
   1783a:	9c 01       	movw	r18, r24
   1783c:	2a 5e       	subi	r18, 0xEA	; 234
   1783e:	33 4f       	sbci	r19, 0xF3	; 243
   17840:	39 01       	movw	r6, r18
   17842:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   17846:	81 11       	cpse	r24, r1
   17848:	b0 c0       	rjmp	.+352    	; 0x179aa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x434>
   1784a:	0f 5f       	subi	r16, 0xFF	; 255
   1784c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17850:	81 30       	cpi	r24, 0x01	; 1
   17852:	51 f4       	brne	.+20     	; 0x17868 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2f2>
   17854:	67 e8       	ldi	r22, 0x87	; 135
   17856:	7e e2       	ldi	r23, 0x2E	; 46
   17858:	86 ec       	ldi	r24, 0xC6	; 198
   1785a:	94 e1       	ldi	r25, 0x14	; 20
   1785c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17860:	86 ec       	ldi	r24, 0xC6	; 198
   17862:	94 e1       	ldi	r25, 0x14	; 20
   17864:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17868:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   1786c:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   17870:	81 11       	cpse	r24, r1
   17872:	b0 c0       	rjmp	.+352    	; 0x179d4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x45e>
   17874:	8c e0       	ldi	r24, 0x0C	; 12
   17876:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   1787a:	88 eb       	ldi	r24, 0xB8	; 184
   1787c:	9b e0       	ldi	r25, 0x0B	; 11
   1787e:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   17882:	88 23       	and	r24, r24
   17884:	09 f4       	brne	.+2      	; 0x17888 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x312>
   17886:	c2 c1       	rjmp	.+900    	; 0x17c0c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x696>
   17888:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   1788c:	88 23       	and	r24, r24
   1788e:	09 f4       	brne	.+2      	; 0x17892 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x31c>
   17890:	69 c1       	rjmp	.+722    	; 0x17b64 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5ee>
   17892:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   17896:	81 11       	cpse	r24, r1
   17898:	b2 c0       	rjmp	.+356    	; 0x179fe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x488>
   1789a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1789e:	81 30       	cpi	r24, 0x01	; 1
   178a0:	59 f5       	brne	.+86     	; 0x178f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x382>
   178a2:	61 e7       	ldi	r22, 0x71	; 113
   178a4:	7e e2       	ldi	r23, 0x2E	; 46
   178a6:	86 ec       	ldi	r24, 0xC6	; 198
   178a8:	94 e1       	ldi	r25, 0x14	; 20
   178aa:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   178ae:	4a e0       	ldi	r20, 0x0A	; 10
   178b0:	50 e0       	ldi	r21, 0x00	; 0
   178b2:	69 e0       	ldi	r22, 0x09	; 9
   178b4:	74 e1       	ldi	r23, 0x14	; 20
   178b6:	86 ec       	ldi	r24, 0xC6	; 198
   178b8:	94 e1       	ldi	r25, 0x14	; 20
   178ba:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   178be:	86 ec       	ldi	r24, 0xC6	; 198
   178c0:	94 e1       	ldi	r25, 0x14	; 20
   178c2:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   178c6:	86 ec       	ldi	r24, 0xC6	; 198
   178c8:	94 e1       	ldi	r25, 0x14	; 20
   178ca:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   178ce:	63 e5       	ldi	r22, 0x53	; 83
   178d0:	7e e2       	ldi	r23, 0x2E	; 46
   178d2:	86 ec       	ldi	r24, 0xC6	; 198
   178d4:	94 e1       	ldi	r25, 0x14	; 20
   178d6:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   178da:	47 e0       	ldi	r20, 0x07	; 7
   178dc:	50 e0       	ldi	r21, 0x00	; 0
   178de:	b3 01       	movw	r22, r6
   178e0:	86 ec       	ldi	r24, 0xC6	; 198
   178e2:	94 e1       	ldi	r25, 0x14	; 20
   178e4:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
   178e8:	86 ec       	ldi	r24, 0xC6	; 198
   178ea:	94 e1       	ldi	r25, 0x14	; 20
   178ec:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   178f0:	86 ec       	ldi	r24, 0xC6	; 198
   178f2:	94 e1       	ldi	r25, 0x14	; 20
   178f4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   178f8:	a9 e0       	ldi	r26, 0x09	; 9
   178fa:	b4 e1       	ldi	r27, 0x14	; 20
   178fc:	80 e0       	ldi	r24, 0x00	; 0
   178fe:	90 e0       	ldi	r25, 0x00	; 0
   17900:	2d 91       	ld	r18, X+
   17902:	f4 01       	movw	r30, r8
   17904:	e8 0f       	add	r30, r24
   17906:	f9 1f       	adc	r31, r25
   17908:	eb 5e       	subi	r30, 0xEB	; 235
   1790a:	f3 4f       	sbci	r31, 0xF3	; 243
   1790c:	31 81       	ldd	r19, Z+1	; 0x01
   1790e:	32 17       	cp	r19, r18
   17910:	09 f4       	brne	.+2      	; 0x17914 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x39e>
   17912:	ce c0       	rjmp	.+412    	; 0x17ab0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x53a>
   17914:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17918:	81 30       	cpi	r24, 0x01	; 1
   1791a:	51 f4       	brne	.+20     	; 0x17930 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   1791c:	68 e2       	ldi	r22, 0x28	; 40
   1791e:	7e e2       	ldi	r23, 0x2E	; 46
   17920:	86 ec       	ldi	r24, 0xC6	; 198
   17922:	94 e1       	ldi	r25, 0x14	; 20
   17924:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17928:	86 ec       	ldi	r24, 0xC6	; 198
   1792a:	94 e1       	ldi	r25, 0x14	; 20
   1792c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17930:	02 30       	cpi	r16, 0x02	; 2
   17932:	09 f4       	brne	.+2      	; 0x17936 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   17934:	79 c0       	rjmp	.+242    	; 0x17a28 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4b2>
   17936:	21 e0       	ldi	r18, 0x01	; 1
   17938:	f2 01       	movw	r30, r4
   1793a:	20 83       	st	Z, r18
   1793c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   17940:	90 e0       	ldi	r25, 0x00	; 0
   17942:	98 2f       	mov	r25, r24
   17944:	88 27       	eor	r24, r24
   17946:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   1794a:	82 2b       	or	r24, r18
   1794c:	f1 01       	movw	r30, r2
   1794e:	91 83       	std	Z+1, r25	; 0x01
   17950:	80 83       	st	Z, r24
   17952:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   17956:	f9 81       	ldd	r31, Y+1	; 0x01
   17958:	f8 13       	cpse	r31, r24
   1795a:	b0 c0       	rjmp	.+352    	; 0x17abc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x546>
   1795c:	03 e0       	ldi	r16, 0x03	; 3
   1795e:	68 ee       	ldi	r22, 0xE8	; 232
   17960:	73 e0       	ldi	r23, 0x03	; 3
   17962:	80 e0       	ldi	r24, 0x00	; 0
   17964:	90 e0       	ldi	r25, 0x00	; 0
   17966:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   1796a:	03 30       	cpi	r16, 0x03	; 3
   1796c:	09 f0       	breq	.+2      	; 0x17970 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   1796e:	69 cf       	rjmp	.-302    	; 0x17842 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2cc>
   17970:	4f ef       	ldi	r20, 0xFF	; 255
   17972:	e4 1a       	sub	r14, r20
   17974:	f4 0a       	sbc	r15, r20
   17976:	85 e0       	ldi	r24, 0x05	; 5
   17978:	e8 16       	cp	r14, r24
   1797a:	f1 04       	cpc	r15, r1
   1797c:	09 f4       	brne	.+2      	; 0x17980 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   1797e:	b0 c1       	rjmp	.+864    	; 0x17ce0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x76a>
   17980:	ea 81       	ldd	r30, Y+2	; 0x02
   17982:	fb 81       	ldd	r31, Y+3	; 0x03
   17984:	ee 0d       	add	r30, r14
   17986:	ff 1d       	adc	r31, r15
   17988:	e8 51       	subi	r30, 0x18	; 24
   1798a:	f2 4f       	sbci	r31, 0xF2	; 242
   1798c:	85 80       	ldd	r8, Z+5	; 0x05
   1798e:	8f ef       	ldi	r24, 0xFF	; 255
   17990:	88 0d       	add	r24, r8
   17992:	82 31       	cpi	r24, 0x12	; 18
   17994:	08 f0       	brcs	.+2      	; 0x17998 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x422>
   17996:	8e c1       	rjmp	.+796    	; 0x17cb4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x73e>
   17998:	94 ce       	rjmp	.-728    	; 0x176c2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x14c>
   1799a:	06 2f       	mov	r16, r22
   1799c:	43 e0       	ldi	r20, 0x03	; 3
   1799e:	84 2e       	mov	r8, r20
   179a0:	a5 ce       	rjmp	.-694    	; 0x176ec <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   179a2:	01 e0       	ldi	r16, 0x01	; 1
   179a4:	a3 ce       	rjmp	.-698    	; 0x176ec <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   179a6:	16 2d       	mov	r17, r6
   179a8:	20 cf       	rjmp	.-448    	; 0x177ea <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x274>
   179aa:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   179ae:	88 23       	and	r24, r24
   179b0:	09 f4       	brne	.+2      	; 0x179b4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x43e>
   179b2:	4b cf       	rjmp	.-362    	; 0x1784a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   179b4:	f6 01       	movw	r30, r12
   179b6:	01 90       	ld	r0, Z+
   179b8:	00 20       	and	r0, r0
   179ba:	e9 f7       	brne	.-6      	; 0x179b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x440>
   179bc:	31 97       	sbiw	r30, 0x01	; 1
   179be:	af 01       	movw	r20, r30
   179c0:	40 5d       	subi	r20, 0xD0	; 208
   179c2:	5f 40       	sbci	r21, 0x0F	; 15
   179c4:	21 e0       	ldi	r18, 0x01	; 1
   179c6:	60 ed       	ldi	r22, 0xD0	; 208
   179c8:	7f e0       	ldi	r23, 0x0F	; 15
   179ca:	82 e6       	ldi	r24, 0x62	; 98
   179cc:	9f e0       	ldi	r25, 0x0F	; 15
   179ce:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   179d2:	3b cf       	rjmp	.-394    	; 0x1784a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   179d4:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   179d8:	88 23       	and	r24, r24
   179da:	09 f4       	brne	.+2      	; 0x179de <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x468>
   179dc:	4b cf       	rjmp	.-362    	; 0x17874 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   179de:	f6 01       	movw	r30, r12
   179e0:	01 90       	ld	r0, Z+
   179e2:	00 20       	and	r0, r0
   179e4:	e9 f7       	brne	.-6      	; 0x179e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x46a>
   179e6:	31 97       	sbiw	r30, 0x01	; 1
   179e8:	af 01       	movw	r20, r30
   179ea:	40 5d       	subi	r20, 0xD0	; 208
   179ec:	5f 40       	sbci	r21, 0x0F	; 15
   179ee:	21 e0       	ldi	r18, 0x01	; 1
   179f0:	60 ed       	ldi	r22, 0xD0	; 208
   179f2:	7f e0       	ldi	r23, 0x0F	; 15
   179f4:	82 e6       	ldi	r24, 0x62	; 98
   179f6:	9f e0       	ldi	r25, 0x0F	; 15
   179f8:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   179fc:	3b cf       	rjmp	.-394    	; 0x17874 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   179fe:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   17a02:	88 23       	and	r24, r24
   17a04:	09 f4       	brne	.+2      	; 0x17a08 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x492>
   17a06:	49 cf       	rjmp	.-366    	; 0x1789a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   17a08:	f6 01       	movw	r30, r12
   17a0a:	01 90       	ld	r0, Z+
   17a0c:	00 20       	and	r0, r0
   17a0e:	e9 f7       	brne	.-6      	; 0x17a0a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x494>
   17a10:	31 97       	sbiw	r30, 0x01	; 1
   17a12:	af 01       	movw	r20, r30
   17a14:	40 5d       	subi	r20, 0xD0	; 208
   17a16:	5f 40       	sbci	r21, 0x0F	; 15
   17a18:	21 e0       	ldi	r18, 0x01	; 1
   17a1a:	60 ed       	ldi	r22, 0xD0	; 208
   17a1c:	7f e0       	ldi	r23, 0x0F	; 15
   17a1e:	82 e6       	ldi	r24, 0x62	; 98
   17a20:	9f e0       	ldi	r25, 0x0F	; 15
   17a22:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   17a26:	39 cf       	rjmp	.-398    	; 0x1789a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   17a28:	86 e0       	ldi	r24, 0x06	; 6
   17a2a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17a2e:	84 e6       	ldi	r24, 0x64	; 100
   17a30:	90 e0       	ldi	r25, 0x00	; 0
   17a32:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17a36:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17a3a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17a3e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17a42:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17a46:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17a4a:	a0 62       	ori	r26, 0x20	; 32
   17a4c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17a50:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17a54:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17a58:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17a5c:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17a60:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17a64:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17a68:	82 60       	ori	r24, 0x02	; 2
   17a6a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17a6e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17a72:	00 e0       	ldi	r16, 0x00	; 0
   17a74:	10 e0       	ldi	r17, 0x00	; 0
   17a76:	ea 81       	ldd	r30, Y+2	; 0x02
   17a78:	fb 81       	ldd	r31, Y+3	; 0x03
   17a7a:	e0 0f       	add	r30, r16
   17a7c:	f1 1f       	adc	r31, r17
   17a7e:	e8 51       	subi	r30, 0x18	; 24
   17a80:	f2 4f       	sbci	r31, 0xF2	; 242
   17a82:	e5 81       	ldd	r30, Z+5	; 0x05
   17a84:	e3 31       	cpi	r30, 0x13	; 19
   17a86:	68 f0       	brcs	.+26     	; 0x17aa2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x52c>
   17a88:	f0 e0       	ldi	r31, 0x00	; 0
   17a8a:	e7 5c       	subi	r30, 0xC7	; 199
   17a8c:	fb 4e       	sbci	r31, 0xEB	; 235
   17a8e:	61 e0       	ldi	r22, 0x01	; 1
   17a90:	80 81       	ld	r24, Z
   17a92:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17a96:	68 ec       	ldi	r22, 0xC8	; 200
   17a98:	70 e0       	ldi	r23, 0x00	; 0
   17a9a:	80 e0       	ldi	r24, 0x00	; 0
   17a9c:	90 e0       	ldi	r25, 0x00	; 0
   17a9e:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17aa2:	0f 5f       	subi	r16, 0xFF	; 255
   17aa4:	1f 4f       	sbci	r17, 0xFF	; 255
   17aa6:	05 30       	cpi	r16, 0x05	; 5
   17aa8:	11 05       	cpc	r17, r1
   17aaa:	29 f7       	brne	.-54     	; 0x17a76 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x500>
   17aac:	80 e0       	ldi	r24, 0x00	; 0
   17aae:	27 c1       	rjmp	.+590    	; 0x17cfe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x788>
   17ab0:	01 96       	adiw	r24, 0x01	; 1
   17ab2:	86 30       	cpi	r24, 0x06	; 6
   17ab4:	91 05       	cpc	r25, r1
   17ab6:	09 f0       	breq	.+2      	; 0x17aba <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x544>
   17ab8:	23 cf       	rjmp	.-442    	; 0x17900 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x38a>
   17aba:	3d cf       	rjmp	.-390    	; 0x17936 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   17abc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17ac0:	81 30       	cpi	r24, 0x01	; 1
   17ac2:	51 f4       	brne	.+20     	; 0x17ad8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x562>
   17ac4:	65 e1       	ldi	r22, 0x15	; 21
   17ac6:	7e e2       	ldi	r23, 0x2E	; 46
   17ac8:	86 ec       	ldi	r24, 0xC6	; 198
   17aca:	94 e1       	ldi	r25, 0x14	; 20
   17acc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ad0:	86 ec       	ldi	r24, 0xC6	; 198
   17ad2:	94 e1       	ldi	r25, 0x14	; 20
   17ad4:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17ad8:	02 30       	cpi	r16, 0x02	; 2
   17ada:	09 f0       	breq	.+2      	; 0x17ade <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x568>
   17adc:	40 cf       	rjmp	.-384    	; 0x1795e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17ade:	86 e0       	ldi	r24, 0x06	; 6
   17ae0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17ae4:	84 e6       	ldi	r24, 0x64	; 100
   17ae6:	90 e0       	ldi	r25, 0x00	; 0
   17ae8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17aec:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17af0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17af4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17af8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17afc:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17b00:	a0 62       	ori	r26, 0x20	; 32
   17b02:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17b06:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17b0a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17b0e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17b12:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17b16:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17b1a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17b1e:	82 60       	ori	r24, 0x02	; 2
   17b20:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17b24:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17b28:	00 e0       	ldi	r16, 0x00	; 0
   17b2a:	10 e0       	ldi	r17, 0x00	; 0
   17b2c:	ea 81       	ldd	r30, Y+2	; 0x02
   17b2e:	fb 81       	ldd	r31, Y+3	; 0x03
   17b30:	e0 0f       	add	r30, r16
   17b32:	f1 1f       	adc	r31, r17
   17b34:	e8 51       	subi	r30, 0x18	; 24
   17b36:	f2 4f       	sbci	r31, 0xF2	; 242
   17b38:	e5 81       	ldd	r30, Z+5	; 0x05
   17b3a:	e3 31       	cpi	r30, 0x13	; 19
   17b3c:	68 f0       	brcs	.+26     	; 0x17b58 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5e2>
   17b3e:	f0 e0       	ldi	r31, 0x00	; 0
   17b40:	e7 5c       	subi	r30, 0xC7	; 199
   17b42:	fb 4e       	sbci	r31, 0xEB	; 235
   17b44:	61 e0       	ldi	r22, 0x01	; 1
   17b46:	80 81       	ld	r24, Z
   17b48:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17b4c:	68 ec       	ldi	r22, 0xC8	; 200
   17b4e:	70 e0       	ldi	r23, 0x00	; 0
   17b50:	80 e0       	ldi	r24, 0x00	; 0
   17b52:	90 e0       	ldi	r25, 0x00	; 0
   17b54:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17b58:	0f 5f       	subi	r16, 0xFF	; 255
   17b5a:	1f 4f       	sbci	r17, 0xFF	; 255
   17b5c:	05 30       	cpi	r16, 0x05	; 5
   17b5e:	11 05       	cpc	r17, r1
   17b60:	29 f7       	brne	.-54     	; 0x17b2c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5b6>
   17b62:	a4 cf       	rjmp	.-184    	; 0x17aac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17b64:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17b68:	81 30       	cpi	r24, 0x01	; 1
   17b6a:	51 f4       	brne	.+20     	; 0x17b80 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x60a>
   17b6c:	6a ed       	ldi	r22, 0xDA	; 218
   17b6e:	7d e2       	ldi	r23, 0x2D	; 45
   17b70:	86 ec       	ldi	r24, 0xC6	; 198
   17b72:	94 e1       	ldi	r25, 0x14	; 20
   17b74:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17b78:	86 ec       	ldi	r24, 0xC6	; 198
   17b7a:	94 e1       	ldi	r25, 0x14	; 20
   17b7c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17b80:	02 30       	cpi	r16, 0x02	; 2
   17b82:	09 f0       	breq	.+2      	; 0x17b86 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x610>
   17b84:	ec ce       	rjmp	.-552    	; 0x1795e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17b86:	86 e0       	ldi	r24, 0x06	; 6
   17b88:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17b8c:	84 e6       	ldi	r24, 0x64	; 100
   17b8e:	90 e0       	ldi	r25, 0x00	; 0
   17b90:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17b94:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17b98:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17b9c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17ba0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17ba4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17ba8:	a0 62       	ori	r26, 0x20	; 32
   17baa:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17bae:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17bb2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17bb6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17bba:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17bbe:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17bc2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17bc6:	82 60       	ori	r24, 0x02	; 2
   17bc8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17bcc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17bd0:	00 e0       	ldi	r16, 0x00	; 0
   17bd2:	10 e0       	ldi	r17, 0x00	; 0
   17bd4:	ea 81       	ldd	r30, Y+2	; 0x02
   17bd6:	fb 81       	ldd	r31, Y+3	; 0x03
   17bd8:	e0 0f       	add	r30, r16
   17bda:	f1 1f       	adc	r31, r17
   17bdc:	e8 51       	subi	r30, 0x18	; 24
   17bde:	f2 4f       	sbci	r31, 0xF2	; 242
   17be0:	e5 81       	ldd	r30, Z+5	; 0x05
   17be2:	e3 31       	cpi	r30, 0x13	; 19
   17be4:	68 f0       	brcs	.+26     	; 0x17c00 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x68a>
   17be6:	f0 e0       	ldi	r31, 0x00	; 0
   17be8:	e7 5c       	subi	r30, 0xC7	; 199
   17bea:	fb 4e       	sbci	r31, 0xEB	; 235
   17bec:	61 e0       	ldi	r22, 0x01	; 1
   17bee:	80 81       	ld	r24, Z
   17bf0:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17bf4:	68 ec       	ldi	r22, 0xC8	; 200
   17bf6:	70 e0       	ldi	r23, 0x00	; 0
   17bf8:	80 e0       	ldi	r24, 0x00	; 0
   17bfa:	90 e0       	ldi	r25, 0x00	; 0
   17bfc:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17c00:	0f 5f       	subi	r16, 0xFF	; 255
   17c02:	1f 4f       	sbci	r17, 0xFF	; 255
   17c04:	05 30       	cpi	r16, 0x05	; 5
   17c06:	11 05       	cpc	r17, r1
   17c08:	29 f7       	brne	.-54     	; 0x17bd4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x65e>
   17c0a:	50 cf       	rjmp	.-352    	; 0x17aac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17c0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17c10:	81 30       	cpi	r24, 0x01	; 1
   17c12:	51 f4       	brne	.+20     	; 0x17c28 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b2>
   17c14:	6f e9       	ldi	r22, 0x9F	; 159
   17c16:	7d e2       	ldi	r23, 0x2D	; 45
   17c18:	86 ec       	ldi	r24, 0xC6	; 198
   17c1a:	94 e1       	ldi	r25, 0x14	; 20
   17c1c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c20:	86 ec       	ldi	r24, 0xC6	; 198
   17c22:	94 e1       	ldi	r25, 0x14	; 20
   17c24:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17c28:	02 30       	cpi	r16, 0x02	; 2
   17c2a:	09 f0       	breq	.+2      	; 0x17c2e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b8>
   17c2c:	98 ce       	rjmp	.-720    	; 0x1795e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17c2e:	86 e0       	ldi	r24, 0x06	; 6
   17c30:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17c34:	84 e6       	ldi	r24, 0x64	; 100
   17c36:	90 e0       	ldi	r25, 0x00	; 0
   17c38:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17c3c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17c40:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17c44:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17c48:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17c4c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17c50:	a0 62       	ori	r26, 0x20	; 32
   17c52:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17c56:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17c5a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17c5e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17c62:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17c66:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17c6a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17c6e:	82 60       	ori	r24, 0x02	; 2
   17c70:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17c74:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17c78:	00 e0       	ldi	r16, 0x00	; 0
   17c7a:	10 e0       	ldi	r17, 0x00	; 0
   17c7c:	ea 81       	ldd	r30, Y+2	; 0x02
   17c7e:	fb 81       	ldd	r31, Y+3	; 0x03
   17c80:	e0 0f       	add	r30, r16
   17c82:	f1 1f       	adc	r31, r17
   17c84:	e8 51       	subi	r30, 0x18	; 24
   17c86:	f2 4f       	sbci	r31, 0xF2	; 242
   17c88:	e5 81       	ldd	r30, Z+5	; 0x05
   17c8a:	e3 31       	cpi	r30, 0x13	; 19
   17c8c:	68 f0       	brcs	.+26     	; 0x17ca8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x732>
   17c8e:	f0 e0       	ldi	r31, 0x00	; 0
   17c90:	e7 5c       	subi	r30, 0xC7	; 199
   17c92:	fb 4e       	sbci	r31, 0xEB	; 235
   17c94:	61 e0       	ldi	r22, 0x01	; 1
   17c96:	80 81       	ld	r24, Z
   17c98:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17c9c:	68 ec       	ldi	r22, 0xC8	; 200
   17c9e:	70 e0       	ldi	r23, 0x00	; 0
   17ca0:	80 e0       	ldi	r24, 0x00	; 0
   17ca2:	90 e0       	ldi	r25, 0x00	; 0
   17ca4:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17ca8:	0f 5f       	subi	r16, 0xFF	; 255
   17caa:	1f 4f       	sbci	r17, 0xFF	; 255
   17cac:	05 30       	cpi	r16, 0x05	; 5
   17cae:	11 05       	cpc	r17, r1
   17cb0:	29 f7       	brne	.-54     	; 0x17c7c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x706>
   17cb2:	fc ce       	rjmp	.-520    	; 0x17aac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17cb4:	22 e1       	ldi	r18, 0x12	; 18
   17cb6:	28 15       	cp	r18, r8
   17cb8:	08 f0       	brcs	.+2      	; 0x17cbc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x746>
   17cba:	5a ce       	rjmp	.-844    	; 0x17970 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17cbc:	61 e0       	ldi	r22, 0x01	; 1
   17cbe:	39 81       	ldd	r19, Y+1	; 0x01
   17cc0:	31 11       	cpse	r19, r1
   17cc2:	60 e0       	ldi	r22, 0x00	; 0
   17cc4:	e8 2d       	mov	r30, r8
   17cc6:	f0 e0       	ldi	r31, 0x00	; 0
   17cc8:	e7 5c       	subi	r30, 0xC7	; 199
   17cca:	fb 4e       	sbci	r31, 0xEB	; 235
   17ccc:	80 81       	ld	r24, Z
   17cce:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   17cd2:	68 ec       	ldi	r22, 0xC8	; 200
   17cd4:	70 e0       	ldi	r23, 0x00	; 0
   17cd6:	80 e0       	ldi	r24, 0x00	; 0
   17cd8:	90 e0       	ldi	r25, 0x00	; 0
   17cda:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17cde:	48 ce       	rjmp	.-880    	; 0x17970 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17ce0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17ce4:	81 30       	cpi	r24, 0x01	; 1
   17ce6:	51 f4       	brne	.+20     	; 0x17cfc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17ce8:	60 e8       	ldi	r22, 0x80	; 128
   17cea:	7d e2       	ldi	r23, 0x2D	; 45
   17cec:	86 ec       	ldi	r24, 0xC6	; 198
   17cee:	94 e1       	ldi	r25, 0x14	; 20
   17cf0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17cf4:	86 ec       	ldi	r24, 0xC6	; 198
   17cf6:	94 e1       	ldi	r25, 0x14	; 20
   17cf8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17cfc:	81 e0       	ldi	r24, 0x01	; 1
   17cfe:	0f 90       	pop	r0
   17d00:	0f 90       	pop	r0
   17d02:	0f 90       	pop	r0
   17d04:	df 91       	pop	r29
   17d06:	cf 91       	pop	r28
   17d08:	1f 91       	pop	r17
   17d0a:	0f 91       	pop	r16
   17d0c:	ff 90       	pop	r15
   17d0e:	ef 90       	pop	r14
   17d10:	df 90       	pop	r13
   17d12:	cf 90       	pop	r12
   17d14:	bf 90       	pop	r11
   17d16:	af 90       	pop	r10
   17d18:	9f 90       	pop	r9
   17d1a:	8f 90       	pop	r8
   17d1c:	7f 90       	pop	r7
   17d1e:	6f 90       	pop	r6
   17d20:	5f 90       	pop	r5
   17d22:	4f 90       	pop	r4
   17d24:	3f 90       	pop	r3
   17d26:	2f 90       	pop	r2
   17d28:	08 95       	ret

00017d2a <_Z20Wireless_Pump_On_Offhh>:
   17d2a:	6f 92       	push	r6
   17d2c:	7f 92       	push	r7
   17d2e:	8f 92       	push	r8
   17d30:	9f 92       	push	r9
   17d32:	af 92       	push	r10
   17d34:	bf 92       	push	r11
   17d36:	cf 92       	push	r12
   17d38:	df 92       	push	r13
   17d3a:	ef 92       	push	r14
   17d3c:	ff 92       	push	r15
   17d3e:	0f 93       	push	r16
   17d40:	1f 93       	push	r17
   17d42:	cf 93       	push	r28
   17d44:	df 93       	push	r29
   17d46:	78 2e       	mov	r7, r24
   17d48:	c6 2f       	mov	r28, r22
   17d4a:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17d4e:	8f 5f       	subi	r24, 0xFF	; 255
   17d50:	80 93 d1 0d 	sts	0x0DD1, r24	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17d54:	22 e0       	ldi	r18, 0x02	; 2
   17d56:	72 16       	cp	r7, r18
   17d58:	39 f0       	breq	.+14     	; 0x17d68 <_Z20Wireless_Pump_On_Offhh+0x3e>
   17d5a:	34 e0       	ldi	r19, 0x04	; 4
   17d5c:	73 16       	cp	r7, r19
   17d5e:	21 f0       	breq	.+8      	; 0x17d68 <_Z20Wireless_Pump_On_Offhh+0x3e>
   17d60:	81 e0       	ldi	r24, 0x01	; 1
   17d62:	78 12       	cpse	r7, r24
   17d64:	0f c3       	rjmp	.+1566   	; 0x18384 <_Z20Wireless_Pump_On_Offhh+0x65a>
   17d66:	42 c2       	rjmp	.+1156   	; 0x181ec <_Z20Wireless_Pump_On_Offhh+0x4c2>
   17d68:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17d6c:	81 30       	cpi	r24, 0x01	; 1
   17d6e:	89 f4       	brne	.+34     	; 0x17d92 <_Z20Wireless_Pump_On_Offhh+0x68>
   17d70:	63 e1       	ldi	r22, 0x13	; 19
   17d72:	7d e2       	ldi	r23, 0x2D	; 45
   17d74:	86 ec       	ldi	r24, 0xC6	; 198
   17d76:	94 e1       	ldi	r25, 0x14	; 20
   17d78:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17d7c:	4a e0       	ldi	r20, 0x0A	; 10
   17d7e:	50 e0       	ldi	r21, 0x00	; 0
   17d80:	6c 2f       	mov	r22, r28
   17d82:	86 ec       	ldi	r24, 0xC6	; 198
   17d84:	94 e1       	ldi	r25, 0x14	; 20
   17d86:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   17d8a:	86 ec       	ldi	r24, 0xC6	; 198
   17d8c:	94 e1       	ldi	r25, 0x14	; 20
   17d8e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17d92:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   17d96:	81 11       	cpse	r24, r1
   17d98:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   17d9c:	84 e1       	ldi	r24, 0x14	; 20
   17d9e:	e5 ef       	ldi	r30, 0xF5	; 245
   17da0:	f3 e1       	ldi	r31, 0x13	; 19
   17da2:	df 01       	movw	r26, r30
   17da4:	1d 92       	st	X+, r1
   17da6:	8a 95       	dec	r24
   17da8:	e9 f7       	brne	.-6      	; 0x17da4 <_Z20Wireless_Pump_On_Offhh+0x7a>
   17daa:	0c 2f       	mov	r16, r28
   17dac:	10 e0       	ldi	r17, 0x00	; 0
   17dae:	bb e0       	ldi	r27, 0x0B	; 11
   17db0:	cb 9f       	mul	r28, r27
   17db2:	c0 01       	movw	r24, r0
   17db4:	11 24       	eor	r1, r1
   17db6:	fc 01       	movw	r30, r24
   17db8:	ec 50       	subi	r30, 0x0C	; 12
   17dba:	f4 4f       	sbci	r31, 0xF4	; 244
   17dbc:	21 81       	ldd	r18, Z+1	; 0x01
   17dbe:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   17dc2:	22 81       	ldd	r18, Z+2	; 0x02
   17dc4:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   17dc8:	23 81       	ldd	r18, Z+3	; 0x03
   17dca:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   17dce:	24 81       	ldd	r18, Z+4	; 0x04
   17dd0:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   17dd4:	25 81       	ldd	r18, Z+5	; 0x05
   17dd6:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   17dda:	26 81       	ldd	r18, Z+6	; 0x06
   17ddc:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   17de0:	21 e0       	ldi	r18, 0x01	; 1
   17de2:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   17de6:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0x4e>
   17dea:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   17dee:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   17df2:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   17df6:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17dfa:	21 e0       	ldi	r18, 0x01	; 1
   17dfc:	2c 0f       	add	r18, r28
   17dfe:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <_sRuble_Parameters+0x52>
   17e02:	23 e5       	ldi	r18, 0x53	; 83
   17e04:	20 93 01 14 	sts	0x1401, r18	; 0x801401 <_sRuble_Parameters+0x53>
   17e08:	4c 01       	movw	r8, r24
   17e0a:	d0 e0       	ldi	r29, 0x00	; 0
   17e0c:	9c 01       	movw	r18, r24
   17e0e:	2b 50       	subi	r18, 0x0B	; 11
   17e10:	34 4f       	sbci	r19, 0xF4	; 244
   17e12:	79 01       	movw	r14, r18
   17e14:	df 5f       	subi	r29, 0xFF	; 255
   17e16:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e1a:	81 30       	cpi	r24, 0x01	; 1
   17e1c:	51 f4       	brne	.+20     	; 0x17e32 <_Z20Wireless_Pump_On_Offhh+0x108>
   17e1e:	6c ee       	ldi	r22, 0xEC	; 236
   17e20:	7c e2       	ldi	r23, 0x2C	; 44
   17e22:	86 ec       	ldi	r24, 0xC6	; 198
   17e24:	94 e1       	ldi	r25, 0x14	; 20
   17e26:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e2a:	86 ec       	ldi	r24, 0xC6	; 198
   17e2c:	94 e1       	ldi	r25, 0x14	; 20
   17e2e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17e32:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   17e36:	10 92 f1 0c 	sts	0x0CF1, r1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17e3a:	10 92 f0 0c 	sts	0x0CF0, r1	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17e3e:	8d e0       	ldi	r24, 0x0D	; 13
   17e40:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   17e44:	61 2c       	mov	r6, r1
   17e46:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   17e4a:	88 23       	and	r24, r24
   17e4c:	09 f4       	brne	.+2      	; 0x17e50 <_Z20Wireless_Pump_On_Offhh+0x126>
   17e4e:	68 c1       	rjmp	.+720    	; 0x18120 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17e50:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e54:	81 30       	cpi	r24, 0x01	; 1
   17e56:	71 f4       	brne	.+28     	; 0x17e74 <_Z20Wireless_Pump_On_Offhh+0x14a>
   17e58:	60 ed       	ldi	r22, 0xD0	; 208
   17e5a:	7c e2       	ldi	r23, 0x2C	; 44
   17e5c:	86 ec       	ldi	r24, 0xC6	; 198
   17e5e:	94 e1       	ldi	r25, 0x14	; 20
   17e60:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17e64:	86 ec       	ldi	r24, 0xC6	; 198
   17e66:	94 e1       	ldi	r25, 0x14	; 20
   17e68:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17e6c:	86 ec       	ldi	r24, 0xC6	; 198
   17e6e:	94 e1       	ldi	r25, 0x14	; 20
   17e70:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17e74:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   17e78:	88 23       	and	r24, r24
   17e7a:	09 f4       	brne	.+2      	; 0x17e7e <_Z20Wireless_Pump_On_Offhh+0x154>
   17e7c:	51 c1       	rjmp	.+674    	; 0x18120 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17e7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e82:	81 30       	cpi	r24, 0x01	; 1
   17e84:	59 f5       	brne	.+86     	; 0x17edc <_Z20Wireless_Pump_On_Offhh+0x1b2>
   17e86:	67 eb       	ldi	r22, 0xB7	; 183
   17e88:	7c e2       	ldi	r23, 0x2C	; 44
   17e8a:	86 ec       	ldi	r24, 0xC6	; 198
   17e8c:	94 e1       	ldi	r25, 0x14	; 20
   17e8e:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17e92:	4a e0       	ldi	r20, 0x0A	; 10
   17e94:	50 e0       	ldi	r21, 0x00	; 0
   17e96:	69 e0       	ldi	r22, 0x09	; 9
   17e98:	74 e1       	ldi	r23, 0x14	; 20
   17e9a:	86 ec       	ldi	r24, 0xC6	; 198
   17e9c:	94 e1       	ldi	r25, 0x14	; 20
   17e9e:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   17ea2:	86 ec       	ldi	r24, 0xC6	; 198
   17ea4:	94 e1       	ldi	r25, 0x14	; 20
   17ea6:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17eaa:	86 ec       	ldi	r24, 0xC6	; 198
   17eac:	94 e1       	ldi	r25, 0x14	; 20
   17eae:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17eb2:	60 e9       	ldi	r22, 0x90	; 144
   17eb4:	7c e2       	ldi	r23, 0x2C	; 44
   17eb6:	86 ec       	ldi	r24, 0xC6	; 198
   17eb8:	94 e1       	ldi	r25, 0x14	; 20
   17eba:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17ebe:	47 e0       	ldi	r20, 0x07	; 7
   17ec0:	50 e0       	ldi	r21, 0x00	; 0
   17ec2:	b7 01       	movw	r22, r14
   17ec4:	86 ec       	ldi	r24, 0xC6	; 198
   17ec6:	94 e1       	ldi	r25, 0x14	; 20
   17ec8:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
   17ecc:	86 ec       	ldi	r24, 0xC6	; 198
   17ece:	94 e1       	ldi	r25, 0x14	; 20
   17ed0:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17ed4:	86 ec       	ldi	r24, 0xC6	; 198
   17ed6:	94 e1       	ldi	r25, 0x14	; 20
   17ed8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17edc:	89 e0       	ldi	r24, 0x09	; 9
   17ede:	a8 2e       	mov	r10, r24
   17ee0:	84 e1       	ldi	r24, 0x14	; 20
   17ee2:	b8 2e       	mov	r11, r24
   17ee4:	c1 2c       	mov	r12, r1
   17ee6:	d1 2c       	mov	r13, r1
   17ee8:	d5 01       	movw	r26, r10
   17eea:	8d 91       	ld	r24, X+
   17eec:	5d 01       	movw	r10, r26
   17eee:	f4 01       	movw	r30, r8
   17ef0:	ec 0d       	add	r30, r12
   17ef2:	fd 1d       	adc	r31, r13
   17ef4:	ec 50       	subi	r30, 0x0C	; 12
   17ef6:	f4 4f       	sbci	r31, 0xF4	; 244
   17ef8:	91 81       	ldd	r25, Z+1	; 0x01
   17efa:	98 17       	cp	r25, r24
   17efc:	09 f4       	brne	.+2      	; 0x17f00 <_Z20Wireless_Pump_On_Offhh+0x1d6>
   17efe:	54 c0       	rjmp	.+168    	; 0x17fa8 <_Z20Wireless_Pump_On_Offhh+0x27e>
   17f00:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17f04:	81 30       	cpi	r24, 0x01	; 1
   17f06:	51 f4       	brne	.+20     	; 0x17f1c <_Z20Wireless_Pump_On_Offhh+0x1f2>
   17f08:	64 e6       	ldi	r22, 0x64	; 100
   17f0a:	7c e2       	ldi	r23, 0x2C	; 44
   17f0c:	86 ec       	ldi	r24, 0xC6	; 198
   17f0e:	94 e1       	ldi	r25, 0x14	; 20
   17f10:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f14:	86 ec       	ldi	r24, 0xC6	; 198
   17f16:	94 e1       	ldi	r25, 0x14	; 20
   17f18:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17f1c:	68 ee       	ldi	r22, 0xE8	; 232
   17f1e:	73 e0       	ldi	r23, 0x03	; 3
   17f20:	80 e0       	ldi	r24, 0x00	; 0
   17f22:	90 e0       	ldi	r25, 0x00	; 0
   17f24:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17f28:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17f2c:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17f30:	0b 97       	sbiw	r24, 0x0b	; 11
   17f32:	a0 f0       	brcs	.+40     	; 0x17f5c <_Z20Wireless_Pump_On_Offhh+0x232>
   17f34:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17f38:	81 30       	cpi	r24, 0x01	; 1
   17f3a:	09 f0       	breq	.+2      	; 0x17f3e <_Z20Wireless_Pump_On_Offhh+0x214>
   17f3c:	91 c0       	rjmp	.+290    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   17f3e:	66 e4       	ldi	r22, 0x46	; 70
   17f40:	7c e2       	ldi	r23, 0x2C	; 44
   17f42:	86 ec       	ldi	r24, 0xC6	; 198
   17f44:	94 e1       	ldi	r25, 0x14	; 20
   17f46:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17f4a:	86 ec       	ldi	r24, 0xC6	; 198
   17f4c:	94 e1       	ldi	r25, 0x14	; 20
   17f4e:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17f52:	86 ec       	ldi	r24, 0xC6	; 198
   17f54:	94 e1       	ldi	r25, 0x14	; 20
   17f56:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17f5a:	82 c0       	rjmp	.+260    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   17f5c:	d3 30       	cpi	r29, 0x03	; 3
   17f5e:	10 f1       	brcs	.+68     	; 0x17fa4 <_Z20Wireless_Pump_On_Offhh+0x27a>
   17f60:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17f64:	83 30       	cpi	r24, 0x03	; 3
   17f66:	f0 f0       	brcs	.+60     	; 0x17fa4 <_Z20Wireless_Pump_On_Offhh+0x27a>
   17f68:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17f6c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17f70:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17f74:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17f78:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17f7c:	a0 62       	ori	r26, 0x20	; 32
   17f7e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17f82:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17f86:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17f8a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17f8e:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   17f92:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17f96:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17f9a:	90 68       	ori	r25, 0x80	; 128
   17f9c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17fa0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17fa4:	66 24       	eor	r6, r6
   17fa6:	63 94       	inc	r6
   17fa8:	bf ef       	ldi	r27, 0xFF	; 255
   17faa:	cb 1a       	sub	r12, r27
   17fac:	db 0a       	sbc	r13, r27
   17fae:	e6 e0       	ldi	r30, 0x06	; 6
   17fb0:	ce 16       	cp	r12, r30
   17fb2:	d1 04       	cpc	r13, r1
   17fb4:	09 f0       	breq	.+2      	; 0x17fb8 <_Z20Wireless_Pump_On_Offhh+0x28e>
   17fb6:	98 cf       	rjmp	.-208    	; 0x17ee8 <_Z20Wireless_Pump_On_Offhh+0x1be>
   17fb8:	61 10       	cpse	r6, r1
   17fba:	b2 c0       	rjmp	.+356    	; 0x18120 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17fbc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17fc0:	81 30       	cpi	r24, 0x01	; 1
   17fc2:	71 f4       	brne	.+28     	; 0x17fe0 <_Z20Wireless_Pump_On_Offhh+0x2b6>
   17fc4:	6a e2       	ldi	r22, 0x2A	; 42
   17fc6:	7c e2       	ldi	r23, 0x2C	; 44
   17fc8:	86 ec       	ldi	r24, 0xC6	; 198
   17fca:	94 e1       	ldi	r25, 0x14	; 20
   17fcc:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   17fd0:	86 ec       	ldi	r24, 0xC6	; 198
   17fd2:	94 e1       	ldi	r25, 0x14	; 20
   17fd4:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   17fd8:	86 ec       	ldi	r24, 0xC6	; 198
   17fda:	94 e1       	ldi	r25, 0x14	; 20
   17fdc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   17fe0:	68 ee       	ldi	r22, 0xE8	; 232
   17fe2:	73 e0       	ldi	r23, 0x03	; 3
   17fe4:	80 e0       	ldi	r24, 0x00	; 0
   17fe6:	90 e0       	ldi	r25, 0x00	; 0
   17fe8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   17fec:	f2 e0       	ldi	r31, 0x02	; 2
   17fee:	7f 12       	cpse	r7, r31
   17ff0:	3f c0       	rjmp	.+126    	; 0x18070 <_Z20Wireless_Pump_On_Offhh+0x346>
   17ff2:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   17ff6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17ffa:	92 30       	cpi	r25, 0x02	; 2
   17ffc:	31 f4       	brne	.+12     	; 0x1800a <_Z20Wireless_Pump_On_Offhh+0x2e0>
   17ffe:	81 30       	cpi	r24, 0x01	; 1
   18000:	09 f0       	breq	.+2      	; 0x18004 <_Z20Wireless_Pump_On_Offhh+0x2da>
   18002:	47 c0       	rjmp	.+142    	; 0x18092 <_Z20Wireless_Pump_On_Offhh+0x368>
   18004:	60 e2       	ldi	r22, 0x20	; 32
   18006:	7c e2       	ldi	r23, 0x2C	; 44
   18008:	40 c0       	rjmp	.+128    	; 0x1808a <_Z20Wireless_Pump_On_Offhh+0x360>
   1800a:	98 30       	cpi	r25, 0x08	; 8
   1800c:	59 f5       	brne	.+86     	; 0x18064 <_Z20Wireless_Pump_On_Offhh+0x33a>
   1800e:	81 30       	cpi	r24, 0x01	; 1
   18010:	31 f4       	brne	.+12     	; 0x1801e <_Z20Wireless_Pump_On_Offhh+0x2f4>
   18012:	62 e0       	ldi	r22, 0x02	; 2
   18014:	7c e2       	ldi	r23, 0x2C	; 44
   18016:	86 ec       	ldi	r24, 0xC6	; 198
   18018:	94 e1       	ldi	r25, 0x14	; 20
   1801a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1801e:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18022:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   18026:	84 e0       	ldi	r24, 0x04	; 4
   18028:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1802c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18030:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18034:	82 60       	ori	r24, 0x02	; 2
   18036:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1803a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1803e:	8b e0       	ldi	r24, 0x0B	; 11
   18040:	80 9f       	mul	r24, r16
   18042:	f0 01       	movw	r30, r0
   18044:	81 9f       	mul	r24, r17
   18046:	f0 0d       	add	r31, r0
   18048:	11 24       	eor	r1, r1
   1804a:	ec 50       	subi	r30, 0x0C	; 12
   1804c:	f4 4f       	sbci	r31, 0xF4	; 244
   1804e:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   18052:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   18056:	98 27       	eor	r25, r24
   18058:	89 27       	eor	r24, r25
   1805a:	98 27       	eor	r25, r24
   1805c:	91 87       	std	Z+9, r25	; 0x09
   1805e:	80 87       	std	Z+8, r24	; 0x08
   18060:	c0 e0       	ldi	r28, 0x00	; 0
   18062:	92 c1       	rjmp	.+804    	; 0x18388 <_Z20Wireless_Pump_On_Offhh+0x65e>
   18064:	81 30       	cpi	r24, 0x01	; 1
   18066:	09 f0       	breq	.+2      	; 0x1806a <_Z20Wireless_Pump_On_Offhh+0x340>
   18068:	5d c0       	rjmp	.+186    	; 0x18124 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   1806a:	66 ee       	ldi	r22, 0xE6	; 230
   1806c:	7b e2       	ldi	r23, 0x2B	; 43
   1806e:	4f c0       	rjmp	.+158    	; 0x1810e <_Z20Wireless_Pump_On_Offhh+0x3e4>
   18070:	24 e0       	ldi	r18, 0x04	; 4
   18072:	72 12       	cpse	r7, r18
   18074:	57 c0       	rjmp	.+174    	; 0x18124 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   18076:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   1807a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1807e:	94 30       	cpi	r25, 0x04	; 4
   18080:	e1 f4       	brne	.+56     	; 0x180ba <_Z20Wireless_Pump_On_Offhh+0x390>
   18082:	81 30       	cpi	r24, 0x01	; 1
   18084:	31 f4       	brne	.+12     	; 0x18092 <_Z20Wireless_Pump_On_Offhh+0x368>
   18086:	6b ed       	ldi	r22, 0xDB	; 219
   18088:	7b e2       	ldi	r23, 0x2B	; 43
   1808a:	86 ec       	ldi	r24, 0xC6	; 198
   1808c:	94 e1       	ldi	r25, 0x14	; 20
   1808e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18092:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18096:	8b e0       	ldi	r24, 0x0B	; 11
   18098:	80 9f       	mul	r24, r16
   1809a:	f0 01       	movw	r30, r0
   1809c:	81 9f       	mul	r24, r17
   1809e:	f0 0d       	add	r31, r0
   180a0:	11 24       	eor	r1, r1
   180a2:	ec 50       	subi	r30, 0x0C	; 12
   180a4:	f4 4f       	sbci	r31, 0xF4	; 244
   180a6:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   180aa:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   180ae:	98 27       	eor	r25, r24
   180b0:	89 27       	eor	r24, r25
   180b2:	98 27       	eor	r25, r24
   180b4:	91 87       	std	Z+9, r25	; 0x09
   180b6:	80 87       	std	Z+8, r24	; 0x08
   180b8:	66 c1       	rjmp	.+716    	; 0x18386 <_Z20Wireless_Pump_On_Offhh+0x65c>
   180ba:	98 30       	cpi	r25, 0x08	; 8
   180bc:	21 f5       	brne	.+72     	; 0x18106 <_Z20Wireless_Pump_On_Offhh+0x3dc>
   180be:	81 30       	cpi	r24, 0x01	; 1
   180c0:	31 f4       	brne	.+12     	; 0x180ce <_Z20Wireless_Pump_On_Offhh+0x3a4>
   180c2:	6d eb       	ldi	r22, 0xBD	; 189
   180c4:	7b e2       	ldi	r23, 0x2B	; 43
   180c6:	86 ec       	ldi	r24, 0xC6	; 198
   180c8:	94 e1       	ldi	r25, 0x14	; 20
   180ca:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   180ce:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   180d2:	8b e0       	ldi	r24, 0x0B	; 11
   180d4:	80 9f       	mul	r24, r16
   180d6:	f0 01       	movw	r30, r0
   180d8:	81 9f       	mul	r24, r17
   180da:	f0 0d       	add	r31, r0
   180dc:	11 24       	eor	r1, r1
   180de:	ec 50       	subi	r30, 0x0C	; 12
   180e0:	f4 4f       	sbci	r31, 0xF4	; 244
   180e2:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   180e6:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   180ea:	98 27       	eor	r25, r24
   180ec:	89 27       	eor	r24, r25
   180ee:	98 27       	eor	r25, r24
   180f0:	91 87       	std	Z+9, r25	; 0x09
   180f2:	80 87       	std	Z+8, r24	; 0x08
   180f4:	84 e0       	ldi	r24, 0x04	; 4
   180f6:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   180fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   180fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18102:	82 60       	ori	r24, 0x02	; 2
   18104:	6e c0       	rjmp	.+220    	; 0x181e2 <_Z20Wireless_Pump_On_Offhh+0x4b8>
   18106:	81 30       	cpi	r24, 0x01	; 1
   18108:	69 f4       	brne	.+26     	; 0x18124 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   1810a:	61 ea       	ldi	r22, 0xA1	; 161
   1810c:	7b e2       	ldi	r23, 0x2B	; 43
   1810e:	86 ec       	ldi	r24, 0xC6	; 198
   18110:	94 e1       	ldi	r25, 0x14	; 20
   18112:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18116:	86 ec       	ldi	r24, 0xC6	; 198
   18118:	94 e1       	ldi	r25, 0x14	; 20
   1811a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1811e:	02 c0       	rjmp	.+4      	; 0x18124 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   18120:	80 e0       	ldi	r24, 0x00	; 0
   18122:	02 c0       	rjmp	.+4      	; 0x18128 <_Z20Wireless_Pump_On_Offhh+0x3fe>
   18124:	81 e0       	ldi	r24, 0x01	; 1
   18126:	d3 e0       	ldi	r29, 0x03	; 3
   18128:	20 91 f0 0c 	lds	r18, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   1812c:	30 91 f1 0c 	lds	r19, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   18130:	28 30       	cpi	r18, 0x08	; 8
   18132:	31 05       	cpc	r19, r1
   18134:	20 f4       	brcc	.+8      	; 0x1813e <_Z20Wireless_Pump_On_Offhh+0x414>
   18136:	88 23       	and	r24, r24
   18138:	09 f4       	brne	.+2      	; 0x1813c <_Z20Wireless_Pump_On_Offhh+0x412>
   1813a:	85 ce       	rjmp	.-758    	; 0x17e46 <_Z20Wireless_Pump_On_Offhh+0x11c>
   1813c:	02 c0       	rjmp	.+4      	; 0x18142 <_Z20Wireless_Pump_On_Offhh+0x418>
   1813e:	81 30       	cpi	r24, 0x01	; 1
   18140:	b1 f4       	brne	.+44     	; 0x1816e <_Z20Wireless_Pump_On_Offhh+0x444>
   18142:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18146:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1814a:	c1 30       	cpi	r28, 0x01	; 1
   1814c:	09 f0       	breq	.+2      	; 0x18150 <_Z20Wireless_Pump_On_Offhh+0x426>
   1814e:	1b c1       	rjmp	.+566    	; 0x18386 <_Z20Wireless_Pump_On_Offhh+0x65c>
   18150:	65 e8       	ldi	r22, 0x85	; 133
   18152:	7b e2       	ldi	r23, 0x2B	; 43
   18154:	86 ec       	ldi	r24, 0xC6	; 198
   18156:	94 e1       	ldi	r25, 0x14	; 20
   18158:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1815c:	86 ec       	ldi	r24, 0xC6	; 198
   1815e:	94 e1       	ldi	r25, 0x14	; 20
   18160:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   18164:	86 ec       	ldi	r24, 0xC6	; 198
   18166:	94 e1       	ldi	r25, 0x14	; 20
   18168:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1816c:	0d c1       	rjmp	.+538    	; 0x18388 <_Z20Wireless_Pump_On_Offhh+0x65e>
   1816e:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18172:	83 30       	cpi	r24, 0x03	; 3
   18174:	a8 f0       	brcs	.+42     	; 0x181a0 <_Z20Wireless_Pump_On_Offhh+0x476>
   18176:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1817a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1817e:	81 30       	cpi	r24, 0x01	; 1
   18180:	c1 f4       	brne	.+48     	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x488>
   18182:	69 e6       	ldi	r22, 0x69	; 105
   18184:	7b e2       	ldi	r23, 0x2B	; 43
   18186:	86 ec       	ldi	r24, 0xC6	; 198
   18188:	94 e1       	ldi	r25, 0x14	; 20
   1818a:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1818e:	86 ec       	ldi	r24, 0xC6	; 198
   18190:	94 e1       	ldi	r25, 0x14	; 20
   18192:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   18196:	86 ec       	ldi	r24, 0xC6	; 198
   18198:	94 e1       	ldi	r25, 0x14	; 20
   1819a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1819e:	09 c0       	rjmp	.+18     	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x488>
   181a0:	68 ee       	ldi	r22, 0xE8	; 232
   181a2:	73 e0       	ldi	r23, 0x03	; 3
   181a4:	80 e0       	ldi	r24, 0x00	; 0
   181a6:	90 e0       	ldi	r25, 0x00	; 0
   181a8:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   181ac:	d3 30       	cpi	r29, 0x03	; 3
   181ae:	08 f4       	brcc	.+2      	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x488>
   181b0:	31 ce       	rjmp	.-926    	; 0x17e14 <_Z20Wireless_Pump_On_Offhh+0xea>
   181b2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   181b6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   181ba:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   181be:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   181c2:	a0 62       	ori	r26, 0x20	; 32
   181c4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   181c8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   181cc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   181d0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   181d4:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   181d8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   181dc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   181e0:	90 68       	ori	r25, 0x80	; 128
   181e2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   181e6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   181ea:	3a cf       	rjmp	.-396    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   181ec:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   181f0:	81 30       	cpi	r24, 0x01	; 1
   181f2:	89 f4       	brne	.+34     	; 0x18216 <_Z20Wireless_Pump_On_Offhh+0x4ec>
   181f4:	66 e5       	ldi	r22, 0x56	; 86
   181f6:	7b e2       	ldi	r23, 0x2B	; 43
   181f8:	86 ec       	ldi	r24, 0xC6	; 198
   181fa:	94 e1       	ldi	r25, 0x14	; 20
   181fc:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   18200:	4a e0       	ldi	r20, 0x0A	; 10
   18202:	50 e0       	ldi	r21, 0x00	; 0
   18204:	6c 2f       	mov	r22, r28
   18206:	86 ec       	ldi	r24, 0xC6	; 198
   18208:	94 e1       	ldi	r25, 0x14	; 20
   1820a:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   1820e:	86 ec       	ldi	r24, 0xC6	; 198
   18210:	94 e1       	ldi	r25, 0x14	; 20
   18212:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18216:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   1821a:	81 11       	cpse	r24, r1
   1821c:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   18220:	84 e1       	ldi	r24, 0x14	; 20
   18222:	e5 ef       	ldi	r30, 0xF5	; 245
   18224:	f3 e1       	ldi	r31, 0x13	; 19
   18226:	df 01       	movw	r26, r30
   18228:	1d 92       	st	X+, r1
   1822a:	8a 95       	dec	r24
   1822c:	e9 f7       	brne	.-6      	; 0x18228 <_Z20Wireless_Pump_On_Offhh+0x4fe>
   1822e:	bb e0       	ldi	r27, 0x0B	; 11
   18230:	cb 9f       	mul	r28, r27
   18232:	80 01       	movw	r16, r0
   18234:	11 24       	eor	r1, r1
   18236:	f8 01       	movw	r30, r16
   18238:	ec 50       	subi	r30, 0x0C	; 12
   1823a:	f4 4f       	sbci	r31, 0xF4	; 244
   1823c:	81 81       	ldd	r24, Z+1	; 0x01
   1823e:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   18242:	82 81       	ldd	r24, Z+2	; 0x02
   18244:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   18248:	83 81       	ldd	r24, Z+3	; 0x03
   1824a:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   1824e:	84 81       	ldd	r24, Z+4	; 0x04
   18250:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   18254:	85 81       	ldd	r24, Z+5	; 0x05
   18256:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   1825a:	86 81       	ldd	r24, Z+6	; 0x06
   1825c:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   18260:	81 e0       	ldi	r24, 0x01	; 1
   18262:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
   18266:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
   1826a:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1826e:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   18272:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   18276:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   1827a:	81 e0       	ldi	r24, 0x01	; 1
   1827c:	8c 0f       	add	r24, r28
   1827e:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0x52>
   18282:	83 e5       	ldi	r24, 0x53	; 83
   18284:	80 93 01 14 	sts	0x1401, r24	; 0x801401 <_sRuble_Parameters+0x53>
   18288:	80 91 ad 14 	lds	r24, 0x14AD	; 0x8014ad <_sRuble_Parameters+0xff>
   1828c:	80 93 02 14 	sts	0x1402, r24	; 0x801402 <_sRuble_Parameters+0x54>
   18290:	78 01       	movw	r14, r16
   18292:	d0 e0       	ldi	r29, 0x00	; 0
   18294:	0b 50       	subi	r16, 0x0B	; 11
   18296:	14 4f       	sbci	r17, 0xF4	; 244
   18298:	df 5f       	subi	r29, 0xFF	; 255
   1829a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1829e:	81 30       	cpi	r24, 0x01	; 1
   182a0:	51 f4       	brne	.+20     	; 0x182b6 <_Z20Wireless_Pump_On_Offhh+0x58c>
   182a2:	6f e2       	ldi	r22, 0x2F	; 47
   182a4:	7b e2       	ldi	r23, 0x2B	; 43
   182a6:	86 ec       	ldi	r24, 0xC6	; 198
   182a8:	94 e1       	ldi	r25, 0x14	; 20
   182aa:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   182ae:	86 ec       	ldi	r24, 0xC6	; 198
   182b0:	94 e1       	ldi	r25, 0x14	; 20
   182b2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   182b6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   182ba:	8e e0       	ldi	r24, 0x0E	; 14
   182bc:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   182c0:	80 ee       	ldi	r24, 0xE0	; 224
   182c2:	9e e2       	ldi	r25, 0x2E	; 46
   182c4:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   182c8:	88 23       	and	r24, r24
   182ca:	09 f4       	brne	.+2      	; 0x182ce <_Z20Wireless_Pump_On_Offhh+0x5a4>
   182cc:	4f c0       	rjmp	.+158    	; 0x1836c <_Z20Wireless_Pump_On_Offhh+0x642>
   182ce:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   182d2:	88 23       	and	r24, r24
   182d4:	09 f4       	brne	.+2      	; 0x182d8 <_Z20Wireless_Pump_On_Offhh+0x5ae>
   182d6:	4a c0       	rjmp	.+148    	; 0x1836c <_Z20Wireless_Pump_On_Offhh+0x642>
   182d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   182dc:	81 30       	cpi	r24, 0x01	; 1
   182de:	59 f5       	brne	.+86     	; 0x18336 <_Z20Wireless_Pump_On_Offhh+0x60c>
   182e0:	66 e1       	ldi	r22, 0x16	; 22
   182e2:	7b e2       	ldi	r23, 0x2B	; 43
   182e4:	86 ec       	ldi	r24, 0xC6	; 198
   182e6:	94 e1       	ldi	r25, 0x14	; 20
   182e8:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   182ec:	4a e0       	ldi	r20, 0x0A	; 10
   182ee:	50 e0       	ldi	r21, 0x00	; 0
   182f0:	69 e0       	ldi	r22, 0x09	; 9
   182f2:	74 e1       	ldi	r23, 0x14	; 20
   182f4:	86 ec       	ldi	r24, 0xC6	; 198
   182f6:	94 e1       	ldi	r25, 0x14	; 20
   182f8:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   182fc:	86 ec       	ldi	r24, 0xC6	; 198
   182fe:	94 e1       	ldi	r25, 0x14	; 20
   18300:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   18304:	86 ec       	ldi	r24, 0xC6	; 198
   18306:	94 e1       	ldi	r25, 0x14	; 20
   18308:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1830c:	68 ef       	ldi	r22, 0xF8	; 248
   1830e:	7a e2       	ldi	r23, 0x2A	; 42
   18310:	86 ec       	ldi	r24, 0xC6	; 198
   18312:	94 e1       	ldi	r25, 0x14	; 20
   18314:	0e 94 56 d5 	call	0x1aaac	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   18318:	47 e0       	ldi	r20, 0x07	; 7
   1831a:	50 e0       	ldi	r21, 0x00	; 0
   1831c:	b8 01       	movw	r22, r16
   1831e:	86 ec       	ldi	r24, 0xC6	; 198
   18320:	94 e1       	ldi	r25, 0x14	; 20
   18322:	0e 94 2c d5 	call	0x1aa58	; 0x1aa58 <_ZN5Print5writeEPKhj>
   18326:	86 ec       	ldi	r24, 0xC6	; 198
   18328:	94 e1       	ldi	r25, 0x14	; 20
   1832a:	0e 94 83 d5 	call	0x1ab06	; 0x1ab06 <_ZN5Print7printlnEv>
   1832e:	86 ec       	ldi	r24, 0xC6	; 198
   18330:	94 e1       	ldi	r25, 0x14	; 20
   18332:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18336:	a9 e0       	ldi	r26, 0x09	; 9
   18338:	b4 e1       	ldi	r27, 0x14	; 20
   1833a:	80 e0       	ldi	r24, 0x00	; 0
   1833c:	90 e0       	ldi	r25, 0x00	; 0
   1833e:	2d 91       	ld	r18, X+
   18340:	f7 01       	movw	r30, r14
   18342:	e8 0f       	add	r30, r24
   18344:	f9 1f       	adc	r31, r25
   18346:	ec 50       	subi	r30, 0x0C	; 12
   18348:	f4 4f       	sbci	r31, 0xF4	; 244
   1834a:	31 81       	ldd	r19, Z+1	; 0x01
   1834c:	32 17       	cp	r19, r18
   1834e:	19 f0       	breq	.+6      	; 0x18356 <_Z20Wireless_Pump_On_Offhh+0x62c>
   18350:	d1 30       	cpi	r29, 0x01	; 1
   18352:	09 f0       	breq	.+2      	; 0x18356 <_Z20Wireless_Pump_On_Offhh+0x62c>
   18354:	85 ce       	rjmp	.-758    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   18356:	01 96       	adiw	r24, 0x01	; 1
   18358:	86 30       	cpi	r24, 0x06	; 6
   1835a:	91 05       	cpc	r25, r1
   1835c:	81 f7       	brne	.-32     	; 0x1833e <_Z20Wireless_Pump_On_Offhh+0x614>
   1835e:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   18362:	81 30       	cpi	r24, 0x01	; 1
   18364:	19 f4       	brne	.+6      	; 0x1836c <_Z20Wireless_Pump_On_Offhh+0x642>
   18366:	d3 30       	cpi	r29, 0x03	; 3
   18368:	31 f0       	breq	.+12     	; 0x18376 <_Z20Wireless_Pump_On_Offhh+0x64c>
   1836a:	96 cf       	rjmp	.-212    	; 0x18298 <_Z20Wireless_Pump_On_Offhh+0x56e>
   1836c:	d1 30       	cpi	r29, 0x01	; 1
   1836e:	09 f0       	breq	.+2      	; 0x18372 <_Z20Wireless_Pump_On_Offhh+0x648>
   18370:	77 ce       	rjmp	.-786    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   18372:	d1 e0       	ldi	r29, 0x01	; 1
   18374:	91 cf       	rjmp	.-222    	; 0x18298 <_Z20Wireless_Pump_On_Offhh+0x56e>
   18376:	c1 e0       	ldi	r28, 0x01	; 1
   18378:	80 91 16 14 	lds	r24, 0x1416	; 0x801416 <_sRuble_Parameters+0x68>
   1837c:	81 30       	cpi	r24, 0x01	; 1
   1837e:	09 f0       	breq	.+2      	; 0x18382 <_Z20Wireless_Pump_On_Offhh+0x658>
   18380:	6f ce       	rjmp	.-802    	; 0x18060 <_Z20Wireless_Pump_On_Offhh+0x336>
   18382:	02 c0       	rjmp	.+4      	; 0x18388 <_Z20Wireless_Pump_On_Offhh+0x65e>
   18384:	02 c0       	rjmp	.+4      	; 0x1838a <_Z20Wireless_Pump_On_Offhh+0x660>
   18386:	c1 e0       	ldi	r28, 0x01	; 1
   18388:	8c 2f       	mov	r24, r28
   1838a:	df 91       	pop	r29
   1838c:	cf 91       	pop	r28
   1838e:	1f 91       	pop	r17
   18390:	0f 91       	pop	r16
   18392:	ff 90       	pop	r15
   18394:	ef 90       	pop	r14
   18396:	df 90       	pop	r13
   18398:	cf 90       	pop	r12
   1839a:	bf 90       	pop	r11
   1839c:	af 90       	pop	r10
   1839e:	9f 90       	pop	r9
   183a0:	8f 90       	pop	r8
   183a2:	7f 90       	pop	r7
   183a4:	6f 90       	pop	r6
   183a6:	08 95       	ret

000183a8 <_Z15Stop_Irrigationv>:
   183a8:	cf 93       	push	r28
   183aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   183ae:	81 30       	cpi	r24, 0x01	; 1
   183b0:	51 f4       	brne	.+20     	; 0x183c6 <_Z15Stop_Irrigationv+0x1e>
   183b2:	65 ec       	ldi	r22, 0xC5	; 197
   183b4:	70 e4       	ldi	r23, 0x40	; 64
   183b6:	86 ec       	ldi	r24, 0xC6	; 198
   183b8:	94 e1       	ldi	r25, 0x14	; 20
   183ba:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   183be:	86 ec       	ldi	r24, 0xC6	; 198
   183c0:	94 e1       	ldi	r25, 0x14	; 20
   183c2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   183c6:	c0 91 9a 14 	lds	r28, 0x149A	; 0x80149a <_sRuble_Parameters+0xec>
   183ca:	8f ef       	ldi	r24, 0xFF	; 255
   183cc:	8c 0f       	add	r24, r28
   183ce:	83 30       	cpi	r24, 0x03	; 3
   183d0:	18 f4       	brcc	.+6      	; 0x183d8 <_Z15Stop_Irrigationv+0x30>
   183d2:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   183d6:	02 c0       	rjmp	.+4      	; 0x183dc <_Z15Stop_Irrigationv+0x34>
   183d8:	c0 91 98 14 	lds	r28, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   183dc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   183e0:	81 30       	cpi	r24, 0x01	; 1
   183e2:	59 f4       	brne	.+22     	; 0x183fa <_Z15Stop_Irrigationv+0x52>
   183e4:	c2 30       	cpi	r28, 0x02	; 2
   183e6:	48 f0       	brcs	.+18     	; 0x183fa <_Z15Stop_Irrigationv+0x52>
   183e8:	82 e0       	ldi	r24, 0x02	; 2
   183ea:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   183ee:	6b e7       	ldi	r22, 0x7B	; 123
   183f0:	74 e1       	ldi	r23, 0x14	; 20
   183f2:	88 ea       	ldi	r24, 0xA8	; 168
   183f4:	9c e0       	ldi	r25, 0x0C	; 12
   183f6:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   183fa:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   183fe:	81 30       	cpi	r24, 0x01	; 1
   18400:	29 f4       	brne	.+10     	; 0x1840c <_Z15Stop_Irrigationv+0x64>
   18402:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18406:	81 30       	cpi	r24, 0x01	; 1
   18408:	09 f0       	breq	.+2      	; 0x1840c <_Z15Stop_Irrigationv+0x64>
   1840a:	6b c0       	rjmp	.+214    	; 0x184e2 <_Z15Stop_Irrigationv+0x13a>
   1840c:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18410:	81 11       	cpse	r24, r1
   18412:	16 c0       	rjmp	.+44     	; 0x18440 <_Z15Stop_Irrigationv+0x98>
   18414:	c1 30       	cpi	r28, 0x01	; 1
   18416:	a1 f4       	brne	.+40     	; 0x18440 <_Z15Stop_Irrigationv+0x98>
   18418:	8a e0       	ldi	r24, 0x0A	; 10
   1841a:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   1841e:	01 97       	sbiw	r24, 0x01	; 1
   18420:	21 f0       	breq	.+8      	; 0x1842a <_Z15Stop_Irrigationv+0x82>
   18422:	61 e0       	ldi	r22, 0x01	; 1
   18424:	8a e0       	ldi	r24, 0x0A	; 10
   18426:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1842a:	8b e0       	ldi	r24, 0x0B	; 11
   1842c:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   18430:	01 97       	sbiw	r24, 0x01	; 1
   18432:	09 f4       	brne	.+2      	; 0x18436 <_Z15Stop_Irrigationv+0x8e>
   18434:	56 c0       	rjmp	.+172    	; 0x184e2 <_Z15Stop_Irrigationv+0x13a>
   18436:	61 e0       	ldi	r22, 0x01	; 1
   18438:	8b e0       	ldi	r24, 0x0B	; 11
   1843a:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1843e:	51 c0       	rjmp	.+162    	; 0x184e2 <_Z15Stop_Irrigationv+0x13a>
   18440:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18444:	81 30       	cpi	r24, 0x01	; 1
   18446:	31 f4       	brne	.+12     	; 0x18454 <_Z15Stop_Irrigationv+0xac>
   18448:	6b e9       	ldi	r22, 0x9B	; 155
   1844a:	70 e4       	ldi	r23, 0x40	; 64
   1844c:	86 ec       	ldi	r24, 0xC6	; 198
   1844e:	94 e1       	ldi	r25, 0x14	; 20
   18450:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18454:	6e ef       	ldi	r22, 0xFE	; 254
   18456:	6c 0f       	add	r22, r28
   18458:	84 e0       	ldi	r24, 0x04	; 4
   1845a:	67 dc       	rcall	.-1842   	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   1845c:	2c 2f       	mov	r18, r28
   1845e:	30 e0       	ldi	r19, 0x00	; 0
   18460:	e0 91 1e 14 	lds	r30, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18464:	d9 01       	movw	r26, r18
   18466:	ae 56       	subi	r26, 0x6E	; 110
   18468:	bb 4e       	sbci	r27, 0xEB	; 235
   1846a:	1c 92       	st	X, r1
   1846c:	f0 e0       	ldi	r31, 0x00	; 0
   1846e:	e2 58       	subi	r30, 0x82	; 130
   18470:	fb 4e       	sbci	r31, 0xEB	; 235
   18472:	88 23       	and	r24, r24
   18474:	61 f0       	breq	.+24     	; 0x1848e <_Z15Stop_Irrigationv+0xe6>
   18476:	10 82       	st	Z, r1
   18478:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   1847c:	6c e7       	ldi	r22, 0x7C	; 124
   1847e:	74 e1       	ldi	r23, 0x14	; 20
   18480:	8d ea       	ldi	r24, 0xAD	; 173
   18482:	9c e0       	ldi	r25, 0x0C	; 12
   18484:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18488:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   1848c:	2a c0       	rjmp	.+84     	; 0x184e2 <_Z15Stop_Irrigationv+0x13a>
   1848e:	81 e0       	ldi	r24, 0x01	; 1
   18490:	80 83       	st	Z, r24
   18492:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   18496:	6c e7       	ldi	r22, 0x7C	; 124
   18498:	74 e1       	ldi	r23, 0x14	; 20
   1849a:	8d ea       	ldi	r24, 0xAD	; 173
   1849c:	9c e0       	ldi	r25, 0x0C	; 12
   1849e:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   184a2:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   184a6:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   184aa:	8d 7f       	andi	r24, 0xFD	; 253
   184ac:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   184b0:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   184b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   184b8:	81 30       	cpi	r24, 0x01	; 1
   184ba:	51 f4       	brne	.+20     	; 0x184d0 <_Z15Stop_Irrigationv+0x128>
   184bc:	6a e8       	ldi	r22, 0x8A	; 138
   184be:	70 e4       	ldi	r23, 0x40	; 64
   184c0:	86 ec       	ldi	r24, 0xC6	; 198
   184c2:	94 e1       	ldi	r25, 0x14	; 20
   184c4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   184c8:	86 ec       	ldi	r24, 0xC6	; 198
   184ca:	94 e1       	ldi	r25, 0x14	; 20
   184cc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   184d0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   184d4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   184d8:	84 60       	ori	r24, 0x04	; 4
   184da:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   184de:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   184e2:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   184e6:	88 23       	and	r24, r24
   184e8:	09 f4       	brne	.+2      	; 0x184ec <_Z15Stop_Irrigationv+0x144>
   184ea:	41 c0       	rjmp	.+130    	; 0x1856e <_Z15Stop_Irrigationv+0x1c6>
   184ec:	80 93 77 14 	sts	0x1477, r24	; 0x801477 <_sRuble_Parameters+0xc9>
   184f0:	83 e0       	ldi	r24, 0x03	; 3
   184f2:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   184f6:	80 e0       	ldi	r24, 0x00	; 0
   184f8:	0e 94 67 af 	call	0x15ece	; 0x15ece <_Z22Valve_Grouping_Handlerh>
   184fc:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18500:	88 23       	and	r24, r24
   18502:	e9 f0       	breq	.+58     	; 0x1853e <_Z15Stop_Irrigationv+0x196>
   18504:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18508:	8d 7f       	andi	r24, 0xFD	; 253
   1850a:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1850e:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   18512:	21 30       	cpi	r18, 0x01	; 1
   18514:	51 f4       	brne	.+20     	; 0x1852a <_Z15Stop_Irrigationv+0x182>
   18516:	69 e7       	ldi	r22, 0x79	; 121
   18518:	70 e4       	ldi	r23, 0x40	; 64
   1851a:	86 ec       	ldi	r24, 0xC6	; 198
   1851c:	94 e1       	ldi	r25, 0x14	; 20
   1851e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18522:	86 ec       	ldi	r24, 0xC6	; 198
   18524:	94 e1       	ldi	r25, 0x14	; 20
   18526:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1852a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1852e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18532:	84 60       	ori	r24, 0x04	; 4
   18534:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18538:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1853c:	18 c0       	rjmp	.+48     	; 0x1856e <_Z15Stop_Irrigationv+0x1c6>
   1853e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18542:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18546:	84 60       	ori	r24, 0x04	; 4
   18548:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1854c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18550:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   18554:	21 30       	cpi	r18, 0x01	; 1
   18556:	69 f4       	brne	.+26     	; 0x18572 <_Z15Stop_Irrigationv+0x1ca>
   18558:	61 e6       	ldi	r22, 0x61	; 97
   1855a:	70 e4       	ldi	r23, 0x40	; 64
   1855c:	86 ec       	ldi	r24, 0xC6	; 198
   1855e:	94 e1       	ldi	r25, 0x14	; 20
   18560:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18564:	86 ec       	ldi	r24, 0xC6	; 198
   18566:	94 e1       	ldi	r25, 0x14	; 20
   18568:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1856c:	02 c0       	rjmp	.+4      	; 0x18572 <_Z15Stop_Irrigationv+0x1ca>
   1856e:	81 e0       	ldi	r24, 0x01	; 1
   18570:	01 c0       	rjmp	.+2      	; 0x18574 <_Z15Stop_Irrigationv+0x1cc>
   18572:	80 e0       	ldi	r24, 0x00	; 0
   18574:	cf 91       	pop	r28
   18576:	08 95       	ret

00018578 <_Z21Select_Operation_Modev>:
   18578:	90 91 d7 13 	lds	r25, 0x13D7	; 0x8013d7 <_sRuble_Parameters+0x29>
   1857c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18580:	93 30       	cpi	r25, 0x03	; 3
   18582:	09 f4       	brne	.+2      	; 0x18586 <_Z21Select_Operation_Modev+0xe>
   18584:	c5 c0       	rjmp	.+394    	; 0x18710 <_Z21Select_Operation_Modev+0x198>
   18586:	94 30       	cpi	r25, 0x04	; 4
   18588:	09 f4       	brne	.+2      	; 0x1858c <_Z21Select_Operation_Modev+0x14>
   1858a:	7e c0       	rjmp	.+252    	; 0x18688 <_Z21Select_Operation_Modev+0x110>
   1858c:	91 30       	cpi	r25, 0x01	; 1
   1858e:	09 f0       	breq	.+2      	; 0x18592 <_Z21Select_Operation_Modev+0x1a>
   18590:	0d c1       	rjmp	.+538    	; 0x187ac <_Z21Select_Operation_Modev+0x234>
   18592:	2d ef       	ldi	r18, 0xFD	; 253
   18594:	28 0f       	add	r18, r24
   18596:	22 30       	cpi	r18, 0x02	; 2
   18598:	08 f0       	brcs	.+2      	; 0x1859c <_Z21Select_Operation_Modev+0x24>
   1859a:	08 c1       	rjmp	.+528    	; 0x187ac <_Z21Select_Operation_Modev+0x234>
   1859c:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   185a0:	83 30       	cpi	r24, 0x03	; 3
   185a2:	21 f4       	brne	.+8      	; 0x185ac <_Z21Select_Operation_Modev+0x34>
   185a4:	82 e0       	ldi	r24, 0x02	; 2
   185a6:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   185aa:	02 c0       	rjmp	.+4      	; 0x185b0 <_Z21Select_Operation_Modev+0x38>
   185ac:	90 93 d6 13 	sts	0x13D6, r25	; 0x8013d6 <_sRuble_Parameters+0x28>
   185b0:	90 91 d8 13 	lds	r25, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   185b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   185b8:	92 30       	cpi	r25, 0x02	; 2
   185ba:	79 f1       	breq	.+94     	; 0x1861a <_Z21Select_Operation_Modev+0xa2>
   185bc:	81 30       	cpi	r24, 0x01	; 1
   185be:	51 f4       	brne	.+20     	; 0x185d4 <_Z21Select_Operation_Modev+0x5c>
   185c0:	6b e2       	ldi	r22, 0x2B	; 43
   185c2:	76 e4       	ldi	r23, 0x46	; 70
   185c4:	86 ec       	ldi	r24, 0xC6	; 198
   185c6:	94 e1       	ldi	r25, 0x14	; 20
   185c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   185cc:	86 ec       	ldi	r24, 0xC6	; 198
   185ce:	94 e1       	ldi	r25, 0x14	; 20
   185d0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   185d4:	85 e0       	ldi	r24, 0x05	; 5
   185d6:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   185da:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   185de:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   185e2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   185e6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   185ea:	80 61       	ori	r24, 0x10	; 16
   185ec:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   185f0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   185f4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   185f8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   185fc:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18600:	8e 7f       	andi	r24, 0xFE	; 254
   18602:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18606:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1860a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1860e:	84 60       	ori	r24, 0x04	; 4
   18610:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18614:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18618:	25 c0       	rjmp	.+74     	; 0x18664 <_Z21Select_Operation_Modev+0xec>
   1861a:	81 30       	cpi	r24, 0x01	; 1
   1861c:	51 f4       	brne	.+20     	; 0x18632 <_Z21Select_Operation_Modev+0xba>
   1861e:	6f e0       	ldi	r22, 0x0F	; 15
   18620:	76 e4       	ldi	r23, 0x46	; 70
   18622:	86 ec       	ldi	r24, 0xC6	; 198
   18624:	94 e1       	ldi	r25, 0x14	; 20
   18626:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1862a:	86 ec       	ldi	r24, 0xC6	; 198
   1862c:	94 e1       	ldi	r25, 0x14	; 20
   1862e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18632:	85 e0       	ldi	r24, 0x05	; 5
   18634:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18638:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1863c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18640:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18644:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18648:	80 61       	ori	r24, 0x10	; 16
   1864a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1864e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18652:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18656:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1865a:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1865e:	81 60       	ori	r24, 0x01	; 1
   18660:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18664:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18668:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   1866c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18670:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18674:	84 60       	ori	r24, 0x04	; 4
   18676:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1867a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1867e:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18682:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18686:	3d c0       	rjmp	.+122    	; 0x18702 <_Z21Select_Operation_Modev+0x18a>
   18688:	81 50       	subi	r24, 0x01	; 1
   1868a:	83 30       	cpi	r24, 0x03	; 3
   1868c:	08 f0       	brcs	.+2      	; 0x18690 <_Z21Select_Operation_Modev+0x118>
   1868e:	8e c0       	rjmp	.+284    	; 0x187ac <_Z21Select_Operation_Modev+0x234>
   18690:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18694:	81 30       	cpi	r24, 0x01	; 1
   18696:	51 f4       	brne	.+20     	; 0x186ac <_Z21Select_Operation_Modev+0x134>
   18698:	65 ef       	ldi	r22, 0xF5	; 245
   1869a:	75 e4       	ldi	r23, 0x45	; 69
   1869c:	86 ec       	ldi	r24, 0xC6	; 198
   1869e:	94 e1       	ldi	r25, 0x14	; 20
   186a0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   186a4:	86 ec       	ldi	r24, 0xC6	; 198
   186a6:	94 e1       	ldi	r25, 0x14	; 20
   186a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   186ac:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   186b0:	81 e0       	ldi	r24, 0x01	; 1
   186b2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   186b6:	84 e0       	ldi	r24, 0x04	; 4
   186b8:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   186bc:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   186c0:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   186c4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   186c8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   186cc:	84 60       	ori	r24, 0x04	; 4
   186ce:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   186d2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   186d6:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186da:	81 60       	ori	r24, 0x01	; 1
   186dc:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186e0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   186e4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   186e8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   186ec:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   186f0:	84 60       	ori	r24, 0x04	; 4
   186f2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   186f6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   186fa:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   186fe:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18702:	65 ed       	ldi	r22, 0xD5	; 213
   18704:	73 e1       	ldi	r23, 0x13	; 19
   18706:	88 ed       	ldi	r24, 0xD8	; 216
   18708:	94 e0       	ldi	r25, 0x04	; 4
   1870a:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1870e:	4e c0       	rjmp	.+156    	; 0x187ac <_Z21Select_Operation_Modev+0x234>
   18710:	81 30       	cpi	r24, 0x01	; 1
   18712:	19 f0       	breq	.+6      	; 0x1871a <_Z21Select_Operation_Modev+0x1a2>
   18714:	85 30       	cpi	r24, 0x05	; 5
   18716:	69 f0       	breq	.+26     	; 0x18732 <_Z21Select_Operation_Modev+0x1ba>
   18718:	47 c0       	rjmp	.+142    	; 0x187a8 <_Z21Select_Operation_Modev+0x230>
   1871a:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   1871e:	82 e0       	ldi	r24, 0x02	; 2
   18720:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18724:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18728:	81 30       	cpi	r24, 0x01	; 1
   1872a:	b1 f4       	brne	.+44     	; 0x18758 <_Z21Select_Operation_Modev+0x1e0>
   1872c:	61 ee       	ldi	r22, 0xE1	; 225
   1872e:	75 e4       	ldi	r23, 0x45	; 69
   18730:	0b c0       	rjmp	.+22     	; 0x18748 <_Z21Select_Operation_Modev+0x1d0>
   18732:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   18736:	82 e0       	ldi	r24, 0x02	; 2
   18738:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1873c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18740:	81 30       	cpi	r24, 0x01	; 1
   18742:	51 f4       	brne	.+20     	; 0x18758 <_Z21Select_Operation_Modev+0x1e0>
   18744:	6d ec       	ldi	r22, 0xCD	; 205
   18746:	75 e4       	ldi	r23, 0x45	; 69
   18748:	86 ec       	ldi	r24, 0xC6	; 198
   1874a:	94 e1       	ldi	r25, 0x14	; 20
   1874c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18750:	86 ec       	ldi	r24, 0xC6	; 198
   18752:	94 e1       	ldi	r25, 0x14	; 20
   18754:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18758:	83 e0       	ldi	r24, 0x03	; 3
   1875a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1875e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18762:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18766:	8c 60       	ori	r24, 0x0C	; 12
   18768:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1876c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18770:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18774:	8e 7f       	andi	r24, 0xFE	; 254
   18776:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1877a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1877e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18782:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18786:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1878a:	80 62       	ori	r24, 0x20	; 32
   1878c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18790:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18794:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18798:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1879c:	65 ed       	ldi	r22, 0xD5	; 213
   1879e:	73 e1       	ldi	r23, 0x13	; 19
   187a0:	88 ed       	ldi	r24, 0xD8	; 216
   187a2:	94 e0       	ldi	r25, 0x04	; 4
   187a4:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   187a8:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   187ac:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   187b0:	82 30       	cpi	r24, 0x02	; 2
   187b2:	09 f4       	brne	.+2      	; 0x187b6 <_Z21Select_Operation_Modev+0x23e>
   187b4:	66 c1       	rjmp	.+716    	; 0x18a82 <_Z21Select_Operation_Modev+0x50a>
   187b6:	20 f4       	brcc	.+8      	; 0x187c0 <_Z21Select_Operation_Modev+0x248>
   187b8:	81 30       	cpi	r24, 0x01	; 1
   187ba:	09 f4       	brne	.+2      	; 0x187be <_Z21Select_Operation_Modev+0x246>
   187bc:	c6 c0       	rjmp	.+396    	; 0x1894a <_Z21Select_Operation_Modev+0x3d2>
   187be:	08 95       	ret
   187c0:	83 30       	cpi	r24, 0x03	; 3
   187c2:	21 f0       	breq	.+8      	; 0x187cc <_Z21Select_Operation_Modev+0x254>
   187c4:	85 30       	cpi	r24, 0x05	; 5
   187c6:	09 f4       	brne	.+2      	; 0x187ca <_Z21Select_Operation_Modev+0x252>
   187c8:	17 c1       	rjmp	.+558    	; 0x189f8 <_Z21Select_Operation_Modev+0x480>
   187ca:	08 95       	ret
   187cc:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   187d0:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   187d4:	89 2b       	or	r24, r25
   187d6:	09 f0       	breq	.+2      	; 0x187da <_Z21Select_Operation_Modev+0x262>
   187d8:	5f c0       	rjmp	.+190    	; 0x18898 <_Z21Select_Operation_Modev+0x320>
   187da:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   187de:	88 23       	and	r24, r24
   187e0:	e1 f0       	breq	.+56     	; 0x1881a <_Z21Select_Operation_Modev+0x2a2>
   187e2:	e2 dd       	rcall	.-1084   	; 0x183a8 <_Z15Stop_Irrigationv>
   187e4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   187e8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   187ec:	84 60       	ori	r24, 0x04	; 4
   187ee:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   187f2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   187f6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   187fa:	81 30       	cpi	r24, 0x01	; 1
   187fc:	51 f4       	brne	.+20     	; 0x18812 <_Z21Select_Operation_Modev+0x29a>
   187fe:	6a eb       	ldi	r22, 0xBA	; 186
   18800:	75 e4       	ldi	r23, 0x45	; 69
   18802:	86 ec       	ldi	r24, 0xC6	; 198
   18804:	94 e1       	ldi	r25, 0x14	; 20
   18806:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1880a:	86 ec       	ldi	r24, 0xC6	; 198
   1880c:	94 e1       	ldi	r25, 0x14	; 20
   1880e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18812:	85 e0       	ldi	r24, 0x05	; 5
   18814:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18818:	1e c0       	rjmp	.+60     	; 0x18856 <_Z21Select_Operation_Modev+0x2de>
   1881a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1881e:	81 30       	cpi	r24, 0x01	; 1
   18820:	51 f4       	brne	.+20     	; 0x18836 <_Z21Select_Operation_Modev+0x2be>
   18822:	6e e9       	ldi	r22, 0x9E	; 158
   18824:	75 e4       	ldi	r23, 0x45	; 69
   18826:	86 ec       	ldi	r24, 0xC6	; 198
   18828:	94 e1       	ldi	r25, 0x14	; 20
   1882a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1882e:	86 ec       	ldi	r24, 0xC6	; 198
   18830:	94 e1       	ldi	r25, 0x14	; 20
   18832:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18836:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   1883a:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   1883e:	85 e0       	ldi	r24, 0x05	; 5
   18840:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18844:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18848:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1884c:	84 60       	ori	r24, 0x04	; 4
   1884e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18852:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18856:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1885a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1885e:	20 91 d9 13 	lds	r18, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18862:	2e 7f       	andi	r18, 0xFE	; 254
   18864:	20 93 d9 13 	sts	0x13D9, r18	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18868:	24 e0       	ldi	r18, 0x04	; 4
   1886a:	20 93 d6 13 	sts	0x13D6, r18	; 0x8013d6 <_sRuble_Parameters+0x28>
   1886e:	8c 60       	ori	r24, 0x0C	; 12
   18870:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18874:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18878:	65 ed       	ldi	r22, 0xD5	; 213
   1887a:	73 e1       	ldi	r23, 0x13	; 19
   1887c:	88 ed       	ldi	r24, 0xD8	; 216
   1887e:	94 e0       	ldi	r25, 0x04	; 4
   18880:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18884:	6e e1       	ldi	r22, 0x1E	; 30
   18886:	74 e1       	ldi	r23, 0x14	; 20
   18888:	86 e9       	ldi	r24, 0x96	; 150
   1888a:	9c e0       	ldi	r25, 0x0C	; 12
   1888c:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18890:	88 e9       	ldi	r24, 0x98	; 152
   18892:	9c e0       	ldi	r25, 0x0C	; 12
   18894:	0e 94 f3 86 	call	0x10de6	; 0x10de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18898:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   1889c:	82 30       	cpi	r24, 0x02	; 2
   1889e:	09 f4       	brne	.+2      	; 0x188a2 <_Z21Select_Operation_Modev+0x32a>
   188a0:	3e c1       	rjmp	.+636    	; 0x18b1e <_Z21Select_Operation_Modev+0x5a6>
   188a2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   188a6:	81 30       	cpi	r24, 0x01	; 1
   188a8:	51 f4       	brne	.+20     	; 0x188be <_Z21Select_Operation_Modev+0x346>
   188aa:	69 e8       	ldi	r22, 0x89	; 137
   188ac:	75 e4       	ldi	r23, 0x45	; 69
   188ae:	86 ec       	ldi	r24, 0xC6	; 198
   188b0:	94 e1       	ldi	r25, 0x14	; 20
   188b2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   188b6:	86 ec       	ldi	r24, 0xC6	; 198
   188b8:	94 e1       	ldi	r25, 0x14	; 20
   188ba:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   188be:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   188c2:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   188c6:	22 e0       	ldi	r18, 0x02	; 2
   188c8:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   188cc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   188d0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   188d4:	88 60       	ori	r24, 0x08	; 8
   188d6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   188da:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   188de:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   188e2:	81 60       	ori	r24, 0x01	; 1
   188e4:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   188e8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   188ec:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   188f0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   188f4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   188f8:	92 60       	ori	r25, 0x02	; 2
   188fa:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   188fe:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18902:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18906:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1890a:	81 e0       	ldi	r24, 0x01	; 1
   1890c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18910:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   18914:	61 e7       	ldi	r22, 0x71	; 113
   18916:	74 e1       	ldi	r23, 0x14	; 20
   18918:	89 e1       	ldi	r24, 0x19	; 25
   1891a:	95 e0       	ldi	r25, 0x05	; 5
   1891c:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18920:	65 ed       	ldi	r22, 0xD5	; 213
   18922:	73 e1       	ldi	r23, 0x13	; 19
   18924:	88 ed       	ldi	r24, 0xD8	; 216
   18926:	94 e0       	ldi	r25, 0x04	; 4
   18928:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1892c:	6e e1       	ldi	r22, 0x1E	; 30
   1892e:	74 e1       	ldi	r23, 0x14	; 20
   18930:	86 e9       	ldi	r24, 0x96	; 150
   18932:	9c e0       	ldi	r25, 0x0C	; 12
   18934:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18938:	88 e9       	ldi	r24, 0x98	; 152
   1893a:	9c e0       	ldi	r25, 0x0C	; 12
   1893c:	0e 94 f3 86 	call	0x10de6	; 0x10de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18940:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18944:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18948:	08 95       	ret
   1894a:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   1894e:	82 30       	cpi	r24, 0x02	; 2
   18950:	09 f4       	brne	.+2      	; 0x18954 <_Z21Select_Operation_Modev+0x3dc>
   18952:	45 c0       	rjmp	.+138    	; 0x189de <_Z21Select_Operation_Modev+0x466>
   18954:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18958:	81 30       	cpi	r24, 0x01	; 1
   1895a:	51 f4       	brne	.+20     	; 0x18970 <_Z21Select_Operation_Modev+0x3f8>
   1895c:	64 e7       	ldi	r22, 0x74	; 116
   1895e:	75 e4       	ldi	r23, 0x45	; 69
   18960:	86 ec       	ldi	r24, 0xC6	; 198
   18962:	94 e1       	ldi	r25, 0x14	; 20
   18964:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18968:	86 ec       	ldi	r24, 0xC6	; 198
   1896a:	94 e1       	ldi	r25, 0x14	; 20
   1896c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18970:	22 e0       	ldi	r18, 0x02	; 2
   18972:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   18976:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1897a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1897e:	84 60       	ori	r24, 0x04	; 4
   18980:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18984:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18988:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1898c:	81 60       	ori	r24, 0x01	; 1
   1898e:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18992:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18996:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1899a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1899e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   189a2:	88 60       	ori	r24, 0x08	; 8
   189a4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   189a8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   189ac:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   189b0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   189b4:	81 e0       	ldi	r24, 0x01	; 1
   189b6:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   189ba:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   189be:	61 e7       	ldi	r22, 0x71	; 113
   189c0:	74 e1       	ldi	r23, 0x14	; 20
   189c2:	89 e1       	ldi	r24, 0x19	; 25
   189c4:	95 e0       	ldi	r25, 0x05	; 5
   189c6:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   189ca:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   189ce:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   189d2:	65 ed       	ldi	r22, 0xD5	; 213
   189d4:	73 e1       	ldi	r23, 0x13	; 19
   189d6:	88 ed       	ldi	r24, 0xD8	; 216
   189d8:	94 e0       	ldi	r25, 0x04	; 4
   189da:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   189de:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   189e2:	88 23       	and	r24, r24
   189e4:	09 f4       	brne	.+2      	; 0x189e8 <_Z21Select_Operation_Modev+0x470>
   189e6:	9b c0       	rjmp	.+310    	; 0x18b1e <_Z21Select_Operation_Modev+0x5a6>
   189e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   189ec:	81 30       	cpi	r24, 0x01	; 1
   189ee:	09 f0       	breq	.+2      	; 0x189f2 <_Z21Select_Operation_Modev+0x47a>
   189f0:	70 c0       	rjmp	.+224    	; 0x18ad2 <_Z21Select_Operation_Modev+0x55a>
   189f2:	61 e6       	ldi	r22, 0x61	; 97
   189f4:	75 e4       	ldi	r23, 0x45	; 69
   189f6:	54 c0       	rjmp	.+168    	; 0x18aa0 <_Z21Select_Operation_Modev+0x528>
   189f8:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   189fc:	82 30       	cpi	r24, 0x02	; 2
   189fe:	09 f4       	brne	.+2      	; 0x18a02 <_Z21Select_Operation_Modev+0x48a>
   18a00:	8e c0       	rjmp	.+284    	; 0x18b1e <_Z21Select_Operation_Modev+0x5a6>
   18a02:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18a06:	81 30       	cpi	r24, 0x01	; 1
   18a08:	51 f4       	brne	.+20     	; 0x18a1e <_Z21Select_Operation_Modev+0x4a6>
   18a0a:	6c e4       	ldi	r22, 0x4C	; 76
   18a0c:	75 e4       	ldi	r23, 0x45	; 69
   18a0e:	86 ec       	ldi	r24, 0xC6	; 198
   18a10:	94 e1       	ldi	r25, 0x14	; 20
   18a12:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a16:	86 ec       	ldi	r24, 0xC6	; 198
   18a18:	94 e1       	ldi	r25, 0x14	; 20
   18a1a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18a1e:	22 e0       	ldi	r18, 0x02	; 2
   18a20:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   18a24:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18a28:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18a2c:	84 60       	ori	r24, 0x04	; 4
   18a2e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18a32:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18a36:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a3a:	81 60       	ori	r24, 0x01	; 1
   18a3c:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a40:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18a44:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18a48:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18a4c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18a50:	88 60       	ori	r24, 0x08	; 8
   18a52:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18a56:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18a5a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18a5e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18a62:	81 e0       	ldi	r24, 0x01	; 1
   18a64:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18a68:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   18a6c:	61 e7       	ldi	r22, 0x71	; 113
   18a6e:	74 e1       	ldi	r23, 0x14	; 20
   18a70:	89 e1       	ldi	r24, 0x19	; 25
   18a72:	95 e0       	ldi	r25, 0x05	; 5
   18a74:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18a78:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18a7c:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18a80:	48 c0       	rjmp	.+144    	; 0x18b12 <_Z21Select_Operation_Modev+0x59a>
   18a82:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   18a86:	82 30       	cpi	r24, 0x02	; 2
   18a88:	09 f0       	breq	.+2      	; 0x18a8c <_Z21Select_Operation_Modev+0x514>
   18a8a:	49 c0       	rjmp	.+146    	; 0x18b1e <_Z21Select_Operation_Modev+0x5a6>
   18a8c:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
   18a90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18a94:	99 23       	and	r25, r25
   18a96:	69 f0       	breq	.+26     	; 0x18ab2 <_Z21Select_Operation_Modev+0x53a>
   18a98:	81 30       	cpi	r24, 0x01	; 1
   18a9a:	d9 f4       	brne	.+54     	; 0x18ad2 <_Z21Select_Operation_Modev+0x55a>
   18a9c:	69 e3       	ldi	r22, 0x39	; 57
   18a9e:	75 e4       	ldi	r23, 0x45	; 69
   18aa0:	86 ec       	ldi	r24, 0xC6	; 198
   18aa2:	94 e1       	ldi	r25, 0x14	; 20
   18aa4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18aa8:	86 ec       	ldi	r24, 0xC6	; 198
   18aaa:	94 e1       	ldi	r25, 0x14	; 20
   18aac:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18ab0:	10 c0       	rjmp	.+32     	; 0x18ad2 <_Z21Select_Operation_Modev+0x55a>
   18ab2:	81 30       	cpi	r24, 0x01	; 1
   18ab4:	51 f4       	brne	.+20     	; 0x18aca <_Z21Select_Operation_Modev+0x552>
   18ab6:	66 e2       	ldi	r22, 0x26	; 38
   18ab8:	75 e4       	ldi	r23, 0x45	; 69
   18aba:	86 ec       	ldi	r24, 0xC6	; 198
   18abc:	94 e1       	ldi	r25, 0x14	; 20
   18abe:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ac2:	86 ec       	ldi	r24, 0xC6	; 198
   18ac4:	94 e1       	ldi	r25, 0x14	; 20
   18ac6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18aca:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18ace:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18ad2:	85 e0       	ldi	r24, 0x05	; 5
   18ad4:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18ad8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18adc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ae0:	84 60       	ori	r24, 0x04	; 4
   18ae2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ae6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18aea:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18aee:	8e 7f       	andi	r24, 0xFE	; 254
   18af0:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18af4:	80 e1       	ldi	r24, 0x10	; 16
   18af6:	90 e0       	ldi	r25, 0x00	; 0
   18af8:	a0 e0       	ldi	r26, 0x00	; 0
   18afa:	b0 e0       	ldi	r27, 0x00	; 0
   18afc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18b00:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18b04:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18b08:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18b0c:	81 e0       	ldi	r24, 0x01	; 1
   18b0e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18b12:	65 ed       	ldi	r22, 0xD5	; 213
   18b14:	73 e1       	ldi	r23, 0x13	; 19
   18b16:	88 ed       	ldi	r24, 0xD8	; 216
   18b18:	94 e0       	ldi	r25, 0x04	; 4
   18b1a:	0c 94 a6 86 	jmp	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18b1e:	08 95       	ret

00018b20 <_Z16Start_Irrigationv>:
   18b20:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18b24:	81 30       	cpi	r24, 0x01	; 1
   18b26:	31 f4       	brne	.+12     	; 0x18b34 <_Z16Start_Irrigationv+0x14>
   18b28:	62 e7       	ldi	r22, 0x72	; 114
   18b2a:	71 e4       	ldi	r23, 0x41	; 65
   18b2c:	86 ec       	ldi	r24, 0xC6	; 198
   18b2e:	94 e1       	ldi	r25, 0x14	; 20
   18b30:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b34:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   18b38:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18b3c:	81 30       	cpi	r24, 0x01	; 1
   18b3e:	29 f4       	brne	.+10     	; 0x18b4a <_Z16Start_Irrigationv+0x2a>
   18b40:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18b44:	81 30       	cpi	r24, 0x01	; 1
   18b46:	09 f4       	brne	.+2      	; 0x18b4a <_Z16Start_Irrigationv+0x2a>
   18b48:	d4 c0       	rjmp	.+424    	; 0x18cf2 <_Z16Start_Irrigationv+0x1d2>
   18b4a:	82 e0       	ldi	r24, 0x02	; 2
   18b4c:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   18b50:	81 e0       	ldi	r24, 0x01	; 1
   18b52:	0e 94 67 af 	call	0x15ece	; 0x15ece <_Z22Valve_Grouping_Handlerh>
   18b56:	88 23       	and	r24, r24
   18b58:	09 f4       	brne	.+2      	; 0x18b5c <_Z16Start_Irrigationv+0x3c>
   18b5a:	b3 c0       	rjmp	.+358    	; 0x18cc2 <_Z16Start_Irrigationv+0x1a2>
   18b5c:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   18b60:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   18b64:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18b68:	81 11       	cpse	r24, r1
   18b6a:	22 c0       	rjmp	.+68     	; 0x18bb0 <_Z16Start_Irrigationv+0x90>
   18b6c:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18b70:	81 30       	cpi	r24, 0x01	; 1
   18b72:	f1 f4       	brne	.+60     	; 0x18bb0 <_Z16Start_Irrigationv+0x90>
   18b74:	8a e0       	ldi	r24, 0x0A	; 10
   18b76:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   18b7a:	89 2b       	or	r24, r25
   18b7c:	21 f0       	breq	.+8      	; 0x18b86 <_Z16Start_Irrigationv+0x66>
   18b7e:	60 e0       	ldi	r22, 0x00	; 0
   18b80:	8a e0       	ldi	r24, 0x0A	; 10
   18b82:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   18b86:	80 e3       	ldi	r24, 0x30	; 48
   18b88:	95 e7       	ldi	r25, 0x75	; 117
   18b8a:	0e 94 d1 75 	call	0xeba2	; 0xeba2 <_Z8My_Delayj>
   18b8e:	8b e0       	ldi	r24, 0x0B	; 11
   18b90:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   18b94:	89 2b       	or	r24, r25
   18b96:	21 f0       	breq	.+8      	; 0x18ba0 <_Z16Start_Irrigationv+0x80>
   18b98:	60 e0       	ldi	r22, 0x00	; 0
   18b9a:	8b e0       	ldi	r24, 0x0B	; 11
   18b9c:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   18ba0:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18ba4:	f0 e0       	ldi	r31, 0x00	; 0
   18ba6:	ee 56       	subi	r30, 0x6E	; 110
   18ba8:	fb 4e       	sbci	r31, 0xEB	; 235
   18baa:	81 e0       	ldi	r24, 0x01	; 1
   18bac:	80 83       	st	Z, r24
   18bae:	32 c0       	rjmp	.+100    	; 0x18c14 <_Z16Start_Irrigationv+0xf4>
   18bb0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18bb4:	81 30       	cpi	r24, 0x01	; 1
   18bb6:	51 f4       	brne	.+20     	; 0x18bcc <_Z16Start_Irrigationv+0xac>
   18bb8:	6b e4       	ldi	r22, 0x4B	; 75
   18bba:	71 e4       	ldi	r23, 0x41	; 65
   18bbc:	86 ec       	ldi	r24, 0xC6	; 198
   18bbe:	94 e1       	ldi	r25, 0x14	; 20
   18bc0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bc4:	86 ec       	ldi	r24, 0xC6	; 198
   18bc6:	94 e1       	ldi	r25, 0x14	; 20
   18bc8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18bcc:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18bd0:	62 50       	subi	r22, 0x02	; 2
   18bd2:	82 e0       	ldi	r24, 0x02	; 2
   18bd4:	aa d8       	rcall	.-3756   	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   18bd6:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18bda:	88 23       	and	r24, r24
   18bdc:	b9 f1       	breq	.+110    	; 0x18c4c <_Z16Start_Irrigationv+0x12c>
   18bde:	91 30       	cpi	r25, 0x01	; 1
   18be0:	51 f4       	brne	.+20     	; 0x18bf6 <_Z16Start_Irrigationv+0xd6>
   18be2:	66 e3       	ldi	r22, 0x36	; 54
   18be4:	71 e4       	ldi	r23, 0x41	; 65
   18be6:	86 ec       	ldi	r24, 0xC6	; 198
   18be8:	94 e1       	ldi	r25, 0x14	; 20
   18bea:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bee:	86 ec       	ldi	r24, 0xC6	; 198
   18bf0:	94 e1       	ldi	r25, 0x14	; 20
   18bf2:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18bf6:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18bfa:	f0 e0       	ldi	r31, 0x00	; 0
   18bfc:	ee 56       	subi	r30, 0x6E	; 110
   18bfe:	fb 4e       	sbci	r31, 0xEB	; 235
   18c00:	81 e0       	ldi	r24, 0x01	; 1
   18c02:	80 83       	st	Z, r24
   18c04:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   18c08:	6c e7       	ldi	r22, 0x7C	; 124
   18c0a:	74 e1       	ldi	r23, 0x14	; 20
   18c0c:	8d ea       	ldi	r24, 0xAD	; 173
   18c0e:	9c e0       	ldi	r25, 0x0C	; 12
   18c10:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18c14:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18c18:	86 e9       	ldi	r24, 0x96	; 150
   18c1a:	90 e0       	ldi	r25, 0x00	; 0
   18c1c:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   18c20:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   18c24:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18c28:	82 60       	ori	r24, 0x02	; 2
   18c2a:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18c2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c32:	81 30       	cpi	r24, 0x01	; 1
   18c34:	d9 f5       	brne	.+118    	; 0x18cac <_Z16Start_Irrigationv+0x18c>
   18c36:	62 ef       	ldi	r22, 0xF2	; 242
   18c38:	70 e4       	ldi	r23, 0x40	; 64
   18c3a:	86 ec       	ldi	r24, 0xC6	; 198
   18c3c:	94 e1       	ldi	r25, 0x14	; 20
   18c3e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c42:	86 ec       	ldi	r24, 0xC6	; 198
   18c44:	94 e1       	ldi	r25, 0x14	; 20
   18c46:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18c4a:	30 c0       	rjmp	.+96     	; 0x18cac <_Z16Start_Irrigationv+0x18c>
   18c4c:	91 30       	cpi	r25, 0x01	; 1
   18c4e:	51 f4       	brne	.+20     	; 0x18c64 <_Z16Start_Irrigationv+0x144>
   18c50:	69 e1       	ldi	r22, 0x19	; 25
   18c52:	71 e4       	ldi	r23, 0x41	; 65
   18c54:	86 ec       	ldi	r24, 0xC6	; 198
   18c56:	94 e1       	ldi	r25, 0x14	; 20
   18c58:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c5c:	86 ec       	ldi	r24, 0xC6	; 198
   18c5e:	94 e1       	ldi	r25, 0x14	; 20
   18c60:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18c64:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   18c68:	6c e7       	ldi	r22, 0x7C	; 124
   18c6a:	74 e1       	ldi	r23, 0x14	; 20
   18c6c:	8d ea       	ldi	r24, 0xAD	; 173
   18c6e:	9c e0       	ldi	r25, 0x0C	; 12
   18c70:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18c74:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18c78:	f0 e0       	ldi	r31, 0x00	; 0
   18c7a:	ee 56       	subi	r30, 0x6E	; 110
   18c7c:	fb 4e       	sbci	r31, 0xEB	; 235
   18c7e:	10 82       	st	Z, r1
   18c80:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18c84:	91 db       	rcall	.-2270   	; 0x183a8 <_Z15Stop_Irrigationv>
   18c86:	64 e0       	ldi	r22, 0x04	; 4
   18c88:	80 e0       	ldi	r24, 0x00	; 0
   18c8a:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18c8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c92:	81 30       	cpi	r24, 0x01	; 1
   18c94:	71 f5       	brne	.+92     	; 0x18cf2 <_Z16Start_Irrigationv+0x1d2>
   18c96:	63 e0       	ldi	r22, 0x03	; 3
   18c98:	71 e4       	ldi	r23, 0x41	; 65
   18c9a:	86 ec       	ldi	r24, 0xC6	; 198
   18c9c:	94 e1       	ldi	r25, 0x14	; 20
   18c9e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ca2:	86 ec       	ldi	r24, 0xC6	; 198
   18ca4:	94 e1       	ldi	r25, 0x14	; 20
   18ca6:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18caa:	23 c0       	rjmp	.+70     	; 0x18cf2 <_Z16Start_Irrigationv+0x1d2>
   18cac:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18cb0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18cb4:	84 60       	ori	r24, 0x04	; 4
   18cb6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18cba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18cbe:	81 e0       	ldi	r24, 0x01	; 1
   18cc0:	08 95       	ret
   18cc2:	72 db       	rcall	.-2332   	; 0x183a8 <_Z15Stop_Irrigationv>
   18cc4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18cc8:	81 30       	cpi	r24, 0x01	; 1
   18cca:	51 f4       	brne	.+20     	; 0x18ce0 <_Z16Start_Irrigationv+0x1c0>
   18ccc:	6c ed       	ldi	r22, 0xDC	; 220
   18cce:	70 e4       	ldi	r23, 0x40	; 64
   18cd0:	86 ec       	ldi	r24, 0xC6	; 198
   18cd2:	94 e1       	ldi	r25, 0x14	; 20
   18cd4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18cd8:	86 ec       	ldi	r24, 0xC6	; 198
   18cda:	94 e1       	ldi	r25, 0x14	; 20
   18cdc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18ce0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18ce4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ce8:	84 60       	ori	r24, 0x04	; 4
   18cea:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18cee:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18cf2:	80 e0       	ldi	r24, 0x00	; 0
   18cf4:	08 95       	ret

00018cf6 <_Z13Run_Operationv>:
   18cf6:	0f 93       	push	r16
   18cf8:	1f 93       	push	r17
   18cfa:	cf 93       	push	r28
   18cfc:	df 93       	push	r29
   18cfe:	1f 92       	push	r1
   18d00:	1f 92       	push	r1
   18d02:	cd b7       	in	r28, 0x3d	; 61
   18d04:	de b7       	in	r29, 0x3e	; 62
   18d06:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   18d0a:	86 34       	cpi	r24, 0x46	; 70
   18d0c:	08 f4       	brcc	.+2      	; 0x18d10 <_Z13Run_Operationv+0x1a>
   18d0e:	f8 c2       	rjmp	.+1520   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d10:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18d14:	82 30       	cpi	r24, 0x02	; 2
   18d16:	61 f0       	breq	.+24     	; 0x18d30 <_Z13Run_Operationv+0x3a>
   18d18:	20 f4       	brcc	.+8      	; 0x18d22 <_Z13Run_Operationv+0x2c>
   18d1a:	81 30       	cpi	r24, 0x01	; 1
   18d1c:	09 f4       	brne	.+2      	; 0x18d20 <_Z13Run_Operationv+0x2a>
   18d1e:	42 c0       	rjmp	.+132    	; 0x18da4 <_Z13Run_Operationv+0xae>
   18d20:	ef c2       	rjmp	.+1502   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d22:	83 30       	cpi	r24, 0x03	; 3
   18d24:	09 f4       	brne	.+2      	; 0x18d28 <_Z13Run_Operationv+0x32>
   18d26:	d5 c0       	rjmp	.+426    	; 0x18ed2 <_Z13Run_Operationv+0x1dc>
   18d28:	85 30       	cpi	r24, 0x05	; 5
   18d2a:	09 f4       	brne	.+2      	; 0x18d2e <_Z13Run_Operationv+0x38>
   18d2c:	c5 c2       	rjmp	.+1418   	; 0x192b8 <_Z13Run_Operationv+0x5c2>
   18d2e:	e8 c2       	rjmp	.+1488   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d30:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d34:	81 30       	cpi	r24, 0x01	; 1
   18d36:	19 f0       	breq	.+6      	; 0x18d3e <_Z13Run_Operationv+0x48>
   18d38:	84 30       	cpi	r24, 0x04	; 4
   18d3a:	09 f0       	breq	.+2      	; 0x18d3e <_Z13Run_Operationv+0x48>
   18d3c:	e1 c2       	rjmp	.+1474   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d3e:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18d42:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18d46:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18d4a:	89 2b       	or	r24, r25
   18d4c:	09 f0       	breq	.+2      	; 0x18d50 <_Z13Run_Operationv+0x5a>
   18d4e:	d8 c2       	rjmp	.+1456   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d50:	2b db       	rcall	.-2474   	; 0x183a8 <_Z15Stop_Irrigationv>
   18d52:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18d56:	88 23       	and	r24, r24
   18d58:	49 f0       	breq	.+18     	; 0x18d6c <_Z13Run_Operationv+0x76>
   18d5a:	83 e0       	ldi	r24, 0x03	; 3
   18d5c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d60:	91 30       	cpi	r25, 0x01	; 1
   18d62:	09 f0       	breq	.+2      	; 0x18d66 <_Z13Run_Operationv+0x70>
   18d64:	cd c2       	rjmp	.+1434   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d66:	6e ef       	ldi	r22, 0xFE	; 254
   18d68:	74 e4       	ldi	r23, 0x44	; 68
   18d6a:	0e c0       	rjmp	.+28     	; 0x18d88 <_Z13Run_Operationv+0x92>
   18d6c:	84 e0       	ldi	r24, 0x04	; 4
   18d6e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d72:	28 e5       	ldi	r18, 0x58	; 88
   18d74:	32 e0       	ldi	r19, 0x02	; 2
   18d76:	30 93 a4 14 	sts	0x14A4, r19	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18d7a:	20 93 a3 14 	sts	0x14A3, r18	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18d7e:	91 30       	cpi	r25, 0x01	; 1
   18d80:	09 f0       	breq	.+2      	; 0x18d84 <_Z13Run_Operationv+0x8e>
   18d82:	be c2       	rjmp	.+1404   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18d84:	66 ed       	ldi	r22, 0xD6	; 214
   18d86:	74 e4       	ldi	r23, 0x44	; 68
   18d88:	86 ec       	ldi	r24, 0xC6	; 198
   18d8a:	94 e1       	ldi	r25, 0x14	; 20
   18d8c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d90:	86 ec       	ldi	r24, 0xC6	; 198
   18d92:	94 e1       	ldi	r25, 0x14	; 20
   18d94:	0f 90       	pop	r0
   18d96:	0f 90       	pop	r0
   18d98:	df 91       	pop	r29
   18d9a:	cf 91       	pop	r28
   18d9c:	1f 91       	pop	r17
   18d9e:	0f 91       	pop	r16
   18da0:	0c 94 f6 d3 	jmp	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18da4:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18da8:	83 30       	cpi	r24, 0x03	; 3
   18daa:	09 f4       	brne	.+2      	; 0x18dae <_Z13Run_Operationv+0xb8>
   18dac:	48 c0       	rjmp	.+144    	; 0x18e3e <_Z13Run_Operationv+0x148>
   18dae:	20 f4       	brcc	.+8      	; 0x18db8 <_Z13Run_Operationv+0xc2>
   18db0:	81 30       	cpi	r24, 0x01	; 1
   18db2:	08 f4       	brcc	.+2      	; 0x18db6 <_Z13Run_Operationv+0xc0>
   18db4:	a5 c2       	rjmp	.+1354   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18db6:	03 c0       	rjmp	.+6      	; 0x18dbe <_Z13Run_Operationv+0xc8>
   18db8:	84 30       	cpi	r24, 0x04	; 4
   18dba:	09 f0       	breq	.+2      	; 0x18dbe <_Z13Run_Operationv+0xc8>
   18dbc:	a1 c2       	rjmp	.+1346   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18dbe:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18dc2:	81 11       	cpse	r24, r1
   18dc4:	9d c2       	rjmp	.+1338   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18dc6:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18dca:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18dce:	88 23       	and	r24, r24
   18dd0:	59 f1       	breq	.+86     	; 0x18e28 <_Z13Run_Operationv+0x132>
   18dd2:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18dd6:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18dda:	89 2b       	or	r24, r25
   18ddc:	09 f0       	breq	.+2      	; 0x18de0 <_Z13Run_Operationv+0xea>
   18dde:	90 c2       	rjmp	.+1312   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18de0:	e3 da       	rcall	.-2618   	; 0x183a8 <_Z15Stop_Irrigationv>
   18de2:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18de6:	88 23       	and	r24, r24
   18de8:	49 f0       	breq	.+18     	; 0x18dfc <_Z13Run_Operationv+0x106>
   18dea:	83 e0       	ldi	r24, 0x03	; 3
   18dec:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18df0:	91 30       	cpi	r25, 0x01	; 1
   18df2:	09 f0       	breq	.+2      	; 0x18df6 <_Z13Run_Operationv+0x100>
   18df4:	85 c2       	rjmp	.+1290   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18df6:	64 eb       	ldi	r22, 0xB4	; 180
   18df8:	74 e4       	ldi	r23, 0x44	; 68
   18dfa:	c6 cf       	rjmp	.-116    	; 0x18d88 <_Z13Run_Operationv+0x92>
   18dfc:	84 e0       	ldi	r24, 0x04	; 4
   18dfe:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18e02:	91 30       	cpi	r25, 0x01	; 1
   18e04:	51 f4       	brne	.+20     	; 0x18e1a <_Z13Run_Operationv+0x124>
   18e06:	69 e8       	ldi	r22, 0x89	; 137
   18e08:	74 e4       	ldi	r23, 0x44	; 68
   18e0a:	86 ec       	ldi	r24, 0xC6	; 198
   18e0c:	94 e1       	ldi	r25, 0x14	; 20
   18e0e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e12:	86 ec       	ldi	r24, 0xC6	; 198
   18e14:	94 e1       	ldi	r25, 0x14	; 20
   18e16:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18e1a:	88 e5       	ldi	r24, 0x58	; 88
   18e1c:	92 e0       	ldi	r25, 0x02	; 2
   18e1e:	90 93 a4 14 	sts	0x14A4, r25	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18e22:	80 93 a3 14 	sts	0x14A3, r24	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18e26:	6c c2       	rjmp	.+1240   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18e28:	83 e0       	ldi	r24, 0x03	; 3
   18e2a:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18e2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18e32:	81 30       	cpi	r24, 0x01	; 1
   18e34:	09 f0       	breq	.+2      	; 0x18e38 <_Z13Run_Operationv+0x142>
   18e36:	64 c2       	rjmp	.+1224   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18e38:	68 e6       	ldi	r22, 0x68	; 104
   18e3a:	74 e4       	ldi	r23, 0x44	; 68
   18e3c:	a5 cf       	rjmp	.-182    	; 0x18d88 <_Z13Run_Operationv+0x92>
   18e3e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   18e42:	88 23       	and	r24, r24
   18e44:	a1 f0       	breq	.+40     	; 0x18e6e <_Z13Run_Operationv+0x178>
   18e46:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18e4a:	81 30       	cpi	r24, 0x01	; 1
   18e4c:	51 f4       	brne	.+20     	; 0x18e62 <_Z13Run_Operationv+0x16c>
   18e4e:	69 e3       	ldi	r22, 0x39	; 57
   18e50:	74 e4       	ldi	r23, 0x44	; 68
   18e52:	86 ec       	ldi	r24, 0xC6	; 198
   18e54:	94 e1       	ldi	r25, 0x14	; 20
   18e56:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e5a:	86 ec       	ldi	r24, 0xC6	; 198
   18e5c:	94 e1       	ldi	r25, 0x14	; 20
   18e5e:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18e62:	a2 da       	rcall	.-2748   	; 0x183a8 <_Z15Stop_Irrigationv>
   18e64:	81 11       	cpse	r24, r1
   18e66:	03 c0       	rjmp	.+6      	; 0x18e6e <_Z13Run_Operationv+0x178>
   18e68:	84 e0       	ldi	r24, 0x04	; 4
   18e6a:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18e6e:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18e72:	81 11       	cpse	r24, r1
   18e74:	04 c0       	rjmp	.+8      	; 0x18e7e <_Z13Run_Operationv+0x188>
   18e76:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18e7a:	88 23       	and	r24, r24
   18e7c:	a1 f0       	breq	.+40     	; 0x18ea6 <_Z13Run_Operationv+0x1b0>
   18e7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18e82:	81 30       	cpi	r24, 0x01	; 1
   18e84:	51 f4       	brne	.+20     	; 0x18e9a <_Z13Run_Operationv+0x1a4>
   18e86:	6e e1       	ldi	r22, 0x1E	; 30
   18e88:	74 e4       	ldi	r23, 0x44	; 68
   18e8a:	86 ec       	ldi	r24, 0xC6	; 198
   18e8c:	94 e1       	ldi	r25, 0x14	; 20
   18e8e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e92:	86 ec       	ldi	r24, 0xC6	; 198
   18e94:	94 e1       	ldi	r25, 0x14	; 20
   18e96:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18e9a:	86 da       	rcall	.-2804   	; 0x183a8 <_Z15Stop_Irrigationv>
   18e9c:	81 11       	cpse	r24, r1
   18e9e:	03 c0       	rjmp	.+6      	; 0x18ea6 <_Z13Run_Operationv+0x1b0>
   18ea0:	84 e0       	ldi	r24, 0x04	; 4
   18ea2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ea6:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18eaa:	88 23       	and	r24, r24
   18eac:	09 f4       	brne	.+2      	; 0x18eb0 <_Z13Run_Operationv+0x1ba>
   18eae:	28 c2       	rjmp	.+1104   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18eb0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18eb4:	81 30       	cpi	r24, 0x01	; 1
   18eb6:	51 f4       	brne	.+20     	; 0x18ecc <_Z13Run_Operationv+0x1d6>
   18eb8:	65 ef       	ldi	r22, 0xF5	; 245
   18eba:	73 e4       	ldi	r23, 0x43	; 67
   18ebc:	86 ec       	ldi	r24, 0xC6	; 198
   18ebe:	94 e1       	ldi	r25, 0x14	; 20
   18ec0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ec4:	86 ec       	ldi	r24, 0xC6	; 198
   18ec6:	94 e1       	ldi	r25, 0x14	; 20
   18ec8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18ecc:	6d da       	rcall	.-2854   	; 0x183a8 <_Z15Stop_Irrigationv>
   18ece:	84 e0       	ldi	r24, 0x04	; 4
   18ed0:	55 c0       	rjmp	.+170    	; 0x18f7c <_Z13Run_Operationv+0x286>
   18ed2:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ed6:	83 30       	cpi	r24, 0x03	; 3
   18ed8:	09 f4       	brne	.+2      	; 0x18edc <_Z13Run_Operationv+0x1e6>
   18eda:	76 c0       	rjmp	.+236    	; 0x18fc8 <_Z13Run_Operationv+0x2d2>
   18edc:	20 f4       	brcc	.+8      	; 0x18ee6 <_Z13Run_Operationv+0x1f0>
   18ede:	81 30       	cpi	r24, 0x01	; 1
   18ee0:	08 f4       	brcc	.+2      	; 0x18ee4 <_Z13Run_Operationv+0x1ee>
   18ee2:	0e c2       	rjmp	.+1052   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18ee4:	03 c0       	rjmp	.+6      	; 0x18eec <_Z13Run_Operationv+0x1f6>
   18ee6:	84 30       	cpi	r24, 0x04	; 4
   18ee8:	09 f0       	breq	.+2      	; 0x18eec <_Z13Run_Operationv+0x1f6>
   18eea:	0a c2       	rjmp	.+1044   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18eec:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
   18ef0:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
   18ef4:	89 2b       	or	r24, r25
   18ef6:	09 f0       	breq	.+2      	; 0x18efa <_Z13Run_Operationv+0x204>
   18ef8:	03 c2       	rjmp	.+1030   	; 0x19300 <_Z13Run_Operationv+0x60a>
   18efa:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18efe:	81 30       	cpi	r24, 0x01	; 1
   18f00:	b1 f4       	brne	.+44     	; 0x18f2e <_Z13Run_Operationv+0x238>
   18f02:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18f06:	81 30       	cpi	r24, 0x01	; 1
   18f08:	91 f4       	brne	.+36     	; 0x18f2e <_Z13Run_Operationv+0x238>
   18f0a:	80 ef       	ldi	r24, 0xF0	; 240
   18f0c:	90 e0       	ldi	r25, 0x00	; 0
   18f0e:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18f12:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18f16:	65 e6       	ldi	r22, 0x65	; 101
   18f18:	74 e1       	ldi	r23, 0x14	; 20
   18f1a:	86 e9       	ldi	r24, 0x96	; 150
   18f1c:	9c e0       	ldi	r25, 0x0C	; 12
   18f1e:	0f 90       	pop	r0
   18f20:	0f 90       	pop	r0
   18f22:	df 91       	pop	r29
   18f24:	cf 91       	pop	r28
   18f26:	1f 91       	pop	r17
   18f28:	0f 91       	pop	r16
   18f2a:	0c 94 a6 86 	jmp	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18f2e:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18f32:	81 11       	cpse	r24, r1
   18f34:	04 c0       	rjmp	.+8      	; 0x18f3e <_Z13Run_Operationv+0x248>
   18f36:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18f3a:	88 23       	and	r24, r24
   18f3c:	39 f0       	breq	.+14     	; 0x18f4c <_Z13Run_Operationv+0x256>
   18f3e:	8c e3       	ldi	r24, 0x3C	; 60
   18f40:	90 e0       	ldi	r25, 0x00	; 0
   18f42:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18f46:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18f4a:	da c1       	rjmp	.+948    	; 0x19300 <_Z13Run_Operationv+0x60a>
   18f4c:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18f50:	10 92 78 14 	sts	0x1478, r1	; 0x801478 <_sRuble_Parameters+0xca>
   18f54:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18f58:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18f5c:	88 23       	and	r24, r24
   18f5e:	69 f0       	breq	.+26     	; 0x18f7a <_Z13Run_Operationv+0x284>
   18f60:	23 da       	rcall	.-3002   	; 0x183a8 <_Z15Stop_Irrigationv>
   18f62:	88 23       	and	r24, r24
   18f64:	71 f0       	breq	.+28     	; 0x18f82 <_Z13Run_Operationv+0x28c>
   18f66:	63 ed       	ldi	r22, 0xD3	; 211
   18f68:	73 e4       	ldi	r23, 0x43	; 67
   18f6a:	86 ec       	ldi	r24, 0xC6	; 198
   18f6c:	94 e1       	ldi	r25, 0x14	; 20
   18f6e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f72:	86 ec       	ldi	r24, 0xC6	; 198
   18f74:	94 e1       	ldi	r25, 0x14	; 20
   18f76:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18f7a:	83 e0       	ldi	r24, 0x03	; 3
   18f7c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18f80:	bf c1       	rjmp	.+894    	; 0x19300 <_Z13Run_Operationv+0x60a>
   18f82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18f86:	81 30       	cpi	r24, 0x01	; 1
   18f88:	51 f4       	brne	.+20     	; 0x18f9e <_Z13Run_Operationv+0x2a8>
   18f8a:	60 e9       	ldi	r22, 0x90	; 144
   18f8c:	73 e4       	ldi	r23, 0x43	; 67
   18f8e:	86 ec       	ldi	r24, 0xC6	; 198
   18f90:	94 e1       	ldi	r25, 0x14	; 20
   18f92:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f96:	86 ec       	ldi	r24, 0xC6	; 198
   18f98:	94 e1       	ldi	r25, 0x14	; 20
   18f9a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   18f9e:	83 e0       	ldi	r24, 0x03	; 3
   18fa0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18fa4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18fa8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18fac:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18fb0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18fb4:	92 60       	ori	r25, 0x02	; 2
   18fb6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18fba:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18fbe:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18fc2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18fc6:	9c c1       	rjmp	.+824    	; 0x19300 <_Z13Run_Operationv+0x60a>
   18fc8:	80 91 e4 0d 	lds	r24, 0x0DE4	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18fcc:	8f 5f       	subi	r24, 0xFF	; 255
   18fce:	8b 3a       	cpi	r24, 0xAB	; 171
   18fd0:	18 f4       	brcc	.+6      	; 0x18fd8 <_Z13Run_Operationv+0x2e2>
   18fd2:	80 93 e4 0d 	sts	0x0DE4, r24	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18fd6:	06 c0       	rjmp	.+12     	; 0x18fe4 <_Z13Run_Operationv+0x2ee>
   18fd8:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18fdc:	88 e9       	ldi	r24, 0x98	; 152
   18fde:	9c e0       	ldi	r25, 0x0C	; 12
   18fe0:	0e 94 f3 86 	call	0x10de6	; 0x10de6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18fe4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18fe8:	81 11       	cpse	r24, r1
   18fea:	95 c0       	rjmp	.+298    	; 0x19116 <_Z13Run_Operationv+0x420>
   18fec:	00 91 c6 13 	lds	r16, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18ff0:	10 91 c7 13 	lds	r17, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ff4:	c8 01       	movw	r24, r16
   18ff6:	88 60       	ori	r24, 0x08	; 8
   18ff8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ffc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19000:	88 e9       	ldi	r24, 0x98	; 152
   19002:	9c e0       	ldi	r25, 0x0C	; 12
   19004:	0e 94 14 f1 	call	0x1e228	; 0x1e228 <eeprom_read_byte>
   19008:	89 83       	std	Y+1, r24	; 0x01
   1900a:	89 e9       	ldi	r24, 0x99	; 153
   1900c:	9c e0       	ldi	r25, 0x0C	; 12
   1900e:	0e 94 14 f1 	call	0x1e228	; 0x1e228 <eeprom_read_byte>
   19012:	8a 83       	std	Y+2, r24	; 0x02
   19014:	89 81       	ldd	r24, Y+1	; 0x01
   19016:	9a 81       	ldd	r25, Y+2	; 0x02
   19018:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   1901c:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   19020:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   19024:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   19028:	88 e7       	ldi	r24, 0x78	; 120
   1902a:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
   1902e:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   19032:	81 11       	cpse	r24, r1
   19034:	62 c0       	rjmp	.+196    	; 0x190fa <_Z13Run_Operationv+0x404>
   19036:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   1903a:	81 11       	cpse	r24, r1
   1903c:	5e c0       	rjmp	.+188    	; 0x190fa <_Z13Run_Operationv+0x404>
   1903e:	80 91 65 14 	lds	r24, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   19042:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
   19046:	6e e1       	ldi	r22, 0x1E	; 30
   19048:	74 e1       	ldi	r23, 0x14	; 20
   1904a:	86 e9       	ldi	r24, 0x96	; 150
   1904c:	9c e0       	ldi	r25, 0x0C	; 12
   1904e:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19052:	66 dd       	rcall	.-1332   	; 0x18b20 <_Z16Start_Irrigationv>
   19054:	81 11       	cpse	r24, r1
   19056:	2c c0       	rjmp	.+88     	; 0x190b0 <_Z13Run_Operationv+0x3ba>
   19058:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1905c:	81 30       	cpi	r24, 0x01	; 1
   1905e:	51 f4       	brne	.+20     	; 0x19074 <_Z13Run_Operationv+0x37e>
   19060:	68 e4       	ldi	r22, 0x48	; 72
   19062:	73 e4       	ldi	r23, 0x43	; 67
   19064:	86 ec       	ldi	r24, 0xC6	; 198
   19066:	94 e1       	ldi	r25, 0x14	; 20
   19068:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1906c:	86 ec       	ldi	r24, 0xC6	; 198
   1906e:	94 e1       	ldi	r25, 0x14	; 20
   19070:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19074:	81 e0       	ldi	r24, 0x01	; 1
   19076:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1907a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1907e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19082:	84 60       	ori	r24, 0x04	; 4
   19084:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19088:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1908c:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19090:	81 30       	cpi	r24, 0x01	; 1
   19092:	39 f4       	brne	.+14     	; 0x190a2 <_Z13Run_Operationv+0x3ac>
   19094:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   19098:	81 30       	cpi	r24, 0x01	; 1
   1909a:	19 f4       	brne	.+6      	; 0x190a2 <_Z13Run_Operationv+0x3ac>
   1909c:	80 ef       	ldi	r24, 0xF0	; 240
   1909e:	90 e0       	ldi	r25, 0x00	; 0
   190a0:	02 c0       	rjmp	.+4      	; 0x190a6 <_Z13Run_Operationv+0x3b0>
   190a2:	88 e5       	ldi	r24, 0x58	; 88
   190a4:	92 e0       	ldi	r25, 0x02	; 2
   190a6:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   190aa:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   190ae:	33 c0       	rjmp	.+102    	; 0x19116 <_Z13Run_Operationv+0x420>
   190b0:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   190b4:	81 11       	cpse	r24, r1
   190b6:	2f c0       	rjmp	.+94     	; 0x19116 <_Z13Run_Operationv+0x420>
   190b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   190bc:	81 30       	cpi	r24, 0x01	; 1
   190be:	51 f4       	brne	.+20     	; 0x190d4 <_Z13Run_Operationv+0x3de>
   190c0:	60 e0       	ldi	r22, 0x00	; 0
   190c2:	73 e4       	ldi	r23, 0x43	; 67
   190c4:	86 ec       	ldi	r24, 0xC6	; 198
   190c6:	94 e1       	ldi	r25, 0x14	; 20
   190c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   190cc:	86 ec       	ldi	r24, 0xC6	; 198
   190ce:	94 e1       	ldi	r25, 0x14	; 20
   190d0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   190d4:	88 e5       	ldi	r24, 0x58	; 88
   190d6:	92 e0       	ldi	r25, 0x02	; 2
   190d8:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   190dc:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   190e0:	81 e0       	ldi	r24, 0x01	; 1
   190e2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   190e6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   190ea:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   190ee:	84 60       	ori	r24, 0x04	; 4
   190f0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   190f4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   190f8:	0e c0       	rjmp	.+28     	; 0x19116 <_Z13Run_Operationv+0x420>
   190fa:	88 e5       	ldi	r24, 0x58	; 88
   190fc:	92 e0       	ldi	r25, 0x02	; 2
   190fe:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   19102:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19106:	81 e0       	ldi	r24, 0x01	; 1
   19108:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1910c:	0c 60       	ori	r16, 0x0C	; 12
   1910e:	10 93 c7 13 	sts	0x13C7, r17	; 0x8013c7 <_sRuble_Parameters+0x19>
   19112:	00 93 c6 13 	sts	0x13C6, r16	; 0x8013c6 <_sRuble_Parameters+0x18>
   19116:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   1911a:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   1911e:	89 2b       	or	r24, r25
   19120:	a9 f0       	breq	.+42     	; 0x1914c <_Z13Run_Operationv+0x456>
   19122:	65 ee       	ldi	r22, 0xE5	; 229
   19124:	72 e4       	ldi	r23, 0x42	; 66
   19126:	86 ec       	ldi	r24, 0xC6	; 198
   19128:	94 e1       	ldi	r25, 0x14	; 20
   1912a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1912e:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   19132:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   19136:	4a e0       	ldi	r20, 0x0A	; 10
   19138:	50 e0       	ldi	r21, 0x00	; 0
   1913a:	86 ec       	ldi	r24, 0xC6	; 198
   1913c:	94 e1       	ldi	r25, 0x14	; 20
   1913e:	0e 94 18 d6 	call	0x1ac30	; 0x1ac30 <_ZN5Print7printlnEji>
   19142:	86 ec       	ldi	r24, 0xC6	; 198
   19144:	94 e1       	ldi	r25, 0x14	; 20
   19146:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1914a:	13 c0       	rjmp	.+38     	; 0x19172 <_Z13Run_Operationv+0x47c>
   1914c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19150:	81 30       	cpi	r24, 0x01	; 1
   19152:	51 f4       	brne	.+20     	; 0x19168 <_Z13Run_Operationv+0x472>
   19154:	68 ec       	ldi	r22, 0xC8	; 200
   19156:	72 e4       	ldi	r23, 0x42	; 66
   19158:	86 ec       	ldi	r24, 0xC6	; 198
   1915a:	94 e1       	ldi	r25, 0x14	; 20
   1915c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19160:	86 ec       	ldi	r24, 0xC6	; 198
   19162:	94 e1       	ldi	r25, 0x14	; 20
   19164:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19168:	1f d9       	rcall	.-3522   	; 0x183a8 <_Z15Stop_Irrigationv>
   1916a:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   1916e:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   19172:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   19176:	81 11       	cpse	r24, r1
   19178:	09 c0       	rjmp	.+18     	; 0x1918c <_Z13Run_Operationv+0x496>
   1917a:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   1917e:	81 11       	cpse	r24, r1
   19180:	11 c0       	rjmp	.+34     	; 0x191a4 <_Z13Run_Operationv+0x4ae>
   19182:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19186:	81 11       	cpse	r24, r1
   19188:	0d c0       	rjmp	.+26     	; 0x191a4 <_Z13Run_Operationv+0x4ae>
   1918a:	8a c0       	rjmp	.+276    	; 0x192a0 <_Z13Run_Operationv+0x5aa>
   1918c:	98 2f       	mov	r25, r24
   1918e:	97 7f       	andi	r25, 0xF7	; 247
   19190:	91 30       	cpi	r25, 0x01	; 1
   19192:	89 f0       	breq	.+34     	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   19194:	98 2f       	mov	r25, r24
   19196:	9d 7f       	andi	r25, 0xFD	; 253
   19198:	94 30       	cpi	r25, 0x04	; 4
   1919a:	69 f0       	breq	.+26     	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   1919c:	8c 30       	cpi	r24, 0x0C	; 12
   1919e:	59 f0       	breq	.+22     	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   191a0:	8f 30       	cpi	r24, 0x0F	; 15
   191a2:	49 f0       	breq	.+18     	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   191a4:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   191a8:	81 11       	cpse	r24, r1
   191aa:	05 c0       	rjmp	.+10     	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   191ac:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   191b0:	88 23       	and	r24, r24
   191b2:	09 f4       	brne	.+2      	; 0x191b6 <_Z13Run_Operationv+0x4c0>
   191b4:	49 c0       	rjmp	.+146    	; 0x19248 <_Z13Run_Operationv+0x552>
   191b6:	f8 d8       	rcall	.-3600   	; 0x183a8 <_Z15Stop_Irrigationv>
   191b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   191bc:	81 30       	cpi	r24, 0x01	; 1
   191be:	51 f4       	brne	.+20     	; 0x191d4 <_Z13Run_Operationv+0x4de>
   191c0:	65 e9       	ldi	r22, 0x95	; 149
   191c2:	72 e4       	ldi	r23, 0x42	; 66
   191c4:	86 ec       	ldi	r24, 0xC6	; 198
   191c6:	94 e1       	ldi	r25, 0x14	; 20
   191c8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   191cc:	86 ec       	ldi	r24, 0xC6	; 198
   191ce:	94 e1       	ldi	r25, 0x14	; 20
   191d0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   191d4:	90 91 39 0e 	lds	r25, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   191d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   191dc:	91 11       	cpse	r25, r1
   191de:	04 c0       	rjmp	.+8      	; 0x191e8 <_Z13Run_Operationv+0x4f2>
   191e0:	90 91 52 0e 	lds	r25, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   191e4:	99 23       	and	r25, r25
   191e6:	79 f0       	breq	.+30     	; 0x19206 <_Z13Run_Operationv+0x510>
   191e8:	81 30       	cpi	r24, 0x01	; 1
   191ea:	51 f4       	brne	.+20     	; 0x19200 <_Z13Run_Operationv+0x50a>
   191ec:	62 e6       	ldi	r22, 0x62	; 98
   191ee:	72 e4       	ldi	r23, 0x42	; 66
   191f0:	86 ec       	ldi	r24, 0xC6	; 198
   191f2:	94 e1       	ldi	r25, 0x14	; 20
   191f4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   191f8:	86 ec       	ldi	r24, 0xC6	; 198
   191fa:	94 e1       	ldi	r25, 0x14	; 20
   191fc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19200:	8c e3       	ldi	r24, 0x3C	; 60
   19202:	90 e0       	ldi	r25, 0x00	; 0
   19204:	19 c0       	rjmp	.+50     	; 0x19238 <_Z13Run_Operationv+0x542>
   19206:	81 30       	cpi	r24, 0x01	; 1
   19208:	51 f4       	brne	.+20     	; 0x1921e <_Z13Run_Operationv+0x528>
   1920a:	6f e2       	ldi	r22, 0x2F	; 47
   1920c:	72 e4       	ldi	r23, 0x42	; 66
   1920e:	86 ec       	ldi	r24, 0xC6	; 198
   19210:	94 e1       	ldi	r25, 0x14	; 20
   19212:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19216:	86 ec       	ldi	r24, 0xC6	; 198
   19218:	94 e1       	ldi	r25, 0x14	; 20
   1921a:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1921e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19222:	81 30       	cpi	r24, 0x01	; 1
   19224:	39 f4       	brne	.+14     	; 0x19234 <_Z13Run_Operationv+0x53e>
   19226:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   1922a:	81 30       	cpi	r24, 0x01	; 1
   1922c:	19 f4       	brne	.+6      	; 0x19234 <_Z13Run_Operationv+0x53e>
   1922e:	80 ef       	ldi	r24, 0xF0	; 240
   19230:	90 e0       	ldi	r25, 0x00	; 0
   19232:	02 c0       	rjmp	.+4      	; 0x19238 <_Z13Run_Operationv+0x542>
   19234:	88 e5       	ldi	r24, 0x58	; 88
   19236:	92 e0       	ldi	r25, 0x02	; 2
   19238:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   1923c:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19240:	81 e0       	ldi	r24, 0x01	; 1
   19242:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   19246:	2c c0       	rjmp	.+88     	; 0x192a0 <_Z13Run_Operationv+0x5aa>
   19248:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1924c:	81 30       	cpi	r24, 0x01	; 1
   1924e:	51 f4       	brne	.+20     	; 0x19264 <_Z13Run_Operationv+0x56e>
   19250:	6c ef       	ldi	r22, 0xFC	; 252
   19252:	71 e4       	ldi	r23, 0x41	; 65
   19254:	86 ec       	ldi	r24, 0xC6	; 198
   19256:	94 e1       	ldi	r25, 0x14	; 20
   19258:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1925c:	86 ec       	ldi	r24, 0xC6	; 198
   1925e:	94 e1       	ldi	r25, 0x14	; 20
   19260:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19264:	a1 d8       	rcall	.-3774   	; 0x183a8 <_Z15Stop_Irrigationv>
   19266:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   1926a:	88 23       	and	r24, r24
   1926c:	21 f0       	breq	.+8      	; 0x19276 <_Z13Run_Operationv+0x580>
   1926e:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19272:	81 11       	cpse	r24, r1
   19274:	04 c0       	rjmp	.+8      	; 0x1927e <_Z13Run_Operationv+0x588>
   19276:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   1927a:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   1927e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19282:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19286:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1928a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1928e:	92 60       	ori	r25, 0x02	; 2
   19290:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19294:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19298:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1929c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   192a0:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   192a4:	88 23       	and	r24, r24
   192a6:	61 f1       	breq	.+88     	; 0x19300 <_Z13Run_Operationv+0x60a>
   192a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   192ac:	81 30       	cpi	r24, 0x01	; 1
   192ae:	09 f0       	breq	.+2      	; 0x192b2 <_Z13Run_Operationv+0x5bc>
   192b0:	0d ce       	rjmp	.-998    	; 0x18ecc <_Z13Run_Operationv+0x1d6>
   192b2:	62 ed       	ldi	r22, 0xD2	; 210
   192b4:	71 e4       	ldi	r23, 0x41	; 65
   192b6:	02 ce       	rjmp	.-1020   	; 0x18ebc <_Z13Run_Operationv+0x1c6>
   192b8:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   192bc:	83 30       	cpi	r24, 0x03	; 3
   192be:	c1 f0       	breq	.+48     	; 0x192f0 <_Z13Run_Operationv+0x5fa>
   192c0:	18 f4       	brcc	.+6      	; 0x192c8 <_Z13Run_Operationv+0x5d2>
   192c2:	81 30       	cpi	r24, 0x01	; 1
   192c4:	e8 f0       	brcs	.+58     	; 0x19300 <_Z13Run_Operationv+0x60a>
   192c6:	02 c0       	rjmp	.+4      	; 0x192cc <_Z13Run_Operationv+0x5d6>
   192c8:	84 30       	cpi	r24, 0x04	; 4
   192ca:	d1 f4       	brne	.+52     	; 0x19300 <_Z13Run_Operationv+0x60a>
   192cc:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   192d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   192d4:	99 23       	and	r25, r25
   192d6:	31 f0       	breq	.+12     	; 0x192e4 <_Z13Run_Operationv+0x5ee>
   192d8:	81 30       	cpi	r24, 0x01	; 1
   192da:	09 f0       	breq	.+2      	; 0x192de <_Z13Run_Operationv+0x5e8>
   192dc:	4e ce       	rjmp	.-868    	; 0x18f7a <_Z13Run_Operationv+0x284>
   192de:	6b ea       	ldi	r22, 0xAB	; 171
   192e0:	71 e4       	ldi	r23, 0x41	; 65
   192e2:	43 ce       	rjmp	.-890    	; 0x18f6a <_Z13Run_Operationv+0x274>
   192e4:	81 30       	cpi	r24, 0x01	; 1
   192e6:	09 f0       	breq	.+2      	; 0x192ea <_Z13Run_Operationv+0x5f4>
   192e8:	48 ce       	rjmp	.-880    	; 0x18f7a <_Z13Run_Operationv+0x284>
   192ea:	6e e8       	ldi	r22, 0x8E	; 142
   192ec:	71 e4       	ldi	r23, 0x41	; 65
   192ee:	3d ce       	rjmp	.-902    	; 0x18f6a <_Z13Run_Operationv+0x274>
   192f0:	0f 90       	pop	r0
   192f2:	0f 90       	pop	r0
   192f4:	df 91       	pop	r29
   192f6:	cf 91       	pop	r28
   192f8:	1f 91       	pop	r17
   192fa:	0f 91       	pop	r16
   192fc:	0c 94 aa 54 	jmp	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   19300:	0f 90       	pop	r0
   19302:	0f 90       	pop	r0
   19304:	df 91       	pop	r29
   19306:	cf 91       	pop	r28
   19308:	1f 91       	pop	r17
   1930a:	0f 91       	pop	r16
   1930c:	08 95       	ret

0001930e <_Z26Start_Extra_Plot_Operationh>:
   1930e:	1f 93       	push	r17
   19310:	cf 93       	push	r28
   19312:	df 93       	push	r29
   19314:	c8 2f       	mov	r28, r24
   19316:	65 ef       	ldi	r22, 0xF5	; 245
   19318:	7f e2       	ldi	r23, 0x2F	; 47
   1931a:	86 ec       	ldi	r24, 0xC6	; 198
   1931c:	94 e1       	ldi	r25, 0x14	; 20
   1931e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19322:	4a e0       	ldi	r20, 0x0A	; 10
   19324:	50 e0       	ldi	r21, 0x00	; 0
   19326:	6c 2f       	mov	r22, r28
   19328:	86 ec       	ldi	r24, 0xC6	; 198
   1932a:	94 e1       	ldi	r25, 0x14	; 20
   1932c:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   19330:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19334:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19338:	84 60       	ori	r24, 0x04	; 4
   1933a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1933e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19342:	1d ef       	ldi	r17, 0xFD	; 253
   19344:	1c 0f       	add	r17, r28
   19346:	12 30       	cpi	r17, 0x02	; 2
   19348:	10 f4       	brcc	.+4      	; 0x1934e <_Z26Start_Extra_Plot_Operationh+0x40>
   1934a:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   1934e:	6c 2f       	mov	r22, r28
   19350:	81 e0       	ldi	r24, 0x01	; 1
   19352:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   19356:	d8 2f       	mov	r29, r24
   19358:	88 23       	and	r24, r24
   1935a:	09 f4       	brne	.+2      	; 0x1935e <_Z26Start_Extra_Plot_Operationh+0x50>
   1935c:	81 c0       	rjmp	.+258    	; 0x19460 <_Z26Start_Extra_Plot_Operationh+0x152>
   1935e:	12 30       	cpi	r17, 0x02	; 2
   19360:	08 f0       	brcs	.+2      	; 0x19364 <_Z26Start_Extra_Plot_Operationh+0x56>
   19362:	4c c0       	rjmp	.+152    	; 0x193fc <_Z26Start_Extra_Plot_Operationh+0xee>
   19364:	c4 30       	cpi	r28, 0x04	; 4
   19366:	19 f0       	breq	.+6      	; 0x1936e <_Z26Start_Extra_Plot_Operationh+0x60>
   19368:	82 e0       	ldi	r24, 0x02	; 2
   1936a:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   1936e:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   19372:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   19376:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   1937a:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   1937e:	81 11       	cpse	r24, r1
   19380:	13 c0       	rjmp	.+38     	; 0x193a8 <_Z26Start_Extra_Plot_Operationh+0x9a>
   19382:	8a e0       	ldi	r24, 0x0A	; 10
   19384:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   19388:	89 2b       	or	r24, r25
   1938a:	21 f0       	breq	.+8      	; 0x19394 <_Z26Start_Extra_Plot_Operationh+0x86>
   1938c:	60 e0       	ldi	r22, 0x00	; 0
   1938e:	8a e0       	ldi	r24, 0x0A	; 10
   19390:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   19394:	8b e0       	ldi	r24, 0x0B	; 11
   19396:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   1939a:	89 2b       	or	r24, r25
   1939c:	79 f1       	breq	.+94     	; 0x193fc <_Z26Start_Extra_Plot_Operationh+0xee>
   1939e:	60 e0       	ldi	r22, 0x00	; 0
   193a0:	8b e0       	ldi	r24, 0x0B	; 11
   193a2:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   193a6:	2a c0       	rjmp	.+84     	; 0x193fc <_Z26Start_Extra_Plot_Operationh+0xee>
   193a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   193ac:	81 30       	cpi	r24, 0x01	; 1
   193ae:	51 f4       	brne	.+20     	; 0x193c4 <_Z26Start_Extra_Plot_Operationh+0xb6>
   193b0:	60 ed       	ldi	r22, 0xD0	; 208
   193b2:	7f e2       	ldi	r23, 0x2F	; 47
   193b4:	86 ec       	ldi	r24, 0xC6	; 198
   193b6:	94 e1       	ldi	r25, 0x14	; 20
   193b8:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   193bc:	86 ec       	ldi	r24, 0xC6	; 198
   193be:	94 e1       	ldi	r25, 0x14	; 20
   193c0:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   193c4:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   193c8:	62 50       	subi	r22, 0x02	; 2
   193ca:	82 e0       	ldi	r24, 0x02	; 2
   193cc:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   193d0:	88 23       	and	r24, r24
   193d2:	51 f0       	breq	.+20     	; 0x193e8 <_Z26Start_Extra_Plot_Operationh+0xda>
   193d4:	81 e0       	ldi	r24, 0x01	; 1
   193d6:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   193da:	6c e7       	ldi	r22, 0x7C	; 124
   193dc:	74 e1       	ldi	r23, 0x14	; 20
   193de:	8d ea       	ldi	r24, 0xAD	; 173
   193e0:	9c e0       	ldi	r25, 0x0C	; 12
   193e2:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   193e6:	0a c0       	rjmp	.+20     	; 0x193fc <_Z26Start_Extra_Plot_Operationh+0xee>
   193e8:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   193ec:	6c e7       	ldi	r22, 0x7C	; 124
   193ee:	74 e1       	ldi	r23, 0x14	; 20
   193f0:	8d ea       	ldi	r24, 0xAD	; 173
   193f2:	9c e0       	ldi	r25, 0x0C	; 12
   193f4:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   193f8:	d0 e0       	ldi	r29, 0x00	; 0
   193fa:	40 c0       	rjmp	.+128    	; 0x1947c <_Z26Start_Extra_Plot_Operationh+0x16e>
   193fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19400:	81 30       	cpi	r24, 0x01	; 1
   19402:	51 f4       	brne	.+20     	; 0x19418 <_Z26Start_Extra_Plot_Operationh+0x10a>
   19404:	62 ec       	ldi	r22, 0xC2	; 194
   19406:	7f e2       	ldi	r23, 0x2F	; 47
   19408:	86 ec       	ldi	r24, 0xC6	; 198
   1940a:	94 e1       	ldi	r25, 0x14	; 20
   1940c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19410:	86 ec       	ldi	r24, 0xC6	; 198
   19412:	94 e1       	ldi	r25, 0x14	; 20
   19414:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19418:	8b e1       	ldi	r24, 0x1B	; 27
   1941a:	c8 9f       	mul	r28, r24
   1941c:	f0 01       	movw	r30, r0
   1941e:	11 24       	eor	r1, r1
   19420:	e8 51       	subi	r30, 0x18	; 24
   19422:	f2 4f       	sbci	r31, 0xF2	; 242
   19424:	81 e0       	ldi	r24, 0x01	; 1
   19426:	80 83       	st	Z, r24
   19428:	23 85       	ldd	r18, Z+11	; 0x0b
   1942a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1942e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19432:	21 30       	cpi	r18, 0x01	; 1
   19434:	51 f4       	brne	.+20     	; 0x1944a <_Z26Start_Extra_Plot_Operationh+0x13c>
   19436:	90 61       	ori	r25, 0x10	; 16
   19438:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1943c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19440:	12 86       	std	Z+10, r1	; 0x0a
   19442:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   19446:	22 8f       	std	Z+26, r18	; 0x1a
   19448:	19 c0       	rjmp	.+50     	; 0x1947c <_Z26Start_Extra_Plot_Operationh+0x16e>
   1944a:	90 62       	ori	r25, 0x20	; 32
   1944c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19450:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19454:	13 86       	std	Z+11, r1	; 0x0b
   19456:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   1945a:	82 e0       	ldi	r24, 0x02	; 2
   1945c:	82 8f       	std	Z+26, r24	; 0x1a
   1945e:	0e c0       	rjmp	.+28     	; 0x1947c <_Z26Start_Extra_Plot_Operationh+0x16e>
   19460:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19464:	81 30       	cpi	r24, 0x01	; 1
   19466:	51 f4       	brne	.+20     	; 0x1947c <_Z26Start_Extra_Plot_Operationh+0x16e>
   19468:	6b ea       	ldi	r22, 0xAB	; 171
   1946a:	7f e2       	ldi	r23, 0x2F	; 47
   1946c:	86 ec       	ldi	r24, 0xC6	; 198
   1946e:	94 e1       	ldi	r25, 0x14	; 20
   19470:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19474:	86 ec       	ldi	r24, 0xC6	; 198
   19476:	94 e1       	ldi	r25, 0x14	; 20
   19478:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1947c:	8d 2f       	mov	r24, r29
   1947e:	df 91       	pop	r29
   19480:	cf 91       	pop	r28
   19482:	1f 91       	pop	r17
   19484:	08 95       	ret

00019486 <_Z25Stop_Extra_Plot_Operationh>:
   19486:	0f 93       	push	r16
   19488:	1f 93       	push	r17
   1948a:	cf 93       	push	r28
   1948c:	df 93       	push	r29
   1948e:	c8 2f       	mov	r28, r24
   19490:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19494:	81 30       	cpi	r24, 0x01	; 1
   19496:	51 f4       	brne	.+20     	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x26>
   19498:	69 e9       	ldi	r22, 0x99	; 153
   1949a:	7f e2       	ldi	r23, 0x2F	; 47
   1949c:	86 ec       	ldi	r24, 0xC6	; 198
   1949e:	94 e1       	ldi	r25, 0x14	; 20
   194a0:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   194a4:	86 ec       	ldi	r24, 0xC6	; 198
   194a6:	94 e1       	ldi	r25, 0x14	; 20
   194a8:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   194ac:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   194b0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   194b4:	84 60       	ori	r24, 0x04	; 4
   194b6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   194ba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   194be:	0c 2f       	mov	r16, r28
   194c0:	10 e0       	ldi	r17, 0x00	; 0
   194c2:	8b e1       	ldi	r24, 0x1B	; 27
   194c4:	c8 9f       	mul	r28, r24
   194c6:	f0 01       	movw	r30, r0
   194c8:	11 24       	eor	r1, r1
   194ca:	e8 51       	subi	r30, 0x18	; 24
   194cc:	f2 4f       	sbci	r31, 0xF2	; 242
   194ce:	10 82       	st	Z, r1
   194d0:	8d ef       	ldi	r24, 0xFD	; 253
   194d2:	8c 0f       	add	r24, r28
   194d4:	82 30       	cpi	r24, 0x02	; 2
   194d6:	20 f4       	brcc	.+8      	; 0x194e0 <_Z25Stop_Extra_Plot_Operationh+0x5a>
   194d8:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   194dc:	93 30       	cpi	r25, 0x03	; 3
   194de:	a9 f4       	brne	.+42     	; 0x1950a <_Z25Stop_Extra_Plot_Operationh+0x84>
   194e0:	90 91 ac 13 	lds	r25, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   194e4:	99 23       	and	r25, r25
   194e6:	11 f0       	breq	.+4      	; 0x194ec <_Z25Stop_Extra_Plot_Operationh+0x66>
   194e8:	82 30       	cpi	r24, 0x02	; 2
   194ea:	78 f0       	brcs	.+30     	; 0x1950a <_Z25Stop_Extra_Plot_Operationh+0x84>
   194ec:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   194f0:	93 30       	cpi	r25, 0x03	; 3
   194f2:	31 f4       	brne	.+12     	; 0x19500 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   194f4:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   194f8:	91 11       	cpse	r25, r1
   194fa:	02 c0       	rjmp	.+4      	; 0x19500 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   194fc:	82 30       	cpi	r24, 0x02	; 2
   194fe:	28 f0       	brcs	.+10     	; 0x1950a <_Z25Stop_Extra_Plot_Operationh+0x84>
   19500:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   19504:	81 30       	cpi	r24, 0x01	; 1
   19506:	09 f0       	breq	.+2      	; 0x1950a <_Z25Stop_Extra_Plot_Operationh+0x84>
   19508:	aa c0       	rjmp	.+340    	; 0x1965e <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   1950a:	83 e0       	ldi	r24, 0x03	; 3
   1950c:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   19510:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19514:	81 11       	cpse	r24, r1
   19516:	a3 c0       	rjmp	.+326    	; 0x1965e <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19518:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   1951c:	81 11       	cpse	r24, r1
   1951e:	14 c0       	rjmp	.+40     	; 0x19548 <_Z25Stop_Extra_Plot_Operationh+0xc2>
   19520:	8a e0       	ldi	r24, 0x0A	; 10
   19522:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   19526:	01 97       	sbiw	r24, 0x01	; 1
   19528:	21 f0       	breq	.+8      	; 0x19532 <_Z25Stop_Extra_Plot_Operationh+0xac>
   1952a:	61 e0       	ldi	r22, 0x01	; 1
   1952c:	8a e0       	ldi	r24, 0x0A	; 10
   1952e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   19532:	8b e0       	ldi	r24, 0x0B	; 11
   19534:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   19538:	01 97       	sbiw	r24, 0x01	; 1
   1953a:	09 f4       	brne	.+2      	; 0x1953e <_Z25Stop_Extra_Plot_Operationh+0xb8>
   1953c:	90 c0       	rjmp	.+288    	; 0x1965e <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   1953e:	61 e0       	ldi	r22, 0x01	; 1
   19540:	8b e0       	ldi	r24, 0x0B	; 11
   19542:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   19546:	8b c0       	rjmp	.+278    	; 0x1965e <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19548:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1954c:	81 30       	cpi	r24, 0x01	; 1
   1954e:	51 f4       	brne	.+20     	; 0x19564 <_Z25Stop_Extra_Plot_Operationh+0xde>
   19550:	63 e7       	ldi	r22, 0x73	; 115
   19552:	7f e2       	ldi	r23, 0x2F	; 47
   19554:	86 ec       	ldi	r24, 0xC6	; 198
   19556:	94 e1       	ldi	r25, 0x14	; 20
   19558:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1955c:	86 ec       	ldi	r24, 0xC6	; 198
   1955e:	94 e1       	ldi	r25, 0x14	; 20
   19560:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19564:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19568:	62 50       	subi	r22, 0x02	; 2
   1956a:	84 e0       	ldi	r24, 0x04	; 4
   1956c:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   19570:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19574:	88 23       	and	r24, r24
   19576:	b9 f0       	breq	.+46     	; 0x195a6 <_Z25Stop_Extra_Plot_Operationh+0x120>
   19578:	91 30       	cpi	r25, 0x01	; 1
   1957a:	51 f4       	brne	.+20     	; 0x19590 <_Z25Stop_Extra_Plot_Operationh+0x10a>
   1957c:	63 e5       	ldi	r22, 0x53	; 83
   1957e:	7f e2       	ldi	r23, 0x2F	; 47
   19580:	86 ec       	ldi	r24, 0xC6	; 198
   19582:	94 e1       	ldi	r25, 0x14	; 20
   19584:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19588:	86 ec       	ldi	r24, 0xC6	; 198
   1958a:	94 e1       	ldi	r25, 0x14	; 20
   1958c:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19590:	10 92 8c 14 	sts	0x148C, r1	; 0x80148c <_sRuble_Parameters+0xde>
   19594:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19598:	6c e7       	ldi	r22, 0x7C	; 124
   1959a:	74 e1       	ldi	r23, 0x14	; 20
   1959c:	8d ea       	ldi	r24, 0xAD	; 173
   1959e:	9c e0       	ldi	r25, 0x0C	; 12
   195a0:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   195a4:	5c c0       	rjmp	.+184    	; 0x1965e <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   195a6:	91 30       	cpi	r25, 0x01	; 1
   195a8:	51 f4       	brne	.+20     	; 0x195be <_Z25Stop_Extra_Plot_Operationh+0x138>
   195aa:	6b e2       	ldi	r22, 0x2B	; 43
   195ac:	7f e2       	ldi	r23, 0x2F	; 47
   195ae:	86 ec       	ldi	r24, 0xC6	; 198
   195b0:	94 e1       	ldi	r25, 0x14	; 20
   195b2:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   195b6:	86 ec       	ldi	r24, 0xC6	; 198
   195b8:	94 e1       	ldi	r25, 0x14	; 20
   195ba:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   195be:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   195c2:	81 11       	cpse	r24, r1
   195c4:	0c c0       	rjmp	.+24     	; 0x195de <_Z25Stop_Extra_Plot_Operationh+0x158>
   195c6:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   195ca:	81 30       	cpi	r24, 0x01	; 1
   195cc:	41 f0       	breq	.+16     	; 0x195de <_Z25Stop_Extra_Plot_Operationh+0x158>
   195ce:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   195d2:	81 30       	cpi	r24, 0x01	; 1
   195d4:	21 f0       	breq	.+8      	; 0x195de <_Z25Stop_Extra_Plot_Operationh+0x158>
   195d6:	81 e0       	ldi	r24, 0x01	; 1
   195d8:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   195dc:	02 c0       	rjmp	.+4      	; 0x195e2 <_Z25Stop_Extra_Plot_Operationh+0x15c>
   195de:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   195e2:	6c e7       	ldi	r22, 0x7C	; 124
   195e4:	74 e1       	ldi	r23, 0x14	; 20
   195e6:	8d ea       	ldi	r24, 0xAD	; 173
   195e8:	9c e0       	ldi	r25, 0x0C	; 12
   195ea:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   195ee:	6c e7       	ldi	r22, 0x7C	; 124
   195f0:	74 e1       	ldi	r23, 0x14	; 20
   195f2:	8d ea       	ldi	r24, 0xAD	; 173
   195f4:	9c e0       	ldi	r25, 0x0C	; 12
   195f6:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   195fa:	81 e0       	ldi	r24, 0x01	; 1
   195fc:	80 93 8c 14 	sts	0x148C, r24	; 0x80148c <_sRuble_Parameters+0xde>
   19600:	8b e1       	ldi	r24, 0x1B	; 27
   19602:	80 9f       	mul	r24, r16
   19604:	f0 01       	movw	r30, r0
   19606:	81 9f       	mul	r24, r17
   19608:	f0 0d       	add	r31, r0
   1960a:	11 24       	eor	r1, r1
   1960c:	e8 51       	subi	r30, 0x18	; 24
   1960e:	f2 4f       	sbci	r31, 0xF2	; 242
   19610:	23 85       	ldd	r18, Z+11	; 0x0b
   19612:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19616:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1961a:	21 30       	cpi	r18, 0x01	; 1
   1961c:	51 f4       	brne	.+20     	; 0x19632 <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   1961e:	90 61       	ori	r25, 0x10	; 16
   19620:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19624:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19628:	13 86       	std	Z+11, r1	; 0x0b
   1962a:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   1962e:	22 8f       	std	Z+26, r18	; 0x1a
   19630:	0b c0       	rjmp	.+22     	; 0x19648 <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   19632:	90 62       	ori	r25, 0x20	; 32
   19634:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19638:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1963c:	12 86       	std	Z+10, r1	; 0x0a
   1963e:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   19642:	13 86       	std	Z+11, r1	; 0x0b
   19644:	82 e0       	ldi	r24, 0x02	; 2
   19646:	82 8f       	std	Z+26, r24	; 0x1a
   19648:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1964c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19650:	84 60       	ori	r24, 0x04	; 4
   19652:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19656:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1965a:	d1 e0       	ldi	r29, 0x01	; 1
   1965c:	51 c0       	rjmp	.+162    	; 0x19700 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   1965e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19662:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19666:	84 60       	ori	r24, 0x04	; 4
   19668:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1966c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19670:	6c 2f       	mov	r22, r28
   19672:	80 e0       	ldi	r24, 0x00	; 0
   19674:	0e 94 bb ba 	call	0x17576	; 0x17576 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   19678:	d8 2f       	mov	r29, r24
   1967a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1967e:	dd 23       	and	r29, r29
   19680:	99 f1       	breq	.+102    	; 0x196e8 <_Z25Stop_Extra_Plot_Operationh+0x262>
   19682:	81 30       	cpi	r24, 0x01	; 1
   19684:	51 f4       	brne	.+20     	; 0x1969a <_Z25Stop_Extra_Plot_Operationh+0x214>
   19686:	6a e1       	ldi	r22, 0x1A	; 26
   19688:	7f e2       	ldi	r23, 0x2F	; 47
   1968a:	86 ec       	ldi	r24, 0xC6	; 198
   1968c:	94 e1       	ldi	r25, 0x14	; 20
   1968e:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19692:	86 ec       	ldi	r24, 0xC6	; 198
   19694:	94 e1       	ldi	r25, 0x14	; 20
   19696:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1969a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1969e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   196a2:	2b e1       	ldi	r18, 0x1B	; 27
   196a4:	20 9f       	mul	r18, r16
   196a6:	f0 01       	movw	r30, r0
   196a8:	21 9f       	mul	r18, r17
   196aa:	f0 0d       	add	r31, r0
   196ac:	11 24       	eor	r1, r1
   196ae:	e8 51       	subi	r30, 0x18	; 24
   196b0:	f2 4f       	sbci	r31, 0xF2	; 242
   196b2:	23 85       	ldd	r18, Z+11	; 0x0b
   196b4:	21 30       	cpi	r18, 0x01	; 1
   196b6:	59 f4       	brne	.+22     	; 0x196ce <_Z25Stop_Extra_Plot_Operationh+0x248>
   196b8:	84 60       	ori	r24, 0x04	; 4
   196ba:	90 61       	ori	r25, 0x10	; 16
   196bc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   196c0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   196c4:	13 86       	std	Z+11, r1	; 0x0b
   196c6:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   196ca:	22 8f       	std	Z+26, r18	; 0x1a
   196cc:	19 c0       	rjmp	.+50     	; 0x19700 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   196ce:	84 60       	ori	r24, 0x04	; 4
   196d0:	90 62       	ori	r25, 0x20	; 32
   196d2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   196d6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   196da:	12 86       	std	Z+10, r1	; 0x0a
   196dc:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   196e0:	13 86       	std	Z+11, r1	; 0x0b
   196e2:	82 e0       	ldi	r24, 0x02	; 2
   196e4:	82 8f       	std	Z+26, r24	; 0x1a
   196e6:	0c c0       	rjmp	.+24     	; 0x19700 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   196e8:	81 30       	cpi	r24, 0x01	; 1
   196ea:	51 f4       	brne	.+20     	; 0x19700 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   196ec:	61 e0       	ldi	r22, 0x01	; 1
   196ee:	7f e2       	ldi	r23, 0x2F	; 47
   196f0:	86 ec       	ldi	r24, 0xC6	; 198
   196f2:	94 e1       	ldi	r25, 0x14	; 20
   196f4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   196f8:	86 ec       	ldi	r24, 0xC6	; 198
   196fa:	94 e1       	ldi	r25, 0x14	; 20
   196fc:	0e 94 f6 d3 	call	0x1a7ec	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19700:	8d 2f       	mov	r24, r29
   19702:	df 91       	pop	r29
   19704:	cf 91       	pop	r28
   19706:	1f 91       	pop	r17
   19708:	0f 91       	pop	r16
   1970a:	08 95       	ret

0001970c <_Z24Run_Extra_Plot_Operationv>:
   1970c:	cf 92       	push	r12
   1970e:	df 92       	push	r13
   19710:	ef 92       	push	r14
   19712:	ff 92       	push	r15
   19714:	1f 93       	push	r17
   19716:	cf 93       	push	r28
   19718:	df 93       	push	r29
   1971a:	88 ee       	ldi	r24, 0xE8	; 232
   1971c:	e8 2e       	mov	r14, r24
   1971e:	8d e0       	ldi	r24, 0x0D	; 13
   19720:	f8 2e       	mov	r15, r24
   19722:	92 ed       	ldi	r25, 0xD2	; 210
   19724:	c9 2e       	mov	r12, r25
   19726:	9d e0       	ldi	r25, 0x0D	; 13
   19728:	d9 2e       	mov	r13, r25
   1972a:	c0 e0       	ldi	r28, 0x00	; 0
   1972c:	d0 e0       	ldi	r29, 0x00	; 0
   1972e:	1c 2f       	mov	r17, r28
   19730:	f7 01       	movw	r30, r14
   19732:	81 81       	ldd	r24, Z+1	; 0x01
   19734:	81 50       	subi	r24, 0x01	; 1
   19736:	82 37       	cpi	r24, 0x72	; 114
   19738:	08 f0       	brcs	.+2      	; 0x1973c <_Z24Run_Extra_Plot_Operationv+0x30>
   1973a:	8e c0       	rjmp	.+284    	; 0x19858 <_Z24Run_Extra_Plot_Operationv+0x14c>
   1973c:	82 81       	ldd	r24, Z+2	; 0x02
   1973e:	82 30       	cpi	r24, 0x02	; 2
   19740:	19 f0       	breq	.+6      	; 0x19748 <_Z24Run_Extra_Plot_Operationv+0x3c>
   19742:	83 30       	cpi	r24, 0x03	; 3
   19744:	21 f1       	breq	.+72     	; 0x1978e <_Z24Run_Extra_Plot_Operationv+0x82>
   19746:	88 c0       	rjmp	.+272    	; 0x19858 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19748:	8b e1       	ldi	r24, 0x1B	; 27
   1974a:	8c 9f       	mul	r24, r28
   1974c:	f0 01       	movw	r30, r0
   1974e:	8d 9f       	mul	r24, r29
   19750:	f0 0d       	add	r31, r0
   19752:	11 24       	eor	r1, r1
   19754:	e8 51       	subi	r30, 0x18	; 24
   19756:	f2 4f       	sbci	r31, 0xF2	; 242
   19758:	83 81       	ldd	r24, Z+3	; 0x03
   1975a:	94 81       	ldd	r25, Z+4	; 0x04
   1975c:	89 2b       	or	r24, r25
   1975e:	41 f4       	brne	.+16     	; 0x19770 <_Z24Run_Extra_Plot_Operationv+0x64>
   19760:	82 85       	ldd	r24, Z+10	; 0x0a
   19762:	81 11       	cpse	r24, r1
   19764:	05 c0       	rjmp	.+10     	; 0x19770 <_Z24Run_Extra_Plot_Operationv+0x64>
   19766:	81 e0       	ldi	r24, 0x01	; 1
   19768:	82 83       	std	Z+2, r24	; 0x02
   1976a:	14 82       	std	Z+4, r1	; 0x04
   1976c:	13 82       	std	Z+3, r1	; 0x03
   1976e:	44 c0       	rjmp	.+136    	; 0x197f8 <_Z24Run_Extra_Plot_Operationv+0xec>
   19770:	81 2f       	mov	r24, r17
   19772:	cd dd       	rcall	.-1126   	; 0x1930e <_Z26Start_Extra_Plot_Operationh>
   19774:	88 23       	and	r24, r24
   19776:	d1 f0       	breq	.+52     	; 0x197ac <_Z24Run_Extra_Plot_Operationv+0xa0>
   19778:	8b e1       	ldi	r24, 0x1B	; 27
   1977a:	8c 9f       	mul	r24, r28
   1977c:	f0 01       	movw	r30, r0
   1977e:	8d 9f       	mul	r24, r29
   19780:	f0 0d       	add	r31, r0
   19782:	11 24       	eor	r1, r1
   19784:	e8 51       	subi	r30, 0x18	; 24
   19786:	f2 4f       	sbci	r31, 0xF2	; 242
   19788:	83 e0       	ldi	r24, 0x03	; 3
   1978a:	82 83       	std	Z+2, r24	; 0x02
   1978c:	70 c0       	rjmp	.+224    	; 0x1986e <_Z24Run_Extra_Plot_Operationv+0x162>
   1978e:	f7 01       	movw	r30, r14
   19790:	83 81       	ldd	r24, Z+3	; 0x03
   19792:	94 81       	ldd	r25, Z+4	; 0x04
   19794:	00 97       	sbiw	r24, 0x00	; 0
   19796:	19 f1       	breq	.+70     	; 0x197de <_Z24Run_Extra_Plot_Operationv+0xd2>
   19798:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1979c:	22 30       	cpi	r18, 0x02	; 2
   1979e:	71 f5       	brne	.+92     	; 0x197fc <_Z24Run_Extra_Plot_Operationv+0xf0>
   197a0:	18 30       	cpi	r17, 0x08	; 8
   197a2:	09 f4       	brne	.+2      	; 0x197a6 <_Z24Run_Extra_Plot_Operationv+0x9a>
   197a4:	64 c0       	rjmp	.+200    	; 0x1986e <_Z24Run_Extra_Plot_Operationv+0x162>
   197a6:	14 30       	cpi	r17, 0x04	; 4
   197a8:	09 f4       	brne	.+2      	; 0x197ac <_Z24Run_Extra_Plot_Operationv+0xa0>
   197aa:	61 c0       	rjmp	.+194    	; 0x1986e <_Z24Run_Extra_Plot_Operationv+0x162>
   197ac:	8b e1       	ldi	r24, 0x1B	; 27
   197ae:	8c 9f       	mul	r24, r28
   197b0:	f0 01       	movw	r30, r0
   197b2:	8d 9f       	mul	r24, r29
   197b4:	f0 0d       	add	r31, r0
   197b6:	11 24       	eor	r1, r1
   197b8:	e8 51       	subi	r30, 0x18	; 24
   197ba:	f2 4f       	sbci	r31, 0xF2	; 242
   197bc:	81 e0       	ldi	r24, 0x01	; 1
   197be:	82 83       	std	Z+2, r24	; 0x02
   197c0:	14 82       	std	Z+4, r1	; 0x04
   197c2:	13 82       	std	Z+3, r1	; 0x03
   197c4:	81 2f       	mov	r24, r17
   197c6:	5f de       	rcall	.-834    	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
   197c8:	81 e0       	ldi	r24, 0x01	; 1
   197ca:	81 0f       	add	r24, r17
   197cc:	df 91       	pop	r29
   197ce:	cf 91       	pop	r28
   197d0:	1f 91       	pop	r17
   197d2:	ff 90       	pop	r15
   197d4:	ef 90       	pop	r14
   197d6:	df 90       	pop	r13
   197d8:	cf 90       	pop	r12
   197da:	0c 94 56 7b 	jmp	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   197de:	22 85       	ldd	r18, Z+10	; 0x0a
   197e0:	21 11       	cpse	r18, r1
   197e2:	da cf       	rjmp	.-76     	; 0x19798 <_Z24Run_Extra_Plot_Operationv+0x8c>
   197e4:	8b e1       	ldi	r24, 0x1B	; 27
   197e6:	8c 9f       	mul	r24, r28
   197e8:	f0 01       	movw	r30, r0
   197ea:	8d 9f       	mul	r24, r29
   197ec:	f0 0d       	add	r31, r0
   197ee:	11 24       	eor	r1, r1
   197f0:	e8 51       	subi	r30, 0x18	; 24
   197f2:	f2 4f       	sbci	r31, 0xF2	; 242
   197f4:	81 e0       	ldi	r24, 0x01	; 1
   197f6:	82 83       	std	Z+2, r24	; 0x02
   197f8:	8c 2f       	mov	r24, r28
   197fa:	e5 cf       	rjmp	.-54     	; 0x197c6 <_Z24Run_Extra_Plot_Operationv+0xba>
   197fc:	89 2b       	or	r24, r25
   197fe:	69 f0       	breq	.+26     	; 0x1981a <_Z24Run_Extra_Plot_Operationv+0x10e>
   19800:	f6 01       	movw	r30, r12
   19802:	80 81       	ld	r24, Z
   19804:	8f 5f       	subi	r24, 0xFF	; 255
   19806:	83 33       	cpi	r24, 0x33	; 51
   19808:	10 f4       	brcc	.+4      	; 0x1980e <_Z24Run_Extra_Plot_Operationv+0x102>
   1980a:	80 83       	st	Z, r24
   1980c:	06 c0       	rjmp	.+12     	; 0x1981a <_Z24Run_Extra_Plot_Operationv+0x10e>
   1980e:	f6 01       	movw	r30, r12
   19810:	10 82       	st	Z, r1
   19812:	81 e0       	ldi	r24, 0x01	; 1
   19814:	81 0f       	add	r24, r17
   19816:	0e 94 56 7b 	call	0xf6ac	; 0xf6ac <_Z21Exra_Plot_Data_EEPROMh>
   1981a:	13 30       	cpi	r17, 0x03	; 3
   1981c:	e9 f4       	brne	.+58     	; 0x19858 <_Z24Run_Extra_Plot_Operationv+0x14c>
   1981e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   19822:	98 2f       	mov	r25, r24
   19824:	97 7f       	andi	r25, 0xF7	; 247
   19826:	91 30       	cpi	r25, 0x01	; 1
   19828:	29 f0       	breq	.+10     	; 0x19834 <_Z24Run_Extra_Plot_Operationv+0x128>
   1982a:	84 30       	cpi	r24, 0x04	; 4
   1982c:	19 f0       	breq	.+6      	; 0x19834 <_Z24Run_Extra_Plot_Operationv+0x128>
   1982e:	8c 50       	subi	r24, 0x0C	; 12
   19830:	82 30       	cpi	r24, 0x02	; 2
   19832:	90 f4       	brcc	.+36     	; 0x19858 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19834:	6d e0       	ldi	r22, 0x0D	; 13
   19836:	70 e3       	ldi	r23, 0x30	; 48
   19838:	86 ec       	ldi	r24, 0xC6	; 198
   1983a:	94 e1       	ldi	r25, 0x14	; 20
   1983c:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19840:	86 ec       	ldi	r24, 0xC6	; 198
   19842:	94 e1       	ldi	r25, 0x14	; 20
   19844:	d3 d7       	rcall	.+4006   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19846:	83 e0       	ldi	r24, 0x03	; 3
   19848:	df 91       	pop	r29
   1984a:	cf 91       	pop	r28
   1984c:	1f 91       	pop	r17
   1984e:	ff 90       	pop	r15
   19850:	ef 90       	pop	r14
   19852:	df 90       	pop	r13
   19854:	cf 90       	pop	r12
   19856:	17 ce       	rjmp	.-978    	; 0x19486 <_Z25Stop_Extra_Plot_Operationh>
   19858:	21 96       	adiw	r28, 0x01	; 1
   1985a:	fb e1       	ldi	r31, 0x1B	; 27
   1985c:	ef 0e       	add	r14, r31
   1985e:	f1 1c       	adc	r15, r1
   19860:	8f ef       	ldi	r24, 0xFF	; 255
   19862:	c8 1a       	sub	r12, r24
   19864:	d8 0a       	sbc	r13, r24
   19866:	ce 30       	cpi	r28, 0x0E	; 14
   19868:	d1 05       	cpc	r29, r1
   1986a:	09 f0       	breq	.+2      	; 0x1986e <_Z24Run_Extra_Plot_Operationv+0x162>
   1986c:	60 cf       	rjmp	.-320    	; 0x1972e <_Z24Run_Extra_Plot_Operationv+0x22>
   1986e:	df 91       	pop	r29
   19870:	cf 91       	pop	r28
   19872:	1f 91       	pop	r17
   19874:	ff 90       	pop	r15
   19876:	ef 90       	pop	r14
   19878:	df 90       	pop	r13
   1987a:	cf 90       	pop	r12
   1987c:	08 95       	ret

0001987e <_Z20Handle_Wireless_Pumpv>:
   1987e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   19882:	88 23       	and	r24, r24
   19884:	09 f4       	brne	.+2      	; 0x19888 <_Z20Handle_Wireless_Pumpv+0xa>
   19886:	7d c0       	rjmp	.+250    	; 0x19982 <_Z20Handle_Wireless_Pumpv+0x104>
   19888:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1988c:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
   19890:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
   19894:	21 11       	cpse	r18, r1
   19896:	09 c0       	rjmp	.+18     	; 0x198aa <_Z20Handle_Wireless_Pumpv+0x2c>
   19898:	20 91 52 0e 	lds	r18, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   1989c:	21 11       	cpse	r18, r1
   1989e:	05 c0       	rjmp	.+10     	; 0x198aa <_Z20Handle_Wireless_Pumpv+0x2c>
   198a0:	20 91 6d 0e 	lds	r18, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   198a4:	22 23       	and	r18, r18
   198a6:	09 f4       	brne	.+2      	; 0x198aa <_Z20Handle_Wireless_Pumpv+0x2c>
   198a8:	40 c0       	rjmp	.+128    	; 0x1992a <_Z20Handle_Wireless_Pumpv+0xac>
   198aa:	89 2b       	or	r24, r25
   198ac:	09 f0       	breq	.+2      	; 0x198b0 <_Z20Handle_Wireless_Pumpv+0x32>
   198ae:	69 c0       	rjmp	.+210    	; 0x19982 <_Z20Handle_Wireless_Pumpv+0x104>
   198b0:	86 e9       	ldi	r24, 0x96	; 150
   198b2:	90 e0       	ldi	r25, 0x00	; 0
   198b4:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   198b8:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   198bc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   198c0:	81 30       	cpi	r24, 0x01	; 1
   198c2:	49 f4       	brne	.+18     	; 0x198d6 <_Z20Handle_Wireless_Pumpv+0x58>
   198c4:	65 e5       	ldi	r22, 0x55	; 85
   198c6:	7d e2       	ldi	r23, 0x2D	; 45
   198c8:	86 ec       	ldi	r24, 0xC6	; 198
   198ca:	94 e1       	ldi	r25, 0x14	; 20
   198cc:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   198d0:	86 ec       	ldi	r24, 0xC6	; 198
   198d2:	94 e1       	ldi	r25, 0x14	; 20
   198d4:	8b d7       	rcall	.+3862   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   198d6:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   198da:	62 50       	subi	r22, 0x02	; 2
   198dc:	82 e0       	ldi	r24, 0x02	; 2
   198de:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   198e2:	88 23       	and	r24, r24
   198e4:	21 f0       	breq	.+8      	; 0x198ee <_Z20Handle_Wireless_Pumpv+0x70>
   198e6:	81 e0       	ldi	r24, 0x01	; 1
   198e8:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   198ec:	0e c0       	rjmp	.+28     	; 0x1990a <_Z20Handle_Wireless_Pumpv+0x8c>
   198ee:	86 e0       	ldi	r24, 0x06	; 6
   198f0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   198f4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   198f8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   198fc:	90 68       	ori	r25, 0x80	; 128
   198fe:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19902:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19906:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   1990a:	6c e7       	ldi	r22, 0x7C	; 124
   1990c:	74 e1       	ldi	r23, 0x14	; 20
   1990e:	8d ea       	ldi	r24, 0xAD	; 173
   19910:	9c e0       	ldi	r25, 0x0C	; 12
   19912:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19916:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1991a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1991e:	84 60       	ori	r24, 0x04	; 4
   19920:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19924:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19928:	08 95       	ret
   1992a:	89 2b       	or	r24, r25
   1992c:	51 f5       	brne	.+84     	; 0x19982 <_Z20Handle_Wireless_Pumpv+0x104>
   1992e:	88 e5       	ldi	r24, 0x58	; 88
   19930:	92 e0       	ldi	r25, 0x02	; 2
   19932:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   19936:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   1993a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1993e:	81 30       	cpi	r24, 0x01	; 1
   19940:	49 f4       	brne	.+18     	; 0x19954 <_Z20Handle_Wireless_Pumpv+0xd6>
   19942:	66 e2       	ldi	r22, 0x26	; 38
   19944:	7d e2       	ldi	r23, 0x2D	; 45
   19946:	86 ec       	ldi	r24, 0xC6	; 198
   19948:	94 e1       	ldi	r25, 0x14	; 20
   1994a:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1994e:	86 ec       	ldi	r24, 0xC6	; 198
   19950:	94 e1       	ldi	r25, 0x14	; 20
   19952:	4c d7       	rcall	.+3736   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19954:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19958:	62 50       	subi	r22, 0x02	; 2
   1995a:	84 e0       	ldi	r24, 0x04	; 4
   1995c:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   19960:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19964:	6c e7       	ldi	r22, 0x7C	; 124
   19966:	74 e1       	ldi	r23, 0x14	; 20
   19968:	8d ea       	ldi	r24, 0xAD	; 173
   1996a:	9c e0       	ldi	r25, 0x0C	; 12
   1996c:	0e 94 a6 86 	call	0x10d4c	; 0x10d4c <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19970:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19974:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19978:	84 60       	ori	r24, 0x04	; 4
   1997a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1997e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19982:	08 95       	ret

00019984 <_Z24Pump_Status_List_Monitorv>:
   19984:	0f 93       	push	r16
   19986:	1f 93       	push	r17
   19988:	cf 93       	push	r28
   1998a:	df 93       	push	r29
   1998c:	80 91 d0 0d 	lds	r24, 0x0DD0	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   19990:	89 37       	cpi	r24, 0x79	; 121
   19992:	08 f4       	brcc	.+2      	; 0x19996 <_Z24Pump_Status_List_Monitorv+0x12>
   19994:	4a c0       	rjmp	.+148    	; 0x19a2a <_Z24Pump_Status_List_Monitorv+0xa6>
   19996:	20 91 98 14 	lds	r18, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   1999a:	30 e0       	ldi	r19, 0x00	; 0
   1999c:	e3 e9       	ldi	r30, 0x93	; 147
   1999e:	f4 e1       	ldi	r31, 0x14	; 20
   199a0:	80 e0       	ldi	r24, 0x00	; 0
   199a2:	90 e0       	ldi	r25, 0x00	; 0
   199a4:	08 2f       	mov	r16, r24
   199a6:	ec 01       	movw	r28, r24
   199a8:	11 91       	ld	r17, Z+
   199aa:	01 96       	adiw	r24, 0x01	; 1
   199ac:	11 30       	cpi	r17, 0x01	; 1
   199ae:	c1 f5       	brne	.+112    	; 0x19a20 <_Z24Pump_Status_List_Monitorv+0x9c>
   199b0:	28 17       	cp	r18, r24
   199b2:	39 07       	cpc	r19, r25
   199b4:	a9 f1       	breq	.+106    	; 0x19a20 <_Z24Pump_Status_List_Monitorv+0x9c>
   199b6:	10 92 d0 0d 	sts	0x0DD0, r1	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   199ba:	01 11       	cpse	r16, r1
   199bc:	13 c0       	rjmp	.+38     	; 0x199e4 <_Z24Pump_Status_List_Monitorv+0x60>
   199be:	8a e0       	ldi	r24, 0x0A	; 10
   199c0:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   199c4:	01 97       	sbiw	r24, 0x01	; 1
   199c6:	21 f0       	breq	.+8      	; 0x199d0 <_Z24Pump_Status_List_Monitorv+0x4c>
   199c8:	61 e0       	ldi	r22, 0x01	; 1
   199ca:	8a e0       	ldi	r24, 0x0A	; 10
   199cc:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   199d0:	8b e0       	ldi	r24, 0x0B	; 11
   199d2:	0e 94 4f d9 	call	0x1b29e	; 0x1b29e <digitalRead>
   199d6:	01 97       	sbiw	r24, 0x01	; 1
   199d8:	c9 f0       	breq	.+50     	; 0x19a0c <_Z24Pump_Status_List_Monitorv+0x88>
   199da:	61 e0       	ldi	r22, 0x01	; 1
   199dc:	8b e0       	ldi	r24, 0x0B	; 11
   199de:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   199e2:	14 c0       	rjmp	.+40     	; 0x19a0c <_Z24Pump_Status_List_Monitorv+0x88>
   199e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   199e8:	81 30       	cpi	r24, 0x01	; 1
   199ea:	49 f4       	brne	.+18     	; 0x199fe <_Z24Pump_Status_List_Monitorv+0x7a>
   199ec:	6f e4       	ldi	r22, 0x4F	; 79
   199ee:	79 e2       	ldi	r23, 0x29	; 41
   199f0:	86 ec       	ldi	r24, 0xC6	; 198
   199f2:	94 e1       	ldi	r25, 0x14	; 20
   199f4:	0e 94 87 d5 	call	0x1ab0e	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   199f8:	86 ec       	ldi	r24, 0xC6	; 198
   199fa:	94 e1       	ldi	r25, 0x14	; 20
   199fc:	f7 d6       	rcall	.+3566   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   199fe:	6f ef       	ldi	r22, 0xFF	; 255
   19a00:	60 0f       	add	r22, r16
   19a02:	84 e0       	ldi	r24, 0x04	; 4
   19a04:	0e 94 95 be 	call	0x17d2a	; 0x17d2a <_Z20Wireless_Pump_On_Offhh>
   19a08:	88 23       	and	r24, r24
   19a0a:	31 f0       	breq	.+12     	; 0x19a18 <_Z24Pump_Status_List_Monitorv+0x94>
   19a0c:	cd 56       	subi	r28, 0x6D	; 109
   19a0e:	db 4e       	sbci	r29, 0xEB	; 235
   19a10:	18 82       	st	Y, r1
   19a12:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   19a16:	0d c0       	rjmp	.+26     	; 0x19a32 <_Z24Pump_Status_List_Monitorv+0xae>
   19a18:	0e 94 1f 87 	call	0x10e3e	; 0x10e3e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   19a1c:	10 e0       	ldi	r17, 0x00	; 0
   19a1e:	09 c0       	rjmp	.+18     	; 0x19a32 <_Z24Pump_Status_List_Monitorv+0xae>
   19a20:	84 30       	cpi	r24, 0x04	; 4
   19a22:	91 05       	cpc	r25, r1
   19a24:	09 f0       	breq	.+2      	; 0x19a28 <_Z24Pump_Status_List_Monitorv+0xa4>
   19a26:	be cf       	rjmp	.-132    	; 0x199a4 <_Z24Pump_Status_List_Monitorv+0x20>
   19a28:	03 c0       	rjmp	.+6      	; 0x19a30 <_Z24Pump_Status_List_Monitorv+0xac>
   19a2a:	8f 5f       	subi	r24, 0xFF	; 255
   19a2c:	80 93 d0 0d 	sts	0x0DD0, r24	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   19a30:	01 c0       	rjmp	.+2      	; 0x19a34 <_Z24Pump_Status_List_Monitorv+0xb0>
   19a32:	81 2f       	mov	r24, r17
   19a34:	df 91       	pop	r29
   19a36:	cf 91       	pop	r28
   19a38:	1f 91       	pop	r17
   19a3a:	0f 91       	pop	r16
   19a3c:	08 95       	ret

00019a3e <_Z24Plot_Status_List_Monitorv>:
   19a3e:	2f 92       	push	r2
   19a40:	3f 92       	push	r3
   19a42:	4f 92       	push	r4
   19a44:	5f 92       	push	r5
   19a46:	6f 92       	push	r6
   19a48:	7f 92       	push	r7
   19a4a:	8f 92       	push	r8
   19a4c:	9f 92       	push	r9
   19a4e:	af 92       	push	r10
   19a50:	bf 92       	push	r11
   19a52:	cf 92       	push	r12
   19a54:	df 92       	push	r13
   19a56:	ef 92       	push	r14
   19a58:	ff 92       	push	r15
   19a5a:	0f 93       	push	r16
   19a5c:	1f 93       	push	r17
   19a5e:	cf 93       	push	r28
   19a60:	df 93       	push	r29
   19a62:	cd b7       	in	r28, 0x3d	; 61
   19a64:	de b7       	in	r29, 0x3e	; 62
   19a66:	2b 97       	sbiw	r28, 0x0b	; 11
   19a68:	0f b6       	in	r0, 0x3f	; 63
   19a6a:	f8 94       	cli
   19a6c:	de bf       	out	0x3e, r29	; 62
   19a6e:	0f be       	out	0x3f, r0	; 63
   19a70:	cd bf       	out	0x3d, r28	; 61
   19a72:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   19a76:	88 23       	and	r24, r24
   19a78:	09 f4       	brne	.+2      	; 0x19a7c <_Z24Plot_Status_List_Monitorv+0x3e>
   19a7a:	71 c3       	rjmp	.+1762   	; 0x1a15e <_Z24Plot_Status_List_Monitorv+0x720>
   19a7c:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   19a80:	88 23       	and	r24, r24
   19a82:	49 f0       	breq	.+18     	; 0x19a96 <_Z24Plot_Status_List_Monitorv+0x58>
   19a84:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19a88:	81 11       	cpse	r24, r1
   19a8a:	05 c0       	rjmp	.+10     	; 0x19a96 <_Z24Plot_Status_List_Monitorv+0x58>
   19a8c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19a90:	82 30       	cpi	r24, 0x02	; 2
   19a92:	09 f0       	breq	.+2      	; 0x19a96 <_Z24Plot_Status_List_Monitorv+0x58>
   19a94:	64 c3       	rjmp	.+1736   	; 0x1a15e <_Z24Plot_Status_List_Monitorv+0x720>
   19a96:	ef e7       	ldi	r30, 0x7F	; 127
   19a98:	f4 e1       	ldi	r31, 0x14	; 20
   19a9a:	e1 2c       	mov	r14, r1
   19a9c:	f1 2c       	mov	r15, r1
   19a9e:	de 2c       	mov	r13, r14
   19aa0:	c1 90       	ld	r12, Z+
   19aa2:	21 e0       	ldi	r18, 0x01	; 1
   19aa4:	c2 12       	cpse	r12, r18
   19aa6:	53 c3       	rjmp	.+1702   	; 0x1a14e <_Z24Plot_Status_List_Monitorv+0x710>
   19aa8:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19aac:	82 2f       	mov	r24, r18
   19aae:	90 e0       	ldi	r25, 0x00	; 0
   19ab0:	01 97       	sbiw	r24, 0x01	; 1
   19ab2:	e8 16       	cp	r14, r24
   19ab4:	f9 06       	cpc	r15, r25
   19ab6:	09 f4       	brne	.+2      	; 0x19aba <_Z24Plot_Status_List_Monitorv+0x7c>
   19ab8:	53 c3       	rjmp	.+1702   	; 0x1a160 <_Z24Plot_Status_List_Monitorv+0x722>
   19aba:	8e 01       	movw	r16, r28
   19abc:	0f 5f       	subi	r16, 0xFF	; 255
   19abe:	1f 4f       	sbci	r17, 0xFF	; 255
   19ac0:	22 23       	and	r18, r18
   19ac2:	09 f4       	brne	.+2      	; 0x19ac6 <_Z24Plot_Status_List_Monitorv+0x88>
   19ac4:	4a c0       	rjmp	.+148    	; 0x19b5a <_Z24Plot_Status_List_Monitorv+0x11c>
   19ac6:	25 e0       	ldi	r18, 0x05	; 5
   19ac8:	d8 01       	movw	r26, r16
   19aca:	1d 92       	st	X+, r1
   19acc:	2a 95       	dec	r18
   19ace:	e9 f7       	brne	.-6      	; 0x19aca <_Z24Plot_Status_List_Monitorv+0x8c>
   19ad0:	26 e0       	ldi	r18, 0x06	; 6
   19ad2:	2e 9d       	mul	r18, r14
   19ad4:	b0 01       	movw	r22, r0
   19ad6:	2f 9d       	mul	r18, r15
   19ad8:	70 0d       	add	r23, r0
   19ada:	11 24       	eor	r1, r1
   19adc:	28 9f       	mul	r18, r24
   19ade:	f0 01       	movw	r30, r0
   19ae0:	29 9f       	mul	r18, r25
   19ae2:	f0 0d       	add	r31, r0
   19ae4:	11 24       	eor	r1, r1
   19ae6:	80 e0       	ldi	r24, 0x00	; 0
   19ae8:	90 e0       	ldi	r25, 0x00	; 0
   19aea:	40 e0       	ldi	r20, 0x00	; 0
   19aec:	db 01       	movw	r26, r22
   19aee:	a8 0f       	add	r26, r24
   19af0:	b9 1f       	adc	r27, r25
   19af2:	a2 5b       	subi	r26, 0xB2	; 178
   19af4:	b2 4f       	sbci	r27, 0xF2	; 242
   19af6:	11 96       	adiw	r26, 0x01	; 1
   19af8:	5c 91       	ld	r21, X
   19afa:	20 e0       	ldi	r18, 0x00	; 0
   19afc:	30 e0       	ldi	r19, 0x00	; 0
   19afe:	b1 2c       	mov	r11, r1
   19b00:	d9 01       	movw	r26, r18
   19b02:	ae 0f       	add	r26, r30
   19b04:	bf 1f       	adc	r27, r31
   19b06:	a2 5b       	subi	r26, 0xB2	; 178
   19b08:	b2 4f       	sbci	r27, 0xF2	; 242
   19b0a:	11 96       	adiw	r26, 0x01	; 1
   19b0c:	ac 91       	ld	r26, X
   19b0e:	5a 13       	cpse	r21, r26
   19b10:	02 c0       	rjmp	.+4      	; 0x19b16 <_Z24Plot_Status_List_Monitorv+0xd8>
   19b12:	bb 24       	eor	r11, r11
   19b14:	b3 94       	inc	r11
   19b16:	2f 5f       	subi	r18, 0xFF	; 255
   19b18:	3f 4f       	sbci	r19, 0xFF	; 255
   19b1a:	25 30       	cpi	r18, 0x05	; 5
   19b1c:	31 05       	cpc	r19, r1
   19b1e:	81 f7       	brne	.-32     	; 0x19b00 <_Z24Plot_Status_List_Monitorv+0xc2>
   19b20:	b1 10       	cpse	r11, r1
   19b22:	05 c0       	rjmp	.+10     	; 0x19b2e <_Z24Plot_Status_List_Monitorv+0xf0>
   19b24:	d8 01       	movw	r26, r16
   19b26:	a4 0f       	add	r26, r20
   19b28:	b1 1d       	adc	r27, r1
   19b2a:	5c 93       	st	X, r21
   19b2c:	4f 5f       	subi	r20, 0xFF	; 255
   19b2e:	01 96       	adiw	r24, 0x01	; 1
   19b30:	85 30       	cpi	r24, 0x05	; 5
   19b32:	91 05       	cpc	r25, r1
   19b34:	d9 f6       	brne	.-74     	; 0x19aec <_Z24Plot_Status_List_Monitorv+0xae>
   19b36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19b3a:	fe 01       	movw	r30, r28
   19b3c:	36 96       	adiw	r30, 0x06	; 6
   19b3e:	5f 01       	movw	r10, r30
   19b40:	81 30       	cpi	r24, 0x01	; 1
   19b42:	09 f0       	breq	.+2      	; 0x19b46 <_Z24Plot_Status_List_Monitorv+0x108>
   19b44:	3f c0       	rjmp	.+126    	; 0x19bc4 <_Z24Plot_Status_List_Monitorv+0x186>
   19b46:	6f ed       	ldi	r22, 0xDF	; 223
   19b48:	7a e2       	ldi	r23, 0x2A	; 42
   19b4a:	86 ec       	ldi	r24, 0xC6	; 198
   19b4c:	94 e1       	ldi	r25, 0x14	; 20
   19b4e:	df d7       	rcall	.+4030   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19b50:	86 ec       	ldi	r24, 0xC6	; 198
   19b52:	94 e1       	ldi	r25, 0x14	; 20
   19b54:	4b d6       	rcall	.+3222   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19b56:	48 01       	movw	r8, r16
   19b58:	15 c0       	rjmp	.+42     	; 0x19b84 <_Z24Plot_Status_List_Monitorv+0x146>
   19b5a:	d8 01       	movw	r26, r16
   19b5c:	86 e0       	ldi	r24, 0x06	; 6
   19b5e:	8e 9d       	mul	r24, r14
   19b60:	a0 01       	movw	r20, r0
   19b62:	8f 9d       	mul	r24, r15
   19b64:	50 0d       	add	r21, r0
   19b66:	11 24       	eor	r1, r1
   19b68:	80 e0       	ldi	r24, 0x00	; 0
   19b6a:	90 e0       	ldi	r25, 0x00	; 0
   19b6c:	fa 01       	movw	r30, r20
   19b6e:	e8 0f       	add	r30, r24
   19b70:	f9 1f       	adc	r31, r25
   19b72:	e2 5b       	subi	r30, 0xB2	; 178
   19b74:	f2 4f       	sbci	r31, 0xF2	; 242
   19b76:	21 81       	ldd	r18, Z+1	; 0x01
   19b78:	2d 93       	st	X+, r18
   19b7a:	01 96       	adiw	r24, 0x01	; 1
   19b7c:	85 30       	cpi	r24, 0x05	; 5
   19b7e:	91 05       	cpc	r25, r1
   19b80:	a9 f7       	brne	.-22     	; 0x19b6c <_Z24Plot_Status_List_Monitorv+0x12e>
   19b82:	d9 cf       	rjmp	.-78     	; 0x19b36 <_Z24Plot_Status_List_Monitorv+0xf8>
   19b84:	d4 01       	movw	r26, r8
   19b86:	6d 91       	ld	r22, X+
   19b88:	4d 01       	movw	r8, r26
   19b8a:	4a e0       	ldi	r20, 0x0A	; 10
   19b8c:	50 e0       	ldi	r21, 0x00	; 0
   19b8e:	86 ec       	ldi	r24, 0xC6	; 198
   19b90:	94 e1       	ldi	r25, 0x14	; 20
   19b92:	0e 94 fd d5 	call	0x1abfa	; 0x1abfa <_ZN5Print5printEhi>
   19b96:	6d ed       	ldi	r22, 0xDD	; 221
   19b98:	7a e2       	ldi	r23, 0x2A	; 42
   19b9a:	86 ec       	ldi	r24, 0xC6	; 198
   19b9c:	94 e1       	ldi	r25, 0x14	; 20
   19b9e:	86 d7       	rcall	.+3852   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19ba0:	a8 14       	cp	r10, r8
   19ba2:	b9 04       	cpc	r11, r9
   19ba4:	79 f7       	brne	.-34     	; 0x19b84 <_Z24Plot_Status_List_Monitorv+0x146>
   19ba6:	6d ec       	ldi	r22, 0xCD	; 205
   19ba8:	7a e2       	ldi	r23, 0x2A	; 42
   19baa:	86 ec       	ldi	r24, 0xC6	; 198
   19bac:	94 e1       	ldi	r25, 0x14	; 20
   19bae:	7e d7       	rcall	.+3836   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19bb0:	4a e0       	ldi	r20, 0x0A	; 10
   19bb2:	50 e0       	ldi	r21, 0x00	; 0
   19bb4:	6d 2d       	mov	r22, r13
   19bb6:	86 ec       	ldi	r24, 0xC6	; 198
   19bb8:	94 e1       	ldi	r25, 0x14	; 20
   19bba:	0e 94 03 d6 	call	0x1ac06	; 0x1ac06 <_ZN5Print7printlnEhi>
   19bbe:	86 ec       	ldi	r24, 0xC6	; 198
   19bc0:	94 e1       	ldi	r25, 0x14	; 20
   19bc2:	14 d6       	rcall	.+3112   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19bc4:	28 01       	movw	r4, r16
   19bc6:	d1 2c       	mov	r13, r1
   19bc8:	ad e0       	ldi	r26, 0x0D	; 13
   19bca:	9a 2e       	mov	r9, r26
   19bcc:	b0 ed       	ldi	r27, 0xD0	; 208
   19bce:	2b 2e       	mov	r2, r27
   19bd0:	bf e0       	ldi	r27, 0x0F	; 15
   19bd2:	3b 2e       	mov	r3, r27
   19bd4:	f2 01       	movw	r30, r4
   19bd6:	71 90       	ld	r7, Z+
   19bd8:	2f 01       	movw	r4, r30
   19bda:	8f ef       	ldi	r24, 0xFF	; 255
   19bdc:	87 0d       	add	r24, r7
   19bde:	82 31       	cpi	r24, 0x12	; 18
   19be0:	08 f0       	brcs	.+2      	; 0x19be4 <_Z24Plot_Status_List_Monitorv+0x1a6>
   19be2:	8d c2       	rjmp	.+1306   	; 0x1a0fe <_Z24Plot_Status_List_Monitorv+0x6c0>
   19be4:	f3 e0       	ldi	r31, 0x03	; 3
   19be6:	f7 15       	cp	r31, r7
   19be8:	90 f4       	brcc	.+36     	; 0x19c0e <_Z24Plot_Status_List_Monitorv+0x1d0>
   19bea:	2b ea       	ldi	r18, 0xAB	; 171
   19bec:	72 9e       	mul	r7, r18
   19bee:	81 2c       	mov	r8, r1
   19bf0:	11 24       	eor	r1, r1
   19bf2:	88 2d       	mov	r24, r8
   19bf4:	86 95       	lsr	r24
   19bf6:	98 2f       	mov	r25, r24
   19bf8:	99 0f       	add	r25, r25
   19bfa:	89 0f       	add	r24, r25
   19bfc:	78 1a       	sub	r7, r24
   19bfe:	86 94       	lsr	r8
   19c00:	77 20       	and	r7, r7
   19c02:	11 f0       	breq	.+4      	; 0x19c08 <_Z24Plot_Status_List_Monitorv+0x1ca>
   19c04:	83 94       	inc	r8
   19c06:	05 c0       	rjmp	.+10     	; 0x19c12 <_Z24Plot_Status_List_Monitorv+0x1d4>
   19c08:	f3 e0       	ldi	r31, 0x03	; 3
   19c0a:	7f 2e       	mov	r7, r31
   19c0c:	02 c0       	rjmp	.+4      	; 0x19c12 <_Z24Plot_Status_List_Monitorv+0x1d4>
   19c0e:	88 24       	eor	r8, r8
   19c10:	83 94       	inc	r8
   19c12:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19c16:	81 30       	cpi	r24, 0x01	; 1
   19c18:	71 f4       	brne	.+28     	; 0x19c36 <_Z24Plot_Status_List_Monitorv+0x1f8>
   19c1a:	69 eb       	ldi	r22, 0xB9	; 185
   19c1c:	7a e2       	ldi	r23, 0x2A	; 42
   19c1e:	86 ec       	ldi	r24, 0xC6	; 198
   19c20:	94 e1       	ldi	r25, 0x14	; 20
   19c22:	44 d7       	rcall	.+3720   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19c24:	4a e0       	ldi	r20, 0x0A	; 10
   19c26:	50 e0       	ldi	r21, 0x00	; 0
   19c28:	68 2d       	mov	r22, r8
   19c2a:	86 ec       	ldi	r24, 0xC6	; 198
   19c2c:	94 e1       	ldi	r25, 0x14	; 20
   19c2e:	eb d7       	rcall	.+4054   	; 0x1ac06 <_ZN5Print7printlnEhi>
   19c30:	86 ec       	ldi	r24, 0xC6	; 198
   19c32:	94 e1       	ldi	r25, 0x14	; 20
   19c34:	db d5       	rcall	.+2998   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19c36:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   19c3a:	81 11       	cpse	r24, r1
   19c3c:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   19c40:	a5 ef       	ldi	r26, 0xF5	; 245
   19c42:	b3 e1       	ldi	r27, 0x13	; 19
   19c44:	e4 e1       	ldi	r30, 0x14	; 20
   19c46:	1d 92       	st	X+, r1
   19c48:	ea 95       	dec	r30
   19c4a:	e9 f7       	brne	.-6      	; 0x19c46 <_Z24Plot_Status_List_Monitorv+0x208>
   19c4c:	88 2d       	mov	r24, r8
   19c4e:	90 e0       	ldi	r25, 0x00	; 0
   19c50:	01 97       	sbiw	r24, 0x01	; 1
   19c52:	f7 e0       	ldi	r31, 0x07	; 7
   19c54:	f8 9f       	mul	r31, r24
   19c56:	90 01       	movw	r18, r0
   19c58:	f9 9f       	mul	r31, r25
   19c5a:	30 0d       	add	r19, r0
   19c5c:	11 24       	eor	r1, r1
   19c5e:	22 55       	subi	r18, 0x52	; 82
   19c60:	3c 4e       	sbci	r19, 0xEC	; 236
   19c62:	f9 01       	movw	r30, r18
   19c64:	ec 58       	subi	r30, 0x8C	; 140
   19c66:	ff 4f       	sbci	r31, 0xFF	; 255
   19c68:	80 81       	ld	r24, Z
   19c6a:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   19c6e:	31 96       	adiw	r30, 0x01	; 1
   19c70:	80 81       	ld	r24, Z
   19c72:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   19c76:	31 96       	adiw	r30, 0x01	; 1
   19c78:	80 81       	ld	r24, Z
   19c7a:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   19c7e:	31 96       	adiw	r30, 0x01	; 1
   19c80:	80 81       	ld	r24, Z
   19c82:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   19c86:	31 96       	adiw	r30, 0x01	; 1
   19c88:	80 81       	ld	r24, Z
   19c8a:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   19c8e:	31 96       	adiw	r30, 0x01	; 1
   19c90:	80 81       	ld	r24, Z
   19c92:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   19c96:	42 e0       	ldi	r20, 0x02	; 2
   19c98:	40 93 fb 13 	sts	0x13FB, r20	; 0x8013fb <_sRuble_Parameters+0x4d>
   19c9c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19ca0:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   19ca4:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   19ca8:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   19cac:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   19cb0:	40 e0       	ldi	r20, 0x00	; 0
   19cb2:	50 e0       	ldi	r21, 0x00	; 0
   19cb4:	64 2e       	mov	r6, r20
   19cb6:	81 2c       	mov	r8, r1
   19cb8:	71 2c       	mov	r7, r1
   19cba:	94 9e       	mul	r9, r20
   19cbc:	b0 01       	movw	r22, r0
   19cbe:	95 9e       	mul	r9, r21
   19cc0:	70 0d       	add	r23, r0
   19cc2:	11 24       	eor	r1, r1
   19cc4:	6b 5e       	subi	r22, 0xEB	; 235
   19cc6:	73 4f       	sbci	r23, 0xF3	; 243
   19cc8:	88 2d       	mov	r24, r8
   19cca:	90 e0       	ldi	r25, 0x00	; 0
   19ccc:	fb 01       	movw	r30, r22
   19cce:	e8 0f       	add	r30, r24
   19cd0:	f9 1f       	adc	r31, r25
   19cd2:	82 0f       	add	r24, r18
   19cd4:	93 1f       	adc	r25, r19
   19cd6:	dc 01       	movw	r26, r24
   19cd8:	ac 58       	subi	r26, 0x8C	; 140
   19cda:	bf 4f       	sbci	r27, 0xFF	; 255
   19cdc:	81 81       	ldd	r24, Z+1	; 0x01
   19cde:	9c 91       	ld	r25, X
   19ce0:	89 17       	cp	r24, r25
   19ce2:	19 f0       	breq	.+6      	; 0x19cea <_Z24Plot_Status_List_Monitorv+0x2ac>
   19ce4:	e6 e0       	ldi	r30, 0x06	; 6
   19ce6:	8e 2e       	mov	r8, r30
   19ce8:	71 2c       	mov	r7, r1
   19cea:	73 94       	inc	r7
   19cec:	83 94       	inc	r8
   19cee:	85 e0       	ldi	r24, 0x05	; 5
   19cf0:	88 15       	cp	r24, r8
   19cf2:	50 f7       	brcc	.-44     	; 0x19cc8 <_Z24Plot_Status_List_Monitorv+0x28a>
   19cf4:	a6 e0       	ldi	r26, 0x06	; 6
   19cf6:	7a 16       	cp	r7, r26
   19cf8:	31 f0       	breq	.+12     	; 0x19d06 <_Z24Plot_Status_List_Monitorv+0x2c8>
   19cfa:	4f 5f       	subi	r20, 0xFF	; 255
   19cfc:	5f 4f       	sbci	r21, 0xFF	; 255
   19cfe:	46 30       	cpi	r20, 0x06	; 6
   19d00:	51 05       	cpc	r21, r1
   19d02:	c1 f6       	brne	.-80     	; 0x19cb4 <_Z24Plot_Status_List_Monitorv+0x276>
   19d04:	01 c0       	rjmp	.+2      	; 0x19d08 <_Z24Plot_Status_List_Monitorv+0x2ca>
   19d06:	d6 2c       	mov	r13, r6
   19d08:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19d0c:	81 30       	cpi	r24, 0x01	; 1
   19d0e:	71 f4       	brne	.+28     	; 0x19d2c <_Z24Plot_Status_List_Monitorv+0x2ee>
   19d10:	63 ea       	ldi	r22, 0xA3	; 163
   19d12:	7a e2       	ldi	r23, 0x2A	; 42
   19d14:	86 ec       	ldi	r24, 0xC6	; 198
   19d16:	94 e1       	ldi	r25, 0x14	; 20
   19d18:	c9 d6       	rcall	.+3474   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19d1a:	4a e0       	ldi	r20, 0x0A	; 10
   19d1c:	50 e0       	ldi	r21, 0x00	; 0
   19d1e:	6d 2d       	mov	r22, r13
   19d20:	86 ec       	ldi	r24, 0xC6	; 198
   19d22:	94 e1       	ldi	r25, 0x14	; 20
   19d24:	6a d7       	rcall	.+3796   	; 0x1abfa <_ZN5Print5printEhi>
   19d26:	86 ec       	ldi	r24, 0xC6	; 198
   19d28:	94 e1       	ldi	r25, 0x14	; 20
   19d2a:	60 d5       	rcall	.+2752   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19d2c:	bd e0       	ldi	r27, 0x0D	; 13
   19d2e:	db 9e       	mul	r13, r27
   19d30:	30 01       	movw	r6, r0
   19d32:	11 24       	eor	r1, r1
   19d34:	81 2c       	mov	r8, r1
   19d36:	9d 9c       	mul	r9, r13
   19d38:	c0 01       	movw	r24, r0
   19d3a:	11 24       	eor	r1, r1
   19d3c:	9c 01       	movw	r18, r24
   19d3e:	2b 5e       	subi	r18, 0xEB	; 235
   19d40:	33 4f       	sbci	r19, 0xF3	; 243
   19d42:	f9 01       	movw	r30, r18
   19d44:	3b 96       	adiw	r30, 0x0b	; 11
   19d46:	ff 83       	std	Y+7, r31	; 0x07
   19d48:	ee 83       	std	Y+6, r30	; 0x06
   19d4a:	a9 01       	movw	r20, r18
   19d4c:	48 5f       	subi	r20, 0xF8	; 248
   19d4e:	5f 4f       	sbci	r21, 0xFF	; 255
   19d50:	59 87       	std	Y+9, r21	; 0x09
   19d52:	48 87       	std	Y+8, r20	; 0x08
   19d54:	dc 01       	movw	r26, r24
   19d56:	aa 5e       	subi	r26, 0xEA	; 234
   19d58:	b3 4f       	sbci	r27, 0xF3	; 243
   19d5a:	bb 87       	std	Y+11, r27	; 0x0b
   19d5c:	aa 87       	std	Y+10, r26	; 0x0a
   19d5e:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   19d62:	88 23       	and	r24, r24
   19d64:	99 f0       	breq	.+38     	; 0x19d8c <_Z24Plot_Status_List_Monitorv+0x34e>
   19d66:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   19d6a:	88 23       	and	r24, r24
   19d6c:	79 f0       	breq	.+30     	; 0x19d8c <_Z24Plot_Status_List_Monitorv+0x34e>
   19d6e:	f1 01       	movw	r30, r2
   19d70:	01 90       	ld	r0, Z+
   19d72:	00 20       	and	r0, r0
   19d74:	e9 f7       	brne	.-6      	; 0x19d70 <_Z24Plot_Status_List_Monitorv+0x332>
   19d76:	31 97       	sbiw	r30, 0x01	; 1
   19d78:	af 01       	movw	r20, r30
   19d7a:	40 5d       	subi	r20, 0xD0	; 208
   19d7c:	5f 40       	sbci	r21, 0x0F	; 15
   19d7e:	21 e0       	ldi	r18, 0x01	; 1
   19d80:	60 ed       	ldi	r22, 0xD0	; 208
   19d82:	7f e0       	ldi	r23, 0x0F	; 15
   19d84:	82 e6       	ldi	r24, 0x62	; 98
   19d86:	9f e0       	ldi	r25, 0x0F	; 15
   19d88:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   19d8c:	83 94       	inc	r8
   19d8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19d92:	81 30       	cpi	r24, 0x01	; 1
   19d94:	41 f4       	brne	.+16     	; 0x19da6 <_Z24Plot_Status_List_Monitorv+0x368>
   19d96:	6f e7       	ldi	r22, 0x7F	; 127
   19d98:	7a e2       	ldi	r23, 0x2A	; 42
   19d9a:	86 ec       	ldi	r24, 0xC6	; 198
   19d9c:	94 e1       	ldi	r25, 0x14	; 20
   19d9e:	b7 d6       	rcall	.+3438   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19da0:	86 ec       	ldi	r24, 0xC6	; 198
   19da2:	94 e1       	ldi	r25, 0x14	; 20
   19da4:	23 d5       	rcall	.+2630   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19da6:	0e 94 4e 6d 	call	0xda9c	; 0xda9c <_Z16Display_Update_1v>
   19daa:	8c e0       	ldi	r24, 0x0C	; 12
   19dac:	0e 94 32 68 	call	0xd064	; 0xd064 <_Z14Lora_Data_Sendh>
   19db0:	88 eb       	ldi	r24, 0xB8	; 184
   19db2:	9b e0       	ldi	r25, 0x0B	; 11
   19db4:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z20Check_Data_Availablej>
   19db8:	88 23       	and	r24, r24
   19dba:	09 f4       	brne	.+2      	; 0x19dbe <_Z24Plot_Status_List_Monitorv+0x380>
   19dbc:	4e c1       	rjmp	.+668    	; 0x1a05a <_Z24Plot_Status_List_Monitorv+0x61c>
   19dbe:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   19dc2:	88 23       	and	r24, r24
   19dc4:	09 f4       	brne	.+2      	; 0x19dc8 <_Z24Plot_Status_List_Monitorv+0x38a>
   19dc6:	00 c1       	rjmp	.+512    	; 0x19fc8 <_Z24Plot_Status_List_Monitorv+0x58a>
   19dc8:	0e 94 41 73 	call	0xe682	; 0xe682 <_Z21Subscribed_data_checkv>
   19dcc:	88 23       	and	r24, r24
   19dce:	99 f0       	breq	.+38     	; 0x19df6 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19dd0:	0e 94 4b 66 	call	0xcc96	; 0xcc96 <_Z21Seperate_Out_Sub_Datav>
   19dd4:	88 23       	and	r24, r24
   19dd6:	79 f0       	breq	.+30     	; 0x19df6 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19dd8:	f1 01       	movw	r30, r2
   19dda:	01 90       	ld	r0, Z+
   19ddc:	00 20       	and	r0, r0
   19dde:	e9 f7       	brne	.-6      	; 0x19dda <_Z24Plot_Status_List_Monitorv+0x39c>
   19de0:	31 97       	sbiw	r30, 0x01	; 1
   19de2:	af 01       	movw	r20, r30
   19de4:	40 5d       	subi	r20, 0xD0	; 208
   19de6:	5f 40       	sbci	r21, 0x0F	; 15
   19de8:	21 e0       	ldi	r18, 0x01	; 1
   19dea:	60 ed       	ldi	r22, 0xD0	; 208
   19dec:	7f e0       	ldi	r23, 0x0F	; 15
   19dee:	82 e6       	ldi	r24, 0x62	; 98
   19df0:	9f e0       	ldi	r25, 0x0F	; 15
   19df2:	0e 94 0e 94 	call	0x1281c	; 0x1281c <_Z12Pub_Sub_DataPcPhjh>
   19df6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19dfa:	81 30       	cpi	r24, 0x01	; 1
   19dfc:	29 f5       	brne	.+74     	; 0x19e48 <_Z24Plot_Status_List_Monitorv+0x40a>
   19dfe:	69 e6       	ldi	r22, 0x69	; 105
   19e00:	7a e2       	ldi	r23, 0x2A	; 42
   19e02:	86 ec       	ldi	r24, 0xC6	; 198
   19e04:	94 e1       	ldi	r25, 0x14	; 20
   19e06:	52 d6       	rcall	.+3236   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19e08:	4a e0       	ldi	r20, 0x0A	; 10
   19e0a:	50 e0       	ldi	r21, 0x00	; 0
   19e0c:	69 e0       	ldi	r22, 0x09	; 9
   19e0e:	74 e1       	ldi	r23, 0x14	; 20
   19e10:	86 ec       	ldi	r24, 0xC6	; 198
   19e12:	94 e1       	ldi	r25, 0x14	; 20
   19e14:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   19e18:	86 ec       	ldi	r24, 0xC6	; 198
   19e1a:	94 e1       	ldi	r25, 0x14	; 20
   19e1c:	74 d6       	rcall	.+3304   	; 0x1ab06 <_ZN5Print7printlnEv>
   19e1e:	86 ec       	ldi	r24, 0xC6	; 198
   19e20:	94 e1       	ldi	r25, 0x14	; 20
   19e22:	e4 d4       	rcall	.+2504   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19e24:	6b e4       	ldi	r22, 0x4B	; 75
   19e26:	7a e2       	ldi	r23, 0x2A	; 42
   19e28:	86 ec       	ldi	r24, 0xC6	; 198
   19e2a:	94 e1       	ldi	r25, 0x14	; 20
   19e2c:	3f d6       	rcall	.+3198   	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   19e2e:	47 e0       	ldi	r20, 0x07	; 7
   19e30:	50 e0       	ldi	r21, 0x00	; 0
   19e32:	6a 85       	ldd	r22, Y+10	; 0x0a
   19e34:	7b 85       	ldd	r23, Y+11	; 0x0b
   19e36:	86 ec       	ldi	r24, 0xC6	; 198
   19e38:	94 e1       	ldi	r25, 0x14	; 20
   19e3a:	0e d6       	rcall	.+3100   	; 0x1aa58 <_ZN5Print5writeEPKhj>
   19e3c:	86 ec       	ldi	r24, 0xC6	; 198
   19e3e:	94 e1       	ldi	r25, 0x14	; 20
   19e40:	62 d6       	rcall	.+3268   	; 0x1ab06 <_ZN5Print7printlnEv>
   19e42:	86 ec       	ldi	r24, 0xC6	; 198
   19e44:	94 e1       	ldi	r25, 0x14	; 20
   19e46:	d2 d4       	rcall	.+2468   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19e48:	a9 e0       	ldi	r26, 0x09	; 9
   19e4a:	b4 e1       	ldi	r27, 0x14	; 20
   19e4c:	80 e0       	ldi	r24, 0x00	; 0
   19e4e:	90 e0       	ldi	r25, 0x00	; 0
   19e50:	2d 91       	ld	r18, X+
   19e52:	f3 01       	movw	r30, r6
   19e54:	e8 0f       	add	r30, r24
   19e56:	f9 1f       	adc	r31, r25
   19e58:	eb 5e       	subi	r30, 0xEB	; 235
   19e5a:	f3 4f       	sbci	r31, 0xF3	; 243
   19e5c:	31 81       	ldd	r19, Z+1	; 0x01
   19e5e:	32 17       	cp	r19, r18
   19e60:	09 f4       	brne	.+2      	; 0x19e64 <_Z24Plot_Status_List_Monitorv+0x426>
   19e62:	62 c0       	rjmp	.+196    	; 0x19f28 <_Z24Plot_Status_List_Monitorv+0x4ea>
   19e64:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19e68:	81 30       	cpi	r24, 0x01	; 1
   19e6a:	41 f4       	brne	.+16     	; 0x19e7c <_Z24Plot_Status_List_Monitorv+0x43e>
   19e6c:	60 e2       	ldi	r22, 0x20	; 32
   19e6e:	7a e2       	ldi	r23, 0x2A	; 42
   19e70:	86 ec       	ldi	r24, 0xC6	; 198
   19e72:	94 e1       	ldi	r25, 0x14	; 20
   19e74:	4c d6       	rcall	.+3224   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19e76:	86 ec       	ldi	r24, 0xC6	; 198
   19e78:	94 e1       	ldi	r25, 0x14	; 20
   19e7a:	b8 d4       	rcall	.+2416   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19e7c:	b2 e0       	ldi	r27, 0x02	; 2
   19e7e:	8b 16       	cp	r8, r27
   19e80:	b9 f0       	breq	.+46     	; 0x19eb0 <_Z24Plot_Status_List_Monitorv+0x472>
   19e82:	81 e0       	ldi	r24, 0x01	; 1
   19e84:	ee 81       	ldd	r30, Y+6	; 0x06
   19e86:	ff 81       	ldd	r31, Y+7	; 0x07
   19e88:	80 83       	st	Z, r24
   19e8a:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   19e8e:	90 e0       	ldi	r25, 0x00	; 0
   19e90:	98 2f       	mov	r25, r24
   19e92:	88 27       	eor	r24, r24
   19e94:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   19e98:	82 2b       	or	r24, r18
   19e9a:	a8 85       	ldd	r26, Y+8	; 0x08
   19e9c:	b9 85       	ldd	r27, Y+9	; 0x09
   19e9e:	8d 93       	st	X+, r24
   19ea0:	9c 93       	st	X, r25
   19ea2:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   19ea6:	81 11       	cpse	r24, r1
   19ea8:	45 c0       	rjmp	.+138    	; 0x19f34 <_Z24Plot_Status_List_Monitorv+0x4f6>
   19eaa:	83 e0       	ldi	r24, 0x03	; 3
   19eac:	88 2e       	mov	r8, r24
   19eae:	1e c1       	rjmp	.+572    	; 0x1a0ec <_Z24Plot_Status_List_Monitorv+0x6ae>
   19eb0:	86 e0       	ldi	r24, 0x06	; 6
   19eb2:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19eb6:	84 e6       	ldi	r24, 0x64	; 100
   19eb8:	90 e0       	ldi	r25, 0x00	; 0
   19eba:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19ebe:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19ec2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19ec6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19eca:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19ece:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19ed2:	a0 62       	ori	r26, 0x20	; 32
   19ed4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19ed8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19edc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19ee0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19ee4:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19ee8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19eec:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19ef0:	82 60       	ori	r24, 0x02	; 2
   19ef2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19ef6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19efa:	d8 01       	movw	r26, r16
   19efc:	ed 91       	ld	r30, X+
   19efe:	8d 01       	movw	r16, r26
   19f00:	e3 31       	cpi	r30, 0x13	; 19
   19f02:	68 f0       	brcs	.+26     	; 0x19f1e <_Z24Plot_Status_List_Monitorv+0x4e0>
   19f04:	f0 e0       	ldi	r31, 0x00	; 0
   19f06:	e7 5c       	subi	r30, 0xC7	; 199
   19f08:	fb 4e       	sbci	r31, 0xEB	; 235
   19f0a:	61 e0       	ldi	r22, 0x01	; 1
   19f0c:	80 81       	ld	r24, Z
   19f0e:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   19f12:	68 ec       	ldi	r22, 0xC8	; 200
   19f14:	70 e0       	ldi	r23, 0x00	; 0
   19f16:	80 e0       	ldi	r24, 0x00	; 0
   19f18:	90 e0       	ldi	r25, 0x00	; 0
   19f1a:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   19f1e:	a0 16       	cp	r10, r16
   19f20:	b1 06       	cpc	r11, r17
   19f22:	59 f7       	brne	.-42     	; 0x19efa <_Z24Plot_Status_List_Monitorv+0x4bc>
   19f24:	c1 2c       	mov	r12, r1
   19f26:	1c c1       	rjmp	.+568    	; 0x1a160 <_Z24Plot_Status_List_Monitorv+0x722>
   19f28:	01 96       	adiw	r24, 0x01	; 1
   19f2a:	86 30       	cpi	r24, 0x06	; 6
   19f2c:	91 05       	cpc	r25, r1
   19f2e:	09 f0       	breq	.+2      	; 0x19f32 <_Z24Plot_Status_List_Monitorv+0x4f4>
   19f30:	8f cf       	rjmp	.-226    	; 0x19e50 <_Z24Plot_Status_List_Monitorv+0x412>
   19f32:	a7 cf       	rjmp	.-178    	; 0x19e82 <_Z24Plot_Status_List_Monitorv+0x444>
   19f34:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19f38:	81 30       	cpi	r24, 0x01	; 1
   19f3a:	41 f4       	brne	.+16     	; 0x19f4c <_Z24Plot_Status_List_Monitorv+0x50e>
   19f3c:	6d e0       	ldi	r22, 0x0D	; 13
   19f3e:	7a e2       	ldi	r23, 0x2A	; 42
   19f40:	86 ec       	ldi	r24, 0xC6	; 198
   19f42:	94 e1       	ldi	r25, 0x14	; 20
   19f44:	e4 d5       	rcall	.+3016   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19f46:	86 ec       	ldi	r24, 0xC6	; 198
   19f48:	94 e1       	ldi	r25, 0x14	; 20
   19f4a:	50 d4       	rcall	.+2208   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19f4c:	b2 e0       	ldi	r27, 0x02	; 2
   19f4e:	8b 12       	cpse	r8, r27
   19f50:	cd c0       	rjmp	.+410    	; 0x1a0ec <_Z24Plot_Status_List_Monitorv+0x6ae>
   19f52:	86 e0       	ldi	r24, 0x06	; 6
   19f54:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19f58:	84 e6       	ldi	r24, 0x64	; 100
   19f5a:	90 e0       	ldi	r25, 0x00	; 0
   19f5c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19f60:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19f64:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19f68:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19f6c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19f70:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19f74:	a0 62       	ori	r26, 0x20	; 32
   19f76:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19f7a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19f7e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19f82:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19f86:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19f8a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f8e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f92:	82 60       	ori	r24, 0x02	; 2
   19f94:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f98:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f9c:	d8 01       	movw	r26, r16
   19f9e:	ed 91       	ld	r30, X+
   19fa0:	8d 01       	movw	r16, r26
   19fa2:	e3 31       	cpi	r30, 0x13	; 19
   19fa4:	68 f0       	brcs	.+26     	; 0x19fc0 <_Z24Plot_Status_List_Monitorv+0x582>
   19fa6:	f0 e0       	ldi	r31, 0x00	; 0
   19fa8:	e7 5c       	subi	r30, 0xC7	; 199
   19faa:	fb 4e       	sbci	r31, 0xEB	; 235
   19fac:	61 e0       	ldi	r22, 0x01	; 1
   19fae:	80 81       	ld	r24, Z
   19fb0:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   19fb4:	68 ec       	ldi	r22, 0xC8	; 200
   19fb6:	70 e0       	ldi	r23, 0x00	; 0
   19fb8:	80 e0       	ldi	r24, 0x00	; 0
   19fba:	90 e0       	ldi	r25, 0x00	; 0
   19fbc:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   19fc0:	a0 16       	cp	r10, r16
   19fc2:	b1 06       	cpc	r11, r17
   19fc4:	59 f7       	brne	.-42     	; 0x19f9c <_Z24Plot_Status_List_Monitorv+0x55e>
   19fc6:	ae cf       	rjmp	.-164    	; 0x19f24 <_Z24Plot_Status_List_Monitorv+0x4e6>
   19fc8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19fcc:	81 30       	cpi	r24, 0x01	; 1
   19fce:	41 f4       	brne	.+16     	; 0x19fe0 <_Z24Plot_Status_List_Monitorv+0x5a2>
   19fd0:	62 ed       	ldi	r22, 0xD2	; 210
   19fd2:	79 e2       	ldi	r23, 0x29	; 41
   19fd4:	86 ec       	ldi	r24, 0xC6	; 198
   19fd6:	94 e1       	ldi	r25, 0x14	; 20
   19fd8:	9a d5       	rcall	.+2868   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   19fda:	86 ec       	ldi	r24, 0xC6	; 198
   19fdc:	94 e1       	ldi	r25, 0x14	; 20
   19fde:	06 d4       	rcall	.+2060   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   19fe0:	b2 e0       	ldi	r27, 0x02	; 2
   19fe2:	8b 12       	cpse	r8, r27
   19fe4:	83 c0       	rjmp	.+262    	; 0x1a0ec <_Z24Plot_Status_List_Monitorv+0x6ae>
   19fe6:	86 e0       	ldi	r24, 0x06	; 6
   19fe8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19fec:	84 e6       	ldi	r24, 0x64	; 100
   19fee:	90 e0       	ldi	r25, 0x00	; 0
   19ff0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19ff4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19ff8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19ffc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1a000:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1a004:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1a008:	a0 62       	ori	r26, 0x20	; 32
   1a00a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1a00e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1a012:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1a016:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1a01a:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   1a01e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a022:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a026:	82 60       	ori	r24, 0x02	; 2
   1a028:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a02c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a030:	d8 01       	movw	r26, r16
   1a032:	ed 91       	ld	r30, X+
   1a034:	8d 01       	movw	r16, r26
   1a036:	e3 31       	cpi	r30, 0x13	; 19
   1a038:	60 f0       	brcs	.+24     	; 0x1a052 <_Z24Plot_Status_List_Monitorv+0x614>
   1a03a:	f0 e0       	ldi	r31, 0x00	; 0
   1a03c:	e7 5c       	subi	r30, 0xC7	; 199
   1a03e:	fb 4e       	sbci	r31, 0xEB	; 235
   1a040:	61 e0       	ldi	r22, 0x01	; 1
   1a042:	80 81       	ld	r24, Z
   1a044:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1a048:	68 ec       	ldi	r22, 0xC8	; 200
   1a04a:	70 e0       	ldi	r23, 0x00	; 0
   1a04c:	80 e0       	ldi	r24, 0x00	; 0
   1a04e:	90 e0       	ldi	r25, 0x00	; 0
   1a050:	bf d7       	rcall	.+3966   	; 0x1afd0 <delay>
   1a052:	a0 16       	cp	r10, r16
   1a054:	b1 06       	cpc	r11, r17
   1a056:	61 f7       	brne	.-40     	; 0x1a030 <_Z24Plot_Status_List_Monitorv+0x5f2>
   1a058:	65 cf       	rjmp	.-310    	; 0x19f24 <_Z24Plot_Status_List_Monitorv+0x4e6>
   1a05a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a05e:	81 30       	cpi	r24, 0x01	; 1
   1a060:	41 f4       	brne	.+16     	; 0x1a072 <_Z24Plot_Status_List_Monitorv+0x634>
   1a062:	67 e9       	ldi	r22, 0x97	; 151
   1a064:	79 e2       	ldi	r23, 0x29	; 41
   1a066:	86 ec       	ldi	r24, 0xC6	; 198
   1a068:	94 e1       	ldi	r25, 0x14	; 20
   1a06a:	51 d5       	rcall	.+2722   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1a06c:	86 ec       	ldi	r24, 0xC6	; 198
   1a06e:	94 e1       	ldi	r25, 0x14	; 20
   1a070:	bd d3       	rcall	.+1914   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1a072:	b2 e0       	ldi	r27, 0x02	; 2
   1a074:	8b 12       	cpse	r8, r27
   1a076:	3a c0       	rjmp	.+116    	; 0x1a0ec <_Z24Plot_Status_List_Monitorv+0x6ae>
   1a078:	86 e0       	ldi	r24, 0x06	; 6
   1a07a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1a07e:	84 e6       	ldi	r24, 0x64	; 100
   1a080:	90 e0       	ldi	r25, 0x00	; 0
   1a082:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1a086:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1a08a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1a08e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1a092:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1a096:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1a09a:	a0 62       	ori	r26, 0x20	; 32
   1a09c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1a0a0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1a0a4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1a0a8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1a0ac:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   1a0b0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a0b4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a0b8:	82 60       	ori	r24, 0x02	; 2
   1a0ba:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a0be:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a0c2:	d8 01       	movw	r26, r16
   1a0c4:	ed 91       	ld	r30, X+
   1a0c6:	8d 01       	movw	r16, r26
   1a0c8:	e3 31       	cpi	r30, 0x13	; 19
   1a0ca:	60 f0       	brcs	.+24     	; 0x1a0e4 <_Z24Plot_Status_List_Monitorv+0x6a6>
   1a0cc:	f0 e0       	ldi	r31, 0x00	; 0
   1a0ce:	e7 5c       	subi	r30, 0xC7	; 199
   1a0d0:	fb 4e       	sbci	r31, 0xEB	; 235
   1a0d2:	61 e0       	ldi	r22, 0x01	; 1
   1a0d4:	80 81       	ld	r24, Z
   1a0d6:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1a0da:	68 ec       	ldi	r22, 0xC8	; 200
   1a0dc:	70 e0       	ldi	r23, 0x00	; 0
   1a0de:	80 e0       	ldi	r24, 0x00	; 0
   1a0e0:	90 e0       	ldi	r25, 0x00	; 0
   1a0e2:	76 d7       	rcall	.+3820   	; 0x1afd0 <delay>
   1a0e4:	a0 16       	cp	r10, r16
   1a0e6:	b1 06       	cpc	r11, r17
   1a0e8:	61 f7       	brne	.-40     	; 0x1a0c2 <_Z24Plot_Status_List_Monitorv+0x684>
   1a0ea:	1c cf       	rjmp	.-456    	; 0x19f24 <_Z24Plot_Status_List_Monitorv+0x4e6>
   1a0ec:	68 ee       	ldi	r22, 0xE8	; 232
   1a0ee:	73 e0       	ldi	r23, 0x03	; 3
   1a0f0:	80 e0       	ldi	r24, 0x00	; 0
   1a0f2:	90 e0       	ldi	r25, 0x00	; 0
   1a0f4:	6d d7       	rcall	.+3802   	; 0x1afd0 <delay>
   1a0f6:	b3 e0       	ldi	r27, 0x03	; 3
   1a0f8:	8b 12       	cpse	r8, r27
   1a0fa:	31 ce       	rjmp	.-926    	; 0x19d5e <_Z24Plot_Status_List_Monitorv+0x320>
   1a0fc:	11 c0       	rjmp	.+34     	; 0x1a120 <_Z24Plot_Status_List_Monitorv+0x6e2>
   1a0fe:	8d ee       	ldi	r24, 0xED	; 237
   1a100:	87 0d       	add	r24, r7
   1a102:	81 35       	cpi	r24, 0x51	; 81
   1a104:	68 f4       	brcc	.+26     	; 0x1a120 <_Z24Plot_Status_List_Monitorv+0x6e2>
   1a106:	e7 2d       	mov	r30, r7
   1a108:	f0 e0       	ldi	r31, 0x00	; 0
   1a10a:	e7 5c       	subi	r30, 0xC7	; 199
   1a10c:	fb 4e       	sbci	r31, 0xEB	; 235
   1a10e:	61 e0       	ldi	r22, 0x01	; 1
   1a110:	80 81       	ld	r24, Z
   1a112:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1a116:	68 ec       	ldi	r22, 0xC8	; 200
   1a118:	70 e0       	ldi	r23, 0x00	; 0
   1a11a:	80 e0       	ldi	r24, 0x00	; 0
   1a11c:	90 e0       	ldi	r25, 0x00	; 0
   1a11e:	58 d7       	rcall	.+3760   	; 0x1afd0 <delay>
   1a120:	4a 14       	cp	r4, r10
   1a122:	5b 04       	cpc	r5, r11
   1a124:	09 f0       	breq	.+2      	; 0x1a128 <_Z24Plot_Status_List_Monitorv+0x6ea>
   1a126:	56 cd       	rjmp	.-1364   	; 0x19bd4 <_Z24Plot_Status_List_Monitorv+0x196>
   1a128:	f7 01       	movw	r30, r14
   1a12a:	e1 58       	subi	r30, 0x81	; 129
   1a12c:	fb 4e       	sbci	r31, 0xEB	; 235
   1a12e:	10 82       	st	Z, r1
   1a130:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a134:	81 30       	cpi	r24, 0x01	; 1
   1a136:	a1 f4       	brne	.+40     	; 0x1a160 <_Z24Plot_Status_List_Monitorv+0x722>
   1a138:	68 e7       	ldi	r22, 0x78	; 120
   1a13a:	79 e2       	ldi	r23, 0x29	; 41
   1a13c:	86 ec       	ldi	r24, 0xC6	; 198
   1a13e:	94 e1       	ldi	r25, 0x14	; 20
   1a140:	e6 d4       	rcall	.+2508   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
   1a142:	86 ec       	ldi	r24, 0xC6	; 198
   1a144:	94 e1       	ldi	r25, 0x14	; 20
   1a146:	52 d3       	rcall	.+1700   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
   1a148:	cc 24       	eor	r12, r12
   1a14a:	c3 94       	inc	r12
   1a14c:	09 c0       	rjmp	.+18     	; 0x1a160 <_Z24Plot_Status_List_Monitorv+0x722>
   1a14e:	2f ef       	ldi	r18, 0xFF	; 255
   1a150:	e2 1a       	sub	r14, r18
   1a152:	f2 0a       	sbc	r15, r18
   1a154:	3e e0       	ldi	r19, 0x0E	; 14
   1a156:	e3 16       	cp	r14, r19
   1a158:	f1 04       	cpc	r15, r1
   1a15a:	09 f0       	breq	.+2      	; 0x1a15e <_Z24Plot_Status_List_Monitorv+0x720>
   1a15c:	a0 cc       	rjmp	.-1728   	; 0x19a9e <_Z24Plot_Status_List_Monitorv+0x60>
   1a15e:	01 c0       	rjmp	.+2      	; 0x1a162 <_Z24Plot_Status_List_Monitorv+0x724>
   1a160:	8c 2d       	mov	r24, r12
   1a162:	2b 96       	adiw	r28, 0x0b	; 11
   1a164:	0f b6       	in	r0, 0x3f	; 63
   1a166:	f8 94       	cli
   1a168:	de bf       	out	0x3e, r29	; 62
   1a16a:	0f be       	out	0x3f, r0	; 63
   1a16c:	cd bf       	out	0x3d, r28	; 61
   1a16e:	df 91       	pop	r29
   1a170:	cf 91       	pop	r28
   1a172:	1f 91       	pop	r17
   1a174:	0f 91       	pop	r16
   1a176:	ff 90       	pop	r15
   1a178:	ef 90       	pop	r14
   1a17a:	df 90       	pop	r13
   1a17c:	cf 90       	pop	r12
   1a17e:	bf 90       	pop	r11
   1a180:	af 90       	pop	r10
   1a182:	9f 90       	pop	r9
   1a184:	8f 90       	pop	r8
   1a186:	7f 90       	pop	r7
   1a188:	6f 90       	pop	r6
   1a18a:	5f 90       	pop	r5
   1a18c:	4f 90       	pop	r4
   1a18e:	3f 90       	pop	r3
   1a190:	2f 90       	pop	r2
   1a192:	08 95       	ret

0001a194 <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   1a194:	0f 93       	push	r16
   1a196:	1f 93       	push	r17
   1a198:	cf 93       	push	r28
   1a19a:	df 93       	push	r29
   1a19c:	00 d0       	rcall	.+0      	; 0x1a19e <_Z14Lora_Operationv+0xa>
   1a19e:	00 d0       	rcall	.+0      	; 0x1a1a0 <_Z14Lora_Operationv+0xc>
   1a1a0:	cd b7       	in	r28, 0x3d	; 61
   1a1a2:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   1a1a4:	0e 94 10 66 	call	0xcc20	; 0xcc20 <_Z14Lora_Availablev>
   1a1a8:	88 23       	and	r24, r24
   1a1aa:	09 f4       	brne	.+2      	; 0x1a1ae <_Z14Lora_Operationv+0x1a>
   1a1ac:	45 c0       	rjmp	.+138    	; 0x1a238 <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   1a1ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a1b2:	81 30       	cpi	r24, 0x01	; 1
   1a1b4:	41 f4       	brne	.+16     	; 0x1a1c6 <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   1a1b6:	69 e6       	ldi	r22, 0x69	; 105
   1a1b8:	7b e3       	ldi	r23, 0x3B	; 59
   1a1ba:	86 ec       	ldi	r24, 0xC6	; 198
   1a1bc:	94 e1       	ldi	r25, 0x14	; 20
   1a1be:	a7 d4       	rcall	.+2382   	; 0x1ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1a1c0:	86 ec       	ldi	r24, 0xC6	; 198
   1a1c2:	94 e1       	ldi	r25, 0x14	; 20
   1a1c4:	13 d3       	rcall	.+1574   	; 0x1a7ec <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   1a1c6:	0e 94 14 66 	call	0xcc28	; 0xcc28 <_Z17Lora_Data_Receivev>
   1a1ca:	88 23       	and	r24, r24
   1a1cc:	a9 f1       	breq	.+106    	; 0x1a238 <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1a1ce:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a1d2:	81 30       	cpi	r24, 0x01	; 1
   1a1d4:	11 f4       	brne	.+4      	; 0x1a1da <_Z14Lora_Operationv+0x46>
   1a1d6:	10 e0       	ldi	r17, 0x00	; 0
   1a1d8:	08 c0       	rjmp	.+16     	; 0x1a1ea <_Z14Lora_Operationv+0x56>
   1a1da:	a9 e0       	ldi	r26, 0x09	; 9
   1a1dc:	b4 e1       	ldi	r27, 0x14	; 20
   1a1de:	fe 01       	movw	r30, r28
   1a1e0:	31 96       	adiw	r30, 0x01	; 1
   1a1e2:	ce 01       	movw	r24, r28
   1a1e4:	07 96       	adiw	r24, 0x07	; 7
   1a1e6:	8f 01       	movw	r16, r30
   1a1e8:	0c c0       	rjmp	.+24     	; 0x1a202 <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a1ea:	e1 2f       	mov	r30, r17
   1a1ec:	f0 e0       	ldi	r31, 0x00	; 0
   1a1ee:	e7 5f       	subi	r30, 0xF7	; 247
   1a1f0:	fb 4e       	sbci	r31, 0xEB	; 235
   1a1f2:	60 81       	ld	r22, Z
   1a1f4:	66 23       	and	r22, r22
   1a1f6:	89 f3       	breq	.-30     	; 0x1a1da <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   1a1f8:	86 ec       	ldi	r24, 0xC6	; 198
   1a1fa:	94 e1       	ldi	r25, 0x14	; 20
   1a1fc:	ad d2       	rcall	.+1370   	; 0x1a758 <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a1fe:	1f 5f       	subi	r17, 0xFF	; 255
   1a200:	f4 cf       	rjmp	.-24     	; 0x1a1ea <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   1a202:	2d 91       	ld	r18, X+
   1a204:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   1a206:	e8 17       	cp	r30, r24
   1a208:	f9 07       	cpc	r31, r25
   1a20a:	d9 f7       	brne	.-10     	; 0x1a202 <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   1a20c:	c8 01       	movw	r24, r16
   1a20e:	0e 94 c2 7f 	call	0xff84	; 0xff84 <_Z23Update_Lira_Sensor_DataPh>
   1a212:	81 11       	cpse	r24, r1
   1a214:	11 c0       	rjmp	.+34     	; 0x1a238 <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   1a216:	c8 01       	movw	r24, r16
   1a218:	0e 94 d5 5c 	call	0xb9aa	; 0xb9aa <_Z22Update_Euro_Valve_DataPh>
   1a21c:	81 11       	cpse	r24, r1
   1a21e:	0c c0       	rjmp	.+24     	; 0x1a238 <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   1a220:	c8 01       	movw	r24, r16
   1a222:	0e 94 c6 5f 	call	0xbf8c	; 0xbf8c <_Z25Update_Wireless_Pump_DataPh>
   1a226:	81 11       	cpse	r24, r1
   1a228:	07 c0       	rjmp	.+14     	; 0x1a238 <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   1a22a:	84 e1       	ldi	r24, 0x14	; 20
   1a22c:	e9 e0       	ldi	r30, 0x09	; 9
   1a22e:	f4 e1       	ldi	r31, 0x14	; 20
   1a230:	df 01       	movw	r26, r30
   1a232:	1d 92       	st	X+, r1
   1a234:	8a 95       	dec	r24
   1a236:	e9 f7       	brne	.-6      	; 0x1a232 <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   1a238:	26 96       	adiw	r28, 0x06	; 6
   1a23a:	0f b6       	in	r0, 0x3f	; 63
   1a23c:	f8 94       	cli
   1a23e:	de bf       	out	0x3e, r29	; 62
   1a240:	0f be       	out	0x3f, r0	; 63
   1a242:	cd bf       	out	0x3d, r28	; 61
   1a244:	df 91       	pop	r29
   1a246:	cf 91       	pop	r28
   1a248:	1f 91       	pop	r17
   1a24a:	0f 91       	pop	r16
   1a24c:	08 95       	ret

0001a24e <__subsf3>:
   1a24e:	50 58       	subi	r21, 0x80	; 128

0001a250 <__addsf3>:
   1a250:	bb 27       	eor	r27, r27
   1a252:	aa 27       	eor	r26, r26
   1a254:	0e d0       	rcall	.+28     	; 0x1a272 <__addsf3x>
   1a256:	70 c1       	rjmp	.+736    	; 0x1a538 <__fp_round>
   1a258:	61 d1       	rcall	.+706    	; 0x1a51c <__fp_pscA>
   1a25a:	30 f0       	brcs	.+12     	; 0x1a268 <__addsf3+0x18>
   1a25c:	66 d1       	rcall	.+716    	; 0x1a52a <__fp_pscB>
   1a25e:	20 f0       	brcs	.+8      	; 0x1a268 <__addsf3+0x18>
   1a260:	31 f4       	brne	.+12     	; 0x1a26e <__addsf3+0x1e>
   1a262:	9f 3f       	cpi	r25, 0xFF	; 255
   1a264:	11 f4       	brne	.+4      	; 0x1a26a <__addsf3+0x1a>
   1a266:	1e f4       	brtc	.+6      	; 0x1a26e <__addsf3+0x1e>
   1a268:	56 c1       	rjmp	.+684    	; 0x1a516 <__fp_nan>
   1a26a:	0e f4       	brtc	.+2      	; 0x1a26e <__addsf3+0x1e>
   1a26c:	e0 95       	com	r30
   1a26e:	e7 fb       	bst	r30, 7
   1a270:	4c c1       	rjmp	.+664    	; 0x1a50a <__fp_inf>

0001a272 <__addsf3x>:
   1a272:	e9 2f       	mov	r30, r25
   1a274:	72 d1       	rcall	.+740    	; 0x1a55a <__fp_split3>
   1a276:	80 f3       	brcs	.-32     	; 0x1a258 <__addsf3+0x8>
   1a278:	ba 17       	cp	r27, r26
   1a27a:	62 07       	cpc	r22, r18
   1a27c:	73 07       	cpc	r23, r19
   1a27e:	84 07       	cpc	r24, r20
   1a280:	95 07       	cpc	r25, r21
   1a282:	18 f0       	brcs	.+6      	; 0x1a28a <__addsf3x+0x18>
   1a284:	71 f4       	brne	.+28     	; 0x1a2a2 <__addsf3x+0x30>
   1a286:	9e f5       	brtc	.+102    	; 0x1a2ee <__addsf3x+0x7c>
   1a288:	8a c1       	rjmp	.+788    	; 0x1a59e <__fp_zero>
   1a28a:	0e f4       	brtc	.+2      	; 0x1a28e <__addsf3x+0x1c>
   1a28c:	e0 95       	com	r30
   1a28e:	0b 2e       	mov	r0, r27
   1a290:	ba 2f       	mov	r27, r26
   1a292:	a0 2d       	mov	r26, r0
   1a294:	0b 01       	movw	r0, r22
   1a296:	b9 01       	movw	r22, r18
   1a298:	90 01       	movw	r18, r0
   1a29a:	0c 01       	movw	r0, r24
   1a29c:	ca 01       	movw	r24, r20
   1a29e:	a0 01       	movw	r20, r0
   1a2a0:	11 24       	eor	r1, r1
   1a2a2:	ff 27       	eor	r31, r31
   1a2a4:	59 1b       	sub	r21, r25
   1a2a6:	99 f0       	breq	.+38     	; 0x1a2ce <__addsf3x+0x5c>
   1a2a8:	59 3f       	cpi	r21, 0xF9	; 249
   1a2aa:	50 f4       	brcc	.+20     	; 0x1a2c0 <__addsf3x+0x4e>
   1a2ac:	50 3e       	cpi	r21, 0xE0	; 224
   1a2ae:	68 f1       	brcs	.+90     	; 0x1a30a <__addsf3x+0x98>
   1a2b0:	1a 16       	cp	r1, r26
   1a2b2:	f0 40       	sbci	r31, 0x00	; 0
   1a2b4:	a2 2f       	mov	r26, r18
   1a2b6:	23 2f       	mov	r18, r19
   1a2b8:	34 2f       	mov	r19, r20
   1a2ba:	44 27       	eor	r20, r20
   1a2bc:	58 5f       	subi	r21, 0xF8	; 248
   1a2be:	f3 cf       	rjmp	.-26     	; 0x1a2a6 <__addsf3x+0x34>
   1a2c0:	46 95       	lsr	r20
   1a2c2:	37 95       	ror	r19
   1a2c4:	27 95       	ror	r18
   1a2c6:	a7 95       	ror	r26
   1a2c8:	f0 40       	sbci	r31, 0x00	; 0
   1a2ca:	53 95       	inc	r21
   1a2cc:	c9 f7       	brne	.-14     	; 0x1a2c0 <__addsf3x+0x4e>
   1a2ce:	7e f4       	brtc	.+30     	; 0x1a2ee <__addsf3x+0x7c>
   1a2d0:	1f 16       	cp	r1, r31
   1a2d2:	ba 0b       	sbc	r27, r26
   1a2d4:	62 0b       	sbc	r22, r18
   1a2d6:	73 0b       	sbc	r23, r19
   1a2d8:	84 0b       	sbc	r24, r20
   1a2da:	ba f0       	brmi	.+46     	; 0x1a30a <__addsf3x+0x98>
   1a2dc:	91 50       	subi	r25, 0x01	; 1
   1a2de:	a1 f0       	breq	.+40     	; 0x1a308 <__addsf3x+0x96>
   1a2e0:	ff 0f       	add	r31, r31
   1a2e2:	bb 1f       	adc	r27, r27
   1a2e4:	66 1f       	adc	r22, r22
   1a2e6:	77 1f       	adc	r23, r23
   1a2e8:	88 1f       	adc	r24, r24
   1a2ea:	c2 f7       	brpl	.-16     	; 0x1a2dc <__addsf3x+0x6a>
   1a2ec:	0e c0       	rjmp	.+28     	; 0x1a30a <__addsf3x+0x98>
   1a2ee:	ba 0f       	add	r27, r26
   1a2f0:	62 1f       	adc	r22, r18
   1a2f2:	73 1f       	adc	r23, r19
   1a2f4:	84 1f       	adc	r24, r20
   1a2f6:	48 f4       	brcc	.+18     	; 0x1a30a <__addsf3x+0x98>
   1a2f8:	87 95       	ror	r24
   1a2fa:	77 95       	ror	r23
   1a2fc:	67 95       	ror	r22
   1a2fe:	b7 95       	ror	r27
   1a300:	f7 95       	ror	r31
   1a302:	9e 3f       	cpi	r25, 0xFE	; 254
   1a304:	08 f0       	brcs	.+2      	; 0x1a308 <__addsf3x+0x96>
   1a306:	b3 cf       	rjmp	.-154    	; 0x1a26e <__addsf3+0x1e>
   1a308:	93 95       	inc	r25
   1a30a:	88 0f       	add	r24, r24
   1a30c:	08 f0       	brcs	.+2      	; 0x1a310 <__addsf3x+0x9e>
   1a30e:	99 27       	eor	r25, r25
   1a310:	ee 0f       	add	r30, r30
   1a312:	97 95       	ror	r25
   1a314:	87 95       	ror	r24
   1a316:	08 95       	ret

0001a318 <__cmpsf2>:
   1a318:	d4 d0       	rcall	.+424    	; 0x1a4c2 <__fp_cmp>
   1a31a:	08 f4       	brcc	.+2      	; 0x1a31e <__cmpsf2+0x6>
   1a31c:	81 e0       	ldi	r24, 0x01	; 1
   1a31e:	08 95       	ret

0001a320 <__divsf3>:
   1a320:	0c d0       	rcall	.+24     	; 0x1a33a <__divsf3x>
   1a322:	0a c1       	rjmp	.+532    	; 0x1a538 <__fp_round>
   1a324:	02 d1       	rcall	.+516    	; 0x1a52a <__fp_pscB>
   1a326:	40 f0       	brcs	.+16     	; 0x1a338 <__divsf3+0x18>
   1a328:	f9 d0       	rcall	.+498    	; 0x1a51c <__fp_pscA>
   1a32a:	30 f0       	brcs	.+12     	; 0x1a338 <__divsf3+0x18>
   1a32c:	21 f4       	brne	.+8      	; 0x1a336 <__divsf3+0x16>
   1a32e:	5f 3f       	cpi	r21, 0xFF	; 255
   1a330:	19 f0       	breq	.+6      	; 0x1a338 <__divsf3+0x18>
   1a332:	eb c0       	rjmp	.+470    	; 0x1a50a <__fp_inf>
   1a334:	51 11       	cpse	r21, r1
   1a336:	34 c1       	rjmp	.+616    	; 0x1a5a0 <__fp_szero>
   1a338:	ee c0       	rjmp	.+476    	; 0x1a516 <__fp_nan>

0001a33a <__divsf3x>:
   1a33a:	0f d1       	rcall	.+542    	; 0x1a55a <__fp_split3>
   1a33c:	98 f3       	brcs	.-26     	; 0x1a324 <__divsf3+0x4>

0001a33e <__divsf3_pse>:
   1a33e:	99 23       	and	r25, r25
   1a340:	c9 f3       	breq	.-14     	; 0x1a334 <__divsf3+0x14>
   1a342:	55 23       	and	r21, r21
   1a344:	b1 f3       	breq	.-20     	; 0x1a332 <__divsf3+0x12>
   1a346:	95 1b       	sub	r25, r21
   1a348:	55 0b       	sbc	r21, r21
   1a34a:	bb 27       	eor	r27, r27
   1a34c:	aa 27       	eor	r26, r26
   1a34e:	62 17       	cp	r22, r18
   1a350:	73 07       	cpc	r23, r19
   1a352:	84 07       	cpc	r24, r20
   1a354:	38 f0       	brcs	.+14     	; 0x1a364 <__divsf3_pse+0x26>
   1a356:	9f 5f       	subi	r25, 0xFF	; 255
   1a358:	5f 4f       	sbci	r21, 0xFF	; 255
   1a35a:	22 0f       	add	r18, r18
   1a35c:	33 1f       	adc	r19, r19
   1a35e:	44 1f       	adc	r20, r20
   1a360:	aa 1f       	adc	r26, r26
   1a362:	a9 f3       	breq	.-22     	; 0x1a34e <__divsf3_pse+0x10>
   1a364:	33 d0       	rcall	.+102    	; 0x1a3cc <__divsf3_pse+0x8e>
   1a366:	0e 2e       	mov	r0, r30
   1a368:	3a f0       	brmi	.+14     	; 0x1a378 <__divsf3_pse+0x3a>
   1a36a:	e0 e8       	ldi	r30, 0x80	; 128
   1a36c:	30 d0       	rcall	.+96     	; 0x1a3ce <__divsf3_pse+0x90>
   1a36e:	91 50       	subi	r25, 0x01	; 1
   1a370:	50 40       	sbci	r21, 0x00	; 0
   1a372:	e6 95       	lsr	r30
   1a374:	00 1c       	adc	r0, r0
   1a376:	ca f7       	brpl	.-14     	; 0x1a36a <__divsf3_pse+0x2c>
   1a378:	29 d0       	rcall	.+82     	; 0x1a3cc <__divsf3_pse+0x8e>
   1a37a:	fe 2f       	mov	r31, r30
   1a37c:	27 d0       	rcall	.+78     	; 0x1a3cc <__divsf3_pse+0x8e>
   1a37e:	66 0f       	add	r22, r22
   1a380:	77 1f       	adc	r23, r23
   1a382:	88 1f       	adc	r24, r24
   1a384:	bb 1f       	adc	r27, r27
   1a386:	26 17       	cp	r18, r22
   1a388:	37 07       	cpc	r19, r23
   1a38a:	48 07       	cpc	r20, r24
   1a38c:	ab 07       	cpc	r26, r27
   1a38e:	b0 e8       	ldi	r27, 0x80	; 128
   1a390:	09 f0       	breq	.+2      	; 0x1a394 <__divsf3_pse+0x56>
   1a392:	bb 0b       	sbc	r27, r27
   1a394:	80 2d       	mov	r24, r0
   1a396:	bf 01       	movw	r22, r30
   1a398:	ff 27       	eor	r31, r31
   1a39a:	93 58       	subi	r25, 0x83	; 131
   1a39c:	5f 4f       	sbci	r21, 0xFF	; 255
   1a39e:	2a f0       	brmi	.+10     	; 0x1a3aa <__divsf3_pse+0x6c>
   1a3a0:	9e 3f       	cpi	r25, 0xFE	; 254
   1a3a2:	51 05       	cpc	r21, r1
   1a3a4:	68 f0       	brcs	.+26     	; 0x1a3c0 <__divsf3_pse+0x82>
   1a3a6:	b1 c0       	rjmp	.+354    	; 0x1a50a <__fp_inf>
   1a3a8:	fb c0       	rjmp	.+502    	; 0x1a5a0 <__fp_szero>
   1a3aa:	5f 3f       	cpi	r21, 0xFF	; 255
   1a3ac:	ec f3       	brlt	.-6      	; 0x1a3a8 <__divsf3_pse+0x6a>
   1a3ae:	98 3e       	cpi	r25, 0xE8	; 232
   1a3b0:	dc f3       	brlt	.-10     	; 0x1a3a8 <__divsf3_pse+0x6a>
   1a3b2:	86 95       	lsr	r24
   1a3b4:	77 95       	ror	r23
   1a3b6:	67 95       	ror	r22
   1a3b8:	b7 95       	ror	r27
   1a3ba:	f7 95       	ror	r31
   1a3bc:	9f 5f       	subi	r25, 0xFF	; 255
   1a3be:	c9 f7       	brne	.-14     	; 0x1a3b2 <__divsf3_pse+0x74>
   1a3c0:	88 0f       	add	r24, r24
   1a3c2:	91 1d       	adc	r25, r1
   1a3c4:	96 95       	lsr	r25
   1a3c6:	87 95       	ror	r24
   1a3c8:	97 f9       	bld	r25, 7
   1a3ca:	08 95       	ret
   1a3cc:	e1 e0       	ldi	r30, 0x01	; 1
   1a3ce:	66 0f       	add	r22, r22
   1a3d0:	77 1f       	adc	r23, r23
   1a3d2:	88 1f       	adc	r24, r24
   1a3d4:	bb 1f       	adc	r27, r27
   1a3d6:	62 17       	cp	r22, r18
   1a3d8:	73 07       	cpc	r23, r19
   1a3da:	84 07       	cpc	r24, r20
   1a3dc:	ba 07       	cpc	r27, r26
   1a3de:	20 f0       	brcs	.+8      	; 0x1a3e8 <__divsf3_pse+0xaa>
   1a3e0:	62 1b       	sub	r22, r18
   1a3e2:	73 0b       	sbc	r23, r19
   1a3e4:	84 0b       	sbc	r24, r20
   1a3e6:	ba 0b       	sbc	r27, r26
   1a3e8:	ee 1f       	adc	r30, r30
   1a3ea:	88 f7       	brcc	.-30     	; 0x1a3ce <__divsf3_pse+0x90>
   1a3ec:	e0 95       	com	r30
   1a3ee:	08 95       	ret

0001a3f0 <__fixunssfsi>:
   1a3f0:	bc d0       	rcall	.+376    	; 0x1a56a <__fp_splitA>
   1a3f2:	88 f0       	brcs	.+34     	; 0x1a416 <__fixunssfsi+0x26>
   1a3f4:	9f 57       	subi	r25, 0x7F	; 127
   1a3f6:	90 f0       	brcs	.+36     	; 0x1a41c <__fixunssfsi+0x2c>
   1a3f8:	b9 2f       	mov	r27, r25
   1a3fa:	99 27       	eor	r25, r25
   1a3fc:	b7 51       	subi	r27, 0x17	; 23
   1a3fe:	a0 f0       	brcs	.+40     	; 0x1a428 <__fixunssfsi+0x38>
   1a400:	d1 f0       	breq	.+52     	; 0x1a436 <__fixunssfsi+0x46>
   1a402:	66 0f       	add	r22, r22
   1a404:	77 1f       	adc	r23, r23
   1a406:	88 1f       	adc	r24, r24
   1a408:	99 1f       	adc	r25, r25
   1a40a:	1a f0       	brmi	.+6      	; 0x1a412 <__fixunssfsi+0x22>
   1a40c:	ba 95       	dec	r27
   1a40e:	c9 f7       	brne	.-14     	; 0x1a402 <__fixunssfsi+0x12>
   1a410:	12 c0       	rjmp	.+36     	; 0x1a436 <__fixunssfsi+0x46>
   1a412:	b1 30       	cpi	r27, 0x01	; 1
   1a414:	81 f0       	breq	.+32     	; 0x1a436 <__fixunssfsi+0x46>
   1a416:	c3 d0       	rcall	.+390    	; 0x1a59e <__fp_zero>
   1a418:	b1 e0       	ldi	r27, 0x01	; 1
   1a41a:	08 95       	ret
   1a41c:	c0 c0       	rjmp	.+384    	; 0x1a59e <__fp_zero>
   1a41e:	67 2f       	mov	r22, r23
   1a420:	78 2f       	mov	r23, r24
   1a422:	88 27       	eor	r24, r24
   1a424:	b8 5f       	subi	r27, 0xF8	; 248
   1a426:	39 f0       	breq	.+14     	; 0x1a436 <__fixunssfsi+0x46>
   1a428:	b9 3f       	cpi	r27, 0xF9	; 249
   1a42a:	cc f3       	brlt	.-14     	; 0x1a41e <__fixunssfsi+0x2e>
   1a42c:	86 95       	lsr	r24
   1a42e:	77 95       	ror	r23
   1a430:	67 95       	ror	r22
   1a432:	b3 95       	inc	r27
   1a434:	d9 f7       	brne	.-10     	; 0x1a42c <__fixunssfsi+0x3c>
   1a436:	3e f4       	brtc	.+14     	; 0x1a446 <__fixunssfsi+0x56>
   1a438:	90 95       	com	r25
   1a43a:	80 95       	com	r24
   1a43c:	70 95       	com	r23
   1a43e:	61 95       	neg	r22
   1a440:	7f 4f       	sbci	r23, 0xFF	; 255
   1a442:	8f 4f       	sbci	r24, 0xFF	; 255
   1a444:	9f 4f       	sbci	r25, 0xFF	; 255
   1a446:	08 95       	ret

0001a448 <__floatunsisf>:
   1a448:	e8 94       	clt
   1a44a:	09 c0       	rjmp	.+18     	; 0x1a45e <__floatsisf+0x12>

0001a44c <__floatsisf>:
   1a44c:	97 fb       	bst	r25, 7
   1a44e:	3e f4       	brtc	.+14     	; 0x1a45e <__floatsisf+0x12>
   1a450:	90 95       	com	r25
   1a452:	80 95       	com	r24
   1a454:	70 95       	com	r23
   1a456:	61 95       	neg	r22
   1a458:	7f 4f       	sbci	r23, 0xFF	; 255
   1a45a:	8f 4f       	sbci	r24, 0xFF	; 255
   1a45c:	9f 4f       	sbci	r25, 0xFF	; 255
   1a45e:	99 23       	and	r25, r25
   1a460:	a9 f0       	breq	.+42     	; 0x1a48c <__floatsisf+0x40>
   1a462:	f9 2f       	mov	r31, r25
   1a464:	96 e9       	ldi	r25, 0x96	; 150
   1a466:	bb 27       	eor	r27, r27
   1a468:	93 95       	inc	r25
   1a46a:	f6 95       	lsr	r31
   1a46c:	87 95       	ror	r24
   1a46e:	77 95       	ror	r23
   1a470:	67 95       	ror	r22
   1a472:	b7 95       	ror	r27
   1a474:	f1 11       	cpse	r31, r1
   1a476:	f8 cf       	rjmp	.-16     	; 0x1a468 <__floatsisf+0x1c>
   1a478:	fa f4       	brpl	.+62     	; 0x1a4b8 <__floatsisf+0x6c>
   1a47a:	bb 0f       	add	r27, r27
   1a47c:	11 f4       	brne	.+4      	; 0x1a482 <__floatsisf+0x36>
   1a47e:	60 ff       	sbrs	r22, 0
   1a480:	1b c0       	rjmp	.+54     	; 0x1a4b8 <__floatsisf+0x6c>
   1a482:	6f 5f       	subi	r22, 0xFF	; 255
   1a484:	7f 4f       	sbci	r23, 0xFF	; 255
   1a486:	8f 4f       	sbci	r24, 0xFF	; 255
   1a488:	9f 4f       	sbci	r25, 0xFF	; 255
   1a48a:	16 c0       	rjmp	.+44     	; 0x1a4b8 <__floatsisf+0x6c>
   1a48c:	88 23       	and	r24, r24
   1a48e:	11 f0       	breq	.+4      	; 0x1a494 <__floatsisf+0x48>
   1a490:	96 e9       	ldi	r25, 0x96	; 150
   1a492:	11 c0       	rjmp	.+34     	; 0x1a4b6 <__floatsisf+0x6a>
   1a494:	77 23       	and	r23, r23
   1a496:	21 f0       	breq	.+8      	; 0x1a4a0 <__floatsisf+0x54>
   1a498:	9e e8       	ldi	r25, 0x8E	; 142
   1a49a:	87 2f       	mov	r24, r23
   1a49c:	76 2f       	mov	r23, r22
   1a49e:	05 c0       	rjmp	.+10     	; 0x1a4aa <__floatsisf+0x5e>
   1a4a0:	66 23       	and	r22, r22
   1a4a2:	71 f0       	breq	.+28     	; 0x1a4c0 <__floatsisf+0x74>
   1a4a4:	96 e8       	ldi	r25, 0x86	; 134
   1a4a6:	86 2f       	mov	r24, r22
   1a4a8:	70 e0       	ldi	r23, 0x00	; 0
   1a4aa:	60 e0       	ldi	r22, 0x00	; 0
   1a4ac:	2a f0       	brmi	.+10     	; 0x1a4b8 <__floatsisf+0x6c>
   1a4ae:	9a 95       	dec	r25
   1a4b0:	66 0f       	add	r22, r22
   1a4b2:	77 1f       	adc	r23, r23
   1a4b4:	88 1f       	adc	r24, r24
   1a4b6:	da f7       	brpl	.-10     	; 0x1a4ae <__floatsisf+0x62>
   1a4b8:	88 0f       	add	r24, r24
   1a4ba:	96 95       	lsr	r25
   1a4bc:	87 95       	ror	r24
   1a4be:	97 f9       	bld	r25, 7
   1a4c0:	08 95       	ret

0001a4c2 <__fp_cmp>:
   1a4c2:	99 0f       	add	r25, r25
   1a4c4:	00 08       	sbc	r0, r0
   1a4c6:	55 0f       	add	r21, r21
   1a4c8:	aa 0b       	sbc	r26, r26
   1a4ca:	e0 e8       	ldi	r30, 0x80	; 128
   1a4cc:	fe ef       	ldi	r31, 0xFE	; 254
   1a4ce:	16 16       	cp	r1, r22
   1a4d0:	17 06       	cpc	r1, r23
   1a4d2:	e8 07       	cpc	r30, r24
   1a4d4:	f9 07       	cpc	r31, r25
   1a4d6:	c0 f0       	brcs	.+48     	; 0x1a508 <__fp_cmp+0x46>
   1a4d8:	12 16       	cp	r1, r18
   1a4da:	13 06       	cpc	r1, r19
   1a4dc:	e4 07       	cpc	r30, r20
   1a4de:	f5 07       	cpc	r31, r21
   1a4e0:	98 f0       	brcs	.+38     	; 0x1a508 <__fp_cmp+0x46>
   1a4e2:	62 1b       	sub	r22, r18
   1a4e4:	73 0b       	sbc	r23, r19
   1a4e6:	84 0b       	sbc	r24, r20
   1a4e8:	95 0b       	sbc	r25, r21
   1a4ea:	39 f4       	brne	.+14     	; 0x1a4fa <__fp_cmp+0x38>
   1a4ec:	0a 26       	eor	r0, r26
   1a4ee:	61 f0       	breq	.+24     	; 0x1a508 <__fp_cmp+0x46>
   1a4f0:	23 2b       	or	r18, r19
   1a4f2:	24 2b       	or	r18, r20
   1a4f4:	25 2b       	or	r18, r21
   1a4f6:	21 f4       	brne	.+8      	; 0x1a500 <__fp_cmp+0x3e>
   1a4f8:	08 95       	ret
   1a4fa:	0a 26       	eor	r0, r26
   1a4fc:	09 f4       	brne	.+2      	; 0x1a500 <__fp_cmp+0x3e>
   1a4fe:	a1 40       	sbci	r26, 0x01	; 1
   1a500:	a6 95       	lsr	r26
   1a502:	8f ef       	ldi	r24, 0xFF	; 255
   1a504:	81 1d       	adc	r24, r1
   1a506:	81 1d       	adc	r24, r1
   1a508:	08 95       	ret

0001a50a <__fp_inf>:
   1a50a:	97 f9       	bld	r25, 7
   1a50c:	9f 67       	ori	r25, 0x7F	; 127
   1a50e:	80 e8       	ldi	r24, 0x80	; 128
   1a510:	70 e0       	ldi	r23, 0x00	; 0
   1a512:	60 e0       	ldi	r22, 0x00	; 0
   1a514:	08 95       	ret

0001a516 <__fp_nan>:
   1a516:	9f ef       	ldi	r25, 0xFF	; 255
   1a518:	80 ec       	ldi	r24, 0xC0	; 192
   1a51a:	08 95       	ret

0001a51c <__fp_pscA>:
   1a51c:	00 24       	eor	r0, r0
   1a51e:	0a 94       	dec	r0
   1a520:	16 16       	cp	r1, r22
   1a522:	17 06       	cpc	r1, r23
   1a524:	18 06       	cpc	r1, r24
   1a526:	09 06       	cpc	r0, r25
   1a528:	08 95       	ret

0001a52a <__fp_pscB>:
   1a52a:	00 24       	eor	r0, r0
   1a52c:	0a 94       	dec	r0
   1a52e:	12 16       	cp	r1, r18
   1a530:	13 06       	cpc	r1, r19
   1a532:	14 06       	cpc	r1, r20
   1a534:	05 06       	cpc	r0, r21
   1a536:	08 95       	ret

0001a538 <__fp_round>:
   1a538:	09 2e       	mov	r0, r25
   1a53a:	03 94       	inc	r0
   1a53c:	00 0c       	add	r0, r0
   1a53e:	11 f4       	brne	.+4      	; 0x1a544 <__fp_round+0xc>
   1a540:	88 23       	and	r24, r24
   1a542:	52 f0       	brmi	.+20     	; 0x1a558 <__fp_round+0x20>
   1a544:	bb 0f       	add	r27, r27
   1a546:	40 f4       	brcc	.+16     	; 0x1a558 <__fp_round+0x20>
   1a548:	bf 2b       	or	r27, r31
   1a54a:	11 f4       	brne	.+4      	; 0x1a550 <__fp_round+0x18>
   1a54c:	60 ff       	sbrs	r22, 0
   1a54e:	04 c0       	rjmp	.+8      	; 0x1a558 <__fp_round+0x20>
   1a550:	6f 5f       	subi	r22, 0xFF	; 255
   1a552:	7f 4f       	sbci	r23, 0xFF	; 255
   1a554:	8f 4f       	sbci	r24, 0xFF	; 255
   1a556:	9f 4f       	sbci	r25, 0xFF	; 255
   1a558:	08 95       	ret

0001a55a <__fp_split3>:
   1a55a:	57 fd       	sbrc	r21, 7
   1a55c:	90 58       	subi	r25, 0x80	; 128
   1a55e:	44 0f       	add	r20, r20
   1a560:	55 1f       	adc	r21, r21
   1a562:	59 f0       	breq	.+22     	; 0x1a57a <__fp_splitA+0x10>
   1a564:	5f 3f       	cpi	r21, 0xFF	; 255
   1a566:	71 f0       	breq	.+28     	; 0x1a584 <__fp_splitA+0x1a>
   1a568:	47 95       	ror	r20

0001a56a <__fp_splitA>:
   1a56a:	88 0f       	add	r24, r24
   1a56c:	97 fb       	bst	r25, 7
   1a56e:	99 1f       	adc	r25, r25
   1a570:	61 f0       	breq	.+24     	; 0x1a58a <__fp_splitA+0x20>
   1a572:	9f 3f       	cpi	r25, 0xFF	; 255
   1a574:	79 f0       	breq	.+30     	; 0x1a594 <__fp_splitA+0x2a>
   1a576:	87 95       	ror	r24
   1a578:	08 95       	ret
   1a57a:	12 16       	cp	r1, r18
   1a57c:	13 06       	cpc	r1, r19
   1a57e:	14 06       	cpc	r1, r20
   1a580:	55 1f       	adc	r21, r21
   1a582:	f2 cf       	rjmp	.-28     	; 0x1a568 <__fp_split3+0xe>
   1a584:	46 95       	lsr	r20
   1a586:	f1 df       	rcall	.-30     	; 0x1a56a <__fp_splitA>
   1a588:	08 c0       	rjmp	.+16     	; 0x1a59a <__fp_splitA+0x30>
   1a58a:	16 16       	cp	r1, r22
   1a58c:	17 06       	cpc	r1, r23
   1a58e:	18 06       	cpc	r1, r24
   1a590:	99 1f       	adc	r25, r25
   1a592:	f1 cf       	rjmp	.-30     	; 0x1a576 <__fp_splitA+0xc>
   1a594:	86 95       	lsr	r24
   1a596:	71 05       	cpc	r23, r1
   1a598:	61 05       	cpc	r22, r1
   1a59a:	08 94       	sec
   1a59c:	08 95       	ret

0001a59e <__fp_zero>:
   1a59e:	e8 94       	clt

0001a5a0 <__fp_szero>:
   1a5a0:	bb 27       	eor	r27, r27
   1a5a2:	66 27       	eor	r22, r22
   1a5a4:	77 27       	eor	r23, r23
   1a5a6:	cb 01       	movw	r24, r22
   1a5a8:	97 f9       	bld	r25, 7
   1a5aa:	08 95       	ret

0001a5ac <__gesf2>:
   1a5ac:	8a df       	rcall	.-236    	; 0x1a4c2 <__fp_cmp>
   1a5ae:	08 f4       	brcc	.+2      	; 0x1a5b2 <__gesf2+0x6>
   1a5b0:	8f ef       	ldi	r24, 0xFF	; 255
   1a5b2:	08 95       	ret

0001a5b4 <__mulsf3>:
   1a5b4:	0b d0       	rcall	.+22     	; 0x1a5cc <__mulsf3x>
   1a5b6:	c0 cf       	rjmp	.-128    	; 0x1a538 <__fp_round>
   1a5b8:	b1 df       	rcall	.-158    	; 0x1a51c <__fp_pscA>
   1a5ba:	28 f0       	brcs	.+10     	; 0x1a5c6 <__mulsf3+0x12>
   1a5bc:	b6 df       	rcall	.-148    	; 0x1a52a <__fp_pscB>
   1a5be:	18 f0       	brcs	.+6      	; 0x1a5c6 <__mulsf3+0x12>
   1a5c0:	95 23       	and	r25, r21
   1a5c2:	09 f0       	breq	.+2      	; 0x1a5c6 <__mulsf3+0x12>
   1a5c4:	a2 cf       	rjmp	.-188    	; 0x1a50a <__fp_inf>
   1a5c6:	a7 cf       	rjmp	.-178    	; 0x1a516 <__fp_nan>
   1a5c8:	11 24       	eor	r1, r1
   1a5ca:	ea cf       	rjmp	.-44     	; 0x1a5a0 <__fp_szero>

0001a5cc <__mulsf3x>:
   1a5cc:	c6 df       	rcall	.-116    	; 0x1a55a <__fp_split3>
   1a5ce:	a0 f3       	brcs	.-24     	; 0x1a5b8 <__mulsf3+0x4>

0001a5d0 <__mulsf3_pse>:
   1a5d0:	95 9f       	mul	r25, r21
   1a5d2:	d1 f3       	breq	.-12     	; 0x1a5c8 <__mulsf3+0x14>
   1a5d4:	95 0f       	add	r25, r21
   1a5d6:	50 e0       	ldi	r21, 0x00	; 0
   1a5d8:	55 1f       	adc	r21, r21
   1a5da:	62 9f       	mul	r22, r18
   1a5dc:	f0 01       	movw	r30, r0
   1a5de:	72 9f       	mul	r23, r18
   1a5e0:	bb 27       	eor	r27, r27
   1a5e2:	f0 0d       	add	r31, r0
   1a5e4:	b1 1d       	adc	r27, r1
   1a5e6:	63 9f       	mul	r22, r19
   1a5e8:	aa 27       	eor	r26, r26
   1a5ea:	f0 0d       	add	r31, r0
   1a5ec:	b1 1d       	adc	r27, r1
   1a5ee:	aa 1f       	adc	r26, r26
   1a5f0:	64 9f       	mul	r22, r20
   1a5f2:	66 27       	eor	r22, r22
   1a5f4:	b0 0d       	add	r27, r0
   1a5f6:	a1 1d       	adc	r26, r1
   1a5f8:	66 1f       	adc	r22, r22
   1a5fa:	82 9f       	mul	r24, r18
   1a5fc:	22 27       	eor	r18, r18
   1a5fe:	b0 0d       	add	r27, r0
   1a600:	a1 1d       	adc	r26, r1
   1a602:	62 1f       	adc	r22, r18
   1a604:	73 9f       	mul	r23, r19
   1a606:	b0 0d       	add	r27, r0
   1a608:	a1 1d       	adc	r26, r1
   1a60a:	62 1f       	adc	r22, r18
   1a60c:	83 9f       	mul	r24, r19
   1a60e:	a0 0d       	add	r26, r0
   1a610:	61 1d       	adc	r22, r1
   1a612:	22 1f       	adc	r18, r18
   1a614:	74 9f       	mul	r23, r20
   1a616:	33 27       	eor	r19, r19
   1a618:	a0 0d       	add	r26, r0
   1a61a:	61 1d       	adc	r22, r1
   1a61c:	23 1f       	adc	r18, r19
   1a61e:	84 9f       	mul	r24, r20
   1a620:	60 0d       	add	r22, r0
   1a622:	21 1d       	adc	r18, r1
   1a624:	82 2f       	mov	r24, r18
   1a626:	76 2f       	mov	r23, r22
   1a628:	6a 2f       	mov	r22, r26
   1a62a:	11 24       	eor	r1, r1
   1a62c:	9f 57       	subi	r25, 0x7F	; 127
   1a62e:	50 40       	sbci	r21, 0x00	; 0
   1a630:	8a f0       	brmi	.+34     	; 0x1a654 <__mulsf3_pse+0x84>
   1a632:	e1 f0       	breq	.+56     	; 0x1a66c <__mulsf3_pse+0x9c>
   1a634:	88 23       	and	r24, r24
   1a636:	4a f0       	brmi	.+18     	; 0x1a64a <__mulsf3_pse+0x7a>
   1a638:	ee 0f       	add	r30, r30
   1a63a:	ff 1f       	adc	r31, r31
   1a63c:	bb 1f       	adc	r27, r27
   1a63e:	66 1f       	adc	r22, r22
   1a640:	77 1f       	adc	r23, r23
   1a642:	88 1f       	adc	r24, r24
   1a644:	91 50       	subi	r25, 0x01	; 1
   1a646:	50 40       	sbci	r21, 0x00	; 0
   1a648:	a9 f7       	brne	.-22     	; 0x1a634 <__mulsf3_pse+0x64>
   1a64a:	9e 3f       	cpi	r25, 0xFE	; 254
   1a64c:	51 05       	cpc	r21, r1
   1a64e:	70 f0       	brcs	.+28     	; 0x1a66c <__mulsf3_pse+0x9c>
   1a650:	5c cf       	rjmp	.-328    	; 0x1a50a <__fp_inf>
   1a652:	a6 cf       	rjmp	.-180    	; 0x1a5a0 <__fp_szero>
   1a654:	5f 3f       	cpi	r21, 0xFF	; 255
   1a656:	ec f3       	brlt	.-6      	; 0x1a652 <__mulsf3_pse+0x82>
   1a658:	98 3e       	cpi	r25, 0xE8	; 232
   1a65a:	dc f3       	brlt	.-10     	; 0x1a652 <__mulsf3_pse+0x82>
   1a65c:	86 95       	lsr	r24
   1a65e:	77 95       	ror	r23
   1a660:	67 95       	ror	r22
   1a662:	b7 95       	ror	r27
   1a664:	f7 95       	ror	r31
   1a666:	e7 95       	ror	r30
   1a668:	9f 5f       	subi	r25, 0xFF	; 255
   1a66a:	c1 f7       	brne	.-16     	; 0x1a65c <__mulsf3_pse+0x8c>
   1a66c:	fe 2b       	or	r31, r30
   1a66e:	88 0f       	add	r24, r24
   1a670:	91 1d       	adc	r25, r1
   1a672:	96 95       	lsr	r25
   1a674:	87 95       	ror	r24
   1a676:	97 f9       	bld	r25, 7
   1a678:	08 95       	ret

0001a67a <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   1a67a:	fc 01       	movw	r30, r24
   1a67c:	91 8d       	ldd	r25, Z+25	; 0x19
   1a67e:	22 8d       	ldd	r18, Z+26	; 0x1a
   1a680:	89 2f       	mov	r24, r25
   1a682:	90 e0       	ldi	r25, 0x00	; 0
   1a684:	80 53       	subi	r24, 0x30	; 48
   1a686:	9f 4f       	sbci	r25, 0xFF	; 255
   1a688:	82 1b       	sub	r24, r18
   1a68a:	91 09       	sbc	r25, r1
   1a68c:	8f 70       	andi	r24, 0x0F	; 15
   1a68e:	99 27       	eor	r25, r25
   1a690:	2d e0       	ldi	r18, 0x0D	; 13
   1a692:	ac 01       	movw	r20, r24
   1a694:	24 9f       	mul	r18, r20
   1a696:	c0 01       	movw	r24, r0
   1a698:	25 9f       	mul	r18, r21
   1a69a:	90 0d       	add	r25, r0
   1a69c:	11 24       	eor	r1, r1
   1a69e:	08 95       	ret

0001a6a0 <_ZN14HardwareSerial4peekEv>:
   1a6a0:	fc 01       	movw	r30, r24
   1a6a2:	91 8d       	ldd	r25, Z+25	; 0x19
   1a6a4:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a6a6:	98 17       	cp	r25, r24
   1a6a8:	31 f0       	breq	.+12     	; 0x1a6b6 <_ZN14HardwareSerial4peekEv+0x16>
   1a6aa:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a6ac:	e8 0f       	add	r30, r24
   1a6ae:	f1 1d       	adc	r31, r1
   1a6b0:	85 8d       	ldd	r24, Z+29	; 0x1d
   1a6b2:	90 e0       	ldi	r25, 0x00	; 0
   1a6b4:	08 95       	ret
   1a6b6:	8f ef       	ldi	r24, 0xFF	; 255
   1a6b8:	9f ef       	ldi	r25, 0xFF	; 255
   1a6ba:	08 95       	ret

0001a6bc <_ZN14HardwareSerial4readEv>:
   1a6bc:	fc 01       	movw	r30, r24
   1a6be:	91 8d       	ldd	r25, Z+25	; 0x19
   1a6c0:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a6c2:	98 17       	cp	r25, r24
   1a6c4:	81 f0       	breq	.+32     	; 0x1a6e6 <_ZN14HardwareSerial4readEv+0x2a>
   1a6c6:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a6c8:	df 01       	movw	r26, r30
   1a6ca:	a8 0f       	add	r26, r24
   1a6cc:	b1 1d       	adc	r27, r1
   1a6ce:	5d 96       	adiw	r26, 0x1d	; 29
   1a6d0:	8c 91       	ld	r24, X
   1a6d2:	92 8d       	ldd	r25, Z+26	; 0x1a
   1a6d4:	9f 5f       	subi	r25, 0xFF	; 255
   1a6d6:	9f 70       	andi	r25, 0x0F	; 15
   1a6d8:	2d e0       	ldi	r18, 0x0D	; 13
   1a6da:	92 9f       	mul	r25, r18
   1a6dc:	90 2d       	mov	r25, r0
   1a6de:	11 24       	eor	r1, r1
   1a6e0:	92 8f       	std	Z+26, r25	; 0x1a
   1a6e2:	90 e0       	ldi	r25, 0x00	; 0
   1a6e4:	08 95       	ret
   1a6e6:	8f ef       	ldi	r24, 0xFF	; 255
   1a6e8:	9f ef       	ldi	r25, 0xFF	; 255
   1a6ea:	08 95       	ret

0001a6ec <_ZN14HardwareSerial17availableForWriteEv>:
   1a6ec:	fc 01       	movw	r30, r24
   1a6ee:	53 8d       	ldd	r21, Z+27	; 0x1b
   1a6f0:	44 8d       	ldd	r20, Z+28	; 0x1c
   1a6f2:	25 2f       	mov	r18, r21
   1a6f4:	30 e0       	ldi	r19, 0x00	; 0
   1a6f6:	84 2f       	mov	r24, r20
   1a6f8:	90 e0       	ldi	r25, 0x00	; 0
   1a6fa:	82 1b       	sub	r24, r18
   1a6fc:	93 0b       	sbc	r25, r19
   1a6fe:	54 17       	cp	r21, r20
   1a700:	18 f0       	brcs	.+6      	; 0x1a708 <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   1a702:	81 53       	subi	r24, 0x31	; 49
   1a704:	9f 4f       	sbci	r25, 0xFF	; 255
   1a706:	08 95       	ret
   1a708:	01 97       	sbiw	r24, 0x01	; 1
   1a70a:	08 95       	ret

0001a70c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   1a70c:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   1a70e:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a710:	df 01       	movw	r26, r30
   1a712:	a8 0f       	add	r26, r24
   1a714:	b1 1d       	adc	r27, r1
   1a716:	a3 51       	subi	r26, 0x13	; 19
   1a718:	bf 4f       	sbci	r27, 0xFF	; 255
   1a71a:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   1a71c:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a71e:	90 e0       	ldi	r25, 0x00	; 0
   1a720:	01 96       	adiw	r24, 0x01	; 1
   1a722:	8f 70       	andi	r24, 0x0F	; 15
   1a724:	99 27       	eor	r25, r25
   1a726:	9d e0       	ldi	r25, 0x0D	; 13
   1a728:	89 9f       	mul	r24, r25
   1a72a:	80 2d       	mov	r24, r0
   1a72c:	11 24       	eor	r1, r1
   1a72e:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   1a730:	a6 89       	ldd	r26, Z+22	; 0x16
   1a732:	b7 89       	ldd	r27, Z+23	; 0x17
   1a734:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a736:	a0 89       	ldd	r26, Z+16	; 0x10
   1a738:	b1 89       	ldd	r27, Z+17	; 0x11
   1a73a:	8c 91       	ld	r24, X
   1a73c:	83 70       	andi	r24, 0x03	; 3
   1a73e:	80 64       	ori	r24, 0x40	; 64
   1a740:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   1a742:	93 8d       	ldd	r25, Z+27	; 0x1b
   1a744:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a746:	98 13       	cpse	r25, r24
   1a748:	06 c0       	rjmp	.+12     	; 0x1a756 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   1a74a:	02 88       	ldd	r0, Z+18	; 0x12
   1a74c:	f3 89       	ldd	r31, Z+19	; 0x13
   1a74e:	e0 2d       	mov	r30, r0
   1a750:	80 81       	ld	r24, Z
   1a752:	8f 7d       	andi	r24, 0xDF	; 223
   1a754:	80 83       	st	Z, r24
   1a756:	08 95       	ret

0001a758 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   1a758:	0f 93       	push	r16
   1a75a:	1f 93       	push	r17
   1a75c:	cf 93       	push	r28
   1a75e:	df 93       	push	r29
   1a760:	ec 01       	movw	r28, r24
  _written = true;
   1a762:	81 e0       	ldi	r24, 0x01	; 1
   1a764:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   1a766:	9b 8d       	ldd	r25, Y+27	; 0x1b
   1a768:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a76a:	98 13       	cpse	r25, r24
   1a76c:	05 c0       	rjmp	.+10     	; 0x1a778 <_ZN14HardwareSerial5writeEh+0x20>
   1a76e:	e8 89       	ldd	r30, Y+16	; 0x10
   1a770:	f9 89       	ldd	r31, Y+17	; 0x11
   1a772:	80 81       	ld	r24, Z
   1a774:	85 fd       	sbrc	r24, 5
   1a776:	27 c0       	rjmp	.+78     	; 0x1a7c6 <_ZN14HardwareSerial5writeEh+0x6e>
   1a778:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   1a77a:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a77c:	90 e0       	ldi	r25, 0x00	; 0
   1a77e:	01 96       	adiw	r24, 0x01	; 1
   1a780:	8f 70       	andi	r24, 0x0F	; 15
   1a782:	99 27       	eor	r25, r25
   1a784:	1d e0       	ldi	r17, 0x0D	; 13
   1a786:	81 9f       	mul	r24, r17
   1a788:	10 2d       	mov	r17, r0
   1a78a:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   1a78c:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a78e:	18 13       	cpse	r17, r24
   1a790:	0b c0       	rjmp	.+22     	; 0x1a7a8 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   1a792:	0f b6       	in	r0, 0x3f	; 63
   1a794:	07 fc       	sbrc	r0, 7
   1a796:	fa cf       	rjmp	.-12     	; 0x1a78c <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   1a798:	e8 89       	ldd	r30, Y+16	; 0x10
   1a79a:	f9 89       	ldd	r31, Y+17	; 0x11
   1a79c:	80 81       	ld	r24, Z
   1a79e:	85 ff       	sbrs	r24, 5
   1a7a0:	f5 cf       	rjmp	.-22     	; 0x1a78c <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   1a7a2:	ce 01       	movw	r24, r28
   1a7a4:	b3 df       	rcall	.-154    	; 0x1a70c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a7a6:	f2 cf       	rjmp	.-28     	; 0x1a78c <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   1a7a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a7aa:	fe 01       	movw	r30, r28
   1a7ac:	e8 0f       	add	r30, r24
   1a7ae:	f1 1d       	adc	r31, r1
   1a7b0:	e3 51       	subi	r30, 0x13	; 19
   1a7b2:	ff 4f       	sbci	r31, 0xFF	; 255
   1a7b4:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a7b6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   1a7b8:	f8 94       	cli
    _tx_buffer_head = i;
   1a7ba:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   1a7bc:	ea 89       	ldd	r30, Y+18	; 0x12
   1a7be:	fb 89       	ldd	r31, Y+19	; 0x13
   1a7c0:	80 81       	ld	r24, Z
   1a7c2:	80 62       	ori	r24, 0x20	; 32
   1a7c4:	0a c0       	rjmp	.+20     	; 0x1a7da <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a7c6:	9f b7       	in	r25, 0x3f	; 63
   1a7c8:	f8 94       	cli
      *_udr = c;
   1a7ca:	ee 89       	ldd	r30, Y+22	; 0x16
   1a7cc:	ff 89       	ldd	r31, Y+23	; 0x17
   1a7ce:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a7d0:	e8 89       	ldd	r30, Y+16	; 0x10
   1a7d2:	f9 89       	ldd	r31, Y+17	; 0x11
   1a7d4:	80 81       	ld	r24, Z
   1a7d6:	83 70       	andi	r24, 0x03	; 3
   1a7d8:	80 64       	ori	r24, 0x40	; 64
   1a7da:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   1a7dc:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   1a7de:	81 e0       	ldi	r24, 0x01	; 1
   1a7e0:	90 e0       	ldi	r25, 0x00	; 0
   1a7e2:	df 91       	pop	r29
   1a7e4:	cf 91       	pop	r28
   1a7e6:	1f 91       	pop	r17
   1a7e8:	0f 91       	pop	r16
   1a7ea:	08 95       	ret

0001a7ec <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   1a7ec:	cf 93       	push	r28
   1a7ee:	df 93       	push	r29
   1a7f0:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   1a7f2:	88 8d       	ldd	r24, Y+24	; 0x18
   1a7f4:	88 23       	and	r24, r24
   1a7f6:	c1 f0       	breq	.+48     	; 0x1a828 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   1a7f8:	ea 89       	ldd	r30, Y+18	; 0x12
   1a7fa:	fb 89       	ldd	r31, Y+19	; 0x13
   1a7fc:	80 81       	ld	r24, Z
   1a7fe:	85 fd       	sbrc	r24, 5
   1a800:	05 c0       	rjmp	.+10     	; 0x1a80c <_ZN14HardwareSerial5flushEv+0x20>
   1a802:	a8 89       	ldd	r26, Y+16	; 0x10
   1a804:	b9 89       	ldd	r27, Y+17	; 0x11
   1a806:	8c 91       	ld	r24, X
   1a808:	86 fd       	sbrc	r24, 6
   1a80a:	0e c0       	rjmp	.+28     	; 0x1a828 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   1a80c:	0f b6       	in	r0, 0x3f	; 63
   1a80e:	07 fc       	sbrc	r0, 7
   1a810:	f5 cf       	rjmp	.-22     	; 0x1a7fc <_ZN14HardwareSerial5flushEv+0x10>
   1a812:	80 81       	ld	r24, Z
   1a814:	85 ff       	sbrs	r24, 5
   1a816:	f2 cf       	rjmp	.-28     	; 0x1a7fc <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   1a818:	a8 89       	ldd	r26, Y+16	; 0x10
   1a81a:	b9 89       	ldd	r27, Y+17	; 0x11
   1a81c:	8c 91       	ld	r24, X
   1a81e:	85 ff       	sbrs	r24, 5
   1a820:	ed cf       	rjmp	.-38     	; 0x1a7fc <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   1a822:	ce 01       	movw	r24, r28
   1a824:	73 df       	rcall	.-282    	; 0x1a70c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a826:	e8 cf       	rjmp	.-48     	; 0x1a7f8 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   1a828:	df 91       	pop	r29
   1a82a:	cf 91       	pop	r28
   1a82c:	08 95       	ret

0001a82e <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   1a82e:	cf 92       	push	r12
   1a830:	df 92       	push	r13
   1a832:	ef 92       	push	r14
   1a834:	ff 92       	push	r15
   1a836:	1f 93       	push	r17
   1a838:	cf 93       	push	r28
   1a83a:	df 93       	push	r29
   1a83c:	ec 01       	movw	r28, r24
   1a83e:	6a 01       	movw	r12, r20
   1a840:	7b 01       	movw	r14, r22
   1a842:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   1a844:	e8 89       	ldd	r30, Y+16	; 0x10
   1a846:	f9 89       	ldd	r31, Y+17	; 0x11
   1a848:	82 e0       	ldi	r24, 0x02	; 2
   1a84a:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a84c:	41 15       	cp	r20, r1
   1a84e:	51 4e       	sbci	r21, 0xE1	; 225
   1a850:	61 05       	cpc	r22, r1
   1a852:	71 05       	cpc	r23, r1
   1a854:	b1 f0       	breq	.+44     	; 0x1a882 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   1a856:	60 e0       	ldi	r22, 0x00	; 0
   1a858:	79 e0       	ldi	r23, 0x09	; 9
   1a85a:	8d e3       	ldi	r24, 0x3D	; 61
   1a85c:	90 e0       	ldi	r25, 0x00	; 0
   1a85e:	a7 01       	movw	r20, r14
   1a860:	96 01       	movw	r18, r12
   1a862:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   1a866:	da 01       	movw	r26, r20
   1a868:	c9 01       	movw	r24, r18
   1a86a:	01 97       	sbiw	r24, 0x01	; 1
   1a86c:	a1 09       	sbc	r26, r1
   1a86e:	b1 09       	sbc	r27, r1
   1a870:	b6 95       	lsr	r27
   1a872:	a7 95       	ror	r26
   1a874:	97 95       	ror	r25
   1a876:	87 95       	ror	r24
   1a878:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a87a:	21 15       	cp	r18, r1
   1a87c:	80 e1       	ldi	r24, 0x10	; 16
   1a87e:	38 07       	cpc	r19, r24
   1a880:	a8 f0       	brcs	.+42     	; 0x1a8ac <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   1a882:	e8 89       	ldd	r30, Y+16	; 0x10
   1a884:	f9 89       	ldd	r31, Y+17	; 0x11
   1a886:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   1a888:	60 e8       	ldi	r22, 0x80	; 128
   1a88a:	74 e8       	ldi	r23, 0x84	; 132
   1a88c:	8e e1       	ldi	r24, 0x1E	; 30
   1a88e:	90 e0       	ldi	r25, 0x00	; 0
   1a890:	a7 01       	movw	r20, r14
   1a892:	96 01       	movw	r18, r12
   1a894:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   1a898:	da 01       	movw	r26, r20
   1a89a:	c9 01       	movw	r24, r18
   1a89c:	01 97       	sbiw	r24, 0x01	; 1
   1a89e:	a1 09       	sbc	r26, r1
   1a8a0:	b1 09       	sbc	r27, r1
   1a8a2:	b6 95       	lsr	r27
   1a8a4:	a7 95       	ror	r26
   1a8a6:	97 95       	ror	r25
   1a8a8:	87 95       	ror	r24
   1a8aa:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   1a8ac:	ec 85       	ldd	r30, Y+12	; 0x0c
   1a8ae:	fd 85       	ldd	r31, Y+13	; 0x0d
   1a8b0:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   1a8b2:	ee 85       	ldd	r30, Y+14	; 0x0e
   1a8b4:	ff 85       	ldd	r31, Y+15	; 0x0f
   1a8b6:	20 83       	st	Z, r18

  _written = false;
   1a8b8:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   1a8ba:	ec 89       	ldd	r30, Y+20	; 0x14
   1a8bc:	fd 89       	ldd	r31, Y+21	; 0x15
   1a8be:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   1a8c0:	ea 89       	ldd	r30, Y+18	; 0x12
   1a8c2:	fb 89       	ldd	r31, Y+19	; 0x13
   1a8c4:	80 81       	ld	r24, Z
   1a8c6:	80 61       	ori	r24, 0x10	; 16
   1a8c8:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   1a8ca:	ea 89       	ldd	r30, Y+18	; 0x12
   1a8cc:	fb 89       	ldd	r31, Y+19	; 0x13
   1a8ce:	80 81       	ld	r24, Z
   1a8d0:	88 60       	ori	r24, 0x08	; 8
   1a8d2:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   1a8d4:	ea 89       	ldd	r30, Y+18	; 0x12
   1a8d6:	fb 89       	ldd	r31, Y+19	; 0x13
   1a8d8:	80 81       	ld	r24, Z
   1a8da:	80 68       	ori	r24, 0x80	; 128
   1a8dc:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   1a8de:	ea 89       	ldd	r30, Y+18	; 0x12
   1a8e0:	fb 89       	ldd	r31, Y+19	; 0x13
   1a8e2:	80 81       	ld	r24, Z
   1a8e4:	8f 7d       	andi	r24, 0xDF	; 223
   1a8e6:	80 83       	st	Z, r24
}
   1a8e8:	df 91       	pop	r29
   1a8ea:	cf 91       	pop	r28
   1a8ec:	1f 91       	pop	r17
   1a8ee:	ff 90       	pop	r15
   1a8f0:	ef 90       	pop	r14
   1a8f2:	df 90       	pop	r13
   1a8f4:	cf 90       	pop	r12
   1a8f6:	08 95       	ret

0001a8f8 <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   1a8f8:	80 e0       	ldi	r24, 0x00	; 0
   1a8fa:	90 e0       	ldi	r25, 0x00	; 0
   1a8fc:	08 95       	ret

0001a8fe <_ZN5Print5flushEv>:
   1a8fe:	08 95       	ret

0001a900 <__vector_26>:
   1a900:	1f 92       	push	r1
   1a902:	0f 92       	push	r0
   1a904:	0f b6       	in	r0, 0x3f	; 63
   1a906:	0f 92       	push	r0
   1a908:	11 24       	eor	r1, r1
   1a90a:	0b b6       	in	r0, 0x3b	; 59
   1a90c:	0f 92       	push	r0
   1a90e:	2f 93       	push	r18
   1a910:	3f 93       	push	r19
   1a912:	4f 93       	push	r20
   1a914:	5f 93       	push	r21
   1a916:	6f 93       	push	r22
   1a918:	7f 93       	push	r23
   1a91a:	8f 93       	push	r24
   1a91c:	9f 93       	push	r25
   1a91e:	af 93       	push	r26
   1a920:	bf 93       	push	r27
   1a922:	ef 93       	push	r30
   1a924:	ff 93       	push	r31
   1a926:	86 ec       	ldi	r24, 0xC6	; 198
   1a928:	94 e1       	ldi	r25, 0x14	; 20
   1a92a:	f0 de       	rcall	.-544    	; 0x1a70c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a92c:	ff 91       	pop	r31
   1a92e:	ef 91       	pop	r30
   1a930:	bf 91       	pop	r27
   1a932:	af 91       	pop	r26
   1a934:	9f 91       	pop	r25
   1a936:	8f 91       	pop	r24
   1a938:	7f 91       	pop	r23
   1a93a:	6f 91       	pop	r22
   1a93c:	5f 91       	pop	r21
   1a93e:	4f 91       	pop	r20
   1a940:	3f 91       	pop	r19
   1a942:	2f 91       	pop	r18
   1a944:	0f 90       	pop	r0
   1a946:	0b be       	out	0x3b, r0	; 59
   1a948:	0f 90       	pop	r0
   1a94a:	0f be       	out	0x3f, r0	; 63
   1a94c:	0f 90       	pop	r0
   1a94e:	1f 90       	pop	r1
   1a950:	18 95       	reti

0001a952 <_GLOBAL__sub_I___vector_26>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   1a952:	e6 ec       	ldi	r30, 0xC6	; 198
   1a954:	f4 e1       	ldi	r31, 0x14	; 20
   1a956:	13 82       	std	Z+3, r1	; 0x03
   1a958:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   1a95a:	88 ee       	ldi	r24, 0xE8	; 232
   1a95c:	93 e0       	ldi	r25, 0x03	; 3
   1a95e:	a0 e0       	ldi	r26, 0x00	; 0
   1a960:	b0 e0       	ldi	r27, 0x00	; 0
   1a962:	84 83       	std	Z+4, r24	; 0x04
   1a964:	95 83       	std	Z+5, r25	; 0x05
   1a966:	a6 83       	std	Z+6, r26	; 0x06
   1a968:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   1a96a:	8f ed       	ldi	r24, 0xDF	; 223
   1a96c:	97 e0       	ldi	r25, 0x07	; 7
   1a96e:	91 83       	std	Z+1, r25	; 0x01
   1a970:	80 83       	st	Z, r24
   1a972:	85 ec       	ldi	r24, 0xC5	; 197
   1a974:	90 e0       	ldi	r25, 0x00	; 0
   1a976:	95 87       	std	Z+13, r25	; 0x0d
   1a978:	84 87       	std	Z+12, r24	; 0x0c
   1a97a:	84 ec       	ldi	r24, 0xC4	; 196
   1a97c:	90 e0       	ldi	r25, 0x00	; 0
   1a97e:	97 87       	std	Z+15, r25	; 0x0f
   1a980:	86 87       	std	Z+14, r24	; 0x0e
   1a982:	80 ec       	ldi	r24, 0xC0	; 192
   1a984:	90 e0       	ldi	r25, 0x00	; 0
   1a986:	91 8b       	std	Z+17, r25	; 0x11
   1a988:	80 8b       	std	Z+16, r24	; 0x10
   1a98a:	81 ec       	ldi	r24, 0xC1	; 193
   1a98c:	90 e0       	ldi	r25, 0x00	; 0
   1a98e:	93 8b       	std	Z+19, r25	; 0x13
   1a990:	82 8b       	std	Z+18, r24	; 0x12
   1a992:	82 ec       	ldi	r24, 0xC2	; 194
   1a994:	90 e0       	ldi	r25, 0x00	; 0
   1a996:	95 8b       	std	Z+21, r25	; 0x15
   1a998:	84 8b       	std	Z+20, r24	; 0x14
   1a99a:	86 ec       	ldi	r24, 0xC6	; 198
   1a99c:	90 e0       	ldi	r25, 0x00	; 0
   1a99e:	97 8b       	std	Z+23, r25	; 0x17
   1a9a0:	86 8b       	std	Z+22, r24	; 0x16
   1a9a2:	11 8e       	std	Z+25, r1	; 0x19
   1a9a4:	12 8e       	std	Z+26, r1	; 0x1a
   1a9a6:	13 8e       	std	Z+27, r1	; 0x1b
   1a9a8:	14 8e       	std	Z+28, r1	; 0x1c
   1a9aa:	08 95       	ret

0001a9ac <__vector_37>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   1a9ac:	1f 92       	push	r1
   1a9ae:	0f 92       	push	r0
   1a9b0:	0f b6       	in	r0, 0x3f	; 63
   1a9b2:	0f 92       	push	r0
   1a9b4:	11 24       	eor	r1, r1
   1a9b6:	0b b6       	in	r0, 0x3b	; 59
   1a9b8:	0f 92       	push	r0
   1a9ba:	2f 93       	push	r18
   1a9bc:	3f 93       	push	r19
   1a9be:	4f 93       	push	r20
   1a9c0:	5f 93       	push	r21
   1a9c2:	6f 93       	push	r22
   1a9c4:	7f 93       	push	r23
   1a9c6:	8f 93       	push	r24
   1a9c8:	9f 93       	push	r25
   1a9ca:	af 93       	push	r26
   1a9cc:	bf 93       	push	r27
   1a9ce:	ef 93       	push	r30
   1a9d0:	ff 93       	push	r31
   1a9d2:	83 e8       	ldi	r24, 0x83	; 131
   1a9d4:	96 e1       	ldi	r25, 0x16	; 22
   1a9d6:	9a de       	rcall	.-716    	; 0x1a70c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a9d8:	ff 91       	pop	r31
   1a9da:	ef 91       	pop	r30
   1a9dc:	bf 91       	pop	r27
   1a9de:	af 91       	pop	r26
   1a9e0:	9f 91       	pop	r25
   1a9e2:	8f 91       	pop	r24
   1a9e4:	7f 91       	pop	r23
   1a9e6:	6f 91       	pop	r22
   1a9e8:	5f 91       	pop	r21
   1a9ea:	4f 91       	pop	r20
   1a9ec:	3f 91       	pop	r19
   1a9ee:	2f 91       	pop	r18
   1a9f0:	0f 90       	pop	r0
   1a9f2:	0b be       	out	0x3b, r0	; 59
   1a9f4:	0f 90       	pop	r0
   1a9f6:	0f be       	out	0x3f, r0	; 63
   1a9f8:	0f 90       	pop	r0
   1a9fa:	1f 90       	pop	r1
   1a9fc:	18 95       	reti

0001a9fe <_GLOBAL__sub_I___vector_37>:
   1a9fe:	e3 e8       	ldi	r30, 0x83	; 131
   1aa00:	f6 e1       	ldi	r31, 0x16	; 22
   1aa02:	13 82       	std	Z+3, r1	; 0x03
   1aa04:	12 82       	std	Z+2, r1	; 0x02
   1aa06:	88 ee       	ldi	r24, 0xE8	; 232
   1aa08:	93 e0       	ldi	r25, 0x03	; 3
   1aa0a:	a0 e0       	ldi	r26, 0x00	; 0
   1aa0c:	b0 e0       	ldi	r27, 0x00	; 0
   1aa0e:	84 83       	std	Z+4, r24	; 0x04
   1aa10:	95 83       	std	Z+5, r25	; 0x05
   1aa12:	a6 83       	std	Z+6, r26	; 0x06
   1aa14:	b7 83       	std	Z+7, r27	; 0x07
   1aa16:	8f ed       	ldi	r24, 0xDF	; 223
   1aa18:	97 e0       	ldi	r25, 0x07	; 7
   1aa1a:	91 83       	std	Z+1, r25	; 0x01
   1aa1c:	80 83       	st	Z, r24
   1aa1e:	8d ec       	ldi	r24, 0xCD	; 205
   1aa20:	90 e0       	ldi	r25, 0x00	; 0
   1aa22:	95 87       	std	Z+13, r25	; 0x0d
   1aa24:	84 87       	std	Z+12, r24	; 0x0c
   1aa26:	8c ec       	ldi	r24, 0xCC	; 204
   1aa28:	90 e0       	ldi	r25, 0x00	; 0
   1aa2a:	97 87       	std	Z+15, r25	; 0x0f
   1aa2c:	86 87       	std	Z+14, r24	; 0x0e
   1aa2e:	88 ec       	ldi	r24, 0xC8	; 200
   1aa30:	90 e0       	ldi	r25, 0x00	; 0
   1aa32:	91 8b       	std	Z+17, r25	; 0x11
   1aa34:	80 8b       	std	Z+16, r24	; 0x10
   1aa36:	89 ec       	ldi	r24, 0xC9	; 201
   1aa38:	90 e0       	ldi	r25, 0x00	; 0
   1aa3a:	93 8b       	std	Z+19, r25	; 0x13
   1aa3c:	82 8b       	std	Z+18, r24	; 0x12
   1aa3e:	8a ec       	ldi	r24, 0xCA	; 202
   1aa40:	90 e0       	ldi	r25, 0x00	; 0
   1aa42:	95 8b       	std	Z+21, r25	; 0x15
   1aa44:	84 8b       	std	Z+20, r24	; 0x14
   1aa46:	8e ec       	ldi	r24, 0xCE	; 206
   1aa48:	90 e0       	ldi	r25, 0x00	; 0
   1aa4a:	97 8b       	std	Z+23, r25	; 0x17
   1aa4c:	86 8b       	std	Z+22, r24	; 0x16
   1aa4e:	11 8e       	std	Z+25, r1	; 0x19
   1aa50:	12 8e       	std	Z+26, r1	; 0x1a
   1aa52:	13 8e       	std	Z+27, r1	; 0x1b
   1aa54:	14 8e       	std	Z+28, r1	; 0x1c
   1aa56:	08 95       	ret

0001aa58 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1aa58:	cf 92       	push	r12
   1aa5a:	df 92       	push	r13
   1aa5c:	ef 92       	push	r14
   1aa5e:	ff 92       	push	r15
   1aa60:	0f 93       	push	r16
   1aa62:	1f 93       	push	r17
   1aa64:	cf 93       	push	r28
   1aa66:	df 93       	push	r29
   1aa68:	6c 01       	movw	r12, r24
   1aa6a:	7a 01       	movw	r14, r20
   1aa6c:	8b 01       	movw	r16, r22
   1aa6e:	c0 e0       	ldi	r28, 0x00	; 0
   1aa70:	d0 e0       	ldi	r29, 0x00	; 0
   1aa72:	ce 15       	cp	r28, r14
   1aa74:	df 05       	cpc	r29, r15
   1aa76:	81 f0       	breq	.+32     	; 0x1aa98 <_ZN5Print5writeEPKhj+0x40>
   1aa78:	d8 01       	movw	r26, r16
   1aa7a:	6d 91       	ld	r22, X+
   1aa7c:	8d 01       	movw	r16, r26
   1aa7e:	d6 01       	movw	r26, r12
   1aa80:	ed 91       	ld	r30, X+
   1aa82:	fc 91       	ld	r31, X
   1aa84:	01 90       	ld	r0, Z+
   1aa86:	f0 81       	ld	r31, Z
   1aa88:	e0 2d       	mov	r30, r0
   1aa8a:	c6 01       	movw	r24, r12
   1aa8c:	19 95       	eicall
   1aa8e:	89 2b       	or	r24, r25
   1aa90:	11 f0       	breq	.+4      	; 0x1aa96 <_ZN5Print5writeEPKhj+0x3e>
   1aa92:	21 96       	adiw	r28, 0x01	; 1
   1aa94:	ee cf       	rjmp	.-36     	; 0x1aa72 <_ZN5Print5writeEPKhj+0x1a>
   1aa96:	7e 01       	movw	r14, r28
   1aa98:	c7 01       	movw	r24, r14
   1aa9a:	df 91       	pop	r29
   1aa9c:	cf 91       	pop	r28
   1aa9e:	1f 91       	pop	r17
   1aaa0:	0f 91       	pop	r16
   1aaa2:	ff 90       	pop	r15
   1aaa4:	ef 90       	pop	r14
   1aaa6:	df 90       	pop	r13
   1aaa8:	cf 90       	pop	r12
   1aaaa:	08 95       	ret

0001aaac <_ZN5Print5printEPK19__FlashStringHelper>:
   1aaac:	ef 92       	push	r14
   1aaae:	ff 92       	push	r15
   1aab0:	0f 93       	push	r16
   1aab2:	1f 93       	push	r17
   1aab4:	cf 93       	push	r28
   1aab6:	df 93       	push	r29
   1aab8:	8c 01       	movw	r16, r24
   1aaba:	7b 01       	movw	r14, r22
   1aabc:	c0 e0       	ldi	r28, 0x00	; 0
   1aabe:	d0 e0       	ldi	r29, 0x00	; 0
   1aac0:	f7 01       	movw	r30, r14
   1aac2:	ec 0f       	add	r30, r28
   1aac4:	fd 1f       	adc	r31, r29
   1aac6:	64 91       	lpm	r22, Z
   1aac8:	66 23       	and	r22, r22
   1aaca:	61 f0       	breq	.+24     	; 0x1aae4 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1aacc:	d8 01       	movw	r26, r16
   1aace:	ed 91       	ld	r30, X+
   1aad0:	fc 91       	ld	r31, X
   1aad2:	01 90       	ld	r0, Z+
   1aad4:	f0 81       	ld	r31, Z
   1aad6:	e0 2d       	mov	r30, r0
   1aad8:	c8 01       	movw	r24, r16
   1aada:	19 95       	eicall
   1aadc:	89 2b       	or	r24, r25
   1aade:	11 f0       	breq	.+4      	; 0x1aae4 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1aae0:	21 96       	adiw	r28, 0x01	; 1
   1aae2:	ee cf       	rjmp	.-36     	; 0x1aac0 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1aae4:	ce 01       	movw	r24, r28
   1aae6:	df 91       	pop	r29
   1aae8:	cf 91       	pop	r28
   1aaea:	1f 91       	pop	r17
   1aaec:	0f 91       	pop	r16
   1aaee:	ff 90       	pop	r15
   1aaf0:	ef 90       	pop	r14
   1aaf2:	08 95       	ret

0001aaf4 <_ZN5Print5printEPKc>:
   1aaf4:	0c 94 4a 86 	jmp	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>

0001aaf8 <_ZN5Print5printEc>:
   1aaf8:	dc 01       	movw	r26, r24
   1aafa:	ed 91       	ld	r30, X+
   1aafc:	fc 91       	ld	r31, X
   1aafe:	01 90       	ld	r0, Z+
   1ab00:	f0 81       	ld	r31, Z
   1ab02:	e0 2d       	mov	r30, r0
   1ab04:	19 94       	eijmp

0001ab06 <_ZN5Print7printlnEv>:
   1ab06:	65 ef       	ldi	r22, 0xF5	; 245
   1ab08:	76 e0       	ldi	r23, 0x06	; 6
   1ab0a:	0c 94 4a 86 	jmp	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>

0001ab0e <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1ab0e:	0f 93       	push	r16
   1ab10:	1f 93       	push	r17
   1ab12:	cf 93       	push	r28
   1ab14:	df 93       	push	r29
   1ab16:	ec 01       	movw	r28, r24
   1ab18:	c9 df       	rcall	.-110    	; 0x1aaac <_ZN5Print5printEPK19__FlashStringHelper>
   1ab1a:	8c 01       	movw	r16, r24
   1ab1c:	ce 01       	movw	r24, r28
   1ab1e:	f3 df       	rcall	.-26     	; 0x1ab06 <_ZN5Print7printlnEv>
   1ab20:	80 0f       	add	r24, r16
   1ab22:	91 1f       	adc	r25, r17
   1ab24:	df 91       	pop	r29
   1ab26:	cf 91       	pop	r28
   1ab28:	1f 91       	pop	r17
   1ab2a:	0f 91       	pop	r16
   1ab2c:	08 95       	ret

0001ab2e <_ZN5Print7printlnEPKc>:
   1ab2e:	0f 93       	push	r16
   1ab30:	1f 93       	push	r17
   1ab32:	cf 93       	push	r28
   1ab34:	df 93       	push	r29
   1ab36:	ec 01       	movw	r28, r24
   1ab38:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1ab3c:	8c 01       	movw	r16, r24
   1ab3e:	ce 01       	movw	r24, r28
   1ab40:	e2 df       	rcall	.-60     	; 0x1ab06 <_ZN5Print7printlnEv>
   1ab42:	80 0f       	add	r24, r16
   1ab44:	91 1f       	adc	r25, r17
   1ab46:	df 91       	pop	r29
   1ab48:	cf 91       	pop	r28
   1ab4a:	1f 91       	pop	r17
   1ab4c:	0f 91       	pop	r16
   1ab4e:	08 95       	ret

0001ab50 <_ZN5Print11printNumberEmh>:
   1ab50:	8f 92       	push	r8
   1ab52:	9f 92       	push	r9
   1ab54:	af 92       	push	r10
   1ab56:	bf 92       	push	r11
   1ab58:	ef 92       	push	r14
   1ab5a:	ff 92       	push	r15
   1ab5c:	0f 93       	push	r16
   1ab5e:	1f 93       	push	r17
   1ab60:	cf 93       	push	r28
   1ab62:	df 93       	push	r29
   1ab64:	cd b7       	in	r28, 0x3d	; 61
   1ab66:	de b7       	in	r29, 0x3e	; 62
   1ab68:	a1 97       	sbiw	r28, 0x21	; 33
   1ab6a:	0f b6       	in	r0, 0x3f	; 63
   1ab6c:	f8 94       	cli
   1ab6e:	de bf       	out	0x3e, r29	; 62
   1ab70:	0f be       	out	0x3f, r0	; 63
   1ab72:	cd bf       	out	0x3d, r28	; 61
   1ab74:	7c 01       	movw	r14, r24
   1ab76:	fa 01       	movw	r30, r20
   1ab78:	cb 01       	movw	r24, r22
   1ab7a:	19 a2       	std	Y+33, r1	; 0x21
   1ab7c:	22 30       	cpi	r18, 0x02	; 2
   1ab7e:	08 f4       	brcc	.+2      	; 0x1ab82 <_ZN5Print11printNumberEmh+0x32>
   1ab80:	2a e0       	ldi	r18, 0x0A	; 10
   1ab82:	8e 01       	movw	r16, r28
   1ab84:	0f 5d       	subi	r16, 0xDF	; 223
   1ab86:	1f 4f       	sbci	r17, 0xFF	; 255
   1ab88:	82 2e       	mov	r8, r18
   1ab8a:	91 2c       	mov	r9, r1
   1ab8c:	a1 2c       	mov	r10, r1
   1ab8e:	b1 2c       	mov	r11, r1
   1ab90:	bf 01       	movw	r22, r30
   1ab92:	a5 01       	movw	r20, r10
   1ab94:	94 01       	movw	r18, r8
   1ab96:	0e 94 b8 eb 	call	0x1d770	; 0x1d770 <__udivmodsi4>
   1ab9a:	f9 01       	movw	r30, r18
   1ab9c:	ca 01       	movw	r24, r20
   1ab9e:	01 50       	subi	r16, 0x01	; 1
   1aba0:	11 09       	sbc	r17, r1
   1aba2:	6a 30       	cpi	r22, 0x0A	; 10
   1aba4:	10 f4       	brcc	.+4      	; 0x1abaa <_ZN5Print11printNumberEmh+0x5a>
   1aba6:	60 5d       	subi	r22, 0xD0	; 208
   1aba8:	01 c0       	rjmp	.+2      	; 0x1abac <_ZN5Print11printNumberEmh+0x5c>
   1abaa:	69 5c       	subi	r22, 0xC9	; 201
   1abac:	d8 01       	movw	r26, r16
   1abae:	6c 93       	st	X, r22
   1abb0:	23 2b       	or	r18, r19
   1abb2:	24 2b       	or	r18, r20
   1abb4:	25 2b       	or	r18, r21
   1abb6:	61 f7       	brne	.-40     	; 0x1ab90 <_ZN5Print11printNumberEmh+0x40>
   1abb8:	b8 01       	movw	r22, r16
   1abba:	c7 01       	movw	r24, r14
   1abbc:	0e 94 4a 86 	call	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1abc0:	a1 96       	adiw	r28, 0x21	; 33
   1abc2:	0f b6       	in	r0, 0x3f	; 63
   1abc4:	f8 94       	cli
   1abc6:	de bf       	out	0x3e, r29	; 62
   1abc8:	0f be       	out	0x3f, r0	; 63
   1abca:	cd bf       	out	0x3d, r28	; 61
   1abcc:	df 91       	pop	r29
   1abce:	cf 91       	pop	r28
   1abd0:	1f 91       	pop	r17
   1abd2:	0f 91       	pop	r16
   1abd4:	ff 90       	pop	r15
   1abd6:	ef 90       	pop	r14
   1abd8:	bf 90       	pop	r11
   1abda:	af 90       	pop	r10
   1abdc:	9f 90       	pop	r9
   1abde:	8f 90       	pop	r8
   1abe0:	08 95       	ret

0001abe2 <_ZN5Print5printEmi>:
   1abe2:	21 15       	cp	r18, r1
   1abe4:	31 05       	cpc	r19, r1
   1abe6:	41 f4       	brne	.+16     	; 0x1abf8 <_ZN5Print5printEmi+0x16>
   1abe8:	dc 01       	movw	r26, r24
   1abea:	ed 91       	ld	r30, X+
   1abec:	fc 91       	ld	r31, X
   1abee:	01 90       	ld	r0, Z+
   1abf0:	f0 81       	ld	r31, Z
   1abf2:	e0 2d       	mov	r30, r0
   1abf4:	64 2f       	mov	r22, r20
   1abf6:	19 94       	eijmp
   1abf8:	ab cf       	rjmp	.-170    	; 0x1ab50 <_ZN5Print11printNumberEmh>

0001abfa <_ZN5Print5printEhi>:
   1abfa:	9a 01       	movw	r18, r20
   1abfc:	46 2f       	mov	r20, r22
   1abfe:	50 e0       	ldi	r21, 0x00	; 0
   1ac00:	60 e0       	ldi	r22, 0x00	; 0
   1ac02:	70 e0       	ldi	r23, 0x00	; 0
   1ac04:	ee cf       	rjmp	.-36     	; 0x1abe2 <_ZN5Print5printEmi>

0001ac06 <_ZN5Print7printlnEhi>:
   1ac06:	0f 93       	push	r16
   1ac08:	1f 93       	push	r17
   1ac0a:	cf 93       	push	r28
   1ac0c:	df 93       	push	r29
   1ac0e:	ec 01       	movw	r28, r24
   1ac10:	f4 df       	rcall	.-24     	; 0x1abfa <_ZN5Print5printEhi>
   1ac12:	8c 01       	movw	r16, r24
   1ac14:	ce 01       	movw	r24, r28
   1ac16:	77 df       	rcall	.-274    	; 0x1ab06 <_ZN5Print7printlnEv>
   1ac18:	80 0f       	add	r24, r16
   1ac1a:	91 1f       	adc	r25, r17
   1ac1c:	df 91       	pop	r29
   1ac1e:	cf 91       	pop	r28
   1ac20:	1f 91       	pop	r17
   1ac22:	0f 91       	pop	r16
   1ac24:	08 95       	ret

0001ac26 <_ZN5Print5printEji>:
   1ac26:	9a 01       	movw	r18, r20
   1ac28:	ab 01       	movw	r20, r22
   1ac2a:	60 e0       	ldi	r22, 0x00	; 0
   1ac2c:	70 e0       	ldi	r23, 0x00	; 0
   1ac2e:	d9 cf       	rjmp	.-78     	; 0x1abe2 <_ZN5Print5printEmi>

0001ac30 <_ZN5Print7printlnEji>:
   1ac30:	0f 93       	push	r16
   1ac32:	1f 93       	push	r17
   1ac34:	cf 93       	push	r28
   1ac36:	df 93       	push	r29
   1ac38:	ec 01       	movw	r28, r24
   1ac3a:	f5 df       	rcall	.-22     	; 0x1ac26 <_ZN5Print5printEji>
   1ac3c:	8c 01       	movw	r16, r24
   1ac3e:	ce 01       	movw	r24, r28
   1ac40:	62 df       	rcall	.-316    	; 0x1ab06 <_ZN5Print7printlnEv>
   1ac42:	80 0f       	add	r24, r16
   1ac44:	91 1f       	adc	r25, r17
   1ac46:	df 91       	pop	r29
   1ac48:	cf 91       	pop	r28
   1ac4a:	1f 91       	pop	r17
   1ac4c:	0f 91       	pop	r16
   1ac4e:	08 95       	ret

0001ac50 <_ZN5Print7printlnEmi>:
   1ac50:	0f 93       	push	r16
   1ac52:	1f 93       	push	r17
   1ac54:	cf 93       	push	r28
   1ac56:	df 93       	push	r29
   1ac58:	ec 01       	movw	r28, r24
   1ac5a:	c3 df       	rcall	.-122    	; 0x1abe2 <_ZN5Print5printEmi>
   1ac5c:	8c 01       	movw	r16, r24
   1ac5e:	ce 01       	movw	r24, r28
   1ac60:	52 df       	rcall	.-348    	; 0x1ab06 <_ZN5Print7printlnEv>
   1ac62:	80 0f       	add	r24, r16
   1ac64:	91 1f       	adc	r25, r17
   1ac66:	df 91       	pop	r29
   1ac68:	cf 91       	pop	r28
   1ac6a:	1f 91       	pop	r17
   1ac6c:	0f 91       	pop	r16
   1ac6e:	08 95       	ret

0001ac70 <_ZN5Print5printEli>:
   1ac70:	cf 92       	push	r12
   1ac72:	df 92       	push	r13
   1ac74:	ef 92       	push	r14
   1ac76:	ff 92       	push	r15
   1ac78:	0f 93       	push	r16
   1ac7a:	1f 93       	push	r17
   1ac7c:	cf 93       	push	r28
   1ac7e:	df 93       	push	r29
   1ac80:	21 15       	cp	r18, r1
   1ac82:	31 05       	cpc	r19, r1
   1ac84:	81 f4       	brne	.+32     	; 0x1aca6 <_ZN5Print5printEli+0x36>
   1ac86:	dc 01       	movw	r26, r24
   1ac88:	ed 91       	ld	r30, X+
   1ac8a:	fc 91       	ld	r31, X
   1ac8c:	01 90       	ld	r0, Z+
   1ac8e:	f0 81       	ld	r31, Z
   1ac90:	e0 2d       	mov	r30, r0
   1ac92:	64 2f       	mov	r22, r20
   1ac94:	df 91       	pop	r29
   1ac96:	cf 91       	pop	r28
   1ac98:	1f 91       	pop	r17
   1ac9a:	0f 91       	pop	r16
   1ac9c:	ff 90       	pop	r15
   1ac9e:	ef 90       	pop	r14
   1aca0:	df 90       	pop	r13
   1aca2:	cf 90       	pop	r12
   1aca4:	19 94       	eijmp
   1aca6:	2a 30       	cpi	r18, 0x0A	; 10
   1aca8:	31 05       	cpc	r19, r1
   1acaa:	f1 f4       	brne	.+60     	; 0x1ace8 <_ZN5Print5printEli+0x78>
   1acac:	77 ff       	sbrs	r23, 7
   1acae:	1b c0       	rjmp	.+54     	; 0x1ace6 <_ZN5Print5printEli+0x76>
   1acb0:	6a 01       	movw	r12, r20
   1acb2:	7b 01       	movw	r14, r22
   1acb4:	ec 01       	movw	r28, r24
   1acb6:	6d e2       	ldi	r22, 0x2D	; 45
   1acb8:	1f df       	rcall	.-450    	; 0x1aaf8 <_ZN5Print5printEc>
   1acba:	8c 01       	movw	r16, r24
   1acbc:	44 27       	eor	r20, r20
   1acbe:	55 27       	eor	r21, r21
   1acc0:	ba 01       	movw	r22, r20
   1acc2:	4c 19       	sub	r20, r12
   1acc4:	5d 09       	sbc	r21, r13
   1acc6:	6e 09       	sbc	r22, r14
   1acc8:	7f 09       	sbc	r23, r15
   1acca:	2a e0       	ldi	r18, 0x0A	; 10
   1accc:	ce 01       	movw	r24, r28
   1acce:	40 df       	rcall	.-384    	; 0x1ab50 <_ZN5Print11printNumberEmh>
   1acd0:	80 0f       	add	r24, r16
   1acd2:	91 1f       	adc	r25, r17
   1acd4:	df 91       	pop	r29
   1acd6:	cf 91       	pop	r28
   1acd8:	1f 91       	pop	r17
   1acda:	0f 91       	pop	r16
   1acdc:	ff 90       	pop	r15
   1acde:	ef 90       	pop	r14
   1ace0:	df 90       	pop	r13
   1ace2:	cf 90       	pop	r12
   1ace4:	08 95       	ret
   1ace6:	2a e0       	ldi	r18, 0x0A	; 10
   1ace8:	df 91       	pop	r29
   1acea:	cf 91       	pop	r28
   1acec:	1f 91       	pop	r17
   1acee:	0f 91       	pop	r16
   1acf0:	ff 90       	pop	r15
   1acf2:	ef 90       	pop	r14
   1acf4:	df 90       	pop	r13
   1acf6:	cf 90       	pop	r12
   1acf8:	2b cf       	rjmp	.-426    	; 0x1ab50 <_ZN5Print11printNumberEmh>

0001acfa <_ZN5Print5printEii>:
   1acfa:	9a 01       	movw	r18, r20
   1acfc:	ab 01       	movw	r20, r22
   1acfe:	77 0f       	add	r23, r23
   1ad00:	66 0b       	sbc	r22, r22
   1ad02:	77 0b       	sbc	r23, r23
   1ad04:	b5 cf       	rjmp	.-150    	; 0x1ac70 <_ZN5Print5printEli>

0001ad06 <_ZN5Print7printlnEii>:
   1ad06:	0f 93       	push	r16
   1ad08:	1f 93       	push	r17
   1ad0a:	cf 93       	push	r28
   1ad0c:	df 93       	push	r29
   1ad0e:	ec 01       	movw	r28, r24
   1ad10:	f4 df       	rcall	.-24     	; 0x1acfa <_ZN5Print5printEii>
   1ad12:	8c 01       	movw	r16, r24
   1ad14:	ce 01       	movw	r24, r28
   1ad16:	f7 de       	rcall	.-530    	; 0x1ab06 <_ZN5Print7printlnEv>
   1ad18:	80 0f       	add	r24, r16
   1ad1a:	91 1f       	adc	r25, r17
   1ad1c:	df 91       	pop	r29
   1ad1e:	cf 91       	pop	r28
   1ad20:	1f 91       	pop	r17
   1ad22:	0f 91       	pop	r16
   1ad24:	08 95       	ret

0001ad26 <_ZN5Print10printFloatEdh>:
   1ad26:	7f 92       	push	r7
   1ad28:	8f 92       	push	r8
   1ad2a:	9f 92       	push	r9
   1ad2c:	af 92       	push	r10
   1ad2e:	bf 92       	push	r11
   1ad30:	cf 92       	push	r12
   1ad32:	df 92       	push	r13
   1ad34:	ef 92       	push	r14
   1ad36:	ff 92       	push	r15
   1ad38:	0f 93       	push	r16
   1ad3a:	1f 93       	push	r17
   1ad3c:	cf 93       	push	r28
   1ad3e:	df 93       	push	r29
   1ad40:	8c 01       	movw	r16, r24
   1ad42:	6a 01       	movw	r12, r20
   1ad44:	7b 01       	movw	r14, r22
   1ad46:	72 2e       	mov	r7, r18
   1ad48:	9a 01       	movw	r18, r20
   1ad4a:	ab 01       	movw	r20, r22
   1ad4c:	c7 01       	movw	r24, r14
   1ad4e:	b6 01       	movw	r22, r12
   1ad50:	0e 94 4b ea 	call	0x1d496	; 0x1d496 <__unordsf2>
   1ad54:	88 23       	and	r24, r24
   1ad56:	19 f0       	breq	.+6      	; 0x1ad5e <_ZN5Print10printFloatEdh+0x38>
   1ad58:	6d ee       	ldi	r22, 0xED	; 237
   1ad5a:	77 e0       	ldi	r23, 0x07	; 7
   1ad5c:	25 c0       	rjmp	.+74     	; 0x1ada8 <_ZN5Print10printFloatEdh+0x82>
   1ad5e:	46 01       	movw	r8, r12
   1ad60:	57 01       	movw	r10, r14
   1ad62:	e8 94       	clt
   1ad64:	b7 f8       	bld	r11, 7
   1ad66:	2f ef       	ldi	r18, 0xFF	; 255
   1ad68:	3f ef       	ldi	r19, 0xFF	; 255
   1ad6a:	4f e7       	ldi	r20, 0x7F	; 127
   1ad6c:	5f e7       	ldi	r21, 0x7F	; 127
   1ad6e:	c5 01       	movw	r24, r10
   1ad70:	b4 01       	movw	r22, r8
   1ad72:	0e 94 4b ea 	call	0x1d496	; 0x1d496 <__unordsf2>
   1ad76:	81 11       	cpse	r24, r1
   1ad78:	0c c0       	rjmp	.+24     	; 0x1ad92 <_ZN5Print10printFloatEdh+0x6c>
   1ad7a:	2f ef       	ldi	r18, 0xFF	; 255
   1ad7c:	3f ef       	ldi	r19, 0xFF	; 255
   1ad7e:	4f e7       	ldi	r20, 0x7F	; 127
   1ad80:	5f e7       	ldi	r21, 0x7F	; 127
   1ad82:	c5 01       	movw	r24, r10
   1ad84:	b4 01       	movw	r22, r8
   1ad86:	c8 da       	rcall	.-2672   	; 0x1a318 <__cmpsf2>
   1ad88:	18 16       	cp	r1, r24
   1ad8a:	1c f4       	brge	.+6      	; 0x1ad92 <_ZN5Print10printFloatEdh+0x6c>
   1ad8c:	61 ef       	ldi	r22, 0xF1	; 241
   1ad8e:	77 e0       	ldi	r23, 0x07	; 7
   1ad90:	0b c0       	rjmp	.+22     	; 0x1ada8 <_ZN5Print10printFloatEdh+0x82>
   1ad92:	2f ef       	ldi	r18, 0xFF	; 255
   1ad94:	3f ef       	ldi	r19, 0xFF	; 255
   1ad96:	4f e7       	ldi	r20, 0x7F	; 127
   1ad98:	5f e4       	ldi	r21, 0x4F	; 79
   1ad9a:	c7 01       	movw	r24, r14
   1ad9c:	b6 01       	movw	r22, r12
   1ad9e:	06 dc       	rcall	.-2036   	; 0x1a5ac <__gesf2>
   1ada0:	18 16       	cp	r1, r24
   1ada2:	94 f4       	brge	.+36     	; 0x1adc8 <_ZN5Print10printFloatEdh+0xa2>
   1ada4:	65 ef       	ldi	r22, 0xF5	; 245
   1ada6:	77 e0       	ldi	r23, 0x07	; 7
   1ada8:	c8 01       	movw	r24, r16
   1adaa:	df 91       	pop	r29
   1adac:	cf 91       	pop	r28
   1adae:	1f 91       	pop	r17
   1adb0:	0f 91       	pop	r16
   1adb2:	ff 90       	pop	r15
   1adb4:	ef 90       	pop	r14
   1adb6:	df 90       	pop	r13
   1adb8:	cf 90       	pop	r12
   1adba:	bf 90       	pop	r11
   1adbc:	af 90       	pop	r10
   1adbe:	9f 90       	pop	r9
   1adc0:	8f 90       	pop	r8
   1adc2:	7f 90       	pop	r7
   1adc4:	0c 94 4a 86 	jmp	0x10c94	; 0x10c94 <_ZN5Print5writeEPKc>
   1adc8:	2f ef       	ldi	r18, 0xFF	; 255
   1adca:	3f ef       	ldi	r19, 0xFF	; 255
   1adcc:	4f e7       	ldi	r20, 0x7F	; 127
   1adce:	5f ec       	ldi	r21, 0xCF	; 207
   1add0:	c7 01       	movw	r24, r14
   1add2:	b6 01       	movw	r22, r12
   1add4:	a1 da       	rcall	.-2750   	; 0x1a318 <__cmpsf2>
   1add6:	87 fd       	sbrc	r24, 7
   1add8:	e5 cf       	rjmp	.-54     	; 0x1ada4 <_ZN5Print10printFloatEdh+0x7e>
   1adda:	20 e0       	ldi	r18, 0x00	; 0
   1addc:	30 e0       	ldi	r19, 0x00	; 0
   1adde:	a9 01       	movw	r20, r18
   1ade0:	c7 01       	movw	r24, r14
   1ade2:	b6 01       	movw	r22, r12
   1ade4:	99 da       	rcall	.-2766   	; 0x1a318 <__cmpsf2>
   1ade6:	87 ff       	sbrs	r24, 7
   1ade8:	09 c0       	rjmp	.+18     	; 0x1adfc <_ZN5Print10printFloatEdh+0xd6>
   1adea:	6d e2       	ldi	r22, 0x2D	; 45
   1adec:	c8 01       	movw	r24, r16
   1adee:	84 de       	rcall	.-760    	; 0x1aaf8 <_ZN5Print5printEc>
   1adf0:	ec 01       	movw	r28, r24
   1adf2:	f7 fa       	bst	r15, 7
   1adf4:	f0 94       	com	r15
   1adf6:	f7 f8       	bld	r15, 7
   1adf8:	f0 94       	com	r15
   1adfa:	02 c0       	rjmp	.+4      	; 0x1ae00 <_ZN5Print10printFloatEdh+0xda>
   1adfc:	c0 e0       	ldi	r28, 0x00	; 0
   1adfe:	d0 e0       	ldi	r29, 0x00	; 0
   1ae00:	b1 2c       	mov	r11, r1
   1ae02:	60 e0       	ldi	r22, 0x00	; 0
   1ae04:	70 e0       	ldi	r23, 0x00	; 0
   1ae06:	80 e0       	ldi	r24, 0x00	; 0
   1ae08:	9f e3       	ldi	r25, 0x3F	; 63
   1ae0a:	7b 14       	cp	r7, r11
   1ae0c:	39 f0       	breq	.+14     	; 0x1ae1c <_ZN5Print10printFloatEdh+0xf6>
   1ae0e:	20 e0       	ldi	r18, 0x00	; 0
   1ae10:	30 e0       	ldi	r19, 0x00	; 0
   1ae12:	40 e2       	ldi	r20, 0x20	; 32
   1ae14:	51 e4       	ldi	r21, 0x41	; 65
   1ae16:	84 da       	rcall	.-2808   	; 0x1a320 <__divsf3>
   1ae18:	b3 94       	inc	r11
   1ae1a:	f7 cf       	rjmp	.-18     	; 0x1ae0a <_ZN5Print10printFloatEdh+0xe4>
   1ae1c:	a7 01       	movw	r20, r14
   1ae1e:	96 01       	movw	r18, r12
   1ae20:	17 da       	rcall	.-3026   	; 0x1a250 <__addsf3>
   1ae22:	6b 01       	movw	r12, r22
   1ae24:	7c 01       	movw	r14, r24
   1ae26:	e4 da       	rcall	.-2616   	; 0x1a3f0 <__fixunssfsi>
   1ae28:	4b 01       	movw	r8, r22
   1ae2a:	5c 01       	movw	r10, r24
   1ae2c:	2a e0       	ldi	r18, 0x0A	; 10
   1ae2e:	ab 01       	movw	r20, r22
   1ae30:	bc 01       	movw	r22, r24
   1ae32:	c8 01       	movw	r24, r16
   1ae34:	8d de       	rcall	.-742    	; 0x1ab50 <_ZN5Print11printNumberEmh>
   1ae36:	c8 0f       	add	r28, r24
   1ae38:	d9 1f       	adc	r29, r25
   1ae3a:	77 20       	and	r7, r7
   1ae3c:	79 f1       	breq	.+94     	; 0x1ae9c <_ZN5Print10printFloatEdh+0x176>
   1ae3e:	c5 01       	movw	r24, r10
   1ae40:	b4 01       	movw	r22, r8
   1ae42:	02 db       	rcall	.-2556   	; 0x1a448 <__floatunsisf>
   1ae44:	9b 01       	movw	r18, r22
   1ae46:	ac 01       	movw	r20, r24
   1ae48:	c7 01       	movw	r24, r14
   1ae4a:	b6 01       	movw	r22, r12
   1ae4c:	00 da       	rcall	.-3072   	; 0x1a24e <__subsf3>
   1ae4e:	6b 01       	movw	r12, r22
   1ae50:	7c 01       	movw	r14, r24
   1ae52:	6e e2       	ldi	r22, 0x2E	; 46
   1ae54:	c8 01       	movw	r24, r16
   1ae56:	50 de       	rcall	.-864    	; 0x1aaf8 <_ZN5Print5printEc>
   1ae58:	c8 0f       	add	r28, r24
   1ae5a:	d9 1f       	adc	r29, r25
   1ae5c:	20 e0       	ldi	r18, 0x00	; 0
   1ae5e:	30 e0       	ldi	r19, 0x00	; 0
   1ae60:	40 e2       	ldi	r20, 0x20	; 32
   1ae62:	51 e4       	ldi	r21, 0x41	; 65
   1ae64:	c7 01       	movw	r24, r14
   1ae66:	b6 01       	movw	r22, r12
   1ae68:	a5 db       	rcall	.-2230   	; 0x1a5b4 <__mulsf3>
   1ae6a:	4b 01       	movw	r8, r22
   1ae6c:	5c 01       	movw	r10, r24
   1ae6e:	c0 da       	rcall	.-2688   	; 0x1a3f0 <__fixunssfsi>
   1ae70:	6b 01       	movw	r12, r22
   1ae72:	7c 01       	movw	r14, r24
   1ae74:	4a e0       	ldi	r20, 0x0A	; 10
   1ae76:	50 e0       	ldi	r21, 0x00	; 0
   1ae78:	c8 01       	movw	r24, r16
   1ae7a:	d5 de       	rcall	.-598    	; 0x1ac26 <_ZN5Print5printEji>
   1ae7c:	c8 0f       	add	r28, r24
   1ae7e:	d9 1f       	adc	r29, r25
   1ae80:	b6 01       	movw	r22, r12
   1ae82:	80 e0       	ldi	r24, 0x00	; 0
   1ae84:	90 e0       	ldi	r25, 0x00	; 0
   1ae86:	e0 da       	rcall	.-2624   	; 0x1a448 <__floatunsisf>
   1ae88:	9b 01       	movw	r18, r22
   1ae8a:	ac 01       	movw	r20, r24
   1ae8c:	c5 01       	movw	r24, r10
   1ae8e:	b4 01       	movw	r22, r8
   1ae90:	de d9       	rcall	.-3140   	; 0x1a24e <__subsf3>
   1ae92:	6b 01       	movw	r12, r22
   1ae94:	7c 01       	movw	r14, r24
   1ae96:	7a 94       	dec	r7
   1ae98:	71 10       	cpse	r7, r1
   1ae9a:	e0 cf       	rjmp	.-64     	; 0x1ae5c <_ZN5Print10printFloatEdh+0x136>
   1ae9c:	ce 01       	movw	r24, r28
   1ae9e:	df 91       	pop	r29
   1aea0:	cf 91       	pop	r28
   1aea2:	1f 91       	pop	r17
   1aea4:	0f 91       	pop	r16
   1aea6:	ff 90       	pop	r15
   1aea8:	ef 90       	pop	r14
   1aeaa:	df 90       	pop	r13
   1aeac:	cf 90       	pop	r12
   1aeae:	bf 90       	pop	r11
   1aeb0:	af 90       	pop	r10
   1aeb2:	9f 90       	pop	r9
   1aeb4:	8f 90       	pop	r8
   1aeb6:	7f 90       	pop	r7
   1aeb8:	08 95       	ret

0001aeba <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1aeba:	0f 93       	push	r16
   1aebc:	1f 93       	push	r17
   1aebe:	cf 93       	push	r28
   1aec0:	df 93       	push	r29
   1aec2:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1aec4:	30 df       	rcall	.-416    	; 0x1ad26 <_ZN5Print10printFloatEdh>
   1aec6:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1aec8:	ce 01       	movw	r24, r28
   1aeca:	1d de       	rcall	.-966    	; 0x1ab06 <_ZN5Print7printlnEv>
  return n;
}
   1aecc:	80 0f       	add	r24, r16
   1aece:	91 1f       	adc	r25, r17
   1aed0:	df 91       	pop	r29
   1aed2:	cf 91       	pop	r28
   1aed4:	1f 91       	pop	r17
   1aed6:	0f 91       	pop	r16
   1aed8:	08 95       	ret

0001aeda <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1aeda:	1f 92       	push	r1
   1aedc:	0f 92       	push	r0
   1aede:	0f b6       	in	r0, 0x3f	; 63
   1aee0:	0f 92       	push	r0
   1aee2:	11 24       	eor	r1, r1
   1aee4:	2f 93       	push	r18
   1aee6:	3f 93       	push	r19
   1aee8:	8f 93       	push	r24
   1aeea:	9f 93       	push	r25
   1aeec:	af 93       	push	r26
   1aeee:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1aef0:	80 91 41 18 	lds	r24, 0x1841	; 0x801841 <timer0_millis>
   1aef4:	90 91 42 18 	lds	r25, 0x1842	; 0x801842 <timer0_millis+0x1>
   1aef8:	a0 91 43 18 	lds	r26, 0x1843	; 0x801843 <timer0_millis+0x2>
   1aefc:	b0 91 44 18 	lds	r27, 0x1844	; 0x801844 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1af00:	30 91 40 18 	lds	r19, 0x1840	; 0x801840 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1af04:	23 e0       	ldi	r18, 0x03	; 3
   1af06:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1af08:	2d 37       	cpi	r18, 0x7D	; 125
   1af0a:	20 f4       	brcc	.+8      	; 0x1af14 <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1af0c:	01 96       	adiw	r24, 0x01	; 1
   1af0e:	a1 1d       	adc	r26, r1
   1af10:	b1 1d       	adc	r27, r1
   1af12:	05 c0       	rjmp	.+10     	; 0x1af1e <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1af14:	26 e8       	ldi	r18, 0x86	; 134
   1af16:	23 0f       	add	r18, r19
		m += 1;
   1af18:	02 96       	adiw	r24, 0x02	; 2
   1af1a:	a1 1d       	adc	r26, r1
   1af1c:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1af1e:	20 93 40 18 	sts	0x1840, r18	; 0x801840 <timer0_fract>
	timer0_millis = m;
   1af22:	80 93 41 18 	sts	0x1841, r24	; 0x801841 <timer0_millis>
   1af26:	90 93 42 18 	sts	0x1842, r25	; 0x801842 <timer0_millis+0x1>
   1af2a:	a0 93 43 18 	sts	0x1843, r26	; 0x801843 <timer0_millis+0x2>
   1af2e:	b0 93 44 18 	sts	0x1844, r27	; 0x801844 <timer0_millis+0x3>
	timer0_overflow_count++;
   1af32:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1af36:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1af3a:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1af3e:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
   1af42:	01 96       	adiw	r24, 0x01	; 1
   1af44:	a1 1d       	adc	r26, r1
   1af46:	b1 1d       	adc	r27, r1
   1af48:	80 93 45 18 	sts	0x1845, r24	; 0x801845 <timer0_overflow_count>
   1af4c:	90 93 46 18 	sts	0x1846, r25	; 0x801846 <timer0_overflow_count+0x1>
   1af50:	a0 93 47 18 	sts	0x1847, r26	; 0x801847 <timer0_overflow_count+0x2>
   1af54:	b0 93 48 18 	sts	0x1848, r27	; 0x801848 <timer0_overflow_count+0x3>
}
   1af58:	bf 91       	pop	r27
   1af5a:	af 91       	pop	r26
   1af5c:	9f 91       	pop	r25
   1af5e:	8f 91       	pop	r24
   1af60:	3f 91       	pop	r19
   1af62:	2f 91       	pop	r18
   1af64:	0f 90       	pop	r0
   1af66:	0f be       	out	0x3f, r0	; 63
   1af68:	0f 90       	pop	r0
   1af6a:	1f 90       	pop	r1
   1af6c:	18 95       	reti

0001af6e <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1af6e:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1af70:	f8 94       	cli
	m = timer0_millis;
   1af72:	60 91 41 18 	lds	r22, 0x1841	; 0x801841 <timer0_millis>
   1af76:	70 91 42 18 	lds	r23, 0x1842	; 0x801842 <timer0_millis+0x1>
   1af7a:	80 91 43 18 	lds	r24, 0x1843	; 0x801843 <timer0_millis+0x2>
   1af7e:	90 91 44 18 	lds	r25, 0x1844	; 0x801844 <timer0_millis+0x3>
	SREG = oldSREG;
   1af82:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1af84:	08 95       	ret

0001af86 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1af86:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1af88:	f8 94       	cli
	m = timer0_overflow_count;
   1af8a:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1af8e:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1af92:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1af96:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1af9a:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1af9c:	a8 9b       	sbis	0x15, 0	; 21
   1af9e:	05 c0       	rjmp	.+10     	; 0x1afaa <micros+0x24>
   1afa0:	2f 3f       	cpi	r18, 0xFF	; 255
   1afa2:	19 f0       	breq	.+6      	; 0x1afaa <micros+0x24>
		m++;
   1afa4:	01 96       	adiw	r24, 0x01	; 1
   1afa6:	a1 1d       	adc	r26, r1
   1afa8:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1afaa:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1afac:	ba 2f       	mov	r27, r26
   1afae:	a9 2f       	mov	r26, r25
   1afb0:	98 2f       	mov	r25, r24
   1afb2:	88 27       	eor	r24, r24
   1afb4:	82 0f       	add	r24, r18
   1afb6:	91 1d       	adc	r25, r1
   1afb8:	a1 1d       	adc	r26, r1
   1afba:	b1 1d       	adc	r27, r1
   1afbc:	bc 01       	movw	r22, r24
   1afbe:	cd 01       	movw	r24, r26
   1afc0:	42 e0       	ldi	r20, 0x02	; 2
   1afc2:	66 0f       	add	r22, r22
   1afc4:	77 1f       	adc	r23, r23
   1afc6:	88 1f       	adc	r24, r24
   1afc8:	99 1f       	adc	r25, r25
   1afca:	4a 95       	dec	r20
   1afcc:	d1 f7       	brne	.-12     	; 0x1afc2 <micros+0x3c>
}
   1afce:	08 95       	ret

0001afd0 <delay>:

void delay(unsigned long ms)
{
   1afd0:	8f 92       	push	r8
   1afd2:	9f 92       	push	r9
   1afd4:	af 92       	push	r10
   1afd6:	bf 92       	push	r11
   1afd8:	cf 92       	push	r12
   1afda:	df 92       	push	r13
   1afdc:	ef 92       	push	r14
   1afde:	ff 92       	push	r15
   1afe0:	6b 01       	movw	r12, r22
   1afe2:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1afe4:	d0 df       	rcall	.-96     	; 0x1af86 <micros>
   1afe6:	4b 01       	movw	r8, r22
   1afe8:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1afea:	c1 14       	cp	r12, r1
   1afec:	d1 04       	cpc	r13, r1
   1afee:	e1 04       	cpc	r14, r1
   1aff0:	f1 04       	cpc	r15, r1
   1aff2:	f9 f0       	breq	.+62     	; 0x1b032 <delay+0x62>
		yield();
   1aff4:	0e 94 16 e3 	call	0x1c62c	; 0x1c62c <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1aff8:	c6 df       	rcall	.-116    	; 0x1af86 <micros>
   1affa:	dc 01       	movw	r26, r24
   1affc:	cb 01       	movw	r24, r22
   1affe:	88 19       	sub	r24, r8
   1b000:	99 09       	sbc	r25, r9
   1b002:	aa 09       	sbc	r26, r10
   1b004:	bb 09       	sbc	r27, r11
   1b006:	88 3e       	cpi	r24, 0xE8	; 232
   1b008:	93 40       	sbci	r25, 0x03	; 3
   1b00a:	a1 05       	cpc	r26, r1
   1b00c:	b1 05       	cpc	r27, r1
   1b00e:	68 f3       	brcs	.-38     	; 0x1afea <delay+0x1a>
			ms--;
   1b010:	21 e0       	ldi	r18, 0x01	; 1
   1b012:	c2 1a       	sub	r12, r18
   1b014:	d1 08       	sbc	r13, r1
   1b016:	e1 08       	sbc	r14, r1
   1b018:	f1 08       	sbc	r15, r1
			start += 1000;
   1b01a:	88 ee       	ldi	r24, 0xE8	; 232
   1b01c:	88 0e       	add	r8, r24
   1b01e:	83 e0       	ldi	r24, 0x03	; 3
   1b020:	98 1e       	adc	r9, r24
   1b022:	a1 1c       	adc	r10, r1
   1b024:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1b026:	c1 14       	cp	r12, r1
   1b028:	d1 04       	cpc	r13, r1
   1b02a:	e1 04       	cpc	r14, r1
   1b02c:	f1 04       	cpc	r15, r1
   1b02e:	21 f7       	brne	.-56     	; 0x1aff8 <delay+0x28>
   1b030:	dc cf       	rjmp	.-72     	; 0x1afea <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1b032:	ff 90       	pop	r15
   1b034:	ef 90       	pop	r14
   1b036:	df 90       	pop	r13
   1b038:	cf 90       	pop	r12
   1b03a:	bf 90       	pop	r11
   1b03c:	af 90       	pop	r10
   1b03e:	9f 90       	pop	r9
   1b040:	8f 90       	pop	r8
   1b042:	08 95       	ret

0001b044 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1b044:	82 30       	cpi	r24, 0x02	; 2
   1b046:	91 05       	cpc	r25, r1
   1b048:	38 f0       	brcs	.+14     	; 0x1b058 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1b04a:	88 0f       	add	r24, r24
   1b04c:	99 1f       	adc	r25, r25
   1b04e:	88 0f       	add	r24, r24
   1b050:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1b052:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1b054:	01 97       	sbiw	r24, 0x01	; 1
   1b056:	f1 f7       	brne	.-4      	; 0x1b054 <delayMicroseconds+0x10>
   1b058:	08 95       	ret

0001b05a <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1b05a:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1b05c:	84 b5       	in	r24, 0x24	; 36
   1b05e:	82 60       	ori	r24, 0x02	; 2
   1b060:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1b062:	84 b5       	in	r24, 0x24	; 36
   1b064:	81 60       	ori	r24, 0x01	; 1
   1b066:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1b068:	85 b5       	in	r24, 0x25	; 37
   1b06a:	82 60       	ori	r24, 0x02	; 2
   1b06c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1b06e:	85 b5       	in	r24, 0x25	; 37
   1b070:	81 60       	ori	r24, 0x01	; 1
   1b072:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1b074:	ee e6       	ldi	r30, 0x6E	; 110
   1b076:	f0 e0       	ldi	r31, 0x00	; 0
   1b078:	80 81       	ld	r24, Z
   1b07a:	81 60       	ori	r24, 0x01	; 1
   1b07c:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1b07e:	e1 e8       	ldi	r30, 0x81	; 129
   1b080:	f0 e0       	ldi	r31, 0x00	; 0
   1b082:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1b084:	80 81       	ld	r24, Z
   1b086:	82 60       	ori	r24, 0x02	; 2
   1b088:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1b08a:	80 81       	ld	r24, Z
   1b08c:	81 60       	ori	r24, 0x01	; 1
   1b08e:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1b090:	e0 e8       	ldi	r30, 0x80	; 128
   1b092:	f0 e0       	ldi	r31, 0x00	; 0
   1b094:	80 81       	ld	r24, Z
   1b096:	81 60       	ori	r24, 0x01	; 1
   1b098:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1b09a:	e1 eb       	ldi	r30, 0xB1	; 177
   1b09c:	f0 e0       	ldi	r31, 0x00	; 0
   1b09e:	80 81       	ld	r24, Z
   1b0a0:	84 60       	ori	r24, 0x04	; 4
   1b0a2:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1b0a4:	e0 eb       	ldi	r30, 0xB0	; 176
   1b0a6:	f0 e0       	ldi	r31, 0x00	; 0
   1b0a8:	80 81       	ld	r24, Z
   1b0aa:	81 60       	ori	r24, 0x01	; 1
   1b0ac:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1b0ae:	e1 e9       	ldi	r30, 0x91	; 145
   1b0b0:	f0 e0       	ldi	r31, 0x00	; 0
   1b0b2:	80 81       	ld	r24, Z
   1b0b4:	82 60       	ori	r24, 0x02	; 2
   1b0b6:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1b0b8:	80 81       	ld	r24, Z
   1b0ba:	81 60       	ori	r24, 0x01	; 1
   1b0bc:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1b0be:	e0 e9       	ldi	r30, 0x90	; 144
   1b0c0:	f0 e0       	ldi	r31, 0x00	; 0
   1b0c2:	80 81       	ld	r24, Z
   1b0c4:	81 60       	ori	r24, 0x01	; 1
   1b0c6:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1b0c8:	e1 ea       	ldi	r30, 0xA1	; 161
   1b0ca:	f0 e0       	ldi	r31, 0x00	; 0
   1b0cc:	80 81       	ld	r24, Z
   1b0ce:	82 60       	ori	r24, 0x02	; 2
   1b0d0:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1b0d2:	80 81       	ld	r24, Z
   1b0d4:	81 60       	ori	r24, 0x01	; 1
   1b0d6:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1b0d8:	e0 ea       	ldi	r30, 0xA0	; 160
   1b0da:	f0 e0       	ldi	r31, 0x00	; 0
   1b0dc:	80 81       	ld	r24, Z
   1b0de:	81 60       	ori	r24, 0x01	; 1
   1b0e0:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1b0e2:	e1 e2       	ldi	r30, 0x21	; 33
   1b0e4:	f1 e0       	ldi	r31, 0x01	; 1
   1b0e6:	80 81       	ld	r24, Z
   1b0e8:	82 60       	ori	r24, 0x02	; 2
   1b0ea:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1b0ec:	80 81       	ld	r24, Z
   1b0ee:	81 60       	ori	r24, 0x01	; 1
   1b0f0:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1b0f2:	e0 e2       	ldi	r30, 0x20	; 32
   1b0f4:	f1 e0       	ldi	r31, 0x01	; 1
   1b0f6:	80 81       	ld	r24, Z
   1b0f8:	81 60       	ori	r24, 0x01	; 1
   1b0fa:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1b0fc:	ea e7       	ldi	r30, 0x7A	; 122
   1b0fe:	f0 e0       	ldi	r31, 0x00	; 0
   1b100:	80 81       	ld	r24, Z
   1b102:	84 60       	ori	r24, 0x04	; 4
   1b104:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1b106:	80 81       	ld	r24, Z
   1b108:	82 60       	ori	r24, 0x02	; 2
   1b10a:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1b10c:	80 81       	ld	r24, Z
   1b10e:	81 60       	ori	r24, 0x01	; 1
   1b110:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1b112:	80 81       	ld	r24, Z
   1b114:	80 68       	ori	r24, 0x80	; 128
   1b116:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1b118:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1b11c:	08 95       	ret

0001b11e <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1b11e:	90 e0       	ldi	r25, 0x00	; 0
   1b120:	fc 01       	movw	r30, r24
   1b122:	31 97       	sbiw	r30, 0x01	; 1
   1b124:	e2 31       	cpi	r30, 0x12	; 18
   1b126:	f1 05       	cpc	r31, r1
   1b128:	08 f0       	brcs	.+2      	; 0x1b12c <turnOffPWM+0xe>
   1b12a:	4e c0       	rjmp	.+156    	; 0x1b1c8 <turnOffPWM+0xaa>
   1b12c:	88 27       	eor	r24, r24
   1b12e:	e9 50       	subi	r30, 0x09	; 9
   1b130:	ff 4f       	sbci	r31, 0xFF	; 255
   1b132:	8f 4f       	sbci	r24, 0xFF	; 255
   1b134:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1b138:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b13c:	8f 77       	andi	r24, 0x7F	; 127
   1b13e:	03 c0       	rjmp	.+6      	; 0x1b146 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1b140:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b144:	8f 7d       	andi	r24, 0xDF	; 223
   1b146:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b14a:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1b14c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b150:	87 7f       	andi	r24, 0xF7	; 247
   1b152:	f9 cf       	rjmp	.-14     	; 0x1b146 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1b154:	84 b5       	in	r24, 0x24	; 36
   1b156:	8f 77       	andi	r24, 0x7F	; 127
   1b158:	02 c0       	rjmp	.+4      	; 0x1b15e <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1b15a:	84 b5       	in	r24, 0x24	; 36
   1b15c:	8f 7d       	andi	r24, 0xDF	; 223
   1b15e:	84 bd       	out	0x24, r24	; 36
   1b160:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1b162:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b166:	8f 77       	andi	r24, 0x7F	; 127
   1b168:	03 c0       	rjmp	.+6      	; 0x1b170 <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1b16a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b16e:	8f 7d       	andi	r24, 0xDF	; 223
   1b170:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b174:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1b176:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b17a:	8f 77       	andi	r24, 0x7F	; 127
   1b17c:	07 c0       	rjmp	.+14     	; 0x1b18c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1b17e:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b182:	8f 7d       	andi	r24, 0xDF	; 223
   1b184:	03 c0       	rjmp	.+6      	; 0x1b18c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1b186:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b18a:	87 7f       	andi	r24, 0xF7	; 247
   1b18c:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b190:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1b192:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b196:	8f 77       	andi	r24, 0x7F	; 127
   1b198:	07 c0       	rjmp	.+14     	; 0x1b1a8 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1b19a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b19e:	8f 7d       	andi	r24, 0xDF	; 223
   1b1a0:	03 c0       	rjmp	.+6      	; 0x1b1a8 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1b1a2:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b1a6:	87 7f       	andi	r24, 0xF7	; 247
   1b1a8:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b1ac:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1b1ae:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b1b2:	8f 77       	andi	r24, 0x7F	; 127
   1b1b4:	07 c0       	rjmp	.+14     	; 0x1b1c4 <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1b1b6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b1ba:	8f 7d       	andi	r24, 0xDF	; 223
   1b1bc:	03 c0       	rjmp	.+6      	; 0x1b1c4 <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1b1be:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b1c2:	87 7f       	andi	r24, 0xF7	; 247
   1b1c4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b1c8:	08 95       	ret

0001b1ca <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1b1ca:	cf 93       	push	r28
   1b1cc:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1b1ce:	90 e0       	ldi	r25, 0x00	; 0
   1b1d0:	fc 01       	movw	r30, r24
   1b1d2:	ea 57       	subi	r30, 0x7A	; 122
   1b1d4:	f9 4b       	sbci	r31, 0xB9	; 185
   1b1d6:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1b1d8:	fc 01       	movw	r30, r24
   1b1da:	e4 53       	subi	r30, 0x34	; 52
   1b1dc:	f9 4b       	sbci	r31, 0xB9	; 185
   1b1de:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1b1e0:	88 23       	and	r24, r24
   1b1e2:	61 f1       	breq	.+88     	; 0x1b23c <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1b1e4:	90 e0       	ldi	r25, 0x00	; 0
   1b1e6:	88 0f       	add	r24, r24
   1b1e8:	99 1f       	adc	r25, r25
   1b1ea:	fc 01       	movw	r30, r24
   1b1ec:	ea 5b       	subi	r30, 0xBA	; 186
   1b1ee:	f8 4b       	sbci	r31, 0xB8	; 184
   1b1f0:	c5 91       	lpm	r28, Z+
   1b1f2:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1b1f4:	fc 01       	movw	r30, r24
   1b1f6:	e4 5d       	subi	r30, 0xD4	; 212
   1b1f8:	f8 4b       	sbci	r31, 0xB8	; 184
   1b1fa:	a5 91       	lpm	r26, Z+
   1b1fc:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1b1fe:	61 11       	cpse	r22, r1
   1b200:	09 c0       	rjmp	.+18     	; 0x1b214 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1b202:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b204:	f8 94       	cli
		*reg &= ~bit;
   1b206:	88 81       	ld	r24, Y
   1b208:	20 95       	com	r18
   1b20a:	82 23       	and	r24, r18
   1b20c:	88 83       	st	Y, r24
		*out &= ~bit;
   1b20e:	ec 91       	ld	r30, X
   1b210:	2e 23       	and	r18, r30
   1b212:	0b c0       	rjmp	.+22     	; 0x1b22a <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1b214:	62 30       	cpi	r22, 0x02	; 2
   1b216:	61 f4       	brne	.+24     	; 0x1b230 <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1b218:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b21a:	f8 94       	cli
		*reg &= ~bit;
   1b21c:	88 81       	ld	r24, Y
   1b21e:	32 2f       	mov	r19, r18
   1b220:	30 95       	com	r19
   1b222:	83 23       	and	r24, r19
   1b224:	88 83       	st	Y, r24
		*out |= bit;
   1b226:	ec 91       	ld	r30, X
   1b228:	2e 2b       	or	r18, r30
   1b22a:	2c 93       	st	X, r18
		SREG = oldSREG;
   1b22c:	9f bf       	out	0x3f, r25	; 63
   1b22e:	06 c0       	rjmp	.+12     	; 0x1b23c <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1b230:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1b232:	f8 94       	cli
		*reg |= bit;
   1b234:	e8 81       	ld	r30, Y
   1b236:	2e 2b       	or	r18, r30
   1b238:	28 83       	st	Y, r18
		SREG = oldSREG;
   1b23a:	8f bf       	out	0x3f, r24	; 63
	}
}
   1b23c:	df 91       	pop	r29
   1b23e:	cf 91       	pop	r28
   1b240:	08 95       	ret

0001b242 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1b242:	1f 93       	push	r17
   1b244:	cf 93       	push	r28
   1b246:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b248:	28 2f       	mov	r18, r24
   1b24a:	30 e0       	ldi	r19, 0x00	; 0
   1b24c:	f9 01       	movw	r30, r18
   1b24e:	e0 5c       	subi	r30, 0xC0	; 192
   1b250:	f9 4b       	sbci	r31, 0xB9	; 185
   1b252:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b254:	f9 01       	movw	r30, r18
   1b256:	ea 57       	subi	r30, 0x7A	; 122
   1b258:	f9 4b       	sbci	r31, 0xB9	; 185
   1b25a:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b25c:	f9 01       	movw	r30, r18
   1b25e:	e4 53       	subi	r30, 0x34	; 52
   1b260:	f9 4b       	sbci	r31, 0xB9	; 185
   1b262:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1b264:	cc 23       	and	r28, r28
   1b266:	b9 f0       	breq	.+46     	; 0x1b296 <digitalWrite+0x54>
   1b268:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b26a:	81 11       	cpse	r24, r1
   1b26c:	58 df       	rcall	.-336    	; 0x1b11e <turnOffPWM>

	out = portOutputRegister(port);
   1b26e:	ec 2f       	mov	r30, r28
   1b270:	f0 e0       	ldi	r31, 0x00	; 0
   1b272:	ee 0f       	add	r30, r30
   1b274:	ff 1f       	adc	r31, r31
   1b276:	e4 5d       	subi	r30, 0xD4	; 212
   1b278:	f8 4b       	sbci	r31, 0xB8	; 184
   1b27a:	a5 91       	lpm	r26, Z+
   1b27c:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1b27e:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1b280:	f8 94       	cli

	if (val == LOW) {
   1b282:	11 11       	cpse	r17, r1
   1b284:	04 c0       	rjmp	.+8      	; 0x1b28e <digitalWrite+0x4c>
		*out &= ~bit;
   1b286:	8c 91       	ld	r24, X
   1b288:	d0 95       	com	r29
   1b28a:	d8 23       	and	r29, r24
   1b28c:	02 c0       	rjmp	.+4      	; 0x1b292 <digitalWrite+0x50>
	} else {
		*out |= bit;
   1b28e:	ec 91       	ld	r30, X
   1b290:	de 2b       	or	r29, r30
   1b292:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1b294:	9f bf       	out	0x3f, r25	; 63
}
   1b296:	df 91       	pop	r29
   1b298:	cf 91       	pop	r28
   1b29a:	1f 91       	pop	r17
   1b29c:	08 95       	ret

0001b29e <digitalRead>:

int digitalRead(uint8_t pin)
{
   1b29e:	cf 93       	push	r28
   1b2a0:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b2a2:	28 2f       	mov	r18, r24
   1b2a4:	30 e0       	ldi	r19, 0x00	; 0
   1b2a6:	f9 01       	movw	r30, r18
   1b2a8:	e0 5c       	subi	r30, 0xC0	; 192
   1b2aa:	f9 4b       	sbci	r31, 0xB9	; 185
   1b2ac:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b2ae:	f9 01       	movw	r30, r18
   1b2b0:	ea 57       	subi	r30, 0x7A	; 122
   1b2b2:	f9 4b       	sbci	r31, 0xB9	; 185
   1b2b4:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b2b6:	f9 01       	movw	r30, r18
   1b2b8:	e4 53       	subi	r30, 0x34	; 52
   1b2ba:	f9 4b       	sbci	r31, 0xB9	; 185
   1b2bc:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1b2be:	cc 23       	and	r28, r28
   1b2c0:	89 f0       	breq	.+34     	; 0x1b2e4 <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b2c2:	81 11       	cpse	r24, r1
   1b2c4:	2c df       	rcall	.-424    	; 0x1b11e <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1b2c6:	ec 2f       	mov	r30, r28
   1b2c8:	f0 e0       	ldi	r31, 0x00	; 0
   1b2ca:	ee 0f       	add	r30, r30
   1b2cc:	ff 1f       	adc	r31, r31
   1b2ce:	ee 5e       	subi	r30, 0xEE	; 238
   1b2d0:	f8 4b       	sbci	r31, 0xB8	; 184
   1b2d2:	a5 91       	lpm	r26, Z+
   1b2d4:	b4 91       	lpm	r27, Z
   1b2d6:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1b2d8:	ed 23       	and	r30, r29
   1b2da:	81 e0       	ldi	r24, 0x01	; 1
   1b2dc:	90 e0       	ldi	r25, 0x00	; 0
   1b2de:	21 f4       	brne	.+8      	; 0x1b2e8 <digitalRead+0x4a>
   1b2e0:	80 e0       	ldi	r24, 0x00	; 0
   1b2e2:	02 c0       	rjmp	.+4      	; 0x1b2e8 <digitalRead+0x4a>
   1b2e4:	80 e0       	ldi	r24, 0x00	; 0
   1b2e6:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1b2e8:	df 91       	pop	r29
   1b2ea:	cf 91       	pop	r28
   1b2ec:	08 95       	ret

0001b2ee <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1b2ee:	fc 01       	movw	r30, r24
   1b2f0:	77 8b       	std	Z+23, r23	; 0x17
   1b2f2:	66 8b       	std	Z+22, r22	; 0x16
   1b2f4:	24 8f       	std	Z+28, r18	; 0x1c
   1b2f6:	35 8f       	std	Z+29, r19	; 0x1d
   1b2f8:	46 8f       	std	Z+30, r20	; 0x1e
   1b2fa:	57 8f       	std	Z+31, r21	; 0x1f
   1b2fc:	80 e0       	ldi	r24, 0x00	; 0
   1b2fe:	90 e0       	ldi	r25, 0x00	; 0
   1b300:	a0 e0       	ldi	r26, 0x00	; 0
   1b302:	b4 e4       	ldi	r27, 0x44	; 68
   1b304:	80 af       	std	Z+56, r24	; 0x38
   1b306:	91 af       	std	Z+57, r25	; 0x39
   1b308:	a2 af       	std	Z+58, r26	; 0x3a
   1b30a:	b3 af       	std	Z+59, r27	; 0x3b
   1b30c:	08 95       	ret

0001b30e <_ZN13EnergyMonitor7readVccEv>:
   1b30e:	8e e5       	ldi	r24, 0x5E	; 94
   1b310:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1b314:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b318:	87 7f       	andi	r24, 0xF7	; 247
   1b31a:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b31e:	62 e0       	ldi	r22, 0x02	; 2
   1b320:	70 e0       	ldi	r23, 0x00	; 0
   1b322:	80 e0       	ldi	r24, 0x00	; 0
   1b324:	90 e0       	ldi	r25, 0x00	; 0
   1b326:	54 de       	rcall	.-856    	; 0x1afd0 <delay>
   1b328:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b32c:	80 64       	ori	r24, 0x40	; 64
   1b32e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b332:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b336:	86 fd       	sbrc	r24, 6
   1b338:	fc cf       	rjmp	.-8      	; 0x1b332 <_ZN13EnergyMonitor7readVccEv+0x24>
   1b33a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1b33e:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1b342:	30 e0       	ldi	r19, 0x00	; 0
   1b344:	32 2f       	mov	r19, r18
   1b346:	22 27       	eor	r18, r18
   1b348:	a9 01       	movw	r20, r18
   1b34a:	33 0f       	add	r19, r19
   1b34c:	66 0b       	sbc	r22, r22
   1b34e:	77 0b       	sbc	r23, r23
   1b350:	9a 01       	movw	r18, r20
   1b352:	ab 01       	movw	r20, r22
   1b354:	28 2b       	or	r18, r24
   1b356:	60 e0       	ldi	r22, 0x00	; 0
   1b358:	70 e3       	ldi	r23, 0x30	; 48
   1b35a:	81 e1       	ldi	r24, 0x11	; 17
   1b35c:	90 e0       	ldi	r25, 0x00	; 0
   1b35e:	0e 94 da eb 	call	0x1d7b4	; 0x1d7b4 <__divmodsi4>
   1b362:	ca 01       	movw	r24, r20
   1b364:	b9 01       	movw	r22, r18
   1b366:	08 95       	ret

0001b368 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1b368:	2f 92       	push	r2
   1b36a:	3f 92       	push	r3
   1b36c:	4f 92       	push	r4
   1b36e:	5f 92       	push	r5
   1b370:	6f 92       	push	r6
   1b372:	7f 92       	push	r7
   1b374:	8f 92       	push	r8
   1b376:	9f 92       	push	r9
   1b378:	af 92       	push	r10
   1b37a:	bf 92       	push	r11
   1b37c:	cf 92       	push	r12
   1b37e:	df 92       	push	r13
   1b380:	ef 92       	push	r14
   1b382:	ff 92       	push	r15
   1b384:	0f 93       	push	r16
   1b386:	1f 93       	push	r17
   1b388:	cf 93       	push	r28
   1b38a:	df 93       	push	r29
   1b38c:	00 d0       	rcall	.+0      	; 0x1b38e <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1b38e:	00 d0       	rcall	.+0      	; 0x1b390 <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1b390:	cd b7       	in	r28, 0x3d	; 61
   1b392:	de b7       	in	r29, 0x3e	; 62
   1b394:	9e 83       	std	Y+6, r25	; 0x06
   1b396:	8d 83       	std	Y+5, r24	; 0x05
   1b398:	7a 83       	std	Y+2, r23	; 0x02
   1b39a:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1b39c:	b8 df       	rcall	.-144    	; 0x1b30e <_ZN13EnergyMonitor7readVccEv>
   1b39e:	6b 01       	movw	r12, r22
   1b3a0:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b3a2:	00 e0       	ldi	r16, 0x00	; 0
   1b3a4:	10 e0       	ldi	r17, 0x00	; 0
   1b3a6:	8d 81       	ldd	r24, Y+5	; 0x05
   1b3a8:	9e 81       	ldd	r25, Y+6	; 0x06
   1b3aa:	84 5b       	subi	r24, 0xB4	; 180
   1b3ac:	9f 4f       	sbci	r25, 0xFF	; 255
   1b3ae:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b3b0:	ed 81       	ldd	r30, Y+5	; 0x05
   1b3b2:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3b4:	e8 5b       	subi	r30, 0xB8	; 184
   1b3b6:	ff 4f       	sbci	r31, 0xFF	; 255
   1b3b8:	fc 83       	std	Y+4, r31	; 0x04
   1b3ba:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b3bc:	89 81       	ldd	r24, Y+1	; 0x01
   1b3be:	9a 81       	ldd	r25, Y+2	; 0x02
   1b3c0:	08 17       	cp	r16, r24
   1b3c2:	19 07       	cpc	r17, r25
   1b3c4:	09 f4       	brne	.+2      	; 0x1b3c8 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1b3c6:	4f c0       	rjmp	.+158    	; 0x1b466 <_ZN13EnergyMonitor8calcIrmsEj+0xfe>
  {
    sampleI = analogRead(inPinI);
   1b3c8:	ed 81       	ldd	r30, Y+5	; 0x05
   1b3ca:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3cc:	86 89       	ldd	r24, Z+22	; 0x16
   1b3ce:	0e 94 e6 e4 	call	0x1c9cc	; 0x1c9cc <analogRead>
   1b3d2:	ed 81       	ldd	r30, Y+5	; 0x05
   1b3d4:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3d6:	97 a3       	std	Z+39, r25	; 0x27
   1b3d8:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1b3da:	bc 01       	movw	r22, r24
   1b3dc:	99 0f       	add	r25, r25
   1b3de:	88 0b       	sbc	r24, r24
   1b3e0:	99 0b       	sbc	r25, r25
   1b3e2:	34 d8       	rcall	.-3992   	; 0x1a44c <__floatsisf>
   1b3e4:	4b 01       	movw	r8, r22
   1b3e6:	5c 01       	movw	r10, r24
   1b3e8:	ed 81       	ldd	r30, Y+5	; 0x05
   1b3ea:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3ec:	40 ac       	ldd	r4, Z+56	; 0x38
   1b3ee:	51 ac       	ldd	r5, Z+57	; 0x39
   1b3f0:	62 ac       	ldd	r6, Z+58	; 0x3a
   1b3f2:	73 ac       	ldd	r7, Z+59	; 0x3b
   1b3f4:	a3 01       	movw	r20, r6
   1b3f6:	92 01       	movw	r18, r4
   1b3f8:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <__subsf3>
   1b3fc:	20 e0       	ldi	r18, 0x00	; 0
   1b3fe:	30 e0       	ldi	r19, 0x00	; 0
   1b400:	40 e8       	ldi	r20, 0x80	; 128
   1b402:	5a e3       	ldi	r21, 0x3A	; 58
   1b404:	d7 d8       	rcall	.-3666   	; 0x1a5b4 <__mulsf3>
   1b406:	a3 01       	movw	r20, r6
   1b408:	92 01       	movw	r18, r4
   1b40a:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   1b40e:	9b 01       	movw	r18, r22
   1b410:	ac 01       	movw	r20, r24
   1b412:	ed 81       	ldd	r30, Y+5	; 0x05
   1b414:	fe 81       	ldd	r31, Y+6	; 0x06
   1b416:	60 af       	std	Z+56, r22	; 0x38
   1b418:	71 af       	std	Z+57, r23	; 0x39
   1b41a:	82 af       	std	Z+58, r24	; 0x3a
   1b41c:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1b41e:	c5 01       	movw	r24, r10
   1b420:	b4 01       	movw	r22, r8
   1b422:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <__subsf3>
   1b426:	ed 81       	ldd	r30, Y+5	; 0x05
   1b428:	fe 81       	ldd	r31, Y+6	; 0x06
   1b42a:	60 ab       	std	Z+48, r22	; 0x30
   1b42c:	71 ab       	std	Z+49, r23	; 0x31
   1b42e:	82 ab       	std	Z+50, r24	; 0x32

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b430:	93 ab       	std	Z+51, r25	; 0x33
   1b432:	9b 01       	movw	r18, r22
   1b434:	ac 01       	movw	r20, r24
   1b436:	be d8       	rcall	.-3716   	; 0x1a5b4 <__mulsf3>
   1b438:	9b 01       	movw	r18, r22
   1b43a:	ac 01       	movw	r20, r24
   1b43c:	eb 81       	ldd	r30, Y+3	; 0x03
   1b43e:	fc 81       	ldd	r31, Y+4	; 0x04
   1b440:	60 83       	st	Z, r22
   1b442:	71 83       	std	Z+1, r23	; 0x01
   1b444:	82 83       	std	Z+2, r24	; 0x02
   1b446:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1b448:	f1 01       	movw	r30, r2
   1b44a:	60 81       	ld	r22, Z
   1b44c:	71 81       	ldd	r23, Z+1	; 0x01
   1b44e:	82 81       	ldd	r24, Z+2	; 0x02
   1b450:	93 81       	ldd	r25, Z+3	; 0x03
   1b452:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   1b456:	f1 01       	movw	r30, r2
   1b458:	60 83       	st	Z, r22
   1b45a:	71 83       	std	Z+1, r23	; 0x01
   1b45c:	82 83       	std	Z+2, r24	; 0x02
   1b45e:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b460:	0f 5f       	subi	r16, 0xFF	; 255
   1b462:	1f 4f       	sbci	r17, 0xFF	; 255
   1b464:	ab cf       	rjmp	.-170    	; 0x1b3bc <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1b466:	b8 01       	movw	r22, r16
   1b468:	80 e0       	ldi	r24, 0x00	; 0
   1b46a:	90 e0       	ldi	r25, 0x00	; 0
   1b46c:	0e 94 24 d2 	call	0x1a448	; 0x1a448 <__floatunsisf>
   1b470:	9b 01       	movw	r18, r22
   1b472:	ac 01       	movw	r20, r24
   1b474:	f1 01       	movw	r30, r2
   1b476:	60 81       	ld	r22, Z
   1b478:	71 81       	ldd	r23, Z+1	; 0x01
   1b47a:	82 81       	ldd	r24, Z+2	; 0x02
   1b47c:	93 81       	ldd	r25, Z+3	; 0x03
   1b47e:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
   1b482:	0e 94 0c ea 	call	0x1d418	; 0x1d418 <sqrt>
   1b486:	4b 01       	movw	r8, r22
   1b488:	5c 01       	movw	r10, r24
   1b48a:	b6 01       	movw	r22, r12
   1b48c:	dd 0c       	add	r13, r13
   1b48e:	88 0b       	sbc	r24, r24
   1b490:	99 0b       	sbc	r25, r25
   1b492:	0e 94 26 d2 	call	0x1a44c	; 0x1a44c <__floatsisf>
   1b496:	20 e0       	ldi	r18, 0x00	; 0
   1b498:	30 e0       	ldi	r19, 0x00	; 0
   1b49a:	4a e7       	ldi	r20, 0x7A	; 122
   1b49c:	54 e4       	ldi	r21, 0x44	; 68
   1b49e:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
   1b4a2:	20 e0       	ldi	r18, 0x00	; 0
   1b4a4:	30 e0       	ldi	r19, 0x00	; 0
   1b4a6:	40 e8       	ldi	r20, 0x80	; 128
   1b4a8:	5a e3       	ldi	r21, 0x3A	; 58
   1b4aa:	84 d8       	rcall	.-3832   	; 0x1a5b4 <__mulsf3>
   1b4ac:	ed 81       	ldd	r30, Y+5	; 0x05
   1b4ae:	fe 81       	ldd	r31, Y+6	; 0x06
   1b4b0:	24 8d       	ldd	r18, Z+28	; 0x1c
   1b4b2:	35 8d       	ldd	r19, Z+29	; 0x1d
   1b4b4:	46 8d       	ldd	r20, Z+30	; 0x1e
   1b4b6:	57 8d       	ldd	r21, Z+31	; 0x1f
   1b4b8:	7d d8       	rcall	.-3846   	; 0x1a5b4 <__mulsf3>
   1b4ba:	a5 01       	movw	r20, r10
   1b4bc:	94 01       	movw	r18, r8
   1b4be:	7a d8       	rcall	.-3852   	; 0x1a5b4 <__mulsf3>
   1b4c0:	ed 81       	ldd	r30, Y+5	; 0x05
   1b4c2:	fe 81       	ldd	r31, Y+6	; 0x06
   1b4c4:	60 8b       	std	Z+16, r22	; 0x10
   1b4c6:	71 8b       	std	Z+17, r23	; 0x11
   1b4c8:	82 8b       	std	Z+18, r24	; 0x12
   1b4ca:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1b4cc:	f1 01       	movw	r30, r2
   1b4ce:	10 82       	st	Z, r1
   1b4d0:	11 82       	std	Z+1, r1	; 0x01
   1b4d2:	12 82       	std	Z+2, r1	; 0x02
   1b4d4:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1b4d6:	26 96       	adiw	r28, 0x06	; 6
   1b4d8:	0f b6       	in	r0, 0x3f	; 63
   1b4da:	f8 94       	cli
   1b4dc:	de bf       	out	0x3e, r29	; 62
   1b4de:	0f be       	out	0x3f, r0	; 63
   1b4e0:	cd bf       	out	0x3d, r28	; 61
   1b4e2:	df 91       	pop	r29
   1b4e4:	cf 91       	pop	r28
   1b4e6:	1f 91       	pop	r17
   1b4e8:	0f 91       	pop	r16
   1b4ea:	ff 90       	pop	r15
   1b4ec:	ef 90       	pop	r14
   1b4ee:	df 90       	pop	r13
   1b4f0:	cf 90       	pop	r12
   1b4f2:	bf 90       	pop	r11
   1b4f4:	af 90       	pop	r10
   1b4f6:	9f 90       	pop	r9
   1b4f8:	8f 90       	pop	r8
   1b4fa:	7f 90       	pop	r7
   1b4fc:	6f 90       	pop	r6
   1b4fe:	5f 90       	pop	r5
   1b500:	4f 90       	pop	r4
   1b502:	3f 90       	pop	r3
   1b504:	2f 90       	pop	r2
   1b506:	08 95       	ret

0001b508 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1b508:	fc 01       	movw	r30, r24
   1b50a:	13 82       	std	Z+3, r1	; 0x03
   1b50c:	12 82       	std	Z+2, r1	; 0x02
   1b50e:	8d ef       	ldi	r24, 0xFD	; 253
   1b510:	97 e0       	ldi	r25, 0x07	; 7
   1b512:	91 83       	std	Z+1, r25	; 0x01
   1b514:	80 83       	st	Z, r24
   1b516:	64 83       	std	Z+4, r22	; 0x04
   1b518:	41 87       	std	Z+9, r20	; 0x09
   1b51a:	22 87       	std	Z+10, r18	; 0x0a
   1b51c:	13 86       	std	Z+11, r1	; 0x0b
   1b51e:	08 95       	ret

0001b520 <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1b520:	1f 93       	push	r17
   1b522:	cf 93       	push	r28
   1b524:	df 93       	push	r29
   1b526:	ec 01       	movw	r28, r24
   1b528:	16 2f       	mov	r17, r22
   1b52a:	6c 81       	ldd	r22, Y+4	; 0x04
   1b52c:	8b e5       	ldi	r24, 0x5B	; 91
   1b52e:	98 e1       	ldi	r25, 0x18	; 24
   1b530:	0e 94 f3 e2 	call	0x1c5e6	; 0x1c5e6 <_ZN7TwoWire17beginTransmissionEh>
   1b534:	6b 85       	ldd	r22, Y+11	; 0x0b
   1b536:	61 2b       	or	r22, r17
   1b538:	8b e5       	ldi	r24, 0x5B	; 91
   1b53a:	98 e1       	ldi	r25, 0x18	; 24
   1b53c:	0e 94 a6 e2 	call	0x1c54c	; 0x1c54c <_ZN7TwoWire5writeEh>
   1b540:	8b e5       	ldi	r24, 0x5B	; 91
   1b542:	98 e1       	ldi	r25, 0x18	; 24
   1b544:	df 91       	pop	r29
   1b546:	cf 91       	pop	r28
   1b548:	1f 91       	pop	r17
   1b54a:	0c 94 0f e3 	jmp	0x1c61e	; 0x1c61e <_ZN7TwoWire15endTransmissionEv>

0001b54e <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1b54e:	0f 93       	push	r16
   1b550:	1f 93       	push	r17
   1b552:	cf 93       	push	r28
   1b554:	8c 01       	movw	r16, r24
   1b556:	c6 2f       	mov	r28, r22
   1b558:	64 60       	ori	r22, 0x04	; 4
   1b55a:	e2 df       	rcall	.-60     	; 0x1b520 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b55c:	81 e0       	ldi	r24, 0x01	; 1
   1b55e:	90 e0       	ldi	r25, 0x00	; 0
   1b560:	71 dd       	rcall	.-1310   	; 0x1b044 <delayMicroseconds>
   1b562:	6c 2f       	mov	r22, r28
   1b564:	6b 7f       	andi	r22, 0xFB	; 251
   1b566:	c8 01       	movw	r24, r16
   1b568:	db df       	rcall	.-74     	; 0x1b520 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b56a:	82 e3       	ldi	r24, 0x32	; 50
   1b56c:	90 e0       	ldi	r25, 0x00	; 0
   1b56e:	cf 91       	pop	r28
   1b570:	1f 91       	pop	r17
   1b572:	0f 91       	pop	r16
   1b574:	67 cd       	rjmp	.-1330   	; 0x1b044 <delayMicroseconds>

0001b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1b576:	1f 93       	push	r17
   1b578:	cf 93       	push	r28
   1b57a:	df 93       	push	r29
   1b57c:	ec 01       	movw	r28, r24
   1b57e:	16 2f       	mov	r17, r22
   1b580:	cf df       	rcall	.-98     	; 0x1b520 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b582:	61 2f       	mov	r22, r17
   1b584:	ce 01       	movw	r24, r28
   1b586:	df 91       	pop	r29
   1b588:	cf 91       	pop	r28
   1b58a:	1f 91       	pop	r17
   1b58c:	e0 cf       	rjmp	.-64     	; 0x1b54e <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001b58e <_ZN17LiquidCrystal_I2C4sendEhh>:
   1b58e:	0f 93       	push	r16
   1b590:	1f 93       	push	r17
   1b592:	cf 93       	push	r28
   1b594:	df 93       	push	r29
   1b596:	8c 01       	movw	r16, r24
   1b598:	c6 2f       	mov	r28, r22
   1b59a:	d4 2f       	mov	r29, r20
   1b59c:	60 7f       	andi	r22, 0xF0	; 240
   1b59e:	64 2b       	or	r22, r20
   1b5a0:	ea df       	rcall	.-44     	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1b5a2:	80 e1       	ldi	r24, 0x10	; 16
   1b5a4:	c8 9f       	mul	r28, r24
   1b5a6:	b0 01       	movw	r22, r0
   1b5a8:	11 24       	eor	r1, r1
   1b5aa:	6d 2b       	or	r22, r29
   1b5ac:	c8 01       	movw	r24, r16
   1b5ae:	df 91       	pop	r29
   1b5b0:	cf 91       	pop	r28
   1b5b2:	1f 91       	pop	r17
   1b5b4:	0f 91       	pop	r16
   1b5b6:	df cf       	rjmp	.-66     	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001b5b8 <_ZN17LiquidCrystal_I2C7commandEh>:
   1b5b8:	40 e0       	ldi	r20, 0x00	; 0
   1b5ba:	e9 cf       	rjmp	.-46     	; 0x1b58e <_ZN17LiquidCrystal_I2C4sendEhh>

0001b5bc <_ZN17LiquidCrystal_I2C5clearEv>:
   1b5bc:	61 e0       	ldi	r22, 0x01	; 1
   1b5be:	fc df       	rcall	.-8      	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>
   1b5c0:	80 ed       	ldi	r24, 0xD0	; 208
   1b5c2:	97 e0       	ldi	r25, 0x07	; 7
   1b5c4:	3f cd       	rjmp	.-1410   	; 0x1b044 <delayMicroseconds>

0001b5c6 <_ZN17LiquidCrystal_I2C4homeEv>:
   1b5c6:	62 e0       	ldi	r22, 0x02	; 2
   1b5c8:	f7 df       	rcall	.-18     	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>
   1b5ca:	80 ed       	ldi	r24, 0xD0	; 208
   1b5cc:	97 e0       	ldi	r25, 0x07	; 7
   1b5ce:	3a cd       	rjmp	.-1420   	; 0x1b044 <delayMicroseconds>

0001b5d0 <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1b5d0:	cf 93       	push	r28
   1b5d2:	df 93       	push	r29
   1b5d4:	cd b7       	in	r28, 0x3d	; 61
   1b5d6:	de b7       	in	r29, 0x3e	; 62
   1b5d8:	28 97       	sbiw	r28, 0x08	; 8
   1b5da:	0f b6       	in	r0, 0x3f	; 63
   1b5dc:	f8 94       	cli
   1b5de:	de bf       	out	0x3e, r29	; 62
   1b5e0:	0f be       	out	0x3f, r0	; 63
   1b5e2:	cd bf       	out	0x3d, r28	; 61
   1b5e4:	9c 01       	movw	r18, r24
   1b5e6:	88 e0       	ldi	r24, 0x08	; 8
   1b5e8:	e3 e7       	ldi	r30, 0x73	; 115
   1b5ea:	f2 e0       	ldi	r31, 0x02	; 2
   1b5ec:	de 01       	movw	r26, r28
   1b5ee:	11 96       	adiw	r26, 0x01	; 1
   1b5f0:	01 90       	ld	r0, Z+
   1b5f2:	0d 92       	st	X+, r0
   1b5f4:	8a 95       	dec	r24
   1b5f6:	e1 f7       	brne	.-8      	; 0x1b5f0 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1b5f8:	f9 01       	movw	r30, r18
   1b5fa:	80 85       	ldd	r24, Z+8	; 0x08
   1b5fc:	84 17       	cp	r24, r20
   1b5fe:	10 f4       	brcc	.+4      	; 0x1b604 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1b600:	4f ef       	ldi	r20, 0xFF	; 255
   1b602:	48 0f       	add	r20, r24
   1b604:	fe 01       	movw	r30, r28
   1b606:	31 96       	adiw	r30, 0x01	; 1
   1b608:	e4 0f       	add	r30, r20
   1b60a:	f1 1d       	adc	r31, r1
   1b60c:	e4 0f       	add	r30, r20
   1b60e:	f1 1d       	adc	r31, r1
   1b610:	90 81       	ld	r25, Z
   1b612:	69 0f       	add	r22, r25
   1b614:	60 68       	ori	r22, 0x80	; 128
   1b616:	c9 01       	movw	r24, r18
   1b618:	28 96       	adiw	r28, 0x08	; 8
   1b61a:	0f b6       	in	r0, 0x3f	; 63
   1b61c:	f8 94       	cli
   1b61e:	de bf       	out	0x3e, r29	; 62
   1b620:	0f be       	out	0x3f, r0	; 63
   1b622:	cd bf       	out	0x3d, r28	; 61
   1b624:	df 91       	pop	r29
   1b626:	cf 91       	pop	r28
   1b628:	c7 cf       	rjmp	.-114    	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>

0001b62a <_ZN17LiquidCrystal_I2C7displayEv>:
   1b62a:	fc 01       	movw	r30, r24
   1b62c:	66 81       	ldd	r22, Z+6	; 0x06
   1b62e:	26 2f       	mov	r18, r22
   1b630:	24 60       	ori	r18, 0x04	; 4
   1b632:	26 83       	std	Z+6, r18	; 0x06
   1b634:	6c 60       	ori	r22, 0x0C	; 12
   1b636:	c0 cf       	rjmp	.-128    	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>

0001b638 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1b638:	ef 92       	push	r14
   1b63a:	ff 92       	push	r15
   1b63c:	0f 93       	push	r16
   1b63e:	1f 93       	push	r17
   1b640:	cf 93       	push	r28
   1b642:	df 93       	push	r29
   1b644:	8c 01       	movw	r16, r24
   1b646:	7a 01       	movw	r14, r20
   1b648:	67 70       	andi	r22, 0x07	; 7
   1b64a:	88 e0       	ldi	r24, 0x08	; 8
   1b64c:	68 9f       	mul	r22, r24
   1b64e:	b0 01       	movw	r22, r0
   1b650:	11 24       	eor	r1, r1
   1b652:	60 64       	ori	r22, 0x40	; 64
   1b654:	c8 01       	movw	r24, r16
   1b656:	b0 df       	rcall	.-160    	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>
   1b658:	e7 01       	movw	r28, r14
   1b65a:	a8 e0       	ldi	r26, 0x08	; 8
   1b65c:	ea 0e       	add	r14, r26
   1b65e:	f1 1c       	adc	r15, r1
   1b660:	69 91       	ld	r22, Y+
   1b662:	d8 01       	movw	r26, r16
   1b664:	ed 91       	ld	r30, X+
   1b666:	fc 91       	ld	r31, X
   1b668:	01 90       	ld	r0, Z+
   1b66a:	f0 81       	ld	r31, Z
   1b66c:	e0 2d       	mov	r30, r0
   1b66e:	c8 01       	movw	r24, r16
   1b670:	19 95       	eicall
   1b672:	ce 15       	cp	r28, r14
   1b674:	df 05       	cpc	r29, r15
   1b676:	a1 f7       	brne	.-24     	; 0x1b660 <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1b678:	df 91       	pop	r29
   1b67a:	cf 91       	pop	r28
   1b67c:	1f 91       	pop	r17
   1b67e:	0f 91       	pop	r16
   1b680:	ff 90       	pop	r15
   1b682:	ef 90       	pop	r14
   1b684:	08 95       	ret

0001b686 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1b686:	41 e0       	ldi	r20, 0x01	; 1
   1b688:	82 df       	rcall	.-252    	; 0x1b58e <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1b68a:	81 e0       	ldi	r24, 0x01	; 1
   1b68c:	90 e0       	ldi	r25, 0x00	; 0
   1b68e:	08 95       	ret

0001b690 <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1b690:	cf 93       	push	r28
   1b692:	df 93       	push	r29
   1b694:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1b696:	42 30       	cpi	r20, 0x02	; 2
   1b698:	18 f0       	brcs	.+6      	; 0x1b6a0 <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1b69a:	8d 81       	ldd	r24, Y+5	; 0x05
   1b69c:	88 60       	ori	r24, 0x08	; 8
   1b69e:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1b6a0:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1b6a2:	22 23       	and	r18, r18
   1b6a4:	29 f0       	breq	.+10     	; 0x1b6b0 <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1b6a6:	41 30       	cpi	r20, 0x01	; 1
   1b6a8:	19 f4       	brne	.+6      	; 0x1b6b0 <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1b6aa:	8d 81       	ldd	r24, Y+5	; 0x05
   1b6ac:	84 60       	ori	r24, 0x04	; 4
   1b6ae:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1b6b0:	62 e3       	ldi	r22, 0x32	; 50
   1b6b2:	70 e0       	ldi	r23, 0x00	; 0
   1b6b4:	80 e0       	ldi	r24, 0x00	; 0
   1b6b6:	90 e0       	ldi	r25, 0x00	; 0
   1b6b8:	8b dc       	rcall	.-1770   	; 0x1afd0 <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1b6ba:	88 e0       	ldi	r24, 0x08	; 8
   1b6bc:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1b6be:	60 e0       	ldi	r22, 0x00	; 0
   1b6c0:	ce 01       	movw	r24, r28
   1b6c2:	2e df       	rcall	.-420    	; 0x1b520 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1b6c4:	68 ee       	ldi	r22, 0xE8	; 232
   1b6c6:	73 e0       	ldi	r23, 0x03	; 3
   1b6c8:	80 e0       	ldi	r24, 0x00	; 0
   1b6ca:	90 e0       	ldi	r25, 0x00	; 0
   1b6cc:	81 dc       	rcall	.-1790   	; 0x1afd0 <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1b6ce:	60 e3       	ldi	r22, 0x30	; 48
   1b6d0:	ce 01       	movw	r24, r28
   1b6d2:	51 df       	rcall	.-350    	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b6d4:	84 e9       	ldi	r24, 0x94	; 148
   1b6d6:	91 e1       	ldi	r25, 0x11	; 17
   1b6d8:	b5 dc       	rcall	.-1686   	; 0x1b044 <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1b6da:	60 e3       	ldi	r22, 0x30	; 48
   1b6dc:	ce 01       	movw	r24, r28
   1b6de:	4b df       	rcall	.-362    	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b6e0:	84 e9       	ldi	r24, 0x94	; 148
   1b6e2:	91 e1       	ldi	r25, 0x11	; 17
   1b6e4:	af dc       	rcall	.-1698   	; 0x1b044 <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1b6e6:	60 e3       	ldi	r22, 0x30	; 48
   1b6e8:	ce 01       	movw	r24, r28
   1b6ea:	45 df       	rcall	.-374    	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1b6ec:	86 e9       	ldi	r24, 0x96	; 150
   1b6ee:	90 e0       	ldi	r25, 0x00	; 0
   1b6f0:	a9 dc       	rcall	.-1710   	; 0x1b044 <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1b6f2:	60 e2       	ldi	r22, 0x20	; 32
   1b6f4:	ce 01       	movw	r24, r28
   1b6f6:	3f df       	rcall	.-386    	; 0x1b576 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1b6f8:	6d 81       	ldd	r22, Y+5	; 0x05
   1b6fa:	60 62       	ori	r22, 0x20	; 32
   1b6fc:	ce 01       	movw	r24, r28
   1b6fe:	5c df       	rcall	.-328    	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1b700:	84 e0       	ldi	r24, 0x04	; 4
   1b702:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1b704:	ce 01       	movw	r24, r28
   1b706:	91 df       	rcall	.-222    	; 0x1b62a <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1b708:	ce 01       	movw	r24, r28
   1b70a:	58 df       	rcall	.-336    	; 0x1b5bc <_ZN17LiquidCrystal_I2C5clearEv>
   1b70c:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1b70e:	8f 83       	std	Y+7, r24	; 0x07
   1b710:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1b712:	ce 01       	movw	r24, r28
   1b714:	51 df       	rcall	.-350    	; 0x1b5b8 <_ZN17LiquidCrystal_I2C7commandEh>
   1b716:	ce 01       	movw	r24, r28
   1b718:	df 91       	pop	r29
	
	home();
   1b71a:	cf 91       	pop	r28
  
}
   1b71c:	54 cf       	rjmp	.-344    	; 0x1b5c6 <_ZN17LiquidCrystal_I2C4homeEv>

0001b71e <_ZN17LiquidCrystal_I2C9init_privEv>:
   1b71e:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1b720:	df 93       	push	r29
   1b722:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1b724:	8b e5       	ldi	r24, 0x5B	; 91
   1b726:	98 e1       	ldi	r25, 0x18	; 24
   1b728:	4f d7       	rcall	.+3742   	; 0x1c5c8 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1b72a:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1b72c:	20 e0       	ldi	r18, 0x00	; 0
   1b72e:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b730:	69 85       	ldd	r22, Y+9	; 0x09
   1b732:	ce 01       	movw	r24, r28
}
   1b734:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1b736:	cf 91       	pop	r28
   1b738:	ab cf       	rjmp	.-170    	; 0x1b690 <_ZN17LiquidCrystal_I2C5beginEhhh>

0001b73a <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1b73a:	f1 cf       	rjmp	.-30     	; 0x1b71e <_ZN17LiquidCrystal_I2C9init_privEv>

0001b73c <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1b73c:	81 e0       	ldi	r24, 0x01	; 1
   1b73e:	08 95       	ret

0001b740 <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1b740:	fc 01       	movw	r30, r24
   1b742:	64 83       	std	Z+4, r22	; 0x04
   1b744:	08 95       	ret

0001b746 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1b746:	fc 01       	movw	r30, r24
   1b748:	63 83       	std	Z+3, r22	; 0x03
   1b74a:	08 95       	ret

0001b74c <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1b74c:	fc 01       	movw	r30, r24
   1b74e:	61 87       	std	Z+9, r22	; 0x09
   1b750:	08 95       	ret

0001b752 <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1b752:	fc 01       	movw	r30, r24
   1b754:	62 87       	std	Z+10, r22	; 0x0a
   1b756:	08 95       	ret

0001b758 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1b758:	fc 01       	movw	r30, r24
   1b75a:	63 87       	std	Z+11, r22	; 0x0b
   1b75c:	08 95       	ret

0001b75e <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1b75e:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1b760:	40 95       	com	r20
   1b762:	94 85       	ldd	r25, Z+12	; 0x0c
   1b764:	49 23       	and	r20, r25
   1b766:	64 2b       	or	r22, r20
   1b768:	64 87       	std	Z+12, r22	; 0x0c
   1b76a:	08 95       	ret

0001b76c <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1b76c:	fc 01       	movw	r30, r24
   1b76e:	85 81       	ldd	r24, Z+5	; 0x05
}
   1b770:	08 95       	ret

0001b772 <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1b772:	fc 01       	movw	r30, r24
   1b774:	86 81       	ldd	r24, Z+6	; 0x06
}
   1b776:	08 95       	ret

0001b778 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1b778:	fc 01       	movw	r30, r24
   1b77a:	87 81       	ldd	r24, Z+7	; 0x07
}
   1b77c:	08 95       	ret

0001b77e <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1b77e:	fc 01       	movw	r30, r24
   1b780:	80 85       	ldd	r24, Z+8	; 0x08
}
   1b782:	08 95       	ret

0001b784 <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1b784:	fc 01       	movw	r30, r24
   1b786:	85 85       	ldd	r24, Z+13	; 0x0d
   1b788:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1b78a:	08 95       	ret

0001b78c <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1b78c:	fc 01       	movw	r30, r24
   1b78e:	82 81       	ldd	r24, Z+2	; 0x02
}
   1b790:	08 95       	ret

0001b792 <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1b792:	fc 01       	movw	r30, r24
   1b794:	62 83       	std	Z+2, r22	; 0x02
   1b796:	08 95       	ret

0001b798 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1b798:	80 e0       	ldi	r24, 0x00	; 0
   1b79a:	08 95       	ret

0001b79c <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1b79c:	fc 01       	movw	r30, r24
   1b79e:	87 85       	ldd	r24, Z+15	; 0x0f
   1b7a0:	90 89       	ldd	r25, Z+16	; 0x10
}
   1b7a2:	08 95       	ret

0001b7a4 <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1b7a4:	fc 01       	movw	r30, r24
   1b7a6:	81 89       	ldd	r24, Z+17	; 0x11
   1b7a8:	92 89       	ldd	r25, Z+18	; 0x12
}
   1b7aa:	08 95       	ret

0001b7ac <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1b7ac:	fc 01       	movw	r30, r24
   1b7ae:	83 89       	ldd	r24, Z+19	; 0x13
   1b7b0:	94 89       	ldd	r25, Z+20	; 0x14
}
   1b7b2:	08 95       	ret

0001b7b4 <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1b7b4:	cf 93       	push	r28
   1b7b6:	df 93       	push	r29
   1b7b8:	ec 01       	movw	r28, r24
    while (!available())
   1b7ba:	e8 81       	ld	r30, Y
   1b7bc:	f9 81       	ldd	r31, Y+1	; 0x01
   1b7be:	06 80       	ldd	r0, Z+6	; 0x06
   1b7c0:	f7 81       	ldd	r31, Z+7	; 0x07
   1b7c2:	e0 2d       	mov	r30, r0
   1b7c4:	ce 01       	movw	r24, r28
   1b7c6:	19 95       	eicall
   1b7c8:	81 11       	cpse	r24, r1
   1b7ca:	02 c0       	rjmp	.+4      	; 0x1b7d0 <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1b7cc:	2f d7       	rcall	.+3678   	; 0x1c62c <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1b7ce:	f5 cf       	rjmp	.-22     	; 0x1b7ba <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1b7d0:	df 91       	pop	r29
   1b7d2:	cf 91       	pop	r28
   1b7d4:	08 95       	ret

0001b7d6 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1b7d6:	cf 93       	push	r28
   1b7d8:	df 93       	push	r29
   1b7da:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1b7dc:	8a 81       	ldd	r24, Y+2	; 0x02
   1b7de:	83 30       	cpi	r24, 0x03	; 3
   1b7e0:	11 f4       	brne	.+4      	; 0x1b7e6 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1b7e2:	24 d7       	rcall	.+3656   	; 0x1c62c <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1b7e4:	fb cf       	rjmp	.-10     	; 0x1b7dc <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1b7e6:	81 e0       	ldi	r24, 0x01	; 1
   1b7e8:	df 91       	pop	r29
   1b7ea:	cf 91       	pop	r28
   1b7ec:	08 95       	ret

0001b7ee <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1b7ee:	8f 92       	push	r8
   1b7f0:	9f 92       	push	r9
   1b7f2:	af 92       	push	r10
   1b7f4:	bf 92       	push	r11
   1b7f6:	cf 92       	push	r12
   1b7f8:	df 92       	push	r13
   1b7fa:	ef 92       	push	r14
   1b7fc:	ff 92       	push	r15
   1b7fe:	cf 93       	push	r28
   1b800:	df 93       	push	r29
   1b802:	ec 01       	movw	r28, r24
   1b804:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b806:	b3 db       	rcall	.-2202   	; 0x1af6e <millis>
   1b808:	4b 01       	movw	r8, r22
   1b80a:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b80c:	e1 2c       	mov	r14, r1
   1b80e:	f1 2c       	mov	r15, r1
   1b810:	ae db       	rcall	.-2212   	; 0x1af6e <millis>
   1b812:	dc 01       	movw	r26, r24
   1b814:	cb 01       	movw	r24, r22
   1b816:	88 19       	sub	r24, r8
   1b818:	99 09       	sbc	r25, r9
   1b81a:	aa 09       	sbc	r26, r10
   1b81c:	bb 09       	sbc	r27, r11
   1b81e:	8c 15       	cp	r24, r12
   1b820:	9d 05       	cpc	r25, r13
   1b822:	ae 05       	cpc	r26, r14
   1b824:	bf 05       	cpc	r27, r15
   1b826:	58 f4       	brcc	.+22     	; 0x1b83e <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1b828:	e8 81       	ld	r30, Y
   1b82a:	f9 81       	ldd	r31, Y+1	; 0x01
   1b82c:	06 80       	ldd	r0, Z+6	; 0x06
   1b82e:	f7 81       	ldd	r31, Z+7	; 0x07
   1b830:	e0 2d       	mov	r30, r0
   1b832:	ce 01       	movw	r24, r28
   1b834:	19 95       	eicall
   1b836:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1b838:	03 c0       	rjmp	.+6      	; 0x1b840 <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1b83a:	f8 d6       	rcall	.+3568   	; 0x1c62c <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b83c:	e9 cf       	rjmp	.-46     	; 0x1b810 <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1b83e:	80 e0       	ldi	r24, 0x00	; 0
}
   1b840:	df 91       	pop	r29
   1b842:	cf 91       	pop	r28
   1b844:	ff 90       	pop	r15
   1b846:	ef 90       	pop	r14
   1b848:	df 90       	pop	r13
   1b84a:	cf 90       	pop	r12
   1b84c:	bf 90       	pop	r11
   1b84e:	af 90       	pop	r10
   1b850:	9f 90       	pop	r9
   1b852:	8f 90       	pop	r8
   1b854:	08 95       	ret

0001b856 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1b856:	8f 92       	push	r8
   1b858:	9f 92       	push	r9
   1b85a:	af 92       	push	r10
   1b85c:	bf 92       	push	r11
   1b85e:	cf 92       	push	r12
   1b860:	df 92       	push	r13
   1b862:	ef 92       	push	r14
   1b864:	ff 92       	push	r15
   1b866:	cf 93       	push	r28
   1b868:	df 93       	push	r29
   1b86a:	ec 01       	movw	r28, r24
   1b86c:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b86e:	7f db       	rcall	.-2306   	; 0x1af6e <millis>
   1b870:	4b 01       	movw	r8, r22
   1b872:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b874:	e1 2c       	mov	r14, r1
   1b876:	f1 2c       	mov	r15, r1
   1b878:	7a db       	rcall	.-2316   	; 0x1af6e <millis>
   1b87a:	dc 01       	movw	r26, r24
   1b87c:	cb 01       	movw	r24, r22
   1b87e:	88 19       	sub	r24, r8
   1b880:	99 09       	sbc	r25, r9
   1b882:	aa 09       	sbc	r26, r10
   1b884:	bb 09       	sbc	r27, r11
   1b886:	8c 15       	cp	r24, r12
   1b888:	9d 05       	cpc	r25, r13
   1b88a:	ae 05       	cpc	r26, r14
   1b88c:	bf 05       	cpc	r27, r15
   1b88e:	28 f4       	brcc	.+10     	; 0x1b89a <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1b890:	8a 81       	ldd	r24, Y+2	; 0x02
   1b892:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1b894:	21 f4       	brne	.+8      	; 0x1b89e <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1b896:	ca d6       	rcall	.+3476   	; 0x1c62c <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b898:	ef cf       	rjmp	.-34     	; 0x1b878 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1b89a:	80 e0       	ldi	r24, 0x00	; 0
   1b89c:	01 c0       	rjmp	.+2      	; 0x1b8a0 <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1b89e:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1b8a0:	df 91       	pop	r29
   1b8a2:	cf 91       	pop	r28
   1b8a4:	ff 90       	pop	r15
   1b8a6:	ef 90       	pop	r14
   1b8a8:	df 90       	pop	r13
   1b8aa:	cf 90       	pop	r12
   1b8ac:	bf 90       	pop	r11
   1b8ae:	af 90       	pop	r10
   1b8b0:	9f 90       	pop	r9
   1b8b2:	8f 90       	pop	r8
   1b8b4:	08 95       	ret

0001b8b6 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1b8b6:	cf 92       	push	r12
   1b8b8:	df 92       	push	r13
   1b8ba:	ef 92       	push	r14
   1b8bc:	ff 92       	push	r15
   1b8be:	cf 93       	push	r28
   1b8c0:	df 93       	push	r29
    if (!_cad_timeout)
   1b8c2:	fc 01       	movw	r30, r24
   1b8c4:	26 89       	ldd	r18, Z+22	; 0x16
   1b8c6:	37 89       	ldd	r19, Z+23	; 0x17
   1b8c8:	23 2b       	or	r18, r19
   1b8ca:	79 f1       	breq	.+94     	; 0x1b92a <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b8cc:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1b8ce:	4f db       	rcall	.-2402   	; 0x1af6e <millis>
   1b8d0:	6b 01       	movw	r12, r22
   1b8d2:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1b8d4:	e8 81       	ld	r30, Y
   1b8d6:	f9 81       	ldd	r31, Y+1	; 0x01
   1b8d8:	00 8c       	ldd	r0, Z+24	; 0x18
   1b8da:	f1 8d       	ldd	r31, Z+25	; 0x19
   1b8dc:	e0 2d       	mov	r30, r0
   1b8de:	ce 01       	movw	r24, r28
   1b8e0:	19 95       	eicall
   1b8e2:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1b8e4:	11 f1       	breq	.+68     	; 0x1b92a <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b8e6:	43 db       	rcall	.-2426   	; 0x1af6e <millis>
   1b8e8:	ab 01       	movw	r20, r22
   1b8ea:	bc 01       	movw	r22, r24
   1b8ec:	4c 19       	sub	r20, r12
   1b8ee:	5d 09       	sbc	r21, r13
   1b8f0:	6e 09       	sbc	r22, r14
   1b8f2:	7f 09       	sbc	r23, r15
   1b8f4:	8e 89       	ldd	r24, Y+22	; 0x16
   1b8f6:	9f 89       	ldd	r25, Y+23	; 0x17
   1b8f8:	a0 e0       	ldi	r26, 0x00	; 0
   1b8fa:	b0 e0       	ldi	r27, 0x00	; 0
   1b8fc:	84 17       	cp	r24, r20
   1b8fe:	95 07       	cpc	r25, r21
   1b900:	a6 07       	cpc	r26, r22
   1b902:	b7 07       	cpc	r27, r23
   1b904:	a0 f0       	brcs	.+40     	; 0x1b92e <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b906:	2a e0       	ldi	r18, 0x0A	; 10
   1b908:	30 e0       	ldi	r19, 0x00	; 0
   1b90a:	40 e0       	ldi	r20, 0x00	; 0
   1b90c:	50 e0       	ldi	r21, 0x00	; 0
   1b90e:	61 e0       	ldi	r22, 0x01	; 1
   1b910:	70 e0       	ldi	r23, 0x00	; 0
   1b912:	80 e0       	ldi	r24, 0x00	; 0
   1b914:	90 e0       	ldi	r25, 0x00	; 0
   1b916:	0e 94 24 e5 	call	0x1ca48	; 0x1ca48 <_Z6randomll>
   1b91a:	9b 01       	movw	r18, r22
   1b91c:	ac 01       	movw	r20, r24
   1b91e:	a4 e6       	ldi	r26, 0x64	; 100
   1b920:	b0 e0       	ldi	r27, 0x00	; 0
   1b922:	0e 94 0d ec 	call	0x1d81a	; 0x1d81a <__muluhisi3>
   1b926:	54 db       	rcall	.-2392   	; 0x1afd0 <delay>
   1b928:	d5 cf       	rjmp	.-86     	; 0x1b8d4 <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b92a:	81 e0       	ldi	r24, 0x01	; 1
   1b92c:	01 c0       	rjmp	.+2      	; 0x1b930 <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b92e:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b930:	df 91       	pop	r29
   1b932:	cf 91       	pop	r28
   1b934:	ff 90       	pop	r15
   1b936:	ef 90       	pop	r14
   1b938:	df 90       	pop	r13
   1b93a:	cf 90       	pop	r12
   1b93c:	08 95       	ret

0001b93e <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b93e:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b940:	89 e0       	ldi	r24, 0x09	; 9
   1b942:	98 e0       	ldi	r25, 0x08	; 8
   1b944:	91 83       	std	Z+1, r25	; 0x01
   1b946:	80 83       	st	Z, r24
   1b948:	12 82       	std	Z+2, r1	; 0x02
   1b94a:	8f ef       	ldi	r24, 0xFF	; 255
   1b94c:	83 83       	std	Z+3, r24	; 0x03
   1b94e:	81 87       	std	Z+9, r24	; 0x09
   1b950:	82 87       	std	Z+10, r24	; 0x0a
   1b952:	13 86       	std	Z+11, r1	; 0x0b
   1b954:	14 86       	std	Z+12, r1	; 0x0c
   1b956:	10 8a       	std	Z+16, r1	; 0x10
   1b958:	17 86       	std	Z+15, r1	; 0x0f
   1b95a:	12 8a       	std	Z+18, r1	; 0x12
   1b95c:	11 8a       	std	Z+17, r1	; 0x11
   1b95e:	14 8a       	std	Z+20, r1	; 0x14
   1b960:	13 8a       	std	Z+19, r1	; 0x13
   1b962:	17 8a       	std	Z+23, r1	; 0x17
   1b964:	16 8a       	std	Z+22, r1	; 0x16
   1b966:	08 95       	ret

0001b968 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b968:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b96a:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b96c:	0d b4       	in	r0, 0x2d	; 45
   1b96e:	07 fe       	sbrs	r0, 7
   1b970:	fd cf       	rjmp	.-6      	; 0x1b96c <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b972:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b974:	08 95       	ret

0001b976 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b976:	8c b5       	in	r24, 0x2c	; 44
   1b978:	80 68       	ori	r24, 0x80	; 128
   1b97a:	8c bd       	out	0x2c, r24	; 44
   1b97c:	08 95       	ret

0001b97e <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b97e:	8c b5       	in	r24, 0x2c	; 44
   1b980:	8f 77       	andi	r24, 0x7F	; 127
   1b982:	8c bd       	out	0x2c, r24	; 44
   1b984:	08 95       	ret

0001b986 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b986:	fc 01       	movw	r30, r24
   1b988:	45 81       	ldd	r20, Z+5	; 0x05
   1b98a:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b98c:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b990:	88 23       	and	r24, r24
   1b992:	99 f0       	breq	.+38     	; 0x1b9ba <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b994:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b996:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b998:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b99c:	81 30       	cpi	r24, 0x01	; 1
   1b99e:	59 f4       	brne	.+22     	; 0x1b9b6 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b9a0:	8d b3       	in	r24, 0x1d	; 29
   1b9a2:	80 93 57 18 	sts	0x1857, r24	; 0x801857 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b9a6:	9d b3       	in	r25, 0x1d	; 29
   1b9a8:	80 91 58 18 	lds	r24, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1b9ac:	80 95       	com	r24
   1b9ae:	89 23       	and	r24, r25
   1b9b0:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b9b2:	2f bf       	out	0x3f, r18	; 63
   1b9b4:	02 c0       	rjmp	.+4      	; 0x1b9ba <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b9b6:	20 93 57 18 	sts	0x1857, r18	; 0x801857 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b9ba:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b9bc:	3d bd       	out	0x2d, r19	; 45
   1b9be:	08 95       	ret

0001b9c0 <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b9c0:	0f 93       	push	r16
   1b9c2:	1f 93       	push	r17
   1b9c4:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b9c6:	82 81       	ldd	r24, Z+2	; 0x02
   1b9c8:	84 30       	cpi	r24, 0x04	; 4
   1b9ca:	59 f0       	breq	.+22     	; 0x1b9e2 <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b9cc:	83 30       	cpi	r24, 0x03	; 3
   1b9ce:	71 f0       	breq	.+28     	; 0x1b9ec <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b9d0:	82 30       	cpi	r24, 0x02	; 2
   1b9d2:	89 f0       	breq	.+34     	; 0x1b9f6 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b9d4:	81 30       	cpi	r24, 0x01	; 1
   1b9d6:	a1 f0       	breq	.+40     	; 0x1ba00 <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b9d8:	40 e4       	ldi	r20, 0x40	; 64
   1b9da:	52 e4       	ldi	r21, 0x42	; 66
   1b9dc:	6f e0       	ldi	r22, 0x0F	; 15
   1b9de:	70 e0       	ldi	r23, 0x00	; 0
   1b9e0:	13 c0       	rjmp	.+38     	; 0x1ba08 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b9e2:	40 e0       	ldi	r20, 0x00	; 0
   1b9e4:	54 e2       	ldi	r21, 0x24	; 36
   1b9e6:	64 ef       	ldi	r22, 0xF4	; 244
   1b9e8:	70 e0       	ldi	r23, 0x00	; 0
   1b9ea:	0e c0       	rjmp	.+28     	; 0x1ba08 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b9ec:	40 e0       	ldi	r20, 0x00	; 0
   1b9ee:	52 e1       	ldi	r21, 0x12	; 18
   1b9f0:	6a e7       	ldi	r22, 0x7A	; 122
   1b9f2:	70 e0       	ldi	r23, 0x00	; 0
   1b9f4:	09 c0       	rjmp	.+18     	; 0x1ba08 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b9f6:	40 e0       	ldi	r20, 0x00	; 0
   1b9f8:	59 e0       	ldi	r21, 0x09	; 9
   1b9fa:	6d e3       	ldi	r22, 0x3D	; 61
   1b9fc:	70 e0       	ldi	r23, 0x00	; 0
   1b9fe:	04 c0       	rjmp	.+8      	; 0x1ba08 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1ba00:	40 e8       	ldi	r20, 0x80	; 128
   1ba02:	54 e8       	ldi	r21, 0x84	; 132
   1ba04:	6e e1       	ldi	r22, 0x1E	; 30
   1ba06:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1ba08:	84 81       	ldd	r24, Z+4	; 0x04
   1ba0a:	88 23       	and	r24, r24
   1ba0c:	61 f0       	breq	.+24     	; 0x1ba26 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1ba0e:	81 30       	cpi	r24, 0x01	; 1
   1ba10:	31 f0       	breq	.+12     	; 0x1ba1e <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1ba12:	82 30       	cpi	r24, 0x02	; 2
   1ba14:	31 f0       	breq	.+12     	; 0x1ba22 <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1ba16:	83 30       	cpi	r24, 0x03	; 3
   1ba18:	31 f4       	brne	.+12     	; 0x1ba26 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1ba1a:	9c e0       	ldi	r25, 0x0C	; 12
   1ba1c:	05 c0       	rjmp	.+10     	; 0x1ba28 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1ba1e:	94 e0       	ldi	r25, 0x04	; 4
   1ba20:	03 c0       	rjmp	.+6      	; 0x1ba28 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1ba22:	98 e0       	ldi	r25, 0x08	; 8
   1ba24:	01 c0       	rjmp	.+2      	; 0x1ba28 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1ba26:	90 e0       	ldi	r25, 0x00	; 0
   1ba28:	00 e0       	ldi	r16, 0x00	; 0
   1ba2a:	12 e1       	ldi	r17, 0x12	; 18
   1ba2c:	2a e7       	ldi	r18, 0x7A	; 122
   1ba2e:	30 e0       	ldi	r19, 0x00	; 0
   1ba30:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1ba32:	40 17       	cp	r20, r16
   1ba34:	51 07       	cpc	r21, r17
   1ba36:	62 07       	cpc	r22, r18
   1ba38:	73 07       	cpc	r23, r19
   1ba3a:	40 f4       	brcc	.+16     	; 0x1ba4c <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1ba3c:	36 95       	lsr	r19
   1ba3e:	27 95       	ror	r18
   1ba40:	17 95       	ror	r17
   1ba42:	07 95       	ror	r16
        clockDiv++;
   1ba44:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1ba46:	86 30       	cpi	r24, 0x06	; 6
   1ba48:	a1 f7       	brne	.-24     	; 0x1ba32 <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1ba4a:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1ba4c:	21 e0       	ldi	r18, 0x01	; 1
   1ba4e:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1ba50:	83 81       	ldd	r24, Z+3	; 0x03
   1ba52:	81 30       	cpi	r24, 0x01	; 1
   1ba54:	11 f0       	breq	.+4      	; 0x1ba5a <_ZN13RHHardwareSPI5beginEv+0x9a>
   1ba56:	80 e5       	ldi	r24, 0x50	; 80
   1ba58:	01 c0       	rjmp	.+2      	; 0x1ba5c <_ZN13RHHardwareSPI5beginEv+0x9c>
   1ba5a:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1ba5c:	32 2f       	mov	r19, r18
   1ba5e:	36 95       	lsr	r19
   1ba60:	93 2b       	or	r25, r19
   1ba62:	98 2b       	or	r25, r24
   1ba64:	95 83       	std	Z+5, r25	; 0x05
   1ba66:	21 70       	andi	r18, 0x01	; 1
   1ba68:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1ba6a:	1f 91       	pop	r17
   1ba6c:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1ba6e:	67 c4       	rjmp	.+2254   	; 0x1c33e <_ZN8SPIClass5beginEv>

0001ba70 <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1ba70:	9c c4       	rjmp	.+2360   	; 0x1c3aa <_ZN8SPIClass3endEv>

0001ba72 <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1ba72:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1ba74:	ae c4       	rjmp	.+2396   	; 0x1c3d2 <_ZN8SPIClass14usingInterruptEh>

0001ba76 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1ba76:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1ba7a:	88 23       	and	r24, r24
   1ba7c:	61 f0       	breq	.+24     	; 0x1ba96 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1ba7e:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1ba80:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1ba82:	20 91 59 18 	lds	r18, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1ba86:	80 91 57 18 	lds	r24, 0x1857	; 0x801857 <_ZN8SPIClass13interruptSaveE>
   1ba8a:	21 30       	cpi	r18, 0x01	; 1
   1ba8c:	19 f4       	brne	.+6      	; 0x1ba94 <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1ba8e:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1ba90:	9f bf       	out	0x3f, r25	; 63
   1ba92:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1ba94:	8f bf       	out	0x3f, r24	; 63
   1ba96:	08 95       	ret

0001ba98 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1ba98:	cf 93       	push	r28
   1ba9a:	df 93       	push	r29
   1ba9c:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1ba9e:	0e 94 53 e5 	call	0x1caa6	; 0x1caa6 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1baa2:	89 e4       	ldi	r24, 0x49	; 73
   1baa4:	98 e0       	ldi	r25, 0x08	; 8
   1baa6:	99 83       	std	Y+1, r25	; 0x01
   1baa8:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1baaa:	80 e5       	ldi	r24, 0x50	; 80
   1baac:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1baae:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1bab0:	df 91       	pop	r29
   1bab2:	cf 91       	pop	r28
   1bab4:	08 95       	ret

0001bab6 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1bab6:	20 e0       	ldi	r18, 0x00	; 0
   1bab8:	40 e0       	ldi	r20, 0x00	; 0
   1baba:	60 e0       	ldi	r22, 0x00	; 0
   1babc:	89 e4       	ldi	r24, 0x49	; 73
   1babe:	98 e1       	ldi	r25, 0x18	; 24
   1bac0:	eb cf       	rjmp	.-42     	; 0x1ba98 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001bac2 <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1bac2:	81 e0       	ldi	r24, 0x01	; 1
   1bac4:	08 95       	ret

0001bac6 <_ZN7RH_RF9516maxMessageLengthEv>:
   1bac6:	8f e1       	ldi	r24, 0x1F	; 31
   1bac8:	08 95       	ret

0001baca <_ZN7RH_RF95D1Ev>:
   1baca:	08 95       	ret

0001bacc <_ZN7RH_RF9515isChannelActiveEv>:
   1bacc:	cf 93       	push	r28
   1bace:	df 93       	push	r29
   1bad0:	ec 01       	movw	r28, r24
   1bad2:	8a 81       	ldd	r24, Y+2	; 0x02
   1bad4:	85 30       	cpi	r24, 0x05	; 5
   1bad6:	b1 f0       	breq	.+44     	; 0x1bb04 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1bad8:	e8 81       	ld	r30, Y
   1bada:	f9 81       	ldd	r31, Y+1	; 0x01
   1badc:	e0 5c       	subi	r30, 0xC0	; 192
   1bade:	ff 4f       	sbci	r31, 0xFF	; 255
   1bae0:	01 90       	ld	r0, Z+
   1bae2:	f0 81       	ld	r31, Z
   1bae4:	e0 2d       	mov	r30, r0
   1bae6:	65 e0       	ldi	r22, 0x05	; 5
   1bae8:	ce 01       	movw	r24, r28
   1baea:	19 95       	eicall
   1baec:	47 e0       	ldi	r20, 0x07	; 7
   1baee:	61 e0       	ldi	r22, 0x01	; 1
   1baf0:	ce 01       	movw	r24, r28
   1baf2:	0e 94 e5 e5 	call	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1baf6:	40 e8       	ldi	r20, 0x80	; 128
   1baf8:	60 e4       	ldi	r22, 0x40	; 64
   1bafa:	ce 01       	movw	r24, r28
   1bafc:	0e 94 e5 e5 	call	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bb00:	85 e0       	ldi	r24, 0x05	; 5
   1bb02:	8a 83       	std	Y+2, r24	; 0x02
   1bb04:	8a 81       	ldd	r24, Y+2	; 0x02
   1bb06:	85 30       	cpi	r24, 0x05	; 5
   1bb08:	11 f4       	brne	.+4      	; 0x1bb0e <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1bb0a:	90 d5       	rcall	.+2848   	; 0x1c62c <yield>
   1bb0c:	fb cf       	rjmp	.-10     	; 0x1bb04 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1bb0e:	8d 89       	ldd	r24, Y+21	; 0x15
   1bb10:	df 91       	pop	r29
   1bb12:	cf 91       	pop	r28
   1bb14:	08 95       	ret

0001bb16 <_ZN7RH_RF95D0Ev>:
   1bb16:	8b c5       	rjmp	.+2838   	; 0x1c62e <_ZdlPv>

0001bb18 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1bb18:	0f 93       	push	r16
   1bb1a:	1f 93       	push	r17
   1bb1c:	cf 93       	push	r28
   1bb1e:	8c 01       	movw	r16, r24
   1bb20:	c6 2f       	mov	r28, r22
   1bb22:	65 31       	cpi	r22, 0x15	; 21
   1bb24:	2c f4       	brge	.+10     	; 0x1bb30 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1bb26:	62 30       	cpi	r22, 0x02	; 2
   1bb28:	5c f0       	brlt	.+22     	; 0x1bb40 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1bb2a:	62 31       	cpi	r22, 0x12	; 18
   1bb2c:	54 f0       	brlt	.+20     	; 0x1bb42 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1bb2e:	01 c0       	rjmp	.+2      	; 0x1bb32 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1bb30:	c4 e1       	ldi	r28, 0x14	; 20
   1bb32:	47 e0       	ldi	r20, 0x07	; 7
   1bb34:	6d e4       	ldi	r22, 0x4D	; 77
   1bb36:	c8 01       	movw	r24, r16
   1bb38:	0e 94 e5 e5 	call	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bb3c:	c3 50       	subi	r28, 0x03	; 3
   1bb3e:	06 c0       	rjmp	.+12     	; 0x1bb4c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1bb40:	c2 e0       	ldi	r28, 0x02	; 2
   1bb42:	44 e0       	ldi	r20, 0x04	; 4
   1bb44:	6d e4       	ldi	r22, 0x4D	; 77
   1bb46:	c8 01       	movw	r24, r16
   1bb48:	0e 94 e5 e5 	call	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bb4c:	4e ef       	ldi	r20, 0xFE	; 254
   1bb4e:	4c 0f       	add	r20, r28
   1bb50:	40 68       	ori	r20, 0x80	; 128
   1bb52:	69 e0       	ldi	r22, 0x09	; 9
   1bb54:	c8 01       	movw	r24, r16
   1bb56:	cf 91       	pop	r28
   1bb58:	1f 91       	pop	r17
   1bb5a:	0f 91       	pop	r16
   1bb5c:	0c 94 e5 e5 	jmp	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>

0001bb60 <_ZN7RH_RF955sleepEv>:
   1bb60:	cf 93       	push	r28
   1bb62:	df 93       	push	r29
   1bb64:	fc 01       	movw	r30, r24
   1bb66:	22 81       	ldd	r18, Z+2	; 0x02
   1bb68:	21 30       	cpi	r18, 0x01	; 1
   1bb6a:	91 f0       	breq	.+36     	; 0x1bb90 <_ZN7RH_RF955sleepEv+0x30>
   1bb6c:	ec 01       	movw	r28, r24
   1bb6e:	01 90       	ld	r0, Z+
   1bb70:	f0 81       	ld	r31, Z
   1bb72:	e0 2d       	mov	r30, r0
   1bb74:	e0 5c       	subi	r30, 0xC0	; 192
   1bb76:	ff 4f       	sbci	r31, 0xFF	; 255
   1bb78:	01 90       	ld	r0, Z+
   1bb7a:	f0 81       	ld	r31, Z
   1bb7c:	e0 2d       	mov	r30, r0
   1bb7e:	61 e0       	ldi	r22, 0x01	; 1
   1bb80:	19 95       	eicall
   1bb82:	40 e0       	ldi	r20, 0x00	; 0
   1bb84:	61 e0       	ldi	r22, 0x01	; 1
   1bb86:	ce 01       	movw	r24, r28
   1bb88:	0e 94 e5 e5 	call	0x1cbca	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bb8c:	81 e0       	ldi	r24, 0x01	; 1
   1bb8e:	8a 83       	std	Y+2, r24	; 0x02
   1bb90:	81 e0       	ldi	r24, 0x01	; 1
   1bb92:	df 91       	pop	r29
   1bb94:	cf 91       	pop	r28
   1bb96:	08 95       	ret

0001bb98 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1bb98:	1f 93       	push	r17
   1bb9a:	cf 93       	push	r28
   1bb9c:	df 93       	push	r29
   1bb9e:	ec 01       	movw	r28, r24
   1bba0:	14 2f       	mov	r17, r20
   1bba2:	a9 01       	movw	r20, r18
   1bba4:	b6 d7       	rcall	.+3948   	; 0x1cb12 <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1bba6:	83 e6       	ldi	r24, 0x63	; 99
   1bba8:	98 e0       	ldi	r25, 0x08	; 8
   1bbaa:	99 83       	std	Y+1, r25	; 0x01
   1bbac:	88 83       	st	Y, r24
   1bbae:	fe 01       	movw	r30, r28
   1bbb0:	ee 5b       	subi	r30, 0xBE	; 190
   1bbb2:	ff 4f       	sbci	r31, 0xFF	; 255
   1bbb4:	10 82       	st	Z, r1
   1bbb6:	34 96       	adiw	r30, 0x04	; 4
   1bbb8:	10 82       	st	Z, r1
   1bbba:	1c 8f       	std	Y+28, r17	; 0x1c
   1bbbc:	8f ef       	ldi	r24, 0xFF	; 255
   1bbbe:	8d 8f       	std	Y+29, r24	; 0x1d
   1bbc0:	31 97       	sbiw	r30, 0x01	; 1
   1bbc2:	81 e0       	ldi	r24, 0x01	; 1
   1bbc4:	80 83       	st	Z, r24
   1bbc6:	1b 8e       	std	Y+27, r1	; 0x1b
   1bbc8:	df 91       	pop	r29
   1bbca:	cf 91       	pop	r28
   1bbcc:	1f 91       	pop	r17
   1bbce:	08 95       	ret

0001bbd0 <_ZN7RH_RF9513validateRxBufEv>:
   1bbd0:	fc 01       	movw	r30, r24
   1bbd2:	86 8d       	ldd	r24, Z+30	; 0x1e
   1bbd4:	84 30       	cpi	r24, 0x04	; 4
   1bbd6:	d8 f0       	brcs	.+54     	; 0x1bc0e <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1bbd8:	87 8d       	ldd	r24, Z+31	; 0x1f
   1bbda:	85 83       	std	Z+5, r24	; 0x05
   1bbdc:	80 a1       	ldd	r24, Z+32	; 0x20
   1bbde:	86 83       	std	Z+6, r24	; 0x06
   1bbe0:	81 a1       	ldd	r24, Z+33	; 0x21
   1bbe2:	87 83       	std	Z+7, r24	; 0x07
   1bbe4:	82 a1       	ldd	r24, Z+34	; 0x22
   1bbe6:	80 87       	std	Z+8, r24	; 0x08
   1bbe8:	84 81       	ldd	r24, Z+4	; 0x04
   1bbea:	81 11       	cpse	r24, r1
   1bbec:	07 c0       	rjmp	.+14     	; 0x1bbfc <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1bbee:	95 81       	ldd	r25, Z+5	; 0x05
   1bbf0:	83 81       	ldd	r24, Z+3	; 0x03
   1bbf2:	98 17       	cp	r25, r24
   1bbf4:	19 f0       	breq	.+6      	; 0x1bbfc <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1bbf6:	85 81       	ldd	r24, Z+5	; 0x05
   1bbf8:	8f 3f       	cpi	r24, 0xFF	; 255
   1bbfa:	49 f4       	brne	.+18     	; 0x1bc0e <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1bbfc:	81 89       	ldd	r24, Z+17	; 0x11
   1bbfe:	92 89       	ldd	r25, Z+18	; 0x12
   1bc00:	01 96       	adiw	r24, 0x01	; 1
   1bc02:	92 8b       	std	Z+18, r25	; 0x12
   1bc04:	81 8b       	std	Z+17, r24	; 0x11
   1bc06:	ee 5b       	subi	r30, 0xBE	; 190
   1bc08:	ff 4f       	sbci	r31, 0xFF	; 255
   1bc0a:	81 e0       	ldi	r24, 0x01	; 1
   1bc0c:	80 83       	st	Z, r24
   1bc0e:	08 95       	ret

0001bc10 <_ZN7RH_RF9510clearRxBufEv>:
   1bc10:	2f b7       	in	r18, 0x3f	; 63
   1bc12:	f8 94       	cli
   1bc14:	fc 01       	movw	r30, r24
   1bc16:	ee 5b       	subi	r30, 0xBE	; 190
   1bc18:	ff 4f       	sbci	r31, 0xFF	; 255
   1bc1a:	10 82       	st	Z, r1
   1bc1c:	fc 01       	movw	r30, r24
   1bc1e:	16 8e       	std	Z+30, r1	; 0x1e
   1bc20:	2f bf       	out	0x3f, r18	; 63
   1bc22:	08 95       	ret

0001bc24 <_ZN7RH_RF954recvEPhS0_>:
   1bc24:	cf 92       	push	r12
   1bc26:	df 92       	push	r13
   1bc28:	ef 92       	push	r14
   1bc2a:	ff 92       	push	r15
   1bc2c:	0f 93       	push	r16
   1bc2e:	1f 93       	push	r17
   1bc30:	cf 93       	push	r28
   1bc32:	df 93       	push	r29
   1bc34:	ec 01       	movw	r28, r24
   1bc36:	7b 01       	movw	r14, r22
   1bc38:	8a 01       	movw	r16, r20
   1bc3a:	e8 81       	ld	r30, Y
   1bc3c:	f9 81       	ldd	r31, Y+1	; 0x01
   1bc3e:	06 80       	ldd	r0, Z+6	; 0x06
   1bc40:	f7 81       	ldd	r31, Z+7	; 0x07
   1bc42:	e0 2d       	mov	r30, r0
   1bc44:	19 95       	eicall
   1bc46:	d8 2e       	mov	r13, r24
   1bc48:	88 23       	and	r24, r24
   1bc4a:	01 f1       	breq	.+64     	; 0x1bc8c <_ZN7RH_RF954recvEPhS0_+0x68>
   1bc4c:	e1 14       	cp	r14, r1
   1bc4e:	f1 04       	cpc	r15, r1
   1bc50:	d9 f0       	breq	.+54     	; 0x1bc88 <_ZN7RH_RF954recvEPhS0_+0x64>
   1bc52:	01 15       	cp	r16, r1
   1bc54:	11 05       	cpc	r17, r1
   1bc56:	c1 f0       	breq	.+48     	; 0x1bc88 <_ZN7RH_RF954recvEPhS0_+0x64>
   1bc58:	cf b6       	in	r12, 0x3f	; 63
   1bc5a:	f8 94       	cli
   1bc5c:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1bc5e:	90 e0       	ldi	r25, 0x00	; 0
   1bc60:	03 97       	sbiw	r24, 0x03	; 3
   1bc62:	f8 01       	movw	r30, r16
   1bc64:	20 81       	ld	r18, Z
   1bc66:	30 e0       	ldi	r19, 0x00	; 0
   1bc68:	28 17       	cp	r18, r24
   1bc6a:	39 07       	cpc	r19, r25
   1bc6c:	1c f0       	brlt	.+6      	; 0x1bc74 <_ZN7RH_RF954recvEPhS0_+0x50>
   1bc6e:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1bc70:	84 50       	subi	r24, 0x04	; 4
   1bc72:	80 83       	st	Z, r24
   1bc74:	f8 01       	movw	r30, r16
   1bc76:	40 81       	ld	r20, Z
   1bc78:	50 e0       	ldi	r21, 0x00	; 0
   1bc7a:	be 01       	movw	r22, r28
   1bc7c:	6d 5d       	subi	r22, 0xDD	; 221
   1bc7e:	7f 4f       	sbci	r23, 0xFF	; 255
   1bc80:	c7 01       	movw	r24, r14
   1bc82:	0e 94 ff ed 	call	0x1dbfe	; 0x1dbfe <memcpy>
   1bc86:	cf be       	out	0x3f, r12	; 63
   1bc88:	ce 01       	movw	r24, r28
   1bc8a:	c2 df       	rcall	.-124    	; 0x1bc10 <_ZN7RH_RF9510clearRxBufEv>
   1bc8c:	8d 2d       	mov	r24, r13
   1bc8e:	df 91       	pop	r29
   1bc90:	cf 91       	pop	r28
   1bc92:	1f 91       	pop	r17
   1bc94:	0f 91       	pop	r16
   1bc96:	ff 90       	pop	r15
   1bc98:	ef 90       	pop	r14
   1bc9a:	df 90       	pop	r13
   1bc9c:	cf 90       	pop	r12
   1bc9e:	08 95       	ret

0001bca0 <_ZN7RH_RF9512setFrequencyEf>:
   1bca0:	8f 92       	push	r8
   1bca2:	9f 92       	push	r9
   1bca4:	af 92       	push	r10
   1bca6:	bf 92       	push	r11
   1bca8:	cf 92       	push	r12
   1bcaa:	df 92       	push	r13
   1bcac:	ef 92       	push	r14
   1bcae:	ff 92       	push	r15
   1bcb0:	1f 93       	push	r17
   1bcb2:	cf 93       	push	r28
   1bcb4:	df 93       	push	r29
   1bcb6:	ec 01       	movw	r28, r24
   1bcb8:	4a 01       	movw	r8, r20
   1bcba:	5b 01       	movw	r10, r22
   1bcbc:	20 e0       	ldi	r18, 0x00	; 0
   1bcbe:	34 e2       	ldi	r19, 0x24	; 36
   1bcc0:	44 e7       	ldi	r20, 0x74	; 116
   1bcc2:	59 e4       	ldi	r21, 0x49	; 73
   1bcc4:	c5 01       	movw	r24, r10
   1bcc6:	b4 01       	movw	r22, r8
   1bcc8:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
   1bccc:	20 e0       	ldi	r18, 0x00	; 0
   1bcce:	34 e2       	ldi	r19, 0x24	; 36
   1bcd0:	44 e7       	ldi	r20, 0x74	; 116
   1bcd2:	52 e4       	ldi	r21, 0x42	; 66
   1bcd4:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
   1bcd8:	0e 94 f8 d1 	call	0x1a3f0	; 0x1a3f0 <__fixunssfsi>
   1bcdc:	6b 01       	movw	r12, r22
   1bcde:	7c 01       	movw	r14, r24
   1bce0:	a7 01       	movw	r20, r14
   1bce2:	66 27       	eor	r22, r22
   1bce4:	77 27       	eor	r23, r23
   1bce6:	66 e0       	ldi	r22, 0x06	; 6
   1bce8:	ce 01       	movw	r24, r28
   1bcea:	6f d7       	rcall	.+3806   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bcec:	77 27       	eor	r23, r23
   1bcee:	6f 2d       	mov	r22, r15
   1bcf0:	5e 2d       	mov	r21, r14
   1bcf2:	4d 2d       	mov	r20, r13
   1bcf4:	67 e0       	ldi	r22, 0x07	; 7
   1bcf6:	ce 01       	movw	r24, r28
   1bcf8:	68 d7       	rcall	.+3792   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bcfa:	4c 2d       	mov	r20, r12
   1bcfc:	68 e0       	ldi	r22, 0x08	; 8
   1bcfe:	ce 01       	movw	r24, r28
   1bd00:	64 d7       	rcall	.+3784   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bd02:	cd 5b       	subi	r28, 0xBD	; 189
   1bd04:	df 4f       	sbci	r29, 0xFF	; 255
   1bd06:	11 e0       	ldi	r17, 0x01	; 1
   1bd08:	20 e0       	ldi	r18, 0x00	; 0
   1bd0a:	30 ec       	ldi	r19, 0xC0	; 192
   1bd0c:	42 e4       	ldi	r20, 0x42	; 66
   1bd0e:	54 e4       	ldi	r21, 0x44	; 68
   1bd10:	c5 01       	movw	r24, r10
   1bd12:	b4 01       	movw	r22, r8
   1bd14:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
   1bd18:	87 fd       	sbrc	r24, 7
   1bd1a:	10 e0       	ldi	r17, 0x00	; 0
   1bd1c:	18 83       	st	Y, r17
   1bd1e:	81 e0       	ldi	r24, 0x01	; 1
   1bd20:	df 91       	pop	r29
   1bd22:	cf 91       	pop	r28
   1bd24:	1f 91       	pop	r17
   1bd26:	ff 90       	pop	r15
   1bd28:	ef 90       	pop	r14
   1bd2a:	df 90       	pop	r13
   1bd2c:	cf 90       	pop	r12
   1bd2e:	bf 90       	pop	r11
   1bd30:	af 90       	pop	r10
   1bd32:	9f 90       	pop	r9
   1bd34:	8f 90       	pop	r8
   1bd36:	08 95       	ret

0001bd38 <_ZN7RH_RF9511setModeIdleEv>:
   1bd38:	cf 93       	push	r28
   1bd3a:	df 93       	push	r29
   1bd3c:	fc 01       	movw	r30, r24
   1bd3e:	22 81       	ldd	r18, Z+2	; 0x02
   1bd40:	22 30       	cpi	r18, 0x02	; 2
   1bd42:	89 f0       	breq	.+34     	; 0x1bd66 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1bd44:	ec 01       	movw	r28, r24
   1bd46:	01 90       	ld	r0, Z+
   1bd48:	f0 81       	ld	r31, Z
   1bd4a:	e0 2d       	mov	r30, r0
   1bd4c:	e0 5c       	subi	r30, 0xC0	; 192
   1bd4e:	ff 4f       	sbci	r31, 0xFF	; 255
   1bd50:	01 90       	ld	r0, Z+
   1bd52:	f0 81       	ld	r31, Z
   1bd54:	e0 2d       	mov	r30, r0
   1bd56:	62 e0       	ldi	r22, 0x02	; 2
   1bd58:	19 95       	eicall
   1bd5a:	41 e0       	ldi	r20, 0x01	; 1
   1bd5c:	61 e0       	ldi	r22, 0x01	; 1
   1bd5e:	ce 01       	movw	r24, r28
   1bd60:	34 d7       	rcall	.+3688   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bd62:	82 e0       	ldi	r24, 0x02	; 2
   1bd64:	8a 83       	std	Y+2, r24	; 0x02
   1bd66:	df 91       	pop	r29
   1bd68:	cf 91       	pop	r28
   1bd6a:	08 95       	ret

0001bd6c <_ZN7RH_RF9515handleInterruptEv>:
   1bd6c:	0f 93       	push	r16
   1bd6e:	1f 93       	push	r17
   1bd70:	cf 93       	push	r28
   1bd72:	df 93       	push	r29
   1bd74:	ec 01       	movw	r28, r24
   1bd76:	62 e1       	ldi	r22, 0x12	; 18
   1bd78:	e3 d6       	rcall	.+3526   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1bd7a:	18 2f       	mov	r17, r24
   1bd7c:	6c e1       	ldi	r22, 0x1C	; 28
   1bd7e:	ce 01       	movw	r24, r28
   1bd80:	df d6       	rcall	.+3518   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1bd82:	08 2f       	mov	r16, r24
   1bd84:	4f ef       	ldi	r20, 0xFF	; 255
   1bd86:	62 e1       	ldi	r22, 0x12	; 18
   1bd88:	ce 01       	movw	r24, r28
   1bd8a:	1f d7       	rcall	.+3646   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bd8c:	8a 81       	ldd	r24, Y+2	; 0x02
   1bd8e:	84 30       	cpi	r24, 0x04	; 4
   1bd90:	b1 f4       	brne	.+44     	; 0x1bdbe <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bd92:	81 2f       	mov	r24, r17
   1bd94:	80 7a       	andi	r24, 0xA0	; 160
   1bd96:	41 f4       	brne	.+16     	; 0x1bda8 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1bd98:	fe 01       	movw	r30, r28
   1bd9a:	eb 5b       	subi	r30, 0xBB	; 187
   1bd9c:	ff 4f       	sbci	r31, 0xFF	; 255
   1bd9e:	80 81       	ld	r24, Z
   1bda0:	88 23       	and	r24, r24
   1bda2:	69 f0       	breq	.+26     	; 0x1bdbe <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bda4:	06 fd       	sbrc	r16, 6
   1bda6:	0b c0       	rjmp	.+22     	; 0x1bdbe <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bda8:	8f 85       	ldd	r24, Y+15	; 0x0f
   1bdaa:	98 89       	ldd	r25, Y+16	; 0x10
   1bdac:	01 96       	adiw	r24, 0x01	; 1
   1bdae:	98 8b       	std	Y+16, r25	; 0x10
   1bdb0:	8f 87       	std	Y+15, r24	; 0x0f
   1bdb2:	ce 01       	movw	r24, r28
   1bdb4:	df 91       	pop	r29
   1bdb6:	cf 91       	pop	r28
   1bdb8:	1f 91       	pop	r17
   1bdba:	0f 91       	pop	r16
   1bdbc:	29 cf       	rjmp	.-430    	; 0x1bc10 <_ZN7RH_RF9510clearRxBufEv>
   1bdbe:	8a 81       	ldd	r24, Y+2	; 0x02
   1bdc0:	84 30       	cpi	r24, 0x04	; 4
   1bdc2:	11 f4       	brne	.+4      	; 0x1bdc8 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1bdc4:	16 fd       	sbrc	r17, 6
   1bdc6:	0c c0       	rjmp	.+24     	; 0x1bde0 <_ZN7RH_RF9515handleInterruptEv+0x74>
   1bdc8:	8a 81       	ldd	r24, Y+2	; 0x02
   1bdca:	83 30       	cpi	r24, 0x03	; 3
   1bdcc:	09 f0       	breq	.+2      	; 0x1bdd0 <_ZN7RH_RF9515handleInterruptEv+0x64>
   1bdce:	61 c0       	rjmp	.+194    	; 0x1be92 <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bdd0:	13 ff       	sbrs	r17, 3
   1bdd2:	5f c0       	rjmp	.+190    	; 0x1be92 <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bdd4:	8b 89       	ldd	r24, Y+19	; 0x13
   1bdd6:	9c 89       	ldd	r25, Y+20	; 0x14
   1bdd8:	01 96       	adiw	r24, 0x01	; 1
   1bdda:	9c 8b       	std	Y+20, r25	; 0x14
   1bddc:	8b 8b       	std	Y+19, r24	; 0x13
   1bdde:	60 c0       	rjmp	.+192    	; 0x1bea0 <_ZN7RH_RF9515handleInterruptEv+0x134>
   1bde0:	63 e1       	ldi	r22, 0x13	; 19
   1bde2:	ce 01       	movw	r24, r28
   1bde4:	ad d6       	rcall	.+3418   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1bde6:	18 2f       	mov	r17, r24
   1bde8:	60 e1       	ldi	r22, 0x10	; 16
   1bdea:	ce 01       	movw	r24, r28
   1bdec:	a9 d6       	rcall	.+3410   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1bdee:	48 2f       	mov	r20, r24
   1bdf0:	6d e0       	ldi	r22, 0x0D	; 13
   1bdf2:	ce 01       	movw	r24, r28
   1bdf4:	ea d6       	rcall	.+3540   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bdf6:	21 2f       	mov	r18, r17
   1bdf8:	ae 01       	movw	r20, r28
   1bdfa:	41 5e       	subi	r20, 0xE1	; 225
   1bdfc:	5f 4f       	sbci	r21, 0xFF	; 255
   1bdfe:	60 e0       	ldi	r22, 0x00	; 0
   1be00:	ce 01       	movw	r24, r28
   1be02:	2b d7       	rcall	.+3670   	; 0x1cc5a <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1be04:	1e 8f       	std	Y+30, r17	; 0x1e
   1be06:	69 e1       	ldi	r22, 0x19	; 25
   1be08:	ce 01       	movw	r24, r28
   1be0a:	9a d6       	rcall	.+3380   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1be0c:	8e 01       	movw	r16, r28
   1be0e:	0c 5b       	subi	r16, 0xBC	; 188
   1be10:	1f 4f       	sbci	r17, 0xFF	; 255
   1be12:	87 fd       	sbrc	r24, 7
   1be14:	8d 5f       	subi	r24, 0xFD	; 253
   1be16:	85 95       	asr	r24
   1be18:	85 95       	asr	r24
   1be1a:	f8 01       	movw	r30, r16
   1be1c:	80 83       	st	Z, r24
   1be1e:	6a e1       	ldi	r22, 0x1A	; 26
   1be20:	ce 01       	movw	r24, r28
   1be22:	8e d6       	rcall	.+3356   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1be24:	90 e0       	ldi	r25, 0x00	; 0
   1be26:	9e 87       	std	Y+14, r25	; 0x0e
   1be28:	8d 87       	std	Y+13, r24	; 0x0d
   1be2a:	f8 01       	movw	r30, r16
   1be2c:	20 81       	ld	r18, Z
   1be2e:	27 ff       	sbrs	r18, 7
   1be30:	09 c0       	rjmp	.+18     	; 0x1be44 <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1be32:	8d 85       	ldd	r24, Y+13	; 0x0d
   1be34:	9e 85       	ldd	r25, Y+14	; 0x0e
   1be36:	82 0f       	add	r24, r18
   1be38:	91 1d       	adc	r25, r1
   1be3a:	27 fd       	sbrc	r18, 7
   1be3c:	9a 95       	dec	r25
   1be3e:	9e 87       	std	Y+14, r25	; 0x0e
   1be40:	8d 87       	std	Y+13, r24	; 0x0d
   1be42:	0d c0       	rjmp	.+26     	; 0x1be5e <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1be44:	8d 85       	ldd	r24, Y+13	; 0x0d
   1be46:	9e 85       	ldd	r25, Y+14	; 0x0e
   1be48:	24 e0       	ldi	r18, 0x04	; 4
   1be4a:	88 0f       	add	r24, r24
   1be4c:	99 1f       	adc	r25, r25
   1be4e:	2a 95       	dec	r18
   1be50:	e1 f7       	brne	.-8      	; 0x1be4a <_ZN7RH_RF9515handleInterruptEv+0xde>
   1be52:	6f e0       	ldi	r22, 0x0F	; 15
   1be54:	70 e0       	ldi	r23, 0x00	; 0
   1be56:	0e 94 a5 eb 	call	0x1d74a	; 0x1d74a <__divmodhi4>
   1be5a:	7e 87       	std	Y+14, r23	; 0x0e
   1be5c:	6d 87       	std	Y+13, r22	; 0x0d
   1be5e:	fe 01       	movw	r30, r28
   1be60:	ed 5b       	subi	r30, 0xBD	; 189
   1be62:	ff 4f       	sbci	r31, 0xFF	; 255
   1be64:	80 81       	ld	r24, Z
   1be66:	88 23       	and	r24, r24
   1be68:	29 f0       	breq	.+10     	; 0x1be74 <_ZN7RH_RF9515handleInterruptEv+0x108>
   1be6a:	8d 85       	ldd	r24, Y+13	; 0x0d
   1be6c:	9e 85       	ldd	r25, Y+14	; 0x0e
   1be6e:	8d 59       	subi	r24, 0x9D	; 157
   1be70:	91 09       	sbc	r25, r1
   1be72:	04 c0       	rjmp	.+8      	; 0x1be7c <_ZN7RH_RF9515handleInterruptEv+0x110>
   1be74:	8d 85       	ldd	r24, Y+13	; 0x0d
   1be76:	9e 85       	ldd	r25, Y+14	; 0x0e
   1be78:	84 5a       	subi	r24, 0xA4	; 164
   1be7a:	91 09       	sbc	r25, r1
   1be7c:	9e 87       	std	Y+14, r25	; 0x0e
   1be7e:	8d 87       	std	Y+13, r24	; 0x0d
   1be80:	ce 01       	movw	r24, r28
   1be82:	a6 de       	rcall	.-692    	; 0x1bbd0 <_ZN7RH_RF9513validateRxBufEv>
   1be84:	fe 01       	movw	r30, r28
   1be86:	ee 5b       	subi	r30, 0xBE	; 190
   1be88:	ff 4f       	sbci	r31, 0xFF	; 255
   1be8a:	80 81       	ld	r24, Z
   1be8c:	88 23       	and	r24, r24
   1be8e:	71 f0       	breq	.+28     	; 0x1beac <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be90:	07 c0       	rjmp	.+14     	; 0x1bea0 <_ZN7RH_RF9515handleInterruptEv+0x134>
   1be92:	8a 81       	ldd	r24, Y+2	; 0x02
   1be94:	85 30       	cpi	r24, 0x05	; 5
   1be96:	51 f4       	brne	.+20     	; 0x1beac <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be98:	12 ff       	sbrs	r17, 2
   1be9a:	08 c0       	rjmp	.+16     	; 0x1beac <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be9c:	11 70       	andi	r17, 0x01	; 1
   1be9e:	1d 8b       	std	Y+21, r17	; 0x15
   1bea0:	ce 01       	movw	r24, r28
   1bea2:	df 91       	pop	r29
   1bea4:	cf 91       	pop	r28
   1bea6:	1f 91       	pop	r17
   1bea8:	0f 91       	pop	r16
   1beaa:	46 cf       	rjmp	.-372    	; 0x1bd38 <_ZN7RH_RF9511setModeIdleEv>
   1beac:	df 91       	pop	r29
   1beae:	cf 91       	pop	r28
   1beb0:	1f 91       	pop	r17
   1beb2:	0f 91       	pop	r16
   1beb4:	08 95       	ret

0001beb6 <_ZN7RH_RF954isr0Ev>:
   1beb6:	80 91 51 18 	lds	r24, 0x1851	; 0x801851 <_ZN7RH_RF9519_deviceForInterruptE>
   1beba:	90 91 52 18 	lds	r25, 0x1852	; 0x801852 <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1bebe:	00 97       	sbiw	r24, 0x00	; 0
   1bec0:	09 f0       	breq	.+2      	; 0x1bec4 <_ZN7RH_RF954isr0Ev+0xe>
   1bec2:	54 cf       	rjmp	.-344    	; 0x1bd6c <_ZN7RH_RF9515handleInterruptEv>
   1bec4:	08 95       	ret

0001bec6 <_ZN7RH_RF954isr1Ev>:
   1bec6:	80 91 53 18 	lds	r24, 0x1853	; 0x801853 <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1beca:	90 91 54 18 	lds	r25, 0x1854	; 0x801854 <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1bece:	00 97       	sbiw	r24, 0x00	; 0
   1bed0:	09 f0       	breq	.+2      	; 0x1bed4 <_ZN7RH_RF954isr1Ev+0xe>
   1bed2:	4c cf       	rjmp	.-360    	; 0x1bd6c <_ZN7RH_RF9515handleInterruptEv>
   1bed4:	08 95       	ret

0001bed6 <_ZN7RH_RF954isr2Ev>:
   1bed6:	80 91 55 18 	lds	r24, 0x1855	; 0x801855 <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1beda:	90 91 56 18 	lds	r25, 0x1856	; 0x801856 <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1bede:	00 97       	sbiw	r24, 0x00	; 0
   1bee0:	09 f0       	breq	.+2      	; 0x1bee4 <_ZN7RH_RF954isr2Ev+0xe>
   1bee2:	44 cf       	rjmp	.-376    	; 0x1bd6c <_ZN7RH_RF9515handleInterruptEv>
   1bee4:	08 95       	ret

0001bee6 <_ZN7RH_RF959setModeRxEv>:
   1bee6:	cf 93       	push	r28
   1bee8:	df 93       	push	r29
   1beea:	fc 01       	movw	r30, r24
   1beec:	22 81       	ldd	r18, Z+2	; 0x02
   1beee:	24 30       	cpi	r18, 0x04	; 4
   1bef0:	a9 f0       	breq	.+42     	; 0x1bf1c <_ZN7RH_RF959setModeRxEv+0x36>
   1bef2:	ec 01       	movw	r28, r24
   1bef4:	01 90       	ld	r0, Z+
   1bef6:	f0 81       	ld	r31, Z
   1bef8:	e0 2d       	mov	r30, r0
   1befa:	e0 5c       	subi	r30, 0xC0	; 192
   1befc:	ff 4f       	sbci	r31, 0xFF	; 255
   1befe:	01 90       	ld	r0, Z+
   1bf00:	f0 81       	ld	r31, Z
   1bf02:	e0 2d       	mov	r30, r0
   1bf04:	64 e0       	ldi	r22, 0x04	; 4
   1bf06:	19 95       	eicall
   1bf08:	45 e0       	ldi	r20, 0x05	; 5
   1bf0a:	61 e0       	ldi	r22, 0x01	; 1
   1bf0c:	ce 01       	movw	r24, r28
   1bf0e:	5d d6       	rcall	.+3258   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bf10:	40 e0       	ldi	r20, 0x00	; 0
   1bf12:	60 e4       	ldi	r22, 0x40	; 64
   1bf14:	ce 01       	movw	r24, r28
   1bf16:	59 d6       	rcall	.+3250   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bf18:	84 e0       	ldi	r24, 0x04	; 4
   1bf1a:	8a 83       	std	Y+2, r24	; 0x02
   1bf1c:	df 91       	pop	r29
   1bf1e:	cf 91       	pop	r28
   1bf20:	08 95       	ret

0001bf22 <_ZN7RH_RF959availableEv>:
   1bf22:	cf 93       	push	r28
   1bf24:	df 93       	push	r29
   1bf26:	fc 01       	movw	r30, r24
   1bf28:	22 81       	ldd	r18, Z+2	; 0x02
   1bf2a:	23 30       	cpi	r18, 0x03	; 3
   1bf2c:	31 f0       	breq	.+12     	; 0x1bf3a <_ZN7RH_RF959availableEv+0x18>
   1bf2e:	ec 01       	movw	r28, r24
   1bf30:	da df       	rcall	.-76     	; 0x1bee6 <_ZN7RH_RF959setModeRxEv>
   1bf32:	ce 5b       	subi	r28, 0xBE	; 190
   1bf34:	df 4f       	sbci	r29, 0xFF	; 255
   1bf36:	88 81       	ld	r24, Y
   1bf38:	01 c0       	rjmp	.+2      	; 0x1bf3c <_ZN7RH_RF959availableEv+0x1a>
   1bf3a:	80 e0       	ldi	r24, 0x00	; 0
   1bf3c:	df 91       	pop	r29
   1bf3e:	cf 91       	pop	r28
   1bf40:	08 95       	ret

0001bf42 <_ZN7RH_RF959setModeTxEv>:
   1bf42:	cf 93       	push	r28
   1bf44:	df 93       	push	r29
   1bf46:	fc 01       	movw	r30, r24
   1bf48:	22 81       	ldd	r18, Z+2	; 0x02
   1bf4a:	23 30       	cpi	r18, 0x03	; 3
   1bf4c:	a9 f0       	breq	.+42     	; 0x1bf78 <_ZN7RH_RF959setModeTxEv+0x36>
   1bf4e:	ec 01       	movw	r28, r24
   1bf50:	01 90       	ld	r0, Z+
   1bf52:	f0 81       	ld	r31, Z
   1bf54:	e0 2d       	mov	r30, r0
   1bf56:	e0 5c       	subi	r30, 0xC0	; 192
   1bf58:	ff 4f       	sbci	r31, 0xFF	; 255
   1bf5a:	01 90       	ld	r0, Z+
   1bf5c:	f0 81       	ld	r31, Z
   1bf5e:	e0 2d       	mov	r30, r0
   1bf60:	63 e0       	ldi	r22, 0x03	; 3
   1bf62:	19 95       	eicall
   1bf64:	43 e0       	ldi	r20, 0x03	; 3
   1bf66:	61 e0       	ldi	r22, 0x01	; 1
   1bf68:	ce 01       	movw	r24, r28
   1bf6a:	2f d6       	rcall	.+3166   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bf6c:	40 e4       	ldi	r20, 0x40	; 64
   1bf6e:	60 e4       	ldi	r22, 0x40	; 64
   1bf70:	ce 01       	movw	r24, r28
   1bf72:	2b d6       	rcall	.+3158   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bf74:	83 e0       	ldi	r24, 0x03	; 3
   1bf76:	8a 83       	std	Y+2, r24	; 0x02
   1bf78:	df 91       	pop	r29
   1bf7a:	cf 91       	pop	r28
   1bf7c:	08 95       	ret

0001bf7e <_ZN7RH_RF954sendEPKhh>:
   1bf7e:	ef 92       	push	r14
   1bf80:	ff 92       	push	r15
   1bf82:	0f 93       	push	r16
   1bf84:	1f 93       	push	r17
   1bf86:	cf 93       	push	r28
   1bf88:	df 93       	push	r29
   1bf8a:	40 32       	cpi	r20, 0x20	; 32
   1bf8c:	10 f0       	brcs	.+4      	; 0x1bf92 <_ZN7RH_RF954sendEPKhh+0x14>
   1bf8e:	00 e0       	ldi	r16, 0x00	; 0
   1bf90:	35 c0       	rjmp	.+106    	; 0x1bffc <_ZN7RH_RF954sendEPKhh+0x7e>
   1bf92:	14 2f       	mov	r17, r20
   1bf94:	7b 01       	movw	r14, r22
   1bf96:	ec 01       	movw	r28, r24
   1bf98:	e8 81       	ld	r30, Y
   1bf9a:	f9 81       	ldd	r31, Y+1	; 0x01
   1bf9c:	00 88       	ldd	r0, Z+16	; 0x10
   1bf9e:	f1 89       	ldd	r31, Z+17	; 0x11
   1bfa0:	e0 2d       	mov	r30, r0
   1bfa2:	19 95       	eicall
   1bfa4:	ce 01       	movw	r24, r28
   1bfa6:	c8 de       	rcall	.-624    	; 0x1bd38 <_ZN7RH_RF9511setModeIdleEv>
   1bfa8:	e8 81       	ld	r30, Y
   1bfaa:	f9 81       	ldd	r31, Y+1	; 0x01
   1bfac:	06 88       	ldd	r0, Z+22	; 0x16
   1bfae:	f7 89       	ldd	r31, Z+23	; 0x17
   1bfb0:	e0 2d       	mov	r30, r0
   1bfb2:	ce 01       	movw	r24, r28
   1bfb4:	19 95       	eicall
   1bfb6:	08 2f       	mov	r16, r24
   1bfb8:	88 23       	and	r24, r24
   1bfba:	49 f3       	breq	.-46     	; 0x1bf8e <_ZN7RH_RF954sendEPKhh+0x10>
   1bfbc:	40 e0       	ldi	r20, 0x00	; 0
   1bfbe:	6d e0       	ldi	r22, 0x0D	; 13
   1bfc0:	ce 01       	movw	r24, r28
   1bfc2:	03 d6       	rcall	.+3078   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bfc4:	49 85       	ldd	r20, Y+9	; 0x09
   1bfc6:	60 e0       	ldi	r22, 0x00	; 0
   1bfc8:	ce 01       	movw	r24, r28
   1bfca:	ff d5       	rcall	.+3070   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bfcc:	4a 85       	ldd	r20, Y+10	; 0x0a
   1bfce:	60 e0       	ldi	r22, 0x00	; 0
   1bfd0:	ce 01       	movw	r24, r28
   1bfd2:	fb d5       	rcall	.+3062   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bfd4:	4b 85       	ldd	r20, Y+11	; 0x0b
   1bfd6:	60 e0       	ldi	r22, 0x00	; 0
   1bfd8:	ce 01       	movw	r24, r28
   1bfda:	f7 d5       	rcall	.+3054   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bfdc:	4c 85       	ldd	r20, Y+12	; 0x0c
   1bfde:	60 e0       	ldi	r22, 0x00	; 0
   1bfe0:	ce 01       	movw	r24, r28
   1bfe2:	f3 d5       	rcall	.+3046   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bfe4:	21 2f       	mov	r18, r17
   1bfe6:	a7 01       	movw	r20, r14
   1bfe8:	60 e0       	ldi	r22, 0x00	; 0
   1bfea:	ce 01       	movw	r24, r28
   1bfec:	91 d6       	rcall	.+3362   	; 0x1cd10 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1bfee:	44 e0       	ldi	r20, 0x04	; 4
   1bff0:	41 0f       	add	r20, r17
   1bff2:	62 e2       	ldi	r22, 0x22	; 34
   1bff4:	ce 01       	movw	r24, r28
   1bff6:	e9 d5       	rcall	.+3026   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1bff8:	ce 01       	movw	r24, r28
   1bffa:	a3 df       	rcall	.-186    	; 0x1bf42 <_ZN7RH_RF959setModeTxEv>
   1bffc:	80 2f       	mov	r24, r16
   1bffe:	df 91       	pop	r29
   1c000:	cf 91       	pop	r28
   1c002:	1f 91       	pop	r17
   1c004:	0f 91       	pop	r16
   1c006:	ff 90       	pop	r15
   1c008:	ef 90       	pop	r14
   1c00a:	08 95       	ret

0001c00c <_ZN7RH_RF9510setTxPowerEab>:
   1c00c:	cf 93       	push	r28
   1c00e:	df 93       	push	r29
   1c010:	ec 01       	movw	r28, r24
   1c012:	4b 8f       	std	Y+27, r20	; 0x1b
   1c014:	44 23       	and	r20, r20
   1c016:	91 f0       	breq	.+36     	; 0x1c03c <_ZN7RH_RF9510setTxPowerEab+0x30>
   1c018:	60 31       	cpi	r22, 0x10	; 16
   1c01a:	24 f4       	brge	.+8      	; 0x1c024 <_ZN7RH_RF9510setTxPowerEab+0x18>
   1c01c:	67 ff       	sbrs	r22, 7
   1c01e:	03 c0       	rjmp	.+6      	; 0x1c026 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1c020:	60 e0       	ldi	r22, 0x00	; 0
   1c022:	01 c0       	rjmp	.+2      	; 0x1c026 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1c024:	6f e0       	ldi	r22, 0x0F	; 15
   1c026:	46 2f       	mov	r20, r22
   1c028:	40 67       	ori	r20, 0x70	; 112
   1c02a:	69 e0       	ldi	r22, 0x09	; 9
   1c02c:	ce 01       	movw	r24, r28
   1c02e:	cd d5       	rcall	.+2970   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c030:	44 e0       	ldi	r20, 0x04	; 4
   1c032:	6d e4       	ldi	r22, 0x4D	; 77
   1c034:	ce 01       	movw	r24, r28
   1c036:	df 91       	pop	r29
   1c038:	cf 91       	pop	r28
   1c03a:	c7 c5       	rjmp	.+2958   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c03c:	df 91       	pop	r29
   1c03e:	cf 91       	pop	r28
   1c040:	6b cd       	rjmp	.-1322   	; 0x1bb18 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001c042 <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1c042:	0f 93       	push	r16
   1c044:	1f 93       	push	r17
   1c046:	cf 93       	push	r28
   1c048:	df 93       	push	r29
   1c04a:	ec 01       	movw	r28, r24
   1c04c:	8b 01       	movw	r16, r22
   1c04e:	fb 01       	movw	r30, r22
   1c050:	40 81       	ld	r20, Z
   1c052:	6d e1       	ldi	r22, 0x1D	; 29
   1c054:	ba d5       	rcall	.+2932   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c056:	f8 01       	movw	r30, r16
   1c058:	41 81       	ldd	r20, Z+1	; 0x01
   1c05a:	6e e1       	ldi	r22, 0x1E	; 30
   1c05c:	ce 01       	movw	r24, r28
   1c05e:	b5 d5       	rcall	.+2922   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c060:	f8 01       	movw	r30, r16
   1c062:	42 81       	ldd	r20, Z+2	; 0x02
   1c064:	66 e2       	ldi	r22, 0x26	; 38
   1c066:	ce 01       	movw	r24, r28
   1c068:	df 91       	pop	r29
   1c06a:	cf 91       	pop	r28
   1c06c:	1f 91       	pop	r17
   1c06e:	0f 91       	pop	r16
   1c070:	ac c5       	rjmp	.+2904   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>

0001c072 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1c072:	0f 93       	push	r16
   1c074:	1f 93       	push	r17
   1c076:	cf 93       	push	r28
   1c078:	df 93       	push	r29
   1c07a:	00 d0       	rcall	.+0      	; 0x1c07c <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1c07c:	cd b7       	in	r28, 0x3d	; 61
   1c07e:	de b7       	in	r29, 0x3e	; 62
   1c080:	70 e0       	ldi	r23, 0x00	; 0
   1c082:	66 30       	cpi	r22, 0x06	; 6
   1c084:	71 05       	cpc	r23, r1
   1c086:	ac f4       	brge	.+42     	; 0x1c0b2 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1c088:	8c 01       	movw	r16, r24
   1c08a:	cb 01       	movw	r24, r22
   1c08c:	88 0f       	add	r24, r24
   1c08e:	99 1f       	adc	r25, r25
   1c090:	68 0f       	add	r22, r24
   1c092:	79 1f       	adc	r23, r25
   1c094:	60 5a       	subi	r22, 0xA0	; 160
   1c096:	78 4b       	sbci	r23, 0xB8	; 184
   1c098:	43 e0       	ldi	r20, 0x03	; 3
   1c09a:	50 e0       	ldi	r21, 0x00	; 0
   1c09c:	ce 01       	movw	r24, r28
   1c09e:	01 96       	adiw	r24, 0x01	; 1
   1c0a0:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <memcpy_P>
   1c0a4:	be 01       	movw	r22, r28
   1c0a6:	6f 5f       	subi	r22, 0xFF	; 255
   1c0a8:	7f 4f       	sbci	r23, 0xFF	; 255
   1c0aa:	c8 01       	movw	r24, r16
   1c0ac:	ca df       	rcall	.-108    	; 0x1c042 <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1c0ae:	81 e0       	ldi	r24, 0x01	; 1
   1c0b0:	01 c0       	rjmp	.+2      	; 0x1c0b4 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1c0b2:	80 e0       	ldi	r24, 0x00	; 0
   1c0b4:	0f 90       	pop	r0
   1c0b6:	0f 90       	pop	r0
   1c0b8:	0f 90       	pop	r0
   1c0ba:	df 91       	pop	r29
   1c0bc:	cf 91       	pop	r28
   1c0be:	1f 91       	pop	r17
   1c0c0:	0f 91       	pop	r16
   1c0c2:	08 95       	ret

0001c0c4 <_ZN7RH_RF9517setPreambleLengthEj>:
   1c0c4:	1f 93       	push	r17
   1c0c6:	cf 93       	push	r28
   1c0c8:	df 93       	push	r29
   1c0ca:	ec 01       	movw	r28, r24
   1c0cc:	16 2f       	mov	r17, r22
   1c0ce:	47 2f       	mov	r20, r23
   1c0d0:	60 e2       	ldi	r22, 0x20	; 32
   1c0d2:	7b d5       	rcall	.+2806   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c0d4:	41 2f       	mov	r20, r17
   1c0d6:	61 e2       	ldi	r22, 0x21	; 33
   1c0d8:	ce 01       	movw	r24, r28
   1c0da:	df 91       	pop	r29
   1c0dc:	cf 91       	pop	r28
   1c0de:	1f 91       	pop	r17
   1c0e0:	74 c5       	rjmp	.+2792   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>

0001c0e2 <_ZN7RH_RF954initEv>:
   1c0e2:	ff 92       	push	r15
   1c0e4:	0f 93       	push	r16
   1c0e6:	1f 93       	push	r17
   1c0e8:	cf 93       	push	r28
   1c0ea:	df 93       	push	r29
   1c0ec:	ec 01       	movw	r28, r24
   1c0ee:	e4 d4       	rcall	.+2504   	; 0x1cab8 <_ZN11RHSPIDriver4initEv>
   1c0f0:	f8 2e       	mov	r15, r24
   1c0f2:	81 11       	cpse	r24, r1
   1c0f4:	02 c0       	rjmp	.+4      	; 0x1c0fa <_ZN7RH_RF954initEv+0x18>
   1c0f6:	f1 2c       	mov	r15, r1
   1c0f8:	79 c0       	rjmp	.+242    	; 0x1c1ec <_ZN7RH_RF954initEv+0x10a>
   1c0fa:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1c0fc:	8f 3f       	cpi	r24, 0xFF	; 255
   1c0fe:	79 f0       	breq	.+30     	; 0x1c11e <_ZN7RH_RF954initEv+0x3c>
   1c100:	82 30       	cpi	r24, 0x02	; 2
   1c102:	09 f4       	brne	.+2      	; 0x1c106 <_ZN7RH_RF954initEv+0x24>
   1c104:	6a c0       	rjmp	.+212    	; 0x1c1da <_ZN7RH_RF954initEv+0xf8>
   1c106:	83 30       	cpi	r24, 0x03	; 3
   1c108:	09 f4       	brne	.+2      	; 0x1c10c <_ZN7RH_RF954initEv+0x2a>
   1c10a:	6a c0       	rjmp	.+212    	; 0x1c1e0 <_ZN7RH_RF954initEv+0xfe>
   1c10c:	9e ee       	ldi	r25, 0xEE	; 238
   1c10e:	98 0f       	add	r25, r24
   1c110:	94 30       	cpi	r25, 0x04	; 4
   1c112:	88 f7       	brcc	.-30     	; 0x1c0f6 <_ZN7RH_RF954initEv+0x14>
   1c114:	07 e1       	ldi	r16, 0x17	; 23
   1c116:	10 e0       	ldi	r17, 0x00	; 0
   1c118:	08 1b       	sub	r16, r24
   1c11a:	11 09       	sbc	r17, r1
   1c11c:	63 c0       	rjmp	.+198    	; 0x1c1e4 <_ZN7RH_RF954initEv+0x102>
   1c11e:	0f ef       	ldi	r16, 0xFF	; 255
   1c120:	1f ef       	ldi	r17, 0xFF	; 255
   1c122:	40 e8       	ldi	r20, 0x80	; 128
   1c124:	61 e0       	ldi	r22, 0x01	; 1
   1c126:	ce 01       	movw	r24, r28
   1c128:	50 d5       	rcall	.+2720   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c12a:	6a e0       	ldi	r22, 0x0A	; 10
   1c12c:	70 e0       	ldi	r23, 0x00	; 0
   1c12e:	80 e0       	ldi	r24, 0x00	; 0
   1c130:	90 e0       	ldi	r25, 0x00	; 0
   1c132:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   1c136:	61 e0       	ldi	r22, 0x01	; 1
   1c138:	ce 01       	movw	r24, r28
   1c13a:	02 d5       	rcall	.+2564   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1c13c:	80 38       	cpi	r24, 0x80	; 128
   1c13e:	d9 f6       	brne	.-74     	; 0x1c0f6 <_ZN7RH_RF954initEv+0x14>
   1c140:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1c142:	8f 3f       	cpi	r24, 0xFF	; 255
   1c144:	71 f1       	breq	.+92     	; 0x1c1a2 <_ZN7RH_RF954initEv+0xc0>
   1c146:	60 e0       	ldi	r22, 0x00	; 0
   1c148:	40 d8       	rcall	.-3968   	; 0x1b1ca <pinMode>
   1c14a:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1c14c:	8f 3f       	cpi	r24, 0xFF	; 255
   1c14e:	49 f4       	brne	.+18     	; 0x1c162 <_ZN7RH_RF954initEv+0x80>
   1c150:	80 91 50 18 	lds	r24, 0x1850	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1c154:	84 30       	cpi	r24, 0x04	; 4
   1c156:	78 f6       	brcc	.-98     	; 0x1c0f6 <_ZN7RH_RF954initEv+0x14>
   1c158:	91 e0       	ldi	r25, 0x01	; 1
   1c15a:	98 0f       	add	r25, r24
   1c15c:	90 93 50 18 	sts	0x1850, r25	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1c160:	8d 8f       	std	Y+29, r24	; 0x1d
   1c162:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1c164:	e8 2f       	mov	r30, r24
   1c166:	f0 e0       	ldi	r31, 0x00	; 0
   1c168:	ee 0f       	add	r30, r30
   1c16a:	ff 1f       	adc	r31, r31
   1c16c:	ef 5a       	subi	r30, 0xAF	; 175
   1c16e:	f7 4e       	sbci	r31, 0xE7	; 231
   1c170:	d1 83       	std	Z+1, r29	; 0x01
   1c172:	c0 83       	st	Z, r28
   1c174:	81 11       	cpse	r24, r1
   1c176:	05 c0       	rjmp	.+10     	; 0x1c182 <_ZN7RH_RF954initEv+0xa0>
   1c178:	43 e0       	ldi	r20, 0x03	; 3
   1c17a:	50 e0       	ldi	r21, 0x00	; 0
   1c17c:	6b e5       	ldi	r22, 0x5B	; 91
   1c17e:	7f ed       	ldi	r23, 0xDF	; 223
   1c180:	0e c0       	rjmp	.+28     	; 0x1c19e <_ZN7RH_RF954initEv+0xbc>
   1c182:	81 30       	cpi	r24, 0x01	; 1
   1c184:	29 f4       	brne	.+10     	; 0x1c190 <_ZN7RH_RF954initEv+0xae>
   1c186:	43 e0       	ldi	r20, 0x03	; 3
   1c188:	50 e0       	ldi	r21, 0x00	; 0
   1c18a:	63 e6       	ldi	r22, 0x63	; 99
   1c18c:	7f ed       	ldi	r23, 0xDF	; 223
   1c18e:	07 c0       	rjmp	.+14     	; 0x1c19e <_ZN7RH_RF954initEv+0xbc>
   1c190:	82 30       	cpi	r24, 0x02	; 2
   1c192:	09 f0       	breq	.+2      	; 0x1c196 <_ZN7RH_RF954initEv+0xb4>
   1c194:	b0 cf       	rjmp	.-160    	; 0x1c0f6 <_ZN7RH_RF954initEv+0x14>
   1c196:	43 e0       	ldi	r20, 0x03	; 3
   1c198:	50 e0       	ldi	r21, 0x00	; 0
   1c19a:	6b e6       	ldi	r22, 0x6B	; 107
   1c19c:	7f ed       	ldi	r23, 0xDF	; 223
   1c19e:	80 2f       	mov	r24, r16
   1c1a0:	49 d2       	rcall	.+1170   	; 0x1c634 <attachInterrupt>
   1c1a2:	40 e0       	ldi	r20, 0x00	; 0
   1c1a4:	6e e0       	ldi	r22, 0x0E	; 14
   1c1a6:	ce 01       	movw	r24, r28
   1c1a8:	10 d5       	rcall	.+2592   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c1aa:	40 e0       	ldi	r20, 0x00	; 0
   1c1ac:	6f e0       	ldi	r22, 0x0F	; 15
   1c1ae:	ce 01       	movw	r24, r28
   1c1b0:	0c d5       	rcall	.+2584   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   1c1b2:	ce 01       	movw	r24, r28
   1c1b4:	c1 dd       	rcall	.-1150   	; 0x1bd38 <_ZN7RH_RF9511setModeIdleEv>
   1c1b6:	60 e0       	ldi	r22, 0x00	; 0
   1c1b8:	ce 01       	movw	r24, r28
   1c1ba:	5b df       	rcall	.-330    	; 0x1c072 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1c1bc:	68 e0       	ldi	r22, 0x08	; 8
   1c1be:	70 e0       	ldi	r23, 0x00	; 0
   1c1c0:	ce 01       	movw	r24, r28
   1c1c2:	80 df       	rcall	.-256    	; 0x1c0c4 <_ZN7RH_RF9517setPreambleLengthEj>
   1c1c4:	40 e0       	ldi	r20, 0x00	; 0
   1c1c6:	50 e0       	ldi	r21, 0x00	; 0
   1c1c8:	69 ed       	ldi	r22, 0xD9	; 217
   1c1ca:	73 e4       	ldi	r23, 0x43	; 67
   1c1cc:	ce 01       	movw	r24, r28
   1c1ce:	68 dd       	rcall	.-1328   	; 0x1bca0 <_ZN7RH_RF9512setFrequencyEf>
   1c1d0:	1b 8e       	std	Y+27, r1	; 0x1b
   1c1d2:	6d e0       	ldi	r22, 0x0D	; 13
   1c1d4:	ce 01       	movw	r24, r28
   1c1d6:	a0 dc       	rcall	.-1728   	; 0x1bb18 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1c1d8:	09 c0       	rjmp	.+18     	; 0x1c1ec <_ZN7RH_RF954initEv+0x10a>
   1c1da:	00 e0       	ldi	r16, 0x00	; 0
   1c1dc:	10 e0       	ldi	r17, 0x00	; 0
   1c1de:	02 c0       	rjmp	.+4      	; 0x1c1e4 <_ZN7RH_RF954initEv+0x102>
   1c1e0:	01 e0       	ldi	r16, 0x01	; 1
   1c1e2:	10 e0       	ldi	r17, 0x00	; 0
   1c1e4:	60 2f       	mov	r22, r16
   1c1e6:	ce 01       	movw	r24, r28
   1c1e8:	ed d5       	rcall	.+3034   	; 0x1cdc4 <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1c1ea:	9b cf       	rjmp	.-202    	; 0x1c122 <_ZN7RH_RF954initEv+0x40>
   1c1ec:	8f 2d       	mov	r24, r15
   1c1ee:	df 91       	pop	r29
   1c1f0:	cf 91       	pop	r28
   1c1f2:	1f 91       	pop	r17
   1c1f4:	0f 91       	pop	r16
   1c1f6:	ff 90       	pop	r15
   1c1f8:	08 95       	ret

0001c1fa <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1c1fa:	8f 92       	push	r8
   1c1fc:	9f 92       	push	r9
   1c1fe:	af 92       	push	r10
   1c200:	bf 92       	push	r11
   1c202:	ef 92       	push	r14
   1c204:	ff 92       	push	r15
   1c206:	1f 93       	push	r17
   1c208:	cf 93       	push	r28
   1c20a:	df 93       	push	r29
   1c20c:	cd b7       	in	r28, 0x3d	; 61
   1c20e:	de b7       	in	r29, 0x3e	; 62
   1c210:	a8 97       	sbiw	r28, 0x28	; 40
   1c212:	0f b6       	in	r0, 0x3f	; 63
   1c214:	f8 94       	cli
   1c216:	de bf       	out	0x3e, r29	; 62
   1c218:	0f be       	out	0x3f, r0	; 63
   1c21a:	cd bf       	out	0x3d, r28	; 61
   1c21c:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1c21e:	6d e1       	ldi	r22, 0x1D	; 29
   1c220:	8f d4       	rcall	.+2334   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1c222:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1c224:	6e e1       	ldi	r22, 0x1E	; 30
   1c226:	c7 01       	movw	r24, r14
   1c228:	8b d4       	rcall	.+2326   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1c22a:	98 e2       	ldi	r25, 0x28	; 40
   1c22c:	e7 ec       	ldi	r30, 0xC7	; 199
   1c22e:	f2 e0       	ldi	r31, 0x02	; 2
   1c230:	de 01       	movw	r26, r28
   1c232:	11 96       	adiw	r26, 0x01	; 1
   1c234:	01 90       	ld	r0, Z+
   1c236:	0d 92       	st	X+, r0
   1c238:	9a 95       	dec	r25
   1c23a:	e1 f7       	brne	.-8      	; 0x1c234 <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c23c:	68 2f       	mov	r22, r24
   1c23e:	70 e0       	ldi	r23, 0x00	; 0
   1c240:	84 e0       	ldi	r24, 0x04	; 4
   1c242:	75 95       	asr	r23
   1c244:	67 95       	ror	r22
   1c246:	8a 95       	dec	r24
   1c248:	e1 f7       	brne	.-8      	; 0x1c242 <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1c24a:	70 e0       	ldi	r23, 0x00	; 0
   1c24c:	80 e0       	ldi	r24, 0x00	; 0
   1c24e:	90 e0       	ldi	r25, 0x00	; 0
   1c250:	0e 94 24 d2 	call	0x1a448	; 0x1a448 <__floatunsisf>
   1c254:	9b 01       	movw	r18, r22
   1c256:	ac 01       	movw	r20, r24
   1c258:	60 e0       	ldi	r22, 0x00	; 0
   1c25a:	70 e0       	ldi	r23, 0x00	; 0
   1c25c:	80 e0       	ldi	r24, 0x00	; 0
   1c25e:	90 e4       	ldi	r25, 0x40	; 64
   1c260:	0e 94 b9 e9 	call	0x1d372	; 0x1d372 <pow>
   1c264:	20 e0       	ldi	r18, 0x00	; 0
   1c266:	30 e0       	ldi	r19, 0x00	; 0
   1c268:	4a e7       	ldi	r20, 0x7A	; 122
   1c26a:	54 e4       	ldi	r21, 0x44	; 68
   1c26c:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1c270:	e1 2f       	mov	r30, r17
   1c272:	f0 e0       	ldi	r31, 0x00	; 0
   1c274:	24 e0       	ldi	r18, 0x04	; 4
   1c276:	f5 95       	asr	r31
   1c278:	e7 95       	ror	r30
   1c27a:	2a 95       	dec	r18
   1c27c:	e1 f7       	brne	.-8      	; 0x1c276 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1c27e:	ee 0f       	add	r30, r30
   1c280:	ff 1f       	adc	r31, r31
   1c282:	ee 0f       	add	r30, r30
   1c284:	ff 1f       	adc	r31, r31
   1c286:	21 e0       	ldi	r18, 0x01	; 1
   1c288:	30 e0       	ldi	r19, 0x00	; 0
   1c28a:	2c 0f       	add	r18, r28
   1c28c:	3d 1f       	adc	r19, r29
   1c28e:	e2 0f       	add	r30, r18
   1c290:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c292:	20 81       	ld	r18, Z
   1c294:	31 81       	ldd	r19, Z+1	; 0x01
   1c296:	42 81       	ldd	r20, Z+2	; 0x02
   1c298:	53 81       	ldd	r21, Z+3	; 0x03
   1c29a:	0e 94 90 d1 	call	0x1a320	; 0x1a320 <__divsf3>
   1c29e:	4b 01       	movw	r8, r22
   1c2a0:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1c2a2:	66 e2       	ldi	r22, 0x26	; 38
   1c2a4:	c7 01       	movw	r24, r14
   1c2a6:	4c d4       	rcall	.+2200   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1c2a8:	18 2f       	mov	r17, r24
   1c2aa:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1c2ac:	20 e0       	ldi	r18, 0x00	; 0
   1c2ae:	30 e0       	ldi	r19, 0x00	; 0
   1c2b0:	40 e8       	ldi	r20, 0x80	; 128
   1c2b2:	51 e4       	ldi	r21, 0x41	; 65
   1c2b4:	c5 01       	movw	r24, r10
   1c2b6:	b4 01       	movw	r22, r8
   1c2b8:	0e 94 d6 d2 	call	0x1a5ac	; 0x1a5ac <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c2bc:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1c2be:	18 16       	cp	r1, r24
   1c2c0:	0c f4       	brge	.+2      	; 0x1c2c4 <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c2c2:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c2c4:	66 e2       	ldi	r22, 0x26	; 38
   1c2c6:	c7 01       	movw	r24, r14
   
}
   1c2c8:	a8 96       	adiw	r28, 0x28	; 40
   1c2ca:	0f b6       	in	r0, 0x3f	; 63
   1c2cc:	f8 94       	cli
   1c2ce:	de bf       	out	0x3e, r29	; 62
   1c2d0:	0f be       	out	0x3f, r0	; 63
   1c2d2:	cd bf       	out	0x3d, r28	; 61
   1c2d4:	df 91       	pop	r29
   1c2d6:	cf 91       	pop	r28
   1c2d8:	1f 91       	pop	r17
   1c2da:	ff 90       	pop	r15
   1c2dc:	ef 90       	pop	r14
   1c2de:	bf 90       	pop	r11
   1c2e0:	af 90       	pop	r10
   1c2e2:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c2e4:	8f 90       	pop	r8
   1c2e6:	71 c4       	rjmp	.+2274   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>

0001c2e8 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1c2e8:	0f 93       	push	r16
   1c2ea:	1f 93       	push	r17
   1c2ec:	cf 93       	push	r28
   1c2ee:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1c2f0:	67 30       	cpi	r22, 0x07	; 7
   1c2f2:	60 f0       	brcs	.+24     	; 0x1c30c <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1c2f4:	67 30       	cpi	r22, 0x07	; 7
   1c2f6:	61 f0       	breq	.+24     	; 0x1c310 <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1c2f8:	68 30       	cpi	r22, 0x08	; 8
   1c2fa:	61 f0       	breq	.+24     	; 0x1c314 <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1c2fc:	69 30       	cpi	r22, 0x09	; 9
   1c2fe:	61 f0       	breq	.+24     	; 0x1c318 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1c300:	6a 30       	cpi	r22, 0x0A	; 10
   1c302:	61 f0       	breq	.+24     	; 0x1c31c <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1c304:	6b 30       	cpi	r22, 0x0B	; 11
   1c306:	61 f4       	brne	.+24     	; 0x1c320 <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1c308:	c0 eb       	ldi	r28, 0xB0	; 176
   1c30a:	0b c0       	rjmp	.+22     	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1c30c:	c0 e6       	ldi	r28, 0x60	; 96
   1c30e:	09 c0       	rjmp	.+18     	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1c310:	c0 e7       	ldi	r28, 0x70	; 112
   1c312:	07 c0       	rjmp	.+14     	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1c314:	c0 e8       	ldi	r28, 0x80	; 128
   1c316:	05 c0       	rjmp	.+10     	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1c318:	c0 e9       	ldi	r28, 0x90	; 144
   1c31a:	03 c0       	rjmp	.+6      	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1c31c:	c0 ea       	ldi	r28, 0xA0	; 160
   1c31e:	01 c0       	rjmp	.+2      	; 0x1c322 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1c320:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1c322:	6e e1       	ldi	r22, 0x1E	; 30
   1c324:	c8 01       	movw	r24, r16
   1c326:	0c d4       	rcall	.+2072   	; 0x1cb40 <_ZN11RHSPIDriver7spiReadEh>
   1c328:	8f 70       	andi	r24, 0x0F	; 15
   1c32a:	48 2f       	mov	r20, r24
   1c32c:	4c 2b       	or	r20, r28
   1c32e:	6e e1       	ldi	r22, 0x1E	; 30
   1c330:	c8 01       	movw	r24, r16
   1c332:	4b d4       	rcall	.+2198   	; 0x1cbca <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c334:	c8 01       	movw	r24, r16
 }
   1c336:	cf 91       	pop	r28
   1c338:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c33a:	0f 91       	pop	r16
   1c33c:	5e cf       	rjmp	.-324    	; 0x1c1fa <_ZN7RH_RF9514setLowDatarateEv>

0001c33e <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1c33e:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1c340:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c342:	f8 94       	cli
  if (!initialized) {
   1c344:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c348:	81 11       	cpse	r24, r1
   1c34a:	27 c0       	rjmp	.+78     	; 0x1c39a <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1c34c:	e1 e0       	ldi	r30, 0x01	; 1
   1c34e:	f7 e4       	ldi	r31, 0x47	; 71
   1c350:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1c352:	eb eb       	ldi	r30, 0xBB	; 187
   1c354:	f6 e4       	ldi	r31, 0x46	; 70
   1c356:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1c358:	e8 2f       	mov	r30, r24
   1c35a:	f0 e0       	ldi	r31, 0x00	; 0
   1c35c:	ee 0f       	add	r30, r30
   1c35e:	ff 1f       	adc	r31, r31
   1c360:	ea 5b       	subi	r30, 0xBA	; 186
   1c362:	f8 4b       	sbci	r31, 0xB8	; 184
   1c364:	a5 91       	lpm	r26, Z+
   1c366:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1c368:	ec 91       	ld	r30, X
   1c36a:	e9 23       	and	r30, r25
   1c36c:	21 f4       	brne	.+8      	; 0x1c376 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1c36e:	61 e0       	ldi	r22, 0x01	; 1
   1c370:	85 e3       	ldi	r24, 0x35	; 53
   1c372:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1c376:	61 e0       	ldi	r22, 0x01	; 1
   1c378:	85 e3       	ldi	r24, 0x35	; 53
   1c37a:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1c37e:	8c b5       	in	r24, 0x2c	; 44
   1c380:	80 61       	ori	r24, 0x10	; 16
   1c382:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1c384:	8c b5       	in	r24, 0x2c	; 44
   1c386:	80 64       	ori	r24, 0x40	; 64
   1c388:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1c38a:	61 e0       	ldi	r22, 0x01	; 1
   1c38c:	84 e3       	ldi	r24, 0x34	; 52
   1c38e:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
    pinMode(MOSI, OUTPUT);
   1c392:	61 e0       	ldi	r22, 0x01	; 1
   1c394:	83 e3       	ldi	r24, 0x33	; 51
   1c396:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
  }
  initialized++; // reference count
   1c39a:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c39e:	8f 5f       	subi	r24, 0xFF	; 255
   1c3a0:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1c3a4:	cf bf       	out	0x3f, r28	; 63
}
   1c3a6:	cf 91       	pop	r28
   1c3a8:	08 95       	ret

0001c3aa <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1c3aa:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c3ac:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1c3ae:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c3b2:	88 23       	and	r24, r24
   1c3b4:	19 f0       	breq	.+6      	; 0x1c3bc <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1c3b6:	81 50       	subi	r24, 0x01	; 1
   1c3b8:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1c3bc:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c3c0:	81 11       	cpse	r24, r1
   1c3c2:	05 c0       	rjmp	.+10     	; 0x1c3ce <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1c3c4:	8c b5       	in	r24, 0x2c	; 44
   1c3c6:	8f 7b       	andi	r24, 0xBF	; 191
   1c3c8:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1c3ca:	10 92 59 18 	sts	0x1859, r1	; 0x801859 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1c3ce:	9f bf       	out	0x3f, r25	; 63
   1c3d0:	08 95       	ret

0001c3d2 <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1c3d2:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c3d4:	f8 94       	cli
  switch (interruptNumber) {
   1c3d6:	90 e0       	ldi	r25, 0x00	; 0
   1c3d8:	88 30       	cpi	r24, 0x08	; 8
   1c3da:	91 05       	cpc	r25, r1
   1c3dc:	a8 f4       	brcc	.+42     	; 0x1c408 <_ZN8SPIClass14usingInterruptEh+0x36>
   1c3de:	fc 01       	movw	r30, r24
   1c3e0:	88 27       	eor	r24, r24
   1c3e2:	e7 5f       	subi	r30, 0xF7	; 247
   1c3e4:	fe 4f       	sbci	r31, 0xFE	; 254
   1c3e6:	8f 4f       	sbci	r24, 0xFF	; 255
   1c3e8:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1c3ec:	80 e2       	ldi	r24, 0x20	; 32
   1c3ee:	12 c0       	rjmp	.+36     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1c3f0:	81 e0       	ldi	r24, 0x01	; 1
   1c3f2:	10 c0       	rjmp	.+32     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1c3f4:	82 e0       	ldi	r24, 0x02	; 2
   1c3f6:	0e c0       	rjmp	.+28     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1c3f8:	84 e0       	ldi	r24, 0x04	; 4
   1c3fa:	0c c0       	rjmp	.+24     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1c3fc:	88 e0       	ldi	r24, 0x08	; 8
   1c3fe:	0a c0       	rjmp	.+20     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1c400:	80 e4       	ldi	r24, 0x40	; 64
   1c402:	08 c0       	rjmp	.+16     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1c404:	80 e8       	ldi	r24, 0x80	; 128
   1c406:	06 c0       	rjmp	.+12     	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1c408:	82 e0       	ldi	r24, 0x02	; 2
   1c40a:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1c40e:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1c410:	01 c0       	rjmp	.+2      	; 0x1c414 <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1c412:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1c414:	90 91 58 18 	lds	r25, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1c418:	89 2b       	or	r24, r25
   1c41a:	80 93 58 18 	sts	0x1858, r24	; 0x801858 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1c41e:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1c422:	81 11       	cpse	r24, r1
   1c424:	03 c0       	rjmp	.+6      	; 0x1c42c <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1c426:	81 e0       	ldi	r24, 0x01	; 1
   1c428:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1c42c:	2f bf       	out	0x3f, r18	; 63
   1c42e:	08 95       	ret

0001c430 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1c430:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c434:	90 e0       	ldi	r25, 0x00	; 0
   1c436:	20 91 90 18 	lds	r18, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c43a:	82 1b       	sub	r24, r18
   1c43c:	91 09       	sbc	r25, r1
   1c43e:	08 95       	ret

0001c440 <_ZN7TwoWire4readEv>:
   1c440:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c444:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c448:	98 17       	cp	r25, r24
   1c44a:	50 f4       	brcc	.+20     	; 0x1c460 <_ZN7TwoWire4readEv+0x20>
   1c44c:	e9 2f       	mov	r30, r25
   1c44e:	f0 e0       	ldi	r31, 0x00	; 0
   1c450:	ef 56       	subi	r30, 0x6F	; 111
   1c452:	f7 4e       	sbci	r31, 0xE7	; 231
   1c454:	20 81       	ld	r18, Z
   1c456:	30 e0       	ldi	r19, 0x00	; 0
   1c458:	9f 5f       	subi	r25, 0xFF	; 255
   1c45a:	90 93 90 18 	sts	0x1890, r25	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c45e:	02 c0       	rjmp	.+4      	; 0x1c464 <_ZN7TwoWire4readEv+0x24>
   1c460:	2f ef       	ldi	r18, 0xFF	; 255
   1c462:	3f ef       	ldi	r19, 0xFF	; 255
   1c464:	c9 01       	movw	r24, r18
   1c466:	08 95       	ret

0001c468 <_ZN7TwoWire4peekEv>:
   1c468:	e0 91 90 18 	lds	r30, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c46c:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c470:	e8 17       	cp	r30, r24
   1c472:	30 f4       	brcc	.+12     	; 0x1c480 <_ZN7TwoWire4peekEv+0x18>
   1c474:	f0 e0       	ldi	r31, 0x00	; 0
   1c476:	ef 56       	subi	r30, 0x6F	; 111
   1c478:	f7 4e       	sbci	r31, 0xE7	; 231
   1c47a:	80 81       	ld	r24, Z
   1c47c:	90 e0       	ldi	r25, 0x00	; 0
   1c47e:	08 95       	ret
   1c480:	8f ef       	ldi	r24, 0xFF	; 255
   1c482:	9f ef       	ldi	r25, 0xFF	; 255
   1c484:	08 95       	ret

0001c486 <_ZN7TwoWire5flushEv>:
   1c486:	08 95       	ret

0001c488 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1c488:	cf 93       	push	r28
   1c48a:	df 93       	push	r29
   1c48c:	ec 01       	movw	r28, r24
   1c48e:	e0 91 67 18 	lds	r30, 0x1867	; 0x801867 <_ZN7TwoWire14user_onReceiveE>
   1c492:	f0 91 68 18 	lds	r31, 0x1868	; 0x801868 <_ZN7TwoWire14user_onReceiveE+0x1>
   1c496:	30 97       	sbiw	r30, 0x00	; 0
   1c498:	f1 f0       	breq	.+60     	; 0x1c4d6 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c49a:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c49e:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c4a2:	98 17       	cp	r25, r24
   1c4a4:	c0 f0       	brcs	.+48     	; 0x1c4d6 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c4a6:	90 e0       	ldi	r25, 0x00	; 0
   1c4a8:	29 2f       	mov	r18, r25
   1c4aa:	30 e0       	ldi	r19, 0x00	; 0
   1c4ac:	26 17       	cp	r18, r22
   1c4ae:	37 07       	cpc	r19, r23
   1c4b0:	54 f4       	brge	.+20     	; 0x1c4c6 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1c4b2:	de 01       	movw	r26, r28
   1c4b4:	a2 0f       	add	r26, r18
   1c4b6:	b3 1f       	adc	r27, r19
   1c4b8:	4c 91       	ld	r20, X
   1c4ba:	d9 01       	movw	r26, r18
   1c4bc:	af 56       	subi	r26, 0x6F	; 111
   1c4be:	b7 4e       	sbci	r27, 0xE7	; 231
   1c4c0:	4c 93       	st	X, r20
   1c4c2:	9f 5f       	subi	r25, 0xFF	; 255
   1c4c4:	f1 cf       	rjmp	.-30     	; 0x1c4a8 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1c4c6:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c4ca:	60 93 8f 18 	sts	0x188F, r22	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c4ce:	cb 01       	movw	r24, r22
   1c4d0:	df 91       	pop	r29
   1c4d2:	cf 91       	pop	r28
   1c4d4:	19 94       	eijmp
   1c4d6:	df 91       	pop	r29
   1c4d8:	cf 91       	pop	r28
   1c4da:	08 95       	ret

0001c4dc <_ZN7TwoWire16onRequestServiceEv>:
   1c4dc:	e0 91 69 18 	lds	r30, 0x1869	; 0x801869 <_ZN7TwoWire14user_onRequestE>
   1c4e0:	f0 91 6a 18 	lds	r31, 0x186A	; 0x80186a <_ZN7TwoWire14user_onRequestE+0x1>
   1c4e4:	30 97       	sbiw	r30, 0x00	; 0
   1c4e6:	29 f0       	breq	.+10     	; 0x1c4f2 <_ZN7TwoWire16onRequestServiceEv+0x16>
   1c4e8:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c4ec:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c4f0:	19 94       	eijmp
   1c4f2:	08 95       	ret

0001c4f4 <_ZN7TwoWire5writeEPKhj>:
   1c4f4:	cf 92       	push	r12
   1c4f6:	df 92       	push	r13
   1c4f8:	ef 92       	push	r14
   1c4fa:	ff 92       	push	r15
   1c4fc:	0f 93       	push	r16
   1c4fe:	1f 93       	push	r17
   1c500:	cf 93       	push	r28
   1c502:	df 93       	push	r29
   1c504:	7c 01       	movw	r14, r24
   1c506:	cb 01       	movw	r24, r22
   1c508:	8a 01       	movw	r16, r20
   1c50a:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c50e:	22 23       	and	r18, r18
   1c510:	89 f0       	breq	.+34     	; 0x1c534 <_ZN7TwoWire5writeEPKhj+0x40>
   1c512:	eb 01       	movw	r28, r22
   1c514:	6b 01       	movw	r12, r22
   1c516:	c4 0e       	add	r12, r20
   1c518:	d5 1e       	adc	r13, r21
   1c51a:	cc 15       	cp	r28, r12
   1c51c:	dd 05       	cpc	r29, r13
   1c51e:	61 f0       	breq	.+24     	; 0x1c538 <_ZN7TwoWire5writeEPKhj+0x44>
   1c520:	69 91       	ld	r22, Y+
   1c522:	d7 01       	movw	r26, r14
   1c524:	ed 91       	ld	r30, X+
   1c526:	fc 91       	ld	r31, X
   1c528:	01 90       	ld	r0, Z+
   1c52a:	f0 81       	ld	r31, Z
   1c52c:	e0 2d       	mov	r30, r0
   1c52e:	c7 01       	movw	r24, r14
   1c530:	19 95       	eicall
   1c532:	f3 cf       	rjmp	.-26     	; 0x1c51a <_ZN7TwoWire5writeEPKhj+0x26>
   1c534:	64 2f       	mov	r22, r20
   1c536:	7d d4       	rcall	.+2298   	; 0x1ce32 <twi_transmit>
   1c538:	c8 01       	movw	r24, r16
   1c53a:	df 91       	pop	r29
   1c53c:	cf 91       	pop	r28
   1c53e:	1f 91       	pop	r17
   1c540:	0f 91       	pop	r16
   1c542:	ff 90       	pop	r15
   1c544:	ef 90       	pop	r14
   1c546:	df 90       	pop	r13
   1c548:	cf 90       	pop	r12
   1c54a:	08 95       	ret

0001c54c <_ZN7TwoWire5writeEh>:
   1c54c:	cf 93       	push	r28
   1c54e:	df 93       	push	r29
   1c550:	1f 92       	push	r1
   1c552:	cd b7       	in	r28, 0x3d	; 61
   1c554:	de b7       	in	r29, 0x3e	; 62
   1c556:	69 83       	std	Y+1, r22	; 0x01
   1c558:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c55c:	22 23       	and	r18, r18
   1c55e:	d1 f0       	breq	.+52     	; 0x1c594 <_ZN7TwoWire5writeEh+0x48>
   1c560:	20 91 6c 18 	lds	r18, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c564:	20 32       	cpi	r18, 0x20	; 32
   1c566:	40 f0       	brcs	.+16     	; 0x1c578 <_ZN7TwoWire5writeEh+0x2c>
   1c568:	21 e0       	ldi	r18, 0x01	; 1
   1c56a:	30 e0       	ldi	r19, 0x00	; 0
   1c56c:	fc 01       	movw	r30, r24
   1c56e:	33 83       	std	Z+3, r19	; 0x03
   1c570:	22 83       	std	Z+2, r18	; 0x02
   1c572:	80 e0       	ldi	r24, 0x00	; 0
   1c574:	90 e0       	ldi	r25, 0x00	; 0
   1c576:	14 c0       	rjmp	.+40     	; 0x1c5a0 <_ZN7TwoWire5writeEh+0x54>
   1c578:	80 91 6d 18 	lds	r24, 0x186D	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c57c:	e8 2f       	mov	r30, r24
   1c57e:	f0 e0       	ldi	r31, 0x00	; 0
   1c580:	e2 59       	subi	r30, 0x92	; 146
   1c582:	f7 4e       	sbci	r31, 0xE7	; 231
   1c584:	99 81       	ldd	r25, Y+1	; 0x01
   1c586:	90 83       	st	Z, r25
   1c588:	8f 5f       	subi	r24, 0xFF	; 255
   1c58a:	80 93 6d 18 	sts	0x186D, r24	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c58e:	80 93 6c 18 	sts	0x186C, r24	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c592:	04 c0       	rjmp	.+8      	; 0x1c59c <_ZN7TwoWire5writeEh+0x50>
   1c594:	61 e0       	ldi	r22, 0x01	; 1
   1c596:	ce 01       	movw	r24, r28
   1c598:	01 96       	adiw	r24, 0x01	; 1
   1c59a:	4b d4       	rcall	.+2198   	; 0x1ce32 <twi_transmit>
   1c59c:	81 e0       	ldi	r24, 0x01	; 1
   1c59e:	90 e0       	ldi	r25, 0x00	; 0
   1c5a0:	0f 90       	pop	r0
   1c5a2:	df 91       	pop	r29
   1c5a4:	cf 91       	pop	r28
   1c5a6:	08 95       	ret

0001c5a8 <_ZN7TwoWireC1Ev>:
   1c5a8:	fc 01       	movw	r30, r24
   1c5aa:	13 82       	std	Z+3, r1	; 0x03
   1c5ac:	12 82       	std	Z+2, r1	; 0x02
   1c5ae:	88 ee       	ldi	r24, 0xE8	; 232
   1c5b0:	93 e0       	ldi	r25, 0x03	; 3
   1c5b2:	a0 e0       	ldi	r26, 0x00	; 0
   1c5b4:	b0 e0       	ldi	r27, 0x00	; 0
   1c5b6:	84 83       	std	Z+4, r24	; 0x04
   1c5b8:	95 83       	std	Z+5, r25	; 0x05
   1c5ba:	a6 83       	std	Z+6, r26	; 0x06
   1c5bc:	b7 83       	std	Z+7, r27	; 0x07
   1c5be:	89 ea       	ldi	r24, 0xA9	; 169
   1c5c0:	98 e0       	ldi	r25, 0x08	; 8
   1c5c2:	91 83       	std	Z+1, r25	; 0x01
   1c5c4:	80 83       	st	Z, r24
   1c5c6:	08 95       	ret

0001c5c8 <_ZN7TwoWire5beginEv>:
   1c5c8:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c5cc:	10 92 8f 18 	sts	0x188F, r1	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c5d0:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c5d4:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c5d8:	01 d4       	rcall	.+2050   	; 0x1cddc <twi_init>
   1c5da:	8e e6       	ldi	r24, 0x6E	; 110
   1c5dc:	92 ee       	ldi	r25, 0xE2	; 226
   1c5de:	56 d4       	rcall	.+2220   	; 0x1ce8c <twi_attachSlaveTxEvent>
   1c5e0:	84 e4       	ldi	r24, 0x44	; 68
   1c5e2:	92 ee       	ldi	r25, 0xE2	; 226
   1c5e4:	4e c4       	rjmp	.+2204   	; 0x1ce82 <twi_attachSlaveRxEvent>

0001c5e6 <_ZN7TwoWire17beginTransmissionEh>:
   1c5e6:	81 e0       	ldi	r24, 0x01	; 1
   1c5e8:	80 93 6b 18 	sts	0x186B, r24	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c5ec:	60 93 8e 18 	sts	0x188E, r22	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c5f0:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c5f4:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c5f8:	08 95       	ret

0001c5fa <_ZN7TwoWire15endTransmissionEh>:
   1c5fa:	0f 93       	push	r16
   1c5fc:	06 2f       	mov	r16, r22
   1c5fe:	21 e0       	ldi	r18, 0x01	; 1
   1c600:	40 91 6c 18 	lds	r20, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c604:	6e e6       	ldi	r22, 0x6E	; 110
   1c606:	78 e1       	ldi	r23, 0x18	; 24
   1c608:	80 91 8e 18 	lds	r24, 0x188E	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c60c:	5e d4       	rcall	.+2236   	; 0x1ceca <twi_writeTo>
   1c60e:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c612:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c616:	10 92 6b 18 	sts	0x186B, r1	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c61a:	0f 91       	pop	r16
   1c61c:	08 95       	ret

0001c61e <_ZN7TwoWire15endTransmissionEv>:
   1c61e:	61 e0       	ldi	r22, 0x01	; 1
   1c620:	ec cf       	rjmp	.-40     	; 0x1c5fa <_ZN7TwoWire15endTransmissionEh>

0001c622 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1c622:	8b e5       	ldi	r24, 0x5B	; 91
   1c624:	98 e1       	ldi	r25, 0x18	; 24
   1c626:	c0 cf       	rjmp	.-128    	; 0x1c5a8 <_ZN7TwoWireC1Ev>

0001c628 <__cxa_pure_virtual>:
   1c628:	0e 94 e0 ed 	call	0x1dbc0	; 0x1dbc0 <abort>

0001c62c <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
   1c62c:	08 95       	ret

0001c62e <_ZdlPv>:
   1c62e:	0c 94 bb ec 	jmp	0x1d976	; 0x1d976 <free>

0001c632 <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1c632:	08 95       	ret

0001c634 <attachInterrupt>:
   1c634:	88 30       	cpi	r24, 0x08	; 8
   1c636:	08 f0       	brcs	.+2      	; 0x1c63a <attachInterrupt+0x6>
   1c638:	70 c0       	rjmp	.+224    	; 0x1c71a <attachInterrupt+0xe6>
   1c63a:	a8 2f       	mov	r26, r24
   1c63c:	b0 e0       	ldi	r27, 0x00	; 0
   1c63e:	aa 0f       	add	r26, r26
   1c640:	bb 1f       	adc	r27, r27
   1c642:	ae 5a       	subi	r26, 0xAE	; 174
   1c644:	bd 4f       	sbci	r27, 0xFD	; 253
   1c646:	11 96       	adiw	r26, 0x01	; 1
   1c648:	7c 93       	st	X, r23
   1c64a:	6e 93       	st	-X, r22
   1c64c:	90 e0       	ldi	r25, 0x00	; 0
   1c64e:	fc 01       	movw	r30, r24
   1c650:	31 97       	sbiw	r30, 0x01	; 1
   1c652:	e7 30       	cpi	r30, 0x07	; 7
   1c654:	f1 05       	cpc	r31, r1
   1c656:	a0 f5       	brcc	.+104    	; 0x1c6c0 <attachInterrupt+0x8c>
   1c658:	88 27       	eor	r24, r24
   1c65a:	ef 5e       	subi	r30, 0xEF	; 239
   1c65c:	fe 4f       	sbci	r31, 0xFE	; 254
   1c65e:	8f 4f       	sbci	r24, 0xFF	; 255
   1c660:	0c 94 f6 eb 	jmp	0x1d7ec	; 0x1d7ec <__tablejump2__>
   1c664:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c668:	8c 7f       	andi	r24, 0xFC	; 252
   1c66a:	48 2b       	or	r20, r24
   1c66c:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c670:	e8 9a       	sbi	0x1d, 0	; 29
   1c672:	08 95       	ret
   1c674:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c678:	83 7f       	andi	r24, 0xF3	; 243
   1c67a:	44 0f       	add	r20, r20
   1c67c:	55 1f       	adc	r21, r21
   1c67e:	44 0f       	add	r20, r20
   1c680:	55 1f       	adc	r21, r21
   1c682:	48 2b       	or	r20, r24
   1c684:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c688:	e9 9a       	sbi	0x1d, 1	; 29
   1c68a:	08 95       	ret
   1c68c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c690:	8f 7c       	andi	r24, 0xCF	; 207
   1c692:	74 e0       	ldi	r23, 0x04	; 4
   1c694:	44 0f       	add	r20, r20
   1c696:	55 1f       	adc	r21, r21
   1c698:	7a 95       	dec	r23
   1c69a:	e1 f7       	brne	.-8      	; 0x1c694 <attachInterrupt+0x60>
   1c69c:	48 2b       	or	r20, r24
   1c69e:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c6a2:	ea 9a       	sbi	0x1d, 2	; 29
   1c6a4:	08 95       	ret
   1c6a6:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c6aa:	8f 73       	andi	r24, 0x3F	; 63
   1c6ac:	66 e0       	ldi	r22, 0x06	; 6
   1c6ae:	44 0f       	add	r20, r20
   1c6b0:	55 1f       	adc	r21, r21
   1c6b2:	6a 95       	dec	r22
   1c6b4:	e1 f7       	brne	.-8      	; 0x1c6ae <attachInterrupt+0x7a>
   1c6b6:	48 2b       	or	r20, r24
   1c6b8:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c6bc:	eb 9a       	sbi	0x1d, 3	; 29
   1c6be:	08 95       	ret
   1c6c0:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6c4:	8c 7f       	andi	r24, 0xFC	; 252
   1c6c6:	48 2b       	or	r20, r24
   1c6c8:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6cc:	ec 9a       	sbi	0x1d, 4	; 29
   1c6ce:	08 95       	ret
   1c6d0:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6d4:	83 7f       	andi	r24, 0xF3	; 243
   1c6d6:	44 0f       	add	r20, r20
   1c6d8:	55 1f       	adc	r21, r21
   1c6da:	44 0f       	add	r20, r20
   1c6dc:	55 1f       	adc	r21, r21
   1c6de:	48 2b       	or	r20, r24
   1c6e0:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6e4:	ed 9a       	sbi	0x1d, 5	; 29
   1c6e6:	08 95       	ret
   1c6e8:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6ec:	8f 7c       	andi	r24, 0xCF	; 207
   1c6ee:	24 e0       	ldi	r18, 0x04	; 4
   1c6f0:	44 0f       	add	r20, r20
   1c6f2:	55 1f       	adc	r21, r21
   1c6f4:	2a 95       	dec	r18
   1c6f6:	e1 f7       	brne	.-8      	; 0x1c6f0 <attachInterrupt+0xbc>
   1c6f8:	48 2b       	or	r20, r24
   1c6fa:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6fe:	ee 9a       	sbi	0x1d, 6	; 29
   1c700:	08 95       	ret
   1c702:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c706:	8f 73       	andi	r24, 0x3F	; 63
   1c708:	96 e0       	ldi	r25, 0x06	; 6
   1c70a:	44 0f       	add	r20, r20
   1c70c:	55 1f       	adc	r21, r21
   1c70e:	9a 95       	dec	r25
   1c710:	e1 f7       	brne	.-8      	; 0x1c70a <attachInterrupt+0xd6>
   1c712:	48 2b       	or	r20, r24
   1c714:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c718:	ef 9a       	sbi	0x1d, 7	; 29
   1c71a:	08 95       	ret

0001c71c <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1c71c:	1f 92       	push	r1
   1c71e:	0f 92       	push	r0
   1c720:	0f b6       	in	r0, 0x3f	; 63
   1c722:	0f 92       	push	r0
   1c724:	11 24       	eor	r1, r1
   1c726:	0b b6       	in	r0, 0x3b	; 59
   1c728:	0f 92       	push	r0
   1c72a:	2f 93       	push	r18
   1c72c:	3f 93       	push	r19
   1c72e:	4f 93       	push	r20
   1c730:	5f 93       	push	r21
   1c732:	6f 93       	push	r22
   1c734:	7f 93       	push	r23
   1c736:	8f 93       	push	r24
   1c738:	9f 93       	push	r25
   1c73a:	af 93       	push	r26
   1c73c:	bf 93       	push	r27
   1c73e:	ef 93       	push	r30
   1c740:	ff 93       	push	r31
   1c742:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1c746:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1c74a:	19 95       	eicall
   1c74c:	ff 91       	pop	r31
   1c74e:	ef 91       	pop	r30
   1c750:	bf 91       	pop	r27
   1c752:	af 91       	pop	r26
   1c754:	9f 91       	pop	r25
   1c756:	8f 91       	pop	r24
   1c758:	7f 91       	pop	r23
   1c75a:	6f 91       	pop	r22
   1c75c:	5f 91       	pop	r21
   1c75e:	4f 91       	pop	r20
   1c760:	3f 91       	pop	r19
   1c762:	2f 91       	pop	r18
   1c764:	0f 90       	pop	r0
   1c766:	0b be       	out	0x3b, r0	; 59
   1c768:	0f 90       	pop	r0
   1c76a:	0f be       	out	0x3f, r0	; 63
   1c76c:	0f 90       	pop	r0
   1c76e:	1f 90       	pop	r1
   1c770:	18 95       	reti

0001c772 <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1c772:	1f 92       	push	r1
   1c774:	0f 92       	push	r0
   1c776:	0f b6       	in	r0, 0x3f	; 63
   1c778:	0f 92       	push	r0
   1c77a:	11 24       	eor	r1, r1
   1c77c:	0b b6       	in	r0, 0x3b	; 59
   1c77e:	0f 92       	push	r0
   1c780:	2f 93       	push	r18
   1c782:	3f 93       	push	r19
   1c784:	4f 93       	push	r20
   1c786:	5f 93       	push	r21
   1c788:	6f 93       	push	r22
   1c78a:	7f 93       	push	r23
   1c78c:	8f 93       	push	r24
   1c78e:	9f 93       	push	r25
   1c790:	af 93       	push	r26
   1c792:	bf 93       	push	r27
   1c794:	ef 93       	push	r30
   1c796:	ff 93       	push	r31
   1c798:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1c79c:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1c7a0:	19 95       	eicall
   1c7a2:	ff 91       	pop	r31
   1c7a4:	ef 91       	pop	r30
   1c7a6:	bf 91       	pop	r27
   1c7a8:	af 91       	pop	r26
   1c7aa:	9f 91       	pop	r25
   1c7ac:	8f 91       	pop	r24
   1c7ae:	7f 91       	pop	r23
   1c7b0:	6f 91       	pop	r22
   1c7b2:	5f 91       	pop	r21
   1c7b4:	4f 91       	pop	r20
   1c7b6:	3f 91       	pop	r19
   1c7b8:	2f 91       	pop	r18
   1c7ba:	0f 90       	pop	r0
   1c7bc:	0b be       	out	0x3b, r0	; 59
   1c7be:	0f 90       	pop	r0
   1c7c0:	0f be       	out	0x3f, r0	; 63
   1c7c2:	0f 90       	pop	r0
   1c7c4:	1f 90       	pop	r1
   1c7c6:	18 95       	reti

0001c7c8 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1c7c8:	1f 92       	push	r1
   1c7ca:	0f 92       	push	r0
   1c7cc:	0f b6       	in	r0, 0x3f	; 63
   1c7ce:	0f 92       	push	r0
   1c7d0:	11 24       	eor	r1, r1
   1c7d2:	0b b6       	in	r0, 0x3b	; 59
   1c7d4:	0f 92       	push	r0
   1c7d6:	2f 93       	push	r18
   1c7d8:	3f 93       	push	r19
   1c7da:	4f 93       	push	r20
   1c7dc:	5f 93       	push	r21
   1c7de:	6f 93       	push	r22
   1c7e0:	7f 93       	push	r23
   1c7e2:	8f 93       	push	r24
   1c7e4:	9f 93       	push	r25
   1c7e6:	af 93       	push	r26
   1c7e8:	bf 93       	push	r27
   1c7ea:	ef 93       	push	r30
   1c7ec:	ff 93       	push	r31
   1c7ee:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1c7f2:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1c7f6:	19 95       	eicall
   1c7f8:	ff 91       	pop	r31
   1c7fa:	ef 91       	pop	r30
   1c7fc:	bf 91       	pop	r27
   1c7fe:	af 91       	pop	r26
   1c800:	9f 91       	pop	r25
   1c802:	8f 91       	pop	r24
   1c804:	7f 91       	pop	r23
   1c806:	6f 91       	pop	r22
   1c808:	5f 91       	pop	r21
   1c80a:	4f 91       	pop	r20
   1c80c:	3f 91       	pop	r19
   1c80e:	2f 91       	pop	r18
   1c810:	0f 90       	pop	r0
   1c812:	0b be       	out	0x3b, r0	; 59
   1c814:	0f 90       	pop	r0
   1c816:	0f be       	out	0x3f, r0	; 63
   1c818:	0f 90       	pop	r0
   1c81a:	1f 90       	pop	r1
   1c81c:	18 95       	reti

0001c81e <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1c81e:	1f 92       	push	r1
   1c820:	0f 92       	push	r0
   1c822:	0f b6       	in	r0, 0x3f	; 63
   1c824:	0f 92       	push	r0
   1c826:	11 24       	eor	r1, r1
   1c828:	0b b6       	in	r0, 0x3b	; 59
   1c82a:	0f 92       	push	r0
   1c82c:	2f 93       	push	r18
   1c82e:	3f 93       	push	r19
   1c830:	4f 93       	push	r20
   1c832:	5f 93       	push	r21
   1c834:	6f 93       	push	r22
   1c836:	7f 93       	push	r23
   1c838:	8f 93       	push	r24
   1c83a:	9f 93       	push	r25
   1c83c:	af 93       	push	r26
   1c83e:	bf 93       	push	r27
   1c840:	ef 93       	push	r30
   1c842:	ff 93       	push	r31
   1c844:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1c848:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1c84c:	19 95       	eicall
   1c84e:	ff 91       	pop	r31
   1c850:	ef 91       	pop	r30
   1c852:	bf 91       	pop	r27
   1c854:	af 91       	pop	r26
   1c856:	9f 91       	pop	r25
   1c858:	8f 91       	pop	r24
   1c85a:	7f 91       	pop	r23
   1c85c:	6f 91       	pop	r22
   1c85e:	5f 91       	pop	r21
   1c860:	4f 91       	pop	r20
   1c862:	3f 91       	pop	r19
   1c864:	2f 91       	pop	r18
   1c866:	0f 90       	pop	r0
   1c868:	0b be       	out	0x3b, r0	; 59
   1c86a:	0f 90       	pop	r0
   1c86c:	0f be       	out	0x3f, r0	; 63
   1c86e:	0f 90       	pop	r0
   1c870:	1f 90       	pop	r1
   1c872:	18 95       	reti

0001c874 <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1c874:	1f 92       	push	r1
   1c876:	0f 92       	push	r0
   1c878:	0f b6       	in	r0, 0x3f	; 63
   1c87a:	0f 92       	push	r0
   1c87c:	11 24       	eor	r1, r1
   1c87e:	0b b6       	in	r0, 0x3b	; 59
   1c880:	0f 92       	push	r0
   1c882:	2f 93       	push	r18
   1c884:	3f 93       	push	r19
   1c886:	4f 93       	push	r20
   1c888:	5f 93       	push	r21
   1c88a:	6f 93       	push	r22
   1c88c:	7f 93       	push	r23
   1c88e:	8f 93       	push	r24
   1c890:	9f 93       	push	r25
   1c892:	af 93       	push	r26
   1c894:	bf 93       	push	r27
   1c896:	ef 93       	push	r30
   1c898:	ff 93       	push	r31
   1c89a:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1c89e:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1c8a2:	19 95       	eicall
   1c8a4:	ff 91       	pop	r31
   1c8a6:	ef 91       	pop	r30
   1c8a8:	bf 91       	pop	r27
   1c8aa:	af 91       	pop	r26
   1c8ac:	9f 91       	pop	r25
   1c8ae:	8f 91       	pop	r24
   1c8b0:	7f 91       	pop	r23
   1c8b2:	6f 91       	pop	r22
   1c8b4:	5f 91       	pop	r21
   1c8b6:	4f 91       	pop	r20
   1c8b8:	3f 91       	pop	r19
   1c8ba:	2f 91       	pop	r18
   1c8bc:	0f 90       	pop	r0
   1c8be:	0b be       	out	0x3b, r0	; 59
   1c8c0:	0f 90       	pop	r0
   1c8c2:	0f be       	out	0x3f, r0	; 63
   1c8c4:	0f 90       	pop	r0
   1c8c6:	1f 90       	pop	r1
   1c8c8:	18 95       	reti

0001c8ca <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1c8ca:	1f 92       	push	r1
   1c8cc:	0f 92       	push	r0
   1c8ce:	0f b6       	in	r0, 0x3f	; 63
   1c8d0:	0f 92       	push	r0
   1c8d2:	11 24       	eor	r1, r1
   1c8d4:	0b b6       	in	r0, 0x3b	; 59
   1c8d6:	0f 92       	push	r0
   1c8d8:	2f 93       	push	r18
   1c8da:	3f 93       	push	r19
   1c8dc:	4f 93       	push	r20
   1c8de:	5f 93       	push	r21
   1c8e0:	6f 93       	push	r22
   1c8e2:	7f 93       	push	r23
   1c8e4:	8f 93       	push	r24
   1c8e6:	9f 93       	push	r25
   1c8e8:	af 93       	push	r26
   1c8ea:	bf 93       	push	r27
   1c8ec:	ef 93       	push	r30
   1c8ee:	ff 93       	push	r31
   1c8f0:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c8f4:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c8f8:	19 95       	eicall
   1c8fa:	ff 91       	pop	r31
   1c8fc:	ef 91       	pop	r30
   1c8fe:	bf 91       	pop	r27
   1c900:	af 91       	pop	r26
   1c902:	9f 91       	pop	r25
   1c904:	8f 91       	pop	r24
   1c906:	7f 91       	pop	r23
   1c908:	6f 91       	pop	r22
   1c90a:	5f 91       	pop	r21
   1c90c:	4f 91       	pop	r20
   1c90e:	3f 91       	pop	r19
   1c910:	2f 91       	pop	r18
   1c912:	0f 90       	pop	r0
   1c914:	0b be       	out	0x3b, r0	; 59
   1c916:	0f 90       	pop	r0
   1c918:	0f be       	out	0x3f, r0	; 63
   1c91a:	0f 90       	pop	r0
   1c91c:	1f 90       	pop	r1
   1c91e:	18 95       	reti

0001c920 <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c920:	1f 92       	push	r1
   1c922:	0f 92       	push	r0
   1c924:	0f b6       	in	r0, 0x3f	; 63
   1c926:	0f 92       	push	r0
   1c928:	11 24       	eor	r1, r1
   1c92a:	0b b6       	in	r0, 0x3b	; 59
   1c92c:	0f 92       	push	r0
   1c92e:	2f 93       	push	r18
   1c930:	3f 93       	push	r19
   1c932:	4f 93       	push	r20
   1c934:	5f 93       	push	r21
   1c936:	6f 93       	push	r22
   1c938:	7f 93       	push	r23
   1c93a:	8f 93       	push	r24
   1c93c:	9f 93       	push	r25
   1c93e:	af 93       	push	r26
   1c940:	bf 93       	push	r27
   1c942:	ef 93       	push	r30
   1c944:	ff 93       	push	r31
   1c946:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c94a:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c94e:	19 95       	eicall
   1c950:	ff 91       	pop	r31
   1c952:	ef 91       	pop	r30
   1c954:	bf 91       	pop	r27
   1c956:	af 91       	pop	r26
   1c958:	9f 91       	pop	r25
   1c95a:	8f 91       	pop	r24
   1c95c:	7f 91       	pop	r23
   1c95e:	6f 91       	pop	r22
   1c960:	5f 91       	pop	r21
   1c962:	4f 91       	pop	r20
   1c964:	3f 91       	pop	r19
   1c966:	2f 91       	pop	r18
   1c968:	0f 90       	pop	r0
   1c96a:	0b be       	out	0x3b, r0	; 59
   1c96c:	0f 90       	pop	r0
   1c96e:	0f be       	out	0x3f, r0	; 63
   1c970:	0f 90       	pop	r0
   1c972:	1f 90       	pop	r1
   1c974:	18 95       	reti

0001c976 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c976:	1f 92       	push	r1
   1c978:	0f 92       	push	r0
   1c97a:	0f b6       	in	r0, 0x3f	; 63
   1c97c:	0f 92       	push	r0
   1c97e:	11 24       	eor	r1, r1
   1c980:	0b b6       	in	r0, 0x3b	; 59
   1c982:	0f 92       	push	r0
   1c984:	2f 93       	push	r18
   1c986:	3f 93       	push	r19
   1c988:	4f 93       	push	r20
   1c98a:	5f 93       	push	r21
   1c98c:	6f 93       	push	r22
   1c98e:	7f 93       	push	r23
   1c990:	8f 93       	push	r24
   1c992:	9f 93       	push	r25
   1c994:	af 93       	push	r26
   1c996:	bf 93       	push	r27
   1c998:	ef 93       	push	r30
   1c99a:	ff 93       	push	r31
   1c99c:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c9a0:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c9a4:	19 95       	eicall
   1c9a6:	ff 91       	pop	r31
   1c9a8:	ef 91       	pop	r30
   1c9aa:	bf 91       	pop	r27
   1c9ac:	af 91       	pop	r26
   1c9ae:	9f 91       	pop	r25
   1c9b0:	8f 91       	pop	r24
   1c9b2:	7f 91       	pop	r23
   1c9b4:	6f 91       	pop	r22
   1c9b6:	5f 91       	pop	r21
   1c9b8:	4f 91       	pop	r20
   1c9ba:	3f 91       	pop	r19
   1c9bc:	2f 91       	pop	r18
   1c9be:	0f 90       	pop	r0
   1c9c0:	0b be       	out	0x3b, r0	; 59
   1c9c2:	0f 90       	pop	r0
   1c9c4:	0f be       	out	0x3f, r0	; 63
   1c9c6:	0f 90       	pop	r0
   1c9c8:	1f 90       	pop	r1
   1c9ca:	18 95       	reti

0001c9cc <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c9cc:	86 33       	cpi	r24, 0x36	; 54
   1c9ce:	08 f0       	brcs	.+2      	; 0x1c9d2 <analogRead+0x6>
   1c9d0:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c9d2:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c9d6:	28 2f       	mov	r18, r24
   1c9d8:	28 70       	andi	r18, 0x08	; 8
   1c9da:	97 7f       	andi	r25, 0xF7	; 247
   1c9dc:	92 2b       	or	r25, r18
   1c9de:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c9e2:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c9e6:	90 e4       	ldi	r25, 0x40	; 64
   1c9e8:	29 9f       	mul	r18, r25
   1c9ea:	90 01       	movw	r18, r0
   1c9ec:	11 24       	eor	r1, r1
   1c9ee:	87 70       	andi	r24, 0x07	; 7
   1c9f0:	82 2b       	or	r24, r18
   1c9f2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c9f6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c9fa:	80 64       	ori	r24, 0x40	; 64
   1c9fc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1ca00:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1ca04:	86 fd       	sbrc	r24, 6
   1ca06:	fc cf       	rjmp	.-8      	; 0x1ca00 <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1ca08:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1ca0c:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1ca10:	90 e0       	ldi	r25, 0x00	; 0
}
   1ca12:	92 2b       	or	r25, r18
   1ca14:	08 95       	ret

0001ca16 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1ca16:	cf 92       	push	r12
   1ca18:	df 92       	push	r13
   1ca1a:	ef 92       	push	r14
   1ca1c:	ff 92       	push	r15
  if (howbig == 0) {
   1ca1e:	61 15       	cp	r22, r1
   1ca20:	71 05       	cpc	r23, r1
   1ca22:	81 05       	cpc	r24, r1
   1ca24:	91 05       	cpc	r25, r1
   1ca26:	41 f0       	breq	.+16     	; 0x1ca38 <_Z6randoml+0x22>
   1ca28:	6b 01       	movw	r12, r22
   1ca2a:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1ca2c:	0e 94 8c ed 	call	0x1db18	; 0x1db18 <random>
   1ca30:	a7 01       	movw	r20, r14
   1ca32:	96 01       	movw	r18, r12
   1ca34:	bf d6       	rcall	.+3454   	; 0x1d7b4 <__divmodsi4>
   1ca36:	03 c0       	rjmp	.+6      	; 0x1ca3e <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1ca38:	60 e0       	ldi	r22, 0x00	; 0
   1ca3a:	70 e0       	ldi	r23, 0x00	; 0
   1ca3c:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1ca3e:	ff 90       	pop	r15
   1ca40:	ef 90       	pop	r14
   1ca42:	df 90       	pop	r13
   1ca44:	cf 90       	pop	r12
   1ca46:	08 95       	ret

0001ca48 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1ca48:	cf 92       	push	r12
   1ca4a:	df 92       	push	r13
   1ca4c:	ef 92       	push	r14
   1ca4e:	ff 92       	push	r15
   1ca50:	0f 93       	push	r16
   1ca52:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1ca54:	62 17       	cp	r22, r18
   1ca56:	73 07       	cpc	r23, r19
   1ca58:	84 07       	cpc	r24, r20
   1ca5a:	95 07       	cpc	r25, r21
   1ca5c:	7c f4       	brge	.+30     	; 0x1ca7c <_Z6randomll+0x34>
   1ca5e:	89 01       	movw	r16, r18
   1ca60:	9a 01       	movw	r18, r20
   1ca62:	6b 01       	movw	r12, r22
   1ca64:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1ca66:	c9 01       	movw	r24, r18
   1ca68:	b8 01       	movw	r22, r16
   1ca6a:	6c 19       	sub	r22, r12
   1ca6c:	7d 09       	sbc	r23, r13
   1ca6e:	8e 09       	sbc	r24, r14
   1ca70:	9f 09       	sbc	r25, r15
   1ca72:	d1 df       	rcall	.-94     	; 0x1ca16 <_Z6randoml>
   1ca74:	6c 0d       	add	r22, r12
   1ca76:	7d 1d       	adc	r23, r13
   1ca78:	8e 1d       	adc	r24, r14
   1ca7a:	9f 1d       	adc	r25, r15
}
   1ca7c:	1f 91       	pop	r17
   1ca7e:	0f 91       	pop	r16
   1ca80:	ff 90       	pop	r15
   1ca82:	ef 90       	pop	r14
   1ca84:	df 90       	pop	r13
   1ca86:	cf 90       	pop	r12
   1ca88:	08 95       	ret

0001ca8a <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1ca8a:	08 95       	ret

0001ca8c <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1ca8c:	08 95       	ret

0001ca8e <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1ca8e:	08 95       	ret

0001ca90 <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1ca90:	08 95       	ret

0001ca92 <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1ca92:	08 95       	ret

0001ca94 <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1ca94:	fc 01       	movw	r30, r24
   1ca96:	63 83       	std	Z+3, r22	; 0x03
   1ca98:	08 95       	ret

0001ca9a <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1ca9a:	fc 01       	movw	r30, r24
   1ca9c:	64 83       	std	Z+4, r22	; 0x04
   1ca9e:	08 95       	ret

0001caa0 <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1caa0:	fc 01       	movw	r30, r24
   1caa2:	62 83       	std	Z+2, r22	; 0x02
   1caa4:	08 95       	ret

0001caa6 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1caa6:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1caa8:	8b eb       	ldi	r24, 0xBB	; 187
   1caaa:	98 e0       	ldi	r25, 0x08	; 8
   1caac:	91 83       	std	Z+1, r25	; 0x01
   1caae:	80 83       	st	Z, r24
   1cab0:	62 83       	std	Z+2, r22	; 0x02
   1cab2:	43 83       	std	Z+3, r20	; 0x03
   1cab4:	24 83       	std	Z+4, r18	; 0x04
   1cab6:	08 95       	ret

0001cab8 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1cab8:	cf 93       	push	r28
   1caba:	df 93       	push	r29
   1cabc:	ec 01       	movw	r28, r24
   1cabe:	88 8d       	ldd	r24, Y+24	; 0x18
   1cac0:	99 8d       	ldd	r25, Y+25	; 0x19
   1cac2:	dc 01       	movw	r26, r24
   1cac4:	ed 91       	ld	r30, X+
   1cac6:	fc 91       	ld	r31, X
   1cac8:	06 80       	ldd	r0, Z+6	; 0x06
   1caca:	f7 81       	ldd	r31, Z+7	; 0x07
   1cacc:	e0 2d       	mov	r30, r0
   1cace:	19 95       	eicall
   1cad0:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1cad2:	8f 3f       	cpi	r24, 0xFF	; 255
   1cad4:	19 f0       	breq	.+6      	; 0x1cadc <_ZN11RHSPIDriver4initEv+0x24>
   1cad6:	61 e0       	ldi	r22, 0x01	; 1
   1cad8:	0e 94 e5 d8 	call	0x1b1ca	; 0x1b1ca <pinMode>
   1cadc:	e8 81       	ld	r30, Y
   1cade:	f9 81       	ldd	r31, Y+1	; 0x01
   1cae0:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cae2:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cae4:	e0 2d       	mov	r30, r0
   1cae6:	ce 01       	movw	r24, r28
   1cae8:	19 95       	eicall
   1caea:	64 e6       	ldi	r22, 0x64	; 100
   1caec:	70 e0       	ldi	r23, 0x00	; 0
   1caee:	80 e0       	ldi	r24, 0x00	; 0
   1caf0:	90 e0       	ldi	r25, 0x00	; 0
   1caf2:	0e 94 e8 d7 	call	0x1afd0	; 0x1afd0 <delay>
   1caf6:	81 e0       	ldi	r24, 0x01	; 1
   1caf8:	df 91       	pop	r29
   1cafa:	cf 91       	pop	r28
   1cafc:	08 95       	ret

0001cafe <_ZN11RHSPIDriver11selectSlaveEv>:
   1cafe:	60 e0       	ldi	r22, 0x00	; 0
   1cb00:	fc 01       	movw	r30, r24
   1cb02:	82 8d       	ldd	r24, Z+26	; 0x1a
   1cb04:	0c 94 21 d9 	jmp	0x1b242	; 0x1b242 <digitalWrite>

0001cb08 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1cb08:	61 e0       	ldi	r22, 0x01	; 1
   1cb0a:	fc 01       	movw	r30, r24
   1cb0c:	82 8d       	ldd	r24, Z+26	; 0x1a
   1cb0e:	0c 94 21 d9 	jmp	0x1b242	; 0x1b242 <digitalWrite>

0001cb12 <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1cb12:	ef 92       	push	r14
   1cb14:	ff 92       	push	r15
   1cb16:	1f 93       	push	r17
   1cb18:	cf 93       	push	r28
   1cb1a:	df 93       	push	r29
   1cb1c:	ec 01       	movw	r28, r24
   1cb1e:	16 2f       	mov	r17, r22
   1cb20:	7a 01       	movw	r14, r20
   1cb22:	0e 94 9f dc 	call	0x1b93e	; 0x1b93e <_ZN15RHGenericDriverC1Ev>
   1cb26:	85 ed       	ldi	r24, 0xD5	; 213
   1cb28:	98 e0       	ldi	r25, 0x08	; 8
   1cb2a:	99 83       	std	Y+1, r25	; 0x01
   1cb2c:	88 83       	st	Y, r24
   1cb2e:	f9 8e       	std	Y+25, r15	; 0x19
   1cb30:	e8 8e       	std	Y+24, r14	; 0x18
   1cb32:	1a 8f       	std	Y+26, r17	; 0x1a
   1cb34:	df 91       	pop	r29
   1cb36:	cf 91       	pop	r28
   1cb38:	1f 91       	pop	r17
   1cb3a:	ff 90       	pop	r15
   1cb3c:	ef 90       	pop	r14
   1cb3e:	08 95       	ret

0001cb40 <_ZN11RHSPIDriver7spiReadEh>:
   1cb40:	0f 93       	push	r16
   1cb42:	1f 93       	push	r17
   1cb44:	cf 93       	push	r28
   1cb46:	df 93       	push	r29
   1cb48:	ec 01       	movw	r28, r24
   1cb4a:	16 2f       	mov	r17, r22
   1cb4c:	0f b7       	in	r16, 0x3f	; 63
   1cb4e:	f8 94       	cli
   1cb50:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb52:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb54:	dc 01       	movw	r26, r24
   1cb56:	ed 91       	ld	r30, X+
   1cb58:	fc 91       	ld	r31, X
   1cb5a:	00 88       	ldd	r0, Z+16	; 0x10
   1cb5c:	f1 89       	ldd	r31, Z+17	; 0x11
   1cb5e:	e0 2d       	mov	r30, r0
   1cb60:	19 95       	eicall
   1cb62:	e8 81       	ld	r30, Y
   1cb64:	f9 81       	ldd	r31, Y+1	; 0x01
   1cb66:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cb68:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cb6a:	e0 2d       	mov	r30, r0
   1cb6c:	ce 01       	movw	r24, r28
   1cb6e:	19 95       	eicall
   1cb70:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb72:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb74:	61 2f       	mov	r22, r17
   1cb76:	6f 77       	andi	r22, 0x7F	; 127
   1cb78:	dc 01       	movw	r26, r24
   1cb7a:	ed 91       	ld	r30, X+
   1cb7c:	fc 91       	ld	r31, X
   1cb7e:	01 90       	ld	r0, Z+
   1cb80:	f0 81       	ld	r31, Z
   1cb82:	e0 2d       	mov	r30, r0
   1cb84:	19 95       	eicall
   1cb86:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb88:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb8a:	dc 01       	movw	r26, r24
   1cb8c:	ed 91       	ld	r30, X+
   1cb8e:	fc 91       	ld	r31, X
   1cb90:	01 90       	ld	r0, Z+
   1cb92:	f0 81       	ld	r31, Z
   1cb94:	e0 2d       	mov	r30, r0
   1cb96:	60 e0       	ldi	r22, 0x00	; 0
   1cb98:	19 95       	eicall
   1cb9a:	18 2f       	mov	r17, r24
   1cb9c:	e8 81       	ld	r30, Y
   1cb9e:	f9 81       	ldd	r31, Y+1	; 0x01
   1cba0:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cba2:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cba4:	e0 2d       	mov	r30, r0
   1cba6:	ce 01       	movw	r24, r28
   1cba8:	19 95       	eicall
   1cbaa:	88 8d       	ldd	r24, Y+24	; 0x18
   1cbac:	99 8d       	ldd	r25, Y+25	; 0x19
   1cbae:	dc 01       	movw	r26, r24
   1cbb0:	ed 91       	ld	r30, X+
   1cbb2:	fc 91       	ld	r31, X
   1cbb4:	02 88       	ldd	r0, Z+18	; 0x12
   1cbb6:	f3 89       	ldd	r31, Z+19	; 0x13
   1cbb8:	e0 2d       	mov	r30, r0
   1cbba:	19 95       	eicall
   1cbbc:	0f bf       	out	0x3f, r16	; 63
   1cbbe:	81 2f       	mov	r24, r17
   1cbc0:	df 91       	pop	r29
   1cbc2:	cf 91       	pop	r28
   1cbc4:	1f 91       	pop	r17
   1cbc6:	0f 91       	pop	r16
   1cbc8:	08 95       	ret

0001cbca <_ZN11RHSPIDriver8spiWriteEhh>:
   1cbca:	ff 92       	push	r15
   1cbcc:	0f 93       	push	r16
   1cbce:	1f 93       	push	r17
   1cbd0:	cf 93       	push	r28
   1cbd2:	df 93       	push	r29
   1cbd4:	ec 01       	movw	r28, r24
   1cbd6:	16 2f       	mov	r17, r22
   1cbd8:	f4 2e       	mov	r15, r20
   1cbda:	0f b7       	in	r16, 0x3f	; 63
   1cbdc:	f8 94       	cli
   1cbde:	88 8d       	ldd	r24, Y+24	; 0x18
   1cbe0:	99 8d       	ldd	r25, Y+25	; 0x19
   1cbe2:	dc 01       	movw	r26, r24
   1cbe4:	ed 91       	ld	r30, X+
   1cbe6:	fc 91       	ld	r31, X
   1cbe8:	00 88       	ldd	r0, Z+16	; 0x10
   1cbea:	f1 89       	ldd	r31, Z+17	; 0x11
   1cbec:	e0 2d       	mov	r30, r0
   1cbee:	19 95       	eicall
   1cbf0:	e8 81       	ld	r30, Y
   1cbf2:	f9 81       	ldd	r31, Y+1	; 0x01
   1cbf4:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cbf6:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cbf8:	e0 2d       	mov	r30, r0
   1cbfa:	ce 01       	movw	r24, r28
   1cbfc:	19 95       	eicall
   1cbfe:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc00:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc02:	61 2f       	mov	r22, r17
   1cc04:	60 68       	ori	r22, 0x80	; 128
   1cc06:	dc 01       	movw	r26, r24
   1cc08:	ed 91       	ld	r30, X+
   1cc0a:	fc 91       	ld	r31, X
   1cc0c:	01 90       	ld	r0, Z+
   1cc0e:	f0 81       	ld	r31, Z
   1cc10:	e0 2d       	mov	r30, r0
   1cc12:	19 95       	eicall
   1cc14:	18 2f       	mov	r17, r24
   1cc16:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc18:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc1a:	dc 01       	movw	r26, r24
   1cc1c:	ed 91       	ld	r30, X+
   1cc1e:	fc 91       	ld	r31, X
   1cc20:	01 90       	ld	r0, Z+
   1cc22:	f0 81       	ld	r31, Z
   1cc24:	e0 2d       	mov	r30, r0
   1cc26:	6f 2d       	mov	r22, r15
   1cc28:	19 95       	eicall
   1cc2a:	e8 81       	ld	r30, Y
   1cc2c:	f9 81       	ldd	r31, Y+1	; 0x01
   1cc2e:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cc30:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cc32:	e0 2d       	mov	r30, r0
   1cc34:	ce 01       	movw	r24, r28
   1cc36:	19 95       	eicall
   1cc38:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc3a:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc3c:	dc 01       	movw	r26, r24
   1cc3e:	ed 91       	ld	r30, X+
   1cc40:	fc 91       	ld	r31, X
   1cc42:	02 88       	ldd	r0, Z+18	; 0x12
   1cc44:	f3 89       	ldd	r31, Z+19	; 0x13
   1cc46:	e0 2d       	mov	r30, r0
   1cc48:	19 95       	eicall
   1cc4a:	0f bf       	out	0x3f, r16	; 63
   1cc4c:	81 2f       	mov	r24, r17
   1cc4e:	df 91       	pop	r29
   1cc50:	cf 91       	pop	r28
   1cc52:	1f 91       	pop	r17
   1cc54:	0f 91       	pop	r16
   1cc56:	ff 90       	pop	r15
   1cc58:	08 95       	ret

0001cc5a <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1cc5a:	bf 92       	push	r11
   1cc5c:	cf 92       	push	r12
   1cc5e:	df 92       	push	r13
   1cc60:	ef 92       	push	r14
   1cc62:	ff 92       	push	r15
   1cc64:	0f 93       	push	r16
   1cc66:	1f 93       	push	r17
   1cc68:	cf 93       	push	r28
   1cc6a:	df 93       	push	r29
   1cc6c:	ec 01       	movw	r28, r24
   1cc6e:	06 2f       	mov	r16, r22
   1cc70:	b4 2e       	mov	r11, r20
   1cc72:	c5 2e       	mov	r12, r21
   1cc74:	12 2f       	mov	r17, r18
   1cc76:	df b6       	in	r13, 0x3f	; 63
   1cc78:	f8 94       	cli
   1cc7a:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc7c:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc7e:	dc 01       	movw	r26, r24
   1cc80:	ed 91       	ld	r30, X+
   1cc82:	fc 91       	ld	r31, X
   1cc84:	00 88       	ldd	r0, Z+16	; 0x10
   1cc86:	f1 89       	ldd	r31, Z+17	; 0x11
   1cc88:	e0 2d       	mov	r30, r0
   1cc8a:	19 95       	eicall
   1cc8c:	e8 81       	ld	r30, Y
   1cc8e:	f9 81       	ldd	r31, Y+1	; 0x01
   1cc90:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cc92:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cc94:	e0 2d       	mov	r30, r0
   1cc96:	ce 01       	movw	r24, r28
   1cc98:	19 95       	eicall
   1cc9a:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc9c:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc9e:	60 2f       	mov	r22, r16
   1cca0:	6f 77       	andi	r22, 0x7F	; 127
   1cca2:	dc 01       	movw	r26, r24
   1cca4:	ed 91       	ld	r30, X+
   1cca6:	fc 91       	ld	r31, X
   1cca8:	01 90       	ld	r0, Z+
   1ccaa:	f0 81       	ld	r31, Z
   1ccac:	e0 2d       	mov	r30, r0
   1ccae:	19 95       	eicall
   1ccb0:	08 2f       	mov	r16, r24
   1ccb2:	eb 2c       	mov	r14, r11
   1ccb4:	fc 2c       	mov	r15, r12
   1ccb6:	11 23       	and	r17, r17
   1ccb8:	79 f0       	breq	.+30     	; 0x1ccd8 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1ccba:	88 8d       	ldd	r24, Y+24	; 0x18
   1ccbc:	99 8d       	ldd	r25, Y+25	; 0x19
   1ccbe:	dc 01       	movw	r26, r24
   1ccc0:	ed 91       	ld	r30, X+
   1ccc2:	fc 91       	ld	r31, X
   1ccc4:	01 90       	ld	r0, Z+
   1ccc6:	f0 81       	ld	r31, Z
   1ccc8:	e0 2d       	mov	r30, r0
   1ccca:	60 e0       	ldi	r22, 0x00	; 0
   1cccc:	19 95       	eicall
   1ccce:	f7 01       	movw	r30, r14
   1ccd0:	81 93       	st	Z+, r24
   1ccd2:	7f 01       	movw	r14, r30
   1ccd4:	11 50       	subi	r17, 0x01	; 1
   1ccd6:	ef cf       	rjmp	.-34     	; 0x1ccb6 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1ccd8:	e8 81       	ld	r30, Y
   1ccda:	f9 81       	ldd	r31, Y+1	; 0x01
   1ccdc:	06 ac       	ldd	r0, Z+62	; 0x3e
   1ccde:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cce0:	e0 2d       	mov	r30, r0
   1cce2:	ce 01       	movw	r24, r28
   1cce4:	19 95       	eicall
   1cce6:	88 8d       	ldd	r24, Y+24	; 0x18
   1cce8:	99 8d       	ldd	r25, Y+25	; 0x19
   1ccea:	dc 01       	movw	r26, r24
   1ccec:	ed 91       	ld	r30, X+
   1ccee:	fc 91       	ld	r31, X
   1ccf0:	02 88       	ldd	r0, Z+18	; 0x12
   1ccf2:	f3 89       	ldd	r31, Z+19	; 0x13
   1ccf4:	e0 2d       	mov	r30, r0
   1ccf6:	19 95       	eicall
   1ccf8:	df be       	out	0x3f, r13	; 63
   1ccfa:	80 2f       	mov	r24, r16
   1ccfc:	df 91       	pop	r29
   1ccfe:	cf 91       	pop	r28
   1cd00:	1f 91       	pop	r17
   1cd02:	0f 91       	pop	r16
   1cd04:	ff 90       	pop	r15
   1cd06:	ef 90       	pop	r14
   1cd08:	df 90       	pop	r13
   1cd0a:	cf 90       	pop	r12
   1cd0c:	bf 90       	pop	r11
   1cd0e:	08 95       	ret

0001cd10 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1cd10:	bf 92       	push	r11
   1cd12:	cf 92       	push	r12
   1cd14:	df 92       	push	r13
   1cd16:	ef 92       	push	r14
   1cd18:	ff 92       	push	r15
   1cd1a:	0f 93       	push	r16
   1cd1c:	1f 93       	push	r17
   1cd1e:	cf 93       	push	r28
   1cd20:	df 93       	push	r29
   1cd22:	ec 01       	movw	r28, r24
   1cd24:	06 2f       	mov	r16, r22
   1cd26:	b4 2e       	mov	r11, r20
   1cd28:	c5 2e       	mov	r12, r21
   1cd2a:	12 2f       	mov	r17, r18
   1cd2c:	df b6       	in	r13, 0x3f	; 63
   1cd2e:	f8 94       	cli
   1cd30:	88 8d       	ldd	r24, Y+24	; 0x18
   1cd32:	99 8d       	ldd	r25, Y+25	; 0x19
   1cd34:	dc 01       	movw	r26, r24
   1cd36:	ed 91       	ld	r30, X+
   1cd38:	fc 91       	ld	r31, X
   1cd3a:	00 88       	ldd	r0, Z+16	; 0x10
   1cd3c:	f1 89       	ldd	r31, Z+17	; 0x11
   1cd3e:	e0 2d       	mov	r30, r0
   1cd40:	19 95       	eicall
   1cd42:	e8 81       	ld	r30, Y
   1cd44:	f9 81       	ldd	r31, Y+1	; 0x01
   1cd46:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cd48:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cd4a:	e0 2d       	mov	r30, r0
   1cd4c:	ce 01       	movw	r24, r28
   1cd4e:	19 95       	eicall
   1cd50:	88 8d       	ldd	r24, Y+24	; 0x18
   1cd52:	99 8d       	ldd	r25, Y+25	; 0x19
   1cd54:	60 2f       	mov	r22, r16
   1cd56:	60 68       	ori	r22, 0x80	; 128
   1cd58:	dc 01       	movw	r26, r24
   1cd5a:	ed 91       	ld	r30, X+
   1cd5c:	fc 91       	ld	r31, X
   1cd5e:	01 90       	ld	r0, Z+
   1cd60:	f0 81       	ld	r31, Z
   1cd62:	e0 2d       	mov	r30, r0
   1cd64:	19 95       	eicall
   1cd66:	08 2f       	mov	r16, r24
   1cd68:	eb 2c       	mov	r14, r11
   1cd6a:	fc 2c       	mov	r15, r12
   1cd6c:	11 23       	and	r17, r17
   1cd6e:	71 f0       	breq	.+28     	; 0x1cd8c <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1cd70:	88 8d       	ldd	r24, Y+24	; 0x18
   1cd72:	99 8d       	ldd	r25, Y+25	; 0x19
   1cd74:	f7 01       	movw	r30, r14
   1cd76:	61 91       	ld	r22, Z+
   1cd78:	7f 01       	movw	r14, r30
   1cd7a:	dc 01       	movw	r26, r24
   1cd7c:	ed 91       	ld	r30, X+
   1cd7e:	fc 91       	ld	r31, X
   1cd80:	01 90       	ld	r0, Z+
   1cd82:	f0 81       	ld	r31, Z
   1cd84:	e0 2d       	mov	r30, r0
   1cd86:	19 95       	eicall
   1cd88:	11 50       	subi	r17, 0x01	; 1
   1cd8a:	f0 cf       	rjmp	.-32     	; 0x1cd6c <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1cd8c:	e8 81       	ld	r30, Y
   1cd8e:	f9 81       	ldd	r31, Y+1	; 0x01
   1cd90:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cd92:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cd94:	e0 2d       	mov	r30, r0
   1cd96:	ce 01       	movw	r24, r28
   1cd98:	19 95       	eicall
   1cd9a:	88 8d       	ldd	r24, Y+24	; 0x18
   1cd9c:	99 8d       	ldd	r25, Y+25	; 0x19
   1cd9e:	dc 01       	movw	r26, r24
   1cda0:	ed 91       	ld	r30, X+
   1cda2:	fc 91       	ld	r31, X
   1cda4:	02 88       	ldd	r0, Z+18	; 0x12
   1cda6:	f3 89       	ldd	r31, Z+19	; 0x13
   1cda8:	e0 2d       	mov	r30, r0
   1cdaa:	19 95       	eicall
   1cdac:	df be       	out	0x3f, r13	; 63
   1cdae:	80 2f       	mov	r24, r16
   1cdb0:	df 91       	pop	r29
   1cdb2:	cf 91       	pop	r28
   1cdb4:	1f 91       	pop	r17
   1cdb6:	0f 91       	pop	r16
   1cdb8:	ff 90       	pop	r15
   1cdba:	ef 90       	pop	r14
   1cdbc:	df 90       	pop	r13
   1cdbe:	cf 90       	pop	r12
   1cdc0:	bf 90       	pop	r11
   1cdc2:	08 95       	ret

0001cdc4 <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1cdc4:	dc 01       	movw	r26, r24
   1cdc6:	58 96       	adiw	r26, 0x18	; 24
   1cdc8:	8d 91       	ld	r24, X+
   1cdca:	9c 91       	ld	r25, X
   1cdcc:	59 97       	sbiw	r26, 0x19	; 25
   1cdce:	dc 01       	movw	r26, r24
   1cdd0:	ed 91       	ld	r30, X+
   1cdd2:	fc 91       	ld	r31, X
   1cdd4:	04 88       	ldd	r0, Z+20	; 0x14
   1cdd6:	f5 89       	ldd	r31, Z+21	; 0x15
   1cdd8:	e0 2d       	mov	r30, r0
   1cdda:	19 94       	eijmp

0001cddc <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1cddc:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1cde0:	81 e0       	ldi	r24, 0x01	; 1
   1cde2:	80 93 22 19 	sts	0x1922, r24	; 0x801922 <twi_sendStop>
   1cde6:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cdea:	61 e0       	ldi	r22, 0x01	; 1
   1cdec:	84 e1       	ldi	r24, 0x14	; 20
   1cdee:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1cdf2:	61 e0       	ldi	r22, 0x01	; 1
   1cdf4:	85 e1       	ldi	r24, 0x15	; 21
   1cdf6:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1cdfa:	e9 eb       	ldi	r30, 0xB9	; 185
   1cdfc:	f0 e0       	ldi	r31, 0x00	; 0
   1cdfe:	80 81       	ld	r24, Z
   1ce00:	8e 7f       	andi	r24, 0xFE	; 254
   1ce02:	80 83       	st	Z, r24
   1ce04:	80 81       	ld	r24, Z
   1ce06:	8d 7f       	andi	r24, 0xFD	; 253
   1ce08:	80 83       	st	Z, r24
   1ce0a:	88 e4       	ldi	r24, 0x48	; 72
   1ce0c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1ce10:	85 e4       	ldi	r24, 0x45	; 69
   1ce12:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ce16:	08 95       	ret

0001ce18 <twi_disable>:
   1ce18:	ec eb       	ldi	r30, 0xBC	; 188
   1ce1a:	f0 e0       	ldi	r31, 0x00	; 0
   1ce1c:	80 81       	ld	r24, Z
   1ce1e:	8a 7b       	andi	r24, 0xBA	; 186
   1ce20:	80 83       	st	Z, r24
   1ce22:	60 e0       	ldi	r22, 0x00	; 0
   1ce24:	84 e1       	ldi	r24, 0x14	; 20
   1ce26:	0e 94 21 d9 	call	0x1b242	; 0x1b242 <digitalWrite>
   1ce2a:	60 e0       	ldi	r22, 0x00	; 0
   1ce2c:	85 e1       	ldi	r24, 0x15	; 21
   1ce2e:	0c 94 21 d9 	jmp	0x1b242	; 0x1b242 <digitalWrite>

0001ce32 <twi_transmit>:
   1ce32:	40 91 d3 18 	lds	r20, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1ce36:	26 2f       	mov	r18, r22
   1ce38:	30 e0       	ldi	r19, 0x00	; 0
   1ce3a:	24 0f       	add	r18, r20
   1ce3c:	31 1d       	adc	r19, r1
   1ce3e:	21 32       	cpi	r18, 0x21	; 33
   1ce40:	31 05       	cpc	r19, r1
   1ce42:	dc f4       	brge	.+54     	; 0x1ce7a <twi_transmit+0x48>
   1ce44:	20 91 24 19 	lds	r18, 0x1924	; 0x801924 <twi_state>
   1ce48:	24 30       	cpi	r18, 0x04	; 4
   1ce4a:	c9 f4       	brne	.+50     	; 0x1ce7e <twi_transmit+0x4c>
   1ce4c:	fc 01       	movw	r30, r24
   1ce4e:	80 e0       	ldi	r24, 0x00	; 0
   1ce50:	90 e0       	ldi	r25, 0x00	; 0
   1ce52:	86 17       	cp	r24, r22
   1ce54:	58 f4       	brcc	.+22     	; 0x1ce6c <twi_transmit+0x3a>
   1ce56:	30 91 d3 18 	lds	r19, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1ce5a:	21 91       	ld	r18, Z+
   1ce5c:	dc 01       	movw	r26, r24
   1ce5e:	ab 52       	subi	r26, 0x2B	; 43
   1ce60:	b7 4e       	sbci	r27, 0xE7	; 231
   1ce62:	a3 0f       	add	r26, r19
   1ce64:	b1 1d       	adc	r27, r1
   1ce66:	2c 93       	st	X, r18
   1ce68:	01 96       	adiw	r24, 0x01	; 1
   1ce6a:	f3 cf       	rjmp	.-26     	; 0x1ce52 <twi_transmit+0x20>
   1ce6c:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1ce70:	68 0f       	add	r22, r24
   1ce72:	60 93 d3 18 	sts	0x18D3, r22	; 0x8018d3 <twi_txBufferLength>
   1ce76:	80 e0       	ldi	r24, 0x00	; 0
   1ce78:	08 95       	ret
   1ce7a:	81 e0       	ldi	r24, 0x01	; 1
   1ce7c:	08 95       	ret
   1ce7e:	82 e0       	ldi	r24, 0x02	; 2
   1ce80:	08 95       	ret

0001ce82 <twi_attachSlaveRxEvent>:
   1ce82:	90 93 18 19 	sts	0x1918, r25	; 0x801918 <twi_onSlaveReceive+0x1>
   1ce86:	80 93 17 19 	sts	0x1917, r24	; 0x801917 <twi_onSlaveReceive>
   1ce8a:	08 95       	ret

0001ce8c <twi_attachSlaveTxEvent>:
   1ce8c:	90 93 1a 19 	sts	0x191A, r25	; 0x80191a <twi_onSlaveTransmit+0x1>
   1ce90:	80 93 19 19 	sts	0x1919, r24	; 0x801919 <twi_onSlaveTransmit>
   1ce94:	08 95       	ret

0001ce96 <twi_releaseBus>:
   1ce96:	85 ec       	ldi	r24, 0xC5	; 197
   1ce98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ce9c:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1cea0:	08 95       	ret

0001cea2 <twi_handleTimeout>:
   1cea2:	cf 93       	push	r28
   1cea4:	df 93       	push	r29
   1cea6:	91 e0       	ldi	r25, 0x01	; 1
   1cea8:	90 93 1c 19 	sts	0x191C, r25	; 0x80191c <twi_timed_out_flag>
   1ceac:	88 23       	and	r24, r24
   1ceae:	51 f0       	breq	.+20     	; 0x1cec4 <twi_handleTimeout+0x22>
   1ceb0:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1ceb4:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1ceb8:	af df       	rcall	.-162    	; 0x1ce18 <twi_disable>
   1ceba:	90 df       	rcall	.-224    	; 0x1cddc <twi_init>
   1cebc:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1cec0:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1cec4:	df 91       	pop	r29
   1cec6:	cf 91       	pop	r28
   1cec8:	08 95       	ret

0001ceca <twi_writeTo>:
   1ceca:	4f 92       	push	r4
   1cecc:	5f 92       	push	r5
   1cece:	6f 92       	push	r6
   1ced0:	7f 92       	push	r7
   1ced2:	8f 92       	push	r8
   1ced4:	9f 92       	push	r9
   1ced6:	af 92       	push	r10
   1ced8:	bf 92       	push	r11
   1ceda:	cf 92       	push	r12
   1cedc:	df 92       	push	r13
   1cede:	ef 92       	push	r14
   1cee0:	ff 92       	push	r15
   1cee2:	0f 93       	push	r16
   1cee4:	1f 93       	push	r17
   1cee6:	cf 93       	push	r28
   1cee8:	df 93       	push	r29
   1ceea:	41 32       	cpi	r20, 0x21	; 33
   1ceec:	08 f0       	brcs	.+2      	; 0x1cef0 <twi_writeTo+0x26>
   1ceee:	c5 c0       	rjmp	.+394    	; 0x1d07a <twi_writeTo+0x1b0>
   1cef0:	12 2f       	mov	r17, r18
   1cef2:	f4 2e       	mov	r15, r20
   1cef4:	d7 2e       	mov	r13, r23
   1cef6:	e6 2e       	mov	r14, r22
   1cef8:	d8 2f       	mov	r29, r24
   1cefa:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1cefe:	4b 01       	movw	r8, r22
   1cf00:	5c 01       	movw	r10, r24
   1cf02:	c0 91 24 19 	lds	r28, 0x1924	; 0x801924 <twi_state>
   1cf06:	cc 23       	and	r28, r28
   1cf08:	11 f1       	breq	.+68     	; 0x1cf4e <twi_writeTo+0x84>
   1cf0a:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cf0e:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf12:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf16:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf1a:	89 2b       	or	r24, r25
   1cf1c:	8a 2b       	or	r24, r26
   1cf1e:	8b 2b       	or	r24, r27
   1cf20:	81 f3       	breq	.-32     	; 0x1cf02 <twi_writeTo+0x38>
   1cf22:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1cf26:	40 90 1d 19 	lds	r4, 0x191D	; 0x80191d <twi_timeout_us>
   1cf2a:	50 90 1e 19 	lds	r5, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf2e:	60 90 1f 19 	lds	r6, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf32:	70 90 20 19 	lds	r7, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf36:	dc 01       	movw	r26, r24
   1cf38:	cb 01       	movw	r24, r22
   1cf3a:	88 19       	sub	r24, r8
   1cf3c:	99 09       	sbc	r25, r9
   1cf3e:	aa 09       	sbc	r26, r10
   1cf40:	bb 09       	sbc	r27, r11
   1cf42:	48 16       	cp	r4, r24
   1cf44:	59 06       	cpc	r5, r25
   1cf46:	6a 06       	cpc	r6, r26
   1cf48:	7b 06       	cpc	r7, r27
   1cf4a:	d8 f6       	brcc	.-74     	; 0x1cf02 <twi_writeTo+0x38>
   1cf4c:	83 c0       	rjmp	.+262    	; 0x1d054 <twi_writeTo+0x18a>
   1cf4e:	82 e0       	ldi	r24, 0x02	; 2
   1cf50:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
   1cf54:	00 93 22 19 	sts	0x1922, r16	; 0x801922 <twi_sendStop>
   1cf58:	8f ef       	ldi	r24, 0xFF	; 255
   1cf5a:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1cf5e:	10 92 f6 18 	sts	0x18F6, r1	; 0x8018f6 <twi_masterBufferIndex>
   1cf62:	f0 92 f5 18 	sts	0x18F5, r15	; 0x8018f5 <twi_masterBufferLength>
   1cf66:	9e 2d       	mov	r25, r14
   1cf68:	a7 ef       	ldi	r26, 0xF7	; 247
   1cf6a:	b8 e1       	ldi	r27, 0x18	; 24
   1cf6c:	ee 2d       	mov	r30, r14
   1cf6e:	fd 2d       	mov	r31, r13
   1cf70:	8e 2f       	mov	r24, r30
   1cf72:	89 1b       	sub	r24, r25
   1cf74:	8f 15       	cp	r24, r15
   1cf76:	18 f4       	brcc	.+6      	; 0x1cf7e <twi_writeTo+0xb4>
   1cf78:	81 91       	ld	r24, Z+
   1cf7a:	8d 93       	st	X+, r24
   1cf7c:	f9 cf       	rjmp	.-14     	; 0x1cf70 <twi_writeTo+0xa6>
   1cf7e:	10 92 23 19 	sts	0x1923, r1	; 0x801923 <twi_slarw>
   1cf82:	90 91 23 19 	lds	r25, 0x1923	; 0x801923 <twi_slarw>
   1cf86:	dd 0f       	add	r29, r29
   1cf88:	d9 2b       	or	r29, r25
   1cf8a:	d0 93 23 19 	sts	0x1923, r29	; 0x801923 <twi_slarw>
   1cf8e:	80 91 21 19 	lds	r24, 0x1921	; 0x801921 <twi_inRepStart>
   1cf92:	81 30       	cpi	r24, 0x01	; 1
   1cf94:	89 f5       	brne	.+98     	; 0x1cff8 <twi_writeTo+0x12e>
   1cf96:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cf9a:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1cf9e:	6b 01       	movw	r12, r22
   1cfa0:	7c 01       	movw	r14, r24
   1cfa2:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1cfa6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1cfaa:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cfae:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cfb2:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cfb6:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cfba:	89 2b       	or	r24, r25
   1cfbc:	8a 2b       	or	r24, r26
   1cfbe:	8b 2b       	or	r24, r27
   1cfc0:	a9 f0       	breq	.+42     	; 0x1cfec <twi_writeTo+0x122>
   1cfc2:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1cfc6:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1cfca:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cfce:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cfd2:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cfd6:	dc 01       	movw	r26, r24
   1cfd8:	cb 01       	movw	r24, r22
   1cfda:	8c 19       	sub	r24, r12
   1cfdc:	9d 09       	sbc	r25, r13
   1cfde:	ae 09       	sbc	r26, r14
   1cfe0:	bf 09       	sbc	r27, r15
   1cfe2:	88 16       	cp	r8, r24
   1cfe4:	99 06       	cpc	r9, r25
   1cfe6:	aa 06       	cpc	r10, r26
   1cfe8:	bb 06       	cpc	r11, r27
   1cfea:	a0 f1       	brcs	.+104    	; 0x1d054 <twi_writeTo+0x18a>
   1cfec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cff0:	83 fd       	sbrc	r24, 3
   1cff2:	d7 cf       	rjmp	.-82     	; 0x1cfa2 <twi_writeTo+0xd8>
   1cff4:	85 ec       	ldi	r24, 0xC5	; 197
   1cff6:	01 c0       	rjmp	.+2      	; 0x1cffa <twi_writeTo+0x130>
   1cff8:	85 ee       	ldi	r24, 0xE5	; 229
   1cffa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cffe:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1d002:	6b 01       	movw	r12, r22
   1d004:	7c 01       	movw	r14, r24
   1d006:	11 23       	and	r17, r17
   1d008:	51 f1       	breq	.+84     	; 0x1d05e <twi_writeTo+0x194>
   1d00a:	80 91 24 19 	lds	r24, 0x1924	; 0x801924 <twi_state>
   1d00e:	82 30       	cpi	r24, 0x02	; 2
   1d010:	31 f5       	brne	.+76     	; 0x1d05e <twi_writeTo+0x194>
   1d012:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1d016:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d01a:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d01e:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d022:	89 2b       	or	r24, r25
   1d024:	8a 2b       	or	r24, r26
   1d026:	8b 2b       	or	r24, r27
   1d028:	71 f3       	breq	.-36     	; 0x1d006 <twi_writeTo+0x13c>
   1d02a:	0e 94 c3 d7 	call	0x1af86	; 0x1af86 <micros>
   1d02e:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1d032:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d036:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d03a:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d03e:	dc 01       	movw	r26, r24
   1d040:	cb 01       	movw	r24, r22
   1d042:	8c 19       	sub	r24, r12
   1d044:	9d 09       	sbc	r25, r13
   1d046:	ae 09       	sbc	r26, r14
   1d048:	bf 09       	sbc	r27, r15
   1d04a:	88 16       	cp	r8, r24
   1d04c:	99 06       	cpc	r9, r25
   1d04e:	aa 06       	cpc	r10, r26
   1d050:	bb 06       	cpc	r11, r27
   1d052:	c8 f6       	brcc	.-78     	; 0x1d006 <twi_writeTo+0x13c>
   1d054:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1d058:	24 df       	rcall	.-440    	; 0x1cea2 <twi_handleTimeout>
   1d05a:	c5 e0       	ldi	r28, 0x05	; 5
   1d05c:	13 c0       	rjmp	.+38     	; 0x1d084 <twi_writeTo+0x1ba>
   1d05e:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1d062:	8f 3f       	cpi	r24, 0xFF	; 255
   1d064:	79 f0       	breq	.+30     	; 0x1d084 <twi_writeTo+0x1ba>
   1d066:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1d06a:	80 32       	cpi	r24, 0x20	; 32
   1d06c:	41 f0       	breq	.+16     	; 0x1d07e <twi_writeTo+0x1b4>
   1d06e:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1d072:	80 33       	cpi	r24, 0x30	; 48
   1d074:	31 f0       	breq	.+12     	; 0x1d082 <twi_writeTo+0x1b8>
   1d076:	c4 e0       	ldi	r28, 0x04	; 4
   1d078:	05 c0       	rjmp	.+10     	; 0x1d084 <twi_writeTo+0x1ba>
   1d07a:	c1 e0       	ldi	r28, 0x01	; 1
   1d07c:	03 c0       	rjmp	.+6      	; 0x1d084 <twi_writeTo+0x1ba>
   1d07e:	c2 e0       	ldi	r28, 0x02	; 2
   1d080:	01 c0       	rjmp	.+2      	; 0x1d084 <twi_writeTo+0x1ba>
   1d082:	c3 e0       	ldi	r28, 0x03	; 3
   1d084:	8c 2f       	mov	r24, r28
   1d086:	df 91       	pop	r29
   1d088:	cf 91       	pop	r28
   1d08a:	1f 91       	pop	r17
   1d08c:	0f 91       	pop	r16
   1d08e:	ff 90       	pop	r15
   1d090:	ef 90       	pop	r14
   1d092:	df 90       	pop	r13
   1d094:	cf 90       	pop	r12
   1d096:	bf 90       	pop	r11
   1d098:	af 90       	pop	r10
   1d09a:	9f 90       	pop	r9
   1d09c:	8f 90       	pop	r8
   1d09e:	7f 90       	pop	r7
   1d0a0:	6f 90       	pop	r6
   1d0a2:	5f 90       	pop	r5
   1d0a4:	4f 90       	pop	r4
   1d0a6:	08 95       	ret

0001d0a8 <twi_stop>:
   1d0a8:	85 ed       	ldi	r24, 0xD5	; 213
   1d0aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d0ae:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1d0b2:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d0b6:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d0ba:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d0be:	07 96       	adiw	r24, 0x07	; 7
   1d0c0:	a1 1d       	adc	r26, r1
   1d0c2:	b1 1d       	adc	r27, r1
   1d0c4:	23 e0       	ldi	r18, 0x03	; 3
   1d0c6:	b6 95       	lsr	r27
   1d0c8:	a7 95       	ror	r26
   1d0ca:	97 95       	ror	r25
   1d0cc:	87 95       	ror	r24
   1d0ce:	2a 95       	dec	r18
   1d0d0:	d1 f7       	brne	.-12     	; 0x1d0c6 <twi_stop+0x1e>
   1d0d2:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d0d6:	24 ff       	sbrs	r18, 4
   1d0d8:	1b c0       	rjmp	.+54     	; 0x1d110 <twi_stop+0x68>
   1d0da:	40 91 1d 19 	lds	r20, 0x191D	; 0x80191d <twi_timeout_us>
   1d0de:	50 91 1e 19 	lds	r21, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d0e2:	60 91 1f 19 	lds	r22, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d0e6:	70 91 20 19 	lds	r23, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d0ea:	45 2b       	or	r20, r21
   1d0ec:	46 2b       	or	r20, r22
   1d0ee:	47 2b       	or	r20, r23
   1d0f0:	81 f3       	breq	.-32     	; 0x1d0d2 <twi_stop+0x2a>
   1d0f2:	00 97       	sbiw	r24, 0x00	; 0
   1d0f4:	a1 05       	cpc	r26, r1
   1d0f6:	b1 05       	cpc	r27, r1
   1d0f8:	41 f0       	breq	.+16     	; 0x1d10a <twi_stop+0x62>
   1d0fa:	25 e3       	ldi	r18, 0x35	; 53
   1d0fc:	2a 95       	dec	r18
   1d0fe:	f1 f7       	brne	.-4      	; 0x1d0fc <twi_stop+0x54>
   1d100:	00 00       	nop
   1d102:	01 97       	sbiw	r24, 0x01	; 1
   1d104:	a1 09       	sbc	r26, r1
   1d106:	b1 09       	sbc	r27, r1
   1d108:	e4 cf       	rjmp	.-56     	; 0x1d0d2 <twi_stop+0x2a>
   1d10a:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1d10e:	c9 ce       	rjmp	.-622    	; 0x1cea2 <twi_handleTimeout>
   1d110:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1d114:	08 95       	ret

0001d116 <__vector_39>:

ISR(TWI_vect)
{
   1d116:	1f 92       	push	r1
   1d118:	0f 92       	push	r0
   1d11a:	0f b6       	in	r0, 0x3f	; 63
   1d11c:	0f 92       	push	r0
   1d11e:	11 24       	eor	r1, r1
   1d120:	0b b6       	in	r0, 0x3b	; 59
   1d122:	0f 92       	push	r0
   1d124:	2f 93       	push	r18
   1d126:	3f 93       	push	r19
   1d128:	4f 93       	push	r20
   1d12a:	5f 93       	push	r21
   1d12c:	6f 93       	push	r22
   1d12e:	7f 93       	push	r23
   1d130:	8f 93       	push	r24
   1d132:	9f 93       	push	r25
   1d134:	af 93       	push	r26
   1d136:	bf 93       	push	r27
   1d138:	ef 93       	push	r30
   1d13a:	ff 93       	push	r31
  switch(TW_STATUS){
   1d13c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1d140:	88 7f       	andi	r24, 0xF8	; 248
   1d142:	80 36       	cpi	r24, 0x60	; 96
   1d144:	09 f4       	brne	.+2      	; 0x1d148 <__vector_39+0x32>
   1d146:	9d c0       	rjmp	.+314    	; 0x1d282 <__vector_39+0x16c>
   1d148:	70 f5       	brcc	.+92     	; 0x1d1a6 <__vector_39+0x90>
   1d14a:	88 32       	cpi	r24, 0x28	; 40
   1d14c:	09 f4       	brne	.+2      	; 0x1d150 <__vector_39+0x3a>
   1d14e:	5c c0       	rjmp	.+184    	; 0x1d208 <__vector_39+0xf2>
   1d150:	90 f4       	brcc	.+36     	; 0x1d176 <__vector_39+0x60>
   1d152:	80 31       	cpi	r24, 0x10	; 16
   1d154:	09 f4       	brne	.+2      	; 0x1d158 <__vector_39+0x42>
   1d156:	55 c0       	rjmp	.+170    	; 0x1d202 <__vector_39+0xec>
   1d158:	38 f4       	brcc	.+14     	; 0x1d168 <__vector_39+0x52>
   1d15a:	88 23       	and	r24, r24
   1d15c:	09 f4       	brne	.+2      	; 0x1d160 <__vector_39+0x4a>
   1d15e:	f3 c0       	rjmp	.+486    	; 0x1d346 <__vector_39+0x230>
   1d160:	88 30       	cpi	r24, 0x08	; 8
   1d162:	09 f4       	brne	.+2      	; 0x1d166 <__vector_39+0x50>
   1d164:	4e c0       	rjmp	.+156    	; 0x1d202 <__vector_39+0xec>
   1d166:	f2 c0       	rjmp	.+484    	; 0x1d34c <__vector_39+0x236>
   1d168:	88 31       	cpi	r24, 0x18	; 24
   1d16a:	09 f4       	brne	.+2      	; 0x1d16e <__vector_39+0x58>
   1d16c:	4d c0       	rjmp	.+154    	; 0x1d208 <__vector_39+0xf2>
   1d16e:	80 32       	cpi	r24, 0x20	; 32
   1d170:	09 f4       	brne	.+2      	; 0x1d174 <__vector_39+0x5e>
   1d172:	5e c0       	rjmp	.+188    	; 0x1d230 <__vector_39+0x11a>
   1d174:	eb c0       	rjmp	.+470    	; 0x1d34c <__vector_39+0x236>
   1d176:	80 34       	cpi	r24, 0x40	; 64
   1d178:	09 f4       	brne	.+2      	; 0x1d17c <__vector_39+0x66>
   1d17a:	69 c0       	rjmp	.+210    	; 0x1d24e <__vector_39+0x138>
   1d17c:	50 f4       	brcc	.+20     	; 0x1d192 <__vector_39+0x7c>
   1d17e:	80 33       	cpi	r24, 0x30	; 48
   1d180:	09 f4       	brne	.+2      	; 0x1d184 <__vector_39+0x6e>
   1d182:	56 c0       	rjmp	.+172    	; 0x1d230 <__vector_39+0x11a>
   1d184:	88 33       	cpi	r24, 0x38	; 56
   1d186:	09 f0       	breq	.+2      	; 0x1d18a <__vector_39+0x74>
   1d188:	e1 c0       	rjmp	.+450    	; 0x1d34c <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1d18a:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
      twi_releaseBus();
   1d18e:	83 de       	rcall	.-762    	; 0x1ce96 <twi_releaseBus>
      break;
   1d190:	dd c0       	rjmp	.+442    	; 0x1d34c <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1d192:	80 35       	cpi	r24, 0x50	; 80
   1d194:	09 f4       	brne	.+2      	; 0x1d198 <__vector_39+0x82>
   1d196:	4f c0       	rjmp	.+158    	; 0x1d236 <__vector_39+0x120>
   1d198:	88 35       	cpi	r24, 0x58	; 88
   1d19a:	09 f4       	brne	.+2      	; 0x1d19e <__vector_39+0x88>
   1d19c:	5d c0       	rjmp	.+186    	; 0x1d258 <__vector_39+0x142>
   1d19e:	88 34       	cpi	r24, 0x48	; 72
   1d1a0:	09 f0       	breq	.+2      	; 0x1d1a4 <__vector_39+0x8e>
   1d1a2:	d4 c0       	rjmp	.+424    	; 0x1d34c <__vector_39+0x236>
   1d1a4:	d2 c0       	rjmp	.+420    	; 0x1d34a <__vector_39+0x234>
   1d1a6:	88 39       	cpi	r24, 0x98	; 152
   1d1a8:	09 f4       	brne	.+2      	; 0x1d1ac <__vector_39+0x96>
   1d1aa:	c3 c0       	rjmp	.+390    	; 0x1d332 <__vector_39+0x21c>
   1d1ac:	a8 f4       	brcc	.+42     	; 0x1d1d8 <__vector_39+0xc2>
   1d1ae:	88 37       	cpi	r24, 0x78	; 120
   1d1b0:	09 f4       	brne	.+2      	; 0x1d1b4 <__vector_39+0x9e>
   1d1b2:	67 c0       	rjmp	.+206    	; 0x1d282 <__vector_39+0x16c>
   1d1b4:	38 f4       	brcc	.+14     	; 0x1d1c4 <__vector_39+0xae>
   1d1b6:	88 36       	cpi	r24, 0x68	; 104
   1d1b8:	09 f4       	brne	.+2      	; 0x1d1bc <__vector_39+0xa6>
   1d1ba:	63 c0       	rjmp	.+198    	; 0x1d282 <__vector_39+0x16c>
   1d1bc:	80 37       	cpi	r24, 0x70	; 112
   1d1be:	09 f4       	brne	.+2      	; 0x1d1c2 <__vector_39+0xac>
   1d1c0:	60 c0       	rjmp	.+192    	; 0x1d282 <__vector_39+0x16c>
   1d1c2:	c4 c0       	rjmp	.+392    	; 0x1d34c <__vector_39+0x236>
   1d1c4:	88 38       	cpi	r24, 0x88	; 136
   1d1c6:	09 f4       	brne	.+2      	; 0x1d1ca <__vector_39+0xb4>
   1d1c8:	b4 c0       	rjmp	.+360    	; 0x1d332 <__vector_39+0x21c>
   1d1ca:	80 39       	cpi	r24, 0x90	; 144
   1d1cc:	09 f4       	brne	.+2      	; 0x1d1d0 <__vector_39+0xba>
   1d1ce:	5f c0       	rjmp	.+190    	; 0x1d28e <__vector_39+0x178>
   1d1d0:	80 38       	cpi	r24, 0x80	; 128
   1d1d2:	09 f0       	breq	.+2      	; 0x1d1d6 <__vector_39+0xc0>
   1d1d4:	bb c0       	rjmp	.+374    	; 0x1d34c <__vector_39+0x236>
   1d1d6:	5b c0       	rjmp	.+182    	; 0x1d28e <__vector_39+0x178>
   1d1d8:	80 3b       	cpi	r24, 0xB0	; 176
   1d1da:	09 f4       	brne	.+2      	; 0x1d1de <__vector_39+0xc8>
   1d1dc:	82 c0       	rjmp	.+260    	; 0x1d2e2 <__vector_39+0x1cc>
   1d1de:	38 f4       	brcc	.+14     	; 0x1d1ee <__vector_39+0xd8>
   1d1e0:	80 3a       	cpi	r24, 0xA0	; 160
   1d1e2:	09 f4       	brne	.+2      	; 0x1d1e6 <__vector_39+0xd0>
   1d1e4:	66 c0       	rjmp	.+204    	; 0x1d2b2 <__vector_39+0x19c>
   1d1e6:	88 3a       	cpi	r24, 0xA8	; 168
   1d1e8:	09 f4       	brne	.+2      	; 0x1d1ec <__vector_39+0xd6>
   1d1ea:	7b c0       	rjmp	.+246    	; 0x1d2e2 <__vector_39+0x1cc>
   1d1ec:	af c0       	rjmp	.+350    	; 0x1d34c <__vector_39+0x236>
   1d1ee:	80 3c       	cpi	r24, 0xC0	; 192
   1d1f0:	09 f4       	brne	.+2      	; 0x1d1f4 <__vector_39+0xde>
   1d1f2:	a3 c0       	rjmp	.+326    	; 0x1d33a <__vector_39+0x224>
   1d1f4:	88 3c       	cpi	r24, 0xC8	; 200
   1d1f6:	09 f4       	brne	.+2      	; 0x1d1fa <__vector_39+0xe4>
   1d1f8:	a0 c0       	rjmp	.+320    	; 0x1d33a <__vector_39+0x224>
   1d1fa:	88 3b       	cpi	r24, 0xB8	; 184
   1d1fc:	09 f4       	brne	.+2      	; 0x1d200 <__vector_39+0xea>
   1d1fe:	86 c0       	rjmp	.+268    	; 0x1d30c <__vector_39+0x1f6>
   1d200:	a5 c0       	rjmp	.+330    	; 0x1d34c <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1d202:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1d206:	10 c0       	rjmp	.+32     	; 0x1d228 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d208:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d20c:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d210:	98 17       	cp	r25, r24
   1d212:	70 f5       	brcc	.+92     	; 0x1d270 <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1d214:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d218:	81 e0       	ldi	r24, 0x01	; 1
   1d21a:	8e 0f       	add	r24, r30
   1d21c:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d220:	f0 e0       	ldi	r31, 0x00	; 0
   1d222:	e9 50       	subi	r30, 0x09	; 9
   1d224:	f7 4e       	sbci	r31, 0xE7	; 231
   1d226:	80 81       	ld	r24, Z
   1d228:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d22c:	85 ec       	ldi	r24, 0xC5	; 197
   1d22e:	82 c0       	rjmp	.+260    	; 0x1d334 <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1d230:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1d234:	8a c0       	rjmp	.+276    	; 0x1d34a <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d236:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d23a:	81 e0       	ldi	r24, 0x01	; 1
   1d23c:	8e 0f       	add	r24, r30
   1d23e:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d242:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d246:	f0 e0       	ldi	r31, 0x00	; 0
   1d248:	e9 50       	subi	r30, 0x09	; 9
   1d24a:	f7 4e       	sbci	r31, 0xE7	; 231
   1d24c:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d24e:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d252:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d256:	6a c0       	rjmp	.+212    	; 0x1d32c <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d258:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d25c:	81 e0       	ldi	r24, 0x01	; 1
   1d25e:	8e 0f       	add	r24, r30
   1d260:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d264:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d268:	f0 e0       	ldi	r31, 0x00	; 0
   1d26a:	e9 50       	subi	r30, 0x09	; 9
   1d26c:	f7 4e       	sbci	r31, 0xE7	; 231
   1d26e:	80 83       	st	Z, r24
      if (twi_sendStop){
   1d270:	80 91 22 19 	lds	r24, 0x1922	; 0x801922 <twi_sendStop>
   1d274:	81 11       	cpse	r24, r1
   1d276:	69 c0       	rjmp	.+210    	; 0x1d34a <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1d278:	81 e0       	ldi	r24, 0x01	; 1
   1d27a:	80 93 21 19 	sts	0x1921, r24	; 0x801921 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1d27e:	84 ea       	ldi	r24, 0xA4	; 164
   1d280:	5d c0       	rjmp	.+186    	; 0x1d33c <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1d282:	83 e0       	ldi	r24, 0x03	; 3
   1d284:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1d288:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
   1d28c:	cf cf       	rjmp	.-98     	; 0x1d22c <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d28e:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d292:	80 32       	cpi	r24, 0x20	; 32
   1d294:	08 f0       	brcs	.+2      	; 0x1d298 <__vector_39+0x182>
   1d296:	4d c0       	rjmp	.+154    	; 0x1d332 <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1d298:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d29c:	81 e0       	ldi	r24, 0x01	; 1
   1d29e:	8e 0f       	add	r24, r30
   1d2a0:	80 93 b2 18 	sts	0x18B2, r24	; 0x8018b2 <twi_rxBufferIndex>
   1d2a4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d2a8:	f0 e0       	ldi	r31, 0x00	; 0
   1d2aa:	ed 54       	subi	r30, 0x4D	; 77
   1d2ac:	f7 4e       	sbci	r31, 0xE7	; 231
   1d2ae:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1d2b0:	bd cf       	rjmp	.-134    	; 0x1d22c <__vector_39+0x116>
   1d2b2:	f1 dd       	rcall	.-1054   	; 0x1ce96 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d2b4:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d2b8:	80 32       	cpi	r24, 0x20	; 32
   1d2ba:	30 f4       	brcc	.+12     	; 0x1d2c8 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1d2bc:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d2c0:	f0 e0       	ldi	r31, 0x00	; 0
   1d2c2:	ed 54       	subi	r30, 0x4D	; 77
   1d2c4:	f7 4e       	sbci	r31, 0xE7	; 231
   1d2c6:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1d2c8:	60 91 b2 18 	lds	r22, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d2cc:	70 e0       	ldi	r23, 0x00	; 0
   1d2ce:	e0 91 17 19 	lds	r30, 0x1917	; 0x801917 <twi_onSlaveReceive>
   1d2d2:	f0 91 18 19 	lds	r31, 0x1918	; 0x801918 <twi_onSlaveReceive+0x1>
   1d2d6:	83 eb       	ldi	r24, 0xB3	; 179
   1d2d8:	98 e1       	ldi	r25, 0x18	; 24
   1d2da:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1d2dc:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
      break;
   1d2e0:	35 c0       	rjmp	.+106    	; 0x1d34c <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1d2e2:	84 e0       	ldi	r24, 0x04	; 4
   1d2e4:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1d2e8:	10 92 d4 18 	sts	0x18D4, r1	; 0x8018d4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1d2ec:	10 92 d3 18 	sts	0x18D3, r1	; 0x8018d3 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1d2f0:	e0 91 19 19 	lds	r30, 0x1919	; 0x801919 <twi_onSlaveTransmit>
   1d2f4:	f0 91 1a 19 	lds	r31, 0x191A	; 0x80191a <twi_onSlaveTransmit+0x1>
   1d2f8:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1d2fa:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d2fe:	81 11       	cpse	r24, r1
   1d300:	05 c0       	rjmp	.+10     	; 0x1d30c <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1d302:	81 e0       	ldi	r24, 0x01	; 1
   1d304:	80 93 d3 18 	sts	0x18D3, r24	; 0x8018d3 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1d308:	10 92 d5 18 	sts	0x18D5, r1	; 0x8018d5 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1d30c:	e0 91 d4 18 	lds	r30, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d310:	81 e0       	ldi	r24, 0x01	; 1
   1d312:	8e 0f       	add	r24, r30
   1d314:	80 93 d4 18 	sts	0x18D4, r24	; 0x8018d4 <twi_txBufferIndex>
   1d318:	f0 e0       	ldi	r31, 0x00	; 0
   1d31a:	eb 52       	subi	r30, 0x2B	; 43
   1d31c:	f7 4e       	sbci	r31, 0xE7	; 231
   1d31e:	80 81       	ld	r24, Z
   1d320:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1d324:	90 91 d4 18 	lds	r25, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d328:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d32c:	98 17       	cp	r25, r24
   1d32e:	08 f4       	brcc	.+2      	; 0x1d332 <__vector_39+0x21c>
   1d330:	7d cf       	rjmp	.-262    	; 0x1d22c <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1d332:	85 e8       	ldi	r24, 0x85	; 133
   1d334:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d338:	09 c0       	rjmp	.+18     	; 0x1d34c <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d33a:	85 ec       	ldi	r24, 0xC5	; 197
   1d33c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1d340:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
      break;
   1d344:	03 c0       	rjmp	.+6      	; 0x1d34c <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1d346:	10 92 b1 18 	sts	0x18B1, r1	; 0x8018b1 <twi_error>
      twi_stop();
   1d34a:	ae de       	rcall	.-676    	; 0x1d0a8 <twi_stop>
      break;
  }
}
   1d34c:	ff 91       	pop	r31
   1d34e:	ef 91       	pop	r30
   1d350:	bf 91       	pop	r27
   1d352:	af 91       	pop	r26
   1d354:	9f 91       	pop	r25
   1d356:	8f 91       	pop	r24
   1d358:	7f 91       	pop	r23
   1d35a:	6f 91       	pop	r22
   1d35c:	5f 91       	pop	r21
   1d35e:	4f 91       	pop	r20
   1d360:	3f 91       	pop	r19
   1d362:	2f 91       	pop	r18
   1d364:	0f 90       	pop	r0
   1d366:	0b be       	out	0x3b, r0	; 59
   1d368:	0f 90       	pop	r0
   1d36a:	0f be       	out	0x3f, r0	; 63
   1d36c:	0f 90       	pop	r0
   1d36e:	1f 90       	pop	r1
   1d370:	18 95       	reti

0001d372 <pow>:
   1d372:	fa 01       	movw	r30, r20
   1d374:	ee 0f       	add	r30, r30
   1d376:	ff 1f       	adc	r31, r31
   1d378:	30 96       	adiw	r30, 0x00	; 0
   1d37a:	21 05       	cpc	r18, r1
   1d37c:	31 05       	cpc	r19, r1
   1d37e:	a1 f1       	breq	.+104    	; 0x1d3e8 <pow+0x76>
   1d380:	61 15       	cp	r22, r1
   1d382:	71 05       	cpc	r23, r1
   1d384:	61 f4       	brne	.+24     	; 0x1d39e <pow+0x2c>
   1d386:	80 38       	cpi	r24, 0x80	; 128
   1d388:	bf e3       	ldi	r27, 0x3F	; 63
   1d38a:	9b 07       	cpc	r25, r27
   1d38c:	49 f1       	breq	.+82     	; 0x1d3e0 <pow+0x6e>
   1d38e:	68 94       	set
   1d390:	90 38       	cpi	r25, 0x80	; 128
   1d392:	81 05       	cpc	r24, r1
   1d394:	61 f0       	breq	.+24     	; 0x1d3ae <pow+0x3c>
   1d396:	80 38       	cpi	r24, 0x80	; 128
   1d398:	bf ef       	ldi	r27, 0xFF	; 255
   1d39a:	9b 07       	cpc	r25, r27
   1d39c:	41 f0       	breq	.+16     	; 0x1d3ae <pow+0x3c>
   1d39e:	99 23       	and	r25, r25
   1d3a0:	4a f5       	brpl	.+82     	; 0x1d3f4 <pow+0x82>
   1d3a2:	ff 3f       	cpi	r31, 0xFF	; 255
   1d3a4:	e1 05       	cpc	r30, r1
   1d3a6:	31 05       	cpc	r19, r1
   1d3a8:	21 05       	cpc	r18, r1
   1d3aa:	19 f1       	breq	.+70     	; 0x1d3f2 <pow+0x80>
   1d3ac:	e8 94       	clt
   1d3ae:	08 94       	sec
   1d3b0:	e7 95       	ror	r30
   1d3b2:	d9 01       	movw	r26, r18
   1d3b4:	aa 23       	and	r26, r26
   1d3b6:	29 f4       	brne	.+10     	; 0x1d3c2 <pow+0x50>
   1d3b8:	ab 2f       	mov	r26, r27
   1d3ba:	be 2f       	mov	r27, r30
   1d3bc:	f8 5f       	subi	r31, 0xF8	; 248
   1d3be:	d0 f3       	brcs	.-12     	; 0x1d3b4 <pow+0x42>
   1d3c0:	10 c0       	rjmp	.+32     	; 0x1d3e2 <pow+0x70>
   1d3c2:	ff 5f       	subi	r31, 0xFF	; 255
   1d3c4:	70 f4       	brcc	.+28     	; 0x1d3e2 <pow+0x70>
   1d3c6:	a6 95       	lsr	r26
   1d3c8:	e0 f7       	brcc	.-8      	; 0x1d3c2 <pow+0x50>
   1d3ca:	f7 39       	cpi	r31, 0x97	; 151
   1d3cc:	50 f0       	brcs	.+20     	; 0x1d3e2 <pow+0x70>
   1d3ce:	19 f0       	breq	.+6      	; 0x1d3d6 <pow+0x64>
   1d3d0:	ff 3a       	cpi	r31, 0xAF	; 175
   1d3d2:	38 f4       	brcc	.+14     	; 0x1d3e2 <pow+0x70>
   1d3d4:	9f 77       	andi	r25, 0x7F	; 127
   1d3d6:	9f 93       	push	r25
   1d3d8:	0d d0       	rcall	.+26     	; 0x1d3f4 <pow+0x82>
   1d3da:	0f 90       	pop	r0
   1d3dc:	07 fc       	sbrc	r0, 7
   1d3de:	90 58       	subi	r25, 0x80	; 128
   1d3e0:	08 95       	ret
   1d3e2:	46 f0       	brts	.+16     	; 0x1d3f4 <pow+0x82>
   1d3e4:	0c 94 8b d2 	jmp	0x1a516	; 0x1a516 <__fp_nan>
   1d3e8:	60 e0       	ldi	r22, 0x00	; 0
   1d3ea:	70 e0       	ldi	r23, 0x00	; 0
   1d3ec:	80 e8       	ldi	r24, 0x80	; 128
   1d3ee:	9f e3       	ldi	r25, 0x3F	; 63
   1d3f0:	08 95       	ret
   1d3f2:	4f e7       	ldi	r20, 0x7F	; 127
   1d3f4:	9f 77       	andi	r25, 0x7F	; 127
   1d3f6:	5f 93       	push	r21
   1d3f8:	4f 93       	push	r20
   1d3fa:	3f 93       	push	r19
   1d3fc:	2f 93       	push	r18
   1d3fe:	0a d1       	rcall	.+532    	; 0x1d614 <log>
   1d400:	2f 91       	pop	r18
   1d402:	3f 91       	pop	r19
   1d404:	4f 91       	pop	r20
   1d406:	5f 91       	pop	r21
   1d408:	0e 94 da d2 	call	0x1a5b4	; 0x1a5b4 <__mulsf3>
   1d40c:	51 c0       	rjmp	.+162    	; 0x1d4b0 <exp>
   1d40e:	19 f4       	brne	.+6      	; 0x1d416 <pow+0xa4>
   1d410:	16 f4       	brtc	.+4      	; 0x1d416 <pow+0xa4>
   1d412:	0c 94 8b d2 	jmp	0x1a516	; 0x1a516 <__fp_nan>
   1d416:	7a c0       	rjmp	.+244    	; 0x1d50c <__fp_mpack>

0001d418 <sqrt>:
   1d418:	0e 94 b5 d2 	call	0x1a56a	; 0x1a56a <__fp_splitA>
   1d41c:	c0 f3       	brcs	.-16     	; 0x1d40e <pow+0x9c>
   1d41e:	99 23       	and	r25, r25
   1d420:	d1 f3       	breq	.-12     	; 0x1d416 <pow+0xa4>
   1d422:	be f3       	brts	.-18     	; 0x1d412 <pow+0xa0>
   1d424:	9f 57       	subi	r25, 0x7F	; 127
   1d426:	55 0b       	sbc	r21, r21
   1d428:	87 ff       	sbrs	r24, 7
   1d42a:	7e d0       	rcall	.+252    	; 0x1d528 <__fp_norm2>
   1d42c:	00 24       	eor	r0, r0
   1d42e:	a0 e6       	ldi	r26, 0x60	; 96
   1d430:	40 ea       	ldi	r20, 0xA0	; 160
   1d432:	90 01       	movw	r18, r0
   1d434:	80 58       	subi	r24, 0x80	; 128
   1d436:	56 95       	lsr	r21
   1d438:	97 95       	ror	r25
   1d43a:	28 f4       	brcc	.+10     	; 0x1d446 <sqrt+0x2e>
   1d43c:	80 5c       	subi	r24, 0xC0	; 192
   1d43e:	66 0f       	add	r22, r22
   1d440:	77 1f       	adc	r23, r23
   1d442:	88 1f       	adc	r24, r24
   1d444:	20 f0       	brcs	.+8      	; 0x1d44e <sqrt+0x36>
   1d446:	26 17       	cp	r18, r22
   1d448:	37 07       	cpc	r19, r23
   1d44a:	48 07       	cpc	r20, r24
   1d44c:	30 f4       	brcc	.+12     	; 0x1d45a <sqrt+0x42>
   1d44e:	62 1b       	sub	r22, r18
   1d450:	73 0b       	sbc	r23, r19
   1d452:	84 0b       	sbc	r24, r20
   1d454:	20 29       	or	r18, r0
   1d456:	31 29       	or	r19, r1
   1d458:	4a 2b       	or	r20, r26
   1d45a:	a6 95       	lsr	r26
   1d45c:	17 94       	ror	r1
   1d45e:	07 94       	ror	r0
   1d460:	20 25       	eor	r18, r0
   1d462:	31 25       	eor	r19, r1
   1d464:	4a 27       	eor	r20, r26
   1d466:	58 f7       	brcc	.-42     	; 0x1d43e <sqrt+0x26>
   1d468:	66 0f       	add	r22, r22
   1d46a:	77 1f       	adc	r23, r23
   1d46c:	88 1f       	adc	r24, r24
   1d46e:	20 f0       	brcs	.+8      	; 0x1d478 <sqrt+0x60>
   1d470:	26 17       	cp	r18, r22
   1d472:	37 07       	cpc	r19, r23
   1d474:	48 07       	cpc	r20, r24
   1d476:	30 f4       	brcc	.+12     	; 0x1d484 <sqrt+0x6c>
   1d478:	62 0b       	sbc	r22, r18
   1d47a:	73 0b       	sbc	r23, r19
   1d47c:	84 0b       	sbc	r24, r20
   1d47e:	20 0d       	add	r18, r0
   1d480:	31 1d       	adc	r19, r1
   1d482:	41 1d       	adc	r20, r1
   1d484:	a0 95       	com	r26
   1d486:	81 f7       	brne	.-32     	; 0x1d468 <sqrt+0x50>
   1d488:	b9 01       	movw	r22, r18
   1d48a:	84 2f       	mov	r24, r20
   1d48c:	91 58       	subi	r25, 0x81	; 129
   1d48e:	88 0f       	add	r24, r24
   1d490:	96 95       	lsr	r25
   1d492:	87 95       	ror	r24
   1d494:	08 95       	ret

0001d496 <__unordsf2>:
   1d496:	0e 94 61 d2 	call	0x1a4c2	; 0x1a4c2 <__fp_cmp>
   1d49a:	88 0b       	sbc	r24, r24
   1d49c:	99 0b       	sbc	r25, r25
   1d49e:	08 95       	ret
   1d4a0:	29 f4       	brne	.+10     	; 0x1d4ac <__unordsf2+0x16>
   1d4a2:	16 f0       	brts	.+4      	; 0x1d4a8 <__unordsf2+0x12>
   1d4a4:	0c 94 85 d2 	jmp	0x1a50a	; 0x1a50a <__fp_inf>
   1d4a8:	0c 94 cf d2 	jmp	0x1a59e	; 0x1a59e <__fp_zero>
   1d4ac:	0c 94 8b d2 	jmp	0x1a516	; 0x1a516 <__fp_nan>

0001d4b0 <exp>:
   1d4b0:	0e 94 b5 d2 	call	0x1a56a	; 0x1a56a <__fp_splitA>
   1d4b4:	a8 f3       	brcs	.-22     	; 0x1d4a0 <__unordsf2+0xa>
   1d4b6:	96 38       	cpi	r25, 0x86	; 134
   1d4b8:	a0 f7       	brcc	.-24     	; 0x1d4a2 <__unordsf2+0xc>
   1d4ba:	07 f8       	bld	r0, 7
   1d4bc:	0f 92       	push	r0
   1d4be:	e8 94       	clt
   1d4c0:	2b e3       	ldi	r18, 0x3B	; 59
   1d4c2:	3a ea       	ldi	r19, 0xAA	; 170
   1d4c4:	48 eb       	ldi	r20, 0xB8	; 184
   1d4c6:	5f e7       	ldi	r21, 0x7F	; 127
   1d4c8:	0e 94 e8 d2 	call	0x1a5d0	; 0x1a5d0 <__mulsf3_pse>
   1d4cc:	0f 92       	push	r0
   1d4ce:	0f 92       	push	r0
   1d4d0:	0f 92       	push	r0
   1d4d2:	4d b7       	in	r20, 0x3d	; 61
   1d4d4:	5e b7       	in	r21, 0x3e	; 62
   1d4d6:	0f 92       	push	r0
   1d4d8:	e4 d0       	rcall	.+456    	; 0x1d6a2 <modf>
   1d4da:	e0 e3       	ldi	r30, 0x30	; 48
   1d4dc:	f2 e0       	ldi	r31, 0x02	; 2
   1d4de:	2b d0       	rcall	.+86     	; 0x1d536 <__fp_powser>
   1d4e0:	4f 91       	pop	r20
   1d4e2:	5f 91       	pop	r21
   1d4e4:	ef 91       	pop	r30
   1d4e6:	ff 91       	pop	r31
   1d4e8:	e5 95       	asr	r30
   1d4ea:	ee 1f       	adc	r30, r30
   1d4ec:	ff 1f       	adc	r31, r31
   1d4ee:	49 f0       	breq	.+18     	; 0x1d502 <exp+0x52>
   1d4f0:	fe 57       	subi	r31, 0x7E	; 126
   1d4f2:	e0 68       	ori	r30, 0x80	; 128
   1d4f4:	44 27       	eor	r20, r20
   1d4f6:	ee 0f       	add	r30, r30
   1d4f8:	44 1f       	adc	r20, r20
   1d4fa:	fa 95       	dec	r31
   1d4fc:	e1 f7       	brne	.-8      	; 0x1d4f6 <exp+0x46>
   1d4fe:	41 95       	neg	r20
   1d500:	55 0b       	sbc	r21, r21
   1d502:	4b d0       	rcall	.+150    	; 0x1d59a <ldexp>
   1d504:	0f 90       	pop	r0
   1d506:	07 fe       	sbrs	r0, 7
   1d508:	3d c0       	rjmp	.+122    	; 0x1d584 <inverse>
   1d50a:	08 95       	ret

0001d50c <__fp_mpack>:
   1d50c:	9f 3f       	cpi	r25, 0xFF	; 255
   1d50e:	31 f0       	breq	.+12     	; 0x1d51c <__fp_mpack_finite+0xc>

0001d510 <__fp_mpack_finite>:
   1d510:	91 50       	subi	r25, 0x01	; 1
   1d512:	20 f4       	brcc	.+8      	; 0x1d51c <__fp_mpack_finite+0xc>
   1d514:	87 95       	ror	r24
   1d516:	77 95       	ror	r23
   1d518:	67 95       	ror	r22
   1d51a:	b7 95       	ror	r27
   1d51c:	88 0f       	add	r24, r24
   1d51e:	91 1d       	adc	r25, r1
   1d520:	96 95       	lsr	r25
   1d522:	87 95       	ror	r24
   1d524:	97 f9       	bld	r25, 7
   1d526:	08 95       	ret

0001d528 <__fp_norm2>:
   1d528:	91 50       	subi	r25, 0x01	; 1
   1d52a:	50 40       	sbci	r21, 0x00	; 0
   1d52c:	66 0f       	add	r22, r22
   1d52e:	77 1f       	adc	r23, r23
   1d530:	88 1f       	adc	r24, r24
   1d532:	d2 f7       	brpl	.-12     	; 0x1d528 <__fp_norm2>
   1d534:	08 95       	ret

0001d536 <__fp_powser>:
   1d536:	df 93       	push	r29
   1d538:	cf 93       	push	r28
   1d53a:	1f 93       	push	r17
   1d53c:	0f 93       	push	r16
   1d53e:	ff 92       	push	r15
   1d540:	ef 92       	push	r14
   1d542:	df 92       	push	r13
   1d544:	7b 01       	movw	r14, r22
   1d546:	8c 01       	movw	r16, r24
   1d548:	68 94       	set
   1d54a:	06 c0       	rjmp	.+12     	; 0x1d558 <__fp_powser+0x22>
   1d54c:	da 2e       	mov	r13, r26
   1d54e:	ef 01       	movw	r28, r30
   1d550:	0e 94 e6 d2 	call	0x1a5cc	; 0x1a5cc <__mulsf3x>
   1d554:	fe 01       	movw	r30, r28
   1d556:	e8 94       	clt
   1d558:	a5 91       	lpm	r26, Z+
   1d55a:	25 91       	lpm	r18, Z+
   1d55c:	35 91       	lpm	r19, Z+
   1d55e:	45 91       	lpm	r20, Z+
   1d560:	55 91       	lpm	r21, Z+
   1d562:	a6 f3       	brts	.-24     	; 0x1d54c <__fp_powser+0x16>
   1d564:	ef 01       	movw	r28, r30
   1d566:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <__addsf3x>
   1d56a:	fe 01       	movw	r30, r28
   1d56c:	97 01       	movw	r18, r14
   1d56e:	a8 01       	movw	r20, r16
   1d570:	da 94       	dec	r13
   1d572:	69 f7       	brne	.-38     	; 0x1d54e <__fp_powser+0x18>
   1d574:	df 90       	pop	r13
   1d576:	ef 90       	pop	r14
   1d578:	ff 90       	pop	r15
   1d57a:	0f 91       	pop	r16
   1d57c:	1f 91       	pop	r17
   1d57e:	cf 91       	pop	r28
   1d580:	df 91       	pop	r29
   1d582:	08 95       	ret

0001d584 <inverse>:
   1d584:	9b 01       	movw	r18, r22
   1d586:	ac 01       	movw	r20, r24
   1d588:	60 e0       	ldi	r22, 0x00	; 0
   1d58a:	70 e0       	ldi	r23, 0x00	; 0
   1d58c:	80 e8       	ldi	r24, 0x80	; 128
   1d58e:	9f e3       	ldi	r25, 0x3F	; 63
   1d590:	0c 94 90 d1 	jmp	0x1a320	; 0x1a320 <__divsf3>
   1d594:	0c 94 85 d2 	jmp	0x1a50a	; 0x1a50a <__fp_inf>
   1d598:	b9 cf       	rjmp	.-142    	; 0x1d50c <__fp_mpack>

0001d59a <ldexp>:
   1d59a:	0e 94 b5 d2 	call	0x1a56a	; 0x1a56a <__fp_splitA>
   1d59e:	e0 f3       	brcs	.-8      	; 0x1d598 <inverse+0x14>
   1d5a0:	99 23       	and	r25, r25
   1d5a2:	d1 f3       	breq	.-12     	; 0x1d598 <inverse+0x14>
   1d5a4:	94 0f       	add	r25, r20
   1d5a6:	51 1d       	adc	r21, r1
   1d5a8:	ab f3       	brvs	.-22     	; 0x1d594 <inverse+0x10>
   1d5aa:	91 50       	subi	r25, 0x01	; 1
   1d5ac:	50 40       	sbci	r21, 0x00	; 0
   1d5ae:	94 f0       	brlt	.+36     	; 0x1d5d4 <ldexp+0x3a>
   1d5b0:	59 f0       	breq	.+22     	; 0x1d5c8 <ldexp+0x2e>
   1d5b2:	88 23       	and	r24, r24
   1d5b4:	32 f0       	brmi	.+12     	; 0x1d5c2 <ldexp+0x28>
   1d5b6:	66 0f       	add	r22, r22
   1d5b8:	77 1f       	adc	r23, r23
   1d5ba:	88 1f       	adc	r24, r24
   1d5bc:	91 50       	subi	r25, 0x01	; 1
   1d5be:	50 40       	sbci	r21, 0x00	; 0
   1d5c0:	c1 f7       	brne	.-16     	; 0x1d5b2 <ldexp+0x18>
   1d5c2:	9e 3f       	cpi	r25, 0xFE	; 254
   1d5c4:	51 05       	cpc	r21, r1
   1d5c6:	34 f7       	brge	.-52     	; 0x1d594 <inverse+0x10>
   1d5c8:	88 0f       	add	r24, r24
   1d5ca:	91 1d       	adc	r25, r1
   1d5cc:	96 95       	lsr	r25
   1d5ce:	87 95       	ror	r24
   1d5d0:	97 f9       	bld	r25, 7
   1d5d2:	08 95       	ret
   1d5d4:	5f 3f       	cpi	r21, 0xFF	; 255
   1d5d6:	ac f0       	brlt	.+42     	; 0x1d602 <ldexp+0x68>
   1d5d8:	98 3e       	cpi	r25, 0xE8	; 232
   1d5da:	9c f0       	brlt	.+38     	; 0x1d602 <ldexp+0x68>
   1d5dc:	bb 27       	eor	r27, r27
   1d5de:	86 95       	lsr	r24
   1d5e0:	77 95       	ror	r23
   1d5e2:	67 95       	ror	r22
   1d5e4:	b7 95       	ror	r27
   1d5e6:	08 f4       	brcc	.+2      	; 0x1d5ea <ldexp+0x50>
   1d5e8:	b1 60       	ori	r27, 0x01	; 1
   1d5ea:	93 95       	inc	r25
   1d5ec:	c1 f7       	brne	.-16     	; 0x1d5de <ldexp+0x44>
   1d5ee:	bb 0f       	add	r27, r27
   1d5f0:	58 f7       	brcc	.-42     	; 0x1d5c8 <ldexp+0x2e>
   1d5f2:	11 f4       	brne	.+4      	; 0x1d5f8 <ldexp+0x5e>
   1d5f4:	60 ff       	sbrs	r22, 0
   1d5f6:	e8 cf       	rjmp	.-48     	; 0x1d5c8 <ldexp+0x2e>
   1d5f8:	6f 5f       	subi	r22, 0xFF	; 255
   1d5fa:	7f 4f       	sbci	r23, 0xFF	; 255
   1d5fc:	8f 4f       	sbci	r24, 0xFF	; 255
   1d5fe:	9f 4f       	sbci	r25, 0xFF	; 255
   1d600:	e3 cf       	rjmp	.-58     	; 0x1d5c8 <ldexp+0x2e>
   1d602:	0c 94 d0 d2 	jmp	0x1a5a0	; 0x1a5a0 <__fp_szero>
   1d606:	0e f0       	brts	.+2      	; 0x1d60a <ldexp+0x70>
   1d608:	81 cf       	rjmp	.-254    	; 0x1d50c <__fp_mpack>
   1d60a:	0c 94 8b d2 	jmp	0x1a516	; 0x1a516 <__fp_nan>
   1d60e:	68 94       	set
   1d610:	0c 94 85 d2 	jmp	0x1a50a	; 0x1a50a <__fp_inf>

0001d614 <log>:
   1d614:	0e 94 b5 d2 	call	0x1a56a	; 0x1a56a <__fp_splitA>
   1d618:	b0 f3       	brcs	.-20     	; 0x1d606 <ldexp+0x6c>
   1d61a:	99 23       	and	r25, r25
   1d61c:	c1 f3       	breq	.-16     	; 0x1d60e <ldexp+0x74>
   1d61e:	ae f3       	brts	.-22     	; 0x1d60a <ldexp+0x70>
   1d620:	df 93       	push	r29
   1d622:	cf 93       	push	r28
   1d624:	1f 93       	push	r17
   1d626:	0f 93       	push	r16
   1d628:	ff 92       	push	r15
   1d62a:	c9 2f       	mov	r28, r25
   1d62c:	dd 27       	eor	r29, r29
   1d62e:	88 23       	and	r24, r24
   1d630:	2a f0       	brmi	.+10     	; 0x1d63c <log+0x28>
   1d632:	21 97       	sbiw	r28, 0x01	; 1
   1d634:	66 0f       	add	r22, r22
   1d636:	77 1f       	adc	r23, r23
   1d638:	88 1f       	adc	r24, r24
   1d63a:	da f7       	brpl	.-10     	; 0x1d632 <log+0x1e>
   1d63c:	20 e0       	ldi	r18, 0x00	; 0
   1d63e:	30 e0       	ldi	r19, 0x00	; 0
   1d640:	40 e8       	ldi	r20, 0x80	; 128
   1d642:	5f eb       	ldi	r21, 0xBF	; 191
   1d644:	9f e3       	ldi	r25, 0x3F	; 63
   1d646:	88 39       	cpi	r24, 0x98	; 152
   1d648:	20 f0       	brcs	.+8      	; 0x1d652 <log+0x3e>
   1d64a:	80 3e       	cpi	r24, 0xE0	; 224
   1d64c:	38 f0       	brcs	.+14     	; 0x1d65c <log+0x48>
   1d64e:	21 96       	adiw	r28, 0x01	; 1
   1d650:	8f 77       	andi	r24, 0x7F	; 127
   1d652:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   1d656:	e8 e5       	ldi	r30, 0x58	; 88
   1d658:	f2 e0       	ldi	r31, 0x02	; 2
   1d65a:	04 c0       	rjmp	.+8      	; 0x1d664 <log+0x50>
   1d65c:	0e 94 28 d1 	call	0x1a250	; 0x1a250 <__addsf3>
   1d660:	e5 e8       	ldi	r30, 0x85	; 133
   1d662:	f2 e0       	ldi	r31, 0x02	; 2
   1d664:	68 df       	rcall	.-304    	; 0x1d536 <__fp_powser>
   1d666:	8b 01       	movw	r16, r22
   1d668:	be 01       	movw	r22, r28
   1d66a:	ec 01       	movw	r28, r24
   1d66c:	fb 2e       	mov	r15, r27
   1d66e:	6f 57       	subi	r22, 0x7F	; 127
   1d670:	71 09       	sbc	r23, r1
   1d672:	75 95       	asr	r23
   1d674:	77 1f       	adc	r23, r23
   1d676:	88 0b       	sbc	r24, r24
   1d678:	99 0b       	sbc	r25, r25
   1d67a:	0e 94 26 d2 	call	0x1a44c	; 0x1a44c <__floatsisf>
   1d67e:	28 e1       	ldi	r18, 0x18	; 24
   1d680:	32 e7       	ldi	r19, 0x72	; 114
   1d682:	41 e3       	ldi	r20, 0x31	; 49
   1d684:	5f e3       	ldi	r21, 0x3F	; 63
   1d686:	0e 94 e6 d2 	call	0x1a5cc	; 0x1a5cc <__mulsf3x>
   1d68a:	af 2d       	mov	r26, r15
   1d68c:	98 01       	movw	r18, r16
   1d68e:	ae 01       	movw	r20, r28
   1d690:	ff 90       	pop	r15
   1d692:	0f 91       	pop	r16
   1d694:	1f 91       	pop	r17
   1d696:	cf 91       	pop	r28
   1d698:	df 91       	pop	r29
   1d69a:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <__addsf3x>
   1d69e:	0c 94 9c d2 	jmp	0x1a538	; 0x1a538 <__fp_round>

0001d6a2 <modf>:
   1d6a2:	fa 01       	movw	r30, r20
   1d6a4:	dc 01       	movw	r26, r24
   1d6a6:	aa 0f       	add	r26, r26
   1d6a8:	bb 1f       	adc	r27, r27
   1d6aa:	9b 01       	movw	r18, r22
   1d6ac:	ac 01       	movw	r20, r24
   1d6ae:	bf 57       	subi	r27, 0x7F	; 127
   1d6b0:	28 f4       	brcc	.+10     	; 0x1d6bc <modf+0x1a>
   1d6b2:	22 27       	eor	r18, r18
   1d6b4:	33 27       	eor	r19, r19
   1d6b6:	44 27       	eor	r20, r20
   1d6b8:	50 78       	andi	r21, 0x80	; 128
   1d6ba:	20 c0       	rjmp	.+64     	; 0x1d6fc <modf+0x5a>
   1d6bc:	b7 51       	subi	r27, 0x17	; 23
   1d6be:	90 f4       	brcc	.+36     	; 0x1d6e4 <modf+0x42>
   1d6c0:	ab 2f       	mov	r26, r27
   1d6c2:	00 24       	eor	r0, r0
   1d6c4:	46 95       	lsr	r20
   1d6c6:	37 95       	ror	r19
   1d6c8:	27 95       	ror	r18
   1d6ca:	01 1c       	adc	r0, r1
   1d6cc:	a3 95       	inc	r26
   1d6ce:	d2 f3       	brmi	.-12     	; 0x1d6c4 <modf+0x22>
   1d6d0:	00 20       	and	r0, r0
   1d6d2:	71 f0       	breq	.+28     	; 0x1d6f0 <modf+0x4e>
   1d6d4:	22 0f       	add	r18, r18
   1d6d6:	33 1f       	adc	r19, r19
   1d6d8:	44 1f       	adc	r20, r20
   1d6da:	b3 95       	inc	r27
   1d6dc:	da f3       	brmi	.-10     	; 0x1d6d4 <modf+0x32>
   1d6de:	0e d0       	rcall	.+28     	; 0x1d6fc <modf+0x5a>
   1d6e0:	0c 94 27 d1 	jmp	0x1a24e	; 0x1a24e <__subsf3>
   1d6e4:	61 30       	cpi	r22, 0x01	; 1
   1d6e6:	71 05       	cpc	r23, r1
   1d6e8:	a0 e8       	ldi	r26, 0x80	; 128
   1d6ea:	8a 07       	cpc	r24, r26
   1d6ec:	b9 46       	sbci	r27, 0x69	; 105
   1d6ee:	30 f4       	brcc	.+12     	; 0x1d6fc <modf+0x5a>
   1d6f0:	9b 01       	movw	r18, r22
   1d6f2:	ac 01       	movw	r20, r24
   1d6f4:	66 27       	eor	r22, r22
   1d6f6:	77 27       	eor	r23, r23
   1d6f8:	88 27       	eor	r24, r24
   1d6fa:	90 78       	andi	r25, 0x80	; 128
   1d6fc:	30 96       	adiw	r30, 0x00	; 0
   1d6fe:	21 f0       	breq	.+8      	; 0x1d708 <modf+0x66>
   1d700:	20 83       	st	Z, r18
   1d702:	31 83       	std	Z+1, r19	; 0x01
   1d704:	42 83       	std	Z+2, r20	; 0x02
   1d706:	53 83       	std	Z+3, r21	; 0x03
   1d708:	08 95       	ret

0001d70a <__udivmodqi4>:
   1d70a:	99 1b       	sub	r25, r25
   1d70c:	79 e0       	ldi	r23, 0x09	; 9
   1d70e:	04 c0       	rjmp	.+8      	; 0x1d718 <__udivmodqi4_ep>

0001d710 <__udivmodqi4_loop>:
   1d710:	99 1f       	adc	r25, r25
   1d712:	96 17       	cp	r25, r22
   1d714:	08 f0       	brcs	.+2      	; 0x1d718 <__udivmodqi4_ep>
   1d716:	96 1b       	sub	r25, r22

0001d718 <__udivmodqi4_ep>:
   1d718:	88 1f       	adc	r24, r24
   1d71a:	7a 95       	dec	r23
   1d71c:	c9 f7       	brne	.-14     	; 0x1d710 <__udivmodqi4_loop>
   1d71e:	80 95       	com	r24
   1d720:	08 95       	ret

0001d722 <__udivmodhi4>:
   1d722:	aa 1b       	sub	r26, r26
   1d724:	bb 1b       	sub	r27, r27
   1d726:	51 e1       	ldi	r21, 0x11	; 17
   1d728:	07 c0       	rjmp	.+14     	; 0x1d738 <__udivmodhi4_ep>

0001d72a <__udivmodhi4_loop>:
   1d72a:	aa 1f       	adc	r26, r26
   1d72c:	bb 1f       	adc	r27, r27
   1d72e:	a6 17       	cp	r26, r22
   1d730:	b7 07       	cpc	r27, r23
   1d732:	10 f0       	brcs	.+4      	; 0x1d738 <__udivmodhi4_ep>
   1d734:	a6 1b       	sub	r26, r22
   1d736:	b7 0b       	sbc	r27, r23

0001d738 <__udivmodhi4_ep>:
   1d738:	88 1f       	adc	r24, r24
   1d73a:	99 1f       	adc	r25, r25
   1d73c:	5a 95       	dec	r21
   1d73e:	a9 f7       	brne	.-22     	; 0x1d72a <__udivmodhi4_loop>
   1d740:	80 95       	com	r24
   1d742:	90 95       	com	r25
   1d744:	bc 01       	movw	r22, r24
   1d746:	cd 01       	movw	r24, r26
   1d748:	08 95       	ret

0001d74a <__divmodhi4>:
   1d74a:	97 fb       	bst	r25, 7
   1d74c:	07 2e       	mov	r0, r23
   1d74e:	16 f4       	brtc	.+4      	; 0x1d754 <__divmodhi4+0xa>
   1d750:	00 94       	com	r0
   1d752:	06 d0       	rcall	.+12     	; 0x1d760 <__divmodhi4_neg1>
   1d754:	77 fd       	sbrc	r23, 7
   1d756:	08 d0       	rcall	.+16     	; 0x1d768 <__divmodhi4_neg2>
   1d758:	e4 df       	rcall	.-56     	; 0x1d722 <__udivmodhi4>
   1d75a:	07 fc       	sbrc	r0, 7
   1d75c:	05 d0       	rcall	.+10     	; 0x1d768 <__divmodhi4_neg2>
   1d75e:	3e f4       	brtc	.+14     	; 0x1d76e <__divmodhi4_exit>

0001d760 <__divmodhi4_neg1>:
   1d760:	90 95       	com	r25
   1d762:	81 95       	neg	r24
   1d764:	9f 4f       	sbci	r25, 0xFF	; 255
   1d766:	08 95       	ret

0001d768 <__divmodhi4_neg2>:
   1d768:	70 95       	com	r23
   1d76a:	61 95       	neg	r22
   1d76c:	7f 4f       	sbci	r23, 0xFF	; 255

0001d76e <__divmodhi4_exit>:
   1d76e:	08 95       	ret

0001d770 <__udivmodsi4>:
   1d770:	a1 e2       	ldi	r26, 0x21	; 33
   1d772:	1a 2e       	mov	r1, r26
   1d774:	aa 1b       	sub	r26, r26
   1d776:	bb 1b       	sub	r27, r27
   1d778:	fd 01       	movw	r30, r26
   1d77a:	0d c0       	rjmp	.+26     	; 0x1d796 <__udivmodsi4_ep>

0001d77c <__udivmodsi4_loop>:
   1d77c:	aa 1f       	adc	r26, r26
   1d77e:	bb 1f       	adc	r27, r27
   1d780:	ee 1f       	adc	r30, r30
   1d782:	ff 1f       	adc	r31, r31
   1d784:	a2 17       	cp	r26, r18
   1d786:	b3 07       	cpc	r27, r19
   1d788:	e4 07       	cpc	r30, r20
   1d78a:	f5 07       	cpc	r31, r21
   1d78c:	20 f0       	brcs	.+8      	; 0x1d796 <__udivmodsi4_ep>
   1d78e:	a2 1b       	sub	r26, r18
   1d790:	b3 0b       	sbc	r27, r19
   1d792:	e4 0b       	sbc	r30, r20
   1d794:	f5 0b       	sbc	r31, r21

0001d796 <__udivmodsi4_ep>:
   1d796:	66 1f       	adc	r22, r22
   1d798:	77 1f       	adc	r23, r23
   1d79a:	88 1f       	adc	r24, r24
   1d79c:	99 1f       	adc	r25, r25
   1d79e:	1a 94       	dec	r1
   1d7a0:	69 f7       	brne	.-38     	; 0x1d77c <__udivmodsi4_loop>
   1d7a2:	60 95       	com	r22
   1d7a4:	70 95       	com	r23
   1d7a6:	80 95       	com	r24
   1d7a8:	90 95       	com	r25
   1d7aa:	9b 01       	movw	r18, r22
   1d7ac:	ac 01       	movw	r20, r24
   1d7ae:	bd 01       	movw	r22, r26
   1d7b0:	cf 01       	movw	r24, r30
   1d7b2:	08 95       	ret

0001d7b4 <__divmodsi4>:
   1d7b4:	05 2e       	mov	r0, r21
   1d7b6:	97 fb       	bst	r25, 7
   1d7b8:	16 f4       	brtc	.+4      	; 0x1d7be <__divmodsi4+0xa>
   1d7ba:	00 94       	com	r0
   1d7bc:	0f d0       	rcall	.+30     	; 0x1d7dc <__negsi2>
   1d7be:	57 fd       	sbrc	r21, 7
   1d7c0:	05 d0       	rcall	.+10     	; 0x1d7cc <__divmodsi4_neg2>
   1d7c2:	d6 df       	rcall	.-84     	; 0x1d770 <__udivmodsi4>
   1d7c4:	07 fc       	sbrc	r0, 7
   1d7c6:	02 d0       	rcall	.+4      	; 0x1d7cc <__divmodsi4_neg2>
   1d7c8:	46 f4       	brtc	.+16     	; 0x1d7da <__divmodsi4_exit>
   1d7ca:	08 c0       	rjmp	.+16     	; 0x1d7dc <__negsi2>

0001d7cc <__divmodsi4_neg2>:
   1d7cc:	50 95       	com	r21
   1d7ce:	40 95       	com	r20
   1d7d0:	30 95       	com	r19
   1d7d2:	21 95       	neg	r18
   1d7d4:	3f 4f       	sbci	r19, 0xFF	; 255
   1d7d6:	4f 4f       	sbci	r20, 0xFF	; 255
   1d7d8:	5f 4f       	sbci	r21, 0xFF	; 255

0001d7da <__divmodsi4_exit>:
   1d7da:	08 95       	ret

0001d7dc <__negsi2>:
   1d7dc:	90 95       	com	r25
   1d7de:	80 95       	com	r24
   1d7e0:	70 95       	com	r23
   1d7e2:	61 95       	neg	r22
   1d7e4:	7f 4f       	sbci	r23, 0xFF	; 255
   1d7e6:	8f 4f       	sbci	r24, 0xFF	; 255
   1d7e8:	9f 4f       	sbci	r25, 0xFF	; 255
   1d7ea:	08 95       	ret

0001d7ec <__tablejump2__>:
   1d7ec:	ee 0f       	add	r30, r30
   1d7ee:	ff 1f       	adc	r31, r31
   1d7f0:	88 1f       	adc	r24, r24
   1d7f2:	8b bf       	out	0x3b, r24	; 59
   1d7f4:	07 90       	elpm	r0, Z+
   1d7f6:	f6 91       	elpm	r31, Z
   1d7f8:	e0 2d       	mov	r30, r0
   1d7fa:	19 94       	eijmp

0001d7fc <__umulhisi3>:
   1d7fc:	a2 9f       	mul	r26, r18
   1d7fe:	b0 01       	movw	r22, r0
   1d800:	b3 9f       	mul	r27, r19
   1d802:	c0 01       	movw	r24, r0
   1d804:	a3 9f       	mul	r26, r19
   1d806:	70 0d       	add	r23, r0
   1d808:	81 1d       	adc	r24, r1
   1d80a:	11 24       	eor	r1, r1
   1d80c:	91 1d       	adc	r25, r1
   1d80e:	b2 9f       	mul	r27, r18
   1d810:	70 0d       	add	r23, r0
   1d812:	81 1d       	adc	r24, r1
   1d814:	11 24       	eor	r1, r1
   1d816:	91 1d       	adc	r25, r1
   1d818:	08 95       	ret

0001d81a <__muluhisi3>:
   1d81a:	f0 df       	rcall	.-32     	; 0x1d7fc <__umulhisi3>
   1d81c:	a5 9f       	mul	r26, r21
   1d81e:	90 0d       	add	r25, r0
   1d820:	b4 9f       	mul	r27, r20
   1d822:	90 0d       	add	r25, r0
   1d824:	a4 9f       	mul	r26, r20
   1d826:	80 0d       	add	r24, r0
   1d828:	91 1d       	adc	r25, r1
   1d82a:	11 24       	eor	r1, r1
   1d82c:	08 95       	ret

0001d82e <__cmpdi2_s8>:
   1d82e:	00 24       	eor	r0, r0
   1d830:	a7 fd       	sbrc	r26, 7
   1d832:	00 94       	com	r0
   1d834:	2a 17       	cp	r18, r26
   1d836:	30 05       	cpc	r19, r0
   1d838:	40 05       	cpc	r20, r0
   1d83a:	50 05       	cpc	r21, r0
   1d83c:	60 05       	cpc	r22, r0
   1d83e:	70 05       	cpc	r23, r0
   1d840:	80 05       	cpc	r24, r0
   1d842:	90 05       	cpc	r25, r0
   1d844:	08 95       	ret

0001d846 <malloc>:
   1d846:	0f 93       	push	r16
   1d848:	1f 93       	push	r17
   1d84a:	cf 93       	push	r28
   1d84c:	df 93       	push	r29
   1d84e:	82 30       	cpi	r24, 0x02	; 2
   1d850:	91 05       	cpc	r25, r1
   1d852:	10 f4       	brcc	.+4      	; 0x1d858 <malloc+0x12>
   1d854:	82 e0       	ldi	r24, 0x02	; 2
   1d856:	90 e0       	ldi	r25, 0x00	; 0
   1d858:	e0 91 27 19 	lds	r30, 0x1927	; 0x801927 <__flp>
   1d85c:	f0 91 28 19 	lds	r31, 0x1928	; 0x801928 <__flp+0x1>
   1d860:	20 e0       	ldi	r18, 0x00	; 0
   1d862:	30 e0       	ldi	r19, 0x00	; 0
   1d864:	a0 e0       	ldi	r26, 0x00	; 0
   1d866:	b0 e0       	ldi	r27, 0x00	; 0
   1d868:	30 97       	sbiw	r30, 0x00	; 0
   1d86a:	19 f1       	breq	.+70     	; 0x1d8b2 <malloc+0x6c>
   1d86c:	40 81       	ld	r20, Z
   1d86e:	51 81       	ldd	r21, Z+1	; 0x01
   1d870:	02 81       	ldd	r16, Z+2	; 0x02
   1d872:	13 81       	ldd	r17, Z+3	; 0x03
   1d874:	48 17       	cp	r20, r24
   1d876:	59 07       	cpc	r21, r25
   1d878:	c8 f0       	brcs	.+50     	; 0x1d8ac <malloc+0x66>
   1d87a:	84 17       	cp	r24, r20
   1d87c:	95 07       	cpc	r25, r21
   1d87e:	69 f4       	brne	.+26     	; 0x1d89a <malloc+0x54>
   1d880:	10 97       	sbiw	r26, 0x00	; 0
   1d882:	31 f0       	breq	.+12     	; 0x1d890 <malloc+0x4a>
   1d884:	12 96       	adiw	r26, 0x02	; 2
   1d886:	0c 93       	st	X, r16
   1d888:	12 97       	sbiw	r26, 0x02	; 2
   1d88a:	13 96       	adiw	r26, 0x03	; 3
   1d88c:	1c 93       	st	X, r17
   1d88e:	27 c0       	rjmp	.+78     	; 0x1d8de <malloc+0x98>
   1d890:	00 93 27 19 	sts	0x1927, r16	; 0x801927 <__flp>
   1d894:	10 93 28 19 	sts	0x1928, r17	; 0x801928 <__flp+0x1>
   1d898:	22 c0       	rjmp	.+68     	; 0x1d8de <malloc+0x98>
   1d89a:	21 15       	cp	r18, r1
   1d89c:	31 05       	cpc	r19, r1
   1d89e:	19 f0       	breq	.+6      	; 0x1d8a6 <malloc+0x60>
   1d8a0:	42 17       	cp	r20, r18
   1d8a2:	53 07       	cpc	r21, r19
   1d8a4:	18 f4       	brcc	.+6      	; 0x1d8ac <malloc+0x66>
   1d8a6:	9a 01       	movw	r18, r20
   1d8a8:	bd 01       	movw	r22, r26
   1d8aa:	ef 01       	movw	r28, r30
   1d8ac:	df 01       	movw	r26, r30
   1d8ae:	f8 01       	movw	r30, r16
   1d8b0:	db cf       	rjmp	.-74     	; 0x1d868 <malloc+0x22>
   1d8b2:	21 15       	cp	r18, r1
   1d8b4:	31 05       	cpc	r19, r1
   1d8b6:	f9 f0       	breq	.+62     	; 0x1d8f6 <malloc+0xb0>
   1d8b8:	28 1b       	sub	r18, r24
   1d8ba:	39 0b       	sbc	r19, r25
   1d8bc:	24 30       	cpi	r18, 0x04	; 4
   1d8be:	31 05       	cpc	r19, r1
   1d8c0:	80 f4       	brcc	.+32     	; 0x1d8e2 <malloc+0x9c>
   1d8c2:	8a 81       	ldd	r24, Y+2	; 0x02
   1d8c4:	9b 81       	ldd	r25, Y+3	; 0x03
   1d8c6:	61 15       	cp	r22, r1
   1d8c8:	71 05       	cpc	r23, r1
   1d8ca:	21 f0       	breq	.+8      	; 0x1d8d4 <malloc+0x8e>
   1d8cc:	fb 01       	movw	r30, r22
   1d8ce:	93 83       	std	Z+3, r25	; 0x03
   1d8d0:	82 83       	std	Z+2, r24	; 0x02
   1d8d2:	04 c0       	rjmp	.+8      	; 0x1d8dc <malloc+0x96>
   1d8d4:	90 93 28 19 	sts	0x1928, r25	; 0x801928 <__flp+0x1>
   1d8d8:	80 93 27 19 	sts	0x1927, r24	; 0x801927 <__flp>
   1d8dc:	fe 01       	movw	r30, r28
   1d8de:	32 96       	adiw	r30, 0x02	; 2
   1d8e0:	44 c0       	rjmp	.+136    	; 0x1d96a <malloc+0x124>
   1d8e2:	fe 01       	movw	r30, r28
   1d8e4:	e2 0f       	add	r30, r18
   1d8e6:	f3 1f       	adc	r31, r19
   1d8e8:	81 93       	st	Z+, r24
   1d8ea:	91 93       	st	Z+, r25
   1d8ec:	22 50       	subi	r18, 0x02	; 2
   1d8ee:	31 09       	sbc	r19, r1
   1d8f0:	39 83       	std	Y+1, r19	; 0x01
   1d8f2:	28 83       	st	Y, r18
   1d8f4:	3a c0       	rjmp	.+116    	; 0x1d96a <malloc+0x124>
   1d8f6:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d8fa:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d8fe:	23 2b       	or	r18, r19
   1d900:	41 f4       	brne	.+16     	; 0x1d912 <malloc+0xcc>
   1d902:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d906:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d90a:	30 93 26 19 	sts	0x1926, r19	; 0x801926 <__brkval+0x1>
   1d90e:	20 93 25 19 	sts	0x1925, r18	; 0x801925 <__brkval>
   1d912:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
   1d916:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
   1d91a:	21 15       	cp	r18, r1
   1d91c:	31 05       	cpc	r19, r1
   1d91e:	41 f4       	brne	.+16     	; 0x1d930 <malloc+0xea>
   1d920:	2d b7       	in	r18, 0x3d	; 61
   1d922:	3e b7       	in	r19, 0x3e	; 62
   1d924:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d928:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d92c:	24 1b       	sub	r18, r20
   1d92e:	35 0b       	sbc	r19, r21
   1d930:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <__brkval>
   1d934:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <__brkval+0x1>
   1d938:	e2 17       	cp	r30, r18
   1d93a:	f3 07       	cpc	r31, r19
   1d93c:	a0 f4       	brcc	.+40     	; 0x1d966 <malloc+0x120>
   1d93e:	2e 1b       	sub	r18, r30
   1d940:	3f 0b       	sbc	r19, r31
   1d942:	28 17       	cp	r18, r24
   1d944:	39 07       	cpc	r19, r25
   1d946:	78 f0       	brcs	.+30     	; 0x1d966 <malloc+0x120>
   1d948:	ac 01       	movw	r20, r24
   1d94a:	4e 5f       	subi	r20, 0xFE	; 254
   1d94c:	5f 4f       	sbci	r21, 0xFF	; 255
   1d94e:	24 17       	cp	r18, r20
   1d950:	35 07       	cpc	r19, r21
   1d952:	48 f0       	brcs	.+18     	; 0x1d966 <malloc+0x120>
   1d954:	4e 0f       	add	r20, r30
   1d956:	5f 1f       	adc	r21, r31
   1d958:	50 93 26 19 	sts	0x1926, r21	; 0x801926 <__brkval+0x1>
   1d95c:	40 93 25 19 	sts	0x1925, r20	; 0x801925 <__brkval>
   1d960:	81 93       	st	Z+, r24
   1d962:	91 93       	st	Z+, r25
   1d964:	02 c0       	rjmp	.+4      	; 0x1d96a <malloc+0x124>
   1d966:	e0 e0       	ldi	r30, 0x00	; 0
   1d968:	f0 e0       	ldi	r31, 0x00	; 0
   1d96a:	cf 01       	movw	r24, r30
   1d96c:	df 91       	pop	r29
   1d96e:	cf 91       	pop	r28
   1d970:	1f 91       	pop	r17
   1d972:	0f 91       	pop	r16
   1d974:	08 95       	ret

0001d976 <free>:
   1d976:	cf 93       	push	r28
   1d978:	df 93       	push	r29
   1d97a:	00 97       	sbiw	r24, 0x00	; 0
   1d97c:	09 f4       	brne	.+2      	; 0x1d980 <free+0xa>
   1d97e:	81 c0       	rjmp	.+258    	; 0x1da82 <free+0x10c>
   1d980:	fc 01       	movw	r30, r24
   1d982:	32 97       	sbiw	r30, 0x02	; 2
   1d984:	13 82       	std	Z+3, r1	; 0x03
   1d986:	12 82       	std	Z+2, r1	; 0x02
   1d988:	a0 91 27 19 	lds	r26, 0x1927	; 0x801927 <__flp>
   1d98c:	b0 91 28 19 	lds	r27, 0x1928	; 0x801928 <__flp+0x1>
   1d990:	10 97       	sbiw	r26, 0x00	; 0
   1d992:	81 f4       	brne	.+32     	; 0x1d9b4 <free+0x3e>
   1d994:	20 81       	ld	r18, Z
   1d996:	31 81       	ldd	r19, Z+1	; 0x01
   1d998:	82 0f       	add	r24, r18
   1d99a:	93 1f       	adc	r25, r19
   1d99c:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d9a0:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d9a4:	28 17       	cp	r18, r24
   1d9a6:	39 07       	cpc	r19, r25
   1d9a8:	51 f5       	brne	.+84     	; 0x1d9fe <free+0x88>
   1d9aa:	f0 93 26 19 	sts	0x1926, r31	; 0x801926 <__brkval+0x1>
   1d9ae:	e0 93 25 19 	sts	0x1925, r30	; 0x801925 <__brkval>
   1d9b2:	67 c0       	rjmp	.+206    	; 0x1da82 <free+0x10c>
   1d9b4:	ed 01       	movw	r28, r26
   1d9b6:	20 e0       	ldi	r18, 0x00	; 0
   1d9b8:	30 e0       	ldi	r19, 0x00	; 0
   1d9ba:	ce 17       	cp	r28, r30
   1d9bc:	df 07       	cpc	r29, r31
   1d9be:	40 f4       	brcc	.+16     	; 0x1d9d0 <free+0x5a>
   1d9c0:	4a 81       	ldd	r20, Y+2	; 0x02
   1d9c2:	5b 81       	ldd	r21, Y+3	; 0x03
   1d9c4:	9e 01       	movw	r18, r28
   1d9c6:	41 15       	cp	r20, r1
   1d9c8:	51 05       	cpc	r21, r1
   1d9ca:	f1 f0       	breq	.+60     	; 0x1da08 <free+0x92>
   1d9cc:	ea 01       	movw	r28, r20
   1d9ce:	f5 cf       	rjmp	.-22     	; 0x1d9ba <free+0x44>
   1d9d0:	d3 83       	std	Z+3, r29	; 0x03
   1d9d2:	c2 83       	std	Z+2, r28	; 0x02
   1d9d4:	40 81       	ld	r20, Z
   1d9d6:	51 81       	ldd	r21, Z+1	; 0x01
   1d9d8:	84 0f       	add	r24, r20
   1d9da:	95 1f       	adc	r25, r21
   1d9dc:	c8 17       	cp	r28, r24
   1d9de:	d9 07       	cpc	r29, r25
   1d9e0:	59 f4       	brne	.+22     	; 0x1d9f8 <free+0x82>
   1d9e2:	88 81       	ld	r24, Y
   1d9e4:	99 81       	ldd	r25, Y+1	; 0x01
   1d9e6:	84 0f       	add	r24, r20
   1d9e8:	95 1f       	adc	r25, r21
   1d9ea:	02 96       	adiw	r24, 0x02	; 2
   1d9ec:	91 83       	std	Z+1, r25	; 0x01
   1d9ee:	80 83       	st	Z, r24
   1d9f0:	8a 81       	ldd	r24, Y+2	; 0x02
   1d9f2:	9b 81       	ldd	r25, Y+3	; 0x03
   1d9f4:	93 83       	std	Z+3, r25	; 0x03
   1d9f6:	82 83       	std	Z+2, r24	; 0x02
   1d9f8:	21 15       	cp	r18, r1
   1d9fa:	31 05       	cpc	r19, r1
   1d9fc:	29 f4       	brne	.+10     	; 0x1da08 <free+0x92>
   1d9fe:	f0 93 28 19 	sts	0x1928, r31	; 0x801928 <__flp+0x1>
   1da02:	e0 93 27 19 	sts	0x1927, r30	; 0x801927 <__flp>
   1da06:	3d c0       	rjmp	.+122    	; 0x1da82 <free+0x10c>
   1da08:	e9 01       	movw	r28, r18
   1da0a:	fb 83       	std	Y+3, r31	; 0x03
   1da0c:	ea 83       	std	Y+2, r30	; 0x02
   1da0e:	49 91       	ld	r20, Y+
   1da10:	59 91       	ld	r21, Y+
   1da12:	c4 0f       	add	r28, r20
   1da14:	d5 1f       	adc	r29, r21
   1da16:	ec 17       	cp	r30, r28
   1da18:	fd 07       	cpc	r31, r29
   1da1a:	61 f4       	brne	.+24     	; 0x1da34 <free+0xbe>
   1da1c:	80 81       	ld	r24, Z
   1da1e:	91 81       	ldd	r25, Z+1	; 0x01
   1da20:	84 0f       	add	r24, r20
   1da22:	95 1f       	adc	r25, r21
   1da24:	02 96       	adiw	r24, 0x02	; 2
   1da26:	e9 01       	movw	r28, r18
   1da28:	99 83       	std	Y+1, r25	; 0x01
   1da2a:	88 83       	st	Y, r24
   1da2c:	82 81       	ldd	r24, Z+2	; 0x02
   1da2e:	93 81       	ldd	r25, Z+3	; 0x03
   1da30:	9b 83       	std	Y+3, r25	; 0x03
   1da32:	8a 83       	std	Y+2, r24	; 0x02
   1da34:	e0 e0       	ldi	r30, 0x00	; 0
   1da36:	f0 e0       	ldi	r31, 0x00	; 0
   1da38:	12 96       	adiw	r26, 0x02	; 2
   1da3a:	8d 91       	ld	r24, X+
   1da3c:	9c 91       	ld	r25, X
   1da3e:	13 97       	sbiw	r26, 0x03	; 3
   1da40:	00 97       	sbiw	r24, 0x00	; 0
   1da42:	19 f0       	breq	.+6      	; 0x1da4a <free+0xd4>
   1da44:	fd 01       	movw	r30, r26
   1da46:	dc 01       	movw	r26, r24
   1da48:	f7 cf       	rjmp	.-18     	; 0x1da38 <free+0xc2>
   1da4a:	8d 91       	ld	r24, X+
   1da4c:	9c 91       	ld	r25, X
   1da4e:	11 97       	sbiw	r26, 0x01	; 1
   1da50:	9d 01       	movw	r18, r26
   1da52:	2e 5f       	subi	r18, 0xFE	; 254
   1da54:	3f 4f       	sbci	r19, 0xFF	; 255
   1da56:	82 0f       	add	r24, r18
   1da58:	93 1f       	adc	r25, r19
   1da5a:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1da5e:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1da62:	28 17       	cp	r18, r24
   1da64:	39 07       	cpc	r19, r25
   1da66:	69 f4       	brne	.+26     	; 0x1da82 <free+0x10c>
   1da68:	30 97       	sbiw	r30, 0x00	; 0
   1da6a:	29 f4       	brne	.+10     	; 0x1da76 <free+0x100>
   1da6c:	10 92 28 19 	sts	0x1928, r1	; 0x801928 <__flp+0x1>
   1da70:	10 92 27 19 	sts	0x1927, r1	; 0x801927 <__flp>
   1da74:	02 c0       	rjmp	.+4      	; 0x1da7a <free+0x104>
   1da76:	13 82       	std	Z+3, r1	; 0x03
   1da78:	12 82       	std	Z+2, r1	; 0x02
   1da7a:	b0 93 26 19 	sts	0x1926, r27	; 0x801926 <__brkval+0x1>
   1da7e:	a0 93 25 19 	sts	0x1925, r26	; 0x801925 <__brkval>
   1da82:	df 91       	pop	r29
   1da84:	cf 91       	pop	r28
   1da86:	08 95       	ret

0001da88 <random_r>:
   1da88:	8f 92       	push	r8
   1da8a:	9f 92       	push	r9
   1da8c:	af 92       	push	r10
   1da8e:	bf 92       	push	r11
   1da90:	cf 92       	push	r12
   1da92:	df 92       	push	r13
   1da94:	ef 92       	push	r14
   1da96:	ff 92       	push	r15
   1da98:	cf 93       	push	r28
   1da9a:	df 93       	push	r29
   1da9c:	ec 01       	movw	r28, r24
   1da9e:	68 81       	ld	r22, Y
   1daa0:	79 81       	ldd	r23, Y+1	; 0x01
   1daa2:	8a 81       	ldd	r24, Y+2	; 0x02
   1daa4:	9b 81       	ldd	r25, Y+3	; 0x03
   1daa6:	61 15       	cp	r22, r1
   1daa8:	71 05       	cpc	r23, r1
   1daaa:	81 05       	cpc	r24, r1
   1daac:	91 05       	cpc	r25, r1
   1daae:	21 f4       	brne	.+8      	; 0x1dab8 <random_r+0x30>
   1dab0:	64 e2       	ldi	r22, 0x24	; 36
   1dab2:	79 ed       	ldi	r23, 0xD9	; 217
   1dab4:	8b e5       	ldi	r24, 0x5B	; 91
   1dab6:	97 e0       	ldi	r25, 0x07	; 7
   1dab8:	2d e1       	ldi	r18, 0x1D	; 29
   1daba:	33 ef       	ldi	r19, 0xF3	; 243
   1dabc:	41 e0       	ldi	r20, 0x01	; 1
   1dabe:	50 e0       	ldi	r21, 0x00	; 0
   1dac0:	79 de       	rcall	.-782    	; 0x1d7b4 <__divmodsi4>
   1dac2:	49 01       	movw	r8, r18
   1dac4:	5a 01       	movw	r10, r20
   1dac6:	9b 01       	movw	r18, r22
   1dac8:	ac 01       	movw	r20, r24
   1daca:	a7 ea       	ldi	r26, 0xA7	; 167
   1dacc:	b1 e4       	ldi	r27, 0x41	; 65
   1dace:	a5 de       	rcall	.-694    	; 0x1d81a <__muluhisi3>
   1dad0:	6b 01       	movw	r12, r22
   1dad2:	7c 01       	movw	r14, r24
   1dad4:	ac ee       	ldi	r26, 0xEC	; 236
   1dad6:	b4 ef       	ldi	r27, 0xF4	; 244
   1dad8:	a5 01       	movw	r20, r10
   1dada:	94 01       	movw	r18, r8
   1dadc:	bd d3       	rcall	.+1914   	; 0x1e258 <__mulohisi3>
   1dade:	dc 01       	movw	r26, r24
   1dae0:	cb 01       	movw	r24, r22
   1dae2:	8c 0d       	add	r24, r12
   1dae4:	9d 1d       	adc	r25, r13
   1dae6:	ae 1d       	adc	r26, r14
   1dae8:	bf 1d       	adc	r27, r15
   1daea:	b7 ff       	sbrs	r27, 7
   1daec:	03 c0       	rjmp	.+6      	; 0x1daf4 <random_r+0x6c>
   1daee:	01 97       	sbiw	r24, 0x01	; 1
   1daf0:	a1 09       	sbc	r26, r1
   1daf2:	b0 48       	sbci	r27, 0x80	; 128
   1daf4:	88 83       	st	Y, r24
   1daf6:	99 83       	std	Y+1, r25	; 0x01
   1daf8:	aa 83       	std	Y+2, r26	; 0x02
   1dafa:	bb 83       	std	Y+3, r27	; 0x03
   1dafc:	bc 01       	movw	r22, r24
   1dafe:	cd 01       	movw	r24, r26
   1db00:	9f 77       	andi	r25, 0x7F	; 127
   1db02:	df 91       	pop	r29
   1db04:	cf 91       	pop	r28
   1db06:	ff 90       	pop	r15
   1db08:	ef 90       	pop	r14
   1db0a:	df 90       	pop	r13
   1db0c:	cf 90       	pop	r12
   1db0e:	bf 90       	pop	r11
   1db10:	af 90       	pop	r10
   1db12:	9f 90       	pop	r9
   1db14:	8f 90       	pop	r8
   1db16:	08 95       	ret

0001db18 <random>:
   1db18:	8f 92       	push	r8
   1db1a:	9f 92       	push	r9
   1db1c:	af 92       	push	r10
   1db1e:	bf 92       	push	r11
   1db20:	cf 92       	push	r12
   1db22:	df 92       	push	r13
   1db24:	ef 92       	push	r14
   1db26:	ff 92       	push	r15
   1db28:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1db2c:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1db30:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1db34:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1db38:	61 15       	cp	r22, r1
   1db3a:	71 05       	cpc	r23, r1
   1db3c:	81 05       	cpc	r24, r1
   1db3e:	91 05       	cpc	r25, r1
   1db40:	21 f4       	brne	.+8      	; 0x1db4a <random+0x32>
   1db42:	64 e2       	ldi	r22, 0x24	; 36
   1db44:	79 ed       	ldi	r23, 0xD9	; 217
   1db46:	8b e5       	ldi	r24, 0x5B	; 91
   1db48:	97 e0       	ldi	r25, 0x07	; 7
   1db4a:	2d e1       	ldi	r18, 0x1D	; 29
   1db4c:	33 ef       	ldi	r19, 0xF3	; 243
   1db4e:	41 e0       	ldi	r20, 0x01	; 1
   1db50:	50 e0       	ldi	r21, 0x00	; 0
   1db52:	30 de       	rcall	.-928    	; 0x1d7b4 <__divmodsi4>
   1db54:	49 01       	movw	r8, r18
   1db56:	5a 01       	movw	r10, r20
   1db58:	9b 01       	movw	r18, r22
   1db5a:	ac 01       	movw	r20, r24
   1db5c:	a7 ea       	ldi	r26, 0xA7	; 167
   1db5e:	b1 e4       	ldi	r27, 0x41	; 65
   1db60:	5c de       	rcall	.-840    	; 0x1d81a <__muluhisi3>
   1db62:	6b 01       	movw	r12, r22
   1db64:	7c 01       	movw	r14, r24
   1db66:	ac ee       	ldi	r26, 0xEC	; 236
   1db68:	b4 ef       	ldi	r27, 0xF4	; 244
   1db6a:	a5 01       	movw	r20, r10
   1db6c:	94 01       	movw	r18, r8
   1db6e:	74 d3       	rcall	.+1768   	; 0x1e258 <__mulohisi3>
   1db70:	dc 01       	movw	r26, r24
   1db72:	cb 01       	movw	r24, r22
   1db74:	8c 0d       	add	r24, r12
   1db76:	9d 1d       	adc	r25, r13
   1db78:	ae 1d       	adc	r26, r14
   1db7a:	bf 1d       	adc	r27, r15
   1db7c:	b7 ff       	sbrs	r27, 7
   1db7e:	03 c0       	rjmp	.+6      	; 0x1db86 <random+0x6e>
   1db80:	01 97       	sbiw	r24, 0x01	; 1
   1db82:	a1 09       	sbc	r26, r1
   1db84:	b0 48       	sbci	r27, 0x80	; 128
   1db86:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1db8a:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1db8e:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1db92:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1db96:	bc 01       	movw	r22, r24
   1db98:	cd 01       	movw	r24, r26
   1db9a:	9f 77       	andi	r25, 0x7F	; 127
   1db9c:	ff 90       	pop	r15
   1db9e:	ef 90       	pop	r14
   1dba0:	df 90       	pop	r13
   1dba2:	cf 90       	pop	r12
   1dba4:	bf 90       	pop	r11
   1dba6:	af 90       	pop	r10
   1dba8:	9f 90       	pop	r9
   1dbaa:	8f 90       	pop	r8
   1dbac:	08 95       	ret

0001dbae <srandom>:
   1dbae:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1dbb2:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1dbb6:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1dbba:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1dbbe:	08 95       	ret

0001dbc0 <abort>:
   1dbc0:	81 e0       	ldi	r24, 0x01	; 1
   1dbc2:	90 e0       	ldi	r25, 0x00	; 0
   1dbc4:	f8 94       	cli
   1dbc6:	4c c3       	rjmp	.+1688   	; 0x1e260 <_exit>

0001dbc8 <memcpy_P>:
   1dbc8:	fb 01       	movw	r30, r22
   1dbca:	dc 01       	movw	r26, r24
   1dbcc:	02 c0       	rjmp	.+4      	; 0x1dbd2 <memcpy_P+0xa>
   1dbce:	05 90       	lpm	r0, Z+
   1dbd0:	0d 92       	st	X+, r0
   1dbd2:	41 50       	subi	r20, 0x01	; 1
   1dbd4:	50 40       	sbci	r21, 0x00	; 0
   1dbd6:	d8 f7       	brcc	.-10     	; 0x1dbce <memcpy_P+0x6>
   1dbd8:	08 95       	ret

0001dbda <strcmp_P>:
   1dbda:	fb 01       	movw	r30, r22
   1dbdc:	dc 01       	movw	r26, r24
   1dbde:	8d 91       	ld	r24, X+
   1dbe0:	05 90       	lpm	r0, Z+
   1dbe2:	80 19       	sub	r24, r0
   1dbe4:	01 10       	cpse	r0, r1
   1dbe6:	d9 f3       	breq	.-10     	; 0x1dbde <strcmp_P+0x4>
   1dbe8:	99 0b       	sbc	r25, r25
   1dbea:	08 95       	ret

0001dbec <__strlen_P>:
   1dbec:	fc 01       	movw	r30, r24
   1dbee:	05 90       	lpm	r0, Z+
   1dbf0:	00 20       	and	r0, r0
   1dbf2:	e9 f7       	brne	.-6      	; 0x1dbee <__strlen_P+0x2>
   1dbf4:	80 95       	com	r24
   1dbf6:	90 95       	com	r25
   1dbf8:	8e 0f       	add	r24, r30
   1dbfa:	9f 1f       	adc	r25, r31
   1dbfc:	08 95       	ret

0001dbfe <memcpy>:
   1dbfe:	fb 01       	movw	r30, r22
   1dc00:	dc 01       	movw	r26, r24
   1dc02:	02 c0       	rjmp	.+4      	; 0x1dc08 <memcpy+0xa>
   1dc04:	01 90       	ld	r0, Z+
   1dc06:	0d 92       	st	X+, r0
   1dc08:	41 50       	subi	r20, 0x01	; 1
   1dc0a:	50 40       	sbci	r21, 0x00	; 0
   1dc0c:	d8 f7       	brcc	.-10     	; 0x1dc04 <memcpy+0x6>
   1dc0e:	08 95       	ret

0001dc10 <memset>:
   1dc10:	dc 01       	movw	r26, r24
   1dc12:	01 c0       	rjmp	.+2      	; 0x1dc16 <memset+0x6>
   1dc14:	6d 93       	st	X+, r22
   1dc16:	41 50       	subi	r20, 0x01	; 1
   1dc18:	50 40       	sbci	r21, 0x00	; 0
   1dc1a:	e0 f7       	brcc	.-8      	; 0x1dc14 <memset+0x4>
   1dc1c:	08 95       	ret

0001dc1e <strcmp>:
   1dc1e:	fb 01       	movw	r30, r22
   1dc20:	dc 01       	movw	r26, r24
   1dc22:	8d 91       	ld	r24, X+
   1dc24:	01 90       	ld	r0, Z+
   1dc26:	80 19       	sub	r24, r0
   1dc28:	01 10       	cpse	r0, r1
   1dc2a:	d9 f3       	breq	.-10     	; 0x1dc22 <strcmp+0x4>
   1dc2c:	99 0b       	sbc	r25, r25
   1dc2e:	08 95       	ret

0001dc30 <strcpy>:
   1dc30:	fb 01       	movw	r30, r22
   1dc32:	dc 01       	movw	r26, r24
   1dc34:	01 90       	ld	r0, Z+
   1dc36:	0d 92       	st	X+, r0
   1dc38:	00 20       	and	r0, r0
   1dc3a:	e1 f7       	brne	.-8      	; 0x1dc34 <strcpy+0x4>
   1dc3c:	08 95       	ret

0001dc3e <strstr>:
   1dc3e:	fb 01       	movw	r30, r22
   1dc40:	51 91       	ld	r21, Z+
   1dc42:	55 23       	and	r21, r21
   1dc44:	a9 f0       	breq	.+42     	; 0x1dc70 <strstr+0x32>
   1dc46:	bf 01       	movw	r22, r30
   1dc48:	dc 01       	movw	r26, r24
   1dc4a:	4d 91       	ld	r20, X+
   1dc4c:	45 17       	cp	r20, r21
   1dc4e:	41 11       	cpse	r20, r1
   1dc50:	e1 f7       	brne	.-8      	; 0x1dc4a <strstr+0xc>
   1dc52:	59 f4       	brne	.+22     	; 0x1dc6a <strstr+0x2c>
   1dc54:	cd 01       	movw	r24, r26
   1dc56:	01 90       	ld	r0, Z+
   1dc58:	00 20       	and	r0, r0
   1dc5a:	49 f0       	breq	.+18     	; 0x1dc6e <strstr+0x30>
   1dc5c:	4d 91       	ld	r20, X+
   1dc5e:	40 15       	cp	r20, r0
   1dc60:	41 11       	cpse	r20, r1
   1dc62:	c9 f3       	breq	.-14     	; 0x1dc56 <strstr+0x18>
   1dc64:	fb 01       	movw	r30, r22
   1dc66:	41 11       	cpse	r20, r1
   1dc68:	ef cf       	rjmp	.-34     	; 0x1dc48 <strstr+0xa>
   1dc6a:	81 e0       	ldi	r24, 0x01	; 1
   1dc6c:	90 e0       	ldi	r25, 0x00	; 0
   1dc6e:	01 97       	sbiw	r24, 0x01	; 1
   1dc70:	08 95       	ret

0001dc72 <sprintf>:
   1dc72:	0f 93       	push	r16
   1dc74:	1f 93       	push	r17
   1dc76:	cf 93       	push	r28
   1dc78:	df 93       	push	r29
   1dc7a:	cd b7       	in	r28, 0x3d	; 61
   1dc7c:	de b7       	in	r29, 0x3e	; 62
   1dc7e:	2e 97       	sbiw	r28, 0x0e	; 14
   1dc80:	0f b6       	in	r0, 0x3f	; 63
   1dc82:	f8 94       	cli
   1dc84:	de bf       	out	0x3e, r29	; 62
   1dc86:	0f be       	out	0x3f, r0	; 63
   1dc88:	cd bf       	out	0x3d, r28	; 61
   1dc8a:	0e 89       	ldd	r16, Y+22	; 0x16
   1dc8c:	1f 89       	ldd	r17, Y+23	; 0x17
   1dc8e:	86 e0       	ldi	r24, 0x06	; 6
   1dc90:	8c 83       	std	Y+4, r24	; 0x04
   1dc92:	1a 83       	std	Y+2, r17	; 0x02
   1dc94:	09 83       	std	Y+1, r16	; 0x01
   1dc96:	8f ef       	ldi	r24, 0xFF	; 255
   1dc98:	9f e7       	ldi	r25, 0x7F	; 127
   1dc9a:	9e 83       	std	Y+6, r25	; 0x06
   1dc9c:	8d 83       	std	Y+5, r24	; 0x05
   1dc9e:	ae 01       	movw	r20, r28
   1dca0:	46 5e       	subi	r20, 0xE6	; 230
   1dca2:	5f 4f       	sbci	r21, 0xFF	; 255
   1dca4:	68 8d       	ldd	r22, Y+24	; 0x18
   1dca6:	79 8d       	ldd	r23, Y+25	; 0x19
   1dca8:	ce 01       	movw	r24, r28
   1dcaa:	01 96       	adiw	r24, 0x01	; 1
   1dcac:	10 d0       	rcall	.+32     	; 0x1dcce <vfprintf>
   1dcae:	ef 81       	ldd	r30, Y+7	; 0x07
   1dcb0:	f8 85       	ldd	r31, Y+8	; 0x08
   1dcb2:	e0 0f       	add	r30, r16
   1dcb4:	f1 1f       	adc	r31, r17
   1dcb6:	10 82       	st	Z, r1
   1dcb8:	2e 96       	adiw	r28, 0x0e	; 14
   1dcba:	0f b6       	in	r0, 0x3f	; 63
   1dcbc:	f8 94       	cli
   1dcbe:	de bf       	out	0x3e, r29	; 62
   1dcc0:	0f be       	out	0x3f, r0	; 63
   1dcc2:	cd bf       	out	0x3d, r28	; 61
   1dcc4:	df 91       	pop	r29
   1dcc6:	cf 91       	pop	r28
   1dcc8:	1f 91       	pop	r17
   1dcca:	0f 91       	pop	r16
   1dccc:	08 95       	ret

0001dcce <vfprintf>:
   1dcce:	2f 92       	push	r2
   1dcd0:	3f 92       	push	r3
   1dcd2:	4f 92       	push	r4
   1dcd4:	5f 92       	push	r5
   1dcd6:	6f 92       	push	r6
   1dcd8:	7f 92       	push	r7
   1dcda:	8f 92       	push	r8
   1dcdc:	9f 92       	push	r9
   1dcde:	af 92       	push	r10
   1dce0:	bf 92       	push	r11
   1dce2:	cf 92       	push	r12
   1dce4:	df 92       	push	r13
   1dce6:	ef 92       	push	r14
   1dce8:	ff 92       	push	r15
   1dcea:	0f 93       	push	r16
   1dcec:	1f 93       	push	r17
   1dcee:	cf 93       	push	r28
   1dcf0:	df 93       	push	r29
   1dcf2:	cd b7       	in	r28, 0x3d	; 61
   1dcf4:	de b7       	in	r29, 0x3e	; 62
   1dcf6:	2b 97       	sbiw	r28, 0x0b	; 11
   1dcf8:	0f b6       	in	r0, 0x3f	; 63
   1dcfa:	f8 94       	cli
   1dcfc:	de bf       	out	0x3e, r29	; 62
   1dcfe:	0f be       	out	0x3f, r0	; 63
   1dd00:	cd bf       	out	0x3d, r28	; 61
   1dd02:	6c 01       	movw	r12, r24
   1dd04:	7b 01       	movw	r14, r22
   1dd06:	8a 01       	movw	r16, r20
   1dd08:	fc 01       	movw	r30, r24
   1dd0a:	17 82       	std	Z+7, r1	; 0x07
   1dd0c:	16 82       	std	Z+6, r1	; 0x06
   1dd0e:	83 81       	ldd	r24, Z+3	; 0x03
   1dd10:	81 ff       	sbrs	r24, 1
   1dd12:	bf c1       	rjmp	.+894    	; 0x1e092 <vfprintf+0x3c4>
   1dd14:	ce 01       	movw	r24, r28
   1dd16:	01 96       	adiw	r24, 0x01	; 1
   1dd18:	3c 01       	movw	r6, r24
   1dd1a:	f6 01       	movw	r30, r12
   1dd1c:	93 81       	ldd	r25, Z+3	; 0x03
   1dd1e:	f7 01       	movw	r30, r14
   1dd20:	93 fd       	sbrc	r25, 3
   1dd22:	85 91       	lpm	r24, Z+
   1dd24:	93 ff       	sbrs	r25, 3
   1dd26:	81 91       	ld	r24, Z+
   1dd28:	7f 01       	movw	r14, r30
   1dd2a:	88 23       	and	r24, r24
   1dd2c:	09 f4       	brne	.+2      	; 0x1dd30 <vfprintf+0x62>
   1dd2e:	ad c1       	rjmp	.+858    	; 0x1e08a <vfprintf+0x3bc>
   1dd30:	85 32       	cpi	r24, 0x25	; 37
   1dd32:	39 f4       	brne	.+14     	; 0x1dd42 <vfprintf+0x74>
   1dd34:	93 fd       	sbrc	r25, 3
   1dd36:	85 91       	lpm	r24, Z+
   1dd38:	93 ff       	sbrs	r25, 3
   1dd3a:	81 91       	ld	r24, Z+
   1dd3c:	7f 01       	movw	r14, r30
   1dd3e:	85 32       	cpi	r24, 0x25	; 37
   1dd40:	21 f4       	brne	.+8      	; 0x1dd4a <vfprintf+0x7c>
   1dd42:	b6 01       	movw	r22, r12
   1dd44:	90 e0       	ldi	r25, 0x00	; 0
   1dd46:	d6 d1       	rcall	.+940    	; 0x1e0f4 <fputc>
   1dd48:	e8 cf       	rjmp	.-48     	; 0x1dd1a <vfprintf+0x4c>
   1dd4a:	91 2c       	mov	r9, r1
   1dd4c:	21 2c       	mov	r2, r1
   1dd4e:	31 2c       	mov	r3, r1
   1dd50:	ff e1       	ldi	r31, 0x1F	; 31
   1dd52:	f3 15       	cp	r31, r3
   1dd54:	d8 f0       	brcs	.+54     	; 0x1dd8c <vfprintf+0xbe>
   1dd56:	8b 32       	cpi	r24, 0x2B	; 43
   1dd58:	79 f0       	breq	.+30     	; 0x1dd78 <vfprintf+0xaa>
   1dd5a:	38 f4       	brcc	.+14     	; 0x1dd6a <vfprintf+0x9c>
   1dd5c:	80 32       	cpi	r24, 0x20	; 32
   1dd5e:	79 f0       	breq	.+30     	; 0x1dd7e <vfprintf+0xb0>
   1dd60:	83 32       	cpi	r24, 0x23	; 35
   1dd62:	a1 f4       	brne	.+40     	; 0x1dd8c <vfprintf+0xbe>
   1dd64:	23 2d       	mov	r18, r3
   1dd66:	20 61       	ori	r18, 0x10	; 16
   1dd68:	1d c0       	rjmp	.+58     	; 0x1dda4 <vfprintf+0xd6>
   1dd6a:	8d 32       	cpi	r24, 0x2D	; 45
   1dd6c:	61 f0       	breq	.+24     	; 0x1dd86 <vfprintf+0xb8>
   1dd6e:	80 33       	cpi	r24, 0x30	; 48
   1dd70:	69 f4       	brne	.+26     	; 0x1dd8c <vfprintf+0xbe>
   1dd72:	23 2d       	mov	r18, r3
   1dd74:	21 60       	ori	r18, 0x01	; 1
   1dd76:	16 c0       	rjmp	.+44     	; 0x1dda4 <vfprintf+0xd6>
   1dd78:	83 2d       	mov	r24, r3
   1dd7a:	82 60       	ori	r24, 0x02	; 2
   1dd7c:	38 2e       	mov	r3, r24
   1dd7e:	e3 2d       	mov	r30, r3
   1dd80:	e4 60       	ori	r30, 0x04	; 4
   1dd82:	3e 2e       	mov	r3, r30
   1dd84:	2a c0       	rjmp	.+84     	; 0x1ddda <vfprintf+0x10c>
   1dd86:	f3 2d       	mov	r31, r3
   1dd88:	f8 60       	ori	r31, 0x08	; 8
   1dd8a:	1d c0       	rjmp	.+58     	; 0x1ddc6 <vfprintf+0xf8>
   1dd8c:	37 fc       	sbrc	r3, 7
   1dd8e:	2d c0       	rjmp	.+90     	; 0x1ddea <vfprintf+0x11c>
   1dd90:	20 ed       	ldi	r18, 0xD0	; 208
   1dd92:	28 0f       	add	r18, r24
   1dd94:	2a 30       	cpi	r18, 0x0A	; 10
   1dd96:	40 f0       	brcs	.+16     	; 0x1dda8 <vfprintf+0xda>
   1dd98:	8e 32       	cpi	r24, 0x2E	; 46
   1dd9a:	b9 f4       	brne	.+46     	; 0x1ddca <vfprintf+0xfc>
   1dd9c:	36 fc       	sbrc	r3, 6
   1dd9e:	75 c1       	rjmp	.+746    	; 0x1e08a <vfprintf+0x3bc>
   1dda0:	23 2d       	mov	r18, r3
   1dda2:	20 64       	ori	r18, 0x40	; 64
   1dda4:	32 2e       	mov	r3, r18
   1dda6:	19 c0       	rjmp	.+50     	; 0x1ddda <vfprintf+0x10c>
   1dda8:	36 fe       	sbrs	r3, 6
   1ddaa:	06 c0       	rjmp	.+12     	; 0x1ddb8 <vfprintf+0xea>
   1ddac:	8a e0       	ldi	r24, 0x0A	; 10
   1ddae:	98 9e       	mul	r9, r24
   1ddb0:	20 0d       	add	r18, r0
   1ddb2:	11 24       	eor	r1, r1
   1ddb4:	92 2e       	mov	r9, r18
   1ddb6:	11 c0       	rjmp	.+34     	; 0x1ddda <vfprintf+0x10c>
   1ddb8:	ea e0       	ldi	r30, 0x0A	; 10
   1ddba:	2e 9e       	mul	r2, r30
   1ddbc:	20 0d       	add	r18, r0
   1ddbe:	11 24       	eor	r1, r1
   1ddc0:	22 2e       	mov	r2, r18
   1ddc2:	f3 2d       	mov	r31, r3
   1ddc4:	f0 62       	ori	r31, 0x20	; 32
   1ddc6:	3f 2e       	mov	r3, r31
   1ddc8:	08 c0       	rjmp	.+16     	; 0x1ddda <vfprintf+0x10c>
   1ddca:	8c 36       	cpi	r24, 0x6C	; 108
   1ddcc:	21 f4       	brne	.+8      	; 0x1ddd6 <vfprintf+0x108>
   1ddce:	83 2d       	mov	r24, r3
   1ddd0:	80 68       	ori	r24, 0x80	; 128
   1ddd2:	38 2e       	mov	r3, r24
   1ddd4:	02 c0       	rjmp	.+4      	; 0x1ddda <vfprintf+0x10c>
   1ddd6:	88 36       	cpi	r24, 0x68	; 104
   1ddd8:	41 f4       	brne	.+16     	; 0x1ddea <vfprintf+0x11c>
   1ddda:	f7 01       	movw	r30, r14
   1dddc:	93 fd       	sbrc	r25, 3
   1ddde:	85 91       	lpm	r24, Z+
   1dde0:	93 ff       	sbrs	r25, 3
   1dde2:	81 91       	ld	r24, Z+
   1dde4:	7f 01       	movw	r14, r30
   1dde6:	81 11       	cpse	r24, r1
   1dde8:	b3 cf       	rjmp	.-154    	; 0x1dd50 <vfprintf+0x82>
   1ddea:	98 2f       	mov	r25, r24
   1ddec:	9f 7d       	andi	r25, 0xDF	; 223
   1ddee:	95 54       	subi	r25, 0x45	; 69
   1ddf0:	93 30       	cpi	r25, 0x03	; 3
   1ddf2:	28 f4       	brcc	.+10     	; 0x1ddfe <vfprintf+0x130>
   1ddf4:	0c 5f       	subi	r16, 0xFC	; 252
   1ddf6:	1f 4f       	sbci	r17, 0xFF	; 255
   1ddf8:	9f e3       	ldi	r25, 0x3F	; 63
   1ddfa:	99 83       	std	Y+1, r25	; 0x01
   1ddfc:	0d c0       	rjmp	.+26     	; 0x1de18 <vfprintf+0x14a>
   1ddfe:	83 36       	cpi	r24, 0x63	; 99
   1de00:	31 f0       	breq	.+12     	; 0x1de0e <vfprintf+0x140>
   1de02:	83 37       	cpi	r24, 0x73	; 115
   1de04:	71 f0       	breq	.+28     	; 0x1de22 <vfprintf+0x154>
   1de06:	83 35       	cpi	r24, 0x53	; 83
   1de08:	09 f0       	breq	.+2      	; 0x1de0c <vfprintf+0x13e>
   1de0a:	55 c0       	rjmp	.+170    	; 0x1deb6 <vfprintf+0x1e8>
   1de0c:	20 c0       	rjmp	.+64     	; 0x1de4e <vfprintf+0x180>
   1de0e:	f8 01       	movw	r30, r16
   1de10:	80 81       	ld	r24, Z
   1de12:	89 83       	std	Y+1, r24	; 0x01
   1de14:	0e 5f       	subi	r16, 0xFE	; 254
   1de16:	1f 4f       	sbci	r17, 0xFF	; 255
   1de18:	88 24       	eor	r8, r8
   1de1a:	83 94       	inc	r8
   1de1c:	91 2c       	mov	r9, r1
   1de1e:	53 01       	movw	r10, r6
   1de20:	12 c0       	rjmp	.+36     	; 0x1de46 <vfprintf+0x178>
   1de22:	28 01       	movw	r4, r16
   1de24:	f2 e0       	ldi	r31, 0x02	; 2
   1de26:	4f 0e       	add	r4, r31
   1de28:	51 1c       	adc	r5, r1
   1de2a:	f8 01       	movw	r30, r16
   1de2c:	a0 80       	ld	r10, Z
   1de2e:	b1 80       	ldd	r11, Z+1	; 0x01
   1de30:	36 fe       	sbrs	r3, 6
   1de32:	03 c0       	rjmp	.+6      	; 0x1de3a <vfprintf+0x16c>
   1de34:	69 2d       	mov	r22, r9
   1de36:	70 e0       	ldi	r23, 0x00	; 0
   1de38:	02 c0       	rjmp	.+4      	; 0x1de3e <vfprintf+0x170>
   1de3a:	6f ef       	ldi	r22, 0xFF	; 255
   1de3c:	7f ef       	ldi	r23, 0xFF	; 255
   1de3e:	c5 01       	movw	r24, r10
   1de40:	4e d1       	rcall	.+668    	; 0x1e0de <strnlen>
   1de42:	4c 01       	movw	r8, r24
   1de44:	82 01       	movw	r16, r4
   1de46:	f3 2d       	mov	r31, r3
   1de48:	ff 77       	andi	r31, 0x7F	; 127
   1de4a:	3f 2e       	mov	r3, r31
   1de4c:	15 c0       	rjmp	.+42     	; 0x1de78 <vfprintf+0x1aa>
   1de4e:	28 01       	movw	r4, r16
   1de50:	22 e0       	ldi	r18, 0x02	; 2
   1de52:	42 0e       	add	r4, r18
   1de54:	51 1c       	adc	r5, r1
   1de56:	f8 01       	movw	r30, r16
   1de58:	a0 80       	ld	r10, Z
   1de5a:	b1 80       	ldd	r11, Z+1	; 0x01
   1de5c:	36 fe       	sbrs	r3, 6
   1de5e:	03 c0       	rjmp	.+6      	; 0x1de66 <vfprintf+0x198>
   1de60:	69 2d       	mov	r22, r9
   1de62:	70 e0       	ldi	r23, 0x00	; 0
   1de64:	02 c0       	rjmp	.+4      	; 0x1de6a <vfprintf+0x19c>
   1de66:	6f ef       	ldi	r22, 0xFF	; 255
   1de68:	7f ef       	ldi	r23, 0xFF	; 255
   1de6a:	c5 01       	movw	r24, r10
   1de6c:	2d d1       	rcall	.+602    	; 0x1e0c8 <strnlen_P>
   1de6e:	4c 01       	movw	r8, r24
   1de70:	f3 2d       	mov	r31, r3
   1de72:	f0 68       	ori	r31, 0x80	; 128
   1de74:	3f 2e       	mov	r3, r31
   1de76:	82 01       	movw	r16, r4
   1de78:	33 fc       	sbrc	r3, 3
   1de7a:	19 c0       	rjmp	.+50     	; 0x1deae <vfprintf+0x1e0>
   1de7c:	82 2d       	mov	r24, r2
   1de7e:	90 e0       	ldi	r25, 0x00	; 0
   1de80:	88 16       	cp	r8, r24
   1de82:	99 06       	cpc	r9, r25
   1de84:	a0 f4       	brcc	.+40     	; 0x1deae <vfprintf+0x1e0>
   1de86:	b6 01       	movw	r22, r12
   1de88:	80 e2       	ldi	r24, 0x20	; 32
   1de8a:	90 e0       	ldi	r25, 0x00	; 0
   1de8c:	33 d1       	rcall	.+614    	; 0x1e0f4 <fputc>
   1de8e:	2a 94       	dec	r2
   1de90:	f5 cf       	rjmp	.-22     	; 0x1de7c <vfprintf+0x1ae>
   1de92:	f5 01       	movw	r30, r10
   1de94:	37 fc       	sbrc	r3, 7
   1de96:	85 91       	lpm	r24, Z+
   1de98:	37 fe       	sbrs	r3, 7
   1de9a:	81 91       	ld	r24, Z+
   1de9c:	5f 01       	movw	r10, r30
   1de9e:	b6 01       	movw	r22, r12
   1dea0:	90 e0       	ldi	r25, 0x00	; 0
   1dea2:	28 d1       	rcall	.+592    	; 0x1e0f4 <fputc>
   1dea4:	21 10       	cpse	r2, r1
   1dea6:	2a 94       	dec	r2
   1dea8:	21 e0       	ldi	r18, 0x01	; 1
   1deaa:	82 1a       	sub	r8, r18
   1deac:	91 08       	sbc	r9, r1
   1deae:	81 14       	cp	r8, r1
   1deb0:	91 04       	cpc	r9, r1
   1deb2:	79 f7       	brne	.-34     	; 0x1de92 <vfprintf+0x1c4>
   1deb4:	e1 c0       	rjmp	.+450    	; 0x1e078 <vfprintf+0x3aa>
   1deb6:	84 36       	cpi	r24, 0x64	; 100
   1deb8:	11 f0       	breq	.+4      	; 0x1debe <vfprintf+0x1f0>
   1deba:	89 36       	cpi	r24, 0x69	; 105
   1debc:	39 f5       	brne	.+78     	; 0x1df0c <vfprintf+0x23e>
   1debe:	f8 01       	movw	r30, r16
   1dec0:	37 fe       	sbrs	r3, 7
   1dec2:	07 c0       	rjmp	.+14     	; 0x1ded2 <vfprintf+0x204>
   1dec4:	60 81       	ld	r22, Z
   1dec6:	71 81       	ldd	r23, Z+1	; 0x01
   1dec8:	82 81       	ldd	r24, Z+2	; 0x02
   1deca:	93 81       	ldd	r25, Z+3	; 0x03
   1decc:	0c 5f       	subi	r16, 0xFC	; 252
   1dece:	1f 4f       	sbci	r17, 0xFF	; 255
   1ded0:	08 c0       	rjmp	.+16     	; 0x1dee2 <vfprintf+0x214>
   1ded2:	60 81       	ld	r22, Z
   1ded4:	71 81       	ldd	r23, Z+1	; 0x01
   1ded6:	07 2e       	mov	r0, r23
   1ded8:	00 0c       	add	r0, r0
   1deda:	88 0b       	sbc	r24, r24
   1dedc:	99 0b       	sbc	r25, r25
   1dede:	0e 5f       	subi	r16, 0xFE	; 254
   1dee0:	1f 4f       	sbci	r17, 0xFF	; 255
   1dee2:	f3 2d       	mov	r31, r3
   1dee4:	ff 76       	andi	r31, 0x6F	; 111
   1dee6:	3f 2e       	mov	r3, r31
   1dee8:	97 ff       	sbrs	r25, 7
   1deea:	09 c0       	rjmp	.+18     	; 0x1defe <vfprintf+0x230>
   1deec:	90 95       	com	r25
   1deee:	80 95       	com	r24
   1def0:	70 95       	com	r23
   1def2:	61 95       	neg	r22
   1def4:	7f 4f       	sbci	r23, 0xFF	; 255
   1def6:	8f 4f       	sbci	r24, 0xFF	; 255
   1def8:	9f 4f       	sbci	r25, 0xFF	; 255
   1defa:	f0 68       	ori	r31, 0x80	; 128
   1defc:	3f 2e       	mov	r3, r31
   1defe:	2a e0       	ldi	r18, 0x0A	; 10
   1df00:	30 e0       	ldi	r19, 0x00	; 0
   1df02:	a3 01       	movw	r20, r6
   1df04:	33 d1       	rcall	.+614    	; 0x1e16c <__ultoa_invert>
   1df06:	88 2e       	mov	r8, r24
   1df08:	86 18       	sub	r8, r6
   1df0a:	44 c0       	rjmp	.+136    	; 0x1df94 <vfprintf+0x2c6>
   1df0c:	85 37       	cpi	r24, 0x75	; 117
   1df0e:	31 f4       	brne	.+12     	; 0x1df1c <vfprintf+0x24e>
   1df10:	23 2d       	mov	r18, r3
   1df12:	2f 7e       	andi	r18, 0xEF	; 239
   1df14:	b2 2e       	mov	r11, r18
   1df16:	2a e0       	ldi	r18, 0x0A	; 10
   1df18:	30 e0       	ldi	r19, 0x00	; 0
   1df1a:	25 c0       	rjmp	.+74     	; 0x1df66 <vfprintf+0x298>
   1df1c:	93 2d       	mov	r25, r3
   1df1e:	99 7f       	andi	r25, 0xF9	; 249
   1df20:	b9 2e       	mov	r11, r25
   1df22:	8f 36       	cpi	r24, 0x6F	; 111
   1df24:	c1 f0       	breq	.+48     	; 0x1df56 <vfprintf+0x288>
   1df26:	18 f4       	brcc	.+6      	; 0x1df2e <vfprintf+0x260>
   1df28:	88 35       	cpi	r24, 0x58	; 88
   1df2a:	79 f0       	breq	.+30     	; 0x1df4a <vfprintf+0x27c>
   1df2c:	ae c0       	rjmp	.+348    	; 0x1e08a <vfprintf+0x3bc>
   1df2e:	80 37       	cpi	r24, 0x70	; 112
   1df30:	19 f0       	breq	.+6      	; 0x1df38 <vfprintf+0x26a>
   1df32:	88 37       	cpi	r24, 0x78	; 120
   1df34:	21 f0       	breq	.+8      	; 0x1df3e <vfprintf+0x270>
   1df36:	a9 c0       	rjmp	.+338    	; 0x1e08a <vfprintf+0x3bc>
   1df38:	e9 2f       	mov	r30, r25
   1df3a:	e0 61       	ori	r30, 0x10	; 16
   1df3c:	be 2e       	mov	r11, r30
   1df3e:	b4 fe       	sbrs	r11, 4
   1df40:	0d c0       	rjmp	.+26     	; 0x1df5c <vfprintf+0x28e>
   1df42:	fb 2d       	mov	r31, r11
   1df44:	f4 60       	ori	r31, 0x04	; 4
   1df46:	bf 2e       	mov	r11, r31
   1df48:	09 c0       	rjmp	.+18     	; 0x1df5c <vfprintf+0x28e>
   1df4a:	34 fe       	sbrs	r3, 4
   1df4c:	0a c0       	rjmp	.+20     	; 0x1df62 <vfprintf+0x294>
   1df4e:	29 2f       	mov	r18, r25
   1df50:	26 60       	ori	r18, 0x06	; 6
   1df52:	b2 2e       	mov	r11, r18
   1df54:	06 c0       	rjmp	.+12     	; 0x1df62 <vfprintf+0x294>
   1df56:	28 e0       	ldi	r18, 0x08	; 8
   1df58:	30 e0       	ldi	r19, 0x00	; 0
   1df5a:	05 c0       	rjmp	.+10     	; 0x1df66 <vfprintf+0x298>
   1df5c:	20 e1       	ldi	r18, 0x10	; 16
   1df5e:	30 e0       	ldi	r19, 0x00	; 0
   1df60:	02 c0       	rjmp	.+4      	; 0x1df66 <vfprintf+0x298>
   1df62:	20 e1       	ldi	r18, 0x10	; 16
   1df64:	32 e0       	ldi	r19, 0x02	; 2
   1df66:	f8 01       	movw	r30, r16
   1df68:	b7 fe       	sbrs	r11, 7
   1df6a:	07 c0       	rjmp	.+14     	; 0x1df7a <vfprintf+0x2ac>
   1df6c:	60 81       	ld	r22, Z
   1df6e:	71 81       	ldd	r23, Z+1	; 0x01
   1df70:	82 81       	ldd	r24, Z+2	; 0x02
   1df72:	93 81       	ldd	r25, Z+3	; 0x03
   1df74:	0c 5f       	subi	r16, 0xFC	; 252
   1df76:	1f 4f       	sbci	r17, 0xFF	; 255
   1df78:	06 c0       	rjmp	.+12     	; 0x1df86 <vfprintf+0x2b8>
   1df7a:	60 81       	ld	r22, Z
   1df7c:	71 81       	ldd	r23, Z+1	; 0x01
   1df7e:	80 e0       	ldi	r24, 0x00	; 0
   1df80:	90 e0       	ldi	r25, 0x00	; 0
   1df82:	0e 5f       	subi	r16, 0xFE	; 254
   1df84:	1f 4f       	sbci	r17, 0xFF	; 255
   1df86:	a3 01       	movw	r20, r6
   1df88:	f1 d0       	rcall	.+482    	; 0x1e16c <__ultoa_invert>
   1df8a:	88 2e       	mov	r8, r24
   1df8c:	86 18       	sub	r8, r6
   1df8e:	fb 2d       	mov	r31, r11
   1df90:	ff 77       	andi	r31, 0x7F	; 127
   1df92:	3f 2e       	mov	r3, r31
   1df94:	36 fe       	sbrs	r3, 6
   1df96:	0d c0       	rjmp	.+26     	; 0x1dfb2 <vfprintf+0x2e4>
   1df98:	23 2d       	mov	r18, r3
   1df9a:	2e 7f       	andi	r18, 0xFE	; 254
   1df9c:	a2 2e       	mov	r10, r18
   1df9e:	89 14       	cp	r8, r9
   1dfa0:	58 f4       	brcc	.+22     	; 0x1dfb8 <vfprintf+0x2ea>
   1dfa2:	34 fe       	sbrs	r3, 4
   1dfa4:	0b c0       	rjmp	.+22     	; 0x1dfbc <vfprintf+0x2ee>
   1dfa6:	32 fc       	sbrc	r3, 2
   1dfa8:	09 c0       	rjmp	.+18     	; 0x1dfbc <vfprintf+0x2ee>
   1dfaa:	83 2d       	mov	r24, r3
   1dfac:	8e 7e       	andi	r24, 0xEE	; 238
   1dfae:	a8 2e       	mov	r10, r24
   1dfb0:	05 c0       	rjmp	.+10     	; 0x1dfbc <vfprintf+0x2ee>
   1dfb2:	b8 2c       	mov	r11, r8
   1dfb4:	a3 2c       	mov	r10, r3
   1dfb6:	03 c0       	rjmp	.+6      	; 0x1dfbe <vfprintf+0x2f0>
   1dfb8:	b8 2c       	mov	r11, r8
   1dfba:	01 c0       	rjmp	.+2      	; 0x1dfbe <vfprintf+0x2f0>
   1dfbc:	b9 2c       	mov	r11, r9
   1dfbe:	a4 fe       	sbrs	r10, 4
   1dfc0:	0f c0       	rjmp	.+30     	; 0x1dfe0 <vfprintf+0x312>
   1dfc2:	fe 01       	movw	r30, r28
   1dfc4:	e8 0d       	add	r30, r8
   1dfc6:	f1 1d       	adc	r31, r1
   1dfc8:	80 81       	ld	r24, Z
   1dfca:	80 33       	cpi	r24, 0x30	; 48
   1dfcc:	21 f4       	brne	.+8      	; 0x1dfd6 <vfprintf+0x308>
   1dfce:	9a 2d       	mov	r25, r10
   1dfd0:	99 7e       	andi	r25, 0xE9	; 233
   1dfd2:	a9 2e       	mov	r10, r25
   1dfd4:	09 c0       	rjmp	.+18     	; 0x1dfe8 <vfprintf+0x31a>
   1dfd6:	a2 fe       	sbrs	r10, 2
   1dfd8:	06 c0       	rjmp	.+12     	; 0x1dfe6 <vfprintf+0x318>
   1dfda:	b3 94       	inc	r11
   1dfdc:	b3 94       	inc	r11
   1dfde:	04 c0       	rjmp	.+8      	; 0x1dfe8 <vfprintf+0x31a>
   1dfe0:	8a 2d       	mov	r24, r10
   1dfe2:	86 78       	andi	r24, 0x86	; 134
   1dfe4:	09 f0       	breq	.+2      	; 0x1dfe8 <vfprintf+0x31a>
   1dfe6:	b3 94       	inc	r11
   1dfe8:	a3 fc       	sbrc	r10, 3
   1dfea:	10 c0       	rjmp	.+32     	; 0x1e00c <vfprintf+0x33e>
   1dfec:	a0 fe       	sbrs	r10, 0
   1dfee:	06 c0       	rjmp	.+12     	; 0x1dffc <vfprintf+0x32e>
   1dff0:	b2 14       	cp	r11, r2
   1dff2:	80 f4       	brcc	.+32     	; 0x1e014 <vfprintf+0x346>
   1dff4:	28 0c       	add	r2, r8
   1dff6:	92 2c       	mov	r9, r2
   1dff8:	9b 18       	sub	r9, r11
   1dffa:	0d c0       	rjmp	.+26     	; 0x1e016 <vfprintf+0x348>
   1dffc:	b2 14       	cp	r11, r2
   1dffe:	58 f4       	brcc	.+22     	; 0x1e016 <vfprintf+0x348>
   1e000:	b6 01       	movw	r22, r12
   1e002:	80 e2       	ldi	r24, 0x20	; 32
   1e004:	90 e0       	ldi	r25, 0x00	; 0
   1e006:	76 d0       	rcall	.+236    	; 0x1e0f4 <fputc>
   1e008:	b3 94       	inc	r11
   1e00a:	f8 cf       	rjmp	.-16     	; 0x1dffc <vfprintf+0x32e>
   1e00c:	b2 14       	cp	r11, r2
   1e00e:	18 f4       	brcc	.+6      	; 0x1e016 <vfprintf+0x348>
   1e010:	2b 18       	sub	r2, r11
   1e012:	02 c0       	rjmp	.+4      	; 0x1e018 <vfprintf+0x34a>
   1e014:	98 2c       	mov	r9, r8
   1e016:	21 2c       	mov	r2, r1
   1e018:	a4 fe       	sbrs	r10, 4
   1e01a:	0f c0       	rjmp	.+30     	; 0x1e03a <vfprintf+0x36c>
   1e01c:	b6 01       	movw	r22, r12
   1e01e:	80 e3       	ldi	r24, 0x30	; 48
   1e020:	90 e0       	ldi	r25, 0x00	; 0
   1e022:	68 d0       	rcall	.+208    	; 0x1e0f4 <fputc>
   1e024:	a2 fe       	sbrs	r10, 2
   1e026:	16 c0       	rjmp	.+44     	; 0x1e054 <vfprintf+0x386>
   1e028:	a1 fc       	sbrc	r10, 1
   1e02a:	03 c0       	rjmp	.+6      	; 0x1e032 <vfprintf+0x364>
   1e02c:	88 e7       	ldi	r24, 0x78	; 120
   1e02e:	90 e0       	ldi	r25, 0x00	; 0
   1e030:	02 c0       	rjmp	.+4      	; 0x1e036 <vfprintf+0x368>
   1e032:	88 e5       	ldi	r24, 0x58	; 88
   1e034:	90 e0       	ldi	r25, 0x00	; 0
   1e036:	b6 01       	movw	r22, r12
   1e038:	0c c0       	rjmp	.+24     	; 0x1e052 <vfprintf+0x384>
   1e03a:	8a 2d       	mov	r24, r10
   1e03c:	86 78       	andi	r24, 0x86	; 134
   1e03e:	51 f0       	breq	.+20     	; 0x1e054 <vfprintf+0x386>
   1e040:	a1 fe       	sbrs	r10, 1
   1e042:	02 c0       	rjmp	.+4      	; 0x1e048 <vfprintf+0x37a>
   1e044:	8b e2       	ldi	r24, 0x2B	; 43
   1e046:	01 c0       	rjmp	.+2      	; 0x1e04a <vfprintf+0x37c>
   1e048:	80 e2       	ldi	r24, 0x20	; 32
   1e04a:	a7 fc       	sbrc	r10, 7
   1e04c:	8d e2       	ldi	r24, 0x2D	; 45
   1e04e:	b6 01       	movw	r22, r12
   1e050:	90 e0       	ldi	r25, 0x00	; 0
   1e052:	50 d0       	rcall	.+160    	; 0x1e0f4 <fputc>
   1e054:	89 14       	cp	r8, r9
   1e056:	30 f4       	brcc	.+12     	; 0x1e064 <vfprintf+0x396>
   1e058:	b6 01       	movw	r22, r12
   1e05a:	80 e3       	ldi	r24, 0x30	; 48
   1e05c:	90 e0       	ldi	r25, 0x00	; 0
   1e05e:	4a d0       	rcall	.+148    	; 0x1e0f4 <fputc>
   1e060:	9a 94       	dec	r9
   1e062:	f8 cf       	rjmp	.-16     	; 0x1e054 <vfprintf+0x386>
   1e064:	8a 94       	dec	r8
   1e066:	f3 01       	movw	r30, r6
   1e068:	e8 0d       	add	r30, r8
   1e06a:	f1 1d       	adc	r31, r1
   1e06c:	80 81       	ld	r24, Z
   1e06e:	b6 01       	movw	r22, r12
   1e070:	90 e0       	ldi	r25, 0x00	; 0
   1e072:	40 d0       	rcall	.+128    	; 0x1e0f4 <fputc>
   1e074:	81 10       	cpse	r8, r1
   1e076:	f6 cf       	rjmp	.-20     	; 0x1e064 <vfprintf+0x396>
   1e078:	22 20       	and	r2, r2
   1e07a:	09 f4       	brne	.+2      	; 0x1e07e <vfprintf+0x3b0>
   1e07c:	4e ce       	rjmp	.-868    	; 0x1dd1a <vfprintf+0x4c>
   1e07e:	b6 01       	movw	r22, r12
   1e080:	80 e2       	ldi	r24, 0x20	; 32
   1e082:	90 e0       	ldi	r25, 0x00	; 0
   1e084:	37 d0       	rcall	.+110    	; 0x1e0f4 <fputc>
   1e086:	2a 94       	dec	r2
   1e088:	f7 cf       	rjmp	.-18     	; 0x1e078 <vfprintf+0x3aa>
   1e08a:	f6 01       	movw	r30, r12
   1e08c:	86 81       	ldd	r24, Z+6	; 0x06
   1e08e:	97 81       	ldd	r25, Z+7	; 0x07
   1e090:	02 c0       	rjmp	.+4      	; 0x1e096 <vfprintf+0x3c8>
   1e092:	8f ef       	ldi	r24, 0xFF	; 255
   1e094:	9f ef       	ldi	r25, 0xFF	; 255
   1e096:	2b 96       	adiw	r28, 0x0b	; 11
   1e098:	0f b6       	in	r0, 0x3f	; 63
   1e09a:	f8 94       	cli
   1e09c:	de bf       	out	0x3e, r29	; 62
   1e09e:	0f be       	out	0x3f, r0	; 63
   1e0a0:	cd bf       	out	0x3d, r28	; 61
   1e0a2:	df 91       	pop	r29
   1e0a4:	cf 91       	pop	r28
   1e0a6:	1f 91       	pop	r17
   1e0a8:	0f 91       	pop	r16
   1e0aa:	ff 90       	pop	r15
   1e0ac:	ef 90       	pop	r14
   1e0ae:	df 90       	pop	r13
   1e0b0:	cf 90       	pop	r12
   1e0b2:	bf 90       	pop	r11
   1e0b4:	af 90       	pop	r10
   1e0b6:	9f 90       	pop	r9
   1e0b8:	8f 90       	pop	r8
   1e0ba:	7f 90       	pop	r7
   1e0bc:	6f 90       	pop	r6
   1e0be:	5f 90       	pop	r5
   1e0c0:	4f 90       	pop	r4
   1e0c2:	3f 90       	pop	r3
   1e0c4:	2f 90       	pop	r2
   1e0c6:	08 95       	ret

0001e0c8 <strnlen_P>:
   1e0c8:	fc 01       	movw	r30, r24
   1e0ca:	05 90       	lpm	r0, Z+
   1e0cc:	61 50       	subi	r22, 0x01	; 1
   1e0ce:	70 40       	sbci	r23, 0x00	; 0
   1e0d0:	01 10       	cpse	r0, r1
   1e0d2:	d8 f7       	brcc	.-10     	; 0x1e0ca <strnlen_P+0x2>
   1e0d4:	80 95       	com	r24
   1e0d6:	90 95       	com	r25
   1e0d8:	8e 0f       	add	r24, r30
   1e0da:	9f 1f       	adc	r25, r31
   1e0dc:	08 95       	ret

0001e0de <strnlen>:
   1e0de:	fc 01       	movw	r30, r24
   1e0e0:	61 50       	subi	r22, 0x01	; 1
   1e0e2:	70 40       	sbci	r23, 0x00	; 0
   1e0e4:	01 90       	ld	r0, Z+
   1e0e6:	01 10       	cpse	r0, r1
   1e0e8:	d8 f7       	brcc	.-10     	; 0x1e0e0 <strnlen+0x2>
   1e0ea:	80 95       	com	r24
   1e0ec:	90 95       	com	r25
   1e0ee:	8e 0f       	add	r24, r30
   1e0f0:	9f 1f       	adc	r25, r31
   1e0f2:	08 95       	ret

0001e0f4 <fputc>:
   1e0f4:	0f 93       	push	r16
   1e0f6:	1f 93       	push	r17
   1e0f8:	cf 93       	push	r28
   1e0fa:	df 93       	push	r29
   1e0fc:	fb 01       	movw	r30, r22
   1e0fe:	23 81       	ldd	r18, Z+3	; 0x03
   1e100:	21 fd       	sbrc	r18, 1
   1e102:	03 c0       	rjmp	.+6      	; 0x1e10a <fputc+0x16>
   1e104:	8f ef       	ldi	r24, 0xFF	; 255
   1e106:	9f ef       	ldi	r25, 0xFF	; 255
   1e108:	2c c0       	rjmp	.+88     	; 0x1e162 <fputc+0x6e>
   1e10a:	22 ff       	sbrs	r18, 2
   1e10c:	16 c0       	rjmp	.+44     	; 0x1e13a <fputc+0x46>
   1e10e:	46 81       	ldd	r20, Z+6	; 0x06
   1e110:	57 81       	ldd	r21, Z+7	; 0x07
   1e112:	24 81       	ldd	r18, Z+4	; 0x04
   1e114:	35 81       	ldd	r19, Z+5	; 0x05
   1e116:	42 17       	cp	r20, r18
   1e118:	53 07       	cpc	r21, r19
   1e11a:	44 f4       	brge	.+16     	; 0x1e12c <fputc+0x38>
   1e11c:	a0 81       	ld	r26, Z
   1e11e:	b1 81       	ldd	r27, Z+1	; 0x01
   1e120:	9d 01       	movw	r18, r26
   1e122:	2f 5f       	subi	r18, 0xFF	; 255
   1e124:	3f 4f       	sbci	r19, 0xFF	; 255
   1e126:	31 83       	std	Z+1, r19	; 0x01
   1e128:	20 83       	st	Z, r18
   1e12a:	8c 93       	st	X, r24
   1e12c:	26 81       	ldd	r18, Z+6	; 0x06
   1e12e:	37 81       	ldd	r19, Z+7	; 0x07
   1e130:	2f 5f       	subi	r18, 0xFF	; 255
   1e132:	3f 4f       	sbci	r19, 0xFF	; 255
   1e134:	37 83       	std	Z+7, r19	; 0x07
   1e136:	26 83       	std	Z+6, r18	; 0x06
   1e138:	14 c0       	rjmp	.+40     	; 0x1e162 <fputc+0x6e>
   1e13a:	8b 01       	movw	r16, r22
   1e13c:	ec 01       	movw	r28, r24
   1e13e:	fb 01       	movw	r30, r22
   1e140:	00 84       	ldd	r0, Z+8	; 0x08
   1e142:	f1 85       	ldd	r31, Z+9	; 0x09
   1e144:	e0 2d       	mov	r30, r0
   1e146:	19 95       	eicall
   1e148:	89 2b       	or	r24, r25
   1e14a:	e1 f6       	brne	.-72     	; 0x1e104 <fputc+0x10>
   1e14c:	d8 01       	movw	r26, r16
   1e14e:	16 96       	adiw	r26, 0x06	; 6
   1e150:	8d 91       	ld	r24, X+
   1e152:	9c 91       	ld	r25, X
   1e154:	17 97       	sbiw	r26, 0x07	; 7
   1e156:	01 96       	adiw	r24, 0x01	; 1
   1e158:	17 96       	adiw	r26, 0x07	; 7
   1e15a:	9c 93       	st	X, r25
   1e15c:	8e 93       	st	-X, r24
   1e15e:	16 97       	sbiw	r26, 0x06	; 6
   1e160:	ce 01       	movw	r24, r28
   1e162:	df 91       	pop	r29
   1e164:	cf 91       	pop	r28
   1e166:	1f 91       	pop	r17
   1e168:	0f 91       	pop	r16
   1e16a:	08 95       	ret

0001e16c <__ultoa_invert>:
   1e16c:	fa 01       	movw	r30, r20
   1e16e:	aa 27       	eor	r26, r26
   1e170:	28 30       	cpi	r18, 0x08	; 8
   1e172:	51 f1       	breq	.+84     	; 0x1e1c8 <__ultoa_invert+0x5c>
   1e174:	20 31       	cpi	r18, 0x10	; 16
   1e176:	81 f1       	breq	.+96     	; 0x1e1d8 <__ultoa_invert+0x6c>
   1e178:	e8 94       	clt
   1e17a:	6f 93       	push	r22
   1e17c:	6e 7f       	andi	r22, 0xFE	; 254
   1e17e:	6e 5f       	subi	r22, 0xFE	; 254
   1e180:	7f 4f       	sbci	r23, 0xFF	; 255
   1e182:	8f 4f       	sbci	r24, 0xFF	; 255
   1e184:	9f 4f       	sbci	r25, 0xFF	; 255
   1e186:	af 4f       	sbci	r26, 0xFF	; 255
   1e188:	b1 e0       	ldi	r27, 0x01	; 1
   1e18a:	3e d0       	rcall	.+124    	; 0x1e208 <__ultoa_invert+0x9c>
   1e18c:	b4 e0       	ldi	r27, 0x04	; 4
   1e18e:	3c d0       	rcall	.+120    	; 0x1e208 <__ultoa_invert+0x9c>
   1e190:	67 0f       	add	r22, r23
   1e192:	78 1f       	adc	r23, r24
   1e194:	89 1f       	adc	r24, r25
   1e196:	9a 1f       	adc	r25, r26
   1e198:	a1 1d       	adc	r26, r1
   1e19a:	68 0f       	add	r22, r24
   1e19c:	79 1f       	adc	r23, r25
   1e19e:	8a 1f       	adc	r24, r26
   1e1a0:	91 1d       	adc	r25, r1
   1e1a2:	a1 1d       	adc	r26, r1
   1e1a4:	6a 0f       	add	r22, r26
   1e1a6:	71 1d       	adc	r23, r1
   1e1a8:	81 1d       	adc	r24, r1
   1e1aa:	91 1d       	adc	r25, r1
   1e1ac:	a1 1d       	adc	r26, r1
   1e1ae:	20 d0       	rcall	.+64     	; 0x1e1f0 <__ultoa_invert+0x84>
   1e1b0:	09 f4       	brne	.+2      	; 0x1e1b4 <__ultoa_invert+0x48>
   1e1b2:	68 94       	set
   1e1b4:	3f 91       	pop	r19
   1e1b6:	2a e0       	ldi	r18, 0x0A	; 10
   1e1b8:	26 9f       	mul	r18, r22
   1e1ba:	11 24       	eor	r1, r1
   1e1bc:	30 19       	sub	r19, r0
   1e1be:	30 5d       	subi	r19, 0xD0	; 208
   1e1c0:	31 93       	st	Z+, r19
   1e1c2:	de f6       	brtc	.-74     	; 0x1e17a <__ultoa_invert+0xe>
   1e1c4:	cf 01       	movw	r24, r30
   1e1c6:	08 95       	ret
   1e1c8:	46 2f       	mov	r20, r22
   1e1ca:	47 70       	andi	r20, 0x07	; 7
   1e1cc:	40 5d       	subi	r20, 0xD0	; 208
   1e1ce:	41 93       	st	Z+, r20
   1e1d0:	b3 e0       	ldi	r27, 0x03	; 3
   1e1d2:	0f d0       	rcall	.+30     	; 0x1e1f2 <__ultoa_invert+0x86>
   1e1d4:	c9 f7       	brne	.-14     	; 0x1e1c8 <__ultoa_invert+0x5c>
   1e1d6:	f6 cf       	rjmp	.-20     	; 0x1e1c4 <__ultoa_invert+0x58>
   1e1d8:	46 2f       	mov	r20, r22
   1e1da:	4f 70       	andi	r20, 0x0F	; 15
   1e1dc:	40 5d       	subi	r20, 0xD0	; 208
   1e1de:	4a 33       	cpi	r20, 0x3A	; 58
   1e1e0:	18 f0       	brcs	.+6      	; 0x1e1e8 <__ultoa_invert+0x7c>
   1e1e2:	49 5d       	subi	r20, 0xD9	; 217
   1e1e4:	31 fd       	sbrc	r19, 1
   1e1e6:	40 52       	subi	r20, 0x20	; 32
   1e1e8:	41 93       	st	Z+, r20
   1e1ea:	02 d0       	rcall	.+4      	; 0x1e1f0 <__ultoa_invert+0x84>
   1e1ec:	a9 f7       	brne	.-22     	; 0x1e1d8 <__ultoa_invert+0x6c>
   1e1ee:	ea cf       	rjmp	.-44     	; 0x1e1c4 <__ultoa_invert+0x58>
   1e1f0:	b4 e0       	ldi	r27, 0x04	; 4
   1e1f2:	a6 95       	lsr	r26
   1e1f4:	97 95       	ror	r25
   1e1f6:	87 95       	ror	r24
   1e1f8:	77 95       	ror	r23
   1e1fa:	67 95       	ror	r22
   1e1fc:	ba 95       	dec	r27
   1e1fe:	c9 f7       	brne	.-14     	; 0x1e1f2 <__ultoa_invert+0x86>
   1e200:	00 97       	sbiw	r24, 0x00	; 0
   1e202:	61 05       	cpc	r22, r1
   1e204:	71 05       	cpc	r23, r1
   1e206:	08 95       	ret
   1e208:	9b 01       	movw	r18, r22
   1e20a:	ac 01       	movw	r20, r24
   1e20c:	0a 2e       	mov	r0, r26
   1e20e:	06 94       	lsr	r0
   1e210:	57 95       	ror	r21
   1e212:	47 95       	ror	r20
   1e214:	37 95       	ror	r19
   1e216:	27 95       	ror	r18
   1e218:	ba 95       	dec	r27
   1e21a:	c9 f7       	brne	.-14     	; 0x1e20e <__ultoa_invert+0xa2>
   1e21c:	62 0f       	add	r22, r18
   1e21e:	73 1f       	adc	r23, r19
   1e220:	84 1f       	adc	r24, r20
   1e222:	95 1f       	adc	r25, r21
   1e224:	a0 1d       	adc	r26, r0
   1e226:	08 95       	ret

0001e228 <eeprom_read_byte>:
   1e228:	f9 99       	sbic	0x1f, 1	; 31
   1e22a:	fe cf       	rjmp	.-4      	; 0x1e228 <eeprom_read_byte>
   1e22c:	92 bd       	out	0x22, r25	; 34
   1e22e:	81 bd       	out	0x21, r24	; 33
   1e230:	f8 9a       	sbi	0x1f, 0	; 31
   1e232:	99 27       	eor	r25, r25
   1e234:	80 b5       	in	r24, 0x20	; 32
   1e236:	08 95       	ret

0001e238 <eeprom_write_byte>:
   1e238:	26 2f       	mov	r18, r22

0001e23a <eeprom_write_r18>:
   1e23a:	f9 99       	sbic	0x1f, 1	; 31
   1e23c:	fe cf       	rjmp	.-4      	; 0x1e23a <eeprom_write_r18>
   1e23e:	1f ba       	out	0x1f, r1	; 31
   1e240:	92 bd       	out	0x22, r25	; 34
   1e242:	81 bd       	out	0x21, r24	; 33
   1e244:	20 bd       	out	0x20, r18	; 32
   1e246:	0f b6       	in	r0, 0x3f	; 63
   1e248:	f8 94       	cli
   1e24a:	fa 9a       	sbi	0x1f, 2	; 31
   1e24c:	f9 9a       	sbi	0x1f, 1	; 31
   1e24e:	0f be       	out	0x3f, r0	; 63
   1e250:	01 96       	adiw	r24, 0x01	; 1
   1e252:	08 95       	ret

0001e254 <__mulshisi3>:
   1e254:	b7 ff       	sbrs	r27, 7
   1e256:	e1 ca       	rjmp	.-2622   	; 0x1d81a <__muluhisi3>

0001e258 <__mulohisi3>:
   1e258:	e0 da       	rcall	.-2624   	; 0x1d81a <__muluhisi3>
   1e25a:	82 1b       	sub	r24, r18
   1e25c:	93 0b       	sbc	r25, r19
   1e25e:	08 95       	ret

0001e260 <_exit>:
   1e260:	f8 94       	cli

0001e262 <__stop_program>:
   1e262:	ff cf       	rjmp	.-2      	; 0x1e262 <__stop_program>
